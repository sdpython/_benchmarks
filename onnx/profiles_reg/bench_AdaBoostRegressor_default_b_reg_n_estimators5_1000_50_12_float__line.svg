<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1782" onload="init(evt)" viewBox="0 0 1200 1782" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1782" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1765.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1765.00"> </text><g id="frames"><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.11%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(236,70,54)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.11%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(236,48,44)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2199) (1 samples, 0.11%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(248,0,44)"/><text x="13.00" y="926.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.11%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(220,80,14)"/><text x="13.00" y="942.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.22%)</title><rect x="10" y="852" width="2" height="15" fill="rgb(214,216,28)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.22%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(245,135,42)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2783) (1 samples, 0.11%)</title><rect x="11" y="884" width="1" height="15" fill="rgb(206,178,42)"/><text x="14.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2766) (1 samples, 0.11%)</title><rect x="11" y="900" width="1" height="15" fill="rgb(242,99,40)"/><text x="14.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py:1413) (1 samples, 0.11%)</title><rect x="11" y="916" width="1" height="15" fill="rgb(208,17,20)"/><text x="14.00" y="926.50"></text></g><g><title>_get_metadata_path (pkg_resources/__init__.py:1407) (1 samples, 0.11%)</title><rect x="11" y="932" width="1" height="15" fill="rgb(213,209,36)"/><text x="14.00" y="942.50"></text></g><g><title>_fn (pkg_resources/__init__.py:1489) (1 samples, 0.11%)</title><rect x="11" y="948" width="1" height="15" fill="rgb(245,121,24)"/><text x="14.00" y="958.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 0.34%)</title><rect x="10" y="820" width="3" height="15" fill="rgb(251,207,37)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 0.34%)</title><rect x="10" y="836" width="3" height="15" fill="rgb(235,50,53)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.11%)</title><rect x="12" y="852" width="1" height="15" fill="rgb(217,107,27)"/><text x="15.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.11%)</title><rect x="12" y="868" width="1" height="15" fill="rgb(220,93,45)"/><text x="15.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.11%)</title><rect x="12" y="884" width="1" height="15" fill="rgb(241,51,13)"/><text x="15.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.11%)</title><rect x="12" y="900" width="1" height="15" fill="rgb(234,34,7)"/><text x="15.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.11%)</title><rect x="12" y="916" width="1" height="15" fill="rgb(206,6,53)"/><text x="15.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.11%)</title><rect x="12" y="932" width="1" height="15" fill="rgb(221,215,13)"/><text x="15.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.11%)</title><rect x="12" y="948" width="1" height="15" fill="rgb(212,187,39)"/><text x="15.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.11%)</title><rect x="12" y="964" width="1" height="15" fill="rgb(219,90,40)"/><text x="15.00" y="974.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.11%)</title><rect x="12" y="980" width="1" height="15" fill="rgb(216,171,8)"/><text x="15.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:2) (4 samples, 0.45%)</title><rect x="10" y="148" width="5" height="15" fill="rgb(249,43,16)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="10" y="164" width="5" height="15" fill="rgb(218,58,51)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.45%)</title><rect x="10" y="180" width="5" height="15" fill="rgb(239,159,17)"/><text x="13.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="10" y="196" width="5" height="15" fill="rgb(226,61,15)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="10" y="212" width="5" height="15" fill="rgb(254,93,27)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="10" y="228" width="5" height="15" fill="rgb(211,73,49)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="10" y="244" width="5" height="15" fill="rgb(216,202,25)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="10" y="260" width="5" height="15" fill="rgb(212,218,20)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="10" y="276" width="5" height="15" fill="rgb(221,199,19)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 0.45%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(245,30,13)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(216,176,32)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(237,139,54)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(214,192,27)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(223,208,30)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(246,165,33)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 0.45%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(248,193,36)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(215,162,37)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(245,136,0)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(252,67,18)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(230,139,36)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(254,108,39)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 0.45%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(235,62,19)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(217,10,6)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(210,59,41)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(233,46,34)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="10" y="548" width="5" height="15" fill="rgb(221,134,36)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="10" y="564" width="5" height="15" fill="rgb(252,24,47)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 0.45%)</title><rect x="10" y="580" width="5" height="15" fill="rgb(239,8,8)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="10" y="596" width="5" height="15" fill="rgb(252,176,49)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.45%)</title><rect x="10" y="612" width="5" height="15" fill="rgb(208,16,21)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(231,117,39)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(226,184,39)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(230,133,52)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(209,42,35)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(244,225,47)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(250,95,53)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 0.45%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(222,60,53)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(219,151,48)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(236,60,48)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(222,56,35)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(248,136,17)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(244,156,20)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:36) (1 samples, 0.11%)</title><rect x="13" y="820" width="2" height="15" fill="rgb(226,149,53)"/><text x="16.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="13" y="836" width="2" height="15" fill="rgb(250,71,14)"/><text x="16.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="13" y="852" width="2" height="15" fill="rgb(226,72,5)"/><text x="16.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="13" y="868" width="2" height="15" fill="rgb(237,26,14)"/><text x="16.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="13" y="884" width="2" height="15" fill="rgb(250,189,32)"/><text x="16.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="13" y="900" width="2" height="15" fill="rgb(231,119,32)"/><text x="16.00" y="910.50"></text></g><g><title>&lt;module&gt; (email/parser.py:12) (1 samples, 0.11%)</title><rect x="13" y="916" width="2" height="15" fill="rgb(243,77,42)"/><text x="16.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="13" y="932" width="2" height="15" fill="rgb(229,21,2)"/><text x="16.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="13" y="948" width="2" height="15" fill="rgb(214,63,14)"/><text x="16.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="13" y="964" width="2" height="15" fill="rgb(248,201,14)"/><text x="16.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="13" y="980" width="2" height="15" fill="rgb(209,190,14)"/><text x="16.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="13" y="996" width="2" height="15" fill="rgb(226,93,46)"/><text x="16.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py:27) (1 samples, 0.11%)</title><rect x="13" y="1012" width="2" height="15" fill="rgb(244,28,39)"/><text x="16.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="13" y="1028" width="2" height="15" fill="rgb(224,176,19)"/><text x="16.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="13" y="1044" width="2" height="15" fill="rgb(253,227,5)"/><text x="16.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="13" y="1060" width="2" height="15" fill="rgb(238,22,19)"/><text x="16.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="13" y="1076" width="2" height="15" fill="rgb(207,66,52)"/><text x="16.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="13" y="1092" width="2" height="15" fill="rgb(231,87,11)"/><text x="16.00" y="1102.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py:272) (1 samples, 0.11%)</title><rect x="13" y="1108" width="2" height="15" fill="rgb(216,138,25)"/><text x="16.00" y="1118.50"></text></g><g><title>_extend_docstrings (email/_policybase.py:105) (1 samples, 0.11%)</title><rect x="13" y="1124" width="2" height="15" fill="rgb(253,134,40)"/><text x="16.00" y="1134.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.11%)</title><rect x="15" y="484" width="1" height="15" fill="rgb(230,180,37)"/><text x="18.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="15" y="500" width="1" height="15" fill="rgb(233,85,41)"/><text x="18.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="15" y="516" width="1" height="15" fill="rgb(237,126,12)"/><text x="18.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="15" y="532" width="1" height="15" fill="rgb(231,81,46)"/><text x="18.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="15" y="548" width="1" height="15" fill="rgb(215,123,7)"/><text x="18.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="15" y="564" width="1" height="15" fill="rgb(253,122,52)"/><text x="18.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="15" y="580" width="1" height="15" fill="rgb(230,226,18)"/><text x="18.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="15" y="596" width="1" height="15" fill="rgb(219,131,32)"/><text x="18.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.11%)</title><rect x="15" y="612" width="1" height="15" fill="rgb(248,38,5)"/><text x="18.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="15" y="628" width="1" height="15" fill="rgb(245,177,54)"/><text x="18.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="15" y="644" width="1" height="15" fill="rgb(231,115,27)"/><text x="18.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="15" y="660" width="1" height="15" fill="rgb(251,26,40)"/><text x="18.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="15" y="676" width="1" height="15" fill="rgb(254,95,40)"/><text x="18.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="15" y="692" width="1" height="15" fill="rgb(210,114,6)"/><text x="18.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.11%)</title><rect x="15" y="708" width="1" height="15" fill="rgb(214,27,23)"/><text x="18.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="15" y="724" width="1" height="15" fill="rgb(230,30,28)"/><text x="18.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="15" y="740" width="1" height="15" fill="rgb(221,1,0)"/><text x="18.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="15" y="756" width="1" height="15" fill="rgb(221,136,5)"/><text x="18.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="15" y="772" width="1" height="15" fill="rgb(232,113,20)"/><text x="18.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="15" y="788" width="1" height="15" fill="rgb(242,2,35)"/><text x="18.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (1 samples, 0.11%)</title><rect x="15" y="804" width="1" height="15" fill="rgb(235,182,2)"/><text x="18.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="15" y="820" width="1" height="15" fill="rgb(209,139,10)"/><text x="18.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="15" y="836" width="1" height="15" fill="rgb(238,40,17)"/><text x="18.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="15" y="852" width="1" height="15" fill="rgb(227,140,20)"/><text x="18.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="15" y="868" width="1" height="15" fill="rgb(248,22,52)"/><text x="18.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="15" y="884" width="1" height="15" fill="rgb(232,204,15)"/><text x="18.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (1 samples, 0.11%)</title><rect x="15" y="900" width="1" height="15" fill="rgb(245,141,21)"/><text x="18.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="15" y="916" width="1" height="15" fill="rgb(207,67,19)"/><text x="18.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="15" y="932" width="1" height="15" fill="rgb(223,86,50)"/><text x="18.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="15" y="948" width="1" height="15" fill="rgb(210,150,30)"/><text x="18.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="15" y="964" width="1" height="15" fill="rgb(227,172,16)"/><text x="18.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="15" y="980" width="1" height="15" fill="rgb(216,151,25)"/><text x="18.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (1 samples, 0.11%)</title><rect x="15" y="996" width="1" height="15" fill="rgb(228,45,17)"/><text x="18.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="15" y="1012" width="1" height="15" fill="rgb(218,6,50)"/><text x="18.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="15" y="1028" width="1" height="15" fill="rgb(227,72,51)"/><text x="18.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="15" y="1044" width="1" height="15" fill="rgb(214,109,27)"/><text x="18.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="15" y="1060" width="1" height="15" fill="rgb(226,114,43)"/><text x="18.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="15" y="1076" width="1" height="15" fill="rgb(231,90,5)"/><text x="18.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="15" y="1092" width="1" height="15" fill="rgb(245,4,6)"/><text x="18.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="15" y="1108" width="1" height="15" fill="rgb(229,154,8)"/><text x="18.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="15" y="1124" width="1" height="15" fill="rgb(247,212,5)"/><text x="18.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:13) (1 samples, 0.11%)</title><rect x="15" y="1140" width="1" height="15" fill="rgb(207,27,33)"/><text x="18.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="15" y="1156" width="1" height="15" fill="rgb(210,155,13)"/><text x="18.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="15" y="1172" width="1" height="15" fill="rgb(223,31,7)"/><text x="18.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="15" y="1188" width="1" height="15" fill="rgb(225,182,1)"/><text x="18.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="15" y="1204" width="1" height="15" fill="rgb(227,222,36)"/><text x="18.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="15" y="1220" width="1" height="15" fill="rgb(214,176,54)"/><text x="18.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py:11) (1 samples, 0.11%)</title><rect x="15" y="1236" width="1" height="15" fill="rgb(236,163,13)"/><text x="18.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="15" y="1252" width="1" height="15" fill="rgb(247,103,0)"/><text x="18.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="15" y="1268" width="1" height="15" fill="rgb(239,163,44)"/><text x="18.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="15" y="1284" width="1" height="15" fill="rgb(242,228,4)"/><text x="18.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="15" y="1300" width="1" height="15" fill="rgb(213,121,24)"/><text x="18.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="15" y="1316" width="1" height="15" fill="rgb(246,159,22)"/><text x="18.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py:84) (1 samples, 0.11%)</title><rect x="15" y="1332" width="1" height="15" fill="rgb(208,92,48)"/><text x="18.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="15" y="1348" width="1" height="15" fill="rgb(249,12,25)"/><text x="18.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="15" y="1364" width="1" height="15" fill="rgb(209,0,41)"/><text x="18.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="15" y="1380" width="1" height="15" fill="rgb(233,186,45)"/><text x="18.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="15" y="1396" width="1" height="15" fill="rgb(214,203,45)"/><text x="18.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="15" y="1412" width="1" height="15" fill="rgb(206,88,13)"/><text x="18.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py:10) (1 samples, 0.11%)</title><rect x="15" y="1428" width="1" height="15" fill="rgb(252,91,13)"/><text x="18.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="15" y="1444" width="1" height="15" fill="rgb(207,162,31)"/><text x="18.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="15" y="1460" width="1" height="15" fill="rgb(230,14,52)"/><text x="18.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="15" y="1476" width="1" height="15" fill="rgb(244,105,4)"/><text x="18.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="15" y="1492" width="1" height="15" fill="rgb(216,68,50)"/><text x="18.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="15" y="1508" width="1" height="15" fill="rgb(205,182,3)"/><text x="18.00" y="1518.50"></text></g><g><title>&lt;module&gt; (psutil/__init__.py:96) (1 samples, 0.11%)</title><rect x="15" y="1524" width="1" height="15" fill="rgb(221,130,2)"/><text x="18.00" y="1534.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="15" y="1540" width="1" height="15" fill="rgb(210,70,32)"/><text x="18.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="15" y="1556" width="1" height="15" fill="rgb(247,192,6)"/><text x="18.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="15" y="1572" width="1" height="15" fill="rgb(248,221,29)"/><text x="18.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="15" y="1588" width="1" height="15" fill="rgb(246,129,14)"/><text x="18.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="15" y="1604" width="1" height="15" fill="rgb(250,217,14)"/><text x="18.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="15" y="1620" width="1" height="15" fill="rgb(208,162,42)"/><text x="18.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="15" y="1636" width="1" height="15" fill="rgb(206,46,8)"/><text x="18.00" y="1646.50"></text></g><g><title>&lt;module&gt; (psutil/_pslinux.py:1531) (1 samples, 0.11%)</title><rect x="15" y="1652" width="1" height="15" fill="rgb(222,7,27)"/><text x="18.00" y="1662.50"></text></g><g><title>Process (psutil/_pslinux.py:1765) (1 samples, 0.11%)</title><rect x="15" y="1668" width="1" height="15" fill="rgb(247,82,54)"/><text x="18.00" y="1678.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.11%)</title><rect x="15" y="1684" width="1" height="15" fill="rgb(212,82,32)"/><text x="18.00" y="1694.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.11%)</title><rect x="15" y="1700" width="1" height="15" fill="rgb(229,6,30)"/><text x="18.00" y="1710.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.11%)</title><rect x="15" y="1716" width="1" height="15" fill="rgb(232,179,20)"/><text x="18.00" y="1726.50"></text></g><g><title>parse (sre_parse.py:929) (1 samples, 0.11%)</title><rect x="15" y="1732" width="1" height="15" fill="rgb(205,192,6)"/><text x="18.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.22%)</title><rect x="15" y="180" width="2" height="15" fill="rgb(241,80,20)"/><text x="18.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="15" y="196" width="2" height="15" fill="rgb(245,210,1)"/><text x="18.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="15" y="212" width="2" height="15" fill="rgb(215,92,52)"/><text x="18.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="15" y="228" width="2" height="15" fill="rgb(234,173,40)"/><text x="18.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="15" y="244" width="2" height="15" fill="rgb(225,27,51)"/><text x="18.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="15" y="260" width="2" height="15" fill="rgb(237,102,1)"/><text x="18.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="15" y="276" width="2" height="15" fill="rgb(210,95,34)"/><text x="18.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.22%)</title><rect x="15" y="292" width="2" height="15" fill="rgb(254,63,23)"/><text x="18.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="15" y="308" width="2" height="15" fill="rgb(209,57,8)"/><text x="18.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="15" y="324" width="2" height="15" fill="rgb(245,131,51)"/><text x="18.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="15" y="340" width="2" height="15" fill="rgb(211,116,36)"/><text x="18.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="15" y="356" width="2" height="15" fill="rgb(244,172,31)"/><text x="18.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="15" y="372" width="2" height="15" fill="rgb(254,156,31)"/><text x="18.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.22%)</title><rect x="15" y="388" width="2" height="15" fill="rgb(250,68,12)"/><text x="18.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="15" y="404" width="2" height="15" fill="rgb(234,66,39)"/><text x="18.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="15" y="420" width="2" height="15" fill="rgb(232,105,10)"/><text x="18.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="15" y="436" width="2" height="15" fill="rgb(233,101,36)"/><text x="18.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="15" y="452" width="2" height="15" fill="rgb(208,214,30)"/><text x="18.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="15" y="468" width="2" height="15" fill="rgb(211,92,22)"/><text x="18.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.11%)</title><rect x="16" y="484" width="1" height="15" fill="rgb(251,229,24)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="16" y="500" width="1" height="15" fill="rgb(250,105,29)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="16" y="516" width="1" height="15" fill="rgb(207,62,52)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="16" y="532" width="1" height="15" fill="rgb(248,102,8)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="16" y="548" width="1" height="15" fill="rgb(239,221,42)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="16" y="564" width="1" height="15" fill="rgb(216,33,0)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.11%)</title><rect x="16" y="580" width="1" height="15" fill="rgb(216,139,52)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="16" y="596" width="1" height="15" fill="rgb(206,146,38)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="16" y="612" width="1" height="15" fill="rgb(216,19,1)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="16" y="628" width="1" height="15" fill="rgb(222,107,39)"/><text x="19.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="16" y="644" width="1" height="15" fill="rgb(237,24,54)"/><text x="19.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="16" y="660" width="1" height="15" fill="rgb(222,176,53)"/><text x="19.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.11%)</title><rect x="16" y="676" width="1" height="15" fill="rgb(229,216,32)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="16" y="692" width="1" height="15" fill="rgb(235,38,2)"/><text x="19.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="16" y="708" width="1" height="15" fill="rgb(218,120,48)"/><text x="19.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="16" y="724" width="1" height="15" fill="rgb(224,153,6)"/><text x="19.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="16" y="740" width="1" height="15" fill="rgb(220,71,10)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="16" y="756" width="1" height="15" fill="rgb(217,172,45)"/><text x="19.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.11%)</title><rect x="16" y="772" width="1" height="15" fill="rgb(221,225,36)"/><text x="19.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="16" y="788" width="1" height="15" fill="rgb(207,28,51)"/><text x="19.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="16" y="804" width="1" height="15" fill="rgb(240,150,1)"/><text x="19.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="16" y="820" width="1" height="15" fill="rgb(236,100,46)"/><text x="19.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="16" y="836" width="1" height="15" fill="rgb(220,131,9)"/><text x="19.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="16" y="852" width="1" height="15" fill="rgb(252,162,0)"/><text x="19.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="16" y="868" width="1" height="15" fill="rgb(218,217,33)"/><text x="19.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="16" y="884" width="1" height="15" fill="rgb(208,69,38)"/><text x="19.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.11%)</title><rect x="16" y="900" width="1" height="15" fill="rgb(233,39,36)"/><text x="19.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="16" y="916" width="1" height="15" fill="rgb(246,172,47)"/><text x="19.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="16" y="932" width="1" height="15" fill="rgb(250,195,52)"/><text x="19.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="16" y="948" width="1" height="15" fill="rgb(253,175,20)"/><text x="19.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="16" y="964" width="1" height="15" fill="rgb(237,135,42)"/><text x="19.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="16" y="980" width="1" height="15" fill="rgb(233,99,43)"/><text x="19.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="16" y="996" width="1" height="15" fill="rgb(242,106,12)"/><text x="19.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="16" y="1012" width="1" height="15" fill="rgb(254,132,10)"/><text x="19.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:4484) (1 samples, 0.11%)</title><rect x="16" y="1028" width="1" height="15" fill="rgb(211,222,51)"/><text x="19.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1556) (1 samples, 0.11%)</title><rect x="16" y="1044" width="1" height="15" fill="rgb(224,48,12)"/><text x="19.00" y="1054.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:591) (1 samples, 0.11%)</title><rect x="16" y="1060" width="1" height="15" fill="rgb(239,15,8)"/><text x="19.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py:291) (1 samples, 0.11%)</title><rect x="16" y="1076" width="1" height="15" fill="rgb(237,142,49)"/><text x="19.00" y="1086.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.11%)</title><rect x="16" y="1092" width="1" height="15" fill="rgb(228,47,44)"/><text x="19.00" y="1102.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.11%)</title><rect x="16" y="1108" width="1" height="15" fill="rgb(218,228,33)"/><text x="19.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py:2217) (1 samples, 0.11%)</title><rect x="16" y="1124" width="1" height="15" fill="rgb(236,80,46)"/><text x="19.00" y="1134.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.11%)</title><rect x="16" y="1140" width="1" height="15" fill="rgb(218,88,48)"/><text x="19.00" y="1150.50"></text></g><g><title>_signature_from_function (inspect.py:2171) (1 samples, 0.11%)</title><rect x="16" y="1156" width="1" height="15" fill="rgb(243,22,40)"/><text x="19.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.11%)</title><rect x="17" y="276" width="2" height="15" fill="rgb(227,131,36)"/><text x="20.00" y="286.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.11%)</title><rect x="17" y="292" width="2" height="15" fill="rgb(227,69,20)"/><text x="20.00" y="302.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.11%)</title><rect x="17" y="308" width="2" height="15" fill="rgb(218,6,39)"/><text x="20.00" y="318.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.11%)</title><rect x="17" y="324" width="2" height="15" fill="rgb(246,161,45)"/><text x="20.00" y="334.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.11%)</title><rect x="17" y="340" width="2" height="15" fill="rgb(251,116,8)"/><text x="20.00" y="350.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.11%)</title><rect x="17" y="356" width="2" height="15" fill="rgb(208,27,9)"/><text x="20.00" y="366.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.11%)</title><rect x="17" y="372" width="2" height="15" fill="rgb(208,163,33)"/><text x="20.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:15) (2 samples, 0.22%)</title><rect x="17" y="244" width="3" height="15" fill="rgb(227,157,34)"/><text x="20.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="17" y="260" width="3" height="15" fill="rgb(224,146,34)"/><text x="20.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="19" y="276" width="1" height="15" fill="rgb(206,75,26)"/><text x="22.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="19" y="292" width="1" height="15" fill="rgb(223,151,14)"/><text x="22.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.11%)</title><rect x="19" y="308" width="1" height="15" fill="rgb(233,142,33)"/><text x="22.00" y="318.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.11%)</title><rect x="19" y="324" width="1" height="15" fill="rgb(210,101,48)"/><text x="22.00" y="334.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.11%)</title><rect x="19" y="340" width="1" height="15" fill="rgb(210,134,24)"/><text x="22.00" y="350.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="19" y="356" width="1" height="15" fill="rgb(241,154,24)"/><text x="22.00" y="366.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:4) (5 samples, 0.56%)</title><rect x="15" y="148" width="6" height="15" fill="rgb(205,139,53)"/><text x="18.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.56%)</title><rect x="15" y="164" width="6" height="15" fill="rgb(232,76,0)"/><text x="18.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.34%)</title><rect x="17" y="180" width="4" height="15" fill="rgb(231,205,2)"/><text x="20.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.34%)</title><rect x="17" y="196" width="4" height="15" fill="rgb(232,220,27)"/><text x="20.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.34%)</title><rect x="17" y="212" width="4" height="15" fill="rgb(247,94,12)"/><text x="20.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.34%)</title><rect x="17" y="228" width="4" height="15" fill="rgb(230,99,23)"/><text x="20.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:7) (1 samples, 0.11%)</title><rect x="20" y="244" width="1" height="15" fill="rgb(206,108,17)"/><text x="23.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="20" y="260" width="1" height="15" fill="rgb(223,117,18)"/><text x="23.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="20" y="276" width="1" height="15" fill="rgb(245,25,38)"/><text x="23.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="20" y="292" width="1" height="15" fill="rgb(236,73,28)"/><text x="23.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="20" y="308" width="1" height="15" fill="rgb(226,210,9)"/><text x="23.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="20" y="324" width="1" height="15" fill="rgb(230,63,51)"/><text x="23.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py:56) (1 samples, 0.11%)</title><rect x="20" y="340" width="1" height="15" fill="rgb(221,116,29)"/><text x="23.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="20" y="356" width="1" height="15" fill="rgb(213,207,42)"/><text x="23.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="20" y="372" width="1" height="15" fill="rgb(244,209,0)"/><text x="23.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="20" y="388" width="1" height="15" fill="rgb(221,121,53)"/><text x="23.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="20" y="404" width="1" height="15" fill="rgb(235,99,4)"/><text x="23.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="20" y="420" width="1" height="15" fill="rgb(249,158,27)"/><text x="23.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py:6) (1 samples, 0.11%)</title><rect x="20" y="436" width="1" height="15" fill="rgb(218,173,29)"/><text x="23.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="20" y="452" width="1" height="15" fill="rgb(232,206,26)"/><text x="23.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="20" y="468" width="1" height="15" fill="rgb(234,182,4)"/><text x="23.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="20" y="484" width="1" height="15" fill="rgb(225,170,22)"/><text x="23.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="20" y="500" width="1" height="15" fill="rgb(254,84,9)"/><text x="23.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="20" y="516" width="1" height="15" fill="rgb(250,71,34)"/><text x="23.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py:40) (1 samples, 0.11%)</title><rect x="20" y="532" width="1" height="15" fill="rgb(233,73,29)"/><text x="23.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="20" y="548" width="1" height="15" fill="rgb(223,145,38)"/><text x="23.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="20" y="564" width="1" height="15" fill="rgb(245,126,35)"/><text x="23.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="20" y="580" width="1" height="15" fill="rgb(205,87,12)"/><text x="23.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="20" y="596" width="1" height="15" fill="rgb(219,172,20)"/><text x="23.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="20" y="612" width="1" height="15" fill="rgb(235,92,23)"/><text x="23.00" y="622.50"></text></g><g><title>0x7f3945bb8373 (?) (1 samples, 0.11%)</title><rect x="20" y="628" width="1" height="15" fill="rgb(211,54,7)"/><text x="23.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="20" y="644" width="1" height="15" fill="rgb(222,67,19)"/><text x="23.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="20" y="660" width="1" height="15" fill="rgb(209,121,2)"/><text x="23.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="20" y="676" width="1" height="15" fill="rgb(220,179,34)"/><text x="23.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="20" y="692" width="1" height="15" fill="rgb(235,133,49)"/><text x="23.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="20" y="708" width="1" height="15" fill="rgb(234,48,52)"/><text x="23.00" y="718.50"></text></g><g><title>0x7f394597beea (?) (1 samples, 0.11%)</title><rect x="20" y="724" width="1" height="15" fill="rgb(250,220,15)"/><text x="23.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="20" y="740" width="1" height="15" fill="rgb(241,167,27)"/><text x="23.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="20" y="756" width="1" height="15" fill="rgb(243,16,20)"/><text x="23.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="20" y="772" width="1" height="15" fill="rgb(215,143,21)"/><text x="23.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="20" y="788" width="1" height="15" fill="rgb(224,110,43)"/><text x="23.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="20" y="804" width="1" height="15" fill="rgb(219,126,12)"/><text x="23.00" y="814.50"></text></g><g><title>0x7f3945714887 (?) (1 samples, 0.11%)</title><rect x="20" y="820" width="1" height="15" fill="rgb(220,197,28)"/><text x="23.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="20" y="836" width="1" height="15" fill="rgb(236,96,20)"/><text x="23.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="20" y="852" width="1" height="15" fill="rgb(220,151,46)"/><text x="23.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="20" y="868" width="1" height="15" fill="rgb(232,182,8)"/><text x="23.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="20" y="884" width="1" height="15" fill="rgb(246,55,21)"/><text x="23.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="20" y="900" width="1" height="15" fill="rgb(206,204,6)"/><text x="23.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="20" y="916" width="1" height="15" fill="rgb(237,205,48)"/><text x="23.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="20" y="932" width="1" height="15" fill="rgb(215,159,10)"/><text x="23.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="20" y="948" width="1" height="15" fill="rgb(231,4,46)"/><text x="23.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:17) (1 samples, 0.11%)</title><rect x="20" y="964" width="1" height="15" fill="rgb(228,17,24)"/><text x="23.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="20" y="980" width="1" height="15" fill="rgb(236,146,46)"/><text x="23.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="20" y="996" width="1" height="15" fill="rgb(242,35,34)"/><text x="23.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="20" y="1012" width="1" height="15" fill="rgb(243,66,22)"/><text x="23.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="20" y="1028" width="1" height="15" fill="rgb(218,175,2)"/><text x="23.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="20" y="1044" width="1" height="15" fill="rgb(216,47,22)"/><text x="23.00" y="1054.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py:22) (1 samples, 0.11%)</title><rect x="20" y="1060" width="1" height="15" fill="rgb(250,43,34)"/><text x="23.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="20" y="1076" width="1" height="15" fill="rgb(236,31,49)"/><text x="23.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="20" y="1092" width="1" height="15" fill="rgb(231,79,17)"/><text x="23.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="20" y="1108" width="1" height="15" fill="rgb(254,112,34)"/><text x="23.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="20" y="1124" width="1" height="15" fill="rgb(205,58,10)"/><text x="23.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="20" y="1140" width="1" height="15" fill="rgb(209,142,41)"/><text x="23.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py:11) (1 samples, 0.11%)</title><rect x="20" y="1156" width="1" height="15" fill="rgb(225,82,36)"/><text x="23.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="20" y="1172" width="1" height="15" fill="rgb(215,80,7)"/><text x="23.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="20" y="1188" width="1" height="15" fill="rgb(214,152,37)"/><text x="23.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="20" y="1204" width="1" height="15" fill="rgb(223,157,1)"/><text x="23.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="20" y="1220" width="1" height="15" fill="rgb(215,125,4)"/><text x="23.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="20" y="1236" width="1" height="15" fill="rgb(249,180,40)"/><text x="23.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py:11) (1 samples, 0.11%)</title><rect x="20" y="1252" width="1" height="15" fill="rgb(252,110,50)"/><text x="23.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="20" y="1268" width="1" height="15" fill="rgb(214,198,32)"/><text x="23.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="20" y="1284" width="1" height="15" fill="rgb(250,223,53)"/><text x="23.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="20" y="1300" width="1" height="15" fill="rgb(236,86,2)"/><text x="23.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="20" y="1316" width="1" height="15" fill="rgb(232,28,25)"/><text x="23.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="20" y="1332" width="1" height="15" fill="rgb(223,87,21)"/><text x="23.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:20) (1 samples, 0.11%)</title><rect x="20" y="1348" width="1" height="15" fill="rgb(240,16,20)"/><text x="23.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="20" y="1364" width="1" height="15" fill="rgb(249,124,37)"/><text x="23.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="20" y="1380" width="1" height="15" fill="rgb(206,37,36)"/><text x="23.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="20" y="1396" width="1" height="15" fill="rgb(227,102,53)"/><text x="23.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="20" y="1412" width="1" height="15" fill="rgb(245,194,44)"/><text x="23.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="20" y="1428" width="1" height="15" fill="rgb(212,116,33)"/><text x="23.00" y="1438.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_stochastic_gradient.py:38) (1 samples, 0.11%)</title><rect x="20" y="1444" width="1" height="15" fill="rgb(212,163,49)"/><text x="23.00" y="1454.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.11%)</title><rect x="21" y="244" width="2" height="15" fill="rgb(218,150,29)"/><text x="24.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="21" y="260" width="2" height="15" fill="rgb(223,87,43)"/><text x="24.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="21" y="276" width="2" height="15" fill="rgb(250,21,23)"/><text x="24.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="21" y="292" width="2" height="15" fill="rgb(208,197,53)"/><text x="24.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="21" y="308" width="2" height="15" fill="rgb(227,218,34)"/><text x="24.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="21" y="324" width="2" height="15" fill="rgb(251,21,44)"/><text x="24.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.11%)</title><rect x="21" y="340" width="2" height="15" fill="rgb(209,108,16)"/><text x="24.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="21" y="356" width="2" height="15" fill="rgb(250,40,18)"/><text x="24.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="21" y="372" width="2" height="15" fill="rgb(235,227,2)"/><text x="24.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="21" y="388" width="2" height="15" fill="rgb(236,34,10)"/><text x="24.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="21" y="404" width="2" height="15" fill="rgb(230,60,7)"/><text x="24.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="21" y="420" width="2" height="15" fill="rgb(250,29,51)"/><text x="24.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="21" y="436" width="2" height="15" fill="rgb(246,214,45)"/><text x="24.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="21" y="452" width="2" height="15" fill="rgb(225,128,24)"/><text x="24.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="21" y="468" width="2" height="15" fill="rgb(223,46,52)"/><text x="24.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.11%)</title><rect x="21" y="484" width="2" height="15" fill="rgb(222,15,37)"/><text x="24.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="21" y="500" width="2" height="15" fill="rgb(222,59,54)"/><text x="24.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="21" y="516" width="2" height="15" fill="rgb(237,90,27)"/><text x="24.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="21" y="532" width="2" height="15" fill="rgb(215,94,29)"/><text x="24.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="21" y="548" width="2" height="15" fill="rgb(225,91,22)"/><text x="24.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="21" y="564" width="2" height="15" fill="rgb(220,205,52)"/><text x="24.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.11%)</title><rect x="21" y="580" width="2" height="15" fill="rgb(210,27,4)"/><text x="24.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="21" y="596" width="2" height="15" fill="rgb(220,59,52)"/><text x="24.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="21" y="612" width="2" height="15" fill="rgb(213,140,36)"/><text x="24.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="21" y="628" width="2" height="15" fill="rgb(206,84,14)"/><text x="24.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="21" y="644" width="2" height="15" fill="rgb(230,194,7)"/><text x="24.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="21" y="660" width="2" height="15" fill="rgb(237,25,52)"/><text x="24.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.11%)</title><rect x="21" y="676" width="2" height="15" fill="rgb(254,132,46)"/><text x="24.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="21" y="692" width="2" height="15" fill="rgb(239,191,29)"/><text x="24.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="21" y="708" width="2" height="15" fill="rgb(228,93,15)"/><text x="24.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="21" y="724" width="2" height="15" fill="rgb(245,20,48)"/><text x="24.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="21" y="740" width="2" height="15" fill="rgb(242,98,43)"/><text x="24.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="21" y="756" width="2" height="15" fill="rgb(251,77,11)"/><text x="24.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.11%)</title><rect x="21" y="772" width="2" height="15" fill="rgb(228,39,10)"/><text x="24.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="21" y="788" width="2" height="15" fill="rgb(208,21,5)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="21" y="804" width="2" height="15" fill="rgb(242,142,17)"/><text x="24.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="21" y="820" width="2" height="15" fill="rgb(211,56,21)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="21" y="836" width="2" height="15" fill="rgb(238,55,53)"/><text x="24.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="21" y="852" width="2" height="15" fill="rgb(246,217,12)"/><text x="24.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="21" y="868" width="2" height="15" fill="rgb(239,188,31)"/><text x="24.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="21" y="884" width="2" height="15" fill="rgb(218,77,11)"/><text x="24.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (1 samples, 0.11%)</title><rect x="21" y="900" width="2" height="15" fill="rgb(234,147,37)"/><text x="24.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="21" y="916" width="2" height="15" fill="rgb(249,125,21)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="21" y="932" width="2" height="15" fill="rgb(223,104,51)"/><text x="24.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="21" y="948" width="2" height="15" fill="rgb(208,165,40)"/><text x="24.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="21" y="964" width="2" height="15" fill="rgb(218,8,24)"/><text x="24.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="21" y="980" width="2" height="15" fill="rgb(224,160,29)"/><text x="24.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="21" y="996" width="2" height="15" fill="rgb(221,99,27)"/><text x="24.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="21" y="1012" width="2" height="15" fill="rgb(229,219,4)"/><text x="24.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="21" y="1028" width="2" height="15" fill="rgb(213,113,50)"/><text x="24.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (1 samples, 0.11%)</title><rect x="21" y="1044" width="2" height="15" fill="rgb(232,190,20)"/><text x="24.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="21" y="1060" width="2" height="15" fill="rgb(241,126,35)"/><text x="24.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="21" y="1076" width="2" height="15" fill="rgb(223,193,9)"/><text x="24.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="21" y="1092" width="2" height="15" fill="rgb(225,179,23)"/><text x="24.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="21" y="1108" width="2" height="15" fill="rgb(215,28,42)"/><text x="24.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="21" y="1124" width="2" height="15" fill="rgb(230,70,48)"/><text x="24.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="21" y="1140" width="2" height="15" fill="rgb(231,187,35)"/><text x="24.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="21" y="1156" width="2" height="15" fill="rgb(224,16,0)"/><text x="24.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:15) (1 samples, 0.11%)</title><rect x="21" y="1172" width="2" height="15" fill="rgb(241,67,24)"/><text x="24.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="21" y="1188" width="2" height="15" fill="rgb(235,48,39)"/><text x="24.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="21" y="1204" width="2" height="15" fill="rgb(242,80,8)"/><text x="24.00" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="21" y="1220" width="2" height="15" fill="rgb(206,174,53)"/><text x="24.00" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="21" y="1236" width="2" height="15" fill="rgb(217,71,51)"/><text x="24.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="21" y="1252" width="2" height="15" fill="rgb(234,46,37)"/><text x="24.00" y="1262.50"></text></g><g><title>&lt;module&gt; (OpenSSL/_util.py:6) (1 samples, 0.11%)</title><rect x="21" y="1268" width="2" height="15" fill="rgb(249,152,28)"/><text x="24.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="21" y="1284" width="2" height="15" fill="rgb(254,194,2)"/><text x="24.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="21" y="1300" width="2" height="15" fill="rgb(239,87,31)"/><text x="24.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="21" y="1316" width="2" height="15" fill="rgb(244,40,42)"/><text x="24.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="21" y="1332" width="2" height="15" fill="rgb(212,71,9)"/><text x="24.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="21" y="1348" width="2" height="15" fill="rgb(227,46,18)"/><text x="24.00" y="1358.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/bindings/openssl/binding.py:195) (1 samples, 0.11%)</title><rect x="21" y="1364" width="2" height="15" fill="rgb(215,156,31)"/><text x="24.00" y="1374.50"></text></g><g><title>init_static_locks (cryptography/hazmat/bindings/openssl/binding.py:139) (1 samples, 0.11%)</title><rect x="21" y="1380" width="2" height="15" fill="rgb(244,54,17)"/><text x="24.00" y="1390.50"></text></g><g><title>_ensure_ffi_initialized (cryptography/hazmat/bindings/openssl/binding.py:126) (1 samples, 0.11%)</title><rect x="21" y="1396" width="2" height="15" fill="rgb(213,15,37)"/><text x="24.00" y="1406.50"></text></g><g><title>build_conditional_library (cryptography/hazmat/bindings/openssl/binding.py:92) (1 samples, 0.11%)</title><rect x="21" y="1412" width="2" height="15" fill="rgb(223,11,4)"/><text x="24.00" y="1422.50"></text></g><g><title>0x7f39372d7ebd (?) (1 samples, 0.11%)</title><rect x="21" y="1428" width="2" height="15" fill="rgb(254,146,20)"/><text x="24.00" y="1438.50"></text></g><g><title>0x7f39372d7c48 (?) (1 samples, 0.11%)</title><rect x="21" y="1444" width="2" height="15" fill="rgb(223,226,9)"/><text x="24.00" y="1454.50"></text></g><g><title>0x7f39372d7129 (?) (1 samples, 0.11%)</title><rect x="21" y="1460" width="2" height="15" fill="rgb(241,5,29)"/><text x="24.00" y="1470.50"></text></g><g><title>0x7f39372d32c4 (?) (1 samples, 0.11%)</title><rect x="21" y="1476" width="2" height="15" fill="rgb(219,22,25)"/><text x="24.00" y="1486.50"></text></g><g><title>0x7f39372ca9a8 (?) (1 samples, 0.11%)</title><rect x="21" y="1492" width="2" height="15" fill="rgb(233,8,28)"/><text x="24.00" y="1502.50"></text></g><g><title>0x7f396bd11dd1 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="21" y="1508" width="2" height="15" fill="rgb(254,193,29)"/><text x="24.00" y="1518.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.11%)</title><rect x="23" y="436" width="1" height="15" fill="rgb(241,23,29)"/><text x="26.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="23" y="452" width="1" height="15" fill="rgb(206,100,7)"/><text x="26.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="23" y="468" width="1" height="15" fill="rgb(226,27,1)"/><text x="26.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="23" y="484" width="1" height="15" fill="rgb(221,80,11)"/><text x="26.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="23" y="500" width="1" height="15" fill="rgb(228,94,52)"/><text x="26.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="23" y="516" width="1" height="15" fill="rgb(244,186,45)"/><text x="26.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.11%)</title><rect x="23" y="532" width="1" height="15" fill="rgb(229,150,23)"/><text x="26.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="23" y="548" width="1" height="15" fill="rgb(241,173,48)"/><text x="26.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="23" y="564" width="1" height="15" fill="rgb(236,174,3)"/><text x="26.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="23" y="580" width="1" height="15" fill="rgb(206,225,49)"/><text x="26.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="23" y="596" width="1" height="15" fill="rgb(221,103,34)"/><text x="26.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="23" y="612" width="1" height="15" fill="rgb(248,61,44)"/><text x="26.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.11%)</title><rect x="23" y="628" width="1" height="15" fill="rgb(246,206,6)"/><text x="26.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="23" y="644" width="1" height="15" fill="rgb(224,170,26)"/><text x="26.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="23" y="660" width="1" height="15" fill="rgb(236,102,44)"/><text x="26.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="23" y="676" width="1" height="15" fill="rgb(205,107,11)"/><text x="26.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="23" y="692" width="1" height="15" fill="rgb(225,12,15)"/><text x="26.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="23" y="708" width="1" height="15" fill="rgb(248,8,7)"/><text x="26.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.11%)</title><rect x="23" y="724" width="1" height="15" fill="rgb(242,42,20)"/><text x="26.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="23" y="740" width="1" height="15" fill="rgb(236,10,21)"/><text x="26.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="23" y="756" width="1" height="15" fill="rgb(224,12,24)"/><text x="26.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="23" y="772" width="1" height="15" fill="rgb(217,105,33)"/><text x="26.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="23" y="788" width="1" height="15" fill="rgb(205,63,23)"/><text x="26.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="23" y="804" width="1" height="15" fill="rgb(213,53,41)"/><text x="26.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.11%)</title><rect x="23" y="820" width="1" height="15" fill="rgb(240,156,54)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="23" y="836" width="1" height="15" fill="rgb(230,117,48)"/><text x="26.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="23" y="852" width="1" height="15" fill="rgb(224,80,12)"/><text x="26.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="23" y="868" width="1" height="15" fill="rgb(246,82,22)"/><text x="26.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="23" y="884" width="1" height="15" fill="rgb(226,97,13)"/><text x="26.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="23" y="900" width="1" height="15" fill="rgb(216,90,28)"/><text x="26.00" y="910.50"></text></g><g><title>0x7f394122240e (?) (1 samples, 0.11%)</title><rect x="23" y="916" width="1" height="15" fill="rgb(220,80,9)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="23" y="932" width="1" height="15" fill="rgb(223,136,19)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="23" y="948" width="1" height="15" fill="rgb(253,196,39)"/><text x="26.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="23" y="964" width="1" height="15" fill="rgb(248,202,48)"/><text x="26.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="23" y="980" width="1" height="15" fill="rgb(224,36,53)"/><text x="26.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="23" y="996" width="1" height="15" fill="rgb(233,54,18)"/><text x="26.00" y="1006.50"></text></g><g><title>0x7f3940fdbcd2 (?) (1 samples, 0.11%)</title><rect x="23" y="1012" width="1" height="15" fill="rgb(236,35,3)"/><text x="26.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="23" y="1028" width="1" height="15" fill="rgb(220,190,37)"/><text x="26.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="23" y="1044" width="1" height="15" fill="rgb(225,14,31)"/><text x="26.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="23" y="1060" width="1" height="15" fill="rgb(218,122,32)"/><text x="26.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="23" y="1076" width="1" height="15" fill="rgb(245,181,31)"/><text x="26.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="23" y="1092" width="1" height="15" fill="rgb(244,226,16)"/><text x="26.00" y="1102.50"></text></g><g><title>0x7f39406d10e5 (?) (1 samples, 0.11%)</title><rect x="23" y="1108" width="1" height="15" fill="rgb(215,29,19)"/><text x="26.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="23" y="1124" width="1" height="15" fill="rgb(222,113,26)"/><text x="26.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="23" y="1140" width="1" height="15" fill="rgb(237,110,23)"/><text x="26.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="23" y="1156" width="1" height="15" fill="rgb(216,24,19)"/><text x="26.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="23" y="1172" width="1" height="15" fill="rgb(229,107,3)"/><text x="26.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="23" y="1188" width="1" height="15" fill="rgb(235,112,29)"/><text x="26.00" y="1198.50"></text></g><g><title>0x7f3940455e68 (?) (1 samples, 0.11%)</title><rect x="23" y="1204" width="1" height="15" fill="rgb(208,120,4)"/><text x="26.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="23" y="1220" width="1" height="15" fill="rgb(229,188,2)"/><text x="26.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="23" y="1236" width="1" height="15" fill="rgb(207,133,9)"/><text x="26.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="23" y="1252" width="1" height="15" fill="rgb(227,65,25)"/><text x="26.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="23" y="1268" width="1" height="15" fill="rgb(206,54,12)"/><text x="26.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="23" y="1284" width="1" height="15" fill="rgb(231,47,37)"/><text x="26.00" y="1294.50"></text></g><g><title>0x7f39401e62fb (?) (1 samples, 0.11%)</title><rect x="23" y="1300" width="1" height="15" fill="rgb(231,202,2)"/><text x="26.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="23" y="1316" width="1" height="15" fill="rgb(243,89,10)"/><text x="26.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="23" y="1332" width="1" height="15" fill="rgb(215,50,46)"/><text x="26.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="23" y="1348" width="1" height="15" fill="rgb(205,96,54)"/><text x="26.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="23" y="1364" width="1" height="15" fill="rgb(252,162,41)"/><text x="26.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="23" y="1380" width="1" height="15" fill="rgb(245,43,51)"/><text x="26.00" y="1390.50"></text></g><g><title>0x7f393ffca153 (?) (1 samples, 0.11%)</title><rect x="23" y="1396" width="1" height="15" fill="rgb(221,16,0)"/><text x="26.00" y="1406.50"></text></g><g><title>0x7f393ffc8c13 (?) (1 samples, 0.11%)</title><rect x="23" y="1412" width="1" height="15" fill="rgb(233,92,41)"/><text x="26.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="23" y="1428" width="1" height="15" fill="rgb(245,120,11)"/><text x="26.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="23" y="1444" width="1" height="15" fill="rgb(231,40,41)"/><text x="26.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="23" y="1460" width="1" height="15" fill="rgb(237,163,17)"/><text x="26.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="23" y="1476" width="1" height="15" fill="rgb(241,140,39)"/><text x="26.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="23" y="1492" width="1" height="15" fill="rgb(251,87,14)"/><text x="26.00" y="1502.50"></text></g><g><title>0x7f393fd65181 (?) (1 samples, 0.11%)</title><rect x="23" y="1508" width="1" height="15" fill="rgb(226,220,30)"/><text x="26.00" y="1518.50"></text></g><g><title>0x7f393fd681c9 (?) (1 samples, 0.11%)</title><rect x="23" y="1524" width="1" height="15" fill="rgb(236,83,25)"/><text x="26.00" y="1534.50"></text></g><g><title>0x7f393fd94167 (?) (1 samples, 0.11%)</title><rect x="23" y="1540" width="1" height="15" fill="rgb(208,39,22)"/><text x="26.00" y="1550.50"></text></g><g><title>0x7f393fd8fb64 (?) (1 samples, 0.11%)</title><rect x="23" y="1556" width="1" height="15" fill="rgb(243,226,48)"/><text x="26.00" y="1566.50"></text></g><g><title>0x7f393fd7307b (?) (1 samples, 0.11%)</title><rect x="23" y="1572" width="1" height="15" fill="rgb(214,114,18)"/><text x="26.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py:101) (1 samples, 0.11%)</title><rect x="23" y="1588" width="1" height="15" fill="rgb(252,203,51)"/><text x="26.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py:1104) (1 samples, 0.11%)</title><rect x="23" y="1604" width="1" height="15" fill="rgb(237,1,49)"/><text x="26.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py:114) (1 samples, 0.11%)</title><rect x="23" y="1620" width="1" height="15" fill="rgb(234,95,52)"/><text x="26.00" y="1630.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:152) (1 samples, 0.11%)</title><rect x="24" y="1604" width="1" height="15" fill="rgb(249,214,51)"/><text x="27.00" y="1614.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="24" y="1620" width="1" height="15" fill="rgb(235,154,53)"/><text x="27.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;onnx::OpSchema::FormalParameterOption, onnx::OpSchema::FormalParameter, , &gt;( const&amp;)::{lambda(onnx::OpSchema::FormalParameter const*)#1}, onnx::OpSchema::FormalParameterOption, onnx::OpSchema::FormalParameter const*, &gt;(pybind11::cpp_function::cpp_function&lt;onnx::OpSchema::FormalParameterOption, onnx::OpSchema::FormalParameter, , &gt;( const&amp;)::{lambda(onnx::OpSchema::FormalParameter const*)#1}&amp;&amp;, onnx::OpSchema::FormalParameterOption (*)(onnx::OpSchema::FormalParameter const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="24" y="1636" width="1" height="15" fill="rgb(233,63,49)"/><text x="27.00" y="1646.50"></text></g><g><title>pybind11::detail::type_caster_generic::src_and_type (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="24" y="1652" width="1" height="15" fill="rgb(234,15,5)"/><text x="27.00" y="1662.50"></text></g><g><title>pybind11::detail::get_type_info (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="24" y="1668" width="1" height="15" fill="rgb(249,180,29)"/><text x="27.00" y="1678.50"></text></g><g><title>root (&lt;template&gt;:100) (2 samples, 0.22%)</title><rect x="24" y="1572" width="3" height="15" fill="rgb(236,167,42)"/><text x="27.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (2 samples, 0.22%)</title><rect x="24" y="1588" width="3" height="15" fill="rgb(237,78,13)"/><text x="27.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:154) (1 samples, 0.11%)</title><rect x="25" y="1604" width="2" height="15" fill="rgb(254,147,13)"/><text x="28.00" y="1614.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="25" y="1620" width="2" height="15" fill="rgb(236,194,44)"/><text x="28.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;onnx::OpSchema::FormalParameterOption, onnx::OpSchema::FormalParameter, , &gt;( const&amp;)::{lambda(onnx::OpSchema::FormalParameter const*)#1}, onnx::OpSchema::FormalParameterOption, onnx::OpSchema::FormalParameter const*, &gt;(pybind11::cpp_function::cpp_function&lt;onnx::OpSchema::FormalParameterOption, onnx::OpSchema::FormalParameter, , &gt;( const&amp;)::{lambda(onnx::OpSchema::FormalParameter const*)#1}&amp;&amp;, onnx::OpSchema::FormalParameterOption (*)(onnx::OpSchema::FormalParameter const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="25" y="1636" width="2" height="15" fill="rgb(227,76,40)"/><text x="28.00" y="1646.50"></text></g><g><title>pybind11::detail::type_caster_generic::src_and_type (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="25" y="1652" width="2" height="15" fill="rgb(246,218,33)"/><text x="28.00" y="1662.50"></text></g><g><title>pybind11::detail::get_type_info (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="25" y="1668" width="2" height="15" fill="rgb(245,186,10)"/><text x="28.00" y="1678.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (3 samples, 0.34%)</title><rect x="24" y="1476" width="4" height="15" fill="rgb(211,77,48)"/><text x="27.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (3 samples, 0.34%)</title><rect x="24" y="1492" width="4" height="15" fill="rgb(244,69,3)"/><text x="27.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (3 samples, 0.34%)</title><rect x="24" y="1508" width="4" height="15" fill="rgb(219,10,54)"/><text x="27.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (3 samples, 0.34%)</title><rect x="24" y="1524" width="4" height="15" fill="rgb(249,12,37)"/><text x="27.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (3 samples, 0.34%)</title><rect x="24" y="1540" width="4" height="15" fill="rgb(213,149,17)"/><text x="27.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.34%)</title><rect x="24" y="1556" width="4" height="15" fill="rgb(230,141,3)"/><text x="27.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:75) (1 samples, 0.11%)</title><rect x="27" y="1572" width="1" height="15" fill="rgb(236,42,3)"/><text x="30.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.11%)</title><rect x="27" y="1588" width="1" height="15" fill="rgb(223,135,30)"/><text x="30.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py:40) (1 samples, 0.11%)</title><rect x="27" y="1604" width="1" height="15" fill="rgb(218,22,22)"/><text x="30.00" y="1614.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="27" y="1620" width="1" height="15" fill="rgb(242,62,26)"/><text x="30.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda(onnx::OpSchema::Attribute*)#3} const&amp;, pybind11::bytes, onnx::OpSchema::Attribute*, &gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda(onnx::OpSchema::Attribute*)#3} const&amp;&amp;&amp;, pybind11::bytes (*)(onnx::OpSchema::Attribute*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="27" y="1636" width="1" height="15" fill="rgb(238,2,18)"/><text x="30.00" y="1646.50"></text></g><g><title>google::protobuf::MessageLite::SerializeToString (libprotobuf.so.10.0.0) (1 samples, 0.11%)</title><rect x="27" y="1652" width="1" height="15" fill="rgb(226,133,46)"/><text x="30.00" y="1662.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:4) (15 samples, 1.68%)</title><rect x="10" y="52" width="19" height="15" fill="rgb(217,112,47)"/><text x="13.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 1.68%)</title><rect x="10" y="68" width="19" height="15" fill="rgb(248,111,14)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 1.68%)</title><rect x="10" y="84" width="19" height="15" fill="rgb(245,210,26)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 1.68%)</title><rect x="10" y="100" width="19" height="15" fill="rgb(232,196,21)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 1.68%)</title><rect x="10" y="116" width="19" height="15" fill="rgb(246,219,11)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 1.68%)</title><rect x="10" y="132" width="19" height="15" fill="rgb(227,131,11)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:7) (6 samples, 0.67%)</title><rect x="21" y="148" width="8" height="15" fill="rgb(215,70,25)"/><text x="24.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.67%)</title><rect x="21" y="164" width="8" height="15" fill="rgb(254,218,14)"/><text x="24.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.67%)</title><rect x="21" y="180" width="8" height="15" fill="rgb(243,14,13)"/><text x="24.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.67%)</title><rect x="21" y="196" width="8" height="15" fill="rgb(246,216,44)"/><text x="24.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.67%)</title><rect x="21" y="212" width="8" height="15" fill="rgb(221,139,45)"/><text x="24.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.67%)</title><rect x="21" y="228" width="8" height="15" fill="rgb(228,154,40)"/><text x="24.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 0.56%)</title><rect x="23" y="244" width="6" height="15" fill="rgb(228,147,36)"/><text x="26.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.56%)</title><rect x="23" y="260" width="6" height="15" fill="rgb(252,205,40)"/><text x="26.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.56%)</title><rect x="23" y="276" width="6" height="15" fill="rgb(211,106,17)"/><text x="26.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.56%)</title><rect x="23" y="292" width="6" height="15" fill="rgb(237,107,11)"/><text x="26.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.56%)</title><rect x="23" y="308" width="6" height="15" fill="rgb(208,17,7)"/><text x="26.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.56%)</title><rect x="23" y="324" width="6" height="15" fill="rgb(218,226,9)"/><text x="26.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 0.56%)</title><rect x="23" y="340" width="6" height="15" fill="rgb(219,160,31)"/><text x="26.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.56%)</title><rect x="23" y="356" width="6" height="15" fill="rgb(235,139,39)"/><text x="26.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.56%)</title><rect x="23" y="372" width="6" height="15" fill="rgb(224,100,52)"/><text x="26.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.56%)</title><rect x="23" y="388" width="6" height="15" fill="rgb(213,15,44)"/><text x="26.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.56%)</title><rect x="23" y="404" width="6" height="15" fill="rgb(253,76,11)"/><text x="26.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.56%)</title><rect x="23" y="420" width="6" height="15" fill="rgb(219,175,29)"/><text x="26.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 0.45%)</title><rect x="24" y="436" width="5" height="15" fill="rgb(214,2,1)"/><text x="27.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="24" y="452" width="5" height="15" fill="rgb(247,34,52)"/><text x="27.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.45%)</title><rect x="24" y="468" width="5" height="15" fill="rgb(219,170,0)"/><text x="27.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="24" y="484" width="5" height="15" fill="rgb(230,70,9)"/><text x="27.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="24" y="500" width="5" height="15" fill="rgb(231,75,40)"/><text x="27.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="24" y="516" width="5" height="15" fill="rgb(237,166,23)"/><text x="27.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="24" y="532" width="5" height="15" fill="rgb(249,137,12)"/><text x="27.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="24" y="548" width="5" height="15" fill="rgb(216,186,52)"/><text x="27.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="24" y="564" width="5" height="15" fill="rgb(213,138,12)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 0.45%)</title><rect x="24" y="580" width="5" height="15" fill="rgb(225,38,27)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="24" y="596" width="5" height="15" fill="rgb(234,13,49)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="24" y="612" width="5" height="15" fill="rgb(239,68,23)"/><text x="27.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="24" y="628" width="5" height="15" fill="rgb(210,133,45)"/><text x="27.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="24" y="644" width="5" height="15" fill="rgb(239,109,40)"/><text x="27.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="24" y="660" width="5" height="15" fill="rgb(252,212,40)"/><text x="27.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 0.45%)</title><rect x="24" y="676" width="5" height="15" fill="rgb(211,40,23)"/><text x="27.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="24" y="692" width="5" height="15" fill="rgb(240,204,10)"/><text x="27.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="24" y="708" width="5" height="15" fill="rgb(235,98,17)"/><text x="27.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="24" y="724" width="5" height="15" fill="rgb(253,155,53)"/><text x="27.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="24" y="740" width="5" height="15" fill="rgb(226,142,30)"/><text x="27.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="24" y="756" width="5" height="15" fill="rgb(228,225,11)"/><text x="27.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 0.45%)</title><rect x="24" y="772" width="5" height="15" fill="rgb(242,174,8)"/><text x="27.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="24" y="788" width="5" height="15" fill="rgb(226,55,23)"/><text x="27.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="24" y="804" width="5" height="15" fill="rgb(235,145,16)"/><text x="27.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="24" y="820" width="5" height="15" fill="rgb(252,175,14)"/><text x="27.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="24" y="836" width="5" height="15" fill="rgb(212,149,44)"/><text x="27.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="24" y="852" width="5" height="15" fill="rgb(242,167,9)"/><text x="27.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 0.45%)</title><rect x="24" y="868" width="5" height="15" fill="rgb(215,43,8)"/><text x="27.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="24" y="884" width="5" height="15" fill="rgb(254,106,36)"/><text x="27.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.45%)</title><rect x="24" y="900" width="5" height="15" fill="rgb(209,92,24)"/><text x="27.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="24" y="916" width="5" height="15" fill="rgb(208,110,20)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="24" y="932" width="5" height="15" fill="rgb(254,9,7)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="24" y="948" width="5" height="15" fill="rgb(233,39,14)"/><text x="27.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="24" y="964" width="5" height="15" fill="rgb(235,55,27)"/><text x="27.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="24" y="980" width="5" height="15" fill="rgb(221,21,53)"/><text x="27.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="24" y="996" width="5" height="15" fill="rgb(211,161,30)"/><text x="27.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 0.45%)</title><rect x="24" y="1012" width="5" height="15" fill="rgb(215,168,26)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="24" y="1028" width="5" height="15" fill="rgb(232,86,33)"/><text x="27.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="24" y="1044" width="5" height="15" fill="rgb(248,15,53)"/><text x="27.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="24" y="1060" width="5" height="15" fill="rgb(232,17,32)"/><text x="27.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="24" y="1076" width="5" height="15" fill="rgb(218,6,35)"/><text x="27.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="24" y="1092" width="5" height="15" fill="rgb(250,186,26)"/><text x="27.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (4 samples, 0.45%)</title><rect x="24" y="1108" width="5" height="15" fill="rgb(241,68,54)"/><text x="27.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.45%)</title><rect x="24" y="1124" width="5" height="15" fill="rgb(224,60,29)"/><text x="27.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="24" y="1140" width="5" height="15" fill="rgb(247,216,50)"/><text x="27.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="24" y="1156" width="5" height="15" fill="rgb(223,119,27)"/><text x="27.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="24" y="1172" width="5" height="15" fill="rgb(208,160,22)"/><text x="27.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="24" y="1188" width="5" height="15" fill="rgb(249,56,42)"/><text x="27.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="24" y="1204" width="5" height="15" fill="rgb(248,39,17)"/><text x="27.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="24" y="1220" width="5" height="15" fill="rgb(248,103,22)"/><text x="27.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (4 samples, 0.45%)</title><rect x="24" y="1236" width="5" height="15" fill="rgb(225,191,51)"/><text x="27.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.45%)</title><rect x="24" y="1252" width="5" height="15" fill="rgb(234,181,19)"/><text x="27.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="24" y="1268" width="5" height="15" fill="rgb(226,130,36)"/><text x="27.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="24" y="1284" width="5" height="15" fill="rgb(221,27,10)"/><text x="27.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="24" y="1300" width="5" height="15" fill="rgb(210,88,46)"/><text x="27.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="24" y="1316" width="5" height="15" fill="rgb(239,127,18)"/><text x="27.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="24" y="1332" width="5" height="15" fill="rgb(226,15,3)"/><text x="27.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="24" y="1348" width="5" height="15" fill="rgb(207,49,30)"/><text x="27.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (4 samples, 0.45%)</title><rect x="24" y="1364" width="5" height="15" fill="rgb(241,215,31)"/><text x="27.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="24" y="1380" width="5" height="15" fill="rgb(223,140,21)"/><text x="27.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="24" y="1396" width="5" height="15" fill="rgb(230,99,40)"/><text x="27.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="24" y="1412" width="5" height="15" fill="rgb(238,32,30)"/><text x="27.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="24" y="1428" width="5" height="15" fill="rgb(250,44,49)"/><text x="27.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="24" y="1444" width="5" height="15" fill="rgb(234,151,47)"/><text x="27.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (4 samples, 0.45%)</title><rect x="24" y="1460" width="5" height="15" fill="rgb(240,14,42)"/><text x="27.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:156) (1 samples, 0.11%)</title><rect x="28" y="1476" width="1" height="15" fill="rgb(215,8,27)"/><text x="31.00" y="1486.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="28" y="1492" width="1" height="15" fill="rgb(223,56,51)"/><text x="31.00" y="1502.50"></text></g><g><title>0x7f396bcf3028 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="28" y="1508" width="1" height="15" fill="rgb(251,112,30)"/><text x="31.00" y="1518.50"></text></g><g><title>0x7f396bcf0be8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="28" y="1524" width="1" height="15" fill="rgb(224,214,30)"/><text x="31.00" y="1534.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:47) (1 samples, 0.11%)</title><rect x="29" y="52" width="2" height="15" fill="rgb(211,169,54)"/><text x="32.00" y="62.50"></text></g><g><title>profile0_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:46) (1 samples, 0.11%)</title><rect x="29" y="68" width="2" height="15" fill="rgb(214,182,38)"/><text x="32.00" y="78.50"></text></g><g><title>setup_profile0 (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:26) (1 samples, 0.11%)</title><rect x="29" y="84" width="2" height="15" fill="rgb(225,187,15)"/><text x="32.00" y="94.50"></text></g><g><title>profile0 (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:18) (1 samples, 0.11%)</title><rect x="29" y="100" width="2" height="15" fill="rgb(250,79,20)"/><text x="32.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.11%)</title><rect x="29" y="116" width="2" height="15" fill="rgb(243,122,2)"/><text x="32.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (1 samples, 0.11%)</title><rect x="29" y="132" width="2" height="15" fill="rgb(209,218,53)"/><text x="32.00" y="142.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1131) (1 samples, 0.11%)</title><rect x="29" y="148" width="2" height="15" fill="rgb(221,223,8)"/><text x="32.00" y="158.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1096) (1 samples, 0.11%)</title><rect x="29" y="164" width="2" height="15" fill="rgb(251,30,26)"/><text x="32.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py:1096) (1 samples, 0.11%)</title><rect x="29" y="180" width="2" height="15" fill="rgb(205,65,43)"/><text x="32.00" y="190.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (1 samples, 0.11%)</title><rect x="29" y="196" width="2" height="15" fill="rgb(246,73,35)"/><text x="32.00" y="206.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (1 samples, 0.11%)</title><rect x="29" y="212" width="2" height="15" fill="rgb(206,108,18)"/><text x="32.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.11%)</title><rect x="29" y="228" width="2" height="15" fill="rgb(237,95,18)"/><text x="32.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.11%)</title><rect x="29" y="244" width="2" height="15" fill="rgb(245,145,49)"/><text x="32.00" y="254.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.11%)</title><rect x="29" y="260" width="2" height="15" fill="rgb(229,187,8)"/><text x="32.00" y="270.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.11%)</title><rect x="29" y="276" width="2" height="15" fill="rgb(251,113,0)"/><text x="32.00" y="286.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.11%)</title><rect x="31" y="164" width="1" height="15" fill="rgb(254,22,5)"/><text x="34.00" y="174.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1128) (3 samples, 0.34%)</title><rect x="31" y="148" width="4" height="15" fill="rgb(235,155,20)"/><text x="34.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.22%)</title><rect x="32" y="164" width="3" height="15" fill="rgb(236,131,10)"/><text x="35.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.11%)</title><rect x="33" y="180" width="2" height="15" fill="rgb(240,126,24)"/><text x="36.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.11%)</title><rect x="33" y="196" width="2" height="15" fill="rgb(216,50,26)"/><text x="36.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.11%)</title><rect x="35" y="180" width="1" height="15" fill="rgb(238,80,49)"/><text x="38.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.11%)</title><rect x="36" y="180" width="1" height="15" fill="rgb(252,204,9)"/><text x="39.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.11%)</title><rect x="36" y="196" width="1" height="15" fill="rgb(236,29,6)"/><text x="39.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.11%)</title><rect x="36" y="212" width="1" height="15" fill="rgb(227,173,34)"/><text x="39.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.11%)</title><rect x="37" y="180" width="2" height="15" fill="rgb(254,19,7)"/><text x="40.00" y="190.50"></text></g><g><title>0x7f396bdcf151 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="39" y="212" width="1" height="15" fill="rgb(227,176,37)"/><text x="42.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.34%)</title><rect x="39" y="196" width="3" height="15" fill="rgb(207,28,32)"/><text x="42.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.22%)</title><rect x="40" y="212" width="2" height="15" fill="rgb(237,39,37)"/><text x="43.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 0.45%)</title><rect x="39" y="180" width="5" height="15" fill="rgb(228,161,38)"/><text x="42.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.11%)</title><rect x="42" y="196" width="2" height="15" fill="rgb(208,88,45)"/><text x="45.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.11%)</title><rect x="42" y="212" width="2" height="15" fill="rgb(239,165,12)"/><text x="45.00" y="222.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1129) (8 samples, 0.89%)</title><rect x="35" y="148" width="10" height="15" fill="rgb(210,150,24)"/><text x="38.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (8 samples, 0.89%)</title><rect x="35" y="164" width="10" height="15" fill="rgb(210,84,20)"/><text x="38.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.11%)</title><rect x="44" y="180" width="1" height="15" fill="rgb(209,226,25)"/><text x="47.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.11%)</title><rect x="44" y="196" width="1" height="15" fill="rgb(217,187,16)"/><text x="47.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.11%)</title><rect x="45" y="212" width="1" height="15" fill="rgb(222,90,7)"/><text x="48.00" y="222.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.11%)</title><rect x="45" y="228" width="1" height="15" fill="rgb(238,147,12)"/><text x="48.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.22%)</title><rect x="48" y="228" width="2" height="15" fill="rgb(217,183,20)"/><text x="51.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 0.56%)</title><rect x="50" y="228" width="7" height="15" fill="rgb(219,197,8)"/><text x="53.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.11%)</title><rect x="56" y="244" width="1" height="15" fill="rgb(220,223,44)"/><text x="59.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (10 samples, 1.12%)</title><rect x="45" y="196" width="13" height="15" fill="rgb(219,121,33)"/><text x="48.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (9 samples, 1.01%)</title><rect x="46" y="212" width="12" height="15" fill="rgb(220,114,7)"/><text x="49.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.11%)</title><rect x="57" y="228" width="1" height="15" fill="rgb(234,94,26)"/><text x="60.00" y="238.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.11%)</title><rect x="57" y="244" width="1" height="15" fill="rgb(232,45,30)"/><text x="60.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.11%)</title><rect x="60" y="228" width="1" height="15" fill="rgb(254,89,22)"/><text x="63.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (1 samples, 0.11%)</title><rect x="61" y="228" width="1" height="15" fill="rgb(242,90,23)"/><text x="64.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.11%)</title><rect x="62" y="228" width="2" height="15" fill="rgb(205,187,10)"/><text x="65.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.11%)</title><rect x="62" y="244" width="2" height="15" fill="rgb(241,55,9)"/><text x="65.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.22%)</title><rect x="64" y="228" width="2" height="15" fill="rgb(234,36,15)"/><text x="67.00" y="238.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.11%)</title><rect x="65" y="244" width="1" height="15" fill="rgb(226,92,31)"/><text x="68.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.11%)</title><rect x="66" y="244" width="2" height="15" fill="rgb(251,42,7)"/><text x="69.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:186) (6 samples, 0.67%)</title><rect x="70" y="260" width="8" height="15" fill="rgb(245,147,31)"/><text x="73.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (10 samples, 1.12%)</title><rect x="66" y="228" width="13" height="15" fill="rgb(225,192,11)"/><text x="69.00" y="238.50"></text></g><g><title>simplefilter (warnings.py:179) (9 samples, 1.01%)</title><rect x="68" y="244" width="11" height="15" fill="rgb(232,156,42)"/><text x="71.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.11%)</title><rect x="78" y="260" width="1" height="15" fill="rgb(209,27,34)"/><text x="81.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.11%)</title><rect x="79" y="228" width="2" height="15" fill="rgb(234,101,8)"/><text x="82.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c:2261) (1 samples, 0.11%)</title><rect x="79" y="244" width="2" height="15" fill="rgb(215,43,21)"/><text x="82.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.11%)</title><rect x="81" y="228" width="1" height="15" fill="rgb(229,179,19)"/><text x="84.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.11%)</title><rect x="81" y="244" width="1" height="15" fill="rgb(211,91,35)"/><text x="84.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.11%)</title><rect x="81" y="260" width="1" height="15" fill="rgb(206,93,29)"/><text x="84.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.11%)</title><rect x="82" y="228" width="1" height="15" fill="rgb(213,204,27)"/><text x="85.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.22%)</title><rect x="83" y="228" width="3" height="15" fill="rgb(211,149,50)"/><text x="86.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.11%)</title><rect x="85" y="244" width="1" height="15" fill="rgb(206,63,11)"/><text x="88.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.11%)</title><rect x="86" y="228" width="1" height="15" fill="rgb(208,160,12)"/><text x="89.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:561) (1 samples, 0.11%)</title><rect x="87" y="228" width="2" height="15" fill="rgb(240,208,20)"/><text x="90.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (5 samples, 0.56%)</title><rect x="89" y="228" width="6" height="15" fill="rgb(229,25,51)"/><text x="92.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (5 samples, 0.56%)</title><rect x="89" y="244" width="6" height="15" fill="rgb(248,208,42)"/><text x="92.00" y="254.50"></text></g><g><title>get_config (sklearn/_config.py:26) (3 samples, 0.34%)</title><rect x="91" y="260" width="4" height="15" fill="rgb(252,220,3)"/><text x="94.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (5 samples, 0.56%)</title><rect x="97" y="244" width="6" height="15" fill="rgb(242,90,48)"/><text x="100.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.11%)</title><rect x="103" y="244" width="1" height="15" fill="rgb(240,115,21)"/><text x="106.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (11 samples, 1.23%)</title><rect x="95" y="228" width="15" height="15" fill="rgb(211,191,7)"/><text x="98.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 0.45%)</title><rect x="104" y="244" width="6" height="15" fill="rgb(213,104,42)"/><text x="107.00" y="254.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.22%)</title><rect x="107" y="260" width="3" height="15" fill="rgb(244,45,40)"/><text x="110.00" y="270.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.11%)</title><rect x="108" y="276" width="2" height="15" fill="rgb(205,116,17)"/><text x="111.00" y="286.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (40 samples, 4.47%)</title><rect x="58" y="212" width="53" height="15" fill="rgb(243,227,19)"/><text x="61.00" y="222.50">_vali..</text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.11%)</title><rect x="110" y="228" width="1" height="15" fill="rgb(223,174,29)"/><text x="113.00" y="238.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (41 samples, 4.58%)</title><rect x="58" y="196" width="54" height="15" fill="rgb(239,185,10)"/><text x="61.00" y="206.50">predi..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (1 samples, 0.11%)</title><rect x="111" y="212" width="1" height="15" fill="rgb(247,133,8)"/><text x="114.00" y="222.50"></text></g><g><title>0x7f39457275c0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="112" y="292" width="2" height="15" fill="rgb(214,219,27)"/><text x="115.00" y="302.50"></text></g><g><title>0x7f394572762c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="114" y="292" width="1" height="15" fill="rgb(248,22,4)"/><text x="117.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c:748) (1 samples, 0.11%)</title><rect x="115" y="324" width="1" height="15" fill="rgb(214,68,18)"/><text x="118.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:763) (1 samples, 0.11%)</title><rect x="116" y="324" width="2" height="15" fill="rgb(228,75,38)"/><text x="119.00" y="334.50"></text></g><g><title>0x7f39457432df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.56%)</title><rect x="112" y="260" width="7" height="15" fill="rgb(254,91,9)"/><text x="115.00" y="270.50"></text></g><g><title>0x7f3945727d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.56%)</title><rect x="112" y="276" width="7" height="15" fill="rgb(230,54,52)"/><text x="115.00" y="286.50"></text></g><g><title>0x7f3945727666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.34%)</title><rect x="115" y="292" width="4" height="15" fill="rgb(222,81,40)"/><text x="118.00" y="302.50"></text></g><g><title>0x7f394571d2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.34%)</title><rect x="115" y="308" width="4" height="15" fill="rgb(207,86,29)"/><text x="118.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.11%)</title><rect x="118" y="324" width="1" height="15" fill="rgb(231,110,36)"/><text x="121.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.11%)</title><rect x="118" y="340" width="1" height="15" fill="rgb(213,116,27)"/><text x="121.00" y="350.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.11%)</title><rect x="119" y="276" width="1" height="15" fill="rgb(249,15,38)"/><text x="122.00" y="286.50"></text></g><g><title>0x7f3945743592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="119" y="260" width="3" height="15" fill="rgb(234,223,36)"/><text x="122.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.11%)</title><rect x="120" y="276" width="2" height="15" fill="rgb(243,38,16)"/><text x="123.00" y="286.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.11%)</title><rect x="120" y="292" width="2" height="15" fill="rgb(207,178,40)"/><text x="123.00" y="302.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.11%)</title><rect x="120" y="308" width="2" height="15" fill="rgb(250,168,23)"/><text x="123.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.11%)</title><rect x="120" y="324" width="2" height="15" fill="rgb(231,71,41)"/><text x="123.00" y="334.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:142) (1 samples, 0.11%)</title><rect x="120" y="340" width="2" height="15" fill="rgb(244,216,24)"/><text x="123.00" y="350.50"></text></g><g><title>0x7f3945743687 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="122" y="260" width="1" height="15" fill="rgb(249,169,5)"/><text x="125.00" y="270.50"></text></g><g><title>0x7f3945743698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="123" y="260" width="3" height="15" fill="rgb(248,26,17)"/><text x="126.00" y="270.50"></text></g><g><title>0x7f394574369b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="126" y="260" width="1" height="15" fill="rgb(220,41,52)"/><text x="129.00" y="270.50"></text></g><g><title>0x7f39457436aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.34%)</title><rect x="127" y="260" width="4" height="15" fill="rgb(252,41,37)"/><text x="130.00" y="270.50"></text></g><g><title>0x7f39457436ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.34%)</title><rect x="131" y="260" width="4" height="15" fill="rgb(231,33,27)"/><text x="134.00" y="270.50"></text></g><g><title>0x7f39457436b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="135" y="260" width="2" height="15" fill="rgb(245,210,44)"/><text x="138.00" y="270.50"></text></g><g><title>0x7f39457436b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="137" y="260" width="2" height="15" fill="rgb(240,216,23)"/><text x="140.00" y="270.50"></text></g><g><title>0x7f39457436e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="139" y="260" width="1" height="15" fill="rgb(227,97,8)"/><text x="142.00" y="270.50"></text></g><g><title>0x7f39457437a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="140" y="260" width="1" height="15" fill="rgb(224,141,10)"/><text x="143.00" y="270.50"></text></g><g><title>0x7f3945743887 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="141" y="260" width="2" height="15" fill="rgb(253,214,45)"/><text x="144.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.11%)</title><rect x="143" y="292" width="1" height="15" fill="rgb(223,155,31)"/><text x="146.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c:694) (1 samples, 0.11%)</title><rect x="143" y="308" width="1" height="15" fill="rgb(245,176,13)"/><text x="146.00" y="318.50"></text></g><g><title>0x7f3945744405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (25 samples, 2.79%)</title><rect x="112" y="244" width="33" height="15" fill="rgb(216,168,49)"/><text x="115.00" y="254.50">0x..</text></g><g><title>0x7f3945743c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="143" y="260" width="2" height="15" fill="rgb(227,57,29)"/><text x="146.00" y="270.50"></text></g><g><title>0x7f394571b529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="143" y="276" width="2" height="15" fill="rgb(218,197,17)"/><text x="146.00" y="286.50"></text></g><g><title>array_getbuffer (buffer.c:801) (1 samples, 0.11%)</title><rect x="144" y="292" width="1" height="15" fill="rgb(217,74,13)"/><text x="147.00" y="302.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.11%)</title><rect x="144" y="308" width="1" height="15" fill="rgb(232,145,11)"/><text x="147.00" y="318.50"></text></g><g><title>0x7f3945734fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (26 samples, 2.91%)</title><rect x="112" y="228" width="35" height="15" fill="rgb(227,203,3)"/><text x="115.00" y="238.50">0x..</text></g><g><title>0x7f3945744540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="145" y="244" width="2" height="15" fill="rgb(211,63,17)"/><text x="148.00" y="254.50"></text></g><g><title>0x7f39457192f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="145" y="260" width="2" height="15" fill="rgb(220,81,47)"/><text x="148.00" y="270.50"></text></g><g><title>0x7f3945718530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="145" y="276" width="2" height="15" fill="rgb(236,209,53)"/><text x="148.00" y="286.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.11%)</title><rect x="145" y="292" width="2" height="15" fill="rgb(244,125,33)"/><text x="148.00" y="302.50"></text></g><g><title>0x7f3945734fd1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="147" y="228" width="1" height="15" fill="rgb(230,73,43)"/><text x="150.00" y="238.50"></text></g><g><title>0x7f3945734ff3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="148" y="228" width="1" height="15" fill="rgb(230,77,23)"/><text x="151.00" y="238.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.22%)</title><rect x="149" y="260" width="3" height="15" fill="rgb(214,148,18)"/><text x="152.00" y="270.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3957) (2 samples, 0.22%)</title><rect x="149" y="276" width="3" height="15" fill="rgb(225,195,6)"/><text x="152.00" y="286.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.11%)</title><rect x="152" y="260" width="1" height="15" fill="rgb(224,185,8)"/><text x="155.00" y="270.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.11%)</title><rect x="152" y="276" width="1" height="15" fill="rgb(227,88,39)"/><text x="155.00" y="286.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.11%)</title><rect x="152" y="292" width="1" height="15" fill="rgb(213,115,5)"/><text x="155.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.11%)</title><rect x="152" y="308" width="1" height="15" fill="rgb(238,197,31)"/><text x="155.00" y="318.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.11%)</title><rect x="152" y="324" width="1" height="15" fill="rgb(240,18,20)"/><text x="155.00" y="334.50"></text></g><g><title>0x7f394573505a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.45%)</title><rect x="149" y="228" width="6" height="15" fill="rgb(246,58,27)"/><text x="152.00" y="238.50"></text></g><g><title>array_take (methods.c:145) (4 samples, 0.45%)</title><rect x="149" y="244" width="6" height="15" fill="rgb(213,40,44)"/><text x="152.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.11%)</title><rect x="153" y="260" width="2" height="15" fill="rgb(252,179,19)"/><text x="156.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="153" y="276" width="2" height="15" fill="rgb(226,95,11)"/><text x="156.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="153" y="292" width="2" height="15" fill="rgb(226,46,49)"/><text x="156.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="153" y="308" width="2" height="15" fill="rgb(213,74,50)"/><text x="156.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.11%)</title><rect x="153" y="324" width="2" height="15" fill="rgb(242,1,21)"/><text x="156.00" y="334.50"></text></g><g><title>0x7f394573513a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="155" y="228" width="1" height="15" fill="rgb(215,98,14)"/><text x="158.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="155" y="244" width="1" height="15" fill="rgb(225,33,26)"/><text x="158.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:931) (1 samples, 0.11%)</title><rect x="155" y="260" width="1" height="15" fill="rgb(209,204,9)"/><text x="158.00" y="270.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (34 samples, 3.80%)</title><rect x="112" y="196" width="45" height="15" fill="rgb(234,146,15)"/><text x="115.00" y="206.50">pred..</text></g><g><title>0x7f3945735d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (34 samples, 3.80%)</title><rect x="112" y="212" width="45" height="15" fill="rgb(248,53,25)"/><text x="115.00" y="222.50">0x7f..</text></g><g><title>0x7f394573514f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="156" y="228" width="1" height="15" fill="rgb(217,115,52)"/><text x="159.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.11%)</title><rect x="156" y="244" width="1" height="15" fill="rgb(231,81,46)"/><text x="159.00" y="254.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.11%)</title><rect x="156" y="260" width="1" height="15" fill="rgb(239,69,47)"/><text x="159.00" y="270.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.11%)</title><rect x="156" y="276" width="1" height="15" fill="rgb(227,110,29)"/><text x="159.00" y="286.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.11%)</title><rect x="156" y="292" width="1" height="15" fill="rgb(247,207,37)"/><text x="159.00" y="302.50"></text></g><g><title>0x7f396bcf1dfb (libc-2.29.so) (1 samples, 0.11%)</title><rect x="156" y="308" width="1" height="15" fill="rgb(206,176,21)"/><text x="159.00" y="318.50"></text></g><g><title>0x7f396bcf0b0a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="156" y="324" width="1" height="15" fill="rgb(208,207,3)"/><text x="159.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (3 samples, 0.34%)</title><rect x="157" y="196" width="4" height="15" fill="rgb(230,41,38)"/><text x="160.00" y="206.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (1 samples, 0.11%)</title><rect x="160" y="212" width="1" height="15" fill="rgb(254,144,15)"/><text x="163.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py:1096) (89 samples, 9.94%)</title><rect x="45" y="180" width="117" height="15" fill="rgb(219,225,5)"/><text x="48.00" y="190.50">&lt;listcomp&gt; (sk..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (1 samples, 0.11%)</title><rect x="161" y="196" width="1" height="15" fill="rgb(230,17,8)"/><text x="164.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.11%)</title><rect x="161" y="212" width="1" height="15" fill="rgb(233,162,52)"/><text x="164.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c:958) (1 samples, 0.11%)</title><rect x="161" y="228" width="1" height="15" fill="rgb(212,80,41)"/><text x="164.00" y="238.50"></text></g><g><title>setArrayFromSequence (ctors.c:540) (1 samples, 0.11%)</title><rect x="164" y="244" width="1" height="15" fill="rgb(249,83,26)"/><text x="167.00" y="254.50"></text></g><g><title>array_item_asarray (mapping.c:1348) (1 samples, 0.11%)</title><rect x="164" y="260" width="1" height="15" fill="rgb(246,36,52)"/><text x="167.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (3 samples, 0.34%)</title><rect x="162" y="180" width="4" height="15" fill="rgb(227,138,53)"/><text x="165.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.22%)</title><rect x="164" y="196" width="2" height="15" fill="rgb(249,95,54)"/><text x="167.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (2 samples, 0.22%)</title><rect x="164" y="212" width="2" height="15" fill="rgb(211,102,18)"/><text x="167.00" y="222.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (2 samples, 0.22%)</title><rect x="164" y="228" width="2" height="15" fill="rgb(248,34,43)"/><text x="167.00" y="238.50"></text></g><g><title>setArrayFromSequence (ctors.c:546) (1 samples, 0.11%)</title><rect x="165" y="244" width="1" height="15" fill="rgb(246,213,51)"/><text x="168.00" y="254.50"></text></g><g><title>setArrayFromSequence (ctors.c:467) (1 samples, 0.11%)</title><rect x="165" y="260" width="1" height="15" fill="rgb(242,111,31)"/><text x="168.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.11%)</title><rect x="165" y="276" width="1" height="15" fill="rgb(220,33,24)"/><text x="168.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.11%)</title><rect x="165" y="292" width="1" height="15" fill="rgb(221,205,45)"/><text x="168.00" y="302.50"></text></g><g><title>0x7f396bd11d94 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="165" y="308" width="1" height="15" fill="rgb(254,185,1)"/><text x="168.00" y="318.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1096) (93 samples, 10.39%)</title><rect x="45" y="164" width="123" height="15" fill="rgb(247,199,35)"/><text x="48.00" y="174.50">_get_median_pre..</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="166" y="180" width="2" height="15" fill="rgb(226,17,6)"/><text x="169.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="166" y="196" width="2" height="15" fill="rgb(237,0,52)"/><text x="169.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.11%)</title><rect x="166" y="212" width="2" height="15" fill="rgb(220,13,25)"/><text x="169.00" y="222.50"></text></g><g><title>DOUBLE_copyswapn (arraytypes.c.src:1914) (1 samples, 0.11%)</title><rect x="170" y="292" width="2" height="15" fill="rgb(232,194,24)"/><text x="173.00" y="302.50"></text></g><g><title>_basic_copyn (arraytypes.c.src:1880) (1 samples, 0.11%)</title><rect x="170" y="308" width="2" height="15" fill="rgb(241,16,54)"/><text x="173.00" y="318.50"></text></g><g><title>_unaligned_strided_byte_copy (ctors.c:302) (1 samples, 0.11%)</title><rect x="172" y="308" width="1" height="15" fill="rgb(227,79,2)"/><text x="175.00" y="318.50"></text></g><g><title>_new_argsortlike (item_selection.c:1048) (4 samples, 0.45%)</title><rect x="170" y="276" width="6" height="15" fill="rgb(232,184,43)"/><text x="173.00" y="286.50"></text></g><g><title>DOUBLE_copyswapn (arraytypes.c.src:1915) (3 samples, 0.34%)</title><rect x="172" y="292" width="4" height="15" fill="rgb(231,149,12)"/><text x="175.00" y="302.50"></text></g><g><title>_unaligned_strided_byte_copy (ctors.c:317) (2 samples, 0.22%)</title><rect x="173" y="308" width="3" height="15" fill="rgb(244,68,43)"/><text x="176.00" y="318.50"></text></g><g><title>_new_argsortlike (item_selection.c:1052) (1 samples, 0.11%)</title><rect x="176" y="276" width="1" height="15" fill="rgb(246,119,15)"/><text x="179.00" y="286.50"></text></g><g><title>aquicksort_double (quicksort.c.src:165) (1 samples, 0.11%)</title><rect x="177" y="292" width="1" height="15" fill="rgb(244,205,2)"/><text x="180.00" y="302.50"></text></g><g><title>aquicksort_double (quicksort.c.src:217) (2 samples, 0.22%)</title><rect x="178" y="292" width="3" height="15" fill="rgb(236,53,1)"/><text x="181.00" y="302.50"></text></g><g><title>aquicksort_double (quicksort.c.src:219) (1 samples, 0.11%)</title><rect x="181" y="292" width="1" height="15" fill="rgb(224,57,44)"/><text x="184.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (9 samples, 1.01%)</title><rect x="177" y="276" width="12" height="15" fill="rgb(238,215,48)"/><text x="180.00" y="286.50"></text></g><g><title>aquicksort_double (quicksort.c.src:222) (5 samples, 0.56%)</title><rect x="182" y="292" width="7" height="15" fill="rgb(207,130,8)"/><text x="185.00" y="302.50"></text></g><g><title>DOUBLE_LT (npysort_common.h:130) (5 samples, 0.56%)</title><rect x="182" y="308" width="7" height="15" fill="rgb(219,205,40)"/><text x="185.00" y="318.50"></text></g><g><title>_new_argsortlike (item_selection.c:1100) (1 samples, 0.11%)</title><rect x="189" y="276" width="1" height="15" fill="rgb(205,136,28)"/><text x="192.00" y="286.50"></text></g><g><title>_new_argsortlike (item_selection.c:1101) (2 samples, 0.22%)</title><rect x="190" y="276" width="3" height="15" fill="rgb(234,102,47)"/><text x="193.00" y="286.50"></text></g><g><title>0x7f396bcf1b05 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="193" y="292" width="1" height="15" fill="rgb(207,46,3)"/><text x="196.00" y="302.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1099) (21 samples, 2.35%)</title><rect x="168" y="164" width="27" height="15" fill="rgb(212,25,6)"/><text x="171.00" y="174.50">_..</text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (20 samples, 2.23%)</title><rect x="169" y="180" width="26" height="15" fill="rgb(207,6,24)"/><text x="172.00" y="190.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (20 samples, 2.23%)</title><rect x="169" y="196" width="26" height="15" fill="rgb(218,122,33)"/><text x="172.00" y="206.50">a..</text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (20 samples, 2.23%)</title><rect x="169" y="212" width="26" height="15" fill="rgb(225,148,32)"/><text x="172.00" y="222.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (20 samples, 2.23%)</title><rect x="169" y="228" width="26" height="15" fill="rgb(233,115,1)"/><text x="172.00" y="238.50">_..</text></g><g><title>array_argsort (methods.c:1395) (19 samples, 2.12%)</title><rect x="170" y="244" width="25" height="15" fill="rgb(226,96,21)"/><text x="173.00" y="254.50">a..</text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (19 samples, 2.12%)</title><rect x="170" y="260" width="25" height="15" fill="rgb(206,206,5)"/><text x="173.00" y="270.50">P..</text></g><g><title>_new_argsortlike (item_selection.c:1116) (2 samples, 0.22%)</title><rect x="193" y="276" width="2" height="15" fill="rgb(227,190,22)"/><text x="196.00" y="286.50"></text></g><g><title>arrayiter_dealloc (iterators.c:392) (1 samples, 0.11%)</title><rect x="194" y="292" width="1" height="15" fill="rgb(212,29,11)"/><text x="197.00" y="302.50"></text></g><g><title>mapiter_trivial_get (lowlevel_strided_loops.c.src:1425) (1 samples, 0.11%)</title><rect x="198" y="196" width="1" height="15" fill="rgb(221,86,28)"/><text x="201.00" y="206.50"></text></g><g><title>check_and_adjust_index (common.h:127) (1 samples, 0.11%)</title><rect x="198" y="212" width="1" height="15" fill="rgb(249,103,20)"/><text x="201.00" y="222.50"></text></g><g><title>mapiter_trivial_get (lowlevel_strided_loops.c.src:1439) (1 samples, 0.11%)</title><rect x="199" y="196" width="2" height="15" fill="rgb(252,134,32)"/><text x="202.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1521) (3 samples, 0.34%)</title><rect x="198" y="180" width="4" height="15" fill="rgb(214,200,40)"/><text x="201.00" y="190.50"></text></g><g><title>mapiter_trivial_get (lowlevel_strided_loops.c.src:1462) (1 samples, 0.11%)</title><rect x="201" y="196" width="1" height="15" fill="rgb(246,128,28)"/><text x="204.00" y="206.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="201" y="212" width="1" height="15" fill="rgb(213,27,20)"/><text x="204.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="202" y="196" width="1" height="15" fill="rgb(249,128,14)"/><text x="205.00" y="206.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3818) (2 samples, 0.22%)</title><rect x="203" y="340" width="3" height="15" fill="rgb(252,17,54)"/><text x="206.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.22%)</title><rect x="203" y="356" width="3" height="15" fill="rgb(241,228,17)"/><text x="206.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (2 samples, 0.22%)</title><rect x="203" y="372" width="3" height="15" fill="rgb(205,201,47)"/><text x="206.00" y="382.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (2 samples, 0.22%)</title><rect x="203" y="388" width="3" height="15" fill="rgb(213,42,26)"/><text x="206.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.22%)</title><rect x="203" y="404" width="3" height="15" fill="rgb(243,147,53)"/><text x="206.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (2 samples, 0.22%)</title><rect x="203" y="420" width="3" height="15" fill="rgb(244,46,41)"/><text x="206.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="205" y="436" width="1" height="15" fill="rgb(225,83,14)"/><text x="208.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.11%)</title><rect x="205" y="452" width="1" height="15" fill="rgb(210,84,25)"/><text x="208.00" y="462.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.11%)</title><rect x="205" y="468" width="1" height="15" fill="rgb(216,54,31)"/><text x="208.00" y="478.50"></text></g><g><title>0x7f396af132d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="205" y="484" width="1" height="15" fill="rgb(248,203,47)"/><text x="208.00" y="494.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:825) (5 samples, 0.56%)</title><rect x="202" y="180" width="7" height="15" fill="rgb(247,197,42)"/><text x="205.00" y="190.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (4 samples, 0.45%)</title><rect x="203" y="196" width="6" height="15" fill="rgb(229,121,49)"/><text x="206.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.45%)</title><rect x="203" y="212" width="6" height="15" fill="rgb(247,203,52)"/><text x="206.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (4 samples, 0.45%)</title><rect x="203" y="228" width="6" height="15" fill="rgb(214,101,46)"/><text x="206.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (4 samples, 0.45%)</title><rect x="203" y="244" width="6" height="15" fill="rgb(232,191,46)"/><text x="206.00" y="254.50"></text></g><g><title>array_cumsum (methods.c:2239) (4 samples, 0.45%)</title><rect x="203" y="260" width="6" height="15" fill="rgb(249,14,23)"/><text x="206.00" y="270.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (4 samples, 0.45%)</title><rect x="203" y="276" width="6" height="15" fill="rgb(246,201,12)"/><text x="206.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (4 samples, 0.45%)</title><rect x="203" y="292" width="6" height="15" fill="rgb(226,127,27)"/><text x="206.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (4 samples, 0.45%)</title><rect x="203" y="308" width="6" height="15" fill="rgb(210,177,53)"/><text x="206.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (4 samples, 0.45%)</title><rect x="203" y="324" width="6" height="15" fill="rgb(210,112,8)"/><text x="206.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3934) (2 samples, 0.22%)</title><rect x="206" y="340" width="3" height="15" fill="rgb(248,86,40)"/><text x="209.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1756) (2 samples, 0.22%)</title><rect x="206" y="356" width="3" height="15" fill="rgb(243,165,11)"/><text x="209.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.11%)</title><rect x="210" y="324" width="1" height="15" fill="rgb(214,77,35)"/><text x="213.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.11%)</title><rect x="211" y="324" width="2" height="15" fill="rgb(216,30,46)"/><text x="214.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.11%)</title><rect x="213" y="340" width="1" height="15" fill="rgb(227,178,8)"/><text x="216.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.11%)</title><rect x="214" y="340" width="1" height="15" fill="rgb(239,213,44)"/><text x="217.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (1 samples, 0.11%)</title><rect x="214" y="356" width="1" height="15" fill="rgb(239,40,29)"/><text x="217.00" y="366.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:826) (6 samples, 0.67%)</title><rect x="209" y="180" width="7" height="15" fill="rgb(242,223,27)"/><text x="212.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (5 samples, 0.56%)</title><rect x="210" y="196" width="6" height="15" fill="rgb(233,89,24)"/><text x="213.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 0.56%)</title><rect x="210" y="212" width="6" height="15" fill="rgb(208,203,46)"/><text x="213.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (5 samples, 0.56%)</title><rect x="210" y="228" width="6" height="15" fill="rgb(230,175,7)"/><text x="213.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (5 samples, 0.56%)</title><rect x="210" y="244" width="6" height="15" fill="rgb(213,227,34)"/><text x="213.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 0.56%)</title><rect x="210" y="260" width="6" height="15" fill="rgb(241,84,34)"/><text x="213.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 0.56%)</title><rect x="210" y="276" width="6" height="15" fill="rgb(205,71,26)"/><text x="213.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 0.56%)</title><rect x="210" y="292" width="6" height="15" fill="rgb(243,225,26)"/><text x="213.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (5 samples, 0.56%)</title><rect x="210" y="308" width="6" height="15" fill="rgb(228,85,21)"/><text x="213.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (3 samples, 0.34%)</title><rect x="213" y="324" width="3" height="15" fill="rgb(214,107,14)"/><text x="216.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.11%)</title><rect x="215" y="340" width="1" height="15" fill="rgb(215,141,40)"/><text x="218.00" y="350.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3896) (1 samples, 0.11%)</title><rect x="218" y="228" width="1" height="15" fill="rgb(249,209,13)"/><text x="221.00" y="238.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.22%)</title><rect x="218" y="212" width="2" height="15" fill="rgb(211,140,29)"/><text x="221.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3899) (1 samples, 0.11%)</title><rect x="219" y="228" width="1" height="15" fill="rgb(247,143,44)"/><text x="222.00" y="238.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:239) (1 samples, 0.11%)</title><rect x="220" y="212" width="2" height="15" fill="rgb(240,120,0)"/><text x="223.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="220" y="228" width="2" height="15" fill="rgb(209,62,29)"/><text x="223.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:932) (1 samples, 0.11%)</title><rect x="220" y="244" width="2" height="15" fill="rgb(245,166,31)"/><text x="223.00" y="254.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:827) (5 samples, 0.56%)</title><rect x="216" y="180" width="7" height="15" fill="rgb(216,144,22)"/><text x="219.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (4 samples, 0.45%)</title><rect x="218" y="196" width="5" height="15" fill="rgb(248,57,28)"/><text x="221.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.11%)</title><rect x="222" y="212" width="1" height="15" fill="rgb(207,131,36)"/><text x="225.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="222" y="228" width="1" height="15" fill="rgb(234,169,43)"/><text x="225.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="222" y="244" width="1" height="15" fill="rgb(224,2,12)"/><text x="225.00" y="254.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="222" y="260" width="1" height="15" fill="rgb(231,187,36)"/><text x="225.00" y="270.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.11%)</title><rect x="222" y="276" width="1" height="15" fill="rgb(207,87,41)"/><text x="225.00" y="286.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.11%)</title><rect x="222" y="292" width="1" height="15" fill="rgb(248,27,28)"/><text x="225.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="222" y="308" width="1" height="15" fill="rgb(251,7,51)"/><text x="225.00" y="318.50"></text></g><g><title>0x7f396bcf36df (libc-2.29.so) (1 samples, 0.11%)</title><rect x="222" y="324" width="1" height="15" fill="rgb(232,117,48)"/><text x="225.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3619) (1 samples, 0.11%)</title><rect x="223" y="292" width="1" height="15" fill="rgb(229,227,24)"/><text x="226.00" y="302.50"></text></g><g><title>0x7f396bd12120 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="223" y="308" width="1" height="15" fill="rgb(241,100,1)"/><text x="226.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.22%)</title><rect x="223" y="276" width="3" height="15" fill="rgb(220,170,26)"/><text x="226.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.11%)</title><rect x="224" y="292" width="2" height="15" fill="rgb(227,74,23)"/><text x="227.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.11%)</title><rect x="224" y="308" width="2" height="15" fill="rgb(241,213,51)"/><text x="227.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.11%)</title><rect x="224" y="324" width="2" height="15" fill="rgb(220,206,10)"/><text x="227.00" y="334.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (3 samples, 0.34%)</title><rect x="223" y="196" width="4" height="15" fill="rgb(222,171,3)"/><text x="226.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.34%)</title><rect x="223" y="212" width="4" height="15" fill="rgb(253,136,30)"/><text x="226.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (3 samples, 0.34%)</title><rect x="223" y="228" width="4" height="15" fill="rgb(226,141,10)"/><text x="226.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (3 samples, 0.34%)</title><rect x="223" y="244" width="4" height="15" fill="rgb(230,19,13)"/><text x="226.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.34%)</title><rect x="223" y="260" width="4" height="15" fill="rgb(245,141,43)"/><text x="226.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4694) (1 samples, 0.11%)</title><rect x="226" y="276" width="1" height="15" fill="rgb(243,21,45)"/><text x="229.00" y="286.50"></text></g><g><title>PyArray_Return (scalarapi.c:864) (1 samples, 0.11%)</title><rect x="226" y="292" width="1" height="15" fill="rgb(236,10,54)"/><text x="229.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="226" y="308" width="1" height="15" fill="rgb(247,2,27)"/><text x="229.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="226" y="324" width="1" height="15" fill="rgb(223,40,26)"/><text x="229.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.11%)</title><rect x="226" y="340" width="1" height="15" fill="rgb(227,146,49)"/><text x="229.00" y="350.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;:4) (3 samples, 0.34%)</title><rect x="227" y="196" width="4" height="15" fill="rgb(251,102,38)"/><text x="230.00" y="206.50"></text></g><g><title>_isclose_dispatcher (numpy/core/numeric.py:2176) (2 samples, 0.22%)</title><rect x="228" y="212" width="3" height="15" fill="rgb(240,210,47)"/><text x="231.00" y="222.50"></text></g><g><title>isclose (numpy/core/numeric.py:2256) (1 samples, 0.11%)</title><rect x="231" y="228" width="1" height="15" fill="rgb(240,145,37)"/><text x="234.00" y="238.50"></text></g><g><title>isclose (numpy/core/numeric.py:2267) (1 samples, 0.11%)</title><rect x="232" y="228" width="2" height="15" fill="rgb(214,198,35)"/><text x="235.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.11%)</title><rect x="232" y="244" width="2" height="15" fill="rgb(243,139,47)"/><text x="235.00" y="254.50"></text></g><g><title>isclose (numpy/core/numeric.py:2271) (1 samples, 0.11%)</title><rect x="234" y="228" width="1" height="15" fill="rgb(214,107,22)"/><text x="237.00" y="238.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="234" y="244" width="1" height="15" fill="rgb(211,5,29)"/><text x="237.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="234" y="260" width="1" height="15" fill="rgb(226,22,5)"/><text x="237.00" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (1 samples, 0.11%)</title><rect x="234" y="276" width="1" height="15" fill="rgb(244,219,6)"/><text x="237.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.11%)</title><rect x="234" y="292" width="1" height="15" fill="rgb(223,52,28)"/><text x="237.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.11%)</title><rect x="234" y="308" width="1" height="15" fill="rgb(253,92,45)"/><text x="237.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.11%)</title><rect x="234" y="324" width="1" height="15" fill="rgb(215,68,2)"/><text x="237.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.11%)</title><rect x="234" y="340" width="1" height="15" fill="rgb(238,115,11)"/><text x="237.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.11%)</title><rect x="234" y="356" width="1" height="15" fill="rgb(209,33,33)"/><text x="237.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.11%)</title><rect x="234" y="372" width="1" height="15" fill="rgb(232,199,27)"/><text x="237.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2144) (1 samples, 0.11%)</title><rect x="234" y="388" width="1" height="15" fill="rgb(240,50,21)"/><text x="237.00" y="398.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:117) (1 samples, 0.11%)</title><rect x="236" y="276" width="2" height="15" fill="rgb(211,169,38)"/><text x="239.00" y="286.50"></text></g><g><title>ufunc_geterr (ufunc_object.c:4807) (1 samples, 0.11%)</title><rect x="236" y="292" width="2" height="15" fill="rgb(237,191,40)"/><text x="239.00" y="302.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2257) (3 samples, 0.34%)</title><rect x="235" y="244" width="4" height="15" fill="rgb(238,192,23)"/><text x="238.00" y="254.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (2 samples, 0.22%)</title><rect x="236" y="260" width="3" height="15" fill="rgb(232,172,43)"/><text x="239.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:135) (1 samples, 0.11%)</title><rect x="238" y="276" width="1" height="15" fill="rgb(232,194,0)"/><text x="241.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:176) (1 samples, 0.11%)</title><rect x="239" y="292" width="1" height="15" fill="rgb(237,62,52)"/><text x="242.00" y="302.50"></text></g><g><title>ufunc_geterr (ufunc_object.c:4807) (1 samples, 0.11%)</title><rect x="239" y="308" width="1" height="15" fill="rgb(253,170,11)"/><text x="242.00" y="318.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:447) (2 samples, 0.22%)</title><rect x="239" y="260" width="3" height="15" fill="rgb(248,152,23)"/><text x="242.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (2 samples, 0.22%)</title><rect x="239" y="276" width="3" height="15" fill="rgb(241,18,47)"/><text x="242.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:185) (1 samples, 0.11%)</title><rect x="240" y="292" width="2" height="15" fill="rgb(214,98,11)"/><text x="243.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="242" y="292" width="1" height="15" fill="rgb(233,181,32)"/><text x="245.00" y="302.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.11%)</title><rect x="242" y="308" width="1" height="15" fill="rgb(245,160,54)"/><text x="245.00" y="318.50"></text></g><g><title>array_add (number.c:330) (2 samples, 0.22%)</title><rect x="242" y="260" width="2" height="15" fill="rgb(229,17,45)"/><text x="245.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="242" y="276" width="2" height="15" fill="rgb(207,71,30)"/><text x="245.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="243" y="292" width="1" height="15" fill="rgb(236,72,36)"/><text x="246.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.11%)</title><rect x="243" y="308" width="1" height="15" fill="rgb(254,6,43)"/><text x="246.00" y="318.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.11%)</title><rect x="243" y="324" width="1" height="15" fill="rgb(219,40,47)"/><text x="246.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="243" y="340" width="1" height="15" fill="rgb(253,206,18)"/><text x="246.00" y="350.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:241) (1 samples, 0.11%)</title><rect x="243" y="356" width="1" height="15" fill="rgb(218,122,21)"/><text x="246.00" y="366.50"></text></g><g><title>sse2_binary_scalar1_add_DOUBLE (simd.inc.src:698) (1 samples, 0.11%)</title><rect x="243" y="372" width="1" height="15" fill="rgb(249,1,18)"/><text x="246.00" y="382.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.11%)</title><rect x="243" y="388" width="1" height="15" fill="rgb(235,211,47)"/><text x="246.00" y="398.50"></text></g><g><title>array_multiply (number.c:354) (1 samples, 0.11%)</title><rect x="244" y="260" width="2" height="15" fill="rgb(216,9,15)"/><text x="247.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="244" y="276" width="2" height="15" fill="rgb(244,23,54)"/><text x="247.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="244" y="292" width="2" height="15" fill="rgb(230,152,4)"/><text x="247.00" y="302.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.11%)</title><rect x="244" y="308" width="2" height="15" fill="rgb(231,94,44)"/><text x="247.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="246" y="276" width="1" height="15" fill="rgb(220,160,19)"/><text x="249.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.11%)</title><rect x="246" y="292" width="1" height="15" fill="rgb(240,122,24)"/><text x="249.00" y="302.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.11%)</title><rect x="246" y="308" width="1" height="15" fill="rgb(243,74,38)"/><text x="249.00" y="318.50"></text></g><g><title>array_subtract (number.c:342) (2 samples, 0.22%)</title><rect x="246" y="260" width="2" height="15" fill="rgb(244,77,29)"/><text x="249.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4766) (1 samples, 0.11%)</title><rect x="247" y="276" width="1" height="15" fill="rgb(221,164,1)"/><text x="250.00" y="286.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1102) (41 samples, 4.58%)</title><rect x="195" y="164" width="54" height="15" fill="rgb(212,214,19)"/><text x="198.00" y="174.50">_get_..</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:828) (20 samples, 2.23%)</title><rect x="223" y="180" width="26" height="15" fill="rgb(237,64,30)"/><text x="226.00" y="190.50">s..</text></g><g><title>isclose (&lt;__array_function__ internals&gt;:6) (14 samples, 1.56%)</title><rect x="231" y="196" width="18" height="15" fill="rgb(221,90,48)"/><text x="234.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (14 samples, 1.56%)</title><rect x="231" y="212" width="18" height="15" fill="rgb(253,104,15)"/><text x="234.00" y="222.50"></text></g><g><title>isclose (numpy/core/numeric.py:2272) (11 samples, 1.23%)</title><rect x="235" y="228" width="14" height="15" fill="rgb(221,209,12)"/><text x="238.00" y="238.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2258) (8 samples, 0.89%)</title><rect x="239" y="244" width="10" height="15" fill="rgb(222,209,38)"/><text x="242.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="248" y="260" width="1" height="15" fill="rgb(229,85,0)"/><text x="251.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.11%)</title><rect x="248" y="276" width="1" height="15" fill="rgb(243,102,31)"/><text x="251.00" y="286.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.11%)</title><rect x="248" y="292" width="1" height="15" fill="rgb(252,33,34)"/><text x="251.00" y="302.50"></text></g><g><title>get_global_ext_obj (extobj.c:164) (1 samples, 0.11%)</title><rect x="248" y="308" width="1" height="15" fill="rgb(223,9,52)"/><text x="251.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="251" y="212" width="1" height="15" fill="rgb(213,69,21)"/><text x="254.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.11%)</title><rect x="251" y="228" width="1" height="15" fill="rgb(216,113,47)"/><text x="254.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1895) (1 samples, 0.11%)</title><rect x="251" y="244" width="1" height="15" fill="rgb(218,179,51)"/><text x="254.00" y="254.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.11%)</title><rect x="251" y="260" width="1" height="15" fill="rgb(246,199,8)"/><text x="254.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="252" y="324" width="1" height="15" fill="rgb(206,192,40)"/><text x="255.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="252" y="340" width="1" height="15" fill="rgb(209,6,23)"/><text x="255.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.11%)</title><rect x="252" y="356" width="1" height="15" fill="rgb(217,190,0)"/><text x="255.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.11%)</title><rect x="252" y="372" width="1" height="15" fill="rgb(241,49,19)"/><text x="255.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="252" y="388" width="1" height="15" fill="rgb(244,23,32)"/><text x="255.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.22%)</title><rect x="252" y="244" width="3" height="15" fill="rgb(230,225,35)"/><text x="255.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.22%)</title><rect x="252" y="260" width="3" height="15" fill="rgb(249,77,19)"/><text x="255.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (2 samples, 0.22%)</title><rect x="252" y="276" width="3" height="15" fill="rgb(207,184,15)"/><text x="255.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (2 samples, 0.22%)</title><rect x="252" y="292" width="3" height="15" fill="rgb(241,95,28)"/><text x="255.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.22%)</title><rect x="252" y="308" width="3" height="15" fill="rgb(207,219,0)"/><text x="255.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.11%)</title><rect x="253" y="324" width="2" height="15" fill="rgb(230,222,50)"/><text x="256.00" y="334.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.11%)</title><rect x="253" y="340" width="2" height="15" fill="rgb(218,103,46)"/><text x="256.00" y="350.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:189) (1 samples, 0.11%)</title><rect x="253" y="356" width="2" height="15" fill="rgb(229,18,51)"/><text x="256.00" y="366.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h:1617) (1 samples, 0.11%)</title><rect x="253" y="372" width="2" height="15" fill="rgb(235,53,18)"/><text x="256.00" y="382.50"></text></g><g><title>array_multiply (number.c:354) (4 samples, 0.45%)</title><rect x="251" y="180" width="5" height="15" fill="rgb(221,206,30)"/><text x="254.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.45%)</title><rect x="251" y="196" width="5" height="15" fill="rgb(229,18,2)"/><text x="254.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.34%)</title><rect x="252" y="212" width="4" height="15" fill="rgb(211,94,15)"/><text x="255.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.34%)</title><rect x="252" y="228" width="4" height="15" fill="rgb(221,189,23)"/><text x="255.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="255" y="244" width="1" height="15" fill="rgb(208,7,14)"/><text x="258.00" y="254.50"></text></g><g><title>DOUBLE_multiply (loops.c.src:1756) (1 samples, 0.11%)</title><rect x="255" y="260" width="1" height="15" fill="rgb(247,94,12)"/><text x="258.00" y="270.50"></text></g><g><title>array_richcompare (arrayobject.c:1506) (1 samples, 0.11%)</title><rect x="256" y="180" width="1" height="15" fill="rgb(244,102,50)"/><text x="259.00" y="190.50"></text></g><g><title>binop_should_defer (binop_override.h:97) (1 samples, 0.11%)</title><rect x="256" y="196" width="1" height="15" fill="rgb(246,196,17)"/><text x="259.00" y="206.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="257" y="244" width="2" height="15" fill="rgb(234,41,0)"/><text x="260.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.11%)</title><rect x="257" y="260" width="2" height="15" fill="rgb(241,88,7)"/><text x="260.00" y="270.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1645) (1 samples, 0.11%)</title><rect x="257" y="276" width="2" height="15" fill="rgb(219,150,3)"/><text x="260.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:324) (1 samples, 0.11%)</title><rect x="259" y="260" width="1" height="15" fill="rgb(250,184,41)"/><text x="262.00" y="270.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c:1773) (1 samples, 0.11%)</title><rect x="259" y="276" width="1" height="15" fill="rgb(244,28,37)"/><text x="262.00" y="286.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1103) (9 samples, 1.01%)</title><rect x="249" y="164" width="12" height="15" fill="rgb(216,13,35)"/><text x="252.00" y="174.50"></text></g><g><title>array_richcompare (arrayobject.c:1509) (3 samples, 0.34%)</title><rect x="257" y="180" width="4" height="15" fill="rgb(238,50,34)"/><text x="260.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.34%)</title><rect x="257" y="196" width="4" height="15" fill="rgb(246,108,43)"/><text x="260.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.34%)</title><rect x="257" y="212" width="4" height="15" fill="rgb(218,18,12)"/><text x="260.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.34%)</title><rect x="257" y="228" width="4" height="15" fill="rgb(254,32,13)"/><text x="260.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.22%)</title><rect x="259" y="244" width="2" height="15" fill="rgb(225,109,29)"/><text x="262.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.11%)</title><rect x="260" y="260" width="1" height="15" fill="rgb(230,132,31)"/><text x="263.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.11%)</title><rect x="260" y="276" width="1" height="15" fill="rgb(222,38,37)"/><text x="263.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.11%)</title><rect x="260" y="292" width="1" height="15" fill="rgb(209,131,51)"/><text x="263.00" y="302.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.11%)</title><rect x="261" y="180" width="2" height="15" fill="rgb(234,11,28)"/><text x="264.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.11%)</title><rect x="263" y="180" width="1" height="15" fill="rgb(224,47,50)"/><text x="266.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.22%)</title><rect x="264" y="180" width="3" height="15" fill="rgb(224,162,28)"/><text x="267.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.22%)</title><rect x="264" y="196" width="3" height="15" fill="rgb(216,53,53)"/><text x="267.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.11%)</title><rect x="265" y="212" width="2" height="15" fill="rgb(207,55,21)"/><text x="268.00" y="222.50"></text></g><g><title>array_arange (multiarraymodule.c:2763) (1 samples, 0.11%)</title><rect x="267" y="180" width="1" height="15" fill="rgb(251,146,22)"/><text x="270.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3451) (1 samples, 0.11%)</title><rect x="267" y="196" width="1" height="15" fill="rgb(250,83,12)"/><text x="270.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="267" y="212" width="1" height="15" fill="rgb(224,171,25)"/><text x="270.00" y="222.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="267" y="228" width="1" height="15" fill="rgb(211,150,19)"/><text x="270.00" y="238.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.11%)</title><rect x="267" y="244" width="1" height="15" fill="rgb(235,166,25)"/><text x="270.00" y="254.50"></text></g><g><title>PyDataMem_NEW (alloc.c:230) (1 samples, 0.11%)</title><rect x="267" y="260" width="1" height="15" fill="rgb(245,93,15)"/><text x="270.00" y="270.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.11%)</title><rect x="268" y="180" width="1" height="15" fill="rgb(226,72,52)"/><text x="271.00" y="190.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (1 samples, 0.11%)</title><rect x="268" y="196" width="1" height="15" fill="rgb(219,62,30)"/><text x="271.00" y="206.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.11%)</title><rect x="268" y="212" width="1" height="15" fill="rgb(220,25,12)"/><text x="271.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="268" y="228" width="1" height="15" fill="rgb(249,117,16)"/><text x="271.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.11%)</title><rect x="268" y="244" width="1" height="15" fill="rgb(214,114,41)"/><text x="271.00" y="254.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.11%)</title><rect x="268" y="260" width="1" height="15" fill="rgb(231,115,31)"/><text x="271.00" y="270.50"></text></g><g><title>npy_uint_alignment (array_assign.c:151) (1 samples, 0.11%)</title><rect x="268" y="276" width="1" height="15" fill="rgb(251,70,28)"/><text x="271.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.11%)</title><rect x="269" y="180" width="2" height="15" fill="rgb(211,161,16)"/><text x="272.00" y="190.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2515) (1 samples, 0.11%)</title><rect x="269" y="196" width="2" height="15" fill="rgb(215,115,38)"/><text x="272.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.11%)</title><rect x="271" y="180" width="1" height="15" fill="rgb(248,85,4)"/><text x="274.00" y="190.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1577) (1 samples, 0.11%)</title><rect x="271" y="196" width="1" height="15" fill="rgb(251,110,50)"/><text x="274.00" y="206.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1106) (9 samples, 1.01%)</title><rect x="261" y="164" width="12" height="15" fill="rgb(216,177,24)"/><text x="264.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.11%)</title><rect x="272" y="180" width="1" height="15" fill="rgb(213,144,31)"/><text x="275.00" y="190.50"></text></g><g><title>arraymapiter_dealloc (mapping.c:3313) (1 samples, 0.11%)</title><rect x="272" y="196" width="1" height="15" fill="rgb(238,51,24)"/><text x="275.00" y="206.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.11%)</title><rect x="272" y="212" width="1" height="15" fill="rgb(215,4,39)"/><text x="275.00" y="222.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="272" y="228" width="1" height="15" fill="rgb(252,192,3)"/><text x="275.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.11%)</title><rect x="273" y="180" width="2" height="15" fill="rgb(242,127,16)"/><text x="276.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.11%)</title><rect x="275" y="196" width="1" height="15" fill="rgb(228,66,9)"/><text x="278.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (2 samples, 0.22%)</title><rect x="275" y="180" width="2" height="15" fill="rgb(250,124,9)"/><text x="278.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1180) (1 samples, 0.11%)</title><rect x="276" y="196" width="1" height="15" fill="rgb(243,118,42)"/><text x="279.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.11%)</title><rect x="277" y="180" width="1" height="15" fill="rgb(212,144,16)"/><text x="280.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.11%)</title><rect x="277" y="196" width="1" height="15" fill="rgb(233,186,28)"/><text x="280.00" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c:2754) (1 samples, 0.11%)</title><rect x="278" y="180" width="2" height="15" fill="rgb(208,127,42)"/><text x="281.00" y="190.50"></text></g><g><title>0x7f396bd07730 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="278" y="196" width="2" height="15" fill="rgb(225,24,3)"/><text x="281.00" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c:2763) (2 samples, 0.22%)</title><rect x="280" y="180" width="2" height="15" fill="rgb(235,194,53)"/><text x="283.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3480) (2 samples, 0.22%)</title><rect x="280" y="196" width="2" height="15" fill="rgb(240,228,45)"/><text x="283.00" y="206.50"></text></g><g><title>LONG_fill (arraytypes.c.src:3710) (2 samples, 0.22%)</title><rect x="280" y="212" width="2" height="15" fill="rgb(219,64,7)"/><text x="283.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.11%)</title><rect x="282" y="180" width="2" height="15" fill="rgb(216,8,10)"/><text x="285.00" y="190.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2968) (1 samples, 0.11%)</title><rect x="282" y="196" width="2" height="15" fill="rgb(223,76,11)"/><text x="285.00" y="206.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.11%)</title><rect x="282" y="212" width="2" height="15" fill="rgb(214,80,44)"/><text x="285.00" y="222.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1109) (9 samples, 1.01%)</title><rect x="273" y="164" width="12" height="15" fill="rgb(245,55,39)"/><text x="276.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.11%)</title><rect x="284" y="180" width="1" height="15" fill="rgb(219,30,2)"/><text x="287.00" y="190.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1581) (1 samples, 0.11%)</title><rect x="284" y="196" width="1" height="15" fill="rgb(250,86,31)"/><text x="287.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:54) (194 samples, 21.68%)</title><rect x="31" y="52" width="255" height="15" fill="rgb(246,184,24)"/><text x="34.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_..</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:53) (194 samples, 21.68%)</title><rect x="31" y="68" width="255" height="15" fill="rgb(236,26,21)"/><text x="34.00" y="78.50">profile_skl (bench_AdaBoostRegress..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:37) (194 samples, 21.68%)</title><rect x="31" y="84" width="255" height="15" fill="rgb(246,201,13)"/><text x="34.00" y="94.50">setup_profile (bench_AdaBoostRegre..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:31) (194 samples, 21.68%)</title><rect x="31" y="100" width="255" height="15" fill="rgb(222,75,14)"/><text x="34.00" y="110.50">profile (bench_AdaBoostRegressor_d..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (194 samples, 21.68%)</title><rect x="31" y="116" width="255" height="15" fill="rgb(219,34,47)"/><text x="34.00" y="126.50">time_predict (mlprodict/asv_benchm..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (194 samples, 21.68%)</title><rect x="31" y="132" width="255" height="15" fill="rgb(227,8,5)"/><text x="34.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/..</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1131) (183 samples, 20.45%)</title><rect x="45" y="148" width="241" height="15" fill="rgb(223,210,45)"/><text x="48.00" y="158.50">predict (sklearn/ensemble/_weigh..</text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.11%)</title><rect x="285" y="164" width="1" height="15" fill="rgb(246,10,53)"/><text x="288.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.11%)</title><rect x="285" y="180" width="1" height="15" fill="rgb(239,175,4)"/><text x="288.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.11%)</title><rect x="285" y="196" width="1" height="15" fill="rgb(253,42,40)"/><text x="288.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.11%)</title><rect x="285" y="212" width="1" height="15" fill="rgb(253,221,48)"/><text x="288.00" y="222.50"></text></g><g><title>0x7f396bcf1aaf (libc-2.29.so) (1 samples, 0.11%)</title><rect x="285" y="228" width="1" height="15" fill="rgb(221,63,45)"/><text x="288.00" y="238.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (1 samples, 0.11%)</title><rect x="288" y="164" width="1" height="15" fill="rgb(251,113,8)"/><text x="291.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (2 samples, 0.22%)</title><rect x="293" y="180" width="3" height="15" fill="rgb(241,50,25)"/><text x="296.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.22%)</title><rect x="296" y="180" width="2" height="15" fill="rgb(209,193,31)"/><text x="299.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:117) (1 samples, 0.11%)</title><rect x="300" y="196" width="1" height="15" fill="rgb(235,127,14)"/><text x="303.00" y="206.50"></text></g><g><title>recursive_tolist (convert.c:100) (3 samples, 0.34%)</title><rect x="304" y="244" width="3" height="15" fill="rgb(206,186,20)"/><text x="307.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c:112) (1 samples, 0.11%)</title><rect x="307" y="260" width="2" height="15" fill="rgb(231,142,7)"/><text x="310.00" y="270.50"></text></g><g><title>recursive_tolist (convert.c:83) (1 samples, 0.11%)</title><rect x="309" y="260" width="1" height="15" fill="rgb(226,201,6)"/><text x="312.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (6 samples, 0.67%)</title><rect x="304" y="212" width="7" height="15" fill="rgb(252,41,36)"/><text x="307.00" y="222.50"></text></g><g><title>PyArray_ToList (convert.c:120) (6 samples, 0.67%)</title><rect x="304" y="228" width="7" height="15" fill="rgb(225,160,37)"/><text x="307.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:102) (3 samples, 0.34%)</title><rect x="307" y="244" width="4" height="15" fill="rgb(214,126,32)"/><text x="310.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c:89) (1 samples, 0.11%)</title><rect x="310" y="260" width="1" height="15" fill="rgb(205,216,40)"/><text x="313.00" y="270.50"></text></g><g><title>PyArray_GETITEM (ndarraytypes.h:1558) (1 samples, 0.11%)</title><rect x="310" y="276" width="1" height="15" fill="rgb(206,155,39)"/><text x="313.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:40) (1 samples, 0.11%)</title><rect x="311" y="212" width="2" height="15" fill="rgb(249,67,4)"/><text x="314.00" y="222.50"></text></g><g><title>prepare_index (mapping.c:491) (1 samples, 0.11%)</title><rect x="313" y="244" width="1" height="15" fill="rgb(243,111,35)"/><text x="316.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.11%)</title><rect x="313" y="260" width="1" height="15" fill="rgb(230,19,10)"/><text x="316.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.11%)</title><rect x="313" y="276" width="1" height="15" fill="rgb(227,105,27)"/><text x="316.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:478) (2 samples, 0.22%)</title><rect x="314" y="308" width="3" height="15" fill="rgb(209,145,9)"/><text x="317.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:127) (2 samples, 0.22%)</title><rect x="319" y="324" width="3" height="15" fill="rgb(250,36,39)"/><text x="322.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:138) (10 samples, 1.12%)</title><rect x="322" y="324" width="13" height="15" fill="rgb(215,211,46)"/><text x="325.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:154) (4 samples, 0.45%)</title><rect x="335" y="324" width="5" height="15" fill="rgb(208,130,33)"/><text x="338.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:41) (2 samples, 0.22%)</title><rect x="340" y="340" width="3" height="15" fill="rgb(244,120,39)"/><text x="343.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:44) (3 samples, 0.34%)</title><rect x="343" y="340" width="4" height="15" fill="rgb(237,79,47)"/><text x="346.00" y="350.50"></text></g><g><title>0x7f396af140a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="346" y="356" width="1" height="15" fill="rgb(251,194,52)"/><text x="349.00" y="366.50"></text></g><g><title>0x7f396af13950 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="351" y="356" width="1" height="15" fill="rgb(245,79,44)"/><text x="354.00" y="366.50"></text></g><g><title>PyInt_Check (npy_3kcompat.h:37) (1 samples, 0.11%)</title><rect x="352" y="356" width="2" height="15" fill="rgb(253,3,17)"/><text x="355.00" y="366.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (6 samples, 0.67%)</title><rect x="347" y="340" width="8" height="15" fill="rgb(232,91,13)"/><text x="350.00" y="350.50"></text></g><g><title>PyInt_Check (npy_3kcompat.h:40) (1 samples, 0.11%)</title><rect x="354" y="356" width="1" height="15" fill="rgb(232,139,46)"/><text x="357.00" y="366.50"></text></g><g><title>_array_find_python_scalar_type (common.c:53) (1 samples, 0.11%)</title><rect x="355" y="340" width="1" height="15" fill="rgb(227,160,36)"/><text x="358.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.11%)</title><rect x="355" y="356" width="1" height="15" fill="rgb(208,157,51)"/><text x="358.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (13 samples, 1.45%)</title><rect x="340" y="324" width="18" height="15" fill="rgb(219,60,47)"/><text x="343.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:77) (1 samples, 0.11%)</title><rect x="356" y="340" width="2" height="15" fill="rgb(219,154,12)"/><text x="359.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:511) (2 samples, 0.22%)</title><rect x="358" y="324" width="2" height="15" fill="rgb(212,19,30)"/><text x="361.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.11%)</title><rect x="363" y="340" width="1" height="15" fill="rgb(250,155,43)"/><text x="366.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1372) (2 samples, 0.22%)</title><rect x="364" y="340" width="3" height="15" fill="rgb(229,229,27)"/><text x="367.00" y="350.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c:1056) (2 samples, 0.22%)</title><rect x="364" y="356" width="3" height="15" fill="rgb(208,202,23)"/><text x="367.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (6 samples, 0.67%)</title><rect x="360" y="324" width="8" height="15" fill="rgb(209,58,39)"/><text x="363.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1386) (1 samples, 0.11%)</title><rect x="367" y="340" width="1" height="15" fill="rgb(233,206,30)"/><text x="370.00" y="350.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (42 samples, 4.69%)</title><rect x="314" y="276" width="55" height="15" fill="rgb(208,50,53)"/><text x="317.00" y="286.50">PyArr..</text></g><g><title>PyArray_DTypeFromObject (common.c:108) (42 samples, 4.69%)</title><rect x="314" y="292" width="55" height="15" fill="rgb(252,114,47)"/><text x="317.00" y="302.50">PyArr..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (40 samples, 4.47%)</title><rect x="317" y="308" width="52" height="15" fill="rgb(245,176,34)"/><text x="320.00" y="318.50">PyArr..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:522) (1 samples, 0.11%)</title><rect x="368" y="324" width="1" height="15" fill="rgb(250,23,4)"/><text x="371.00" y="334.50"></text></g><g><title>discover_dimensions (ctors.c:878) (1 samples, 0.11%)</title><rect x="369" y="292" width="2" height="15" fill="rgb(223,202,32)"/><text x="372.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:883) (3 samples, 0.34%)</title><rect x="371" y="292" width="4" height="15" fill="rgb(217,142,6)"/><text x="374.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:668) (2 samples, 0.22%)</title><rect x="375" y="308" width="2" height="15" fill="rgb(223,23,35)"/><text x="378.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:679) (6 samples, 0.67%)</title><rect x="377" y="308" width="8" height="15" fill="rgb(210,215,36)"/><text x="380.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:693) (4 samples, 0.45%)</title><rect x="385" y="308" width="6" height="15" fill="rgb(222,33,20)"/><text x="388.00" y="318.50"></text></g><g><title>0x7f396af140a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="388" y="324" width="3" height="15" fill="rgb(240,20,21)"/><text x="391.00" y="334.50"></text></g><g><title>discover_dimensions (ctors.c:699) (4 samples, 0.45%)</title><rect x="391" y="308" width="5" height="15" fill="rgb(232,36,36)"/><text x="394.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:703) (5 samples, 0.56%)</title><rect x="396" y="308" width="6" height="15" fill="rgb(213,90,33)"/><text x="399.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:884) (26 samples, 2.91%)</title><rect x="375" y="292" width="34" height="15" fill="rgb(252,47,8)"/><text x="378.00" y="302.50">di..</text></g><g><title>discover_dimensions (ctors.c:912) (5 samples, 0.56%)</title><rect x="402" y="308" width="7" height="15" fill="rgb(235,147,31)"/><text x="405.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (73 samples, 8.16%)</title><rect x="314" y="260" width="96" height="15" fill="rgb(245,77,16)"/><text x="317.00" y="270.50">PyArray_Fro..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (31 samples, 3.46%)</title><rect x="369" y="276" width="41" height="15" fill="rgb(240,170,15)"/><text x="372.00" y="286.50">PyA..</text></g><g><title>discover_dimensions (ctors.c:892) (1 samples, 0.11%)</title><rect x="409" y="292" width="1" height="15" fill="rgb(223,225,10)"/><text x="412.00" y="302.50"></text></g><g><title>setArrayFromSequence (ctors.c:536) (10 samples, 1.12%)</title><rect x="410" y="292" width="13" height="15" fill="rgb(250,22,1)"/><text x="413.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:208) (2 samples, 0.22%)</title><rect x="425" y="324" width="2" height="15" fill="rgb(243,207,35)"/><text x="428.00" y="334.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:212) (3 samples, 0.34%)</title><rect x="427" y="324" width="4" height="15" fill="rgb(241,89,52)"/><text x="430.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:119) (2 samples, 0.22%)</title><rect x="433" y="340" width="2" height="15" fill="rgb(243,149,54)"/><text x="436.00" y="350.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (7 samples, 0.78%)</title><rect x="431" y="324" width="10" height="15" fill="rgb(242,70,36)"/><text x="434.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:123) (4 samples, 0.45%)</title><rect x="435" y="340" width="6" height="15" fill="rgb(213,59,27)"/><text x="438.00" y="350.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:218) (1 samples, 0.11%)</title><rect x="441" y="324" width="1" height="15" fill="rgb(210,122,34)"/><text x="444.00" y="334.50"></text></g><g><title>0x7f396af137c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="441" y="340" width="1" height="15" fill="rgb(227,200,42)"/><text x="444.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1539) (99 samples, 11.06%)</title><rect x="313" y="228" width="130" height="15" fill="rgb(238,199,44)"/><text x="316.00" y="238.50">array_subscript ..</text></g><g><title>prepare_index (mapping.c:516) (98 samples, 10.95%)</title><rect x="314" y="244" width="129" height="15" fill="rgb(241,189,6)"/><text x="317.00" y="254.50">prepare_index (m..</text></g><g><title>PyArray_FromAny (ctors.c:1938) (25 samples, 2.79%)</title><rect x="410" y="260" width="33" height="15" fill="rgb(232,165,54)"/><text x="413.00" y="270.50">Py..</text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (25 samples, 2.79%)</title><rect x="410" y="276" width="33" height="15" fill="rgb(247,85,33)"/><text x="413.00" y="286.50">Py..</text></g><g><title>setArrayFromSequence (ctors.c:550) (15 samples, 1.68%)</title><rect x="423" y="292" width="20" height="15" fill="rgb(218,213,23)"/><text x="426.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (15 samples, 1.68%)</title><rect x="423" y="308" width="20" height="15" fill="rgb(219,216,35)"/><text x="426.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:233) (1 samples, 0.11%)</title><rect x="442" y="324" width="1" height="15" fill="rgb(254,41,21)"/><text x="445.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1584) (2 samples, 0.22%)</title><rect x="443" y="228" width="3" height="15" fill="rgb(241,191,6)"/><text x="446.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:988) (2 samples, 0.22%)</title><rect x="443" y="244" width="3" height="15" fill="rgb(227,148,7)"/><text x="446.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (2 samples, 0.22%)</title><rect x="443" y="260" width="3" height="15" fill="rgb(212,160,14)"/><text x="446.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (2 samples, 0.22%)</title><rect x="443" y="276" width="3" height="15" fill="rgb(217,184,43)"/><text x="446.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (2 samples, 0.22%)</title><rect x="443" y="292" width="3" height="15" fill="rgb(254,86,20)"/><text x="446.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (2 samples, 0.22%)</title><rect x="443" y="308" width="3" height="15" fill="rgb(213,70,50)"/><text x="446.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.22%)</title><rect x="443" y="324" width="3" height="15" fill="rgb(254,57,46)"/><text x="446.00" y="334.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (1 samples, 0.11%)</title><rect x="446" y="244" width="1" height="15" fill="rgb(237,1,40)"/><text x="449.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="446" y="260" width="1" height="15" fill="rgb(249,181,10)"/><text x="449.00" y="270.50"></text></g><g><title>0x7f396bcf3514 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="446" y="276" width="1" height="15" fill="rgb(206,180,18)"/><text x="449.00" y="286.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2937) (1 samples, 0.11%)</title><rect x="447" y="244" width="2" height="15" fill="rgb(214,185,3)"/><text x="450.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:232) (1 samples, 0.11%)</title><rect x="447" y="260" width="2" height="15" fill="rgb(222,162,52)"/><text x="450.00" y="270.50"></text></g><g><title>array_subscript (mapping.c:1656) (3 samples, 0.34%)</title><rect x="446" y="228" width="4" height="15" fill="rgb(252,222,4)"/><text x="449.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:3012) (1 samples, 0.11%)</title><rect x="449" y="244" width="1" height="15" fill="rgb(241,39,15)"/><text x="452.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.11%)</title><rect x="449" y="260" width="1" height="15" fill="rgb(248,159,44)"/><text x="452.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1492) (1 samples, 0.11%)</title><rect x="449" y="276" width="1" height="15" fill="rgb(224,1,27)"/><text x="452.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1572) (1 samples, 0.11%)</title><rect x="450" y="244" width="1" height="15" fill="rgb(244,162,5)"/><text x="453.00" y="254.50"></text></g><g><title>check_and_adjust_index (common.h:110) (1 samples, 0.11%)</title><rect x="450" y="260" width="1" height="15" fill="rgb(241,60,49)"/><text x="453.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (2 samples, 0.22%)</title><rect x="451" y="244" width="3" height="15" fill="rgb(240,222,25)"/><text x="454.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1676) (5 samples, 0.56%)</title><rect x="450" y="228" width="6" height="15" fill="rgb(237,152,17)"/><text x="453.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (2 samples, 0.22%)</title><rect x="454" y="244" width="2" height="15" fill="rgb(217,10,42)"/><text x="457.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.11%)</title><rect x="456" y="228" width="2" height="15" fill="rgb(219,195,0)"/><text x="459.00" y="238.50"></text></g><g><title>arraymapiter_dealloc (mapping.c:3313) (1 samples, 0.11%)</title><rect x="456" y="244" width="2" height="15" fill="rgb(211,208,45)"/><text x="459.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.11%)</title><rect x="456" y="260" width="2" height="15" fill="rgb(229,135,18)"/><text x="459.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (111 samples, 12.40%)</title><rect x="313" y="212" width="146" height="15" fill="rgb(228,32,9)"/><text x="316.00" y="222.50">_run (mlprodict/on..</text></g><g><title>array_subscript (mapping.c:1715) (1 samples, 0.11%)</title><rect x="458" y="228" width="1" height="15" fill="rgb(223,182,18)"/><text x="461.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="458" y="244" width="1" height="15" fill="rgb(235,101,6)"/><text x="461.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="458" y="260" width="1" height="15" fill="rgb(206,57,7)"/><text x="461.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.11%)</title><rect x="458" y="276" width="1" height="15" fill="rgb(239,69,9)"/><text x="461.00" y="286.50"></text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src:816) (2 samples, 0.22%)</title><rect x="459" y="292" width="3" height="15" fill="rgb(230,124,36)"/><text x="462.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (3 samples, 0.34%)</title><rect x="459" y="212" width="4" height="15" fill="rgb(249,170,1)"/><text x="462.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (3 samples, 0.34%)</title><rect x="459" y="228" width="4" height="15" fill="rgb(206,105,27)"/><text x="462.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (3 samples, 0.34%)</title><rect x="459" y="244" width="4" height="15" fill="rgb(246,198,26)"/><text x="462.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.34%)</title><rect x="459" y="260" width="4" height="15" fill="rgb(207,194,39)"/><text x="462.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (3 samples, 0.34%)</title><rect x="459" y="276" width="4" height="15" fill="rgb(215,181,7)"/><text x="462.00" y="286.50"></text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src:855) (1 samples, 0.11%)</title><rect x="462" y="292" width="1" height="15" fill="rgb(211,193,0)"/><text x="465.00" y="302.50"></text></g><g><title>array_cumsum (methods.c:2228) (1 samples, 0.11%)</title><rect x="463" y="292" width="1" height="15" fill="rgb(224,120,17)"/><text x="466.00" y="302.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:261) (1 samples, 0.11%)</title><rect x="464" y="324" width="2" height="15" fill="rgb(208,63,40)"/><text x="467.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3826) (1 samples, 0.11%)</title><rect x="466" y="372" width="1" height="15" fill="rgb(217,176,36)"/><text x="469.00" y="382.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:134) (1 samples, 0.11%)</title><rect x="466" y="388" width="1" height="15" fill="rgb(246,171,41)"/><text x="469.00" y="398.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:37) (1 samples, 0.11%)</title><rect x="466" y="404" width="1" height="15" fill="rgb(218,42,21)"/><text x="469.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1756) (1 samples, 0.11%)</title><rect x="467" y="388" width="1" height="15" fill="rgb(221,98,27)"/><text x="470.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:39) (5 samples, 0.56%)</title><rect x="463" y="212" width="7" height="15" fill="rgb(248,211,17)"/><text x="466.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (5 samples, 0.56%)</title><rect x="463" y="228" width="7" height="15" fill="rgb(218,118,12)"/><text x="466.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 0.56%)</title><rect x="463" y="244" width="7" height="15" fill="rgb(210,141,33)"/><text x="466.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (5 samples, 0.56%)</title><rect x="463" y="260" width="7" height="15" fill="rgb(206,192,6)"/><text x="466.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (5 samples, 0.56%)</title><rect x="463" y="276" width="7" height="15" fill="rgb(216,1,54)"/><text x="466.00" y="286.50"></text></g><g><title>array_cumsum (methods.c:2239) (4 samples, 0.45%)</title><rect x="464" y="292" width="6" height="15" fill="rgb(213,99,45)"/><text x="467.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (4 samples, 0.45%)</title><rect x="464" y="308" width="6" height="15" fill="rgb(248,57,19)"/><text x="467.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (3 samples, 0.34%)</title><rect x="466" y="324" width="4" height="15" fill="rgb(212,138,51)"/><text x="469.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (3 samples, 0.34%)</title><rect x="466" y="340" width="4" height="15" fill="rgb(224,149,26)"/><text x="469.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (3 samples, 0.34%)</title><rect x="466" y="356" width="4" height="15" fill="rgb(224,195,32)"/><text x="469.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3934) (2 samples, 0.22%)</title><rect x="467" y="372" width="3" height="15" fill="rgb(221,10,32)"/><text x="470.00" y="382.50"></text></g><g><title>npyiter_iternext_itflags0_dims1_iters2 (nditer_templ.c.src:77) (1 samples, 0.11%)</title><rect x="468" y="388" width="2" height="15" fill="rgb(220,176,42)"/><text x="471.00" y="398.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="470" y="228" width="1" height="15" fill="rgb(206,54,38)"/><text x="473.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:21) (2 samples, 0.22%)</title><rect x="470" y="212" width="2" height="15" fill="rgb(245,27,50)"/><text x="473.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="471" y="228" width="1" height="15" fill="rgb(252,169,9)"/><text x="474.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="471" y="244" width="1" height="15" fill="rgb(242,71,14)"/><text x="474.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (1 samples, 0.11%)</title><rect x="471" y="260" width="1" height="15" fill="rgb(217,68,1)"/><text x="474.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.11%)</title><rect x="471" y="276" width="1" height="15" fill="rgb(244,50,33)"/><text x="474.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:57) (1 samples, 0.11%)</title><rect x="472" y="276" width="2" height="15" fill="rgb(248,12,5)"/><text x="475.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:22) (3 samples, 0.34%)</title><rect x="472" y="212" width="4" height="15" fill="rgb(253,160,39)"/><text x="475.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (3 samples, 0.34%)</title><rect x="472" y="228" width="4" height="15" fill="rgb(216,8,34)"/><text x="475.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.34%)</title><rect x="472" y="244" width="4" height="15" fill="rgb(252,128,4)"/><text x="475.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (3 samples, 0.34%)</title><rect x="472" y="260" width="4" height="15" fill="rgb(222,89,31)"/><text x="475.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.22%)</title><rect x="474" y="276" width="2" height="15" fill="rgb(252,137,26)"/><text x="477.00" y="286.50"></text></g><g><title>array_swapaxes (methods.c:348) (1 samples, 0.11%)</title><rect x="475" y="292" width="1" height="15" fill="rgb(235,34,25)"/><text x="478.00" y="302.50"></text></g><g><title>PyArray_SwapAxes (shape.c:657) (1 samples, 0.11%)</title><rect x="475" y="308" width="1" height="15" fill="rgb(247,171,43)"/><text x="478.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.11%)</title><rect x="475" y="324" width="1" height="15" fill="rgb(241,150,43)"/><text x="478.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.11%)</title><rect x="475" y="340" width="1" height="15" fill="rgb(220,207,47)"/><text x="478.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.11%)</title><rect x="475" y="356" width="1" height="15" fill="rgb(223,229,46)"/><text x="478.00" y="366.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.11%)</title><rect x="475" y="372" width="1" height="15" fill="rgb(239,177,17)"/><text x="478.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.11%)</title><rect x="475" y="388" width="1" height="15" fill="rgb(232,187,19)"/><text x="478.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="475" y="404" width="1" height="15" fill="rgb(223,6,47)"/><text x="478.00" y="414.50"></text></g><g><title>array_choose (methods.c:1218) (1 samples, 0.11%)</title><rect x="476" y="292" width="2" height="15" fill="rgb(247,113,13)"/><text x="479.00" y="302.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.11%)</title><rect x="476" y="308" width="2" height="15" fill="rgb(242,1,53)"/><text x="479.00" y="318.50"></text></g><g><title>PyArray_NewCopy (convert.c:556) (1 samples, 0.11%)</title><rect x="478" y="340" width="1" height="15" fill="rgb(237,50,15)"/><text x="481.00" y="350.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.11%)</title><rect x="478" y="356" width="1" height="15" fill="rgb(211,97,44)"/><text x="481.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.11%)</title><rect x="478" y="372" width="1" height="15" fill="rgb(243,183,18)"/><text x="481.00" y="382.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.11%)</title><rect x="478" y="388" width="1" height="15" fill="rgb(243,151,29)"/><text x="481.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="478" y="404" width="1" height="15" fill="rgb(218,135,2)"/><text x="481.00" y="414.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="478" y="420" width="1" height="15" fill="rgb(219,7,41)"/><text x="481.00" y="430.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.11%)</title><rect x="478" y="436" width="1" height="15" fill="rgb(253,73,7)"/><text x="481.00" y="446.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.11%)</title><rect x="478" y="452" width="1" height="15" fill="rgb(234,108,23)"/><text x="481.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="478" y="468" width="1" height="15" fill="rgb(241,151,16)"/><text x="481.00" y="478.50"></text></g><g><title>0x7f396bcf2d5e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="478" y="484" width="1" height="15" fill="rgb(217,151,21)"/><text x="481.00" y="494.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.11%)</title><rect x="479" y="372" width="1" height="15" fill="rgb(253,217,18)"/><text x="482.00" y="382.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="479" y="388" width="1" height="15" fill="rgb(217,41,5)"/><text x="482.00" y="398.50"></text></g><g><title>_aligned_strided_to_contig_size4 (lowlevel_strided_loops.c.src:133) (2 samples, 0.22%)</title><rect x="480" y="388" width="3" height="15" fill="rgb(250,149,2)"/><text x="483.00" y="398.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (3 samples, 0.34%)</title><rect x="480" y="372" width="4" height="15" fill="rgb(251,111,4)"/><text x="483.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size8 (lowlevel_strided_loops.c.src:169) (1 samples, 0.11%)</title><rect x="483" y="388" width="1" height="15" fill="rgb(248,118,52)"/><text x="486.00" y="398.50"></text></g><g><title>PyArray_Choose (item_selection.c:687) (6 samples, 0.67%)</title><rect x="478" y="308" width="7" height="15" fill="rgb(205,159,19)"/><text x="481.00" y="318.50"></text></g><g><title>PyArray_ConvertToCommonType (convert_datatype.c:2150) (6 samples, 0.67%)</title><rect x="478" y="324" width="7" height="15" fill="rgb(207,169,23)"/><text x="481.00" y="334.50"></text></g><g><title>PyArray_NewCopy (convert.c:560) (5 samples, 0.56%)</title><rect x="479" y="340" width="6" height="15" fill="rgb(241,44,24)"/><text x="482.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (5 samples, 0.56%)</title><rect x="479" y="356" width="6" height="15" fill="rgb(209,2,35)"/><text x="482.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.11%)</title><rect x="484" y="372" width="1" height="15" fill="rgb(251,49,35)"/><text x="487.00" y="382.50"></text></g><g><title>multiiter_new_impl (iterators.c:1262) (2 samples, 0.22%)</title><rect x="485" y="340" width="3" height="15" fill="rgb(234,67,0)"/><text x="488.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="487" y="356" width="1" height="15" fill="rgb(226,148,0)"/><text x="490.00" y="366.50"></text></g><g><title>PyArray_Choose (item_selection.c:702) (3 samples, 0.34%)</title><rect x="485" y="308" width="4" height="15" fill="rgb(214,8,35)"/><text x="488.00" y="318.50"></text></g><g><title>PyArray_MultiIterFromObjects (iterators.c:1357) (3 samples, 0.34%)</title><rect x="485" y="324" width="4" height="15" fill="rgb(241,225,7)"/><text x="488.00" y="334.50"></text></g><g><title>multiiter_new_impl (iterators.c:1296) (1 samples, 0.11%)</title><rect x="488" y="340" width="1" height="15" fill="rgb(252,130,30)"/><text x="491.00" y="350.50"></text></g><g><title>PyArray_IterNew (iterators.c:183) (1 samples, 0.11%)</title><rect x="488" y="356" width="1" height="15" fill="rgb(240,117,50)"/><text x="491.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="488" y="372" width="1" height="15" fill="rgb(218,138,19)"/><text x="491.00" y="382.50"></text></g><g><title>0x7f396bcf3453 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="488" y="388" width="1" height="15" fill="rgb(236,57,38)"/><text x="491.00" y="398.50"></text></g><g><title>PyArray_Choose (item_selection.c:709) (1 samples, 0.11%)</title><rect x="489" y="308" width="2" height="15" fill="rgb(226,150,41)"/><text x="492.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="489" y="324" width="2" height="15" fill="rgb(237,195,16)"/><text x="492.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.11%)</title><rect x="489" y="340" width="2" height="15" fill="rgb(251,14,49)"/><text x="492.00" y="350.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.11%)</title><rect x="489" y="356" width="2" height="15" fill="rgb(223,105,12)"/><text x="492.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.11%)</title><rect x="489" y="372" width="2" height="15" fill="rgb(242,181,24)"/><text x="492.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="489" y="388" width="2" height="15" fill="rgb(227,75,36)"/><text x="492.00" y="398.50"></text></g><g><title>0x7f396bcf3573 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="489" y="404" width="2" height="15" fill="rgb(218,81,21)"/><text x="492.00" y="414.50"></text></g><g><title>PyArray_Choose (item_selection.c:757) (2 samples, 0.22%)</title><rect x="491" y="308" width="2" height="15" fill="rgb(253,16,47)"/><text x="494.00" y="318.50"></text></g><g><title>PyArray_Choose (item_selection.c:786) (3 samples, 0.34%)</title><rect x="493" y="308" width="4" height="15" fill="rgb(215,2,22)"/><text x="496.00" y="318.50"></text></g><g><title>PyArray_Choose (item_selection.c:788) (8 samples, 0.89%)</title><rect x="497" y="308" width="11" height="15" fill="rgb(242,181,12)"/><text x="500.00" y="318.50"></text></g><g><title>0x7f396bd11d50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="507" y="324" width="1" height="15" fill="rgb(229,160,11)"/><text x="510.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:23) (25 samples, 2.79%)</title><rect x="476" y="212" width="33" height="15" fill="rgb(239,132,12)"/><text x="479.00" y="222.50">_r..</text></g><g><title>choose (&lt;__array_function__ internals&gt;:6) (25 samples, 2.79%)</title><rect x="476" y="228" width="33" height="15" fill="rgb(244,96,34)"/><text x="479.00" y="238.50">ch..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (25 samples, 2.79%)</title><rect x="476" y="244" width="33" height="15" fill="rgb(249,66,39)"/><text x="479.00" y="254.50">ar..</text></g><g><title>choose (numpy/core/fromnumeric.py:432) (25 samples, 2.79%)</title><rect x="476" y="260" width="33" height="15" fill="rgb(238,99,25)"/><text x="479.00" y="270.50">ch..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (25 samples, 2.79%)</title><rect x="476" y="276" width="33" height="15" fill="rgb(210,50,35)"/><text x="479.00" y="286.50">_w..</text></g><g><title>array_choose (methods.c:1224) (24 samples, 2.68%)</title><rect x="478" y="292" width="31" height="15" fill="rgb(227,157,35)"/><text x="481.00" y="302.50">ar..</text></g><g><title>PyArray_Choose (item_selection.c:798) (1 samples, 0.11%)</title><rect x="508" y="308" width="1" height="15" fill="rgb(243,13,4)"/><text x="511.00" y="318.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.11%)</title><rect x="508" y="324" width="1" height="15" fill="rgb(237,216,8)"/><text x="511.00" y="334.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.11%)</title><rect x="508" y="340" width="1" height="15" fill="rgb(224,32,39)"/><text x="511.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.11%)</title><rect x="509" y="244" width="2" height="15" fill="rgb(221,159,53)"/><text x="512.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:24) (3 samples, 0.34%)</title><rect x="509" y="212" width="4" height="15" fill="rgb(230,60,44)"/><text x="512.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (3 samples, 0.34%)</title><rect x="509" y="228" width="4" height="15" fill="rgb(230,173,25)"/><text x="512.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.22%)</title><rect x="511" y="244" width="2" height="15" fill="rgb(232,122,36)"/><text x="514.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (1 samples, 0.11%)</title><rect x="512" y="260" width="1" height="15" fill="rgb(208,116,31)"/><text x="515.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.11%)</title><rect x="512" y="276" width="1" height="15" fill="rgb(244,121,34)"/><text x="515.00" y="286.50"></text></g><g><title>array_swapaxes (methods.c:348) (1 samples, 0.11%)</title><rect x="512" y="292" width="1" height="15" fill="rgb(243,34,51)"/><text x="515.00" y="302.50"></text></g><g><title>PyArray_SwapAxes (shape.c:657) (1 samples, 0.11%)</title><rect x="512" y="308" width="1" height="15" fill="rgb(244,210,44)"/><text x="515.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c:727) (1 samples, 0.11%)</title><rect x="512" y="324" width="1" height="15" fill="rgb(245,51,10)"/><text x="515.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (1 samples, 0.11%)</title><rect x="513" y="212" width="1" height="15" fill="rgb(244,153,39)"/><text x="516.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.11%)</title><rect x="513" y="228" width="1" height="15" fill="rgb(243,198,22)"/><text x="516.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.11%)</title><rect x="513" y="244" width="1" height="15" fill="rgb(219,151,48)"/><text x="516.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.11%)</title><rect x="513" y="260" width="1" height="15" fill="rgb(225,225,46)"/><text x="516.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.11%)</title><rect x="513" y="276" width="1" height="15" fill="rgb(215,139,24)"/><text x="516.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.11%)</title><rect x="513" y="292" width="1" height="15" fill="rgb(244,206,26)"/><text x="516.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c:1027) (1 samples, 0.11%)</title><rect x="516" y="356" width="1" height="15" fill="rgb(227,6,54)"/><text x="519.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1052) (2 samples, 0.22%)</title><rect x="517" y="356" width="3" height="15" fill="rgb(240,19,19)"/><text x="520.00" y="366.50"></text></g><g><title>aintroselect_float (selection.c.src:292) (1 samples, 0.11%)</title><rect x="520" y="372" width="1" height="15" fill="rgb(239,203,31)"/><text x="523.00" y="382.50"></text></g><g><title>aintroselect_float (selection.c.src:321) (1 samples, 0.11%)</title><rect x="521" y="372" width="1" height="15" fill="rgb(247,91,15)"/><text x="524.00" y="382.50"></text></g><g><title>aintroselect_float (selection.c.src:331) (1 samples, 0.11%)</title><rect x="522" y="372" width="2" height="15" fill="rgb(207,227,48)"/><text x="525.00" y="382.50"></text></g><g><title>_new_argsortlike (item_selection.c:1084) (5 samples, 0.56%)</title><rect x="520" y="356" width="6" height="15" fill="rgb(242,82,29)"/><text x="523.00" y="366.50"></text></g><g><title>aintroselect_float (selection.c.src:332) (2 samples, 0.22%)</title><rect x="524" y="372" width="2" height="15" fill="rgb(214,76,8)"/><text x="527.00" y="382.50"></text></g><g><title>FLOAT_LT (npysort_common.h:123) (1 samples, 0.11%)</title><rect x="525" y="388" width="1" height="15" fill="rgb(216,221,19)"/><text x="528.00" y="398.50"></text></g><g><title>_new_argsortlike (item_selection.c:1100) (1 samples, 0.11%)</title><rect x="526" y="356" width="2" height="15" fill="rgb(226,90,4)"/><text x="529.00" y="366.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:34) (14 samples, 1.56%)</title><rect x="514" y="244" width="19" height="15" fill="rgb(218,32,17)"/><text x="517.00" y="254.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (14 samples, 1.56%)</title><rect x="514" y="260" width="19" height="15" fill="rgb(250,144,35)"/><text x="517.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (14 samples, 1.56%)</title><rect x="514" y="276" width="19" height="15" fill="rgb(217,20,24)"/><text x="517.00" y="286.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (14 samples, 1.56%)</title><rect x="514" y="292" width="19" height="15" fill="rgb(244,16,35)"/><text x="517.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (13 samples, 1.45%)</title><rect x="516" y="308" width="17" height="15" fill="rgb(224,26,38)"/><text x="519.00" y="318.50"></text></g><g><title>array_argpartition (methods.c:1454) (13 samples, 1.45%)</title><rect x="516" y="324" width="17" height="15" fill="rgb(245,205,36)"/><text x="519.00" y="334.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (13 samples, 1.45%)</title><rect x="516" y="340" width="17" height="15" fill="rgb(251,159,13)"/><text x="519.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1101) (4 samples, 0.45%)</title><rect x="528" y="356" width="5" height="15" fill="rgb(212,89,28)"/><text x="531.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1022) (3 samples, 0.34%)</title><rect x="533" y="356" width="4" height="15" fill="rgb(226,91,32)"/><text x="536.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1052) (3 samples, 0.34%)</title><rect x="537" y="356" width="4" height="15" fill="rgb(239,156,50)"/><text x="540.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1061) (1 samples, 0.11%)</title><rect x="541" y="356" width="1" height="15" fill="rgb(216,205,20)"/><text x="544.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src:217) (2 samples, 0.22%)</title><rect x="542" y="372" width="3" height="15" fill="rgb(228,199,22)"/><text x="545.00" y="382.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (4 samples, 0.45%)</title><rect x="542" y="356" width="5" height="15" fill="rgb(234,203,35)"/><text x="545.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src:222) (2 samples, 0.22%)</title><rect x="545" y="372" width="2" height="15" fill="rgb(216,107,30)"/><text x="548.00" y="382.50"></text></g><g><title>FLOAT_LT (npysort_common.h:123) (1 samples, 0.11%)</title><rect x="546" y="388" width="1" height="15" fill="rgb(224,67,10)"/><text x="549.00" y="398.50"></text></g><g><title>_new_argsortlike (item_selection.c:1100) (1 samples, 0.11%)</title><rect x="547" y="356" width="2" height="15" fill="rgb(228,156,15)"/><text x="550.00" y="366.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (17 samples, 1.90%)</title><rect x="533" y="260" width="22" height="15" fill="rgb(208,143,7)"/><text x="536.00" y="270.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (17 samples, 1.90%)</title><rect x="533" y="276" width="22" height="15" fill="rgb(241,143,41)"/><text x="536.00" y="286.50">a..</text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (17 samples, 1.90%)</title><rect x="533" y="292" width="22" height="15" fill="rgb(235,56,16)"/><text x="536.00" y="302.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (17 samples, 1.90%)</title><rect x="533" y="308" width="22" height="15" fill="rgb(237,227,39)"/><text x="536.00" y="318.50">_..</text></g><g><title>array_argsort (methods.c:1395) (17 samples, 1.90%)</title><rect x="533" y="324" width="22" height="15" fill="rgb(246,90,37)"/><text x="536.00" y="334.50">a..</text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (17 samples, 1.90%)</title><rect x="533" y="340" width="22" height="15" fill="rgb(237,143,29)"/><text x="536.00" y="350.50">P..</text></g><g><title>_new_argsortlike (item_selection.c:1101) (5 samples, 0.56%)</title><rect x="549" y="356" width="6" height="15" fill="rgb(231,219,52)"/><text x="552.00" y="366.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (1 samples, 0.11%)</title><rect x="555" y="276" width="2" height="15" fill="rgb(236,173,5)"/><text x="558.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.11%)</title><rect x="555" y="292" width="2" height="15" fill="rgb(215,64,4)"/><text x="558.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.11%)</title><rect x="555" y="308" width="2" height="15" fill="rgb(205,96,32)"/><text x="558.00" y="318.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2288) (1 samples, 0.11%)</title><rect x="555" y="324" width="2" height="15" fill="rgb(242,186,2)"/><text x="558.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.11%)</title><rect x="557" y="340" width="1" height="15" fill="rgb(221,148,17)"/><text x="560.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="558" y="340" width="1" height="15" fill="rgb(231,171,0)"/><text x="561.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.11%)</title><rect x="559" y="356" width="2" height="15" fill="rgb(218,49,43)"/><text x="562.00" y="366.50"></text></g><g><title>array_subscript (mapping.c:1656) (5 samples, 0.56%)</title><rect x="555" y="260" width="7" height="15" fill="rgb(229,174,36)"/><text x="558.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (4 samples, 0.45%)</title><rect x="557" y="276" width="5" height="15" fill="rgb(239,8,32)"/><text x="560.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (4 samples, 0.45%)</title><rect x="557" y="292" width="5" height="15" fill="rgb(223,106,35)"/><text x="560.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (4 samples, 0.45%)</title><rect x="557" y="308" width="5" height="15" fill="rgb(231,117,5)"/><text x="560.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.45%)</title><rect x="557" y="324" width="5" height="15" fill="rgb(241,215,10)"/><text x="560.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.22%)</title><rect x="559" y="340" width="3" height="15" fill="rgb(250,45,26)"/><text x="562.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.11%)</title><rect x="561" y="356" width="1" height="15" fill="rgb(232,11,15)"/><text x="564.00" y="366.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2515) (1 samples, 0.11%)</title><rect x="562" y="276" width="1" height="15" fill="rgb(247,182,37)"/><text x="565.00" y="286.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2517) (1 samples, 0.11%)</title><rect x="563" y="276" width="2" height="15" fill="rgb(253,191,52)"/><text x="566.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h:110) (1 samples, 0.11%)</title><rect x="563" y="292" width="2" height="15" fill="rgb(248,56,10)"/><text x="566.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1666) (3 samples, 0.34%)</title><rect x="562" y="260" width="4" height="15" fill="rgb(225,209,19)"/><text x="565.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2521) (1 samples, 0.11%)</title><rect x="565" y="276" width="1" height="15" fill="rgb(251,221,10)"/><text x="568.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1564) (1 samples, 0.11%)</title><rect x="566" y="276" width="1" height="15" fill="rgb(244,77,19)"/><text x="569.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1566) (7 samples, 0.78%)</title><rect x="567" y="276" width="9" height="15" fill="rgb(220,208,1)"/><text x="570.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1577) (3 samples, 0.34%)</title><rect x="576" y="276" width="4" height="15" fill="rgb(243,123,1)"/><text x="579.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1581) (2 samples, 0.22%)</title><rect x="580" y="276" width="3" height="15" fill="rgb(206,58,13)"/><text x="583.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1584) (2 samples, 0.22%)</title><rect x="583" y="276" width="3" height="15" fill="rgb(251,24,54)"/><text x="586.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (1 samples, 0.11%)</title><rect x="586" y="276" width="1" height="15" fill="rgb(230,46,0)"/><text x="589.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1676) (17 samples, 1.90%)</title><rect x="566" y="260" width="22" height="15" fill="rgb(207,4,39)"/><text x="569.00" y="270.50">a..</text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.11%)</title><rect x="587" y="276" width="1" height="15" fill="rgb(249,122,5)"/><text x="590.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="588" y="260" width="2" height="15" fill="rgb(241,37,6)"/><text x="591.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:459) (1 samples, 0.11%)</title><rect x="588" y="276" width="2" height="15" fill="rgb(224,159,3)"/><text x="591.00" y="286.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:38) (44 samples, 4.92%)</title><rect x="533" y="244" width="58" height="15" fill="rgb(247,37,15)"/><text x="536.00" y="254.50">topk_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="590" y="260" width="1" height="15" fill="rgb(207,103,15)"/><text x="593.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="590" y="276" width="1" height="15" fill="rgb(242,201,37)"/><text x="593.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.11%)</title><rect x="590" y="292" width="1" height="15" fill="rgb(247,61,23)"/><text x="593.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="590" y="308" width="1" height="15" fill="rgb(241,165,8)"/><text x="593.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="590" y="324" width="1" height="15" fill="rgb(241,14,2)"/><text x="593.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="590" y="340" width="1" height="15" fill="rgb(210,122,14)"/><text x="593.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.11%)</title><rect x="590" y="356" width="1" height="15" fill="rgb(206,170,1)"/><text x="593.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.11%)</title><rect x="590" y="372" width="1" height="15" fill="rgb(233,93,0)"/><text x="593.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="590" y="388" width="1" height="15" fill="rgb(221,18,15)"/><text x="593.00" y="398.50"></text></g><g><title>0x7f396bcf2b12 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="590" y="404" width="1" height="15" fill="rgb(210,178,40)"/><text x="593.00" y="414.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (1 samples, 0.11%)</title><rect x="591" y="276" width="1" height="15" fill="rgb(254,226,46)"/><text x="594.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="591" y="292" width="1" height="15" fill="rgb(220,196,5)"/><text x="594.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.11%)</title><rect x="592" y="340" width="2" height="15" fill="rgb(210,179,0)"/><text x="595.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="594" y="340" width="1" height="15" fill="rgb(221,105,7)"/><text x="597.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.11%)</title><rect x="595" y="340" width="1" height="15" fill="rgb(238,51,42)"/><text x="598.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.11%)</title><rect x="595" y="356" width="1" height="15" fill="rgb(231,96,15)"/><text x="598.00" y="366.50"></text></g><g><title>array_subscript (mapping.c:1656) (5 samples, 0.56%)</title><rect x="591" y="260" width="7" height="15" fill="rgb(245,79,10)"/><text x="594.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (4 samples, 0.45%)</title><rect x="592" y="276" width="6" height="15" fill="rgb(240,42,27)"/><text x="595.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (4 samples, 0.45%)</title><rect x="592" y="292" width="6" height="15" fill="rgb(209,117,7)"/><text x="595.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (4 samples, 0.45%)</title><rect x="592" y="308" width="6" height="15" fill="rgb(232,40,15)"/><text x="595.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.45%)</title><rect x="592" y="324" width="6" height="15" fill="rgb(240,189,3)"/><text x="595.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1025) (1 samples, 0.11%)</title><rect x="596" y="340" width="2" height="15" fill="rgb(247,213,23)"/><text x="599.00" y="350.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2515) (1 samples, 0.11%)</title><rect x="598" y="276" width="1" height="15" fill="rgb(215,88,23)"/><text x="601.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1666) (2 samples, 0.22%)</title><rect x="598" y="260" width="2" height="15" fill="rgb(206,223,53)"/><text x="601.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2517) (1 samples, 0.11%)</title><rect x="599" y="276" width="1" height="15" fill="rgb(210,193,38)"/><text x="602.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h:110) (1 samples, 0.11%)</title><rect x="599" y="292" width="1" height="15" fill="rgb(232,116,29)"/><text x="602.00" y="302.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1564) (3 samples, 0.34%)</title><rect x="600" y="276" width="4" height="15" fill="rgb(223,147,48)"/><text x="603.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1577) (2 samples, 0.22%)</title><rect x="604" y="276" width="3" height="15" fill="rgb(209,119,40)"/><text x="607.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1584) (2 samples, 0.22%)</title><rect x="607" y="276" width="2" height="15" fill="rgb(227,151,19)"/><text x="610.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (2 samples, 0.22%)</title><rect x="609" y="276" width="3" height="15" fill="rgb(253,15,40)"/><text x="612.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py:137) (76 samples, 8.49%)</title><rect x="514" y="212" width="101" height="15" fill="rgb(219,186,16)"/><text x="517.00" y="222.50">_run (mlprod..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:75) (76 samples, 8.49%)</title><rect x="514" y="228" width="101" height="15" fill="rgb(230,122,12)"/><text x="517.00" y="238.50">_common_run ..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:39) (18 samples, 2.01%)</title><rect x="591" y="244" width="24" height="15" fill="rgb(211,220,0)"/><text x="594.00" y="254.50">t..</text></g><g><title>array_subscript (mapping.c:1676) (11 samples, 1.23%)</title><rect x="600" y="260" width="15" height="15" fill="rgb(222,170,17)"/><text x="603.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (2 samples, 0.22%)</title><rect x="612" y="276" width="3" height="15" fill="rgb(248,192,50)"/><text x="615.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (239 samples, 26.70%)</title><rect x="301" y="196" width="315" height="15" fill="rgb(234,7,53)"/><text x="304.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:118)</text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.11%)</title><rect x="615" y="212" width="1" height="15" fill="rgb(222,21,36)"/><text x="618.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="615" y="228" width="1" height="15" fill="rgb(212,142,29)"/><text x="618.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.11%)</title><rect x="615" y="244" width="1" height="15" fill="rgb(207,136,8)"/><text x="618.00" y="254.50"></text></g><g><title>PyArray_ArgMin (calculation.c:201) (1 samples, 0.11%)</title><rect x="617" y="356" width="2" height="15" fill="rgb(252,223,34)"/><text x="620.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.11%)</title><rect x="617" y="372" width="2" height="15" fill="rgb(224,108,30)"/><text x="620.00" y="382.50"></text></g><g><title>PyArray_FromArray (ctors.c:2149) (1 samples, 0.11%)</title><rect x="617" y="388" width="2" height="15" fill="rgb(206,7,14)"/><text x="620.00" y="398.50"></text></g><g><title>FLOAT_argmin (arraytypes.c.src:3199) (1 samples, 0.11%)</title><rect x="619" y="372" width="1" height="15" fill="rgb(207,192,19)"/><text x="622.00" y="382.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:13) (5 samples, 0.56%)</title><rect x="616" y="260" width="7" height="15" fill="rgb(226,183,31)"/><text x="619.00" y="270.50"></text></g><g><title>argmin (&lt;__array_function__ internals&gt;:6) (4 samples, 0.45%)</title><rect x="617" y="276" width="6" height="15" fill="rgb(206,89,28)"/><text x="620.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.45%)</title><rect x="617" y="292" width="6" height="15" fill="rgb(240,164,5)"/><text x="620.00" y="302.50"></text></g><g><title>argmin (numpy/core/fromnumeric.py:1222) (4 samples, 0.45%)</title><rect x="617" y="308" width="6" height="15" fill="rgb(209,63,18)"/><text x="620.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (4 samples, 0.45%)</title><rect x="617" y="324" width="6" height="15" fill="rgb(213,63,32)"/><text x="620.00" y="334.50"></text></g><g><title>array_argmin (methods.c:317) (4 samples, 0.45%)</title><rect x="617" y="340" width="6" height="15" fill="rgb(224,2,47)"/><text x="620.00" y="350.50"></text></g><g><title>PyArray_ArgMin (calculation.c:247) (3 samples, 0.34%)</title><rect x="619" y="356" width="4" height="15" fill="rgb(222,62,36)"/><text x="622.00" y="366.50"></text></g><g><title>FLOAT_argmin (arraytypes.c.src:3217) (2 samples, 0.22%)</title><rect x="620" y="372" width="3" height="15" fill="rgb(237,208,51)"/><text x="623.00" y="382.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:15) (1 samples, 0.11%)</title><rect x="623" y="260" width="1" height="15" fill="rgb(226,178,25)"/><text x="626.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="623" y="276" width="1" height="15" fill="rgb(232,224,40)"/><text x="626.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="623" y="292" width="1" height="15" fill="rgb(244,144,36)"/><text x="626.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:571) (1 samples, 0.11%)</title><rect x="623" y="308" width="1" height="15" fill="rgb(231,185,34)"/><text x="626.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (7 samples, 0.78%)</title><rect x="616" y="196" width="9" height="15" fill="rgb(238,14,53)"/><text x="619.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (7 samples, 0.78%)</title><rect x="616" y="212" width="9" height="15" fill="rgb(213,47,10)"/><text x="619.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:66) (7 samples, 0.78%)</title><rect x="616" y="228" width="9" height="15" fill="rgb(228,149,23)"/><text x="619.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:38) (7 samples, 0.78%)</title><rect x="616" y="244" width="9" height="15" fill="rgb(243,168,8)"/><text x="619.00" y="254.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:16) (1 samples, 0.11%)</title><rect x="624" y="260" width="1" height="15" fill="rgb(225,115,31)"/><text x="627.00" y="270.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.11%)</title><rect x="624" y="276" width="1" height="15" fill="rgb(225,33,20)"/><text x="627.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.11%)</title><rect x="624" y="292" width="1" height="15" fill="rgb(253,205,3)"/><text x="627.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.11%)</title><rect x="624" y="308" width="1" height="15" fill="rgb(246,8,39)"/><text x="627.00" y="318.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:52) (1 samples, 0.11%)</title><rect x="624" y="324" width="1" height="15" fill="rgb(218,142,16)"/><text x="627.00" y="334.50"></text></g><g><title>0x7f392c78a54f (?) (1 samples, 0.11%)</title><rect x="625" y="244" width="2" height="15" fill="rgb(227,45,20)"/><text x="628.00" y="254.50"></text></g><g><title>0x7f392c79065e (?) (1 samples, 0.11%)</title><rect x="625" y="260" width="2" height="15" fill="rgb(222,195,33)"/><text x="628.00" y="270.50"></text></g><g><title>0x7f392c79050f (?) (1 samples, 0.11%)</title><rect x="625" y="276" width="2" height="15" fill="rgb(233,195,14)"/><text x="628.00" y="286.50"></text></g><g><title>0x7f392c796d6c (?) (1 samples, 0.11%)</title><rect x="625" y="292" width="2" height="15" fill="rgb(230,223,36)"/><text x="628.00" y="302.50"></text></g><g><title>0x7f3935cf7ab9 (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="625" y="308" width="2" height="15" fill="rgb(231,78,48)"/><text x="628.00" y="318.50"></text></g><g><title>0x7f3935cf8ead (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="625" y="324" width="2" height="15" fill="rgb(215,72,9)"/><text x="628.00" y="334.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:496) (1 samples, 0.11%)</title><rect x="627" y="244" width="1" height="15" fill="rgb(228,211,35)"/><text x="630.00" y="254.50"></text></g><g><title>pybind11::detail::function_call::function_call (attr.h:287) (1 samples, 0.11%)</title><rect x="627" y="260" width="1" height="15" fill="rgb(238,143,14)"/><text x="630.00" y="270.50"></text></g><g><title>std::vector&lt;pybind11::handle, std::allocator&lt;pybind11::handle&gt; &gt;::reserve (vector.tcc:76) (1 samples, 0.11%)</title><rect x="627" y="276" width="1" height="15" fill="rgb(212,68,35)"/><text x="630.00" y="286.50"></text></g><g><title>0x7f392c773d50 (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="627" y="292" width="1" height="15" fill="rgb(217,187,18)"/><text x="630.00" y="302.50"></text></g><g><title>0x7f3935cf8ea9 (libgomp.so.1.0.0) (10 samples, 1.12%)</title><rect x="628" y="484" width="13" height="15" fill="rgb(222,55,34)"/><text x="631.00" y="494.50"></text></g><g><title>0x7f3935cf8eab (libgomp.so.1.0.0) (10 samples, 1.12%)</title><rect x="641" y="484" width="13" height="15" fill="rgb(247,56,9)"/><text x="644.00" y="494.50"></text></g><g><title>0x7f3935cf7ab9 (libgomp.so.1.0.0) (35 samples, 3.91%)</title><rect x="628" y="468" width="46" height="15" fill="rgb(231,157,5)"/><text x="631.00" y="478.50">0x7f..</text></g><g><title>0x7f3935cf8ead (libgomp.so.1.0.0) (15 samples, 1.68%)</title><rect x="654" y="484" width="20" height="15" fill="rgb(253,151,23)"/><text x="657.00" y="494.50"></text></g><g><title>0x7f3935cf8cf0 (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="674" y="500" width="1" height="15" fill="rgb(222,21,0)"/><text x="677.00" y="510.50"></text></g><g><title>0x7f3935cf8cfb (libgomp.so.1.0.0) (3 samples, 0.34%)</title><rect x="675" y="500" width="4" height="15" fill="rgb(252,215,46)"/><text x="678.00" y="510.50"></text></g><g><title>0x7f3935cf6daa (libgomp.so.1.0.0) (5 samples, 0.56%)</title><rect x="674" y="484" width="7" height="15" fill="rgb(248,220,8)"/><text x="677.00" y="494.50"></text></g><g><title>0x7f3935cf8cfd (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="679" y="500" width="2" height="15" fill="rgb(242,92,52)"/><text x="682.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:376) (1 samples, 0.11%)</title><rect x="681" y="484" width="1" height="15" fill="rgb(248,71,20)"/><text x="684.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (44 samples, 4.92%)</title><rect x="625" y="196" width="58" height="15" fill="rgb(240,58,11)"/><text x="628.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (44 samples, 4.92%)</title><rect x="625" y="212" width="58" height="15" fill="rgb(208,28,32)"/><text x="628.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (44 samples, 4.92%)</title><rect x="625" y="228" width="58" height="15" fill="rgb(236,28,34)"/><text x="628.00" y="238.50">_run (..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (42 samples, 4.69%)</title><rect x="628" y="244" width="55" height="15" fill="rgb(217,223,47)"/><text x="631.00" y="254.50">pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (42 samples, 4.69%)</title><rect x="628" y="260" width="55" height="15" fill="rgb(218,112,30)"/><text x="631.00" y="270.50">void ..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (42 samples, 4.69%)</title><rect x="628" y="276" width="55" height="15" fill="rgb(215,78,38)"/><text x="631.00" y="286.50">void ..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (42 samples, 4.69%)</title><rect x="628" y="292" width="55" height="15" fill="rgb(241,91,21)"/><text x="631.00" y="302.50">pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (42 samples, 4.69%)</title><rect x="628" y="308" width="55" height="15" fill="rgb(212,97,5)"/><text x="631.00" y="318.50">pybin..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (42 samples, 4.69%)</title><rect x="628" y="324" width="55" height="15" fill="rgb(253,183,30)"/><text x="631.00" y="334.50">pybin..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (42 samples, 4.69%)</title><rect x="628" y="340" width="55" height="15" fill="rgb(229,129,36)"/><text x="631.00" y="350.50">pybin..</text></g><g><title>pybind11::array::~array (numpy.h:538) (42 samples, 4.69%)</title><rect x="628" y="356" width="55" height="15" fill="rgb(225,55,14)"/><text x="631.00" y="366.50">pybin..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (42 samples, 4.69%)</title><rect x="628" y="372" width="55" height="15" fill="rgb(224,135,33)"/><text x="631.00" y="382.50">pybin..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (42 samples, 4.69%)</title><rect x="628" y="388" width="55" height="15" fill="rgb(227,205,28)"/><text x="631.00" y="398.50">pybin..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (42 samples, 4.69%)</title><rect x="628" y="404" width="55" height="15" fill="rgb(242,222,54)"/><text x="631.00" y="414.50">pybin..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (42 samples, 4.69%)</title><rect x="628" y="420" width="55" height="15" fill="rgb(218,216,25)"/><text x="631.00" y="430.50">Runti..</text></g><g><title>pybind11::array::size (numpy.h:619) (42 samples, 4.69%)</title><rect x="628" y="436" width="55" height="15" fill="rgb(225,123,19)"/><text x="631.00" y="446.50">pybin..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (42 samples, 4.69%)</title><rect x="628" y="452" width="55" height="15" fill="rgb(237,156,29)"/><text x="631.00" y="462.50">std::..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (7 samples, 0.78%)</title><rect x="674" y="468" width="9" height="15" fill="rgb(205,44,3)"/><text x="677.00" y="478.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:380) (1 samples, 0.11%)</title><rect x="682" y="484" width="1" height="15" fill="rgb(237,168,34)"/><text x="685.00" y="494.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="683" y="324" width="2" height="15" fill="rgb(243,71,14)"/><text x="686.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (294 samples, 32.85%)</title><rect x="298" y="180" width="388" height="15" fill="rgb(208,223,12)"/><text x="301.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (2 samples, 0.22%)</title><rect x="683" y="196" width="3" height="15" fill="rgb(222,224,37)"/><text x="686.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_less.py:17) (2 samples, 0.22%)</title><rect x="683" y="212" width="3" height="15" fill="rgb(229,55,19)"/><text x="686.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="683" y="228" width="3" height="15" fill="rgb(236,133,11)"/><text x="686.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.22%)</title><rect x="683" y="244" width="3" height="15" fill="rgb(213,134,53)"/><text x="686.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.22%)</title><rect x="683" y="260" width="3" height="15" fill="rgb(239,188,38)"/><text x="686.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.22%)</title><rect x="683" y="276" width="3" height="15" fill="rgb(217,4,38)"/><text x="686.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.22%)</title><rect x="683" y="292" width="3" height="15" fill="rgb(231,55,6)"/><text x="686.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.22%)</title><rect x="683" y="308" width="3" height="15" fill="rgb(225,63,40)"/><text x="686.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.11%)</title><rect x="685" y="324" width="1" height="15" fill="rgb(226,130,19)"/><text x="688.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.11%)</title><rect x="685" y="340" width="1" height="15" fill="rgb(231,5,25)"/><text x="688.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.11%)</title><rect x="686" y="180" width="1" height="15" fill="rgb(208,67,43)"/><text x="689.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (305 samples, 34.08%)</title><rect x="289" y="164" width="402" height="15" fill="rgb(247,65,34)"/><text x="292.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.34%)</title><rect x="687" y="180" width="4" height="15" fill="rgb(232,71,32)"/><text x="690.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:61) (308 samples, 34.41%)</title><rect x="286" y="52" width="406" height="15" fill="rgb(217,200,7)"/><text x="289.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estim..</text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:60) (308 samples, 34.41%)</title><rect x="286" y="68" width="406" height="15" fill="rgb(223,152,24)"/><text x="289.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_e..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:37) (308 samples, 34.41%)</title><rect x="286" y="84" width="406" height="15" fill="rgb(243,25,12)"/><text x="289.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n_..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:31) (308 samples, 34.41%)</title><rect x="286" y="100" width="406" height="15" fill="rgb(235,49,15)"/><text x="289.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_estima..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (308 samples, 34.41%)</title><rect x="286" y="116" width="406" height="15" fill="rgb(253,145,48)"/><text x="289.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (308 samples, 34.41%)</title><rect x="286" y="132" width="406" height="15" fill="rgb(254,120,1)"/><text x="289.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (307 samples, 34.30%)</title><rect x="288" y="148" width="404" height="15" fill="rgb(214,198,2)"/><text x="291.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.11%)</title><rect x="691" y="164" width="1" height="15" fill="rgb(220,124,52)"/><text x="694.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.11%)</title><rect x="691" y="180" width="1" height="15" fill="rgb(210,0,49)"/><text x="694.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.11%)</title><rect x="691" y="196" width="1" height="15" fill="rgb(207,154,48)"/><text x="694.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.11%)</title><rect x="691" y="212" width="1" height="15" fill="rgb(211,36,13)"/><text x="694.00" y="222.50"></text></g><g><title>0x7f396bcf1b63 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="691" y="228" width="1" height="15" fill="rgb(252,147,5)"/><text x="694.00" y="238.50"></text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:36) (1 samples, 0.11%)</title><rect x="692" y="84" width="2" height="15" fill="rgb(243,221,19)"/><text x="695.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:168) (1 samples, 0.11%)</title><rect x="692" y="100" width="2" height="15" fill="rgb(243,10,18)"/><text x="695.00" y="110.50"></text></g><g><title>_pickle_load (_pickle.c.h:510) (1 samples, 0.11%)</title><rect x="692" y="116" width="2" height="15" fill="rgb(252,150,13)"/><text x="695.00" y="126.50"></text></g><g><title>_pickle_load_impl (_pickle.c:7333) (1 samples, 0.11%)</title><rect x="692" y="132" width="2" height="15" fill="rgb(228,132,24)"/><text x="695.00" y="142.50"></text></g><g><title>load (_pickle.c:6479) (1 samples, 0.11%)</title><rect x="692" y="148" width="2" height="15" fill="rgb(222,172,27)"/><text x="695.00" y="158.50"></text></g><g><title>load_reduce (_pickle.c:6335) (1 samples, 0.11%)</title><rect x="692" y="164" width="2" height="15" fill="rgb(234,212,35)"/><text x="695.00" y="174.50"></text></g><g><title>array__reconstruct (multiarraymodule.c:2830) (1 samples, 0.11%)</title><rect x="692" y="180" width="2" height="15" fill="rgb(205,181,51)"/><text x="695.00" y="190.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1399) (1 samples, 0.11%)</title><rect x="692" y="196" width="2" height="15" fill="rgb(241,16,12)"/><text x="695.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="694" y="116" width="1" height="15" fill="rgb(209,156,47)"/><text x="697.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="694" y="132" width="1" height="15" fill="rgb(234,19,2)"/><text x="697.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.11%)</title><rect x="694" y="148" width="1" height="15" fill="rgb(249,6,16)"/><text x="697.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.11%)</title><rect x="695" y="148" width="1" height="15" fill="rgb(229,52,34)"/><text x="698.00" y="158.50"></text></g><g><title>0x7f392bd2fff9 (?) (1 samples, 0.11%)</title><rect x="696" y="212" width="2" height="15" fill="rgb(243,169,29)"/><text x="699.00" y="222.50"></text></g><g><title>0x7f392bd2aef6 (?) (1 samples, 0.11%)</title><rect x="696" y="228" width="2" height="15" fill="rgb(207,112,46)"/><text x="699.00" y="238.50"></text></g><g><title>0x7f392bd1f962 (?) (1 samples, 0.11%)</title><rect x="696" y="244" width="2" height="15" fill="rgb(246,126,39)"/><text x="699.00" y="254.50"></text></g><g><title>0x7f392bd537a7 (?) (1 samples, 0.11%)</title><rect x="696" y="260" width="2" height="15" fill="rgb(211,206,42)"/><text x="699.00" y="270.50"></text></g><g><title>0x7f392bd53379 (?) (1 samples, 0.11%)</title><rect x="696" y="276" width="2" height="15" fill="rgb(240,169,44)"/><text x="699.00" y="286.50"></text></g><g><title>0x7f392c1b18b8 (?) (1 samples, 0.11%)</title><rect x="696" y="292" width="2" height="15" fill="rgb(223,107,18)"/><text x="699.00" y="302.50"></text></g><g><title>0x7f392c1afc7f (?) (1 samples, 0.11%)</title><rect x="696" y="308" width="2" height="15" fill="rgb(209,88,29)"/><text x="699.00" y="318.50"></text></g><g><title>0x7f392c1c299c (?) (1 samples, 0.11%)</title><rect x="696" y="324" width="2" height="15" fill="rgb(212,4,15)"/><text x="699.00" y="334.50"></text></g><g><title>0x7f392bdefc0e (?) (1 samples, 0.11%)</title><rect x="696" y="340" width="2" height="15" fill="rgb(217,60,4)"/><text x="699.00" y="350.50"></text></g><g><title>0x7f392bde8898 (?) (1 samples, 0.11%)</title><rect x="696" y="356" width="2" height="15" fill="rgb(210,155,6)"/><text x="699.00" y="366.50"></text></g><g><title>onnxruntime::ArgMin&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.67%)</title><rect x="698" y="340" width="8" height="15" fill="rgb(227,54,0)"/><text x="701.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.67%)</title><rect x="698" y="356" width="8" height="15" fill="rgb(210,105,18)"/><text x="701.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="704" y="372" width="2" height="15" fill="rgb(229,111,14)"/><text x="707.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="704" y="388" width="2" height="15" fill="rgb(242,103,35)"/><text x="707.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="704" y="404" width="2" height="15" fill="rgb(237,170,2)"/><text x="707.00" y="414.50"></text></g><g><title>onnxruntime::Cast&lt;bool&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="706" y="340" width="2" height="15" fill="rgb(227,196,14)"/><text x="709.00" y="350.50"></text></g><g><title>0x7f396bd11dbf (libc-2.29.so) (1 samples, 0.11%)</title><rect x="712" y="372" width="2" height="15" fill="rgb(224,17,46)"/><text x="715.00" y="382.50"></text></g><g><title>onnxruntime::ConcatBase::ComputeImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.56%)</title><rect x="708" y="356" width="7" height="15" fill="rgb(214,161,50)"/><text x="711.00" y="366.50"></text></g><g><title>0x7f396bd11dc3 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="714" y="372" width="1" height="15" fill="rgb(222,55,48)"/><text x="717.00" y="382.50"></text></g><g><title>onnxruntime::Concat::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.67%)</title><rect x="708" y="340" width="8" height="15" fill="rgb(238,40,39)"/><text x="711.00" y="350.50"></text></g><g><title>onnxruntime::ConcatBase::PrepareForCompute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="715" y="356" width="1" height="15" fill="rgb(211,6,41)"/><text x="718.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="715" y="372" width="1" height="15" fill="rgb(232,3,20)"/><text x="718.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="715" y="388" width="1" height="15" fill="rgb(228,174,22)"/><text x="718.00" y="398.50"></text></g><g><title>(anonymous namespace)::CopySlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="716" y="356" width="2" height="15" fill="rgb(227,172,39)"/><text x="719.00" y="366.50"></text></g><g><title>onnxruntime::CumSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.56%)</title><rect x="716" y="340" width="19" height="15" fill="rgb(253,149,37)"/><text x="719.00" y="350.50"></text></g><g><title>(anonymous namespace)::SumSlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.45%)</title><rect x="718" y="356" width="17" height="15" fill="rgb(209,229,30)"/><text x="721.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="735" y="340" width="1" height="15" fill="rgb(248,77,1)"/><text x="738.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="735" y="356" width="1" height="15" fill="rgb(232,118,5)"/><text x="738.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="735" y="372" width="1" height="15" fill="rgb(213,24,34)"/><text x="738.00" y="382.50"></text></g><g><title>0x7f396bd11db3 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="740" y="356" width="1" height="15" fill="rgb(210,100,43)"/><text x="743.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="741" y="356" width="2" height="15" fill="rgb(245,116,41)"/><text x="744.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="741" y="372" width="2" height="15" fill="rgb(247,168,2)"/><text x="744.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="741" y="388" width="2" height="15" fill="rgb(250,212,25)"/><text x="744.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="741" y="404" width="2" height="15" fill="rgb(207,35,53)"/><text x="744.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="741" y="420" width="2" height="15" fill="rgb(211,129,40)"/><text x="744.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="741" y="436" width="2" height="15" fill="rgb(215,190,13)"/><text x="744.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="741" y="452" width="2" height="15" fill="rgb(236,183,10)"/><text x="744.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="741" y="468" width="2" height="15" fill="rgb(242,34,24)"/><text x="744.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="741" y="484" width="2" height="15" fill="rgb(216,43,19)"/><text x="744.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="741" y="500" width="2" height="15" fill="rgb(251,7,53)"/><text x="744.00" y="510.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="741" y="516" width="2" height="15" fill="rgb(233,2,24)"/><text x="744.00" y="526.50"></text></g><g><title>onnxruntime::GatherElements::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.89%)</title><rect x="736" y="340" width="11" height="15" fill="rgb(220,139,30)"/><text x="739.00" y="350.50"></text></g><g><title>onnxruntime::parse_and_validate_indices_tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="743" y="356" width="4" height="15" fill="rgb(211,69,3)"/><text x="746.00" y="366.50"></text></g><g><title>onnxruntime::Less&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="747" y="340" width="3" height="15" fill="rgb(254,81,50)"/><text x="750.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="747" y="356" width="3" height="15" fill="rgb(239,195,2)"/><text x="750.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="749" y="372" width="1" height="15" fill="rgb(251,192,49)"/><text x="752.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.56%)</title><rect x="750" y="372" width="7" height="15" fill="rgb(249,185,48)"/><text x="753.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="756" y="388" width="1" height="15" fill="rgb(240,57,41)"/><text x="759.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; [clone .constprop.2248] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="757" y="372" width="1" height="15" fill="rgb(249,123,34)"/><text x="760.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::GetInputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="757" y="388" width="1" height="15" fill="rgb(247,174,20)"/><text x="760.00" y="398.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.78%)</title><rect x="750" y="340" width="10" height="15" fill="rgb(230,142,16)"/><text x="753.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.78%)</title><rect x="750" y="356" width="10" height="15" fill="rgb(251,81,2)"/><text x="753.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="758" y="372" width="2" height="15" fill="rgb(215,125,8)"/><text x="761.00" y="382.50"></text></g><g><title>onnxruntime::Tensor::Data&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="758" y="388" width="2" height="15" fill="rgb(209,81,16)"/><text x="761.00" y="398.50"></text></g><g><title>0x7f396bcf199b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="787" y="388" width="2" height="15" fill="rgb(247,41,17)"/><text x="790.00" y="398.50"></text></g><g><title>0x7f396bec3dee (libm-2.29.so) (1 samples, 0.11%)</title><rect x="789" y="388" width="1" height="15" fill="rgb(237,134,7)"/><text x="792.00" y="398.50"></text></g><g><title>0x7f396bec3e40 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="790" y="388" width="1" height="15" fill="rgb(236,179,32)"/><text x="793.00" y="398.50"></text></g><g><title>0x7f396bec3e6e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="791" y="388" width="2" height="15" fill="rgb(213,113,45)"/><text x="794.00" y="398.50"></text></g><g><title>0x7f396bec3e7e (libm-2.29.so) (2 samples, 0.22%)</title><rect x="793" y="388" width="2" height="15" fill="rgb(236,192,23)"/><text x="796.00" y="398.50"></text></g><g><title>0x7f396bec3e88 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="795" y="388" width="2" height="15" fill="rgb(230,140,24)"/><text x="798.00" y="398.50"></text></g><g><title>0x7f396bec3e8d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="797" y="388" width="1" height="15" fill="rgb(223,183,30)"/><text x="800.00" y="398.50"></text></g><g><title>0x7f396bec3ec6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="798" y="388" width="1" height="15" fill="rgb(234,52,39)"/><text x="801.00" y="398.50"></text></g><g><title>0x7f396bec3ece (libm-2.29.so) (1 samples, 0.11%)</title><rect x="799" y="388" width="2" height="15" fill="rgb(232,5,31)"/><text x="802.00" y="398.50"></text></g><g><title>0x7f396bec3ee6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="801" y="388" width="1" height="15" fill="rgb(228,43,47)"/><text x="804.00" y="398.50"></text></g><g><title>0x7f396bec3efa (libm-2.29.so) (1 samples, 0.11%)</title><rect x="802" y="388" width="1" height="15" fill="rgb(253,57,1)"/><text x="805.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="803" y="388" width="2" height="15" fill="rgb(209,219,24)"/><text x="806.00" y="398.50"></text></g><g><title>logf32x (libm-2.29.so) (1 samples, 0.11%)</title><rect x="805" y="388" width="1" height="15" fill="rgb(230,164,7)"/><text x="808.00" y="398.50"></text></g><g><title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, long, std::pair&lt;float, long&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::GreaterValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.67%)</title><rect x="806" y="388" width="8" height="15" fill="rgb(243,150,45)"/><text x="809.00" y="398.50"></text></g><g><title>0x7f396bcf1945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="824" y="404" width="2" height="15" fill="rgb(246,215,18)"/><text x="827.00" y="414.50"></text></g><g><title>0x7f396bcf199b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="826" y="404" width="1" height="15" fill="rgb(237,184,30)"/><text x="829.00" y="414.50"></text></g><g><title>0x7f396bcf1a38 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="827" y="404" width="1" height="15" fill="rgb(233,93,37)"/><text x="830.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="828" y="404" width="2" height="15" fill="rgb(239,81,52)"/><text x="831.00" y="414.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (58 samples, 6.48%)</title><rect x="760" y="340" width="76" height="15" fill="rgb(221,91,5)"/><text x="763.00" y="350.50">onnxrunt..</text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (58 samples, 6.48%)</title><rect x="760" y="356" width="76" height="15" fill="rgb(253,121,7)"/><text x="763.00" y="366.50">onnxrunt..</text></g><g><title>onnxruntime::extract_top_k_elements&lt;true, true, onnxruntime::GreaterValueCmp&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (58 samples, 6.48%)</title><rect x="760" y="372" width="76" height="15" fill="rgb(250,173,17)"/><text x="763.00" y="382.50">onnxrunt..</text></g><g><title>std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt;::_M_emplace_back_aux&lt;std::pair&lt;float, long&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 1.90%)</title><rect x="814" y="388" width="22" height="15" fill="rgb(242,148,53)"/><text x="817.00" y="398.50">s..</text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.56%)</title><rect x="830" y="404" width="6" height="15" fill="rgb(216,5,40)"/><text x="833.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.45%)</title><rect x="831" y="420" width="5" height="15" fill="rgb(230,1,38)"/><text x="834.00" y="430.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="836" y="340" width="4" height="15" fill="rgb(243,166,0)"/><text x="839.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="839" y="356" width="1" height="15" fill="rgb(215,121,21)"/><text x="842.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="839" y="372" width="1" height="15" fill="rgb(236,108,27)"/><text x="842.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="839" y="388" width="1" height="15" fill="rgb(209,5,13)"/><text x="842.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="839" y="404" width="1" height="15" fill="rgb(236,152,22)"/><text x="842.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="839" y="420" width="1" height="15" fill="rgb(207,144,30)"/><text x="842.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="839" y="436" width="1" height="15" fill="rgb(239,8,15)"/><text x="842.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="839" y="452" width="1" height="15" fill="rgb(240,73,41)"/><text x="842.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="839" y="468" width="1" height="15" fill="rgb(224,141,25)"/><text x="842.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="839" y="484" width="1" height="15" fill="rgb(238,166,15)"/><text x="842.00" y="494.50"></text></g><g><title>0x7f392bcf70f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="897" y="356" width="1" height="15" fill="rgb(219,116,43)"/><text x="900.00" y="366.50"></text></g><g><title>0x7f396bcf1906 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="898" y="356" width="1" height="15" fill="rgb(228,159,24)"/><text x="901.00" y="366.50"></text></g><g><title>0x7f396bcf190e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="899" y="356" width="2" height="15" fill="rgb(214,52,18)"/><text x="902.00" y="366.50"></text></g><g><title>0x7f396bcf191e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="901" y="356" width="1" height="15" fill="rgb(244,82,38)"/><text x="904.00" y="366.50"></text></g><g><title>0x7f396bcf1922 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="902" y="356" width="1" height="15" fill="rgb(226,198,7)"/><text x="905.00" y="366.50"></text></g><g><title>0x7f396bcf192c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="903" y="356" width="2" height="15" fill="rgb(239,139,34)"/><text x="906.00" y="366.50"></text></g><g><title>0x7f396bcf1945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="905" y="356" width="1" height="15" fill="rgb(231,72,0)"/><text x="908.00" y="366.50"></text></g><g><title>0x7f396bcf1961 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="906" y="356" width="1" height="15" fill="rgb(234,107,5)"/><text x="909.00" y="366.50"></text></g><g><title>0x7f396bcf1971 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="907" y="356" width="2" height="15" fill="rgb(225,2,53)"/><text x="910.00" y="366.50"></text></g><g><title>0x7f396bcf198c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="909" y="356" width="1" height="15" fill="rgb(220,77,1)"/><text x="912.00" y="366.50"></text></g><g><title>0x7f396bcf1991 (libc-2.29.so) (7 samples, 0.78%)</title><rect x="910" y="356" width="9" height="15" fill="rgb(243,165,8)"/><text x="913.00" y="366.50"></text></g><g><title>0x7f396bcf199b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="919" y="356" width="2" height="15" fill="rgb(217,145,35)"/><text x="922.00" y="366.50"></text></g><g><title>0x7f396bcf1a41 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="921" y="356" width="1" height="15" fill="rgb(216,193,10)"/><text x="924.00" y="366.50"></text></g><g><title>0x7f396bcf1a47 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="922" y="356" width="1" height="15" fill="rgb(230,79,37)"/><text x="925.00" y="366.50"></text></g><g><title>0x7f396bcf1a4c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="923" y="356" width="1" height="15" fill="rgb(229,86,16)"/><text x="926.00" y="366.50"></text></g><g><title>0x7f396bcf1a53 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="924" y="356" width="2" height="15" fill="rgb(250,19,26)"/><text x="927.00" y="366.50"></text></g><g><title>0x7f396bcf1bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="926" y="356" width="1" height="15" fill="rgb(207,40,46)"/><text x="929.00" y="366.50"></text></g><g><title>0x7f396bcf1bd8 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="927" y="356" width="3" height="15" fill="rgb(231,91,8)"/><text x="930.00" y="366.50"></text></g><g><title>0x7f396bcf1be4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="930" y="356" width="1" height="15" fill="rgb(249,85,11)"/><text x="933.00" y="366.50"></text></g><g><title>0x7f396bcf1be8 (libc-2.29.so) (3 samples, 0.34%)</title><rect x="931" y="356" width="4" height="15" fill="rgb(246,197,39)"/><text x="934.00" y="366.50"></text></g><g><title>0x7f396bd1212f (libc-2.29.so) (1 samples, 0.11%)</title><rect x="935" y="356" width="1" height="15" fill="rgb(241,67,25)"/><text x="938.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (6 samples, 0.67%)</title><rect x="936" y="356" width="8" height="15" fill="rgb(232,125,42)"/><text x="939.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (7 samples, 0.78%)</title><rect x="1047" y="388" width="9" height="15" fill="rgb(236,185,12)"/><text x="1050.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.56%)</title><rect x="1050" y="404" width="6" height="15" fill="rgb(216,2,21)"/><text x="1053.00" y="414.50"></text></g><g><title>0x7f396bd1214a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1072" y="420" width="1" height="15" fill="rgb(208,63,47)"/><text x="1075.00" y="430.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.56%)</title><rect x="1068" y="404" width="7" height="15" fill="rgb(252,151,42)"/><text x="1071.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="1073" y="420" width="2" height="15" fill="rgb(206,54,19)"/><text x="1076.00" y="430.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (139 samples, 15.53%)</title><rect x="944" y="356" width="184" height="15" fill="rgb(220,78,2)"/><text x="947.00" y="366.50">onnxruntime::ml::TreeEn..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (65 samples, 7.26%)</title><rect x="1042" y="372" width="86" height="15" fill="rgb(245,216,35)"/><text x="1045.00" y="382.50">std::_Hash..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (54 samples, 6.03%)</title><rect x="1056" y="388" width="72" height="15" fill="rgb(221,120,23)"/><text x="1059.00" y="398.50">std::_Ha..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (40 samples, 4.47%)</title><rect x="1075" y="404" width="53" height="15" fill="rgb(220,75,15)"/><text x="1078.00" y="414.50">std::..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (18 samples, 2.01%)</title><rect x="1104" y="420" width="24" height="15" fill="rgb(241,81,4)"/><text x="1107.00" y="430.50">s..</text></g><g><title>0x7f392bcf6850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="1129" y="372" width="4" height="15" fill="rgb(235,191,10)"/><text x="1132.00" y="382.50"></text></g><g><title>0x7f396bd11d97 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1133" y="372" width="1" height="15" fill="rgb(213,59,54)"/><text x="1136.00" y="382.50"></text></g><g><title>0x7f396bd11dbf (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1134" y="372" width="1" height="15" fill="rgb(214,184,11)"/><text x="1137.00" y="382.50"></text></g><g><title>0x7f396bd11dc3 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1135" y="372" width="2" height="15" fill="rgb(215,176,35)"/><text x="1138.00" y="382.50"></text></g><g><title>0x7f396bd11dc9 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1137" y="372" width="1" height="15" fill="rgb(226,106,10)"/><text x="1140.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.01%)</title><rect x="1128" y="356" width="11" height="15" fill="rgb(220,172,6)"/><text x="1131.00" y="366.50"></text></g><g><title>0x7f396bd11dcb (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1138" y="372" width="1" height="15" fill="rgb(238,228,39)"/><text x="1141.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="1139" y="356" width="3" height="15" fill="rgb(241,132,3)"/><text x="1142.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.45%)</title><rect x="1142" y="356" width="17" height="15" fill="rgb(206,26,45)"/><text x="1145.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (368 samples, 41.12%)</title><rect x="698" y="260" width="485" height="15" fill="rgb(211,108,17)"/><text x="701.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_p..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (368 samples, 41.12%)</title><rect x="698" y="276" width="485" height="15" fill="rgb(207,41,5)"/><text x="701.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_p..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (368 samples, 41.12%)</title><rect x="698" y="292" width="485" height="15" fill="rgb(237,178,53)"/><text x="701.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pyb..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (368 samples, 41.12%)</title><rect x="698" y="308" width="485" height="15" fill="rgb(235,68,37)"/><text x="701.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (368 samples, 41.12%)</title><rect x="698" y="324" width="485" height="15" fill="rgb(235,170,37)"/><text x="701.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxrun..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (260 samples, 29.05%)</title><rect x="840" y="340" width="343" height="15" fill="rgb(212,101,52)"/><text x="843.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;:..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 2.01%)</title><rect x="1159" y="356" width="24" height="15" fill="rgb(229,68,6)"/><text x="1162.00" y="366.50">s..</text></g><g><title>operator new (libstdc++.so.6.0.28) (11 samples, 1.23%)</title><rect x="1168" y="372" width="15" height="15" fill="rgb(222,187,1)"/><text x="1171.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (10 samples, 1.12%)</title><rect x="1170" y="388" width="13" height="15" fill="rgb(241,207,40)"/><text x="1173.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1183" y="292" width="1" height="15" fill="rgb(236,60,25)"/><text x="1186.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1183" y="308" width="1" height="15" fill="rgb(229,14,12)"/><text x="1186.00" y="318.50"></text></g><g><title>onnxruntime::TensorShape::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1183" y="324" width="1" height="15" fill="rgb(210,41,48)"/><text x="1186.00" y="334.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (370 samples, 41.34%)</title><rect x="698" y="244" width="488" height="15" fill="rgb(235,229,35)"/><text x="701.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1183" y="260" width="3" height="15" fill="rgb(227,26,41)"/><text x="1186.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1183" y="276" width="3" height="15" fill="rgb(246,107,12)"/><text x="1186.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="1184" y="292" width="2" height="15" fill="rgb(236,224,46)"/><text x="1187.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1184" y="308" width="2" height="15" fill="rgb(242,199,3)"/><text x="1187.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1186" y="244" width="2" height="15" fill="rgb(229,1,43)"/><text x="1189.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1187" y="260" width="1" height="15" fill="rgb(246,71,31)"/><text x="1190.00" y="270.50"></text></g><g><title>all (895 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(217,15,51)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:68) (377 samples, 42.12%)</title><rect x="692" y="52" width="498" height="15" fill="rgb(245,32,30)"/><text x="695.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_5..</text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:67) (377 samples, 42.12%)</title><rect x="692" y="68" width="498" height="15" fill="rgb(250,84,32)"/><text x="695.00" y="78.50">profile_ort (bench_AdaBoostRegressor_default_b_reg_n_estimators5_100..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:37) (376 samples, 42.01%)</title><rect x="694" y="84" width="496" height="15" fill="rgb(221,203,47)"/><text x="697.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:31) (376 samples, 42.01%)</title><rect x="694" y="100" width="496" height="15" fill="rgb(222,75,45)"/><text x="697.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (375 samples, 41.90%)</title><rect x="695" y="116" width="495" height="15" fill="rgb(234,177,40)"/><text x="698.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (375 samples, 41.90%)</title><rect x="695" y="132" width="495" height="15" fill="rgb(238,88,26)"/><text x="698.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (374 samples, 41.79%)</title><rect x="696" y="148" width="494" height="15" fill="rgb(205,145,47)"/><text x="699.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (374 samples, 41.79%)</title><rect x="696" y="164" width="494" height="15" fill="rgb(210,225,38)"/><text x="699.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (374 samples, 41.79%)</title><rect x="696" y="180" width="494" height="15" fill="rgb(248,56,48)"/><text x="699.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (374 samples, 41.79%)</title><rect x="696" y="196" width="494" height="15" fill="rgb(242,10,17)"/><text x="699.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (373 samples, 41.68%)</title><rect x="698" y="212" width="492" height="15" fill="rgb(239,211,27)"/><text x="701.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (373 samples, 41.68%)</title><rect x="698" y="228" width="492" height="15" fill="rgb(252,142,23)"/><text x="701.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObj..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1188" y="244" width="2" height="15" fill="rgb(253,150,11)"/><text x="1191.00" y="254.50"></text></g></g></svg>