<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1478" onload="init(evt)" viewBox="0 0 1200 1478" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1478" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1461.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1461.00"> </text><g id="frames"><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.19%)</title><rect x="10" y="500" width="2" height="15" fill="rgb(220,69,21)"/><text x="13.00" y="510.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (2 samples, 0.39%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(209,221,12)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.39%)</title><rect x="10" y="260" width="4" height="15" fill="rgb(230,142,33)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="10" y="276" width="4" height="15" fill="rgb(210,54,16)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(220,20,52)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="10" y="308" width="4" height="15" fill="rgb(207,58,28)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="10" y="324" width="4" height="15" fill="rgb(227,177,27)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="10" y="340" width="4" height="15" fill="rgb(246,130,6)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="10" y="356" width="4" height="15" fill="rgb(214,201,51)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:75) (2 samples, 0.39%)</title><rect x="10" y="372" width="4" height="15" fill="rgb(212,108,12)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.39%)</title><rect x="10" y="388" width="4" height="15" fill="rgb(220,130,39)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="10" y="404" width="4" height="15" fill="rgb(249,127,34)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="10" y="420" width="4" height="15" fill="rgb(253,144,54)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="10" y="436" width="4" height="15" fill="rgb(236,1,41)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="10" y="452" width="4" height="15" fill="rgb(205,2,54)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (2 samples, 0.39%)</title><rect x="10" y="468" width="4" height="15" fill="rgb(222,144,50)"/><text x="13.00" y="478.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (2 samples, 0.39%)</title><rect x="10" y="484" width="4" height="15" fill="rgb(235,136,23)"/><text x="13.00" y="494.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.19%)</title><rect x="12" y="500" width="2" height="15" fill="rgb(216,183,7)"/><text x="15.00" y="510.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="12" y="516" width="2" height="15" fill="rgb(235,213,26)"/><text x="15.00" y="526.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:1) (3 samples, 0.58%)</title><rect x="10" y="148" width="6" height="15" fill="rgb(248,106,1)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.58%)</title><rect x="10" y="164" width="6" height="15" fill="rgb(225,226,7)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.58%)</title><rect x="10" y="180" width="6" height="15" fill="rgb(205,71,50)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.58%)</title><rect x="10" y="196" width="6" height="15" fill="rgb(253,130,54)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.58%)</title><rect x="10" y="212" width="6" height="15" fill="rgb(254,84,51)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.58%)</title><rect x="10" y="228" width="6" height="15" fill="rgb(217,116,40)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:148) (1 samples, 0.19%)</title><rect x="14" y="244" width="2" height="15" fill="rgb(241,112,48)"/><text x="17.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="14" y="260" width="2" height="15" fill="rgb(210,180,10)"/><text x="17.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="14" y="276" width="2" height="15" fill="rgb(211,28,51)"/><text x="17.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="14" y="292" width="2" height="15" fill="rgb(246,69,48)"/><text x="17.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="14" y="308" width="2" height="15" fill="rgb(232,167,10)"/><text x="17.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="14" y="324" width="2" height="15" fill="rgb(222,71,46)"/><text x="17.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="14" y="340" width="2" height="15" fill="rgb(246,15,13)"/><text x="17.00" y="350.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:807) (1 samples, 0.19%)</title><rect x="14" y="356" width="2" height="15" fill="rgb(238,179,15)"/><text x="17.00" y="366.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (1 samples, 0.19%)</title><rect x="16" y="820" width="3" height="15" fill="rgb(238,83,22)"/><text x="19.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (1 samples, 0.19%)</title><rect x="16" y="836" width="3" height="15" fill="rgb(233,169,10)"/><text x="19.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.19%)</title><rect x="16" y="852" width="3" height="15" fill="rgb(209,116,26)"/><text x="19.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.19%)</title><rect x="16" y="868" width="3" height="15" fill="rgb(243,162,51)"/><text x="19.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2063) (1 samples, 0.19%)</title><rect x="16" y="884" width="3" height="15" fill="rgb(244,143,27)"/><text x="19.00" y="894.50"></text></g><g><title>join (posixpath.py:80) (1 samples, 0.19%)</title><rect x="16" y="900" width="3" height="15" fill="rgb(240,178,8)"/><text x="19.00" y="910.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:2) (2 samples, 0.39%)</title><rect x="16" y="148" width="5" height="15" fill="rgb(235,19,13)"/><text x="19.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="16" y="164" width="5" height="15" fill="rgb(213,207,0)"/><text x="19.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.39%)</title><rect x="16" y="180" width="5" height="15" fill="rgb(217,160,30)"/><text x="19.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="16" y="196" width="5" height="15" fill="rgb(206,143,11)"/><text x="19.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="16" y="212" width="5" height="15" fill="rgb(228,219,12)"/><text x="19.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="16" y="228" width="5" height="15" fill="rgb(217,129,42)"/><text x="19.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="16" y="244" width="5" height="15" fill="rgb(228,220,19)"/><text x="19.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="16" y="260" width="5" height="15" fill="rgb(250,113,43)"/><text x="19.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="16" y="276" width="5" height="15" fill="rgb(236,187,40)"/><text x="19.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.39%)</title><rect x="16" y="292" width="5" height="15" fill="rgb(237,181,31)"/><text x="19.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="16" y="308" width="5" height="15" fill="rgb(207,128,1)"/><text x="19.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="16" y="324" width="5" height="15" fill="rgb(248,42,44)"/><text x="19.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="16" y="340" width="5" height="15" fill="rgb(216,191,52)"/><text x="19.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="16" y="356" width="5" height="15" fill="rgb(219,144,3)"/><text x="19.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="16" y="372" width="5" height="15" fill="rgb(248,153,38)"/><text x="19.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.39%)</title><rect x="16" y="388" width="5" height="15" fill="rgb(228,156,21)"/><text x="19.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="16" y="404" width="5" height="15" fill="rgb(236,199,3)"/><text x="19.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="16" y="420" width="5" height="15" fill="rgb(247,40,53)"/><text x="19.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="16" y="436" width="5" height="15" fill="rgb(215,71,29)"/><text x="19.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="16" y="452" width="5" height="15" fill="rgb(225,160,1)"/><text x="19.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="16" y="468" width="5" height="15" fill="rgb(234,93,21)"/><text x="19.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.39%)</title><rect x="16" y="484" width="5" height="15" fill="rgb(238,38,5)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="16" y="500" width="5" height="15" fill="rgb(235,33,52)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="16" y="516" width="5" height="15" fill="rgb(219,178,40)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="16" y="532" width="5" height="15" fill="rgb(231,80,54)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="16" y="548" width="5" height="15" fill="rgb(209,142,50)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="16" y="564" width="5" height="15" fill="rgb(209,0,25)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.39%)</title><rect x="16" y="580" width="5" height="15" fill="rgb(251,215,36)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="16" y="596" width="5" height="15" fill="rgb(235,135,16)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.39%)</title><rect x="16" y="612" width="5" height="15" fill="rgb(229,209,38)"/><text x="19.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="16" y="628" width="5" height="15" fill="rgb(238,139,11)"/><text x="19.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="16" y="644" width="5" height="15" fill="rgb(217,168,9)"/><text x="19.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="16" y="660" width="5" height="15" fill="rgb(234,23,35)"/><text x="19.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="16" y="676" width="5" height="15" fill="rgb(222,116,19)"/><text x="19.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="16" y="692" width="5" height="15" fill="rgb(223,74,5)"/><text x="19.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="16" y="708" width="5" height="15" fill="rgb(228,158,50)"/><text x="19.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.39%)</title><rect x="16" y="724" width="5" height="15" fill="rgb(238,182,42)"/><text x="19.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="16" y="740" width="5" height="15" fill="rgb(235,4,8)"/><text x="19.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="16" y="756" width="5" height="15" fill="rgb(248,221,38)"/><text x="19.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="16" y="772" width="5" height="15" fill="rgb(212,137,7)"/><text x="19.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="16" y="788" width="5" height="15" fill="rgb(237,209,3)"/><text x="19.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="16" y="804" width="5" height="15" fill="rgb(224,54,15)"/><text x="19.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.19%)</title><rect x="19" y="820" width="2" height="15" fill="rgb(222,14,14)"/><text x="22.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="19" y="836" width="2" height="15" fill="rgb(209,102,35)"/><text x="22.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="19" y="852" width="2" height="15" fill="rgb(228,57,28)"/><text x="22.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="19" y="868" width="2" height="15" fill="rgb(215,36,45)"/><text x="22.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="19" y="884" width="2" height="15" fill="rgb(231,98,46)"/><text x="22.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="19" y="900" width="2" height="15" fill="rgb(251,5,24)"/><text x="22.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.19%)</title><rect x="19" y="916" width="2" height="15" fill="rgb(220,129,28)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="19" y="932" width="2" height="15" fill="rgb(219,130,12)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="19" y="948" width="2" height="15" fill="rgb(245,94,26)"/><text x="22.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.19%)</title><rect x="19" y="964" width="2" height="15" fill="rgb(249,217,26)"/><text x="22.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.19%)</title><rect x="19" y="980" width="2" height="15" fill="rgb(227,173,24)"/><text x="22.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.19%)</title><rect x="19" y="996" width="2" height="15" fill="rgb(217,53,39)"/><text x="22.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="19" y="1012" width="2" height="15" fill="rgb(215,23,7)"/><text x="22.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="19" y="1028" width="2" height="15" fill="rgb(210,84,28)"/><text x="22.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="19" y="1044" width="2" height="15" fill="rgb(209,226,10)"/><text x="22.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="19" y="1060" width="2" height="15" fill="rgb(225,180,52)"/><text x="22.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="19" y="1076" width="2" height="15" fill="rgb(215,182,54)"/><text x="22.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:5399) (1 samples, 0.19%)</title><rect x="19" y="1092" width="2" height="15" fill="rgb(215,4,15)"/><text x="22.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py:5639) (1 samples, 0.19%)</title><rect x="19" y="1108" width="2" height="15" fill="rgb(232,96,28)"/><text x="22.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2808) (1 samples, 0.19%)</title><rect x="19" y="1124" width="2" height="15" fill="rgb(239,141,30)"/><text x="22.00" y="1134.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.19%)</title><rect x="19" y="1140" width="2" height="15" fill="rgb(215,79,32)"/><text x="22.00" y="1150.50"></text></g><g><title>__str__ (pkg_resources/_vendor/pyparsing.py:2828) (1 samples, 0.19%)</title><rect x="19" y="1156" width="2" height="15" fill="rgb(235,167,35)"/><text x="22.00" y="1166.50"></text></g><g><title>__str__ (pkg_resources/_vendor/pyparsing.py:2154) (1 samples, 0.19%)</title><rect x="19" y="1172" width="2" height="15" fill="rgb(246,222,18)"/><text x="22.00" y="1182.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.19%)</title><rect x="21" y="900" width="2" height="15" fill="rgb(234,85,14)"/><text x="24.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="21" y="916" width="2" height="15" fill="rgb(254,34,13)"/><text x="24.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="21" y="932" width="2" height="15" fill="rgb(215,7,23)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="21" y="948" width="2" height="15" fill="rgb(226,183,51)"/><text x="24.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="21" y="964" width="2" height="15" fill="rgb(218,21,10)"/><text x="24.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="21" y="980" width="2" height="15" fill="rgb(248,32,29)"/><text x="24.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="21" y="996" width="2" height="15" fill="rgb(244,7,18)"/><text x="24.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="21" y="1012" width="2" height="15" fill="rgb(232,88,35)"/><text x="24.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:5513) (1 samples, 0.19%)</title><rect x="21" y="1028" width="2" height="15" fill="rgb(232,47,24)"/><text x="24.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.19%)</title><rect x="21" y="1044" width="2" height="15" fill="rgb(251,160,23)"/><text x="24.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.19%)</title><rect x="21" y="1060" width="2" height="15" fill="rgb(223,206,21)"/><text x="24.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:64) (1 samples, 0.19%)</title><rect x="21" y="1076" width="2" height="15" fill="rgb(242,114,8)"/><text x="24.00" y="1086.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.19%)</title><rect x="21" y="1092" width="2" height="15" fill="rgb(229,190,9)"/><text x="24.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:4) (2 samples, 0.39%)</title><rect x="21" y="148" width="5" height="15" fill="rgb(243,84,26)"/><text x="24.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="21" y="164" width="5" height="15" fill="rgb(207,228,3)"/><text x="24.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.39%)</title><rect x="21" y="180" width="5" height="15" fill="rgb(220,93,41)"/><text x="24.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="21" y="196" width="5" height="15" fill="rgb(222,72,35)"/><text x="24.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="21" y="212" width="5" height="15" fill="rgb(250,100,24)"/><text x="24.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="21" y="228" width="5" height="15" fill="rgb(233,76,36)"/><text x="24.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="21" y="244" width="5" height="15" fill="rgb(211,112,43)"/><text x="24.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="21" y="260" width="5" height="15" fill="rgb(231,112,19)"/><text x="24.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="21" y="276" width="5" height="15" fill="rgb(207,3,52)"/><text x="24.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.39%)</title><rect x="21" y="292" width="5" height="15" fill="rgb(214,187,28)"/><text x="24.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="21" y="308" width="5" height="15" fill="rgb(228,167,26)"/><text x="24.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="21" y="324" width="5" height="15" fill="rgb(206,10,53)"/><text x="24.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="21" y="340" width="5" height="15" fill="rgb(247,57,24)"/><text x="24.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="21" y="356" width="5" height="15" fill="rgb(208,224,28)"/><text x="24.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="21" y="372" width="5" height="15" fill="rgb(227,200,24)"/><text x="24.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.39%)</title><rect x="21" y="388" width="5" height="15" fill="rgb(212,82,26)"/><text x="24.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="21" y="404" width="5" height="15" fill="rgb(218,83,3)"/><text x="24.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="21" y="420" width="5" height="15" fill="rgb(219,60,45)"/><text x="24.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="21" y="436" width="5" height="15" fill="rgb(212,202,53)"/><text x="24.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="21" y="452" width="5" height="15" fill="rgb(243,191,14)"/><text x="24.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="21" y="468" width="5" height="15" fill="rgb(234,73,33)"/><text x="24.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.39%)</title><rect x="21" y="484" width="5" height="15" fill="rgb(219,139,18)"/><text x="24.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="21" y="500" width="5" height="15" fill="rgb(216,159,37)"/><text x="24.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="21" y="516" width="5" height="15" fill="rgb(242,55,7)"/><text x="24.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="21" y="532" width="5" height="15" fill="rgb(253,147,50)"/><text x="24.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="21" y="548" width="5" height="15" fill="rgb(242,37,46)"/><text x="24.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="21" y="564" width="5" height="15" fill="rgb(228,163,39)"/><text x="24.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.39%)</title><rect x="21" y="580" width="5" height="15" fill="rgb(227,117,10)"/><text x="24.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="21" y="596" width="5" height="15" fill="rgb(217,78,14)"/><text x="24.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="21" y="612" width="5" height="15" fill="rgb(242,95,53)"/><text x="24.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="21" y="628" width="5" height="15" fill="rgb(246,11,0)"/><text x="24.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="21" y="644" width="5" height="15" fill="rgb(246,226,2)"/><text x="24.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="21" y="660" width="5" height="15" fill="rgb(250,145,36)"/><text x="24.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.39%)</title><rect x="21" y="676" width="5" height="15" fill="rgb(206,3,53)"/><text x="24.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="21" y="692" width="5" height="15" fill="rgb(213,149,8)"/><text x="24.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="21" y="708" width="5" height="15" fill="rgb(234,112,34)"/><text x="24.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="21" y="724" width="5" height="15" fill="rgb(227,130,54)"/><text x="24.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="21" y="740" width="5" height="15" fill="rgb(218,211,35)"/><text x="24.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="21" y="756" width="5" height="15" fill="rgb(242,105,41)"/><text x="24.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.39%)</title><rect x="21" y="772" width="5" height="15" fill="rgb(253,124,37)"/><text x="24.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.39%)</title><rect x="21" y="788" width="5" height="15" fill="rgb(232,161,17)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="21" y="804" width="5" height="15" fill="rgb(227,153,2)"/><text x="24.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="21" y="820" width="5" height="15" fill="rgb(238,149,35)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="21" y="836" width="5" height="15" fill="rgb(246,69,53)"/><text x="24.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="21" y="852" width="5" height="15" fill="rgb(229,92,42)"/><text x="24.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="21" y="868" width="5" height="15" fill="rgb(215,194,54)"/><text x="24.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="21" y="884" width="5" height="15" fill="rgb(225,74,17)"/><text x="24.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:14) (1 samples, 0.19%)</title><rect x="23" y="900" width="3" height="15" fill="rgb(239,157,11)"/><text x="26.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="23" y="916" width="3" height="15" fill="rgb(249,84,33)"/><text x="26.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="23" y="932" width="3" height="15" fill="rgb(205,91,20)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="23" y="948" width="3" height="15" fill="rgb(242,211,27)"/><text x="26.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="23" y="964" width="3" height="15" fill="rgb(246,100,23)"/><text x="26.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="23" y="980" width="3" height="15" fill="rgb(233,179,26)"/><text x="26.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="23" y="996" width="3" height="15" fill="rgb(220,104,5)"/><text x="26.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="23" y="1012" width="3" height="15" fill="rgb(241,217,27)"/><text x="26.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py:858) (1 samples, 0.19%)</title><rect x="23" y="1028" width="3" height="15" fill="rgb(220,200,44)"/><text x="26.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:2781) (1 samples, 0.19%)</title><rect x="23" y="1044" width="3" height="15" fill="rgb(248,37,23)"/><text x="26.00" y="1054.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:591) (1 samples, 0.19%)</title><rect x="23" y="1060" width="3" height="15" fill="rgb(217,227,14)"/><text x="26.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py:291) (1 samples, 0.19%)</title><rect x="23" y="1076" width="3" height="15" fill="rgb(234,167,35)"/><text x="26.00" y="1086.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.19%)</title><rect x="23" y="1092" width="3" height="15" fill="rgb(238,169,48)"/><text x="26.00" y="1102.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.19%)</title><rect x="23" y="1108" width="3" height="15" fill="rgb(222,107,2)"/><text x="26.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py:2217) (1 samples, 0.19%)</title><rect x="23" y="1124" width="3" height="15" fill="rgb(234,100,10)"/><text x="26.00" y="1134.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.19%)</title><rect x="23" y="1140" width="3" height="15" fill="rgb(209,105,40)"/><text x="26.00" y="1150.50"></text></g><g><title>_signature_from_function (inspect.py:2151) (1 samples, 0.19%)</title><rect x="23" y="1156" width="3" height="15" fill="rgb(210,211,0)"/><text x="26.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.19%)</title><rect x="26" y="436" width="2" height="15" fill="rgb(224,99,25)"/><text x="29.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="26" y="452" width="2" height="15" fill="rgb(254,123,32)"/><text x="29.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="26" y="468" width="2" height="15" fill="rgb(248,29,37)"/><text x="29.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="26" y="484" width="2" height="15" fill="rgb(233,212,17)"/><text x="29.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="26" y="500" width="2" height="15" fill="rgb(243,126,23)"/><text x="29.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="26" y="516" width="2" height="15" fill="rgb(224,63,20)"/><text x="29.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.19%)</title><rect x="26" y="532" width="2" height="15" fill="rgb(246,176,8)"/><text x="29.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="26" y="548" width="2" height="15" fill="rgb(206,8,52)"/><text x="29.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="26" y="564" width="2" height="15" fill="rgb(205,222,23)"/><text x="29.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="26" y="580" width="2" height="15" fill="rgb(215,202,46)"/><text x="29.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="26" y="596" width="2" height="15" fill="rgb(238,229,22)"/><text x="29.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="26" y="612" width="2" height="15" fill="rgb(217,101,47)"/><text x="29.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.19%)</title><rect x="26" y="628" width="2" height="15" fill="rgb(232,100,9)"/><text x="29.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="26" y="644" width="2" height="15" fill="rgb(216,22,33)"/><text x="29.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="26" y="660" width="2" height="15" fill="rgb(250,0,52)"/><text x="29.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="26" y="676" width="2" height="15" fill="rgb(212,211,5)"/><text x="29.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="26" y="692" width="2" height="15" fill="rgb(220,172,26)"/><text x="29.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="26" y="708" width="2" height="15" fill="rgb(230,87,16)"/><text x="29.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.19%)</title><rect x="26" y="724" width="2" height="15" fill="rgb(246,144,44)"/><text x="29.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="26" y="740" width="2" height="15" fill="rgb(208,183,45)"/><text x="29.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="26" y="756" width="2" height="15" fill="rgb(248,95,7)"/><text x="29.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="26" y="772" width="2" height="15" fill="rgb(211,24,33)"/><text x="29.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="26" y="788" width="2" height="15" fill="rgb(215,168,42)"/><text x="29.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="26" y="804" width="2" height="15" fill="rgb(226,163,38)"/><text x="29.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="26" y="820" width="2" height="15" fill="rgb(233,33,28)"/><text x="29.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="26" y="836" width="2" height="15" fill="rgb(219,34,37)"/><text x="29.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="26" y="852" width="2" height="15" fill="rgb(207,199,9)"/><text x="29.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:8) (1 samples, 0.19%)</title><rect x="26" y="868" width="2" height="15" fill="rgb(245,49,35)"/><text x="29.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="26" y="884" width="2" height="15" fill="rgb(216,157,31)"/><text x="29.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="26" y="900" width="2" height="15" fill="rgb(253,229,50)"/><text x="29.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="26" y="916" width="2" height="15" fill="rgb(243,189,36)"/><text x="29.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="26" y="932" width="2" height="15" fill="rgb(220,94,17)"/><text x="29.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="26" y="948" width="2" height="15" fill="rgb(229,24,23)"/><text x="29.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimes.py:53) (1 samples, 0.19%)</title><rect x="26" y="964" width="2" height="15" fill="rgb(235,131,42)"/><text x="29.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="26" y="980" width="2" height="15" fill="rgb(250,32,27)"/><text x="29.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="26" y="996" width="2" height="15" fill="rgb(229,106,28)"/><text x="29.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="26" y="1012" width="2" height="15" fill="rgb(233,27,48)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="26" y="1028" width="2" height="15" fill="rgb(210,110,40)"/><text x="29.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="26" y="1044" width="2" height="15" fill="rgb(249,86,1)"/><text x="29.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="26" y="1060" width="2" height="15" fill="rgb(215,62,26)"/><text x="29.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="26" y="1076" width="2" height="15" fill="rgb(246,119,21)"/><text x="29.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimelike.py:144) (1 samples, 0.19%)</title><rect x="26" y="1092" width="2" height="15" fill="rgb(245,74,50)"/><text x="29.00" y="1102.50"></text></g><g><title>DatelikeOps (pandas/core/arrays/datetimelike.py:150) (1 samples, 0.19%)</title><rect x="26" y="1108" width="2" height="15" fill="rgb(228,95,20)"/><text x="29.00" y="1118.50"></text></g><g><title>__init__ (pandas/util/_decorators.py:280) (1 samples, 0.19%)</title><rect x="26" y="1124" width="2" height="15" fill="rgb(250,171,47)"/><text x="29.00" y="1134.50"></text></g><g><title>getsourcelines (inspect.py:955) (1 samples, 0.19%)</title><rect x="28" y="1348" width="2" height="15" fill="rgb(238,77,11)"/><text x="31.00" y="1358.50"></text></g><g><title>findsource (inspect.py:768) (1 samples, 0.19%)</title><rect x="28" y="1364" width="2" height="15" fill="rgb(208,132,45)"/><text x="31.00" y="1374.50"></text></g><g><title>getsourcefile (inspect.py:693) (1 samples, 0.19%)</title><rect x="28" y="1380" width="2" height="15" fill="rgb(212,13,19)"/><text x="31.00" y="1390.50"></text></g><g><title>exists (genericpath.py:19) (1 samples, 0.19%)</title><rect x="28" y="1396" width="2" height="15" fill="rgb(234,227,48)"/><text x="31.00" y="1406.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.19%)</title><rect x="28" y="1412" width="2" height="15" fill="rgb(226,88,47)"/><text x="31.00" y="1422.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.19%)</title><rect x="28" y="1428" width="2" height="15" fill="rgb(242,40,23)"/><text x="31.00" y="1438.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 0.39%)</title><rect x="28" y="1108" width="4" height="15" fill="rgb(224,187,31)"/><text x="31.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="28" y="1124" width="4" height="15" fill="rgb(223,152,22)"/><text x="31.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="28" y="1140" width="4" height="15" fill="rgb(232,94,11)"/><text x="31.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="28" y="1156" width="4" height="15" fill="rgb(238,18,21)"/><text x="31.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="28" y="1172" width="4" height="15" fill="rgb(254,56,24)"/><text x="31.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="28" y="1188" width="4" height="15" fill="rgb(226,7,52)"/><text x="31.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (2 samples, 0.39%)</title><rect x="28" y="1204" width="4" height="15" fill="rgb(212,99,24)"/><text x="31.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="28" y="1220" width="4" height="15" fill="rgb(243,29,10)"/><text x="31.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="28" y="1236" width="4" height="15" fill="rgb(251,9,24)"/><text x="31.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="28" y="1252" width="4" height="15" fill="rgb(216,7,3)"/><text x="31.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="28" y="1268" width="4" height="15" fill="rgb(233,32,7)"/><text x="31.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="28" y="1284" width="4" height="15" fill="rgb(218,124,34)"/><text x="31.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (2 samples, 0.39%)</title><rect x="28" y="1300" width="4" height="15" fill="rgb(223,71,24)"/><text x="31.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (2 samples, 0.39%)</title><rect x="28" y="1316" width="4" height="15" fill="rgb(251,95,4)"/><text x="31.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (2 samples, 0.39%)</title><rect x="28" y="1332" width="4" height="15" fill="rgb(251,183,8)"/><text x="31.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.19%)</title><rect x="30" y="1348" width="2" height="15" fill="rgb(216,157,30)"/><text x="33.00" y="1358.50"></text></g><g><title>getblock (inspect.py:941) (1 samples, 0.19%)</title><rect x="30" y="1364" width="2" height="15" fill="rgb(250,194,21)"/><text x="33.00" y="1374.50"></text></g><g><title>tokeneater (inspect.py:933) (1 samples, 0.19%)</title><rect x="30" y="1380" width="2" height="15" fill="rgb(237,143,0)"/><text x="33.00" y="1390.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:4) (11 samples, 2.14%)</title><rect x="10" y="52" width="25" height="15" fill="rgb(249,47,25)"/><text x="13.00" y="62.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 2.14%)</title><rect x="10" y="68" width="25" height="15" fill="rgb(213,10,19)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 2.14%)</title><rect x="10" y="84" width="25" height="15" fill="rgb(218,82,52)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 2.14%)</title><rect x="10" y="100" width="25" height="15" fill="rgb(225,150,11)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 2.14%)</title><rect x="10" y="116" width="25" height="15" fill="rgb(229,150,52)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 2.14%)</title><rect x="10" y="132" width="25" height="15" fill="rgb(211,32,20)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:7) (4 samples, 0.78%)</title><rect x="26" y="148" width="9" height="15" fill="rgb(245,21,12)"/><text x="29.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.78%)</title><rect x="26" y="164" width="9" height="15" fill="rgb(232,135,3)"/><text x="29.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.78%)</title><rect x="26" y="180" width="9" height="15" fill="rgb(244,159,2)"/><text x="29.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.78%)</title><rect x="26" y="196" width="9" height="15" fill="rgb(216,160,53)"/><text x="29.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.78%)</title><rect x="26" y="212" width="9" height="15" fill="rgb(228,51,13)"/><text x="29.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.78%)</title><rect x="26" y="228" width="9" height="15" fill="rgb(254,33,45)"/><text x="29.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 0.78%)</title><rect x="26" y="244" width="9" height="15" fill="rgb(246,86,31)"/><text x="29.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.78%)</title><rect x="26" y="260" width="9" height="15" fill="rgb(240,58,20)"/><text x="29.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.78%)</title><rect x="26" y="276" width="9" height="15" fill="rgb(230,56,29)"/><text x="29.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.78%)</title><rect x="26" y="292" width="9" height="15" fill="rgb(244,164,37)"/><text x="29.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.78%)</title><rect x="26" y="308" width="9" height="15" fill="rgb(231,178,28)"/><text x="29.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.78%)</title><rect x="26" y="324" width="9" height="15" fill="rgb(235,193,20)"/><text x="29.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 0.78%)</title><rect x="26" y="340" width="9" height="15" fill="rgb(232,176,1)"/><text x="29.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.78%)</title><rect x="26" y="356" width="9" height="15" fill="rgb(252,168,16)"/><text x="29.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.78%)</title><rect x="26" y="372" width="9" height="15" fill="rgb(248,1,2)"/><text x="29.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.78%)</title><rect x="26" y="388" width="9" height="15" fill="rgb(209,33,29)"/><text x="29.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.78%)</title><rect x="26" y="404" width="9" height="15" fill="rgb(206,55,9)"/><text x="29.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.78%)</title><rect x="26" y="420" width="9" height="15" fill="rgb(217,115,9)"/><text x="29.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.58%)</title><rect x="28" y="436" width="7" height="15" fill="rgb(252,165,12)"/><text x="31.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.58%)</title><rect x="28" y="452" width="7" height="15" fill="rgb(242,198,28)"/><text x="31.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.58%)</title><rect x="28" y="468" width="7" height="15" fill="rgb(209,10,43)"/><text x="31.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.58%)</title><rect x="28" y="484" width="7" height="15" fill="rgb(243,117,41)"/><text x="31.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.58%)</title><rect x="28" y="500" width="7" height="15" fill="rgb(218,143,37)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.58%)</title><rect x="28" y="516" width="7" height="15" fill="rgb(228,217,19)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.58%)</title><rect x="28" y="532" width="7" height="15" fill="rgb(242,40,51)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.58%)</title><rect x="28" y="548" width="7" height="15" fill="rgb(231,104,41)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.58%)</title><rect x="28" y="564" width="7" height="15" fill="rgb(242,72,34)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.58%)</title><rect x="28" y="580" width="7" height="15" fill="rgb(230,178,53)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.58%)</title><rect x="28" y="596" width="7" height="15" fill="rgb(248,188,20)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.58%)</title><rect x="28" y="612" width="7" height="15" fill="rgb(244,81,27)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.58%)</title><rect x="28" y="628" width="7" height="15" fill="rgb(225,172,53)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.58%)</title><rect x="28" y="644" width="7" height="15" fill="rgb(242,158,19)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.58%)</title><rect x="28" y="660" width="7" height="15" fill="rgb(212,122,3)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.58%)</title><rect x="28" y="676" width="7" height="15" fill="rgb(209,172,8)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.58%)</title><rect x="28" y="692" width="7" height="15" fill="rgb(251,128,46)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.58%)</title><rect x="28" y="708" width="7" height="15" fill="rgb(206,52,5)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.58%)</title><rect x="28" y="724" width="7" height="15" fill="rgb(206,115,35)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.58%)</title><rect x="28" y="740" width="7" height="15" fill="rgb(213,201,6)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.58%)</title><rect x="28" y="756" width="7" height="15" fill="rgb(212,72,14)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.58%)</title><rect x="28" y="772" width="7" height="15" fill="rgb(236,196,46)"/><text x="31.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.58%)</title><rect x="28" y="788" width="7" height="15" fill="rgb(213,109,26)"/><text x="31.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.58%)</title><rect x="28" y="804" width="7" height="15" fill="rgb(219,137,10)"/><text x="31.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.58%)</title><rect x="28" y="820" width="7" height="15" fill="rgb(250,59,43)"/><text x="31.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.58%)</title><rect x="28" y="836" width="7" height="15" fill="rgb(237,44,54)"/><text x="31.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.58%)</title><rect x="28" y="852" width="7" height="15" fill="rgb(212,79,54)"/><text x="31.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.58%)</title><rect x="28" y="868" width="7" height="15" fill="rgb(234,133,9)"/><text x="31.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.58%)</title><rect x="28" y="884" width="7" height="15" fill="rgb(217,189,2)"/><text x="31.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.58%)</title><rect x="28" y="900" width="7" height="15" fill="rgb(230,68,42)"/><text x="31.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.58%)</title><rect x="28" y="916" width="7" height="15" fill="rgb(234,13,38)"/><text x="31.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.58%)</title><rect x="28" y="932" width="7" height="15" fill="rgb(237,213,44)"/><text x="31.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.58%)</title><rect x="28" y="948" width="7" height="15" fill="rgb(225,54,45)"/><text x="31.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.58%)</title><rect x="28" y="964" width="7" height="15" fill="rgb(245,116,5)"/><text x="31.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.58%)</title><rect x="28" y="980" width="7" height="15" fill="rgb(242,62,50)"/><text x="31.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.58%)</title><rect x="28" y="996" width="7" height="15" fill="rgb(245,221,12)"/><text x="31.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.58%)</title><rect x="28" y="1012" width="7" height="15" fill="rgb(227,11,33)"/><text x="31.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.58%)</title><rect x="28" y="1028" width="7" height="15" fill="rgb(227,176,27)"/><text x="31.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.58%)</title><rect x="28" y="1044" width="7" height="15" fill="rgb(250,90,31)"/><text x="31.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.58%)</title><rect x="28" y="1060" width="7" height="15" fill="rgb(237,107,28)"/><text x="31.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.58%)</title><rect x="28" y="1076" width="7" height="15" fill="rgb(232,119,24)"/><text x="31.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.58%)</title><rect x="28" y="1092" width="7" height="15" fill="rgb(213,189,44)"/><text x="31.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:14) (1 samples, 0.19%)</title><rect x="32" y="1108" width="3" height="15" fill="rgb(226,188,47)"/><text x="35.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="32" y="1124" width="3" height="15" fill="rgb(250,191,2)"/><text x="35.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="32" y="1140" width="3" height="15" fill="rgb(237,227,37)"/><text x="35.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="32" y="1156" width="3" height="15" fill="rgb(222,32,9)"/><text x="35.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="32" y="1172" width="3" height="15" fill="rgb(206,202,21)"/><text x="35.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="32" y="1188" width="3" height="15" fill="rgb(212,26,15)"/><text x="35.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="32" y="1204" width="3" height="15" fill="rgb(237,197,8)"/><text x="35.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="32" y="1220" width="3" height="15" fill="rgb(247,121,49)"/><text x="35.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py:32) (1 samples, 0.19%)</title><rect x="32" y="1236" width="3" height="15" fill="rgb(242,132,31)"/><text x="35.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="32" y="1252" width="3" height="15" fill="rgb(252,10,5)"/><text x="35.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="32" y="1268" width="3" height="15" fill="rgb(208,84,46)"/><text x="35.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="32" y="1284" width="3" height="15" fill="rgb(219,175,29)"/><text x="35.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.19%)</title><rect x="32" y="1300" width="3" height="15" fill="rgb(229,147,39)"/><text x="35.00" y="1310.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.19%)</title><rect x="32" y="1316" width="3" height="15" fill="rgb(219,67,31)"/><text x="35.00" y="1326.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.19%)</title><rect x="32" y="1332" width="3" height="15" fill="rgb(243,163,29)"/><text x="35.00" y="1342.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1251) (1 samples, 0.19%)</title><rect x="32" y="1348" width="3" height="15" fill="rgb(217,28,26)"/><text x="35.00" y="1358.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:40) (1 samples, 0.19%)</title><rect x="35" y="52" width="2" height="15" fill="rgb(216,51,42)"/><text x="38.00" y="62.50"></text></g><g><title>start (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:11) (1 samples, 0.19%)</title><rect x="35" y="68" width="2" height="15" fill="rgb(225,202,4)"/><text x="38.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:39) (1 samples, 0.19%)</title><rect x="35" y="84" width="2" height="15" fill="rgb(239,199,7)"/><text x="38.00" y="94.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:47) (1 samples, 0.19%)</title><rect x="37" y="52" width="2" height="15" fill="rgb(251,133,15)"/><text x="40.00" y="62.50"></text></g><g><title>profile0_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:46) (1 samples, 0.19%)</title><rect x="37" y="68" width="2" height="15" fill="rgb(224,129,30)"/><text x="40.00" y="78.50"></text></g><g><title>setup_profile0 (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:26) (1 samples, 0.19%)</title><rect x="37" y="84" width="2" height="15" fill="rgb(209,46,18)"/><text x="40.00" y="94.50"></text></g><g><title>profile0 (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:18) (1 samples, 0.19%)</title><rect x="37" y="100" width="2" height="15" fill="rgb(229,115,51)"/><text x="40.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.19%)</title><rect x="37" y="116" width="2" height="15" fill="rgb(207,29,47)"/><text x="40.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (1 samples, 0.19%)</title><rect x="37" y="132" width="2" height="15" fill="rgb(207,170,25)"/><text x="40.00" y="142.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1131) (1 samples, 0.19%)</title><rect x="37" y="148" width="2" height="15" fill="rgb(223,194,25)"/><text x="40.00" y="158.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1096) (1 samples, 0.19%)</title><rect x="37" y="164" width="2" height="15" fill="rgb(231,98,22)"/><text x="40.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py:1096) (1 samples, 0.19%)</title><rect x="37" y="180" width="2" height="15" fill="rgb(247,59,19)"/><text x="40.00" y="190.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (1 samples, 0.19%)</title><rect x="37" y="196" width="2" height="15" fill="rgb(238,69,0)"/><text x="40.00" y="206.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (1 samples, 0.19%)</title><rect x="37" y="212" width="2" height="15" fill="rgb(251,37,16)"/><text x="40.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.19%)</title><rect x="37" y="228" width="2" height="15" fill="rgb(243,218,44)"/><text x="40.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c:2261) (1 samples, 0.19%)</title><rect x="37" y="244" width="2" height="15" fill="rgb(250,218,19)"/><text x="40.00" y="254.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1128) (1 samples, 0.19%)</title><rect x="39" y="148" width="3" height="15" fill="rgb(214,197,51)"/><text x="42.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.19%)</title><rect x="39" y="164" width="3" height="15" fill="rgb(207,184,3)"/><text x="42.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.19%)</title><rect x="39" y="180" width="3" height="15" fill="rgb(245,169,50)"/><text x="42.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.19%)</title><rect x="39" y="196" width="3" height="15" fill="rgb(226,116,27)"/><text x="42.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.19%)</title><rect x="44" y="212" width="2" height="15" fill="rgb(241,154,43)"/><text x="47.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (2 samples, 0.39%)</title><rect x="46" y="212" width="5" height="15" fill="rgb(214,124,30)"/><text x="49.00" y="222.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (7 samples, 1.36%)</title><rect x="44" y="196" width="16" height="15" fill="rgb(214,195,36)"/><text x="47.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 0.78%)</title><rect x="51" y="212" width="9" height="15" fill="rgb(238,219,47)"/><text x="54.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.39%)</title><rect x="55" y="228" width="5" height="15" fill="rgb(209,0,11)"/><text x="58.00" y="238.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.39%)</title><rect x="55" y="244" width="5" height="15" fill="rgb(210,105,17)"/><text x="58.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (2 samples, 0.39%)</title><rect x="64" y="228" width="5" height="15" fill="rgb(209,152,1)"/><text x="67.00" y="238.50"></text></g><g><title>simplefilter (warnings.py:175) (2 samples, 0.39%)</title><rect x="69" y="244" width="5" height="15" fill="rgb(207,139,33)"/><text x="72.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.19%)</title><rect x="74" y="244" width="2" height="15" fill="rgb(242,46,18)"/><text x="77.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.19%)</title><rect x="76" y="260" width="2" height="15" fill="rgb(227,128,24)"/><text x="79.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.19%)</title><rect x="78" y="260" width="3" height="15" fill="rgb(214,158,32)"/><text x="81.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (7 samples, 1.36%)</title><rect x="69" y="228" width="16" height="15" fill="rgb(238,100,25)"/><text x="72.00" y="238.50"></text></g><g><title>simplefilter (warnings.py:179) (4 samples, 0.78%)</title><rect x="76" y="244" width="9" height="15" fill="rgb(230,188,53)"/><text x="79.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:189) (2 samples, 0.39%)</title><rect x="81" y="260" width="4" height="15" fill="rgb(223,223,38)"/><text x="84.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (2 samples, 0.39%)</title><rect x="85" y="228" width="5" height="15" fill="rgb(248,146,49)"/><text x="88.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.19%)</title><rect x="87" y="244" width="3" height="15" fill="rgb(215,110,51)"/><text x="90.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.19%)</title><rect x="87" y="260" width="3" height="15" fill="rgb(214,26,40)"/><text x="90.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:432) (1 samples, 0.19%)</title><rect x="87" y="276" width="3" height="15" fill="rgb(244,133,13)"/><text x="90.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.19%)</title><rect x="90" y="228" width="2" height="15" fill="rgb(234,1,52)"/><text x="93.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.19%)</title><rect x="92" y="228" width="2" height="15" fill="rgb(243,40,26)"/><text x="95.00" y="238.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.19%)</title><rect x="92" y="244" width="2" height="15" fill="rgb(247,65,21)"/><text x="95.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.19%)</title><rect x="94" y="228" width="3" height="15" fill="rgb(206,109,26)"/><text x="97.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.19%)</title><rect x="94" y="244" width="3" height="15" fill="rgb(217,0,27)"/><text x="97.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.19%)</title><rect x="97" y="228" width="2" height="15" fill="rgb(243,201,22)"/><text x="100.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.19%)</title><rect x="97" y="244" width="2" height="15" fill="rgb(210,170,31)"/><text x="100.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (20 samples, 3.88%)</title><rect x="60" y="196" width="46" height="15" fill="rgb(217,38,3)"/><text x="63.00" y="206.50">pred..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (20 samples, 3.88%)</title><rect x="60" y="212" width="46" height="15" fill="rgb(253,89,54)"/><text x="63.00" y="222.50">_val..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 0.58%)</title><rect x="99" y="228" width="7" height="15" fill="rgb(218,181,16)"/><text x="102.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.39%)</title><rect x="101" y="244" width="5" height="15" fill="rgb(228,174,39)"/><text x="104.00" y="254.50"></text></g><g><title>0x7fcf82070d2e (?) (1 samples, 0.19%)</title><rect x="106" y="212" width="2" height="15" fill="rgb(215,157,11)"/><text x="109.00" y="222.50"></text></g><g><title>0x7fcf8206ffa6 (?) (1 samples, 0.19%)</title><rect x="106" y="228" width="2" height="15" fill="rgb(215,170,30)"/><text x="109.00" y="238.50"></text></g><g><title>0x7fcf8207f405 (?) (1 samples, 0.19%)</title><rect x="106" y="244" width="2" height="15" fill="rgb(253,64,40)"/><text x="109.00" y="254.50"></text></g><g><title>0x7fcf8207e2df (?) (1 samples, 0.19%)</title><rect x="106" y="260" width="2" height="15" fill="rgb(245,206,35)"/><text x="109.00" y="270.50"></text></g><g><title>0x7fcf82062d04 (?) (1 samples, 0.19%)</title><rect x="106" y="276" width="2" height="15" fill="rgb(216,118,26)"/><text x="109.00" y="286.50"></text></g><g><title>0x7fcf82062666 (?) (1 samples, 0.19%)</title><rect x="106" y="292" width="2" height="15" fill="rgb(221,104,48)"/><text x="109.00" y="302.50"></text></g><g><title>0x7fcf820582fd (?) (1 samples, 0.19%)</title><rect x="106" y="308" width="2" height="15" fill="rgb(236,201,14)"/><text x="109.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c:807) (1 samples, 0.19%)</title><rect x="106" y="324" width="2" height="15" fill="rgb(212,12,29)"/><text x="109.00" y="334.50"></text></g><g><title>0x7fcf8207e2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="108" y="260" width="2" height="15" fill="rgb(230,23,44)"/><text x="111.00" y="270.50"></text></g><g><title>0x7fcf82062d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="108" y="276" width="2" height="15" fill="rgb(220,158,17)"/><text x="111.00" y="286.50"></text></g><g><title>0x7fcf82062666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="108" y="292" width="2" height="15" fill="rgb(236,31,7)"/><text x="111.00" y="302.50"></text></g><g><title>0x7fcf820582fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="108" y="308" width="2" height="15" fill="rgb(222,159,39)"/><text x="111.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.19%)</title><rect x="108" y="324" width="2" height="15" fill="rgb(234,202,51)"/><text x="111.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.19%)</title><rect x="108" y="340" width="2" height="15" fill="rgb(243,218,4)"/><text x="111.00" y="350.50"></text></g><g><title>_buffer_info_free (buffer.c:635) (1 samples, 0.19%)</title><rect x="108" y="356" width="2" height="15" fill="rgb(218,51,35)"/><text x="111.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="108" y="372" width="2" height="15" fill="rgb(229,87,21)"/><text x="111.00" y="382.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.19%)</title><rect x="110" y="276" width="3" height="15" fill="rgb(210,35,4)"/><text x="113.00" y="286.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="110" y="292" width="3" height="15" fill="rgb(227,88,7)"/><text x="113.00" y="302.50"></text></g><g><title>0x7fcf8207e592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.58%)</title><rect x="110" y="260" width="7" height="15" fill="rgb(248,48,10)"/><text x="113.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (2 samples, 0.39%)</title><rect x="113" y="276" width="4" height="15" fill="rgb(236,96,34)"/><text x="116.00" y="286.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.39%)</title><rect x="113" y="292" width="4" height="15" fill="rgb(250,94,4)"/><text x="116.00" y="302.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (2 samples, 0.39%)</title><rect x="113" y="308" width="4" height="15" fill="rgb(235,6,18)"/><text x="116.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (2 samples, 0.39%)</title><rect x="113" y="324" width="4" height="15" fill="rgb(232,171,20)"/><text x="116.00" y="334.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (2 samples, 0.39%)</title><rect x="113" y="340" width="4" height="15" fill="rgb(223,160,49)"/><text x="116.00" y="350.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:252) (2 samples, 0.39%)</title><rect x="113" y="356" width="4" height="15" fill="rgb(236,221,17)"/><text x="116.00" y="366.50"></text></g><g><title>0x7fcf8207e6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="117" y="260" width="2" height="15" fill="rgb(252,76,26)"/><text x="120.00" y="270.50"></text></g><g><title>0x7fcf8207e6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="119" y="260" width="3" height="15" fill="rgb(237,229,33)"/><text x="122.00" y="270.50"></text></g><g><title>0x7fcf8207e6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="122" y="260" width="2" height="15" fill="rgb(236,66,8)"/><text x="125.00" y="270.50"></text></g><g><title>0x7fcf8207e7b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="124" y="260" width="2" height="15" fill="rgb(243,17,7)"/><text x="127.00" y="270.50"></text></g><g><title>0x7fcf8207f405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.75%)</title><rect x="108" y="244" width="21" height="15" fill="rgb(207,130,54)"/><text x="111.00" y="254.50"></text></g><g><title>0x7fcf8207e887 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="126" y="260" width="3" height="15" fill="rgb(217,227,39)"/><text x="129.00" y="270.50"></text></g><g><title>0x7fcf8206ffa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.94%)</title><rect x="108" y="228" width="23" height="15" fill="rgb(215,111,48)"/><text x="111.00" y="238.50">0..</text></g><g><title>0x7fcf8207f540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="129" y="244" width="2" height="15" fill="rgb(206,34,33)"/><text x="132.00" y="254.50"></text></g><g><title>0x7fcf820542f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="129" y="260" width="2" height="15" fill="rgb(234,119,2)"/><text x="132.00" y="270.50"></text></g><g><title>0x7fcf820534dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="129" y="276" width="2" height="15" fill="rgb(243,215,2)"/><text x="132.00" y="286.50"></text></g><g><title>array_take (methods.c:131) (1 samples, 0.19%)</title><rect x="131" y="244" width="2" height="15" fill="rgb(230,54,50)"/><text x="134.00" y="254.50"></text></g><g><title>0x7fcf8207005a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="131" y="228" width="5" height="15" fill="rgb(239,180,20)"/><text x="134.00" y="238.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.19%)</title><rect x="133" y="244" width="3" height="15" fill="rgb(229,193,34)"/><text x="136.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.19%)</title><rect x="133" y="260" width="3" height="15" fill="rgb(236,186,53)"/><text x="136.00" y="270.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3949) (1 samples, 0.19%)</title><rect x="133" y="276" width="3" height="15" fill="rgb(250,52,32)"/><text x="136.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:728) (1 samples, 0.19%)</title><rect x="136" y="276" width="2" height="15" fill="rgb(242,105,53)"/><text x="139.00" y="286.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.19%)</title><rect x="136" y="292" width="2" height="15" fill="rgb(228,177,49)"/><text x="139.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.39%)</title><rect x="136" y="244" width="4" height="15" fill="rgb(236,150,15)"/><text x="139.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.39%)</title><rect x="136" y="260" width="4" height="15" fill="rgb(214,16,19)"/><text x="139.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.19%)</title><rect x="138" y="276" width="2" height="15" fill="rgb(233,127,7)"/><text x="141.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (16 samples, 3.11%)</title><rect x="106" y="196" width="36" height="15" fill="rgb(222,14,22)"/><text x="109.00" y="206.50">pre..</text></g><g><title>0x7fcf82070d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 2.91%)</title><rect x="108" y="212" width="34" height="15" fill="rgb(228,31,14)"/><text x="111.00" y="222.50">0x..</text></g><g><title>0x7fcf8207014f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.58%)</title><rect x="136" y="228" width="6" height="15" fill="rgb(239,55,13)"/><text x="139.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.19%)</title><rect x="140" y="244" width="2" height="15" fill="rgb(205,67,1)"/><text x="143.00" y="254.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.19%)</title><rect x="140" y="260" width="2" height="15" fill="rgb(225,157,25)"/><text x="143.00" y="270.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.19%)</title><rect x="140" y="276" width="2" height="15" fill="rgb(252,71,15)"/><text x="143.00" y="286.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.19%)</title><rect x="140" y="292" width="2" height="15" fill="rgb(228,120,39)"/><text x="143.00" y="302.50"></text></g><g><title>0x7fcfa862cdf0 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="140" y="308" width="2" height="15" fill="rgb(236,228,43)"/><text x="143.00" y="318.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (1 samples, 0.19%)</title><rect x="142" y="196" width="3" height="15" fill="rgb(223,216,14)"/><text x="145.00" y="206.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (1 samples, 0.19%)</title><rect x="142" y="212" width="3" height="15" fill="rgb(235,155,14)"/><text x="145.00" y="222.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1096) (46 samples, 8.93%)</title><rect x="42" y="164" width="105" height="15" fill="rgb(215,156,2)"/><text x="45.00" y="174.50">_get_median_..</text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py:1096) (46 samples, 8.93%)</title><rect x="42" y="180" width="105" height="15" fill="rgb(251,111,43)"/><text x="45.00" y="190.50">&lt;listcomp&gt; (..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (1 samples, 0.19%)</title><rect x="145" y="196" width="2" height="15" fill="rgb(241,59,32)"/><text x="148.00" y="206.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (2 samples, 0.39%)</title><rect x="147" y="276" width="5" height="15" fill="rgb(252,187,15)"/><text x="150.00" y="286.50"></text></g><g><title>aquicksort_double (quicksort.c.src:222) (2 samples, 0.39%)</title><rect x="147" y="292" width="5" height="15" fill="rgb(223,140,5)"/><text x="150.00" y="302.50"></text></g><g><title>DOUBLE_LT (npysort_common.h:130) (1 samples, 0.19%)</title><rect x="149" y="308" width="3" height="15" fill="rgb(228,173,34)"/><text x="152.00" y="318.50"></text></g><g><title>_new_argsortlike (item_selection.c:1100) (1 samples, 0.19%)</title><rect x="152" y="276" width="2" height="15" fill="rgb(240,113,39)"/><text x="155.00" y="286.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1099) (4 samples, 0.78%)</title><rect x="147" y="164" width="9" height="15" fill="rgb(236,44,27)"/><text x="150.00" y="174.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (4 samples, 0.78%)</title><rect x="147" y="180" width="9" height="15" fill="rgb(234,45,10)"/><text x="150.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.78%)</title><rect x="147" y="196" width="9" height="15" fill="rgb(224,47,26)"/><text x="150.00" y="206.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (4 samples, 0.78%)</title><rect x="147" y="212" width="9" height="15" fill="rgb(211,187,43)"/><text x="150.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (4 samples, 0.78%)</title><rect x="147" y="228" width="9" height="15" fill="rgb(254,11,32)"/><text x="150.00" y="238.50"></text></g><g><title>array_argsort (methods.c:1395) (4 samples, 0.78%)</title><rect x="147" y="244" width="9" height="15" fill="rgb(245,88,23)"/><text x="150.00" y="254.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (4 samples, 0.78%)</title><rect x="147" y="260" width="9" height="15" fill="rgb(231,125,39)"/><text x="150.00" y="270.50"></text></g><g><title>_new_argsortlike (item_selection.c:1101) (1 samples, 0.19%)</title><rect x="154" y="276" width="2" height="15" fill="rgb(232,63,14)"/><text x="157.00" y="286.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3927) (2 samples, 0.39%)</title><rect x="158" y="340" width="5" height="15" fill="rgb(238,33,35)"/><text x="161.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.19%)</title><rect x="163" y="356" width="2" height="15" fill="rgb(209,202,4)"/><text x="166.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3934) (2 samples, 0.39%)</title><rect x="163" y="340" width="5" height="15" fill="rgb(241,86,6)"/><text x="166.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.19%)</title><rect x="165" y="356" width="3" height="15" fill="rgb(218,85,4)"/><text x="168.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:249) (1 samples, 0.19%)</title><rect x="165" y="372" width="3" height="15" fill="rgb(227,115,7)"/><text x="168.00" y="382.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:825) (6 samples, 1.17%)</title><rect x="156" y="180" width="14" height="15" fill="rgb(226,221,49)"/><text x="159.00" y="190.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (6 samples, 1.17%)</title><rect x="156" y="196" width="14" height="15" fill="rgb(224,39,5)"/><text x="159.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.17%)</title><rect x="156" y="212" width="14" height="15" fill="rgb(210,176,14)"/><text x="159.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (6 samples, 1.17%)</title><rect x="156" y="228" width="14" height="15" fill="rgb(241,216,29)"/><text x="159.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (6 samples, 1.17%)</title><rect x="156" y="244" width="14" height="15" fill="rgb(213,121,0)"/><text x="159.00" y="254.50"></text></g><g><title>array_cumsum (methods.c:2239) (5 samples, 0.97%)</title><rect x="158" y="260" width="12" height="15" fill="rgb(208,125,0)"/><text x="161.00" y="270.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (5 samples, 0.97%)</title><rect x="158" y="276" width="12" height="15" fill="rgb(205,128,42)"/><text x="161.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (5 samples, 0.97%)</title><rect x="158" y="292" width="12" height="15" fill="rgb(249,149,44)"/><text x="161.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (5 samples, 0.97%)</title><rect x="158" y="308" width="12" height="15" fill="rgb(249,25,11)"/><text x="161.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (5 samples, 0.97%)</title><rect x="158" y="324" width="12" height="15" fill="rgb(253,138,20)"/><text x="161.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:4006) (1 samples, 0.19%)</title><rect x="168" y="340" width="2" height="15" fill="rgb(241,187,53)"/><text x="171.00" y="350.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="168" y="356" width="2" height="15" fill="rgb(206,209,18)"/><text x="171.00" y="366.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.19%)</title><rect x="170" y="260" width="2" height="15" fill="rgb(206,75,19)"/><text x="173.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="170" y="276" width="2" height="15" fill="rgb(234,111,31)"/><text x="173.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="170" y="292" width="2" height="15" fill="rgb(207,96,8)"/><text x="173.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.19%)</title><rect x="170" y="308" width="2" height="15" fill="rgb(252,196,36)"/><text x="173.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.19%)</title><rect x="172" y="276" width="2" height="15" fill="rgb(218,59,47)"/><text x="175.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3629) (1 samples, 0.19%)</title><rect x="174" y="292" width="3" height="15" fill="rgb(210,73,1)"/><text x="177.00" y="302.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:312) (1 samples, 0.19%)</title><rect x="174" y="308" width="3" height="15" fill="rgb(224,129,30)"/><text x="177.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.19%)</title><rect x="177" y="308" width="2" height="15" fill="rgb(219,10,27)"/><text x="180.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.19%)</title><rect x="177" y="324" width="2" height="15" fill="rgb(218,26,9)"/><text x="180.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.19%)</title><rect x="177" y="340" width="2" height="15" fill="rgb(213,28,49)"/><text x="180.00" y="350.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.19%)</title><rect x="177" y="356" width="2" height="15" fill="rgb(215,160,18)"/><text x="180.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3514) (1 samples, 0.19%)</title><rect x="177" y="372" width="2" height="15" fill="rgb(223,217,32)"/><text x="180.00" y="382.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.19%)</title><rect x="177" y="388" width="2" height="15" fill="rgb(239,73,48)"/><text x="180.00" y="398.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:955) (1 samples, 0.19%)</title><rect x="177" y="404" width="2" height="15" fill="rgb(208,33,39)"/><text x="180.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="179" y="324" width="2" height="15" fill="rgb(214,91,37)"/><text x="182.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.19%)</title><rect x="179" y="340" width="2" height="15" fill="rgb(238,105,28)"/><text x="182.00" y="350.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:892) (1 samples, 0.19%)</title><rect x="179" y="356" width="2" height="15" fill="rgb(223,20,38)"/><text x="182.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.19%)</title><rect x="181" y="324" width="3" height="15" fill="rgb(218,219,7)"/><text x="184.00" y="334.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1688) (1 samples, 0.19%)</title><rect x="181" y="340" width="3" height="15" fill="rgb(232,19,1)"/><text x="184.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.58%)</title><rect x="179" y="308" width="7" height="15" fill="rgb(242,176,0)"/><text x="182.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.19%)</title><rect x="184" y="324" width="2" height="15" fill="rgb(250,70,50)"/><text x="187.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2131) (1 samples, 0.19%)</title><rect x="184" y="340" width="2" height="15" fill="rgb(240,92,38)"/><text x="187.00" y="350.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c:2733) (1 samples, 0.19%)</title><rect x="184" y="356" width="2" height="15" fill="rgb(239,64,13)"/><text x="187.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.19%)</title><rect x="186" y="340" width="2" height="15" fill="rgb(209,50,44)"/><text x="189.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.19%)</title><rect x="188" y="340" width="3" height="15" fill="rgb(250,125,6)"/><text x="191.00" y="350.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:826) (10 samples, 1.94%)</title><rect x="170" y="180" width="23" height="15" fill="rgb(221,218,31)"/><text x="173.00" y="190.50">s..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (10 samples, 1.94%)</title><rect x="170" y="196" width="23" height="15" fill="rgb(246,123,40)"/><text x="173.00" y="206.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (10 samples, 1.94%)</title><rect x="170" y="212" width="23" height="15" fill="rgb(222,186,10)"/><text x="173.00" y="222.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (10 samples, 1.94%)</title><rect x="170" y="228" width="23" height="15" fill="rgb(210,198,27)"/><text x="173.00" y="238.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (10 samples, 1.94%)</title><rect x="170" y="244" width="23" height="15" fill="rgb(206,185,8)"/><text x="173.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (9 samples, 1.75%)</title><rect x="172" y="260" width="21" height="15" fill="rgb(235,13,3)"/><text x="175.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 1.55%)</title><rect x="174" y="276" width="19" height="15" fill="rgb(209,198,10)"/><text x="177.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 1.36%)</title><rect x="177" y="292" width="16" height="15" fill="rgb(218,165,5)"/><text x="180.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (3 samples, 0.58%)</title><rect x="186" y="308" width="7" height="15" fill="rgb(233,67,41)"/><text x="189.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (3 samples, 0.58%)</title><rect x="186" y="324" width="7" height="15" fill="rgb(216,142,37)"/><text x="189.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.19%)</title><rect x="191" y="340" width="2" height="15" fill="rgb(247,137,22)"/><text x="194.00" y="350.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="193" y="196" width="2" height="15" fill="rgb(253,66,29)"/><text x="196.00" y="206.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="195" y="196" width="2" height="15" fill="rgb(212,35,27)"/><text x="198.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="195" y="212" width="2" height="15" fill="rgb(219,0,5)"/><text x="198.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (1 samples, 0.19%)</title><rect x="195" y="228" width="2" height="15" fill="rgb(248,111,42)"/><text x="198.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.19%)</title><rect x="195" y="244" width="2" height="15" fill="rgb(240,45,28)"/><text x="198.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.19%)</title><rect x="197" y="228" width="3" height="15" fill="rgb(230,85,22)"/><text x="200.00" y="238.50"></text></g><g><title>npy_free_cache (alloc.c:146) (1 samples, 0.19%)</title><rect x="197" y="244" width="3" height="15" fill="rgb(230,110,4)"/><text x="200.00" y="254.50"></text></g><g><title>isclose (numpy/core/numeric.py:2269) (3 samples, 0.58%)</title><rect x="200" y="228" width="7" height="15" fill="rgb(227,79,25)"/><text x="203.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="204" y="244" width="3" height="15" fill="rgb(251,212,20)"/><text x="207.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="204" y="260" width="3" height="15" fill="rgb(237,95,12)"/><text x="207.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.19%)</title><rect x="204" y="276" width="3" height="15" fill="rgb(232,6,30)"/><text x="207.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.19%)</title><rect x="204" y="292" width="3" height="15" fill="rgb(223,102,19)"/><text x="207.00" y="302.50"></text></g><g><title>DOUBLE_isfinite (loops.c.src:1809) (1 samples, 0.19%)</title><rect x="204" y="308" width="3" height="15" fill="rgb(228,177,53)"/><text x="207.00" y="318.50"></text></g><g><title>run_isfinite_simd_DOUBLE (simd.inc.src:325) (1 samples, 0.19%)</title><rect x="204" y="324" width="3" height="15" fill="rgb(211,19,22)"/><text x="207.00" y="334.50"></text></g><g><title>sse2_isfinite_DOUBLE (simd.inc.src:864) (1 samples, 0.19%)</title><rect x="204" y="340" width="3" height="15" fill="rgb(230,126,35)"/><text x="207.00" y="350.50"></text></g><g><title>_mm_andnot_pd (emmintrin.h:321) (1 samples, 0.19%)</title><rect x="204" y="356" width="3" height="15" fill="rgb(249,15,27)"/><text x="207.00" y="366.50"></text></g><g><title>isclose (numpy/core/numeric.py:2270) (1 samples, 0.19%)</title><rect x="207" y="228" width="2" height="15" fill="rgb(224,169,29)"/><text x="210.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="207" y="244" width="2" height="15" fill="rgb(213,139,19)"/><text x="210.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="207" y="260" width="2" height="15" fill="rgb(223,100,19)"/><text x="210.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.19%)</title><rect x="207" y="276" width="2" height="15" fill="rgb(239,49,41)"/><text x="210.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c:167) (1 samples, 0.19%)</title><rect x="207" y="292" width="2" height="15" fill="rgb(226,3,40)"/><text x="210.00" y="302.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.19%)</title><rect x="209" y="292" width="2" height="15" fill="rgb(214,198,25)"/><text x="212.00" y="302.50"></text></g><g><title>isclose (numpy/core/numeric.py:2271) (2 samples, 0.39%)</title><rect x="209" y="228" width="4" height="15" fill="rgb(218,28,15)"/><text x="212.00" y="238.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (2 samples, 0.39%)</title><rect x="209" y="244" width="4" height="15" fill="rgb(217,110,18)"/><text x="212.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.39%)</title><rect x="209" y="260" width="4" height="15" fill="rgb(247,188,20)"/><text x="212.00" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (2 samples, 0.39%)</title><rect x="209" y="276" width="4" height="15" fill="rgb(228,128,1)"/><text x="212.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.19%)</title><rect x="211" y="292" width="2" height="15" fill="rgb(234,39,9)"/><text x="214.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5514) (1 samples, 0.19%)</title><rect x="211" y="308" width="2" height="15" fill="rgb(208,193,28)"/><text x="214.00" y="318.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (1 samples, 0.19%)</title><rect x="216" y="276" width="2" height="15" fill="rgb(229,139,3)"/><text x="219.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:187) (1 samples, 0.19%)</title><rect x="216" y="292" width="2" height="15" fill="rgb(231,218,21)"/><text x="219.00" y="302.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2257) (3 samples, 0.58%)</title><rect x="213" y="244" width="7" height="15" fill="rgb(225,125,30)"/><text x="216.00" y="254.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (2 samples, 0.39%)</title><rect x="216" y="260" width="4" height="15" fill="rgb(250,66,4)"/><text x="219.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:135) (1 samples, 0.19%)</title><rect x="218" y="276" width="2" height="15" fill="rgb(209,50,20)"/><text x="221.00" y="286.50"></text></g><g><title>ufunc_seterr (ufunc_object.c:4853) (1 samples, 0.19%)</title><rect x="218" y="292" width="2" height="15" fill="rgb(226,124,42)"/><text x="221.00" y="302.50"></text></g><g><title>ufunc_update_use_defaults (extobj.c:35) (1 samples, 0.19%)</title><rect x="218" y="308" width="2" height="15" fill="rgb(241,5,24)"/><text x="221.00" y="318.50"></text></g><g><title>_extract_pyvals (extobj.c:208) (1 samples, 0.19%)</title><rect x="218" y="324" width="2" height="15" fill="rgb(238,178,33)"/><text x="221.00" y="334.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:447) (1 samples, 0.19%)</title><rect x="220" y="260" width="3" height="15" fill="rgb(220,208,33)"/><text x="223.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:135) (1 samples, 0.19%)</title><rect x="220" y="276" width="3" height="15" fill="rgb(235,115,6)"/><text x="223.00" y="286.50"></text></g><g><title>ufunc_seterr (ufunc_object.c:4837) (1 samples, 0.19%)</title><rect x="220" y="292" width="3" height="15" fill="rgb(235,174,5)"/><text x="223.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.19%)</title><rect x="223" y="260" width="2" height="15" fill="rgb(216,51,16)"/><text x="226.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c:146) (1 samples, 0.19%)</title><rect x="223" y="276" width="2" height="15" fill="rgb(219,2,42)"/><text x="226.00" y="286.50"></text></g><g><title>array_subtract (number.c:342) (1 samples, 0.19%)</title><rect x="225" y="260" width="2" height="15" fill="rgb(219,10,3)"/><text x="228.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="225" y="276" width="2" height="15" fill="rgb(223,114,1)"/><text x="228.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.19%)</title><rect x="225" y="292" width="2" height="15" fill="rgb(209,139,21)"/><text x="228.00" y="302.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1292) (1 samples, 0.19%)</title><rect x="225" y="308" width="2" height="15" fill="rgb(233,159,9)"/><text x="228.00" y="318.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1102) (32 samples, 6.21%)</title><rect x="156" y="164" width="73" height="15" fill="rgb(244,2,12)"/><text x="159.00" y="174.50">_get_med..</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:828) (16 samples, 3.11%)</title><rect x="193" y="180" width="36" height="15" fill="rgb(253,46,5)"/><text x="196.00" y="190.50">sta..</text></g><g><title>isclose (&lt;__array_function__ internals&gt;:6) (14 samples, 2.72%)</title><rect x="197" y="196" width="32" height="15" fill="rgb(251,198,31)"/><text x="200.00" y="206.50">is..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (14 samples, 2.72%)</title><rect x="197" y="212" width="32" height="15" fill="rgb(235,207,19)"/><text x="200.00" y="222.50">ar..</text></g><g><title>isclose (numpy/core/numeric.py:2272) (7 samples, 1.36%)</title><rect x="213" y="228" width="16" height="15" fill="rgb(216,81,24)"/><text x="216.00" y="238.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2258) (4 samples, 0.78%)</title><rect x="220" y="244" width="9" height="15" fill="rgb(207,92,52)"/><text x="223.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="227" y="260" width="2" height="15" fill="rgb(221,223,40)"/><text x="230.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="227" y="276" width="2" height="15" fill="rgb(254,84,52)"/><text x="230.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.19%)</title><rect x="227" y="292" width="2" height="15" fill="rgb(205,32,0)"/><text x="230.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.19%)</title><rect x="227" y="308" width="2" height="15" fill="rgb(220,7,53)"/><text x="230.00" y="318.50"></text></g><g><title>DOUBLE_absolute (loops.c.src:1985) (1 samples, 0.19%)</title><rect x="227" y="324" width="2" height="15" fill="rgb(251,181,15)"/><text x="230.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_DOUBLE (simd.inc.src:194) (1 samples, 0.19%)</title><rect x="227" y="340" width="2" height="15" fill="rgb(217,122,2)"/><text x="230.00" y="350.50"></text></g><g><title>abs_ptrdiff (simd.inc.src:40) (1 samples, 0.19%)</title><rect x="227" y="356" width="2" height="15" fill="rgb(220,89,19)"/><text x="230.00" y="366.50"></text></g><g><title>array_multiply (number.c:354) (1 samples, 0.19%)</title><rect x="229" y="180" width="3" height="15" fill="rgb(231,65,27)"/><text x="232.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="229" y="196" width="3" height="15" fill="rgb(248,16,35)"/><text x="232.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="229" y="212" width="3" height="15" fill="rgb(211,92,39)"/><text x="232.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.19%)</title><rect x="229" y="228" width="3" height="15" fill="rgb(245,17,19)"/><text x="232.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.19%)</title><rect x="229" y="244" width="3" height="15" fill="rgb(208,164,51)"/><text x="232.00" y="254.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.19%)</title><rect x="229" y="260" width="3" height="15" fill="rgb(236,178,5)"/><text x="232.00" y="270.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:208) (1 samples, 0.19%)</title><rect x="229" y="276" width="3" height="15" fill="rgb(225,146,48)"/><text x="232.00" y="286.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1103) (2 samples, 0.39%)</title><rect x="229" y="164" width="5" height="15" fill="rgb(241,18,48)"/><text x="232.00" y="174.50"></text></g><g><title>array_richcompare (arrayobject.c:1509) (1 samples, 0.19%)</title><rect x="232" y="180" width="2" height="15" fill="rgb(251,49,29)"/><text x="235.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="232" y="196" width="2" height="15" fill="rgb(227,48,42)"/><text x="235.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="232" y="212" width="2" height="15" fill="rgb(240,139,45)"/><text x="235.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.19%)</title><rect x="232" y="228" width="2" height="15" fill="rgb(241,58,43)"/><text x="235.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="232" y="244" width="2" height="15" fill="rgb(210,20,23)"/><text x="235.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="232" y="260" width="2" height="15" fill="rgb(244,9,11)"/><text x="235.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.19%)</title><rect x="232" y="276" width="2" height="15" fill="rgb(254,146,44)"/><text x="235.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.19%)</title><rect x="232" y="292" width="2" height="15" fill="rgb(251,99,16)"/><text x="235.00" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:199) (1 samples, 0.19%)</title><rect x="232" y="308" width="2" height="15" fill="rgb(215,19,7)"/><text x="235.00" y="318.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.19%)</title><rect x="234" y="180" width="2" height="15" fill="rgb(222,97,6)"/><text x="237.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.19%)</title><rect x="234" y="196" width="2" height="15" fill="rgb(232,189,13)"/><text x="237.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.19%)</title><rect x="236" y="180" width="3" height="15" fill="rgb(206,138,19)"/><text x="239.00" y="190.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2517) (1 samples, 0.19%)</title><rect x="236" y="196" width="3" height="15" fill="rgb(236,145,32)"/><text x="239.00" y="206.50"></text></g><g><title>check_and_adjust_index (common.h:110) (1 samples, 0.19%)</title><rect x="236" y="212" width="3" height="15" fill="rgb(231,15,10)"/><text x="239.00" y="222.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1106) (3 samples, 0.58%)</title><rect x="234" y="164" width="7" height="15" fill="rgb(219,216,11)"/><text x="237.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.19%)</title><rect x="239" y="180" width="2" height="15" fill="rgb(218,188,21)"/><text x="242.00" y="190.50"></text></g><g><title>0x7fcfa862cdfb (libc-2.29.so) (1 samples, 0.19%)</title><rect x="239" y="196" width="2" height="15" fill="rgb(242,188,1)"/><text x="242.00" y="206.50"></text></g><g><title>0x7fcfa862bac1 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="239" y="212" width="2" height="15" fill="rgb(251,41,32)"/><text x="242.00" y="222.50"></text></g><g><title>array_arange (multiarraymodule.c:2754) (1 samples, 0.19%)</title><rect x="241" y="180" width="2" height="15" fill="rgb(253,12,15)"/><text x="244.00" y="190.50"></text></g><g><title>array_arange (multiarraymodule.c:2763) (1 samples, 0.19%)</title><rect x="243" y="180" width="3" height="15" fill="rgb(249,179,47)"/><text x="246.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3378) (1 samples, 0.19%)</title><rect x="243" y="196" width="3" height="15" fill="rgb(205,142,2)"/><text x="246.00" y="206.50"></text></g><g><title>PyArray_DescrFromObject (ctors.c:2668) (1 samples, 0.19%)</title><rect x="243" y="212" width="3" height="15" fill="rgb(216,210,24)"/><text x="246.00" y="222.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.19%)</title><rect x="243" y="228" width="3" height="15" fill="rgb(246,158,35)"/><text x="246.00" y="238.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:528) (1 samples, 0.19%)</title><rect x="243" y="244" width="3" height="15" fill="rgb(249,67,37)"/><text x="246.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:54) (91 samples, 17.67%)</title><rect x="39" y="52" width="209" height="15" fill="rgb(233,44,50)"/><text x="42.00" y="62.50">&lt;module&gt; (bench_AdaBoostReg..</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:53) (91 samples, 17.67%)</title><rect x="39" y="68" width="209" height="15" fill="rgb(223,20,33)"/><text x="42.00" y="78.50">profile_skl (bench_AdaBoost..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:37) (91 samples, 17.67%)</title><rect x="39" y="84" width="209" height="15" fill="rgb(254,51,6)"/><text x="42.00" y="94.50">setup_profile (bench_AdaBoo..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:31) (91 samples, 17.67%)</title><rect x="39" y="100" width="209" height="15" fill="rgb(224,21,4)"/><text x="42.00" y="110.50">profile (bench_AdaBoostRegr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (91 samples, 17.67%)</title><rect x="39" y="116" width="209" height="15" fill="rgb(233,135,3)"/><text x="42.00" y="126.50">time_predict (mlprodict/asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (91 samples, 17.67%)</title><rect x="39" y="132" width="209" height="15" fill="rgb(207,9,29)"/><text x="42.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1131) (90 samples, 17.48%)</title><rect x="42" y="148" width="206" height="15" fill="rgb(237,72,37)"/><text x="45.00" y="158.50">predict (sklearn/ensemble/_..</text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1109) (3 samples, 0.58%)</title><rect x="241" y="164" width="7" height="15" fill="rgb(216,115,6)"/><text x="244.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.19%)</title><rect x="246" y="180" width="2" height="15" fill="rgb(207,161,42)"/><text x="249.00" y="190.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2517) (1 samples, 0.19%)</title><rect x="246" y="196" width="2" height="15" fill="rgb(246,102,7)"/><text x="249.00" y="206.50"></text></g><g><title>check_and_adjust_index (common.h:110) (1 samples, 0.19%)</title><rect x="246" y="212" width="2" height="15" fill="rgb(213,204,38)"/><text x="249.00" y="222.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.19%)</title><rect x="250" y="164" width="2" height="15" fill="rgb(206,114,51)"/><text x="253.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.58%)</title><rect x="252" y="180" width="7" height="15" fill="rgb(205,173,36)"/><text x="255.00" y="190.50"></text></g><g><title>recursive_tolist (convert.c:100) (1 samples, 0.19%)</title><rect x="264" y="244" width="2" height="15" fill="rgb(215,227,42)"/><text x="267.00" y="254.50"></text></g><g><title>LONG_getitem (arraytypes.c.src:196) (2 samples, 0.39%)</title><rect x="266" y="260" width="5" height="15" fill="rgb(247,214,45)"/><text x="269.00" y="270.50"></text></g><g><title>LONG_getitem (arraytypes.c.src:204) (1 samples, 0.19%)</title><rect x="271" y="260" width="2" height="15" fill="rgb(219,22,11)"/><text x="274.00" y="270.50"></text></g><g><title>recursive_tolist (convert.c:112) (1 samples, 0.19%)</title><rect x="273" y="260" width="2" height="15" fill="rgb(241,98,21)"/><text x="276.00" y="270.50"></text></g><g><title>recursive_tolist (convert.c:102) (5 samples, 0.97%)</title><rect x="266" y="244" width="12" height="15" fill="rgb(254,206,0)"/><text x="269.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c:83) (1 samples, 0.19%)</title><rect x="275" y="260" width="3" height="15" fill="rgb(211,146,23)"/><text x="278.00" y="270.50"></text></g><g><title>PyArray_ToList (convert.c:120) (7 samples, 1.36%)</title><rect x="264" y="228" width="16" height="15" fill="rgb(220,129,11)"/><text x="267.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:106) (1 samples, 0.19%)</title><rect x="278" y="244" width="2" height="15" fill="rgb(250,49,26)"/><text x="281.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (8 samples, 1.55%)</title><rect x="264" y="212" width="18" height="15" fill="rgb(214,108,25)"/><text x="267.00" y="222.50"></text></g><g><title>array_ravel (methods.c:2438) (1 samples, 0.19%)</title><rect x="280" y="228" width="2" height="15" fill="rgb(229,211,47)"/><text x="283.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:43) (1 samples, 0.19%)</title><rect x="282" y="212" width="2" height="15" fill="rgb(226,121,41)"/><text x="285.00" y="222.50"></text></g><g><title>prepare_index (mapping.c:491) (1 samples, 0.19%)</title><rect x="284" y="244" width="3" height="15" fill="rgb(223,40,50)"/><text x="287.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.19%)</title><rect x="284" y="260" width="3" height="15" fill="rgb(234,9,52)"/><text x="287.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.19%)</title><rect x="284" y="276" width="3" height="15" fill="rgb(230,225,22)"/><text x="287.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:458) (3 samples, 0.58%)</title><rect x="287" y="308" width="7" height="15" fill="rgb(240,189,11)"/><text x="290.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:478) (2 samples, 0.39%)</title><rect x="294" y="308" width="4" height="15" fill="rgb(244,120,21)"/><text x="297.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:138) (2 samples, 0.39%)</title><rect x="298" y="324" width="5" height="15" fill="rgb(209,38,49)"/><text x="301.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:154) (1 samples, 0.19%)</title><rect x="303" y="324" width="2" height="15" fill="rgb(254,16,30)"/><text x="306.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:44) (2 samples, 0.39%)</title><rect x="305" y="340" width="5" height="15" fill="rgb(234,129,44)"/><text x="308.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (4 samples, 0.78%)</title><rect x="310" y="340" width="9" height="15" fill="rgb(231,110,14)"/><text x="313.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.19%)</title><rect x="319" y="356" width="2" height="15" fill="rgb(213,167,2)"/><text x="322.00" y="366.50"></text></g><g><title>_array_find_python_scalar_type (common.c:53) (4 samples, 0.78%)</title><rect x="319" y="340" width="9" height="15" fill="rgb(243,169,9)"/><text x="322.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (3 samples, 0.58%)</title><rect x="321" y="356" width="7" height="15" fill="rgb(233,94,8)"/><text x="324.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (12 samples, 2.33%)</title><rect x="305" y="324" width="28" height="15" fill="rgb(211,211,13)"/><text x="308.00" y="334.50">P..</text></g><g><title>_array_find_python_scalar_type (common.c:77) (2 samples, 0.39%)</title><rect x="328" y="340" width="5" height="15" fill="rgb(238,171,51)"/><text x="331.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (4 samples, 0.78%)</title><rect x="333" y="324" width="9" height="15" fill="rgb(220,0,32)"/><text x="336.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1372) (2 samples, 0.39%)</title><rect x="337" y="340" width="5" height="15" fill="rgb(236,89,29)"/><text x="340.00" y="350.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c:1056) (2 samples, 0.39%)</title><rect x="337" y="356" width="5" height="15" fill="rgb(237,103,46)"/><text x="340.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:513) (2 samples, 0.39%)</title><rect x="342" y="324" width="4" height="15" fill="rgb(251,22,47)"/><text x="345.00" y="334.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (27 samples, 5.24%)</title><rect x="287" y="276" width="62" height="15" fill="rgb(235,56,9)"/><text x="290.00" y="286.50">PyArra..</text></g><g><title>PyArray_DTypeFromObject (common.c:108) (27 samples, 5.24%)</title><rect x="287" y="292" width="62" height="15" fill="rgb(230,125,46)"/><text x="290.00" y="302.50">PyArra..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (22 samples, 4.27%)</title><rect x="298" y="308" width="51" height="15" fill="rgb(224,83,24)"/><text x="301.00" y="318.50">PyArr..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:528) (1 samples, 0.19%)</title><rect x="346" y="324" width="3" height="15" fill="rgb(221,83,34)"/><text x="349.00" y="334.50"></text></g><g><title>discover_dimensions (ctors.c:878) (1 samples, 0.19%)</title><rect x="349" y="292" width="2" height="15" fill="rgb(240,86,48)"/><text x="352.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:883) (3 samples, 0.58%)</title><rect x="351" y="292" width="7" height="15" fill="rgb(252,62,0)"/><text x="354.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:679) (2 samples, 0.39%)</title><rect x="360" y="308" width="5" height="15" fill="rgb(236,117,33)"/><text x="363.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:693) (1 samples, 0.19%)</title><rect x="365" y="308" width="2" height="15" fill="rgb(234,56,45)"/><text x="368.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:699) (3 samples, 0.58%)</title><rect x="367" y="308" width="7" height="15" fill="rgb(236,82,30)"/><text x="370.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:701) (1 samples, 0.19%)</title><rect x="374" y="308" width="2" height="15" fill="rgb(221,212,6)"/><text x="377.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:703) (3 samples, 0.58%)</title><rect x="376" y="308" width="7" height="15" fill="rgb(220,123,20)"/><text x="379.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:884) (12 samples, 2.33%)</title><rect x="358" y="292" width="27" height="15" fill="rgb(222,25,17)"/><text x="361.00" y="302.50">d..</text></g><g><title>discover_dimensions (ctors.c:912) (1 samples, 0.19%)</title><rect x="383" y="308" width="2" height="15" fill="rgb(245,62,36)"/><text x="386.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (44 samples, 8.54%)</title><rect x="287" y="260" width="101" height="15" fill="rgb(207,89,39)"/><text x="290.00" y="270.50">PyArray_From..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (17 samples, 3.30%)</title><rect x="349" y="276" width="39" height="15" fill="rgb(223,148,23)"/><text x="352.00" y="286.50">PyA..</text></g><g><title>discover_dimensions (ctors.c:897) (1 samples, 0.19%)</title><rect x="385" y="292" width="3" height="15" fill="rgb(222,149,15)"/><text x="388.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:208) (1 samples, 0.19%)</title><rect x="390" y="324" width="2" height="15" fill="rgb(230,88,6)"/><text x="393.00" y="334.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:212) (5 samples, 0.97%)</title><rect x="392" y="324" width="12" height="15" fill="rgb(226,228,53)"/><text x="395.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:119) (1 samples, 0.19%)</title><rect x="404" y="340" width="2" height="15" fill="rgb(234,214,39)"/><text x="407.00" y="350.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (3 samples, 0.58%)</title><rect x="404" y="324" width="6" height="15" fill="rgb(252,216,2)"/><text x="407.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:123) (2 samples, 0.39%)</title><rect x="406" y="340" width="4" height="15" fill="rgb(254,126,24)"/><text x="409.00" y="350.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:218) (1 samples, 0.19%)</title><rect x="410" y="324" width="3" height="15" fill="rgb(219,22,32)"/><text x="413.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1539) (57 samples, 11.07%)</title><rect x="284" y="228" width="131" height="15" fill="rgb(249,106,15)"/><text x="287.00" y="238.50">array_subscript ..</text></g><g><title>prepare_index (mapping.c:516) (56 samples, 10.87%)</title><rect x="287" y="244" width="128" height="15" fill="rgb(254,161,8)"/><text x="290.00" y="254.50">prepare_index (m..</text></g><g><title>PyArray_FromAny (ctors.c:1938) (12 samples, 2.33%)</title><rect x="388" y="260" width="27" height="15" fill="rgb(249,58,39)"/><text x="391.00" y="270.50">P..</text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (12 samples, 2.33%)</title><rect x="388" y="276" width="27" height="15" fill="rgb(217,19,35)"/><text x="391.00" y="286.50">P..</text></g><g><title>setArrayFromSequence (ctors.c:550) (12 samples, 2.33%)</title><rect x="388" y="292" width="27" height="15" fill="rgb(223,121,54)"/><text x="391.00" y="302.50">s..</text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (12 samples, 2.33%)</title><rect x="388" y="308" width="27" height="15" fill="rgb(209,223,7)"/><text x="391.00" y="318.50">P..</text></g><g><title>LONG_setitem (arraytypes.c.src:233) (1 samples, 0.19%)</title><rect x="413" y="324" width="2" height="15" fill="rgb(253,141,4)"/><text x="416.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.19%)</title><rect x="415" y="228" width="2" height="15" fill="rgb(241,61,53)"/><text x="418.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (1 samples, 0.19%)</title><rect x="415" y="244" width="2" height="15" fill="rgb(232,187,26)"/><text x="418.00" y="254.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (1 samples, 0.19%)</title><rect x="415" y="260" width="2" height="15" fill="rgb(218,76,19)"/><text x="418.00" y="270.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (1 samples, 0.19%)</title><rect x="415" y="276" width="2" height="15" fill="rgb(239,73,51)"/><text x="418.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2175) (1 samples, 0.19%)</title><rect x="415" y="292" width="2" height="15" fill="rgb(226,89,21)"/><text x="418.00" y="302.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (1 samples, 0.19%)</title><rect x="417" y="244" width="3" height="15" fill="rgb(244,195,9)"/><text x="420.00" y="254.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.19%)</title><rect x="420" y="244" width="2" height="15" fill="rgb(232,222,0)"/><text x="423.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (61 samples, 11.84%)</title><rect x="284" y="212" width="140" height="15" fill="rgb(246,115,4)"/><text x="287.00" y="222.50">_run (mlprodict/o..</text></g><g><title>array_subscript (mapping.c:1676) (3 samples, 0.58%)</title><rect x="417" y="228" width="7" height="15" fill="rgb(243,72,19)"/><text x="420.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1775) (1 samples, 0.19%)</title><rect x="422" y="244" width="2" height="15" fill="rgb(215,208,14)"/><text x="425.00" y="254.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="422" y="260" width="2" height="15" fill="rgb(216,64,29)"/><text x="425.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:45) (1 samples, 0.19%)</title><rect x="424" y="212" width="3" height="15" fill="rgb(213,196,53)"/><text x="427.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.19%)</title><rect x="424" y="228" width="3" height="15" fill="rgb(217,91,25)"/><text x="427.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:92) (1 samples, 0.19%)</title><rect x="424" y="244" width="3" height="15" fill="rgb(218,146,6)"/><text x="427.00" y="254.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.19%)</title><rect x="427" y="244" width="2" height="15" fill="rgb(241,13,3)"/><text x="430.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.19%)</title><rect x="427" y="260" width="2" height="15" fill="rgb(213,140,48)"/><text x="430.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.19%)</title><rect x="427" y="276" width="2" height="15" fill="rgb(239,208,51)"/><text x="430.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.19%)</title><rect x="427" y="292" width="2" height="15" fill="rgb(227,58,24)"/><text x="430.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1006) (1 samples, 0.19%)</title><rect x="427" y="308" width="2" height="15" fill="rgb(230,163,51)"/><text x="430.00" y="318.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:37) (1 samples, 0.19%)</title><rect x="427" y="324" width="2" height="15" fill="rgb(242,27,17)"/><text x="430.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (3 samples, 0.58%)</title><rect x="427" y="212" width="6" height="15" fill="rgb(215,166,28)"/><text x="430.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (3 samples, 0.58%)</title><rect x="427" y="228" width="6" height="15" fill="rgb(222,15,0)"/><text x="430.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.39%)</title><rect x="429" y="244" width="4" height="15" fill="rgb(253,47,5)"/><text x="432.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.39%)</title><rect x="429" y="260" width="4" height="15" fill="rgb(205,228,41)"/><text x="432.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (2 samples, 0.39%)</title><rect x="429" y="276" width="4" height="15" fill="rgb(227,205,25)"/><text x="432.00" y="286.50"></text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src:855) (2 samples, 0.39%)</title><rect x="429" y="292" width="4" height="15" fill="rgb(254,39,33)"/><text x="432.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:31) (1 samples, 0.19%)</title><rect x="433" y="212" width="3" height="15" fill="rgb(235,210,43)"/><text x="436.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:35) (1 samples, 0.19%)</title><rect x="436" y="212" width="2" height="15" fill="rgb(214,220,11)"/><text x="439.00" y="222.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:261) (1 samples, 0.19%)</title><rect x="440" y="324" width="3" height="15" fill="rgb(250,205,7)"/><text x="443.00" y="334.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.19%)</title><rect x="443" y="388" width="2" height="15" fill="rgb(244,209,19)"/><text x="446.00" y="398.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:249) (1 samples, 0.19%)</title><rect x="443" y="404" width="2" height="15" fill="rgb(217,223,46)"/><text x="446.00" y="414.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:39) (5 samples, 0.97%)</title><rect x="438" y="212" width="11" height="15" fill="rgb(249,39,30)"/><text x="441.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (5 samples, 0.97%)</title><rect x="438" y="228" width="11" height="15" fill="rgb(205,177,24)"/><text x="441.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 0.97%)</title><rect x="438" y="244" width="11" height="15" fill="rgb(239,117,26)"/><text x="441.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (4 samples, 0.78%)</title><rect x="440" y="260" width="9" height="15" fill="rgb(233,81,14)"/><text x="443.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (4 samples, 0.78%)</title><rect x="440" y="276" width="9" height="15" fill="rgb(250,226,12)"/><text x="443.00" y="286.50"></text></g><g><title>array_cumsum (methods.c:2239) (4 samples, 0.78%)</title><rect x="440" y="292" width="9" height="15" fill="rgb(231,103,11)"/><text x="443.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (4 samples, 0.78%)</title><rect x="440" y="308" width="9" height="15" fill="rgb(230,132,45)"/><text x="443.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (3 samples, 0.58%)</title><rect x="443" y="324" width="6" height="15" fill="rgb(221,225,16)"/><text x="446.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (3 samples, 0.58%)</title><rect x="443" y="340" width="6" height="15" fill="rgb(246,22,13)"/><text x="446.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (3 samples, 0.58%)</title><rect x="443" y="356" width="6" height="15" fill="rgb(212,219,36)"/><text x="446.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3934) (3 samples, 0.58%)</title><rect x="443" y="372" width="6" height="15" fill="rgb(228,149,50)"/><text x="446.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1756) (2 samples, 0.39%)</title><rect x="445" y="388" width="4" height="15" fill="rgb(229,212,32)"/><text x="448.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:21) (2 samples, 0.39%)</title><rect x="449" y="212" width="5" height="15" fill="rgb(239,4,19)"/><text x="452.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (2 samples, 0.39%)</title><rect x="449" y="228" width="5" height="15" fill="rgb(239,80,11)"/><text x="452.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.39%)</title><rect x="449" y="244" width="5" height="15" fill="rgb(209,138,33)"/><text x="452.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (2 samples, 0.39%)</title><rect x="449" y="260" width="5" height="15" fill="rgb(205,116,34)"/><text x="452.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.19%)</title><rect x="452" y="276" width="2" height="15" fill="rgb(230,67,6)"/><text x="455.00" y="286.50"></text></g><g><title>array_swapaxes (methods.c:348) (1 samples, 0.19%)</title><rect x="452" y="292" width="2" height="15" fill="rgb(252,10,41)"/><text x="455.00" y="302.50"></text></g><g><title>PyArray_SwapAxes (shape.c:657) (1 samples, 0.19%)</title><rect x="452" y="308" width="2" height="15" fill="rgb(233,6,54)"/><text x="455.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c:687) (1 samples, 0.19%)</title><rect x="452" y="324" width="2" height="15" fill="rgb(212,55,6)"/><text x="455.00" y="334.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (3 samples, 0.58%)</title><rect x="454" y="244" width="7" height="15" fill="rgb(244,168,14)"/><text x="457.00" y="254.50"></text></g><g><title>_choose_dispatcher (numpy/core/fromnumeric.py:306) (3 samples, 0.58%)</title><rect x="454" y="260" width="7" height="15" fill="rgb(244,42,39)"/><text x="457.00" y="270.50"></text></g><g><title>array_item (mapping.c:1384) (2 samples, 0.39%)</title><rect x="456" y="276" width="5" height="15" fill="rgb(217,48,28)"/><text x="459.00" y="286.50"></text></g><g><title>array_item_asarray (mapping.c:1350) (2 samples, 0.39%)</title><rect x="456" y="292" width="5" height="15" fill="rgb(225,137,19)"/><text x="459.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c:937) (2 samples, 0.39%)</title><rect x="456" y="308" width="5" height="15" fill="rgb(251,221,3)"/><text x="459.00" y="318.50"></text></g><g><title>sprintf (libc-2.29.so) (1 samples, 0.19%)</title><rect x="459" y="324" width="2" height="15" fill="rgb(237,63,16)"/><text x="462.00" y="334.50"></text></g><g><title>0x7fcfa861dab0 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="459" y="340" width="2" height="15" fill="rgb(252,30,48)"/><text x="462.00" y="350.50"></text></g><g><title>0x7fcfa8610b71 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="459" y="356" width="2" height="15" fill="rgb(213,183,31)"/><text x="462.00" y="366.50"></text></g><g><title>_IO_default_xsputn (libc-2.29.so) (1 samples, 0.19%)</title><rect x="459" y="372" width="2" height="15" fill="rgb(205,144,8)"/><text x="462.00" y="382.50"></text></g><g><title>PyArray_NewCopy (convert.c:556) (2 samples, 0.39%)</title><rect x="463" y="340" width="5" height="15" fill="rgb(245,142,47)"/><text x="466.00" y="350.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.19%)</title><rect x="465" y="356" width="3" height="15" fill="rgb(219,49,51)"/><text x="468.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.19%)</title><rect x="465" y="372" width="3" height="15" fill="rgb(235,217,16)"/><text x="468.00" y="382.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.19%)</title><rect x="465" y="388" width="3" height="15" fill="rgb(220,192,43)"/><text x="468.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="465" y="404" width="3" height="15" fill="rgb(246,226,11)"/><text x="468.00" y="414.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="465" y="420" width="3" height="15" fill="rgb(231,85,33)"/><text x="468.00" y="430.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.19%)</title><rect x="465" y="436" width="3" height="15" fill="rgb(235,210,14)"/><text x="468.00" y="446.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.19%)</title><rect x="465" y="452" width="3" height="15" fill="rgb(239,147,0)"/><text x="468.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="465" y="468" width="3" height="15" fill="rgb(232,130,24)"/><text x="468.00" y="478.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (2 samples, 0.39%)</title><rect x="468" y="372" width="4" height="15" fill="rgb(213,175,49)"/><text x="471.00" y="382.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="470" y="388" width="2" height="15" fill="rgb(231,3,0)"/><text x="473.00" y="398.50"></text></g><g><title>_aligned_strided_to_contig_size4 (lowlevel_strided_loops.c.src:161) (1 samples, 0.19%)</title><rect x="472" y="388" width="3" height="15" fill="rgb(227,53,37)"/><text x="475.00" y="398.50"></text></g><g><title>PyArray_Choose (item_selection.c:687) (7 samples, 1.36%)</title><rect x="463" y="308" width="16" height="15" fill="rgb(246,99,1)"/><text x="466.00" y="318.50"></text></g><g><title>PyArray_ConvertToCommonType (convert_datatype.c:2150) (7 samples, 1.36%)</title><rect x="463" y="324" width="16" height="15" fill="rgb(251,190,47)"/><text x="466.00" y="334.50"></text></g><g><title>PyArray_NewCopy (convert.c:560) (5 samples, 0.97%)</title><rect x="468" y="340" width="11" height="15" fill="rgb(243,151,8)"/><text x="471.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (5 samples, 0.97%)</title><rect x="468" y="356" width="11" height="15" fill="rgb(223,137,33)"/><text x="471.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (3 samples, 0.58%)</title><rect x="472" y="372" width="7" height="15" fill="rgb(235,43,24)"/><text x="475.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size8 (lowlevel_strided_loops.c.src:169) (2 samples, 0.39%)</title><rect x="475" y="388" width="4" height="15" fill="rgb(216,17,20)"/><text x="478.00" y="398.50"></text></g><g><title>PyArray_Choose (item_selection.c:702) (1 samples, 0.19%)</title><rect x="479" y="308" width="3" height="15" fill="rgb(232,59,37)"/><text x="482.00" y="318.50"></text></g><g><title>PyArray_MultiIterFromObjects (iterators.c:1357) (1 samples, 0.19%)</title><rect x="479" y="324" width="3" height="15" fill="rgb(219,36,25)"/><text x="482.00" y="334.50"></text></g><g><title>multiiter_new_impl (iterators.c:1296) (1 samples, 0.19%)</title><rect x="479" y="340" width="3" height="15" fill="rgb(238,17,19)"/><text x="482.00" y="350.50"></text></g><g><title>PyArray_IterNew (iterators.c:189) (1 samples, 0.19%)</title><rect x="479" y="356" width="3" height="15" fill="rgb(212,115,20)"/><text x="482.00" y="366.50"></text></g><g><title>array_iter_base_init (iterators.c:142) (1 samples, 0.19%)</title><rect x="479" y="372" width="3" height="15" fill="rgb(210,189,34)"/><text x="482.00" y="382.50"></text></g><g><title>PyArray_Choose (item_selection.c:786) (3 samples, 0.58%)</title><rect x="482" y="308" width="6" height="15" fill="rgb(207,201,19)"/><text x="485.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:23) (19 samples, 3.69%)</title><rect x="454" y="212" width="44" height="15" fill="rgb(239,41,44)"/><text x="457.00" y="222.50">_run..</text></g><g><title>choose (&lt;__array_function__ internals&gt;:6) (19 samples, 3.69%)</title><rect x="454" y="228" width="44" height="15" fill="rgb(228,192,30)"/><text x="457.00" y="238.50">choo..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (16 samples, 3.11%)</title><rect x="461" y="244" width="37" height="15" fill="rgb(246,54,22)"/><text x="464.00" y="254.50">arr..</text></g><g><title>choose (numpy/core/fromnumeric.py:432) (16 samples, 3.11%)</title><rect x="461" y="260" width="37" height="15" fill="rgb(219,118,7)"/><text x="464.00" y="270.50">cho..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (15 samples, 2.91%)</title><rect x="463" y="276" width="35" height="15" fill="rgb(214,23,37)"/><text x="466.00" y="286.50">_w..</text></g><g><title>array_choose (methods.c:1224) (15 samples, 2.91%)</title><rect x="463" y="292" width="35" height="15" fill="rgb(247,168,44)"/><text x="466.00" y="302.50">ar..</text></g><g><title>PyArray_Choose (item_selection.c:788) (4 samples, 0.78%)</title><rect x="488" y="308" width="10" height="15" fill="rgb(213,228,28)"/><text x="491.00" y="318.50"></text></g><g><title>0x7fcfa864cdae (libc-2.29.so) (1 samples, 0.19%)</title><rect x="495" y="324" width="3" height="15" fill="rgb(209,153,19)"/><text x="498.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:24) (1 samples, 0.19%)</title><rect x="498" y="212" width="2" height="15" fill="rgb(222,66,26)"/><text x="501.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="498" y="228" width="2" height="15" fill="rgb(214,40,17)"/><text x="501.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="498" y="244" width="2" height="15" fill="rgb(208,17,36)"/><text x="501.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (1 samples, 0.19%)</title><rect x="498" y="260" width="2" height="15" fill="rgb(214,27,1)"/><text x="501.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.19%)</title><rect x="500" y="308" width="2" height="15" fill="rgb(243,88,50)"/><text x="503.00" y="318.50"></text></g><g><title>_new_argsortlike (item_selection.c:1022) (1 samples, 0.19%)</title><rect x="502" y="356" width="2" height="15" fill="rgb(211,54,4)"/><text x="505.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1024) (1 samples, 0.19%)</title><rect x="504" y="356" width="3" height="15" fill="rgb(212,14,15)"/><text x="507.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1057) (1 samples, 0.19%)</title><rect x="507" y="356" width="2" height="15" fill="rgb(232,26,45)"/><text x="510.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1076) (1 samples, 0.19%)</title><rect x="509" y="356" width="2" height="15" fill="rgb(231,171,45)"/><text x="512.00" y="366.50"></text></g><g><title>aintroselect_float (selection.c.src:292) (1 samples, 0.19%)</title><rect x="511" y="372" width="3" height="15" fill="rgb(225,0,46)"/><text x="514.00" y="382.50"></text></g><g><title>aintroselect_float (selection.c.src:331) (1 samples, 0.19%)</title><rect x="514" y="372" width="2" height="15" fill="rgb(252,125,42)"/><text x="517.00" y="382.50"></text></g><g><title>aintroselect_float (selection.c.src:332) (1 samples, 0.19%)</title><rect x="516" y="372" width="2" height="15" fill="rgb(215,63,24)"/><text x="519.00" y="382.50"></text></g><g><title>FLOAT_LT (npysort_common.h:123) (1 samples, 0.19%)</title><rect x="516" y="388" width="2" height="15" fill="rgb(250,164,47)"/><text x="519.00" y="398.50"></text></g><g><title>aintroselect_float (selection.c.src:334) (1 samples, 0.19%)</title><rect x="518" y="372" width="2" height="15" fill="rgb(246,74,18)"/><text x="521.00" y="382.50"></text></g><g><title>_new_argsortlike (item_selection.c:1084) (5 samples, 0.97%)</title><rect x="511" y="356" width="12" height="15" fill="rgb(232,207,31)"/><text x="514.00" y="366.50"></text></g><g><title>aintroselect_float (selection.c.src:337) (1 samples, 0.19%)</title><rect x="520" y="372" width="3" height="15" fill="rgb(210,50,10)"/><text x="523.00" y="382.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:34) (11 samples, 2.14%)</title><rect x="500" y="244" width="25" height="15" fill="rgb(237,201,11)"/><text x="503.00" y="254.50">t..</text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (11 samples, 2.14%)</title><rect x="500" y="260" width="25" height="15" fill="rgb(216,41,45)"/><text x="503.00" y="270.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (11 samples, 2.14%)</title><rect x="500" y="276" width="25" height="15" fill="rgb(233,180,3)"/><text x="503.00" y="286.50">a..</text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (11 samples, 2.14%)</title><rect x="500" y="292" width="25" height="15" fill="rgb(253,136,27)"/><text x="503.00" y="302.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (10 samples, 1.94%)</title><rect x="502" y="308" width="23" height="15" fill="rgb(205,188,15)"/><text x="505.00" y="318.50">_..</text></g><g><title>array_argpartition (methods.c:1454) (10 samples, 1.94%)</title><rect x="502" y="324" width="23" height="15" fill="rgb(241,63,5)"/><text x="505.00" y="334.50">a..</text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (10 samples, 1.94%)</title><rect x="502" y="340" width="23" height="15" fill="rgb(254,41,52)"/><text x="505.00" y="350.50">P..</text></g><g><title>_new_argsortlike (item_selection.c:1105) (1 samples, 0.19%)</title><rect x="523" y="356" width="2" height="15" fill="rgb(213,15,1)"/><text x="526.00" y="366.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="523" y="372" width="2" height="15" fill="rgb(209,207,8)"/><text x="526.00" y="382.50"></text></g><g><title>_new_argsortlike (item_selection.c:1052) (2 samples, 0.39%)</title><rect x="525" y="356" width="5" height="15" fill="rgb(238,4,20)"/><text x="528.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1057) (1 samples, 0.19%)</title><rect x="530" y="356" width="2" height="15" fill="rgb(243,14,43)"/><text x="533.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src:222) (2 samples, 0.39%)</title><rect x="532" y="372" width="4" height="15" fill="rgb(250,119,20)"/><text x="535.00" y="382.50"></text></g><g><title>FLOAT_LT (npysort_common.h:123) (1 samples, 0.19%)</title><rect x="534" y="388" width="2" height="15" fill="rgb(240,207,9)"/><text x="537.00" y="398.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (3 samples, 0.58%)</title><rect x="532" y="356" width="7" height="15" fill="rgb(237,136,21)"/><text x="535.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src:237) (1 samples, 0.19%)</title><rect x="536" y="372" width="3" height="15" fill="rgb(206,87,19)"/><text x="539.00" y="382.50"></text></g><g><title>_new_argsortlike (item_selection.c:1100) (1 samples, 0.19%)</title><rect x="539" y="356" width="2" height="15" fill="rgb(209,8,39)"/><text x="542.00" y="366.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (8 samples, 1.55%)</title><rect x="525" y="260" width="18" height="15" fill="rgb(245,34,24)"/><text x="528.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 1.55%)</title><rect x="525" y="276" width="18" height="15" fill="rgb(248,92,22)"/><text x="528.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (8 samples, 1.55%)</title><rect x="525" y="292" width="18" height="15" fill="rgb(237,51,11)"/><text x="528.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (8 samples, 1.55%)</title><rect x="525" y="308" width="18" height="15" fill="rgb(217,49,13)"/><text x="528.00" y="318.50"></text></g><g><title>array_argsort (methods.c:1395) (8 samples, 1.55%)</title><rect x="525" y="324" width="18" height="15" fill="rgb(231,168,48)"/><text x="528.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (8 samples, 1.55%)</title><rect x="525" y="340" width="18" height="15" fill="rgb(209,165,45)"/><text x="528.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1101) (1 samples, 0.19%)</title><rect x="541" y="356" width="2" height="15" fill="rgb(214,27,32)"/><text x="544.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.19%)</title><rect x="543" y="340" width="3" height="15" fill="rgb(249,84,17)"/><text x="546.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1656) (2 samples, 0.39%)</title><rect x="543" y="260" width="5" height="15" fill="rgb(216,46,25)"/><text x="546.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (2 samples, 0.39%)</title><rect x="543" y="276" width="5" height="15" fill="rgb(246,185,10)"/><text x="546.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (2 samples, 0.39%)</title><rect x="543" y="292" width="5" height="15" fill="rgb(241,112,7)"/><text x="546.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (2 samples, 0.39%)</title><rect x="543" y="308" width="5" height="15" fill="rgb(239,16,34)"/><text x="546.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.39%)</title><rect x="543" y="324" width="5" height="15" fill="rgb(240,88,29)"/><text x="546.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.19%)</title><rect x="546" y="340" width="2" height="15" fill="rgb(212,202,54)"/><text x="549.00" y="350.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2517) (3 samples, 0.58%)</title><rect x="548" y="276" width="7" height="15" fill="rgb(207,75,35)"/><text x="551.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h:110) (3 samples, 0.58%)</title><rect x="548" y="292" width="7" height="15" fill="rgb(238,124,19)"/><text x="551.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1666) (4 samples, 0.78%)</title><rect x="548" y="260" width="9" height="15" fill="rgb(222,155,39)"/><text x="551.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2521) (1 samples, 0.19%)</title><rect x="555" y="276" width="2" height="15" fill="rgb(221,128,11)"/><text x="558.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1566) (3 samples, 0.58%)</title><rect x="557" y="276" width="7" height="15" fill="rgb(240,31,38)"/><text x="560.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1577) (1 samples, 0.19%)</title><rect x="564" y="276" width="2" height="15" fill="rgb(214,148,36)"/><text x="567.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1584) (2 samples, 0.39%)</title><rect x="566" y="276" width="5" height="15" fill="rgb(247,160,1)"/><text x="569.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1676) (7 samples, 1.36%)</title><rect x="557" y="260" width="16" height="15" fill="rgb(221,77,40)"/><text x="560.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.19%)</title><rect x="571" y="276" width="2" height="15" fill="rgb(243,68,31)"/><text x="574.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.19%)</title><rect x="573" y="260" width="2" height="15" fill="rgb(210,213,15)"/><text x="576.00" y="270.50"></text></g><g><title>arraymapiter_dealloc (mapping.c:3313) (1 samples, 0.19%)</title><rect x="573" y="276" width="2" height="15" fill="rgb(215,154,22)"/><text x="576.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.19%)</title><rect x="573" y="292" width="2" height="15" fill="rgb(230,75,54)"/><text x="576.00" y="302.50"></text></g><g><title>0x7fcfa862cf30 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="573" y="308" width="2" height="15" fill="rgb(250,223,24)"/><text x="576.00" y="318.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:38) (23 samples, 4.47%)</title><rect x="525" y="244" width="53" height="15" fill="rgb(243,128,18)"/><text x="528.00" y="254.50">topk_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="575" y="260" width="3" height="15" fill="rgb(205,130,39)"/><text x="578.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="575" y="276" width="3" height="15" fill="rgb(244,144,48)"/><text x="578.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.19%)</title><rect x="575" y="292" width="3" height="15" fill="rgb(247,16,7)"/><text x="578.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.19%)</title><rect x="575" y="308" width="3" height="15" fill="rgb(218,198,38)"/><text x="578.00" y="318.50"></text></g><g><title>FLOAT_negative (loops.c.src:1999) (1 samples, 0.19%)</title><rect x="575" y="324" width="3" height="15" fill="rgb(233,24,50)"/><text x="578.00" y="334.50"></text></g><g><title>run_unary_simd_negative_FLOAT (simd.inc.src:195) (1 samples, 0.19%)</title><rect x="575" y="340" width="3" height="15" fill="rgb(208,77,1)"/><text x="578.00" y="350.50"></text></g><g><title>sse2_negative_FLOAT (simd.inc.src:1057) (1 samples, 0.19%)</title><rect x="575" y="356" width="3" height="15" fill="rgb(213,170,32)"/><text x="578.00" y="366.50"></text></g><g><title>_mm_xor_ps (xmmintrin.h:231) (1 samples, 0.19%)</title><rect x="575" y="372" width="3" height="15" fill="rgb(208,219,16)"/><text x="578.00" y="382.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.19%)</title><rect x="578" y="260" width="2" height="15" fill="rgb(227,140,17)"/><text x="581.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (1 samples, 0.19%)</title><rect x="578" y="276" width="2" height="15" fill="rgb(217,147,23)"/><text x="581.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (1 samples, 0.19%)</title><rect x="578" y="292" width="2" height="15" fill="rgb(206,68,32)"/><text x="581.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (1 samples, 0.19%)</title><rect x="578" y="308" width="2" height="15" fill="rgb(233,157,37)"/><text x="581.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.19%)</title><rect x="578" y="324" width="2" height="15" fill="rgb(225,203,10)"/><text x="581.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.19%)</title><rect x="578" y="340" width="2" height="15" fill="rgb(226,140,24)"/><text x="581.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.19%)</title><rect x="578" y="356" width="2" height="15" fill="rgb(210,124,46)"/><text x="581.00" y="366.50"></text></g><g><title>check_and_adjust_index (common.h:110) (1 samples, 0.19%)</title><rect x="580" y="292" width="2" height="15" fill="rgb(248,68,48)"/><text x="583.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1666) (2 samples, 0.39%)</title><rect x="580" y="260" width="5" height="15" fill="rgb(209,153,37)"/><text x="583.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2517) (2 samples, 0.39%)</title><rect x="580" y="276" width="5" height="15" fill="rgb(225,22,43)"/><text x="583.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h:126) (1 samples, 0.19%)</title><rect x="582" y="292" width="3" height="15" fill="rgb(241,161,50)"/><text x="585.00" y="302.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1581) (1 samples, 0.19%)</title><rect x="585" y="276" width="2" height="15" fill="rgb(251,30,15)"/><text x="588.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (144 samples, 27.96%)</title><rect x="259" y="196" width="330" height="15" fill="rgb(207,21,15)"/><text x="262.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:118)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py:137) (39 samples, 7.57%)</title><rect x="500" y="212" width="89" height="15" fill="rgb(238,98,12)"/><text x="503.00" y="222.50">_run (mlpr..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:75) (39 samples, 7.57%)</title><rect x="500" y="228" width="89" height="15" fill="rgb(249,227,38)"/><text x="503.00" y="238.50">_common_ru..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:39) (5 samples, 0.97%)</title><rect x="578" y="244" width="11" height="15" fill="rgb(213,79,25)"/><text x="581.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1676) (2 samples, 0.39%)</title><rect x="585" y="260" width="4" height="15" fill="rgb(215,6,45)"/><text x="588.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (1 samples, 0.19%)</title><rect x="587" y="276" width="2" height="15" fill="rgb(232,20,9)"/><text x="590.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (2 samples, 0.39%)</title><rect x="589" y="196" width="5" height="15" fill="rgb(205,155,6)"/><text x="592.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (2 samples, 0.39%)</title><rect x="589" y="212" width="5" height="15" fill="rgb(219,10,24)"/><text x="592.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:66) (1 samples, 0.19%)</title><rect x="591" y="228" width="3" height="15" fill="rgb(250,40,2)"/><text x="594.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:38) (1 samples, 0.19%)</title><rect x="591" y="244" width="3" height="15" fill="rgb(229,123,33)"/><text x="594.00" y="254.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:15) (1 samples, 0.19%)</title><rect x="591" y="260" width="3" height="15" fill="rgb(252,59,49)"/><text x="594.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="591" y="276" width="3" height="15" fill="rgb(241,154,41)"/><text x="594.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="591" y="292" width="3" height="15" fill="rgb(246,70,20)"/><text x="594.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:587) (1 samples, 0.19%)</title><rect x="591" y="308" width="3" height="15" fill="rgb(232,100,34)"/><text x="594.00" y="318.50"></text></g><g><title>0x7fcf690c554f (?) (1 samples, 0.19%)</title><rect x="594" y="244" width="2" height="15" fill="rgb(225,223,48)"/><text x="597.00" y="254.50"></text></g><g><title>0x7fcf690cb65e (?) (1 samples, 0.19%)</title><rect x="594" y="260" width="2" height="15" fill="rgb(244,68,43)"/><text x="597.00" y="270.50"></text></g><g><title>0x7fcf690cb50f (?) (1 samples, 0.19%)</title><rect x="594" y="276" width="2" height="15" fill="rgb(214,75,17)"/><text x="597.00" y="286.50"></text></g><g><title>0x7fcf690d1d6c (?) (1 samples, 0.19%)</title><rect x="594" y="292" width="2" height="15" fill="rgb(225,54,18)"/><text x="597.00" y="302.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="594" y="308" width="2" height="15" fill="rgb(216,70,49)"/><text x="597.00" y="318.50"></text></g><g><title>0x7fcf72631daa (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="594" y="324" width="2" height="15" fill="rgb(241,82,3)"/><text x="597.00" y="334.50"></text></g><g><title>0x7fcf72633d6d (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="594" y="340" width="2" height="15" fill="rgb(223,31,44)"/><text x="597.00" y="350.50"></text></g><g><title>0x7fcf72633ea9 (libgomp.so.1.0.0) (3 samples, 0.58%)</title><rect x="596" y="484" width="7" height="15" fill="rgb(209,155,17)"/><text x="599.00" y="494.50"></text></g><g><title>0x7fcf72633eab (libgomp.so.1.0.0) (8 samples, 1.55%)</title><rect x="603" y="484" width="18" height="15" fill="rgb(237,180,24)"/><text x="606.00" y="494.50"></text></g><g><title>0x7fcf72632ab9 (libgomp.so.1.0.0) (18 samples, 3.50%)</title><rect x="596" y="468" width="41" height="15" fill="rgb(207,194,5)"/><text x="599.00" y="478.50">0x7..</text></g><g><title>0x7fcf72633ead (libgomp.so.1.0.0) (7 samples, 1.36%)</title><rect x="621" y="484" width="16" height="15" fill="rgb(243,22,45)"/><text x="624.00" y="494.50"></text></g><g><title>0x7fcf72631daa (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="637" y="484" width="3" height="15" fill="rgb(230,27,19)"/><text x="640.00" y="494.50"></text></g><g><title>0x7fcf72633d6d (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="637" y="500" width="3" height="15" fill="rgb(227,120,50)"/><text x="640.00" y="510.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (21 samples, 4.08%)</title><rect x="594" y="196" width="48" height="15" fill="rgb(230,198,26)"/><text x="597.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (21 samples, 4.08%)</title><rect x="594" y="212" width="48" height="15" fill="rgb(233,100,20)"/><text x="597.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (21 samples, 4.08%)</title><rect x="594" y="228" width="48" height="15" fill="rgb(231,154,24)"/><text x="597.00" y="238.50">_run..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (20 samples, 3.88%)</title><rect x="596" y="244" width="46" height="15" fill="rgb(216,177,30)"/><text x="599.00" y="254.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (20 samples, 3.88%)</title><rect x="596" y="260" width="46" height="15" fill="rgb(230,27,7)"/><text x="599.00" y="270.50">void..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (20 samples, 3.88%)</title><rect x="596" y="276" width="46" height="15" fill="rgb(230,37,23)"/><text x="599.00" y="286.50">void..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (20 samples, 3.88%)</title><rect x="596" y="292" width="46" height="15" fill="rgb(212,62,43)"/><text x="599.00" y="302.50">pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (20 samples, 3.88%)</title><rect x="596" y="308" width="46" height="15" fill="rgb(245,84,43)"/><text x="599.00" y="318.50">pybi..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (20 samples, 3.88%)</title><rect x="596" y="324" width="46" height="15" fill="rgb(247,128,36)"/><text x="599.00" y="334.50">pybi..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (20 samples, 3.88%)</title><rect x="596" y="340" width="46" height="15" fill="rgb(249,132,53)"/><text x="599.00" y="350.50">pybi..</text></g><g><title>pybind11::array::~array (numpy.h:538) (20 samples, 3.88%)</title><rect x="596" y="356" width="46" height="15" fill="rgb(234,89,11)"/><text x="599.00" y="366.50">pybi..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (20 samples, 3.88%)</title><rect x="596" y="372" width="46" height="15" fill="rgb(254,7,17)"/><text x="599.00" y="382.50">pybi..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (20 samples, 3.88%)</title><rect x="596" y="388" width="46" height="15" fill="rgb(253,91,15)"/><text x="599.00" y="398.50">pybi..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (20 samples, 3.88%)</title><rect x="596" y="404" width="46" height="15" fill="rgb(214,85,6)"/><text x="599.00" y="414.50">pybi..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (20 samples, 3.88%)</title><rect x="596" y="420" width="46" height="15" fill="rgb(243,186,45)"/><text x="599.00" y="430.50">Runt..</text></g><g><title>pybind11::array::size (numpy.h:619) (20 samples, 3.88%)</title><rect x="596" y="436" width="46" height="15" fill="rgb(231,87,23)"/><text x="599.00" y="446.50">pybi..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (20 samples, 3.88%)</title><rect x="596" y="452" width="46" height="15" fill="rgb(241,125,32)"/><text x="599.00" y="462.50">std:..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.39%)</title><rect x="637" y="468" width="5" height="15" fill="rgb(239,138,34)"/><text x="640.00" y="478.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:371) (1 samples, 0.19%)</title><rect x="640" y="484" width="2" height="15" fill="rgb(241,153,30)"/><text x="643.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.19%)</title><rect x="640" y="500" width="2" height="15" fill="rgb(231,203,7)"/><text x="643.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:569) (1 samples, 0.19%)</title><rect x="640" y="516" width="2" height="15" fill="rgb(221,108,38)"/><text x="643.00" y="526.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (1 samples, 0.19%)</title><rect x="642" y="196" width="2" height="15" fill="rgb(250,66,39)"/><text x="645.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_less.py:17) (1 samples, 0.19%)</title><rect x="642" y="212" width="2" height="15" fill="rgb(243,108,12)"/><text x="645.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="642" y="228" width="2" height="15" fill="rgb(221,47,36)"/><text x="645.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="642" y="244" width="2" height="15" fill="rgb(247,89,13)"/><text x="645.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.19%)</title><rect x="642" y="260" width="2" height="15" fill="rgb(242,200,28)"/><text x="645.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="642" y="276" width="2" height="15" fill="rgb(224,35,9)"/><text x="645.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="642" y="292" width="2" height="15" fill="rgb(208,168,20)"/><text x="645.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.19%)</title><rect x="642" y="308" width="2" height="15" fill="rgb(225,44,39)"/><text x="645.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.19%)</title><rect x="642" y="324" width="2" height="15" fill="rgb(207,199,44)"/><text x="645.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="642" y="340" width="2" height="15" fill="rgb(213,221,21)"/><text x="645.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.19%)</title><rect x="642" y="356" width="2" height="15" fill="rgb(240,74,0)"/><text x="645.00" y="366.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.19%)</title><rect x="642" y="372" width="2" height="15" fill="rgb(237,151,51)"/><text x="645.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (1 samples, 0.19%)</title><rect x="644" y="228" width="2" height="15" fill="rgb(237,175,10)"/><text x="647.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (170 samples, 33.01%)</title><rect x="259" y="180" width="390" height="15" fill="rgb(214,34,1)"/><text x="262.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (2 samples, 0.39%)</title><rect x="644" y="196" width="5" height="15" fill="rgb(249,196,43)"/><text x="647.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (2 samples, 0.39%)</title><rect x="644" y="212" width="5" height="15" fill="rgb(246,50,0)"/><text x="647.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (1 samples, 0.19%)</title><rect x="646" y="228" width="3" height="15" fill="rgb(235,131,24)"/><text x="649.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="646" y="244" width="3" height="15" fill="rgb(236,145,1)"/><text x="649.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="646" y="260" width="3" height="15" fill="rgb(218,165,13)"/><text x="649.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.19%)</title><rect x="646" y="276" width="3" height="15" fill="rgb(210,127,12)"/><text x="649.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.19%)</title><rect x="646" y="292" width="3" height="15" fill="rgb(254,94,22)"/><text x="649.00" y="302.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c:855) (1 samples, 0.19%)</title><rect x="646" y="308" width="3" height="15" fill="rgb(233,181,12)"/><text x="649.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (3 samples, 0.58%)</title><rect x="649" y="180" width="7" height="15" fill="rgb(248,71,44)"/><text x="652.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (179 samples, 34.76%)</title><rect x="252" y="164" width="411" height="15" fill="rgb(205,96,8)"/><text x="255.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.p..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.58%)</title><rect x="656" y="180" width="7" height="15" fill="rgb(248,226,40)"/><text x="659.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:61) (182 samples, 35.34%)</title><rect x="248" y="52" width="417" height="15" fill="rgb(213,118,11)"/><text x="251.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estima..</text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:60) (182 samples, 35.34%)</title><rect x="248" y="68" width="417" height="15" fill="rgb(240,203,3)"/><text x="251.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_es..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:37) (182 samples, 35.34%)</title><rect x="248" y="84" width="417" height="15" fill="rgb(254,39,27)"/><text x="251.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n_e..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:31) (182 samples, 35.34%)</title><rect x="248" y="100" width="417" height="15" fill="rgb(205,148,48)"/><text x="251.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_estimat..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (182 samples, 35.34%)</title><rect x="248" y="116" width="417" height="15" fill="rgb(239,198,44)"/><text x="251.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (182 samples, 35.34%)</title><rect x="248" y="132" width="417" height="15" fill="rgb(225,152,54)"/><text x="251.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (181 samples, 35.15%)</title><rect x="250" y="148" width="415" height="15" fill="rgb(214,31,43)"/><text x="253.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.19%)</title><rect x="663" y="164" width="2" height="15" fill="rgb(222,134,30)"/><text x="666.00" y="174.50"></text></g><g><title>0x7fcf6866aff9 (?) (1 samples, 0.19%)</title><rect x="667" y="212" width="2" height="15" fill="rgb(225,170,4)"/><text x="670.00" y="222.50"></text></g><g><title>0x7fcf68665ef6 (?) (1 samples, 0.19%)</title><rect x="667" y="228" width="2" height="15" fill="rgb(220,88,29)"/><text x="670.00" y="238.50"></text></g><g><title>0x7fcf6865a962 (?) (1 samples, 0.19%)</title><rect x="667" y="244" width="2" height="15" fill="rgb(209,131,44)"/><text x="670.00" y="254.50"></text></g><g><title>0x7fcf6868e7a7 (?) (1 samples, 0.19%)</title><rect x="667" y="260" width="2" height="15" fill="rgb(238,94,53)"/><text x="670.00" y="270.50"></text></g><g><title>0x7fcf6868e379 (?) (1 samples, 0.19%)</title><rect x="667" y="276" width="2" height="15" fill="rgb(249,51,0)"/><text x="670.00" y="286.50"></text></g><g><title>0x7fcf68aec8b8 (?) (1 samples, 0.19%)</title><rect x="667" y="292" width="2" height="15" fill="rgb(252,47,6)"/><text x="670.00" y="302.50"></text></g><g><title>0x7fcf68aeac7f (?) (1 samples, 0.19%)</title><rect x="667" y="308" width="2" height="15" fill="rgb(240,116,49)"/><text x="670.00" y="318.50"></text></g><g><title>0x7fcf68afd99c (?) (1 samples, 0.19%)</title><rect x="667" y="324" width="2" height="15" fill="rgb(224,69,46)"/><text x="670.00" y="334.50"></text></g><g><title>0x7fcf6882530b (?) (1 samples, 0.19%)</title><rect x="667" y="340" width="2" height="15" fill="rgb(250,111,34)"/><text x="670.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="667" y="356" width="2" height="15" fill="rgb(218,103,49)"/><text x="670.00" y="366.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="669" y="260" width="3" height="15" fill="rgb(240,65,17)"/><text x="672.00" y="270.50"></text></g><g><title>onnxruntime::ArgMin&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="672" y="340" width="4" height="15" fill="rgb(243,185,26)"/><text x="675.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="672" y="356" width="4" height="15" fill="rgb(238,56,42)"/><text x="675.00" y="366.50"></text></g><g><title>onnxruntime::Cast&lt;bool&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="676" y="340" width="3" height="15" fill="rgb(221,218,49)"/><text x="679.00" y="350.50"></text></g><g><title>0x7fcfa864cd97 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="681" y="372" width="2" height="15" fill="rgb(208,166,40)"/><text x="684.00" y="382.50"></text></g><g><title>onnxruntime::Concat::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.58%)</title><rect x="679" y="340" width="6" height="15" fill="rgb(218,100,47)"/><text x="682.00" y="350.50"></text></g><g><title>onnxruntime::ConcatBase::ComputeImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.58%)</title><rect x="679" y="356" width="6" height="15" fill="rgb(218,141,47)"/><text x="682.00" y="366.50"></text></g><g><title>0x7fcfa864cdcb (libc-2.29.so) (1 samples, 0.19%)</title><rect x="683" y="372" width="2" height="15" fill="rgb(250,93,51)"/><text x="686.00" y="382.50"></text></g><g><title>(anonymous namespace)::CopySlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="685" y="356" width="5" height="15" fill="rgb(246,10,37)"/><text x="688.00" y="366.50"></text></g><g><title>(anonymous namespace)::SumSlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.55%)</title><rect x="690" y="356" width="18" height="15" fill="rgb(243,85,46)"/><text x="693.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector [clone .constprop.161] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="706" y="372" width="2" height="15" fill="rgb(251,223,47)"/><text x="709.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="706" y="388" width="2" height="15" fill="rgb(217,104,40)"/><text x="709.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="706" y="404" width="2" height="15" fill="rgb(249,58,27)"/><text x="709.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="708" y="356" width="3" height="15" fill="rgb(237,204,29)"/><text x="711.00" y="366.50"></text></g><g><title>onnxruntime::CumSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.33%)</title><rect x="685" y="340" width="28" height="15" fill="rgb(247,219,54)"/><text x="688.00" y="350.50">o..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector [clone .constprop.161] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="711" y="356" width="2" height="15" fill="rgb(208,214,54)"/><text x="714.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="711" y="372" width="2" height="15" fill="rgb(250,77,18)"/><text x="714.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="711" y="388" width="2" height="15" fill="rgb(216,63,28)"/><text x="714.00" y="398.50"></text></g><g><title>0x7fcfa864cdb6 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="720" y="356" width="2" height="15" fill="rgb(226,220,54)"/><text x="723.00" y="366.50"></text></g><g><title>onnxruntime::GatherElements::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.17%)</title><rect x="713" y="340" width="14" height="15" fill="rgb(251,103,12)"/><text x="716.00" y="350.50"></text></g><g><title>onnxruntime::parse_and_validate_indices_tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="722" y="356" width="5" height="15" fill="rgb(222,120,10)"/><text x="725.00" y="366.50"></text></g><g><title>onnxruntime::Less&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="727" y="340" width="2" height="15" fill="rgb(234,15,39)"/><text x="730.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="727" y="356" width="2" height="15" fill="rgb(245,3,24)"/><text x="730.00" y="366.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.78%)</title><rect x="729" y="340" width="9" height="15" fill="rgb(212,89,53)"/><text x="732.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.78%)</title><rect x="729" y="356" width="9" height="15" fill="rgb(248,214,39)"/><text x="732.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.78%)</title><rect x="729" y="372" width="9" height="15" fill="rgb(208,74,43)"/><text x="732.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="734" y="388" width="4" height="15" fill="rgb(231,143,34)"/><text x="737.00" y="398.50"></text></g><g><title>0x7fcfa862c92c (libc-2.29.so) (1 samples, 0.19%)</title><rect x="763" y="388" width="3" height="15" fill="rgb(208,185,46)"/><text x="766.00" y="398.50"></text></g><g><title>0x7fcfa862c945 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="766" y="388" width="2" height="15" fill="rgb(221,23,8)"/><text x="769.00" y="398.50"></text></g><g><title>0x7fcfa87fee4d (libm-2.29.so) (2 samples, 0.39%)</title><rect x="768" y="388" width="4" height="15" fill="rgb(229,65,18)"/><text x="771.00" y="398.50"></text></g><g><title>0x7fcfa87fee6e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="772" y="388" width="3" height="15" fill="rgb(232,205,34)"/><text x="775.00" y="398.50"></text></g><g><title>0x7fcfa87feea2 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="775" y="388" width="2" height="15" fill="rgb(238,110,50)"/><text x="778.00" y="398.50"></text></g><g><title>0x7fcfa87feeb6 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="777" y="388" width="2" height="15" fill="rgb(242,0,17)"/><text x="780.00" y="398.50"></text></g><g><title>0x7fcfa87feec6 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="779" y="388" width="3" height="15" fill="rgb(227,171,21)"/><text x="782.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="782" y="388" width="2" height="15" fill="rgb(217,69,10)"/><text x="785.00" y="398.50"></text></g><g><title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, long, std::pair&lt;float, long&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::GreaterValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="784" y="388" width="5" height="15" fill="rgb(205,25,15)"/><text x="787.00" y="398.50"></text></g><g><title>0x7fcfa862ca38 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="800" y="404" width="2" height="15" fill="rgb(210,84,33)"/><text x="803.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="802" y="404" width="3" height="15" fill="rgb(221,183,33)"/><text x="805.00" y="414.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 6.60%)</title><rect x="738" y="340" width="78" height="15" fill="rgb(230,148,31)"/><text x="741.00" y="350.50">onnxrunti..</text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 6.60%)</title><rect x="738" y="356" width="78" height="15" fill="rgb(210,211,41)"/><text x="741.00" y="366.50">onnxrunti..</text></g><g><title>onnxruntime::extract_top_k_elements&lt;true, true, onnxruntime::GreaterValueCmp&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 6.60%)</title><rect x="738" y="372" width="78" height="15" fill="rgb(252,43,34)"/><text x="741.00" y="382.50">onnxrunti..</text></g><g><title>std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt;::_M_emplace_back_aux&lt;std::pair&lt;float, long&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.33%)</title><rect x="789" y="388" width="27" height="15" fill="rgb(219,131,48)"/><text x="792.00" y="398.50">s..</text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.97%)</title><rect x="805" y="404" width="11" height="15" fill="rgb(235,137,18)"/><text x="808.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.97%)</title><rect x="805" y="420" width="11" height="15" fill="rgb(225,80,18)"/><text x="808.00" y="430.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="816" y="340" width="5" height="15" fill="rgb(238,130,38)"/><text x="819.00" y="350.50"></text></g><g><title>0x7fcf686320f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="860" y="356" width="2" height="15" fill="rgb(253,25,10)"/><text x="863.00" y="366.50"></text></g><g><title>0x7fcfa862c906 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="862" y="356" width="2" height="15" fill="rgb(242,94,24)"/><text x="865.00" y="366.50"></text></g><g><title>0x7fcfa862c908 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="864" y="356" width="2" height="15" fill="rgb(230,199,31)"/><text x="867.00" y="366.50"></text></g><g><title>0x7fcfa862c90e (libc-2.29.so) (1 samples, 0.19%)</title><rect x="866" y="356" width="3" height="15" fill="rgb(239,67,7)"/><text x="869.00" y="366.50"></text></g><g><title>0x7fcfa862c929 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="869" y="356" width="2" height="15" fill="rgb(216,62,19)"/><text x="872.00" y="366.50"></text></g><g><title>0x7fcfa862c92f (libc-2.29.so) (1 samples, 0.19%)</title><rect x="871" y="356" width="2" height="15" fill="rgb(209,35,37)"/><text x="874.00" y="366.50"></text></g><g><title>0x7fcfa862c965 (libc-2.29.so) (3 samples, 0.58%)</title><rect x="873" y="356" width="7" height="15" fill="rgb(249,101,39)"/><text x="876.00" y="366.50"></text></g><g><title>0x7fcfa862c96a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="880" y="356" width="2" height="15" fill="rgb(219,221,49)"/><text x="883.00" y="366.50"></text></g><g><title>0x7fcfa862c97c (libc-2.29.so) (1 samples, 0.19%)</title><rect x="882" y="356" width="3" height="15" fill="rgb(235,81,6)"/><text x="885.00" y="366.50"></text></g><g><title>0x7fcfa862c991 (libc-2.29.so) (2 samples, 0.39%)</title><rect x="885" y="356" width="4" height="15" fill="rgb(222,177,35)"/><text x="888.00" y="366.50"></text></g><g><title>0x7fcfa862ca41 (libc-2.29.so) (2 samples, 0.39%)</title><rect x="889" y="356" width="5" height="15" fill="rgb(234,71,27)"/><text x="892.00" y="366.50"></text></g><g><title>0x7fcfa862ca53 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="894" y="356" width="2" height="15" fill="rgb(229,18,7)"/><text x="897.00" y="366.50"></text></g><g><title>0x7fcfa862ca55 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="896" y="356" width="3" height="15" fill="rgb(239,12,51)"/><text x="899.00" y="366.50"></text></g><g><title>0x7fcfa862cbc0 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="899" y="356" width="2" height="15" fill="rgb(249,196,36)"/><text x="902.00" y="366.50"></text></g><g><title>0x7fcfa862cbe4 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="901" y="356" width="2" height="15" fill="rgb(250,21,54)"/><text x="904.00" y="366.50"></text></g><g><title>0x7fcfa862cbe8 (libc-2.29.so) (2 samples, 0.39%)</title><rect x="903" y="356" width="5" height="15" fill="rgb(226,94,9)"/><text x="906.00" y="366.50"></text></g><g><title>0x7fcfa864d120 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="908" y="356" width="2" height="15" fill="rgb(207,43,49)"/><text x="911.00" y="366.50"></text></g><g><title>0x7fcfa864d144 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="910" y="356" width="2" height="15" fill="rgb(227,48,1)"/><text x="913.00" y="366.50"></text></g><g><title>0x7fcfa864d14a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="912" y="356" width="3" height="15" fill="rgb(235,28,41)"/><text x="915.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (5 samples, 0.97%)</title><rect x="915" y="356" width="11" height="15" fill="rgb(231,171,33)"/><text x="918.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (7 samples, 1.36%)</title><rect x="1031" y="388" width="16" height="15" fill="rgb(219,45,19)"/><text x="1034.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 1.17%)</title><rect x="1034" y="404" width="13" height="15" fill="rgb(243,11,51)"/><text x="1037.00" y="414.50"></text></g><g><title>0x7fcfa864d14a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1075" y="420" width="2" height="15" fill="rgb(229,122,18)"/><text x="1078.00" y="430.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.36%)</title><rect x="1066" y="404" width="16" height="15" fill="rgb(213,66,15)"/><text x="1069.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.39%)</title><rect x="1077" y="420" width="5" height="15" fill="rgb(238,45,50)"/><text x="1080.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1080" y="436" width="2" height="15" fill="rgb(242,214,24)"/><text x="1083.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (94 samples, 18.25%)</title><rect x="926" y="356" width="215" height="15" fill="rgb(246,125,32)"/><text x="929.00" y="366.50">onnxruntime::ml::TreeEnsembl..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (53 samples, 10.29%)</title><rect x="1020" y="372" width="121" height="15" fill="rgb(220,10,16)"/><text x="1023.00" y="382.50">std::_Hashtable..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (41 samples, 7.96%)</title><rect x="1047" y="388" width="94" height="15" fill="rgb(205,116,7)"/><text x="1050.00" y="398.50">std::_Hasht..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (26 samples, 5.05%)</title><rect x="1082" y="404" width="59" height="15" fill="rgb(223,22,30)"/><text x="1085.00" y="414.50">std::_..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (12 samples, 2.33%)</title><rect x="1114" y="420" width="27" height="15" fill="rgb(213,179,34)"/><text x="1117.00" y="430.50">s..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.97%)</title><rect x="1141" y="356" width="12" height="15" fill="rgb(207,65,28)"/><text x="1144.00" y="366.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (2 samples, 0.39%)</title><rect x="1153" y="356" width="4" height="15" fill="rgb(223,190,44)"/><text x="1156.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.17%)</title><rect x="1157" y="356" width="14" height="15" fill="rgb(253,27,50)"/><text x="1160.00" y="366.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (226 samples, 43.88%)</title><rect x="667" y="164" width="518" height="15" fill="rgb(242,166,28)"/><text x="670.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (226 samples, 43.88%)</title><rect x="667" y="180" width="518" height="15" fill="rgb(234,111,50)"/><text x="670.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (226 samples, 43.88%)</title><rect x="667" y="196" width="518" height="15" fill="rgb(252,193,38)"/><text x="670.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (225 samples, 43.69%)</title><rect x="669" y="212" width="516" height="15" fill="rgb(245,202,29)"/><text x="672.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (225 samples, 43.69%)</title><rect x="669" y="228" width="516" height="15" fill="rgb(213,197,34)"/><text x="672.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObject..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (225 samples, 43.69%)</title><rect x="669" y="244" width="516" height="15" fill="rgb(211,110,38)"/><text x="672.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (224 samples, 43.50%)</title><rect x="672" y="260" width="513" height="15" fill="rgb(206,46,2)"/><text x="675.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybin..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (224 samples, 43.50%)</title><rect x="672" y="276" width="513" height="15" fill="rgb(244,100,1)"/><text x="675.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybin..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (224 samples, 43.50%)</title><rect x="672" y="292" width="513" height="15" fill="rgb(231,6,48)"/><text x="675.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind1..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (224 samples, 43.50%)</title><rect x="672" y="308" width="513" height="15" fill="rgb(252,185,44)"/><text x="675.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pyb..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (224 samples, 43.50%)</title><rect x="672" y="324" width="513" height="15" fill="rgb(236,40,49)"/><text x="675.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (159 samples, 30.87%)</title><rect x="821" y="340" width="364" height="15" fill="rgb(215,86,37)"/><text x="824.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Co..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.17%)</title><rect x="1171" y="356" width="14" height="15" fill="rgb(236,203,40)"/><text x="1174.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.97%)</title><rect x="1173" y="372" width="12" height="15" fill="rgb(254,50,43)"/><text x="1176.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.78%)</title><rect x="1176" y="388" width="9" height="15" fill="rgb(238,35,17)"/><text x="1179.00" y="398.50"></text></g><g><title>all (515 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(252,200,22)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:68) (229 samples, 44.47%)</title><rect x="665" y="52" width="525" height="15" fill="rgb(220,198,9)"/><text x="668.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12..</text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:67) (229 samples, 44.47%)</title><rect x="665" y="68" width="525" height="15" fill="rgb(223,129,49)"/><text x="668.00" y="78.50">profile_ort (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:37) (229 samples, 44.47%)</title><rect x="665" y="84" width="525" height="15" fill="rgb(223,38,46)"/><text x="668.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py:31) (229 samples, 44.47%)</title><rect x="665" y="100" width="525" height="15" fill="rgb(243,15,32)"/><text x="668.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (229 samples, 44.47%)</title><rect x="665" y="116" width="525" height="15" fill="rgb(225,35,30)"/><text x="668.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (229 samples, 44.47%)</title><rect x="665" y="132" width="525" height="15" fill="rgb(205,27,50)"/><text x="668.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (228 samples, 44.27%)</title><rect x="667" y="148" width="523" height="15" fill="rgb(207,192,1)"/><text x="670.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.39%)</title><rect x="1185" y="164" width="5" height="15" fill="rgb(205,143,34)"/><text x="1188.00" y="174.50"></text></g></g></svg>