<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2038" onload="init(evt)" viewBox="0 0 1200 2038" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2038" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2021.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2021.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(228,142,28)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(245,34,34)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(253,169,13)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(249,196,46)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="10" y="932" width="5" height="15" fill="rgb(231,63,8)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="12" y="948" width="3" height="15" fill="rgb(241,148,52)"/><text x="15.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="12" y="964" width="3" height="15" fill="rgb(240,31,0)"/><text x="15.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="12" y="980" width="3" height="15" fill="rgb(250,227,25)"/><text x="15.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.23%)</title><rect x="12" y="996" width="3" height="15" fill="rgb(237,226,51)"/><text x="15.00" y="1006.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.23%)</title><rect x="12" y="1012" width="3" height="15" fill="rgb(211,55,24)"/><text x="15.00" y="1022.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="15" y="916" width="3" height="15" fill="rgb(248,180,45)"/><text x="18.00" y="926.50"></text></g><g><title>key (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="15" y="932" width="3" height="15" fill="rgb(226,177,47)"/><text x="18.00" y="942.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="15" y="868" width="5" height="15" fill="rgb(241,25,5)"/><text x="18.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="15" y="884" width="5" height="15" fill="rgb(241,48,43)"/><text x="18.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="15" y="900" width="5" height="15" fill="rgb(251,64,51)"/><text x="18.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="18" y="916" width="2" height="15" fill="rgb(240,188,53)"/><text x="21.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="18" y="932" width="2" height="15" fill="rgb(231,123,51)"/><text x="21.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="20" y="916" width="3" height="15" fill="rgb(232,84,16)"/><text x="23.00" y="926.50"></text></g><g><title>_reload_version (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="20" y="932" width="3" height="15" fill="rgb(218,77,2)"/><text x="23.00" y="942.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="20" y="948" width="3" height="15" fill="rgb(210,172,33)"/><text x="23.00" y="958.50"></text></g><g><title>yield_lines (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="20" y="964" width="3" height="15" fill="rgb(244,82,12)"/><text x="23.00" y="974.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.23%)</title><rect x="20" y="980" width="3" height="15" fill="rgb(218,210,50)"/><text x="23.00" y="990.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (6 samples, 1.39%)</title><rect x="10" y="836" width="16" height="15" fill="rgb(227,19,21)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (6 samples, 1.39%)</title><rect x="10" y="852" width="16" height="15" fill="rgb(221,140,43)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="20" y="868" width="6" height="15" fill="rgb(225,178,52)"/><text x="23.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="20" y="884" width="6" height="15" fill="rgb(208,204,1)"/><text x="23.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="20" y="900" width="6" height="15" fill="rgb(208,64,4)"/><text x="23.00" y="910.50"></text></g><g><title>isdir (genericpath.py) (1 samples, 0.23%)</title><rect x="23" y="916" width="3" height="15" fill="rgb(211,103,30)"/><text x="26.00" y="926.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.23%)</title><rect x="23" y="932" width="3" height="15" fill="rgb(228,120,52)"/><text x="26.00" y="942.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.23%)</title><rect x="23" y="948" width="3" height="15" fill="rgb(214,67,38)"/><text x="26.00" y="958.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (7 samples, 1.62%)</title><rect x="10" y="292" width="19" height="15" fill="rgb(240,97,28)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="308" width="19" height="15" fill="rgb(218,28,51)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="324" width="19" height="15" fill="rgb(211,217,7)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="340" width="19" height="15" fill="rgb(206,225,25)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.62%)</title><rect x="10" y="356" width="19" height="15" fill="rgb(234,26,24)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="372" width="19" height="15" fill="rgb(224,143,32)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (7 samples, 1.62%)</title><rect x="10" y="388" width="19" height="15" fill="rgb(219,56,14)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="404" width="19" height="15" fill="rgb(229,181,30)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="420" width="19" height="15" fill="rgb(246,154,23)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="436" width="19" height="15" fill="rgb(252,136,45)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.62%)</title><rect x="10" y="452" width="19" height="15" fill="rgb(254,17,27)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="468" width="19" height="15" fill="rgb(216,119,16)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (7 samples, 1.62%)</title><rect x="10" y="484" width="19" height="15" fill="rgb(252,111,18)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="500" width="19" height="15" fill="rgb(229,7,42)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="516" width="19" height="15" fill="rgb(205,34,49)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="532" width="19" height="15" fill="rgb(225,81,41)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.62%)</title><rect x="10" y="548" width="19" height="15" fill="rgb(234,212,52)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="564" width="19" height="15" fill="rgb(251,225,21)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (7 samples, 1.62%)</title><rect x="10" y="580" width="19" height="15" fill="rgb(237,30,25)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="596" width="19" height="15" fill="rgb(238,215,46)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="612" width="19" height="15" fill="rgb(206,137,37)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="628" width="19" height="15" fill="rgb(209,55,18)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="644" width="19" height="15" fill="rgb(221,86,37)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="660" width="19" height="15" fill="rgb(213,52,27)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="676" width="19" height="15" fill="rgb(228,204,40)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.62%)</title><rect x="10" y="692" width="19" height="15" fill="rgb(224,65,15)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="708" width="19" height="15" fill="rgb(211,104,5)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (7 samples, 1.62%)</title><rect x="10" y="724" width="19" height="15" fill="rgb(231,167,52)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="740" width="19" height="15" fill="rgb(253,178,42)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="756" width="19" height="15" fill="rgb(210,89,8)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="772" width="19" height="15" fill="rgb(214,161,24)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.62%)</title><rect x="10" y="788" width="19" height="15" fill="rgb(215,130,5)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="10" y="804" width="19" height="15" fill="rgb(219,197,20)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (7 samples, 1.62%)</title><rect x="10" y="820" width="19" height="15" fill="rgb(223,177,41)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="26" y="836" width="3" height="15" fill="rgb(246,204,24)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="26" y="852" width="3" height="15" fill="rgb(221,60,44)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="26" y="868" width="3" height="15" fill="rgb(221,221,51)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="26" y="884" width="3" height="15" fill="rgb(248,43,27)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="26" y="900" width="3" height="15" fill="rgb(238,179,37)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.23%)</title><rect x="26" y="916" width="3" height="15" fill="rgb(252,173,1)"/><text x="29.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.23%)</title><rect x="26" y="932" width="3" height="15" fill="rgb(214,19,4)"/><text x="29.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.23%)</title><rect x="26" y="948" width="3" height="15" fill="rgb(212,90,35)"/><text x="29.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.23%)</title><rect x="26" y="964" width="3" height="15" fill="rgb(240,102,39)"/><text x="29.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.23%)</title><rect x="26" y="980" width="3" height="15" fill="rgb(244,86,16)"/><text x="29.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="26" y="996" width="3" height="15" fill="rgb(207,121,50)"/><text x="29.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.23%)</title><rect x="26" y="1012" width="3" height="15" fill="rgb(236,1,32)"/><text x="29.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="26" y="1028" width="3" height="15" fill="rgb(244,198,14)"/><text x="29.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.23%)</title><rect x="26" y="1044" width="3" height="15" fill="rgb(234,25,46)"/><text x="29.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="26" y="1060" width="3" height="15" fill="rgb(208,202,15)"/><text x="29.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.23%)</title><rect x="26" y="1076" width="3" height="15" fill="rgb(209,73,7)"/><text x="29.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="26" y="1092" width="3" height="15" fill="rgb(216,214,8)"/><text x="29.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.23%)</title><rect x="26" y="1108" width="3" height="15" fill="rgb(209,198,13)"/><text x="29.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="26" y="1124" width="3" height="15" fill="rgb(219,194,10)"/><text x="29.00" y="1134.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.23%)</title><rect x="26" y="1140" width="3" height="15" fill="rgb(218,48,6)"/><text x="29.00" y="1150.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="26" y="1156" width="3" height="15" fill="rgb(207,171,26)"/><text x="29.00" y="1166.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="29" y="724" width="2" height="15" fill="rgb(251,93,7)"/><text x="32.00" y="734.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="29" y="740" width="2" height="15" fill="rgb(218,86,16)"/><text x="32.00" y="750.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="29" y="756" width="2" height="15" fill="rgb(207,5,13)"/><text x="32.00" y="766.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="29" y="772" width="2" height="15" fill="rgb(238,52,50)"/><text x="32.00" y="782.50"></text></g><g><title>_fill_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="29" y="788" width="2" height="15" fill="rgb(218,218,13)"/><text x="32.00" y="798.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.23%)</title><rect x="29" y="804" width="2" height="15" fill="rgb(254,87,18)"/><text x="32.00" y="814.50"></text></g><g><title>__init__ (numpy/lib/function_base.py) (1 samples, 0.23%)</title><rect x="31" y="1060" width="3" height="15" fill="rgb(244,220,32)"/><text x="34.00" y="1070.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.23%)</title><rect x="34" y="1060" width="3" height="15" fill="rgb(223,194,50)"/><text x="37.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py) (1 samples, 0.23%)</title><rect x="34" y="1076" width="3" height="15" fill="rgb(246,24,32)"/><text x="37.00" y="1086.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.23%)</title><rect x="34" y="1092" width="3" height="15" fill="rgb(231,65,4)"/><text x="37.00" y="1102.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.23%)</title><rect x="34" y="1108" width="3" height="15" fill="rgb(226,179,40)"/><text x="37.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.23%)</title><rect x="34" y="1124" width="3" height="15" fill="rgb(225,118,44)"/><text x="37.00" y="1134.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.23%)</title><rect x="34" y="1140" width="3" height="15" fill="rgb(222,46,30)"/><text x="37.00" y="1150.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.23%)</title><rect x="34" y="1156" width="3" height="15" fill="rgb(206,74,24)"/><text x="37.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.93%)</title><rect x="29" y="500" width="11" height="15" fill="rgb(221,149,15)"/><text x="32.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.93%)</title><rect x="29" y="516" width="11" height="15" fill="rgb(207,93,35)"/><text x="32.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.93%)</title><rect x="29" y="532" width="11" height="15" fill="rgb(243,9,9)"/><text x="32.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.93%)</title><rect x="29" y="548" width="11" height="15" fill="rgb(235,32,22)"/><text x="32.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.93%)</title><rect x="29" y="564" width="11" height="15" fill="rgb(238,55,31)"/><text x="32.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (4 samples, 0.93%)</title><rect x="29" y="580" width="11" height="15" fill="rgb(209,57,48)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.93%)</title><rect x="29" y="596" width="11" height="15" fill="rgb(227,44,36)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.93%)</title><rect x="29" y="612" width="11" height="15" fill="rgb(205,150,1)"/><text x="32.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.93%)</title><rect x="29" y="628" width="11" height="15" fill="rgb(225,120,34)"/><text x="32.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.93%)</title><rect x="29" y="644" width="11" height="15" fill="rgb(247,74,29)"/><text x="32.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.93%)</title><rect x="29" y="660" width="11" height="15" fill="rgb(215,155,9)"/><text x="32.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (4 samples, 0.93%)</title><rect x="29" y="676" width="11" height="15" fill="rgb(208,135,28)"/><text x="32.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.93%)</title><rect x="29" y="692" width="11" height="15" fill="rgb(244,190,32)"/><text x="32.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.93%)</title><rect x="29" y="708" width="11" height="15" fill="rgb(210,198,29)"/><text x="32.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="31" y="724" width="9" height="15" fill="rgb(247,64,48)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.70%)</title><rect x="31" y="740" width="9" height="15" fill="rgb(227,228,43)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="31" y="756" width="9" height="15" fill="rgb(248,102,28)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (3 samples, 0.70%)</title><rect x="31" y="772" width="9" height="15" fill="rgb(243,136,47)"/><text x="34.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="31" y="788" width="9" height="15" fill="rgb(253,82,5)"/><text x="34.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="31" y="804" width="9" height="15" fill="rgb(216,44,19)"/><text x="34.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="31" y="820" width="9" height="15" fill="rgb(223,75,51)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="31" y="836" width="9" height="15" fill="rgb(210,55,25)"/><text x="34.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="31" y="852" width="9" height="15" fill="rgb(215,227,39)"/><text x="34.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.70%)</title><rect x="31" y="868" width="9" height="15" fill="rgb(228,108,27)"/><text x="34.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="31" y="884" width="9" height="15" fill="rgb(209,83,30)"/><text x="34.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (3 samples, 0.70%)</title><rect x="31" y="900" width="9" height="15" fill="rgb(225,27,13)"/><text x="34.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="31" y="916" width="9" height="15" fill="rgb(238,94,4)"/><text x="34.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="31" y="932" width="9" height="15" fill="rgb(245,209,14)"/><text x="34.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="31" y="948" width="9" height="15" fill="rgb(230,20,13)"/><text x="34.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="31" y="964" width="9" height="15" fill="rgb(235,205,15)"/><text x="34.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="31" y="980" width="9" height="15" fill="rgb(209,105,34)"/><text x="34.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.70%)</title><rect x="31" y="996" width="9" height="15" fill="rgb(245,74,0)"/><text x="34.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="31" y="1012" width="9" height="15" fill="rgb(232,119,19)"/><text x="34.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (3 samples, 0.70%)</title><rect x="31" y="1028" width="9" height="15" fill="rgb(227,170,17)"/><text x="34.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (3 samples, 0.70%)</title><rect x="31" y="1044" width="9" height="15" fill="rgb(244,155,42)"/><text x="34.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.23%)</title><rect x="37" y="1060" width="3" height="15" fill="rgb(244,215,13)"/><text x="40.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.78%)</title><rect x="10" y="196" width="32" height="15" fill="rgb(215,104,27)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.78%)</title><rect x="10" y="212" width="32" height="15" fill="rgb(211,219,37)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.78%)</title><rect x="10" y="228" width="32" height="15" fill="rgb(209,95,27)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.78%)</title><rect x="10" y="244" width="32" height="15" fill="rgb(252,57,48)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.78%)</title><rect x="10" y="260" width="32" height="15" fill="rgb(248,0,22)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.78%)</title><rect x="10" y="276" width="32" height="15" fill="rgb(243,60,51)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (5 samples, 1.16%)</title><rect x="29" y="292" width="13" height="15" fill="rgb(254,37,48)"/><text x="32.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.16%)</title><rect x="29" y="308" width="13" height="15" fill="rgb(207,218,45)"/><text x="32.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.16%)</title><rect x="29" y="324" width="13" height="15" fill="rgb(208,28,13)"/><text x="32.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.16%)</title><rect x="29" y="340" width="13" height="15" fill="rgb(229,188,18)"/><text x="32.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.16%)</title><rect x="29" y="356" width="13" height="15" fill="rgb(237,127,43)"/><text x="32.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.16%)</title><rect x="29" y="372" width="13" height="15" fill="rgb(239,205,54)"/><text x="32.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (5 samples, 1.16%)</title><rect x="29" y="388" width="13" height="15" fill="rgb(236,96,44)"/><text x="32.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.16%)</title><rect x="29" y="404" width="13" height="15" fill="rgb(243,12,8)"/><text x="32.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.16%)</title><rect x="29" y="420" width="13" height="15" fill="rgb(223,166,35)"/><text x="32.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.16%)</title><rect x="29" y="436" width="13" height="15" fill="rgb(228,91,29)"/><text x="32.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.16%)</title><rect x="29" y="452" width="13" height="15" fill="rgb(210,130,36)"/><text x="32.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.16%)</title><rect x="29" y="468" width="13" height="15" fill="rgb(226,15,9)"/><text x="32.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (5 samples, 1.16%)</title><rect x="29" y="484" width="13" height="15" fill="rgb(235,21,54)"/><text x="32.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="500" width="2" height="15" fill="rgb(222,21,24)"/><text x="43.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="516" width="2" height="15" fill="rgb(249,210,34)"/><text x="43.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="532" width="2" height="15" fill="rgb(235,25,20)"/><text x="43.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="548" width="2" height="15" fill="rgb(233,166,36)"/><text x="43.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="564" width="2" height="15" fill="rgb(243,110,53)"/><text x="43.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="40" y="580" width="2" height="15" fill="rgb(231,182,18)"/><text x="43.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="596" width="2" height="15" fill="rgb(223,133,50)"/><text x="43.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.23%)</title><rect x="40" y="612" width="2" height="15" fill="rgb(211,146,8)"/><text x="43.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="628" width="2" height="15" fill="rgb(239,122,8)"/><text x="43.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="644" width="2" height="15" fill="rgb(236,56,42)"/><text x="43.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="660" width="2" height="15" fill="rgb(227,180,11)"/><text x="43.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="40" y="676" width="2" height="15" fill="rgb(245,155,22)"/><text x="43.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="692" width="2" height="15" fill="rgb(232,126,30)"/><text x="43.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.23%)</title><rect x="40" y="708" width="2" height="15" fill="rgb(209,54,31)"/><text x="43.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="724" width="2" height="15" fill="rgb(215,24,32)"/><text x="43.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="740" width="2" height="15" fill="rgb(210,57,1)"/><text x="43.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="756" width="2" height="15" fill="rgb(214,198,19)"/><text x="43.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="40" y="772" width="2" height="15" fill="rgb(251,91,49)"/><text x="43.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="788" width="2" height="15" fill="rgb(214,91,18)"/><text x="43.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.23%)</title><rect x="40" y="804" width="2" height="15" fill="rgb(246,20,42)"/><text x="43.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="820" width="2" height="15" fill="rgb(219,153,19)"/><text x="43.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="836" width="2" height="15" fill="rgb(222,71,13)"/><text x="43.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="852" width="2" height="15" fill="rgb(212,178,34)"/><text x="43.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="40" y="868" width="2" height="15" fill="rgb(252,13,37)"/><text x="43.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="884" width="2" height="15" fill="rgb(247,72,48)"/><text x="43.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py) (1 samples, 0.23%)</title><rect x="40" y="900" width="2" height="15" fill="rgb(243,128,17)"/><text x="43.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="916" width="2" height="15" fill="rgb(224,183,16)"/><text x="43.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="932" width="2" height="15" fill="rgb(221,221,7)"/><text x="43.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="948" width="2" height="15" fill="rgb(247,86,33)"/><text x="43.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="40" y="964" width="2" height="15" fill="rgb(247,0,12)"/><text x="43.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="980" width="2" height="15" fill="rgb(224,79,17)"/><text x="43.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/pool.py) (1 samples, 0.23%)</title><rect x="40" y="996" width="2" height="15" fill="rgb(236,46,40)"/><text x="43.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="1012" width="2" height="15" fill="rgb(247,223,27)"/><text x="43.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="1028" width="2" height="15" fill="rgb(223,204,10)"/><text x="43.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="1044" width="2" height="15" fill="rgb(205,111,15)"/><text x="43.00" y="1054.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="1060" width="2" height="15" fill="rgb(206,149,52)"/><text x="43.00" y="1070.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="1076" width="2" height="15" fill="rgb(242,76,9)"/><text x="43.00" y="1086.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="40" y="1092" width="2" height="15" fill="rgb(218,138,37)"/><text x="43.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="484" width="3" height="15" fill="rgb(214,229,7)"/><text x="45.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="500" width="3" height="15" fill="rgb(205,2,6)"/><text x="45.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="516" width="3" height="15" fill="rgb(214,3,39)"/><text x="45.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="532" width="3" height="15" fill="rgb(205,47,12)"/><text x="45.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="42" y="548" width="3" height="15" fill="rgb(231,133,47)"/><text x="45.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="564" width="3" height="15" fill="rgb(231,32,13)"/><text x="45.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.23%)</title><rect x="42" y="580" width="3" height="15" fill="rgb(231,89,41)"/><text x="45.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="596" width="3" height="15" fill="rgb(212,29,52)"/><text x="45.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="612" width="3" height="15" fill="rgb(210,216,2)"/><text x="45.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="628" width="3" height="15" fill="rgb(248,208,4)"/><text x="45.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="42" y="644" width="3" height="15" fill="rgb(247,164,15)"/><text x="45.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="660" width="3" height="15" fill="rgb(232,104,0)"/><text x="45.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.23%)</title><rect x="42" y="676" width="3" height="15" fill="rgb(253,191,43)"/><text x="45.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="692" width="3" height="15" fill="rgb(235,37,5)"/><text x="45.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="708" width="3" height="15" fill="rgb(223,152,37)"/><text x="45.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="724" width="3" height="15" fill="rgb(246,100,51)"/><text x="45.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="42" y="740" width="3" height="15" fill="rgb(207,219,35)"/><text x="45.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="756" width="3" height="15" fill="rgb(229,170,17)"/><text x="45.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.23%)</title><rect x="42" y="772" width="3" height="15" fill="rgb(216,93,41)"/><text x="45.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="788" width="3" height="15" fill="rgb(225,79,9)"/><text x="45.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="804" width="3" height="15" fill="rgb(207,167,44)"/><text x="45.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="820" width="3" height="15" fill="rgb(235,2,54)"/><text x="45.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="42" y="836" width="3" height="15" fill="rgb(230,97,32)"/><text x="45.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="852" width="3" height="15" fill="rgb(237,153,54)"/><text x="45.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.23%)</title><rect x="42" y="868" width="3" height="15" fill="rgb(236,182,15)"/><text x="45.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="884" width="3" height="15" fill="rgb(239,76,20)"/><text x="45.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="900" width="3" height="15" fill="rgb(250,195,15)"/><text x="45.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="916" width="3" height="15" fill="rgb(238,108,52)"/><text x="45.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="932" width="3" height="15" fill="rgb(226,149,40)"/><text x="45.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="948" width="3" height="15" fill="rgb(209,38,39)"/><text x="45.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="964" width="3" height="15" fill="rgb(238,52,1)"/><text x="45.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="42" y="980" width="3" height="15" fill="rgb(226,77,35)"/><text x="45.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="996" width="3" height="15" fill="rgb(252,87,2)"/><text x="45.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.23%)</title><rect x="42" y="1012" width="3" height="15" fill="rgb(236,97,25)"/><text x="45.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="1028" width="3" height="15" fill="rgb(240,97,43)"/><text x="45.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="1044" width="3" height="15" fill="rgb(211,8,13)"/><text x="45.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="1060" width="3" height="15" fill="rgb(211,187,45)"/><text x="45.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="42" y="1076" width="3" height="15" fill="rgb(237,72,34)"/><text x="45.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="1092" width="3" height="15" fill="rgb(232,120,47)"/><text x="45.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.23%)</title><rect x="42" y="1108" width="3" height="15" fill="rgb(210,215,38)"/><text x="45.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="1124" width="3" height="15" fill="rgb(230,155,14)"/><text x="45.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="1140" width="3" height="15" fill="rgb(220,35,4)"/><text x="45.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="1156" width="3" height="15" fill="rgb(253,4,18)"/><text x="45.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="1172" width="3" height="15" fill="rgb(212,205,35)"/><text x="45.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="1188" width="3" height="15" fill="rgb(216,128,23)"/><text x="45.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="42" y="1204" width="3" height="15" fill="rgb(240,96,52)"/><text x="45.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="1220" width="3" height="15" fill="rgb(205,124,1)"/><text x="45.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.23%)</title><rect x="42" y="1236" width="3" height="15" fill="rgb(213,0,18)"/><text x="45.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="1252" width="3" height="15" fill="rgb(211,22,49)"/><text x="45.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="1268" width="3" height="15" fill="rgb(228,121,43)"/><text x="45.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="1284" width="3" height="15" fill="rgb(221,218,40)"/><text x="45.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="1300" width="3" height="15" fill="rgb(252,91,26)"/><text x="45.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="1316" width="3" height="15" fill="rgb(253,200,29)"/><text x="45.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="42" y="1332" width="3" height="15" fill="rgb(241,7,4)"/><text x="45.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="1348" width="3" height="15" fill="rgb(227,164,49)"/><text x="45.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.23%)</title><rect x="42" y="1364" width="3" height="15" fill="rgb(250,30,27)"/><text x="45.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="1380" width="3" height="15" fill="rgb(224,181,34)"/><text x="45.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="1396" width="3" height="15" fill="rgb(230,97,30)"/><text x="45.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="1412" width="3" height="15" fill="rgb(222,169,2)"/><text x="45.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="42" y="1428" width="3" height="15" fill="rgb(232,18,20)"/><text x="45.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="1444" width="3" height="15" fill="rgb(224,171,49)"/><text x="45.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.23%)</title><rect x="42" y="1460" width="3" height="15" fill="rgb(253,221,46)"/><text x="45.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.23%)</title><rect x="42" y="1476" width="3" height="15" fill="rgb(239,226,30)"/><text x="45.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.23%)</title><rect x="42" y="1492" width="3" height="15" fill="rgb(225,57,29)"/><text x="45.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.23%)</title><rect x="42" y="1508" width="3" height="15" fill="rgb(215,2,53)"/><text x="45.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.23%)</title><rect x="42" y="1524" width="3" height="15" fill="rgb(243,97,49)"/><text x="45.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="772" width="3" height="15" fill="rgb(253,55,54)"/><text x="48.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="788" width="3" height="15" fill="rgb(243,119,19)"/><text x="48.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="804" width="3" height="15" fill="rgb(206,212,22)"/><text x="48.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="820" width="3" height="15" fill="rgb(221,104,45)"/><text x="48.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="45" y="836" width="3" height="15" fill="rgb(235,46,37)"/><text x="48.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="852" width="3" height="15" fill="rgb(217,89,42)"/><text x="48.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.23%)</title><rect x="45" y="868" width="3" height="15" fill="rgb(228,66,47)"/><text x="48.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="884" width="3" height="15" fill="rgb(216,211,9)"/><text x="48.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="900" width="3" height="15" fill="rgb(208,79,46)"/><text x="48.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="916" width="3" height="15" fill="rgb(206,227,33)"/><text x="48.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="45" y="932" width="3" height="15" fill="rgb(217,49,23)"/><text x="48.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="948" width="3" height="15" fill="rgb(220,173,13)"/><text x="48.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py) (1 samples, 0.23%)</title><rect x="45" y="964" width="3" height="15" fill="rgb(220,66,7)"/><text x="48.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="980" width="3" height="15" fill="rgb(243,156,6)"/><text x="48.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="996" width="3" height="15" fill="rgb(230,146,34)"/><text x="48.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1012" width="3" height="15" fill="rgb(239,199,41)"/><text x="48.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1028" width="3" height="15" fill="rgb(226,132,53)"/><text x="48.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1044" width="3" height="15" fill="rgb(240,127,9)"/><text x="48.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="45" y="1060" width="3" height="15" fill="rgb(206,100,38)"/><text x="48.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1076" width="3" height="15" fill="rgb(234,206,23)"/><text x="48.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/compat/numpy/function.py) (1 samples, 0.23%)</title><rect x="45" y="1092" width="3" height="15" fill="rgb(239,224,39)"/><text x="48.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1108" width="3" height="15" fill="rgb(209,63,20)"/><text x="48.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1124" width="3" height="15" fill="rgb(233,38,32)"/><text x="48.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1140" width="3" height="15" fill="rgb(205,184,22)"/><text x="48.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1156" width="3" height="15" fill="rgb(239,213,3)"/><text x="48.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1172" width="3" height="15" fill="rgb(217,226,50)"/><text x="48.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1188" width="3" height="15" fill="rgb(223,52,9)"/><text x="48.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="45" y="1204" width="3" height="15" fill="rgb(247,194,8)"/><text x="48.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1220" width="3" height="15" fill="rgb(240,200,5)"/><text x="48.00" y="1230.50"></text></g><g><title>&lt;module&gt; (pandas/util/__init__.py) (1 samples, 0.23%)</title><rect x="45" y="1236" width="3" height="15" fill="rgb(247,40,7)"/><text x="48.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1252" width="3" height="15" fill="rgb(254,108,26)"/><text x="48.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1268" width="3" height="15" fill="rgb(242,199,15)"/><text x="48.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1284" width="3" height="15" fill="rgb(251,200,36)"/><text x="48.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1300" width="3" height="15" fill="rgb(225,100,1)"/><text x="48.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1316" width="3" height="15" fill="rgb(218,227,18)"/><text x="48.00" y="1326.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1332" width="3" height="15" fill="rgb(217,79,35)"/><text x="48.00" y="1342.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="45" y="1348" width="3" height="15" fill="rgb(216,65,46)"/><text x="48.00" y="1358.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="45" y="1364" width="3" height="15" fill="rgb(206,6,2)"/><text x="48.00" y="1374.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="45" y="1380" width="3" height="15" fill="rgb(214,183,0)"/><text x="48.00" y="1390.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="45" y="1396" width="3" height="15" fill="rgb(231,89,4)"/><text x="48.00" y="1406.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="45" y="1412" width="3" height="15" fill="rgb(230,17,48)"/><text x="48.00" y="1422.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="45" y="1428" width="3" height="15" fill="rgb(242,125,14)"/><text x="48.00" y="1438.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.23%)</title><rect x="45" y="1444" width="3" height="15" fill="rgb(238,126,42)"/><text x="48.00" y="1454.50"></text></g><g><title>Series (pandas/core/series.py) (1 samples, 0.23%)</title><rect x="48" y="1124" width="3" height="15" fill="rgb(225,108,50)"/><text x="51.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.23%)</title><rect x="48" y="1140" width="3" height="15" fill="rgb(239,0,2)"/><text x="51.00" y="1150.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.23%)</title><rect x="48" y="1156" width="3" height="15" fill="rgb(250,205,54)"/><text x="51.00" y="1166.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.23%)</title><rect x="48" y="1172" width="3" height="15" fill="rgb(208,39,8)"/><text x="51.00" y="1182.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.23%)</title><rect x="48" y="1188" width="3" height="15" fill="rgb(242,7,35)"/><text x="51.00" y="1198.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.93%)</title><rect x="42" y="340" width="11" height="15" fill="rgb(217,109,15)"/><text x="45.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.93%)</title><rect x="42" y="356" width="11" height="15" fill="rgb(206,126,19)"/><text x="45.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.93%)</title><rect x="42" y="372" width="11" height="15" fill="rgb(221,122,37)"/><text x="45.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.93%)</title><rect x="42" y="388" width="11" height="15" fill="rgb(205,150,26)"/><text x="45.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.93%)</title><rect x="42" y="404" width="11" height="15" fill="rgb(225,78,8)"/><text x="45.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.93%)</title><rect x="42" y="420" width="11" height="15" fill="rgb(212,17,6)"/><text x="45.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (4 samples, 0.93%)</title><rect x="42" y="436" width="11" height="15" fill="rgb(209,87,10)"/><text x="45.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.93%)</title><rect x="42" y="452" width="11" height="15" fill="rgb(250,178,29)"/><text x="45.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.93%)</title><rect x="42" y="468" width="11" height="15" fill="rgb(227,108,38)"/><text x="45.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="45" y="484" width="8" height="15" fill="rgb(252,209,2)"/><text x="48.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.70%)</title><rect x="45" y="500" width="8" height="15" fill="rgb(224,0,2)"/><text x="48.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="45" y="516" width="8" height="15" fill="rgb(229,62,26)"/><text x="48.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.70%)</title><rect x="45" y="532" width="8" height="15" fill="rgb(232,23,39)"/><text x="48.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="45" y="548" width="8" height="15" fill="rgb(230,64,49)"/><text x="48.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="45" y="564" width="8" height="15" fill="rgb(231,191,16)"/><text x="48.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="45" y="580" width="8" height="15" fill="rgb(218,7,38)"/><text x="48.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.70%)</title><rect x="45" y="596" width="8" height="15" fill="rgb(219,17,1)"/><text x="48.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="45" y="612" width="8" height="15" fill="rgb(227,159,43)"/><text x="48.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.70%)</title><rect x="45" y="628" width="8" height="15" fill="rgb(215,146,5)"/><text x="48.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="45" y="644" width="8" height="15" fill="rgb(217,169,5)"/><text x="48.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="45" y="660" width="8" height="15" fill="rgb(205,202,7)"/><text x="48.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="45" y="676" width="8" height="15" fill="rgb(222,114,4)"/><text x="48.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.70%)</title><rect x="45" y="692" width="8" height="15" fill="rgb(211,229,6)"/><text x="48.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="45" y="708" width="8" height="15" fill="rgb(242,226,31)"/><text x="48.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.70%)</title><rect x="45" y="724" width="8" height="15" fill="rgb(253,75,15)"/><text x="48.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="45" y="740" width="8" height="15" fill="rgb(211,142,20)"/><text x="48.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.70%)</title><rect x="45" y="756" width="8" height="15" fill="rgb(254,149,36)"/><text x="48.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="48" y="772" width="5" height="15" fill="rgb(205,198,33)"/><text x="51.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="48" y="788" width="5" height="15" fill="rgb(253,180,17)"/><text x="51.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="48" y="804" width="5" height="15" fill="rgb(254,17,30)"/><text x="51.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.46%)</title><rect x="48" y="820" width="5" height="15" fill="rgb(254,171,49)"/><text x="51.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="48" y="836" width="5" height="15" fill="rgb(232,104,38)"/><text x="51.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="48" y="852" width="5" height="15" fill="rgb(223,116,13)"/><text x="51.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="48" y="868" width="5" height="15" fill="rgb(235,72,6)"/><text x="51.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="48" y="884" width="5" height="15" fill="rgb(241,153,32)"/><text x="51.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="48" y="900" width="5" height="15" fill="rgb(247,74,16)"/><text x="51.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.46%)</title><rect x="48" y="916" width="5" height="15" fill="rgb(211,211,25)"/><text x="51.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="48" y="932" width="5" height="15" fill="rgb(227,104,23)"/><text x="51.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="48" y="948" width="5" height="15" fill="rgb(214,131,1)"/><text x="51.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="48" y="964" width="5" height="15" fill="rgb(232,152,43)"/><text x="51.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="48" y="980" width="5" height="15" fill="rgb(238,13,41)"/><text x="51.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="48" y="996" width="5" height="15" fill="rgb(226,109,8)"/><text x="51.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.46%)</title><rect x="48" y="1012" width="5" height="15" fill="rgb(212,226,34)"/><text x="51.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="48" y="1028" width="5" height="15" fill="rgb(218,72,27)"/><text x="51.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="48" y="1044" width="5" height="15" fill="rgb(218,100,45)"/><text x="51.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="48" y="1060" width="5" height="15" fill="rgb(238,165,2)"/><text x="51.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="48" y="1076" width="5" height="15" fill="rgb(227,217,35)"/><text x="51.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="48" y="1092" width="5" height="15" fill="rgb(242,55,9)"/><text x="51.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.46%)</title><rect x="48" y="1108" width="5" height="15" fill="rgb(246,206,20)"/><text x="51.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1124" width="2" height="15" fill="rgb(217,204,9)"/><text x="54.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1140" width="2" height="15" fill="rgb(254,186,32)"/><text x="54.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1156" width="2" height="15" fill="rgb(205,168,54)"/><text x="54.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="51" y="1172" width="2" height="15" fill="rgb(252,102,40)"/><text x="54.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1188" width="2" height="15" fill="rgb(246,181,15)"/><text x="54.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.23%)</title><rect x="51" y="1204" width="2" height="15" fill="rgb(245,75,34)"/><text x="54.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1220" width="2" height="15" fill="rgb(218,148,38)"/><text x="54.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1236" width="2" height="15" fill="rgb(241,70,51)"/><text x="54.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1252" width="2" height="15" fill="rgb(244,111,46)"/><text x="54.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="51" y="1268" width="2" height="15" fill="rgb(220,162,43)"/><text x="54.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1284" width="2" height="15" fill="rgb(253,179,40)"/><text x="54.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.23%)</title><rect x="51" y="1300" width="2" height="15" fill="rgb(224,36,54)"/><text x="54.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1316" width="2" height="15" fill="rgb(240,146,24)"/><text x="54.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1332" width="2" height="15" fill="rgb(248,193,9)"/><text x="54.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1348" width="2" height="15" fill="rgb(230,36,42)"/><text x="54.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="51" y="1364" width="2" height="15" fill="rgb(233,172,25)"/><text x="54.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1380" width="2" height="15" fill="rgb(249,30,6)"/><text x="54.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.23%)</title><rect x="51" y="1396" width="2" height="15" fill="rgb(227,9,50)"/><text x="54.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1412" width="2" height="15" fill="rgb(246,169,17)"/><text x="54.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1428" width="2" height="15" fill="rgb(229,26,33)"/><text x="54.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1444" width="2" height="15" fill="rgb(235,96,34)"/><text x="54.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="51" y="1460" width="2" height="15" fill="rgb(207,155,1)"/><text x="54.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1476" width="2" height="15" fill="rgb(245,143,39)"/><text x="54.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.23%)</title><rect x="51" y="1492" width="2" height="15" fill="rgb(251,4,17)"/><text x="54.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1508" width="2" height="15" fill="rgb(207,134,4)"/><text x="54.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1524" width="2" height="15" fill="rgb(225,214,7)"/><text x="54.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1540" width="2" height="15" fill="rgb(238,187,19)"/><text x="54.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="51" y="1556" width="2" height="15" fill="rgb(211,138,46)"/><text x="54.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1572" width="2" height="15" fill="rgb(246,182,3)"/><text x="54.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.23%)</title><rect x="51" y="1588" width="2" height="15" fill="rgb(230,203,12)"/><text x="54.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1604" width="2" height="15" fill="rgb(211,37,32)"/><text x="54.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1620" width="2" height="15" fill="rgb(250,30,38)"/><text x="54.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1636" width="2" height="15" fill="rgb(220,157,43)"/><text x="54.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="51" y="1652" width="2" height="15" fill="rgb(234,45,19)"/><text x="54.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1668" width="2" height="15" fill="rgb(206,146,7)"/><text x="54.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.23%)</title><rect x="51" y="1684" width="2" height="15" fill="rgb(243,184,5)"/><text x="54.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1700" width="2" height="15" fill="rgb(254,0,41)"/><text x="54.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1716" width="2" height="15" fill="rgb(244,77,30)"/><text x="54.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1732" width="2" height="15" fill="rgb(252,103,5)"/><text x="54.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="51" y="1748" width="2" height="15" fill="rgb(210,14,32)"/><text x="54.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1764" width="2" height="15" fill="rgb(223,172,15)"/><text x="54.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.23%)</title><rect x="51" y="1780" width="2" height="15" fill="rgb(254,98,4)"/><text x="54.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1796" width="2" height="15" fill="rgb(228,130,34)"/><text x="54.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1812" width="2" height="15" fill="rgb(240,57,42)"/><text x="54.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1828" width="2" height="15" fill="rgb(236,153,35)"/><text x="54.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="51" y="1844" width="2" height="15" fill="rgb(250,130,27)"/><text x="54.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="51" y="1860" width="2" height="15" fill="rgb(238,208,8)"/><text x="54.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.23%)</title><rect x="51" y="1876" width="2" height="15" fill="rgb(230,209,21)"/><text x="54.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.23%)</title><rect x="51" y="1892" width="2" height="15" fill="rgb(237,116,25)"/><text x="54.00" y="1902.50"></text></g><g><title>__init__ (matplotlib/artist.py) (1 samples, 0.23%)</title><rect x="51" y="1908" width="2" height="15" fill="rgb(251,13,15)"/><text x="54.00" y="1918.50"></text></g><g><title>get_aliases (matplotlib/artist.py) (1 samples, 0.23%)</title><rect x="51" y="1924" width="2" height="15" fill="rgb(210,176,19)"/><text x="54.00" y="1934.50"></text></g><g><title>is_alias (matplotlib/artist.py) (1 samples, 0.23%)</title><rect x="51" y="1940" width="2" height="15" fill="rgb(242,61,43)"/><text x="54.00" y="1950.50"></text></g><g><title>getdoc (inspect.py) (1 samples, 0.23%)</title><rect x="51" y="1956" width="2" height="15" fill="rgb(221,49,32)"/><text x="54.00" y="1966.50"></text></g><g><title>cleandoc (inspect.py) (1 samples, 0.23%)</title><rect x="51" y="1972" width="2" height="15" fill="rgb(218,216,32)"/><text x="54.00" y="1982.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.23%)</title><rect x="51" y="1988" width="2" height="15" fill="rgb(209,199,21)"/><text x="54.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="1236" width="3" height="15" fill="rgb(254,30,40)"/><text x="56.00" y="1246.50"></text></g><g><title>&lt;module&gt; (xmlrpc/client.py) (1 samples, 0.23%)</title><rect x="53" y="1252" width="3" height="15" fill="rgb(210,215,20)"/><text x="56.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.18%)</title><rect x="10" y="68" width="49" height="15" fill="rgb(251,69,3)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.18%)</title><rect x="10" y="84" width="49" height="15" fill="rgb(218,179,25)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.18%)</title><rect x="10" y="100" width="49" height="15" fill="rgb(241,141,53)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 4.18%)</title><rect x="10" y="116" width="49" height="15" fill="rgb(207,169,27)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.18%)</title><rect x="10" y="132" width="49" height="15" fill="rgb(251,88,25)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py) (18 samples, 4.18%)</title><rect x="10" y="148" width="49" height="15" fill="rgb(242,159,49)"/><text x="13.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.18%)</title><rect x="10" y="164" width="49" height="15" fill="rgb(241,0,17)"/><text x="13.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.18%)</title><rect x="10" y="180" width="49" height="15" fill="rgb(210,55,12)"/><text x="13.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.39%)</title><rect x="42" y="196" width="17" height="15" fill="rgb(246,52,36)"/><text x="45.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.39%)</title><rect x="42" y="212" width="17" height="15" fill="rgb(224,5,22)"/><text x="45.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.39%)</title><rect x="42" y="228" width="17" height="15" fill="rgb(213,202,22)"/><text x="45.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 1.39%)</title><rect x="42" y="244" width="17" height="15" fill="rgb(207,168,10)"/><text x="45.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.39%)</title><rect x="42" y="260" width="17" height="15" fill="rgb(239,1,24)"/><text x="45.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.39%)</title><rect x="42" y="276" width="17" height="15" fill="rgb(208,220,53)"/><text x="45.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.39%)</title><rect x="42" y="292" width="17" height="15" fill="rgb(233,195,53)"/><text x="45.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.39%)</title><rect x="42" y="308" width="17" height="15" fill="rgb(226,6,44)"/><text x="45.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.39%)</title><rect x="42" y="324" width="17" height="15" fill="rgb(231,70,44)"/><text x="45.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.46%)</title><rect x="53" y="340" width="6" height="15" fill="rgb(254,60,21)"/><text x="56.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="356" width="6" height="15" fill="rgb(212,150,53)"/><text x="56.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="372" width="6" height="15" fill="rgb(230,121,16)"/><text x="56.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="388" width="6" height="15" fill="rgb(237,213,24)"/><text x="56.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="404" width="6" height="15" fill="rgb(243,115,4)"/><text x="56.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="420" width="6" height="15" fill="rgb(219,116,10)"/><text x="56.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="436" width="6" height="15" fill="rgb(234,46,21)"/><text x="56.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="53" y="452" width="6" height="15" fill="rgb(221,54,3)"/><text x="56.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="468" width="6" height="15" fill="rgb(210,56,23)"/><text x="56.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.46%)</title><rect x="53" y="484" width="6" height="15" fill="rgb(254,174,42)"/><text x="56.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="500" width="6" height="15" fill="rgb(242,124,5)"/><text x="56.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="516" width="6" height="15" fill="rgb(245,154,35)"/><text x="56.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="532" width="6" height="15" fill="rgb(249,224,17)"/><text x="56.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="53" y="548" width="6" height="15" fill="rgb(228,44,37)"/><text x="56.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="564" width="6" height="15" fill="rgb(236,123,25)"/><text x="56.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (2 samples, 0.46%)</title><rect x="53" y="580" width="6" height="15" fill="rgb(239,210,33)"/><text x="56.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="596" width="6" height="15" fill="rgb(225,105,34)"/><text x="56.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="612" width="6" height="15" fill="rgb(251,148,20)"/><text x="56.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="628" width="6" height="15" fill="rgb(236,30,37)"/><text x="56.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="644" width="6" height="15" fill="rgb(208,169,6)"/><text x="56.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="660" width="6" height="15" fill="rgb(218,14,27)"/><text x="56.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="676" width="6" height="15" fill="rgb(246,90,23)"/><text x="56.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="53" y="692" width="6" height="15" fill="rgb(223,208,52)"/><text x="56.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="708" width="6" height="15" fill="rgb(248,177,6)"/><text x="56.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (2 samples, 0.46%)</title><rect x="53" y="724" width="6" height="15" fill="rgb(205,150,3)"/><text x="56.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="740" width="6" height="15" fill="rgb(228,58,45)"/><text x="56.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="756" width="6" height="15" fill="rgb(239,49,29)"/><text x="56.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="772" width="6" height="15" fill="rgb(254,39,18)"/><text x="56.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="53" y="788" width="6" height="15" fill="rgb(230,160,7)"/><text x="56.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="804" width="6" height="15" fill="rgb(229,16,36)"/><text x="56.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (2 samples, 0.46%)</title><rect x="53" y="820" width="6" height="15" fill="rgb(226,216,41)"/><text x="56.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="836" width="6" height="15" fill="rgb(243,31,30)"/><text x="56.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="852" width="6" height="15" fill="rgb(221,220,15)"/><text x="56.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="868" width="6" height="15" fill="rgb(246,94,13)"/><text x="56.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="53" y="884" width="6" height="15" fill="rgb(211,172,38)"/><text x="56.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="900" width="6" height="15" fill="rgb(239,48,19)"/><text x="56.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (2 samples, 0.46%)</title><rect x="53" y="916" width="6" height="15" fill="rgb(247,91,24)"/><text x="56.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="932" width="6" height="15" fill="rgb(245,108,19)"/><text x="56.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="948" width="6" height="15" fill="rgb(227,116,23)"/><text x="56.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="964" width="6" height="15" fill="rgb(215,30,25)"/><text x="56.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="980" width="6" height="15" fill="rgb(213,46,19)"/><text x="56.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="996" width="6" height="15" fill="rgb(247,76,39)"/><text x="56.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="1012" width="6" height="15" fill="rgb(220,211,22)"/><text x="56.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="53" y="1028" width="6" height="15" fill="rgb(252,175,20)"/><text x="56.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="1044" width="6" height="15" fill="rgb(214,80,30)"/><text x="56.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (2 samples, 0.46%)</title><rect x="53" y="1060" width="6" height="15" fill="rgb(218,87,50)"/><text x="56.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="1076" width="6" height="15" fill="rgb(231,156,54)"/><text x="56.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="1092" width="6" height="15" fill="rgb(248,124,6)"/><text x="56.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="1108" width="6" height="15" fill="rgb(227,73,31)"/><text x="56.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="53" y="1124" width="6" height="15" fill="rgb(247,1,18)"/><text x="56.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="1140" width="6" height="15" fill="rgb(241,166,16)"/><text x="56.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py) (2 samples, 0.46%)</title><rect x="53" y="1156" width="6" height="15" fill="rgb(233,81,42)"/><text x="56.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="1172" width="6" height="15" fill="rgb(245,76,14)"/><text x="56.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="1188" width="6" height="15" fill="rgb(253,93,27)"/><text x="56.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="53" y="1204" width="6" height="15" fill="rgb(243,159,11)"/><text x="56.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="53" y="1220" width="6" height="15" fill="rgb(227,141,44)"/><text x="56.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="56" y="1236" width="3" height="15" fill="rgb(248,128,12)"/><text x="59.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="56" y="1252" width="3" height="15" fill="rgb(251,58,23)"/><text x="59.00" y="1262.50"></text></g><g><title>0x7f1b56ab7ff9 (?) (1 samples, 0.23%)</title><rect x="59" y="212" width="3" height="15" fill="rgb(225,138,26)"/><text x="62.00" y="222.50"></text></g><g><title>0x7f1b56ab2ef6 (?) (1 samples, 0.23%)</title><rect x="59" y="228" width="3" height="15" fill="rgb(244,81,22)"/><text x="62.00" y="238.50"></text></g><g><title>0x7f1b56aa7962 (?) (1 samples, 0.23%)</title><rect x="59" y="244" width="3" height="15" fill="rgb(253,204,34)"/><text x="62.00" y="254.50"></text></g><g><title>0x7f1b56adb7a7 (?) (1 samples, 0.23%)</title><rect x="59" y="260" width="3" height="15" fill="rgb(244,121,9)"/><text x="62.00" y="270.50"></text></g><g><title>0x7f1b56adb379 (?) (1 samples, 0.23%)</title><rect x="59" y="276" width="3" height="15" fill="rgb(208,148,26)"/><text x="62.00" y="286.50"></text></g><g><title>0x7f1b56f398b8 (?) (1 samples, 0.23%)</title><rect x="59" y="292" width="3" height="15" fill="rgb(241,19,26)"/><text x="62.00" y="302.50"></text></g><g><title>0x7f1b56f37c7f (?) (1 samples, 0.23%)</title><rect x="59" y="308" width="3" height="15" fill="rgb(219,42,52)"/><text x="62.00" y="318.50"></text></g><g><title>0x7f1b56f4a99c (?) (1 samples, 0.23%)</title><rect x="59" y="324" width="3" height="15" fill="rgb(224,93,36)"/><text x="62.00" y="334.50"></text></g><g><title>0x7f1b56bcf7c3 (?) (1 samples, 0.23%)</title><rect x="59" y="340" width="3" height="15" fill="rgb(230,1,5)"/><text x="62.00" y="350.50"></text></g><g><title>0x7f1b56eb8fac (?) (1 samples, 0.23%)</title><rect x="59" y="356" width="3" height="15" fill="rgb(233,228,30)"/><text x="62.00" y="366.50"></text></g><g><title>0x7f1b4ec300f1 (?) (1 samples, 0.23%)</title><rect x="59" y="372" width="3" height="15" fill="rgb(234,172,42)"/><text x="62.00" y="382.50"></text></g><g><title>0x7f1b4ec764cf (?) (1 samples, 0.23%)</title><rect x="59" y="388" width="3" height="15" fill="rgb(248,157,53)"/><text x="62.00" y="398.50"></text></g><g><title>0x7f1b4ed08f69 (?) (1 samples, 0.23%)</title><rect x="59" y="404" width="3" height="15" fill="rgb(252,195,16)"/><text x="62.00" y="414.50"></text></g><g><title>0x7f1b4ee1278d (?) (1 samples, 0.23%)</title><rect x="59" y="420" width="3" height="15" fill="rgb(220,5,28)"/><text x="62.00" y="430.50"></text></g><g><title>0x7f1b4ee34f1f (?) (1 samples, 0.23%)</title><rect x="59" y="436" width="3" height="15" fill="rgb(234,173,24)"/><text x="62.00" y="446.50"></text></g><g><title>0x7f1b4e6df18e (?) (1 samples, 0.23%)</title><rect x="59" y="452" width="3" height="15" fill="rgb(235,157,54)"/><text x="62.00" y="462.50"></text></g><g><title>0x7f1b4e724129 (?) (1 samples, 0.23%)</title><rect x="59" y="468" width="3" height="15" fill="rgb(249,39,24)"/><text x="62.00" y="478.50"></text></g><g><title>0x7f1b4e724b49 (?) (1 samples, 0.23%)</title><rect x="59" y="484" width="3" height="15" fill="rgb(218,222,27)"/><text x="62.00" y="494.50"></text></g><g><title>0x7f1b4e6dbbf8 (?) (1 samples, 0.23%)</title><rect x="59" y="500" width="3" height="15" fill="rgb(238,105,43)"/><text x="62.00" y="510.50"></text></g><g><title>0x7f1b4e6d7fb7 (?) (1 samples, 0.23%)</title><rect x="59" y="516" width="3" height="15" fill="rgb(248,168,28)"/><text x="62.00" y="526.50"></text></g><g><title>mkl_blas_avx_sgemm_kernel_0 (onnxruntime/capi/libmklml_intel.so) (17 samples, 3.94%)</title><rect x="62" y="212" width="46" height="15" fill="rgb(205,164,39)"/><text x="65.00" y="222.50">mkl_..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="108" y="356" width="3" height="15" fill="rgb(219,19,8)"/><text x="111.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="108" y="372" width="3" height="15" fill="rgb(225,210,46)"/><text x="111.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="108" y="388" width="3" height="15" fill="rgb(215,28,45)"/><text x="111.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="108" y="404" width="3" height="15" fill="rgb(223,110,11)"/><text x="111.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="108" y="420" width="3" height="15" fill="rgb(211,131,26)"/><text x="111.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="108" y="436" width="3" height="15" fill="rgb(214,9,31)"/><text x="111.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="108" y="452" width="3" height="15" fill="rgb(247,124,47)"/><text x="111.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="108" y="468" width="3" height="15" fill="rgb(233,163,27)"/><text x="111.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="108" y="484" width="3" height="15" fill="rgb(245,145,51)"/><text x="111.00" y="494.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="108" y="500" width="3" height="15" fill="rgb(243,218,8)"/><text x="111.00" y="510.50"></text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.70%)</title><rect x="111" y="420" width="8" height="15" fill="rgb(238,24,32)"/><text x="114.00" y="430.50"></text></g><g><title>mkl_blas_xsgemm (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.70%)</title><rect x="111" y="436" width="8" height="15" fill="rgb(244,89,52)"/><text x="114.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemm (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.70%)</title><rect x="111" y="452" width="8" height="15" fill="rgb(232,48,20)"/><text x="114.00" y="462.50"></text></g><g><title>mkl_blas_avx_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.70%)</title><rect x="111" y="468" width="8" height="15" fill="rgb(239,169,8)"/><text x="114.00" y="478.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0 (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.70%)</title><rect x="111" y="484" width="8" height="15" fill="rgb(234,116,35)"/><text x="114.00" y="494.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0_pst (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.70%)</title><rect x="111" y="500" width="8" height="15" fill="rgb(235,40,47)"/><text x="114.00" y="510.50"></text></g><g><title>__kmp_fork_call (libiomp5.so) (2 samples, 0.46%)</title><rect x="119" y="468" width="5" height="15" fill="rgb(241,47,13)"/><text x="122.00" y="478.50"></text></g><g><title>__kmp_invoke_task_func (libiomp5.so) (2 samples, 0.46%)</title><rect x="119" y="484" width="5" height="15" fill="rgb(208,0,7)"/><text x="122.00" y="494.50"></text></g><g><title>__kmp_invoke_microtask (libiomp5.so) (2 samples, 0.46%)</title><rect x="119" y="500" width="5" height="15" fill="rgb(253,29,35)"/><text x="122.00" y="510.50"></text></g><g><title>mkl_blas_sgemv_omp (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.23%)</title><rect x="122" y="516" width="2" height="15" fill="rgb(239,16,40)"/><text x="125.00" y="526.50"></text></g><g><title>mkl_blas_xsgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.23%)</title><rect x="122" y="532" width="2" height="15" fill="rgb(242,10,41)"/><text x="125.00" y="542.50"></text></g><g><title>mkl_blas_avx_xsgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.23%)</title><rect x="122" y="548" width="2" height="15" fill="rgb(239,165,2)"/><text x="125.00" y="558.50"></text></g><g><title>mkl_blas_sgemv_omp (onnxruntime/capi/libmklml_intel.so) (29 samples, 6.73%)</title><rect x="119" y="436" width="79" height="15" fill="rgb(225,191,1)"/><text x="122.00" y="446.50">mkl_blas_..</text></g><g><title>__kmpc_fork_call (libiomp5.so) (29 samples, 6.73%)</title><rect x="119" y="452" width="79" height="15" fill="rgb(207,143,28)"/><text x="122.00" y="462.50">__kmpc_fo..</text></g><g><title>__kmp_join_call (libiomp5.so) (27 samples, 6.26%)</title><rect x="124" y="468" width="74" height="15" fill="rgb(254,162,46)"/><text x="127.00" y="478.50">__kmp_jo..</text></g><g><title>__kmp_internal_join (libiomp5.so) (27 samples, 6.26%)</title><rect x="124" y="484" width="74" height="15" fill="rgb(228,136,18)"/><text x="127.00" y="494.50">__kmp_in..</text></g><g><title>__kmp_join_barrier (libiomp5.so) (27 samples, 6.26%)</title><rect x="124" y="500" width="74" height="15" fill="rgb(248,182,8)"/><text x="127.00" y="510.50">__kmp_jo..</text></g><g><title>_INTERNAL_25_______src_kmp_barrier_cpp_50ae66a0::__kmp_hyper_barrier_gather (libiomp5.so) (27 samples, 6.26%)</title><rect x="124" y="516" width="74" height="15" fill="rgb(249,7,46)"/><text x="127.00" y="526.50">_INTERNA..</text></g><g><title>sched_yield (libc-2.29.so) (1 samples, 0.23%)</title><rect x="196" y="532" width="2" height="15" fill="rgb(215,218,46)"/><text x="199.00" y="542.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 7.89%)</title><rect x="108" y="340" width="93" height="15" fill="rgb(251,147,5)"/><text x="111.00" y="350.50">onnxruntime..</text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 7.66%)</title><rect x="111" y="356" width="90" height="15" fill="rgb(211,177,17)"/><text x="114.00" y="366.50">onnxruntim..</text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (33 samples, 7.66%)</title><rect x="111" y="372" width="90" height="15" fill="rgb(217,24,7)"/><text x="114.00" y="382.50">cblas_sgem..</text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (33 samples, 7.66%)</title><rect x="111" y="388" width="90" height="15" fill="rgb(242,167,21)"/><text x="114.00" y="398.50">sgemm_ (on..</text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (33 samples, 7.66%)</title><rect x="111" y="404" width="90" height="15" fill="rgb(211,110,19)"/><text x="114.00" y="414.50">mkl_blas_s..</text></g><g><title>mkl_blas_sgemv (onnxruntime/capi/libmklml_intel.so) (30 samples, 6.96%)</title><rect x="119" y="420" width="82" height="15" fill="rgb(214,130,47)"/><text x="122.00" y="430.50">mkl_blas_..</text></g><g><title>mkl_serv_domain_get_max_threads (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.23%)</title><rect x="198" y="436" width="3" height="15" fill="rgb(237,182,29)"/><text x="201.00" y="446.50"></text></g><g><title>omp_in_parallel@@VERSION (libiomp5.so) (1 samples, 0.23%)</title><rect x="198" y="452" width="3" height="15" fill="rgb(220,73,26)"/><text x="201.00" y="462.50"></text></g><g><title>__kmp_get_global_thread_id_reg (libiomp5.so) (1 samples, 0.23%)</title><rect x="198" y="468" width="3" height="15" fill="rgb(235,40,42)"/><text x="201.00" y="478.50"></text></g><g><title>profile_ort (bench_MLPRegressor_default_m_reg_1000_4_12_float_.py) (65 samples, 15.08%)</title><rect x="59" y="68" width="178" height="15" fill="rgb(236,96,28)"/><text x="62.00" y="78.50">profile_ort (bench_MLPR..</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1000_4_12_float_.py) (65 samples, 15.08%)</title><rect x="59" y="84" width="178" height="15" fill="rgb(216,81,52)"/><text x="62.00" y="94.50">setup_profile (bench_ML..</text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1000_4_12_float_.py) (65 samples, 15.08%)</title><rect x="59" y="100" width="178" height="15" fill="rgb(218,173,39)"/><text x="62.00" y="110.50">profile (bench_MLPRegre..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (65 samples, 15.08%)</title><rect x="59" y="116" width="178" height="15" fill="rgb(226,85,41)"/><text x="62.00" y="126.50">time_predict (mlprodict..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (65 samples, 15.08%)</title><rect x="59" y="132" width="178" height="15" fill="rgb(240,20,3)"/><text x="62.00" y="142.50">&lt;lambda&gt; (mlprodict/asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (65 samples, 15.08%)</title><rect x="59" y="148" width="178" height="15" fill="rgb(220,172,36)"/><text x="62.00" y="158.50">run (mlprodict/onnxrt/o..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (65 samples, 15.08%)</title><rect x="59" y="164" width="178" height="15" fill="rgb(250,64,15)"/><text x="62.00" y="174.50">_run_whole_runtime (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (65 samples, 15.08%)</title><rect x="59" y="180" width="178" height="15" fill="rgb(249,163,22)"/><text x="62.00" y="190.50">run (mlprodict/onnxrt/o..</text></g><g><title>run (onnxruntime/capi/session.py) (65 samples, 15.08%)</title><rect x="59" y="196" width="178" height="15" fill="rgb(226,65,51)"/><text x="62.00" y="206.50">run (onnxruntime/capi/s..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (47 samples, 10.90%)</title><rect x="108" y="212" width="129" height="15" fill="rgb(250,164,53)"/><text x="111.00" y="222.50">pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (47 samples, 10.90%)</title><rect x="108" y="228" width="129" height="15" fill="rgb(217,103,3)"/><text x="111.00" y="238.50">void pybind11::c..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (47 samples, 10.90%)</title><rect x="108" y="244" width="129" height="15" fill="rgb(238,190,52)"/><text x="111.00" y="254.50">onnxruntime::pyt..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (47 samples, 10.90%)</title><rect x="108" y="260" width="129" height="15" fill="rgb(206,112,48)"/><text x="111.00" y="270.50">onnxruntime::Inf..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (47 samples, 10.90%)</title><rect x="108" y="276" width="129" height="15" fill="rgb(226,77,25)"/><text x="111.00" y="286.50">onnxruntime::Inf..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (47 samples, 10.90%)</title><rect x="108" y="292" width="129" height="15" fill="rgb(239,140,31)"/><text x="111.00" y="302.50">onnxruntime::uti..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (47 samples, 10.90%)</title><rect x="108" y="308" width="129" height="15" fill="rgb(230,188,31)"/><text x="111.00" y="318.50">onnxruntime::uti..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (47 samples, 10.90%)</title><rect x="108" y="324" width="129" height="15" fill="rgb(226,79,51)"/><text x="111.00" y="334.50">onnxruntime::Seq..</text></g><g><title>onnxruntime::Relu&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 3.02%)</title><rect x="201" y="340" width="36" height="15" fill="rgb(228,53,31)"/><text x="204.00" y="350.50">onn..</text></g><g><title>FLOAT_add (loops.c.src) (2 samples, 0.46%)</title><rect x="259" y="308" width="5" height="15" fill="rgb(235,18,23)"/><text x="262.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.23%)</title><rect x="261" y="324" width="3" height="15" fill="rgb(215,4,5)"/><text x="264.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.23%)</title><rect x="261" y="340" width="3" height="15" fill="rgb(241,26,52)"/><text x="264.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.23%)</title><rect x="261" y="356" width="3" height="15" fill="rgb(224,123,16)"/><text x="264.00" y="366.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.23%)</title><rect x="264" y="324" width="3" height="15" fill="rgb(236,161,12)"/><text x="267.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.23%)</title><rect x="264" y="340" width="3" height="15" fill="rgb(224,4,24)"/><text x="267.00" y="350.50"></text></g><g><title>0x7f1b98a54d50 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="264" y="356" width="3" height="15" fill="rgb(241,54,40)"/><text x="267.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (4 samples, 0.93%)</title><rect x="259" y="228" width="11" height="15" fill="rgb(215,1,7)"/><text x="262.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.93%)</title><rect x="259" y="244" width="11" height="15" fill="rgb(251,50,10)"/><text x="262.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.93%)</title><rect x="259" y="260" width="11" height="15" fill="rgb(249,41,37)"/><text x="262.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.93%)</title><rect x="259" y="276" width="11" height="15" fill="rgb(228,197,40)"/><text x="262.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 0.93%)</title><rect x="259" y="292" width="11" height="15" fill="rgb(220,154,37)"/><text x="262.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (2 samples, 0.46%)</title><rect x="264" y="308" width="6" height="15" fill="rgb(241,115,11)"/><text x="267.00" y="318.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.23%)</title><rect x="267" y="324" width="3" height="15" fill="rgb(243,141,16)"/><text x="270.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.23%)</title><rect x="272" y="324" width="3" height="15" fill="rgb(254,160,41)"/><text x="275.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.23%)</title><rect x="272" y="340" width="3" height="15" fill="rgb(207,126,18)"/><text x="275.00" y="350.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.23%)</title><rect x="272" y="356" width="3" height="15" fill="rgb(254,76,26)"/><text x="275.00" y="366.50"></text></g><g><title>0x7f1b98a55103 (libc-2.29.so) (5 samples, 1.16%)</title><rect x="278" y="340" width="13" height="15" fill="rgb(235,221,7)"/><text x="281.00" y="350.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 4.41%)</title><rect x="297" y="420" width="52" height="15" fill="rgb(254,64,18)"/><text x="300.00" y="430.50">exec_..</text></g><g><title>sched_yield (libc-2.29.so) (19 samples, 4.41%)</title><rect x="297" y="436" width="52" height="15" fill="rgb(234,70,32)"/><text x="300.00" y="446.50">sched..</text></g><g><title>gemm (cblasfuncs.c) (22 samples, 5.10%)</title><rect x="291" y="340" width="61" height="15" fill="rgb(240,215,49)"/><text x="294.00" y="350.50">gemm (..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (22 samples, 5.10%)</title><rect x="291" y="356" width="61" height="15" fill="rgb(231,34,30)"/><text x="294.00" y="366.50">cblas_..</text></g><g><title>sgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (22 samples, 5.10%)</title><rect x="291" y="372" width="61" height="15" fill="rgb(246,113,52)"/><text x="294.00" y="382.50">sgemm_..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (22 samples, 5.10%)</title><rect x="291" y="388" width="61" height="15" fill="rgb(254,65,50)"/><text x="294.00" y="398.50">gemm_d..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 4.64%)</title><rect x="297" y="404" width="55" height="15" fill="rgb(250,83,29)"/><text x="300.00" y="414.50">exec_..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="349" y="420" width="3" height="15" fill="rgb(223,63,4)"/><text x="352.00" y="430.50"></text></g><g><title>sched_yield (libc-2.29.so) (1 samples, 0.23%)</title><rect x="349" y="436" width="3" height="15" fill="rgb(226,45,40)"/><text x="352.00" y="446.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="352" y="420" width="2" height="15" fill="rgb(208,0,37)"/><text x="355.00" y="430.50"></text></g><g><title>__lll_lock_wait (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="352" y="436" width="2" height="15" fill="rgb(216,170,13)"/><text x="355.00" y="446.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.46%)</title><rect x="352" y="404" width="5" height="15" fill="rgb(205,172,22)"/><text x="355.00" y="414.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="354" y="420" width="3" height="15" fill="rgb(226,80,31)"/><text x="357.00" y="430.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 4.41%)</title><rect x="357" y="404" width="52" height="15" fill="rgb(210,91,1)"/><text x="360.00" y="414.50">exec_..</text></g><g><title>sched_yield (libc-2.29.so) (19 samples, 4.41%)</title><rect x="357" y="420" width="52" height="15" fill="rgb(236,189,33)"/><text x="360.00" y="430.50">sched..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (53 samples, 12.30%)</title><rect x="270" y="276" width="145" height="15" fill="rgb(246,37,28)"/><text x="273.00" y="286.50">array_implement_ar..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (52 samples, 12.06%)</title><rect x="272" y="292" width="143" height="15" fill="rgb(226,137,13)"/><text x="275.00" y="302.50">array_matrixproduc..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (52 samples, 12.06%)</title><rect x="272" y="308" width="143" height="15" fill="rgb(225,219,51)"/><text x="275.00" y="318.50">PyArray_MatrixProd..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (51 samples, 11.83%)</title><rect x="275" y="324" width="140" height="15" fill="rgb(250,145,38)"/><text x="278.00" y="334.50">cblas_matrixprodu..</text></g><g><title>gemv (cblasfuncs.c) (23 samples, 5.34%)</title><rect x="352" y="340" width="63" height="15" fill="rgb(240,104,47)"/><text x="355.00" y="350.50">gemv (..</text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (23 samples, 5.34%)</title><rect x="352" y="356" width="63" height="15" fill="rgb(230,211,7)"/><text x="355.00" y="366.50">cblas_..</text></g><g><title>sgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (23 samples, 5.34%)</title><rect x="352" y="372" width="63" height="15" fill="rgb(246,23,47)"/><text x="355.00" y="382.50">sgemv_..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (23 samples, 5.34%)</title><rect x="352" y="388" width="63" height="15" fill="rgb(223,15,28)"/><text x="355.00" y="398.50">exec_b..</text></g><g><title>gemv_kernel (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.46%)</title><rect x="409" y="404" width="6" height="15" fill="rgb(234,18,52)"/><text x="412.00" y="414.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.46%)</title><rect x="409" y="420" width="6" height="15" fill="rgb(230,29,54)"/><text x="412.00" y="430.50"></text></g><g><title>sgemv_kernel_4x4 (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.46%)</title><rect x="409" y="436" width="6" height="15" fill="rgb(245,107,52)"/><text x="412.00" y="446.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (9 samples, 2.09%)</title><rect x="415" y="276" width="24" height="15" fill="rgb(254,169,45)"/><text x="418.00" y="286.50">s..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (68 samples, 15.78%)</title><rect x="270" y="228" width="186" height="15" fill="rgb(246,188,11)"/><text x="273.00" y="238.50">_run (mlprodict/onnxrt/o..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (68 samples, 15.78%)</title><rect x="270" y="244" width="186" height="15" fill="rgb(253,197,36)"/><text x="273.00" y="254.50">numpy_dot_inplace (mlpro..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (68 samples, 15.78%)</title><rect x="270" y="260" width="186" height="15" fill="rgb(212,0,16)"/><text x="273.00" y="270.50">dot (&lt;__array_function__..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.39%)</title><rect x="439" y="276" width="17" height="15" fill="rgb(227,81,25)"/><text x="442.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (62 samples, 14.39%)</title><rect x="461" y="276" width="170" height="15" fill="rgb(246,144,28)"/><text x="464.00" y="286.50">execute_legacy_ufunc_l..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (62 samples, 14.39%)</title><rect x="461" y="292" width="170" height="15" fill="rgb(232,111,51)"/><text x="464.00" y="302.50">trivial_three_operand_..</text></g><g><title>FLOAT_maximum (loops.c.src) (62 samples, 14.39%)</title><rect x="461" y="308" width="170" height="15" fill="rgb(207,98,48)"/><text x="464.00" y="318.50">FLOAT_maximum (loops.c..</text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1000_4_12_float_.py) (145 samples, 33.64%)</title><rect x="237" y="100" width="397" height="15" fill="rgb(206,58,23)"/><text x="240.00" y="110.50">profile (bench_MLPRegressor_default_m_reg_1000_4_12_fl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (145 samples, 33.64%)</title><rect x="237" y="116" width="397" height="15" fill="rgb(205,117,33)"/><text x="240.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (145 samples, 33.64%)</title><rect x="237" y="132" width="397" height="15" fill="rgb(228,147,39)"/><text x="240.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (145 samples, 33.64%)</title><rect x="237" y="148" width="397" height="15" fill="rgb(236,52,41)"/><text x="240.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (145 samples, 33.64%)</title><rect x="237" y="164" width="397" height="15" fill="rgb(254,81,22)"/><text x="240.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (144 samples, 33.41%)</title><rect x="239" y="180" width="395" height="15" fill="rgb(219,19,28)"/><text x="242.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (138 samples, 32.02%)</title><rect x="256" y="196" width="378" height="15" fill="rgb(210,155,22)"/><text x="259.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (137 samples, 31.79%)</title><rect x="259" y="212" width="375" height="15" fill="rgb(212,203,16)"/><text x="262.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py) (65 samples, 15.08%)</title><rect x="456" y="228" width="178" height="15" fill="rgb(231,214,2)"/><text x="459.00" y="238.50">_run (mlprodict/onnxrt/..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (64 samples, 14.85%)</title><rect x="459" y="244" width="175" height="15" fill="rgb(241,163,35)"/><text x="462.00" y="254.50">ufunc_generic_call (uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (64 samples, 14.85%)</title><rect x="459" y="260" width="175" height="15" fill="rgb(214,216,24)"/><text x="462.00" y="270.50">PyUFunc_GenericFunctio..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.23%)</title><rect x="631" y="276" width="3" height="15" fill="rgb(206,31,22)"/><text x="634.00" y="286.50"></text></g><g><title>profile_pyrt (bench_MLPRegressor_default_m_reg_1000_4_12_float_.py) (146 samples, 33.87%)</title><rect x="237" y="68" width="399" height="15" fill="rgb(212,174,46)"/><text x="240.00" y="78.50">profile_pyrt (bench_MLPRegressor_default_m_reg_1000_4_..</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1000_4_12_float_.py) (146 samples, 33.87%)</title><rect x="237" y="84" width="399" height="15" fill="rgb(214,92,11)"/><text x="240.00" y="94.50">setup_profile (bench_MLPRegressor_default_m_reg_1000_4..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.23%)</title><rect x="634" y="100" width="2" height="15" fill="rgb(226,109,32)"/><text x="637.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.23%)</title><rect x="634" y="116" width="2" height="15" fill="rgb(252,206,41)"/><text x="637.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.23%)</title><rect x="634" y="132" width="2" height="15" fill="rgb(228,126,43)"/><text x="637.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.23%)</title><rect x="634" y="148" width="2" height="15" fill="rgb(220,37,30)"/><text x="637.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.23%)</title><rect x="634" y="164" width="2" height="15" fill="rgb(218,131,21)"/><text x="637.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.23%)</title><rect x="634" y="180" width="2" height="15" fill="rgb(237,13,41)"/><text x="637.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.23%)</title><rect x="634" y="196" width="2" height="15" fill="rgb(253,192,50)"/><text x="637.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="634" y="212" width="2" height="15" fill="rgb(214,127,43)"/><text x="637.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="634" y="228" width="2" height="15" fill="rgb(224,74,25)"/><text x="637.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="634" y="244" width="2" height="15" fill="rgb(222,113,37)"/><text x="637.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="634" y="260" width="2" height="15" fill="rgb(216,97,50)"/><text x="637.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="634" y="276" width="2" height="15" fill="rgb(243,108,51)"/><text x="637.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.23%)</title><rect x="634" y="292" width="2" height="15" fill="rgb(243,179,51)"/><text x="637.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="634" y="308" width="2" height="15" fill="rgb(238,118,15)"/><text x="637.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="634" y="324" width="2" height="15" fill="rgb(253,226,49)"/><text x="637.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="634" y="340" width="2" height="15" fill="rgb(233,143,11)"/><text x="637.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="634" y="356" width="2" height="15" fill="rgb(253,66,45)"/><text x="637.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="634" y="372" width="2" height="15" fill="rgb(245,143,47)"/><text x="637.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.23%)</title><rect x="634" y="388" width="2" height="15" fill="rgb(206,111,53)"/><text x="637.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="634" y="404" width="2" height="15" fill="rgb(241,158,34)"/><text x="637.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="634" y="420" width="2" height="15" fill="rgb(220,227,32)"/><text x="637.00" y="430.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="634" y="436" width="2" height="15" fill="rgb(222,163,20)"/><text x="637.00" y="446.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="634" y="452" width="2" height="15" fill="rgb(226,177,8)"/><text x="637.00" y="462.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="634" y="468" width="2" height="15" fill="rgb(247,222,25)"/><text x="637.00" y="478.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="634" y="484" width="2" height="15" fill="rgb(231,130,4)"/><text x="637.00" y="494.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="634" y="500" width="2" height="15" fill="rgb(209,226,17)"/><text x="637.00" y="510.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="634" y="516" width="2" height="15" fill="rgb(215,54,5)"/><text x="637.00" y="526.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="634" y="532" width="2" height="15" fill="rgb(206,113,13)"/><text x="637.00" y="542.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.23%)</title><rect x="634" y="548" width="2" height="15" fill="rgb(244,207,27)"/><text x="637.00" y="558.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="634" y="564" width="2" height="15" fill="rgb(209,122,12)"/><text x="637.00" y="574.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (1 samples, 0.23%)</title><rect x="658" y="212" width="3" height="15" fill="rgb(248,156,48)"/><text x="661.00" y="222.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.23%)</title><rect x="664" y="372" width="3" height="15" fill="rgb(210,114,22)"/><text x="667.00" y="382.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.23%)</title><rect x="664" y="388" width="3" height="15" fill="rgb(212,105,24)"/><text x="667.00" y="398.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.23%)</title><rect x="664" y="404" width="3" height="15" fill="rgb(251,175,8)"/><text x="667.00" y="414.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.23%)</title><rect x="664" y="420" width="3" height="15" fill="rgb(209,62,36)"/><text x="667.00" y="430.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.23%)</title><rect x="664" y="436" width="3" height="15" fill="rgb(205,184,25)"/><text x="667.00" y="446.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.23%)</title><rect x="664" y="452" width="3" height="15" fill="rgb(239,205,47)"/><text x="667.00" y="462.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.23%)</title><rect x="664" y="468" width="3" height="15" fill="rgb(231,103,41)"/><text x="667.00" y="478.50"></text></g><g><title>DOUBLE_clip (clip.c.src) (50 samples, 11.60%)</title><rect x="667" y="404" width="136" height="15" fill="rgb(230,166,22)"/><text x="670.00" y="414.50">DOUBLE_clip (clip..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (51 samples, 11.83%)</title><rect x="667" y="372" width="139" height="15" fill="rgb(223,55,38)"/><text x="670.00" y="382.50">execute_legacy_uf..</text></g><g><title>iterator_loop (ufunc_object.c) (51 samples, 11.83%)</title><rect x="667" y="388" width="139" height="15" fill="rgb(214,115,13)"/><text x="670.00" y="398.50">iterator_loop (uf..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.23%)</title><rect x="803" y="404" width="3" height="15" fill="rgb(253,154,50)"/><text x="806.00" y="414.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.23%)</title><rect x="803" y="420" width="3" height="15" fill="rgb(205,177,18)"/><text x="806.00" y="430.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (53 samples, 12.30%)</title><rect x="664" y="324" width="145" height="15" fill="rgb(222,14,11)"/><text x="667.00" y="334.50">_clip_dep_invoke_w..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (53 samples, 12.30%)</title><rect x="664" y="340" width="145" height="15" fill="rgb(236,130,20)"/><text x="667.00" y="350.50">ufunc_generic_call..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (53 samples, 12.30%)</title><rect x="664" y="356" width="145" height="15" fill="rgb(250,137,52)"/><text x="667.00" y="366.50">PyUFunc_GenericFun..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.23%)</title><rect x="806" y="372" width="3" height="15" fill="rgb(252,76,39)"/><text x="809.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.23%)</title><rect x="806" y="388" width="3" height="15" fill="rgb(252,27,3)"/><text x="809.00" y="398.50"></text></g><g><title>relu (sklearn/neural_network/_base.py) (68 samples, 15.78%)</title><rect x="647" y="196" width="187" height="15" fill="rgb(230,72,32)"/><text x="650.00" y="206.50">relu (sklearn/neural_net..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (63 samples, 14.62%)</title><rect x="661" y="212" width="173" height="15" fill="rgb(236,127,21)"/><text x="664.00" y="222.50">clip (&lt;__array_functio..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (63 samples, 14.62%)</title><rect x="661" y="228" width="173" height="15" fill="rgb(213,3,6)"/><text x="664.00" y="238.50">array_implement_array_..</text></g><g><title>clip (numpy/core/fromnumeric.py) (63 samples, 14.62%)</title><rect x="661" y="244" width="173" height="15" fill="rgb(244,197,39)"/><text x="664.00" y="254.50">clip (numpy/core/fromn..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (63 samples, 14.62%)</title><rect x="661" y="260" width="173" height="15" fill="rgb(241,148,27)"/><text x="664.00" y="270.50">_wrapfunc (numpy/core/..</text></g><g><title>array_clip (methods.c) (63 samples, 14.62%)</title><rect x="661" y="276" width="173" height="15" fill="rgb(238,96,36)"/><text x="664.00" y="286.50">array_clip (methods.c)</text></g><g><title>forward_ndarray_method (methods.c) (63 samples, 14.62%)</title><rect x="661" y="292" width="173" height="15" fill="rgb(221,47,42)"/><text x="664.00" y="302.50">forward_ndarray_method..</text></g><g><title>_clip (numpy/core/_methods.py) (63 samples, 14.62%)</title><rect x="661" y="308" width="173" height="15" fill="rgb(238,212,54)"/><text x="664.00" y="318.50">_clip (numpy/core/_met..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (9 samples, 2.09%)</title><rect x="809" y="324" width="25" height="15" fill="rgb(210,133,12)"/><text x="812.00" y="334.50">_..</text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (7 samples, 1.62%)</title><rect x="814" y="340" width="20" height="15" fill="rgb(235,126,7)"/><text x="817.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 1.39%)</title><rect x="817" y="356" width="17" height="15" fill="rgb(228,164,0)"/><text x="820.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (4 samples, 0.93%)</title><rect x="823" y="372" width="11" height="15" fill="rgb(217,178,51)"/><text x="826.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.23%)</title><rect x="831" y="388" width="3" height="15" fill="rgb(229,118,44)"/><text x="834.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.23%)</title><rect x="831" y="404" width="3" height="15" fill="rgb(228,120,44)"/><text x="834.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.23%)</title><rect x="831" y="420" width="3" height="15" fill="rgb(240,18,34)"/><text x="834.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.23%)</title><rect x="831" y="436" width="3" height="15" fill="rgb(227,146,16)"/><text x="834.00" y="446.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.23%)</title><rect x="831" y="452" width="3" height="15" fill="rgb(227,174,43)"/><text x="834.00" y="462.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.23%)</title><rect x="831" y="468" width="3" height="15" fill="rgb(235,56,9)"/><text x="834.00" y="478.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (1 samples, 0.23%)</title><rect x="831" y="484" width="3" height="15" fill="rgb(223,69,19)"/><text x="834.00" y="494.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (10 samples, 2.32%)</title><rect x="834" y="212" width="27" height="15" fill="rgb(209,120,28)"/><text x="837.00" y="222.50">d..</text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (17 samples, 3.94%)</title><rect x="861" y="212" width="47" height="15" fill="rgb(237,8,36)"/><text x="864.00" y="222.50">dgem..</text></g><g><title>dgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.70%)</title><rect x="908" y="212" width="8" height="15" fill="rgb(246,108,47)"/><text x="911.00" y="222.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.46%)</title><rect x="921" y="340" width="6" height="15" fill="rgb(219,7,29)"/><text x="924.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (2 samples, 0.46%)</title><rect x="921" y="356" width="6" height="15" fill="rgb(238,129,1)"/><text x="924.00" y="366.50"></text></g><g><title>__lll_lock_wait (libpthread-2.29.so) (2 samples, 0.46%)</title><rect x="921" y="372" width="6" height="15" fill="rgb(244,160,37)"/><text x="924.00" y="382.50"></text></g><g><title>dgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (26 samples, 6.03%)</title><rect x="921" y="308" width="71" height="15" fill="rgb(236,228,50)"/><text x="924.00" y="318.50">dgemv_th..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (26 samples, 6.03%)</title><rect x="921" y="324" width="71" height="15" fill="rgb(213,196,23)"/><text x="924.00" y="334.50">exec_bla..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (24 samples, 5.57%)</title><rect x="927" y="340" width="65" height="15" fill="rgb(205,154,7)"/><text x="930.00" y="350.50">exec_bl..</text></g><g><title>sched_yield (libc-2.29.so) (24 samples, 5.57%)</title><rect x="927" y="356" width="65" height="15" fill="rgb(227,155,22)"/><text x="930.00" y="366.50">sched_y..</text></g><g><title>DOUBLE_gemv (matmul.c.src) (27 samples, 6.26%)</title><rect x="921" y="276" width="74" height="15" fill="rgb(207,88,22)"/><text x="924.00" y="286.50">DOUBLE_g..</text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (27 samples, 6.26%)</title><rect x="921" y="292" width="74" height="15" fill="rgb(229,27,51)"/><text x="924.00" y="302.50">cblas_dg..</text></g><g><title>dscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="992" y="308" width="3" height="15" fill="rgb(223,38,3)"/><text x="995.00" y="318.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.46%)</title><rect x="995" y="340" width="6" height="15" fill="rgb(238,54,44)"/><text x="998.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (2 samples, 0.46%)</title><rect x="995" y="356" width="6" height="15" fill="rgb(246,32,15)"/><text x="998.00" y="366.50"></text></g><g><title>__lll_lock_wait (libpthread-2.29.so) (2 samples, 0.46%)</title><rect x="995" y="372" width="6" height="15" fill="rgb(245,154,26)"/><text x="998.00" y="382.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (40 samples, 9.28%)</title><rect x="1001" y="340" width="109" height="15" fill="rgb(211,126,17)"/><text x="1004.00" y="350.50">exec_blas_asy..</text></g><g><title>sched_yield (libc-2.29.so) (40 samples, 9.28%)</title><rect x="1001" y="356" width="109" height="15" fill="rgb(250,197,17)"/><text x="1004.00" y="366.50">sched_yield (..</text></g><g><title>DOUBLE_matmul (matmul.c.src) (71 samples, 16.47%)</title><rect x="918" y="260" width="195" height="15" fill="rgb(249,214,11)"/><text x="921.00" y="270.50">DOUBLE_matmul (matmul.c.s..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (43 samples, 9.98%)</title><rect x="995" y="276" width="118" height="15" fill="rgb(240,125,38)"/><text x="998.00" y="286.50">cblas_dgemm (l..</text></g><g><title>dgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (43 samples, 9.98%)</title><rect x="995" y="292" width="118" height="15" fill="rgb(222,224,48)"/><text x="998.00" y="302.50">dgemm_thread_n..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (43 samples, 9.98%)</title><rect x="995" y="308" width="118" height="15" fill="rgb(215,32,28)"/><text x="998.00" y="318.50">gemm_driver (l..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (43 samples, 9.98%)</title><rect x="995" y="324" width="118" height="15" fill="rgb(226,104,39)"/><text x="998.00" y="334.50">exec_blas (lib..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="1110" y="340" width="3" height="15" fill="rgb(208,15,38)"/><text x="1113.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.23%)</title><rect x="1113" y="260" width="3" height="15" fill="rgb(222,24,6)"/><text x="1116.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.23%)</title><rect x="1113" y="276" width="3" height="15" fill="rgb(249,92,36)"/><text x="1116.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.23%)</title><rect x="1113" y="292" width="3" height="15" fill="rgb(254,31,37)"/><text x="1116.00" y="302.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (104 samples, 24.13%)</title><rect x="834" y="196" width="284" height="15" fill="rgb(223,128,32)"/><text x="837.00" y="206.50">safe_sparse_dot (sklearn/utils/extmath..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (74 samples, 17.17%)</title><rect x="916" y="212" width="202" height="15" fill="rgb(248,40,34)"/><text x="919.00" y="222.50">ufunc_generic_call (ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (74 samples, 17.17%)</title><rect x="916" y="228" width="202" height="15" fill="rgb(252,37,19)"/><text x="919.00" y="238.50">PyUFunc_GenericFunction (u..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (74 samples, 17.17%)</title><rect x="916" y="244" width="202" height="15" fill="rgb(205,62,18)"/><text x="919.00" y="254.50">PyUFunc_GeneralizedFunctio..</text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="1116" y="260" width="2" height="15" fill="rgb(244,178,33)"/><text x="1119.00" y="270.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (6 samples, 1.39%)</title><rect x="1118" y="308" width="17" height="15" fill="rgb(243,15,48)"/><text x="1121.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src) (13 samples, 3.02%)</title><rect x="1118" y="260" width="36" height="15" fill="rgb(230,83,8)"/><text x="1121.00" y="270.50">DOU..</text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (13 samples, 3.02%)</title><rect x="1118" y="276" width="36" height="15" fill="rgb(231,95,26)"/><text x="1121.00" y="286.50">run..</text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (13 samples, 3.02%)</title><rect x="1118" y="292" width="36" height="15" fill="rgb(234,134,22)"/><text x="1121.00" y="302.50">sse..</text></g><g><title>_mm_store_pd (emmintrin.h) (7 samples, 1.62%)</title><rect x="1135" y="308" width="19" height="15" fill="rgb(221,60,43)"/><text x="1138.00" y="318.50"></text></g><g><title>0x7f1b98a54f3a (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1157" y="308" width="2" height="15" fill="rgb(250,226,29)"/><text x="1160.00" y="318.50"></text></g><g><title>0x7f1b98a54f4e (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1159" y="308" width="3" height="15" fill="rgb(228,29,52)"/><text x="1162.00" y="318.50"></text></g><g><title>0x7f1b98a54f53 (libc-2.29.so) (3 samples, 0.70%)</title><rect x="1162" y="308" width="8" height="15" fill="rgb(226,142,3)"/><text x="1165.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (7 samples, 1.62%)</title><rect x="1154" y="276" width="19" height="15" fill="rgb(219,57,20)"/><text x="1157.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (7 samples, 1.62%)</title><rect x="1154" y="292" width="19" height="15" fill="rgb(233,194,18)"/><text x="1157.00" y="302.50"></text></g><g><title>0x7f1b98a54f58 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1170" y="308" width="3" height="15" fill="rgb(212,171,10)"/><text x="1173.00" y="318.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (193 samples, 44.78%)</title><rect x="647" y="180" width="529" height="15" fill="rgb(242,193,25)"/><text x="650.00" y="190.50">_forward_pass (sklearn/neural_network/_multilayer_perceptron.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (21 samples, 4.87%)</title><rect x="1118" y="196" width="58" height="15" fill="rgb(248,204,4)"/><text x="1121.00" y="206.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (21 samples, 4.87%)</title><rect x="1118" y="212" width="58" height="15" fill="rgb(245,188,29)"/><text x="1121.00" y="222.50">PyUFun..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (21 samples, 4.87%)</title><rect x="1118" y="228" width="58" height="15" fill="rgb(229,26,40)"/><text x="1121.00" y="238.50">execut..</text></g><g><title>iterator_loop (ufunc_object.c) (21 samples, 4.87%)</title><rect x="1118" y="244" width="58" height="15" fill="rgb(233,25,20)"/><text x="1121.00" y="254.50">iterat..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (8 samples, 1.86%)</title><rect x="1154" y="260" width="22" height="15" fill="rgb(248,8,50)"/><text x="1157.00" y="270.50">n..</text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.23%)</title><rect x="1173" y="276" width="3" height="15" fill="rgb(249,31,49)"/><text x="1176.00" y="286.50"></text></g><g><title>array_empty (multiarraymodule.c) (1 samples, 0.23%)</title><rect x="1176" y="180" width="3" height="15" fill="rgb(212,190,52)"/><text x="1179.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.23%)</title><rect x="1176" y="196" width="3" height="15" fill="rgb(227,228,31)"/><text x="1179.00" y="206.50"></text></g><g><title>PyArray_Empty (ctors.c) (1 samples, 0.23%)</title><rect x="1176" y="212" width="3" height="15" fill="rgb(238,103,28)"/><text x="1179.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.23%)</title><rect x="1176" y="228" width="3" height="15" fill="rgb(218,151,20)"/><text x="1179.00" y="238.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.23%)</title><rect x="1176" y="244" width="3" height="15" fill="rgb(225,32,19)"/><text x="1179.00" y="254.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.23%)</title><rect x="1176" y="260" width="3" height="15" fill="rgb(227,29,15)"/><text x="1179.00" y="270.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.23%)</title><rect x="1176" y="276" width="3" height="15" fill="rgb(210,73,13)"/><text x="1179.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1176" y="292" width="3" height="15" fill="rgb(228,19,27)"/><text x="1179.00" y="302.50"></text></g><g><title>0x7f1b98a35dd6 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1176" y="308" width="3" height="15" fill="rgb(218,27,40)"/><text x="1179.00" y="318.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py) (200 samples, 46.40%)</title><rect x="636" y="164" width="548" height="15" fill="rgb(214,143,50)"/><text x="639.00" y="174.50">_predict (sklearn/neural_network/_multilayer_perceptron.py)</text></g><g><title>check_array (sklearn/utils/validation.py) (2 samples, 0.46%)</title><rect x="1179" y="180" width="5" height="15" fill="rgb(245,146,24)"/><text x="1182.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.23%)</title><rect x="1181" y="196" width="3" height="15" fill="rgb(250,193,12)"/><text x="1184.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.23%)</title><rect x="1181" y="212" width="3" height="15" fill="rgb(206,188,2)"/><text x="1184.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.23%)</title><rect x="1181" y="228" width="3" height="15" fill="rgb(212,222,14)"/><text x="1184.00" y="238.50"></text></g><g><title>profile_skl (bench_MLPRegressor_default_m_reg_1000_4_12_float_.py) (201 samples, 46.64%)</title><rect x="636" y="68" width="551" height="15" fill="rgb(206,19,19)"/><text x="639.00" y="78.50">profile_skl (bench_MLPRegressor_default_m_reg_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1000_4_12_float_.py) (201 samples, 46.64%)</title><rect x="636" y="84" width="551" height="15" fill="rgb(246,67,52)"/><text x="639.00" y="94.50">setup_profile (bench_MLPRegressor_default_m_reg_1000_4_12_float_.py)</text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1000_4_12_float_.py) (201 samples, 46.64%)</title><rect x="636" y="100" width="551" height="15" fill="rgb(240,31,14)"/><text x="639.00" y="110.50">profile (bench_MLPRegressor_default_m_reg_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (201 samples, 46.64%)</title><rect x="636" y="116" width="551" height="15" fill="rgb(214,42,2)"/><text x="639.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (201 samples, 46.64%)</title><rect x="636" y="132" width="551" height="15" fill="rgb(226,77,23)"/><text x="639.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py) (201 samples, 46.64%)</title><rect x="636" y="148" width="551" height="15" fill="rgb(224,187,26)"/><text x="639.00" y="158.50">predict (sklearn/neural_network/_multilayer_perceptron.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.23%)</title><rect x="1184" y="164" width="3" height="15" fill="rgb(207,220,49)"/><text x="1187.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.23%)</title><rect x="1184" y="180" width="3" height="15" fill="rgb(218,156,2)"/><text x="1187.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.23%)</title><rect x="1184" y="196" width="3" height="15" fill="rgb(209,149,37)"/><text x="1187.00" y="206.50"></text></g><g><title>all (431 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(249,224,41)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_m_reg_1000_4_12_float_.py) (431 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(234,1,0)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_MLPRegressor_default_m_reg_1000_4_12_float_.py)</text></g><g><title>start (bench_MLPRegressor_default_m_reg_1000_4_12_float_.py) (1 samples, 0.23%)</title><rect x="1187" y="68" width="3" height="15" fill="rgb(220,43,51)"/><text x="1190.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py) (1 samples, 0.23%)</title><rect x="1187" y="84" width="3" height="15" fill="rgb(230,90,39)"/><text x="1190.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.23%)</title><rect x="1187" y="100" width="3" height="15" fill="rgb(238,219,26)"/><text x="1190.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.23%)</title><rect x="1187" y="116" width="3" height="15" fill="rgb(215,1,47)"/><text x="1190.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.23%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(222,229,46)"/><text x="1190.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.23%)</title><rect x="1187" y="148" width="3" height="15" fill="rgb(248,218,24)"/><text x="1190.00" y="158.50"></text></g><g><title>update_params (sklearn/neural_network/_stochastic_optimizers.py) (1 samples, 0.23%)</title><rect x="1187" y="164" width="3" height="15" fill="rgb(243,134,42)"/><text x="1190.00" y="174.50"></text></g><g><title>_get_updates (sklearn/neural_network/_stochastic_optimizers.py) (1 samples, 0.23%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(252,14,44)"/><text x="1190.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/neural_network/_stochastic_optimizers.py) (1 samples, 0.23%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(213,52,20)"/><text x="1190.00" y="206.50"></text></g><g><title>array_multiply (number.c) (1 samples, 0.23%)</title><rect x="1187" y="212" width="3" height="15" fill="rgb(216,88,53)"/><text x="1190.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.23%)</title><rect x="1187" y="228" width="3" height="15" fill="rgb(211,23,12)"/><text x="1190.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.23%)</title><rect x="1187" y="244" width="3" height="15" fill="rgb(215,174,33)"/><text x="1190.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.23%)</title><rect x="1187" y="260" width="3" height="15" fill="rgb(254,59,9)"/><text x="1190.00" y="270.50"></text></g></g></svg>