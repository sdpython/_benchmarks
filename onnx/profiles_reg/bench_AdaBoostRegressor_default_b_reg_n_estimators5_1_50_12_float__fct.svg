<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2406" onload="init(evt)" viewBox="0 0 1200 2406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2406" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2389.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2389.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(240,136,1)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(210,45,1)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(245,131,16)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(209,214,28)"/><text x="13.00" y="926.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.33%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(205,214,49)"/><text x="13.00" y="942.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="13" y="868" width="4" height="15" fill="rgb(232,222,51)"/><text x="16.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="13" y="884" width="4" height="15" fill="rgb(207,108,20)"/><text x="16.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="13" y="900" width="4" height="15" fill="rgb(230,97,36)"/><text x="16.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="13" y="916" width="4" height="15" fill="rgb(237,211,38)"/><text x="16.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="13" y="932" width="4" height="15" fill="rgb(232,153,44)"/><text x="16.00" y="942.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="10" y="836" width="11" height="15" fill="rgb(220,89,34)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="10" y="852" width="11" height="15" fill="rgb(214,89,25)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="17" y="868" width="4" height="15" fill="rgb(254,119,14)"/><text x="20.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="17" y="884" width="4" height="15" fill="rgb(237,80,37)"/><text x="20.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="17" y="900" width="4" height="15" fill="rgb(206,32,28)"/><text x="20.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.33%)</title><rect x="17" y="916" width="4" height="15" fill="rgb(233,65,46)"/><text x="20.00" y="926.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="17" y="932" width="4" height="15" fill="rgb(248,2,10)"/><text x="20.00" y="942.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.33%)</title><rect x="10" y="292" width="15" height="15" fill="rgb(253,195,5)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="308" width="15" height="15" fill="rgb(232,41,9)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="324" width="15" height="15" fill="rgb(209,85,48)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="340" width="15" height="15" fill="rgb(239,53,34)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.33%)</title><rect x="10" y="356" width="15" height="15" fill="rgb(218,30,36)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="372" width="15" height="15" fill="rgb(208,180,53)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.33%)</title><rect x="10" y="388" width="15" height="15" fill="rgb(228,137,8)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="404" width="15" height="15" fill="rgb(245,136,19)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="420" width="15" height="15" fill="rgb(232,188,54)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="436" width="15" height="15" fill="rgb(253,112,37)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.33%)</title><rect x="10" y="452" width="15" height="15" fill="rgb(212,162,10)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="468" width="15" height="15" fill="rgb(228,43,28)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.33%)</title><rect x="10" y="484" width="15" height="15" fill="rgb(211,106,21)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="500" width="15" height="15" fill="rgb(209,120,4)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="516" width="15" height="15" fill="rgb(207,24,40)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="532" width="15" height="15" fill="rgb(230,191,39)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.33%)</title><rect x="10" y="548" width="15" height="15" fill="rgb(224,214,9)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="564" width="15" height="15" fill="rgb(250,121,46)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.33%)</title><rect x="10" y="580" width="15" height="15" fill="rgb(239,52,10)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="596" width="15" height="15" fill="rgb(241,221,35)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="612" width="15" height="15" fill="rgb(254,151,23)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="628" width="15" height="15" fill="rgb(232,148,41)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="644" width="15" height="15" fill="rgb(229,121,25)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="660" width="15" height="15" fill="rgb(231,85,0)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="676" width="15" height="15" fill="rgb(222,19,3)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.33%)</title><rect x="10" y="692" width="15" height="15" fill="rgb(216,102,12)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="708" width="15" height="15" fill="rgb(240,133,44)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.33%)</title><rect x="10" y="724" width="15" height="15" fill="rgb(218,38,37)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="740" width="15" height="15" fill="rgb(223,73,49)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="756" width="15" height="15" fill="rgb(218,125,48)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="772" width="15" height="15" fill="rgb(240,62,54)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.33%)</title><rect x="10" y="788" width="15" height="15" fill="rgb(232,103,20)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="804" width="15" height="15" fill="rgb(247,219,0)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.33%)</title><rect x="10" y="820" width="15" height="15" fill="rgb(206,141,29)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="836" width="4" height="15" fill="rgb(218,170,33)"/><text x="24.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="852" width="4" height="15" fill="rgb(214,222,54)"/><text x="24.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="868" width="4" height="15" fill="rgb(217,131,34)"/><text x="24.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="884" width="4" height="15" fill="rgb(223,49,7)"/><text x="24.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="900" width="4" height="15" fill="rgb(254,44,25)"/><text x="24.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.33%)</title><rect x="21" y="916" width="4" height="15" fill="rgb(249,20,24)"/><text x="24.00" y="926.50"></text></g><g><title>Version (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.33%)</title><rect x="21" y="932" width="4" height="15" fill="rgb(234,135,26)"/><text x="24.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.33%)</title><rect x="21" y="948" width="4" height="15" fill="rgb(246,56,11)"/><text x="24.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.33%)</title><rect x="21" y="964" width="4" height="15" fill="rgb(241,50,13)"/><text x="24.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.33%)</title><rect x="21" y="980" width="4" height="15" fill="rgb(252,201,9)"/><text x="24.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.33%)</title><rect x="21" y="996" width="4" height="15" fill="rgb(210,113,12)"/><text x="24.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.33%)</title><rect x="21" y="1012" width="4" height="15" fill="rgb(210,119,47)"/><text x="24.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.33%)</title><rect x="21" y="1028" width="4" height="15" fill="rgb(230,181,24)"/><text x="24.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.33%)</title><rect x="21" y="1044" width="4" height="15" fill="rgb(247,170,46)"/><text x="24.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.33%)</title><rect x="21" y="1060" width="4" height="15" fill="rgb(240,168,39)"/><text x="24.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.33%)</title><rect x="21" y="1076" width="4" height="15" fill="rgb(245,178,39)"/><text x="24.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.33%)</title><rect x="21" y="1092" width="4" height="15" fill="rgb(232,70,21)"/><text x="24.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.33%)</title><rect x="21" y="1108" width="4" height="15" fill="rgb(230,75,51)"/><text x="24.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.33%)</title><rect x="21" y="1124" width="4" height="15" fill="rgb(240,183,9)"/><text x="24.00" y="1134.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.33%)</title><rect x="21" y="1140" width="4" height="15" fill="rgb(225,60,9)"/><text x="24.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="10" y="196" width="19" height="15" fill="rgb(228,110,41)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="10" y="212" width="19" height="15" fill="rgb(234,129,33)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="10" y="228" width="19" height="15" fill="rgb(253,46,46)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="10" y="244" width="19" height="15" fill="rgb(254,185,14)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.67%)</title><rect x="10" y="260" width="19" height="15" fill="rgb(245,218,26)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="10" y="276" width="19" height="15" fill="rgb(221,81,53)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.33%)</title><rect x="25" y="292" width="4" height="15" fill="rgb(233,90,40)"/><text x="28.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="308" width="4" height="15" fill="rgb(210,66,31)"/><text x="28.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="324" width="4" height="15" fill="rgb(225,85,30)"/><text x="28.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="340" width="4" height="15" fill="rgb(215,10,34)"/><text x="28.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="356" width="4" height="15" fill="rgb(236,27,33)"/><text x="28.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="372" width="4" height="15" fill="rgb(221,222,19)"/><text x="28.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.33%)</title><rect x="25" y="388" width="4" height="15" fill="rgb(233,160,8)"/><text x="28.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="404" width="4" height="15" fill="rgb(228,118,37)"/><text x="28.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="420" width="4" height="15" fill="rgb(210,33,6)"/><text x="28.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="436" width="4" height="15" fill="rgb(231,148,54)"/><text x="28.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="452" width="4" height="15" fill="rgb(243,71,8)"/><text x="28.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="468" width="4" height="15" fill="rgb(253,132,10)"/><text x="28.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.33%)</title><rect x="25" y="484" width="4" height="15" fill="rgb(217,44,32)"/><text x="28.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="500" width="4" height="15" fill="rgb(231,174,40)"/><text x="28.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="516" width="4" height="15" fill="rgb(246,221,42)"/><text x="28.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="532" width="4" height="15" fill="rgb(247,45,20)"/><text x="28.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="548" width="4" height="15" fill="rgb(230,79,49)"/><text x="28.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="564" width="4" height="15" fill="rgb(239,103,15)"/><text x="28.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.33%)</title><rect x="25" y="580" width="4" height="15" fill="rgb(250,61,24)"/><text x="28.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="596" width="4" height="15" fill="rgb(218,119,3)"/><text x="28.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="612" width="4" height="15" fill="rgb(212,181,44)"/><text x="28.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="628" width="4" height="15" fill="rgb(225,57,51)"/><text x="28.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="644" width="4" height="15" fill="rgb(228,82,17)"/><text x="28.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="660" width="4" height="15" fill="rgb(215,183,29)"/><text x="28.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.33%)</title><rect x="25" y="676" width="4" height="15" fill="rgb(234,35,20)"/><text x="28.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="692" width="4" height="15" fill="rgb(221,165,25)"/><text x="28.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="708" width="4" height="15" fill="rgb(242,178,25)"/><text x="28.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="724" width="4" height="15" fill="rgb(219,45,50)"/><text x="28.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="740" width="4" height="15" fill="rgb(222,64,54)"/><text x="28.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="756" width="4" height="15" fill="rgb(209,68,42)"/><text x="28.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.33%)</title><rect x="25" y="772" width="4" height="15" fill="rgb(229,24,23)"/><text x="28.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="788" width="4" height="15" fill="rgb(216,44,18)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="804" width="4" height="15" fill="rgb(229,42,34)"/><text x="28.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="820" width="4" height="15" fill="rgb(210,65,20)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="836" width="4" height="15" fill="rgb(218,141,12)"/><text x="28.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="852" width="4" height="15" fill="rgb(217,112,31)"/><text x="28.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="868" width="4" height="15" fill="rgb(231,34,51)"/><text x="28.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="884" width="4" height="15" fill="rgb(254,18,16)"/><text x="28.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.33%)</title><rect x="25" y="900" width="4" height="15" fill="rgb(219,167,2)"/><text x="28.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="916" width="4" height="15" fill="rgb(212,146,37)"/><text x="28.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="932" width="4" height="15" fill="rgb(210,181,48)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="948" width="4" height="15" fill="rgb(240,160,7)"/><text x="28.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="964" width="4" height="15" fill="rgb(245,184,35)"/><text x="28.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="980" width="4" height="15" fill="rgb(208,174,45)"/><text x="28.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="996" width="4" height="15" fill="rgb(211,72,12)"/><text x="28.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1012" width="4" height="15" fill="rgb(235,156,16)"/><text x="28.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.33%)</title><rect x="25" y="1028" width="4" height="15" fill="rgb(242,168,1)"/><text x="28.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.33%)</title><rect x="25" y="1044" width="4" height="15" fill="rgb(232,152,24)"/><text x="28.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.33%)</title><rect x="25" y="1060" width="4" height="15" fill="rgb(206,69,29)"/><text x="28.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1124" width="4" height="15" fill="rgb(207,82,4)"/><text x="32.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1140" width="4" height="15" fill="rgb(207,193,33)"/><text x="32.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1156" width="4" height="15" fill="rgb(244,65,22)"/><text x="32.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="29" y="1172" width="4" height="15" fill="rgb(209,116,47)"/><text x="32.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1188" width="4" height="15" fill="rgb(215,21,50)"/><text x="32.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.33%)</title><rect x="29" y="1204" width="4" height="15" fill="rgb(253,4,30)"/><text x="32.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1220" width="4" height="15" fill="rgb(243,185,27)"/><text x="32.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1236" width="4" height="15" fill="rgb(240,9,52)"/><text x="32.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1252" width="4" height="15" fill="rgb(229,214,27)"/><text x="32.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="29" y="1268" width="4" height="15" fill="rgb(241,75,27)"/><text x="32.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1284" width="4" height="15" fill="rgb(225,22,32)"/><text x="32.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.33%)</title><rect x="29" y="1300" width="4" height="15" fill="rgb(248,127,13)"/><text x="32.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.33%)</title><rect x="29" y="1316" width="4" height="15" fill="rgb(223,149,42)"/><text x="32.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.33%)</title><rect x="29" y="1332" width="4" height="15" fill="rgb(226,198,43)"/><text x="32.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.33%)</title><rect x="29" y="1348" width="4" height="15" fill="rgb(206,110,5)"/><text x="32.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.33%)</title><rect x="29" y="1364" width="4" height="15" fill="rgb(220,49,12)"/><text x="32.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.33%)</title><rect x="29" y="1380" width="4" height="15" fill="rgb(237,169,28)"/><text x="32.00" y="1390.50"></text></g><g><title>&lt;module&gt; (asyncio/base_events.py) (1 samples, 0.33%)</title><rect x="33" y="1972" width="4" height="15" fill="rgb(237,119,22)"/><text x="36.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="1988" width="4" height="15" fill="rgb(238,24,28)"/><text x="36.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="2004" width="4" height="15" fill="rgb(254,124,39)"/><text x="36.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="2020" width="4" height="15" fill="rgb(230,113,34)"/><text x="36.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="2036" width="4" height="15" fill="rgb(211,102,4)"/><text x="36.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="2052" width="4" height="15" fill="rgb(254,9,13)"/><text x="36.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="33" y="2068" width="4" height="15" fill="rgb(241,39,41)"/><text x="36.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="2084" width="4" height="15" fill="rgb(223,26,19)"/><text x="36.00" y="2094.50"></text></g><g><title>&lt;module&gt; (asyncio/coroutines.py) (1 samples, 0.33%)</title><rect x="33" y="2100" width="4" height="15" fill="rgb(221,120,13)"/><text x="36.00" y="2110.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="2116" width="4" height="15" fill="rgb(212,8,24)"/><text x="36.00" y="2126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="2132" width="4" height="15" fill="rgb(235,224,15)"/><text x="36.00" y="2142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="2148" width="4" height="15" fill="rgb(241,9,41)"/><text x="36.00" y="2158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="2164" width="4" height="15" fill="rgb(214,81,24)"/><text x="36.00" y="2174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="2180" width="4" height="15" fill="rgb(237,79,50)"/><text x="36.00" y="2190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="33" y="2196" width="4" height="15" fill="rgb(231,133,51)"/><text x="36.00" y="2206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="2212" width="4" height="15" fill="rgb(241,75,19)"/><text x="36.00" y="2222.50"></text></g><g><title>&lt;module&gt; (asyncio/base_futures.py) (1 samples, 0.33%)</title><rect x="33" y="2228" width="4" height="15" fill="rgb(245,21,42)"/><text x="36.00" y="2238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="2244" width="4" height="15" fill="rgb(205,117,19)"/><text x="36.00" y="2254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="2260" width="4" height="15" fill="rgb(232,207,12)"/><text x="36.00" y="2270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="2276" width="4" height="15" fill="rgb(222,5,2)"/><text x="36.00" y="2286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="2292" width="4" height="15" fill="rgb(217,128,19)"/><text x="36.00" y="2302.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="2308" width="4" height="15" fill="rgb(235,79,8)"/><text x="36.00" y="2318.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="33" y="2324" width="4" height="15" fill="rgb(237,156,0)"/><text x="36.00" y="2334.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="33" y="2340" width="4" height="15" fill="rgb(221,92,50)"/><text x="36.00" y="2350.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="33" y="2356" width="4" height="15" fill="rgb(214,42,34)"/><text x="36.00" y="2366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1476" width="8" height="15" fill="rgb(239,13,48)"/><text x="36.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1492" width="8" height="15" fill="rgb(207,50,54)"/><text x="36.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1508" width="8" height="15" fill="rgb(227,211,47)"/><text x="36.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="33" y="1524" width="8" height="15" fill="rgb(222,213,17)"/><text x="36.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1540" width="8" height="15" fill="rgb(225,194,27)"/><text x="36.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (2 samples, 0.67%)</title><rect x="33" y="1556" width="8" height="15" fill="rgb(237,61,41)"/><text x="36.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (2 samples, 0.67%)</title><rect x="33" y="1572" width="8" height="15" fill="rgb(228,47,28)"/><text x="36.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1588" width="8" height="15" fill="rgb(237,172,26)"/><text x="36.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1604" width="8" height="15" fill="rgb(208,103,10)"/><text x="36.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1620" width="8" height="15" fill="rgb(253,229,22)"/><text x="36.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="33" y="1636" width="8" height="15" fill="rgb(250,190,5)"/><text x="36.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1652" width="8" height="15" fill="rgb(215,82,17)"/><text x="36.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (2 samples, 0.67%)</title><rect x="33" y="1668" width="8" height="15" fill="rgb(211,154,21)"/><text x="36.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py) (2 samples, 0.67%)</title><rect x="33" y="1684" width="8" height="15" fill="rgb(244,68,48)"/><text x="36.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1700" width="8" height="15" fill="rgb(214,199,52)"/><text x="36.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1716" width="8" height="15" fill="rgb(236,133,21)"/><text x="36.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1732" width="8" height="15" fill="rgb(207,73,9)"/><text x="36.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="33" y="1748" width="8" height="15" fill="rgb(229,75,6)"/><text x="36.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1764" width="8" height="15" fill="rgb(212,17,35)"/><text x="36.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py) (2 samples, 0.67%)</title><rect x="33" y="1780" width="8" height="15" fill="rgb(227,25,52)"/><text x="36.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1796" width="8" height="15" fill="rgb(206,102,1)"/><text x="36.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1812" width="8" height="15" fill="rgb(225,8,24)"/><text x="36.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1828" width="8" height="15" fill="rgb(222,9,45)"/><text x="36.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="33" y="1844" width="8" height="15" fill="rgb(254,31,8)"/><text x="36.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1860" width="8" height="15" fill="rgb(251,188,52)"/><text x="36.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py) (2 samples, 0.67%)</title><rect x="33" y="1876" width="8" height="15" fill="rgb(213,57,46)"/><text x="36.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1892" width="8" height="15" fill="rgb(246,146,13)"/><text x="36.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1908" width="8" height="15" fill="rgb(209,219,4)"/><text x="36.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1924" width="8" height="15" fill="rgb(226,205,46)"/><text x="36.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="33" y="1940" width="8" height="15" fill="rgb(250,222,26)"/><text x="36.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1956" width="8" height="15" fill="rgb(251,134,0)"/><text x="36.00" y="1966.50"></text></g><g><title>&lt;module&gt; (asyncio/unix_events.py) (1 samples, 0.33%)</title><rect x="37" y="1972" width="4" height="15" fill="rgb(241,16,35)"/><text x="40.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="484" width="20" height="15" fill="rgb(230,199,24)"/><text x="32.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="500" width="20" height="15" fill="rgb(252,110,48)"/><text x="32.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="516" width="20" height="15" fill="rgb(206,173,23)"/><text x="32.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="532" width="20" height="15" fill="rgb(249,205,31)"/><text x="32.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.67%)</title><rect x="29" y="548" width="20" height="15" fill="rgb(213,118,51)"/><text x="32.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="564" width="20" height="15" fill="rgb(229,211,37)"/><text x="32.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (5 samples, 1.67%)</title><rect x="29" y="580" width="20" height="15" fill="rgb(231,177,44)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="596" width="20" height="15" fill="rgb(242,214,51)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="612" width="20" height="15" fill="rgb(209,5,15)"/><text x="32.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="628" width="20" height="15" fill="rgb(229,71,26)"/><text x="32.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.67%)</title><rect x="29" y="644" width="20" height="15" fill="rgb(225,107,9)"/><text x="32.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="660" width="20" height="15" fill="rgb(222,220,45)"/><text x="32.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (5 samples, 1.67%)</title><rect x="29" y="676" width="20" height="15" fill="rgb(215,140,49)"/><text x="32.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="692" width="20" height="15" fill="rgb(206,47,52)"/><text x="32.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="708" width="20" height="15" fill="rgb(230,225,9)"/><text x="32.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="724" width="20" height="15" fill="rgb(249,152,43)"/><text x="32.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.67%)</title><rect x="29" y="740" width="20" height="15" fill="rgb(226,86,21)"/><text x="32.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="756" width="20" height="15" fill="rgb(218,131,29)"/><text x="32.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (5 samples, 1.67%)</title><rect x="29" y="772" width="20" height="15" fill="rgb(228,127,7)"/><text x="32.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="788" width="20" height="15" fill="rgb(212,59,21)"/><text x="32.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="804" width="20" height="15" fill="rgb(214,187,23)"/><text x="32.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="820" width="20" height="15" fill="rgb(247,118,47)"/><text x="32.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.67%)</title><rect x="29" y="836" width="20" height="15" fill="rgb(220,50,48)"/><text x="32.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="852" width="20" height="15" fill="rgb(223,61,15)"/><text x="32.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (5 samples, 1.67%)</title><rect x="29" y="868" width="20" height="15" fill="rgb(229,130,7)"/><text x="32.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="884" width="20" height="15" fill="rgb(216,5,12)"/><text x="32.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="900" width="20" height="15" fill="rgb(210,187,10)"/><text x="32.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="916" width="20" height="15" fill="rgb(212,46,7)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="932" width="20" height="15" fill="rgb(213,93,6)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="948" width="20" height="15" fill="rgb(251,36,42)"/><text x="32.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="964" width="20" height="15" fill="rgb(240,160,33)"/><text x="32.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.67%)</title><rect x="29" y="980" width="20" height="15" fill="rgb(226,30,22)"/><text x="32.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="996" width="20" height="15" fill="rgb(210,23,23)"/><text x="32.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (5 samples, 1.67%)</title><rect x="29" y="1012" width="20" height="15" fill="rgb(253,9,54)"/><text x="32.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="1028" width="20" height="15" fill="rgb(241,13,23)"/><text x="32.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="1044" width="20" height="15" fill="rgb(253,226,27)"/><text x="32.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="1060" width="20" height="15" fill="rgb(251,22,36)"/><text x="32.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.67%)</title><rect x="29" y="1076" width="20" height="15" fill="rgb(217,51,1)"/><text x="32.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="29" y="1092" width="20" height="15" fill="rgb(243,44,18)"/><text x="32.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (5 samples, 1.67%)</title><rect x="29" y="1108" width="20" height="15" fill="rgb(254,0,42)"/><text x="32.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="33" y="1124" width="16" height="15" fill="rgb(250,169,39)"/><text x="36.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="33" y="1140" width="16" height="15" fill="rgb(236,171,38)"/><text x="36.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="33" y="1156" width="16" height="15" fill="rgb(244,228,53)"/><text x="36.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="33" y="1172" width="16" height="15" fill="rgb(253,45,27)"/><text x="36.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="33" y="1188" width="16" height="15" fill="rgb(225,171,42)"/><text x="36.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.33%)</title><rect x="33" y="1204" width="16" height="15" fill="rgb(222,135,26)"/><text x="36.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="33" y="1220" width="16" height="15" fill="rgb(251,135,23)"/><text x="36.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (4 samples, 1.33%)</title><rect x="33" y="1236" width="16" height="15" fill="rgb(226,30,28)"/><text x="36.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="33" y="1252" width="16" height="15" fill="rgb(237,171,9)"/><text x="36.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="33" y="1268" width="16" height="15" fill="rgb(215,178,33)"/><text x="36.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="33" y="1284" width="16" height="15" fill="rgb(245,103,30)"/><text x="36.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="33" y="1300" width="16" height="15" fill="rgb(232,127,41)"/><text x="36.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="33" y="1316" width="16" height="15" fill="rgb(219,174,16)"/><text x="36.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.33%)</title><rect x="33" y="1332" width="16" height="15" fill="rgb(215,112,38)"/><text x="36.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="33" y="1348" width="16" height="15" fill="rgb(231,39,31)"/><text x="36.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (4 samples, 1.33%)</title><rect x="33" y="1364" width="16" height="15" fill="rgb(212,173,36)"/><text x="36.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="33" y="1380" width="16" height="15" fill="rgb(250,77,23)"/><text x="36.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="33" y="1396" width="16" height="15" fill="rgb(220,61,0)"/><text x="36.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="33" y="1412" width="16" height="15" fill="rgb(222,209,41)"/><text x="36.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.33%)</title><rect x="33" y="1428" width="16" height="15" fill="rgb(210,142,39)"/><text x="36.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="33" y="1444" width="16" height="15" fill="rgb(222,163,43)"/><text x="36.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (4 samples, 1.33%)</title><rect x="33" y="1460" width="16" height="15" fill="rgb(253,24,15)"/><text x="36.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.67%)</title><rect x="41" y="1476" width="8" height="15" fill="rgb(227,37,20)"/><text x="44.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.67%)</title><rect x="41" y="1492" width="8" height="15" fill="rgb(244,132,26)"/><text x="44.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.67%)</title><rect x="41" y="1508" width="8" height="15" fill="rgb(254,73,42)"/><text x="44.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.67%)</title><rect x="41" y="1524" width="8" height="15" fill="rgb(234,101,13)"/><text x="44.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.67%)</title><rect x="41" y="1540" width="8" height="15" fill="rgb(252,193,22)"/><text x="44.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.67%)</title><rect x="41" y="1556" width="8" height="15" fill="rgb(241,64,8)"/><text x="44.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.67%)</title><rect x="41" y="1572" width="8" height="15" fill="rgb(210,219,15)"/><text x="44.00" y="1582.50"></text></g><g><title>0x7f334ca9e124 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="45" y="1588" width="4" height="15" fill="rgb(212,201,51)"/><text x="48.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="772" width="4" height="15" fill="rgb(248,101,19)"/><text x="52.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="788" width="4" height="15" fill="rgb(206,154,30)"/><text x="52.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="804" width="4" height="15" fill="rgb(254,62,14)"/><text x="52.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="820" width="4" height="15" fill="rgb(243,92,47)"/><text x="52.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="49" y="836" width="4" height="15" fill="rgb(246,193,1)"/><text x="52.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="852" width="4" height="15" fill="rgb(244,229,17)"/><text x="52.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.33%)</title><rect x="49" y="868" width="4" height="15" fill="rgb(218,188,35)"/><text x="52.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="884" width="4" height="15" fill="rgb(251,136,49)"/><text x="52.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="900" width="4" height="15" fill="rgb(225,194,22)"/><text x="52.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="916" width="4" height="15" fill="rgb(228,126,18)"/><text x="52.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="49" y="932" width="4" height="15" fill="rgb(212,141,46)"/><text x="52.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="948" width="4" height="15" fill="rgb(221,176,37)"/><text x="52.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimes.py) (1 samples, 0.33%)</title><rect x="49" y="964" width="4" height="15" fill="rgb(233,43,24)"/><text x="52.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="980" width="4" height="15" fill="rgb(229,58,2)"/><text x="52.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="996" width="4" height="15" fill="rgb(219,71,48)"/><text x="52.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1012" width="4" height="15" fill="rgb(247,124,45)"/><text x="52.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1028" width="4" height="15" fill="rgb(234,172,24)"/><text x="52.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1044" width="4" height="15" fill="rgb(208,86,45)"/><text x="52.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="49" y="1060" width="4" height="15" fill="rgb(250,204,44)"/><text x="52.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1076" width="4" height="15" fill="rgb(224,34,49)"/><text x="52.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimelike.py) (1 samples, 0.33%)</title><rect x="49" y="1092" width="4" height="15" fill="rgb(236,213,1)"/><text x="52.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1108" width="4" height="15" fill="rgb(211,22,24)"/><text x="52.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1124" width="4" height="15" fill="rgb(221,204,18)"/><text x="52.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1140" width="4" height="15" fill="rgb(220,199,54)"/><text x="52.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1156" width="4" height="15" fill="rgb(238,70,4)"/><text x="52.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1172" width="4" height="15" fill="rgb(220,214,13)"/><text x="52.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="49" y="1188" width="4" height="15" fill="rgb(219,192,41)"/><text x="52.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1204" width="4" height="15" fill="rgb(251,0,46)"/><text x="52.00" y="1214.50"></text></g><g><title>&lt;module&gt; (pandas/tseries/frequencies.py) (1 samples, 0.33%)</title><rect x="49" y="1220" width="4" height="15" fill="rgb(231,9,18)"/><text x="52.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1236" width="4" height="15" fill="rgb(229,221,36)"/><text x="52.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1252" width="4" height="15" fill="rgb(249,138,15)"/><text x="52.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1268" width="4" height="15" fill="rgb(253,156,11)"/><text x="52.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="49" y="1284" width="4" height="15" fill="rgb(220,54,32)"/><text x="52.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1300" width="4" height="15" fill="rgb(254,76,5)"/><text x="52.00" y="1310.50"></text></g><g><title>&lt;module&gt; (pandas/tseries/offsets.py) (1 samples, 0.33%)</title><rect x="49" y="1316" width="4" height="15" fill="rgb(250,186,40)"/><text x="52.00" y="1326.50"></text></g><g><title>YearOffset (pandas/tseries/offsets.py) (1 samples, 0.33%)</title><rect x="49" y="1332" width="4" height="15" fill="rgb(207,71,39)"/><text x="52.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.33%)</title><rect x="53" y="1108" width="4" height="15" fill="rgb(240,79,3)"/><text x="56.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1124" width="4" height="15" fill="rgb(252,229,11)"/><text x="56.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1140" width="4" height="15" fill="rgb(210,34,47)"/><text x="56.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1156" width="4" height="15" fill="rgb(211,81,43)"/><text x="56.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="53" y="1172" width="4" height="15" fill="rgb(233,209,34)"/><text x="56.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1188" width="4" height="15" fill="rgb(212,31,15)"/><text x="56.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexing.py) (1 samples, 0.33%)</title><rect x="53" y="1204" width="4" height="15" fill="rgb(230,201,3)"/><text x="56.00" y="1214.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 2.67%)</title><rect x="29" y="436" width="32" height="15" fill="rgb(227,63,2)"/><text x="32.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.67%)</title><rect x="29" y="452" width="32" height="15" fill="rgb(205,224,3)"/><text x="32.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.67%)</title><rect x="29" y="468" width="32" height="15" fill="rgb(239,218,8)"/><text x="32.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="49" y="484" width="12" height="15" fill="rgb(210,203,18)"/><text x="52.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="49" y="500" width="12" height="15" fill="rgb(212,113,9)"/><text x="52.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="49" y="516" width="12" height="15" fill="rgb(212,94,34)"/><text x="52.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.00%)</title><rect x="49" y="532" width="12" height="15" fill="rgb(233,36,29)"/><text x="52.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="49" y="548" width="12" height="15" fill="rgb(253,31,23)"/><text x="52.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="49" y="564" width="12" height="15" fill="rgb(242,32,35)"/><text x="52.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="49" y="580" width="12" height="15" fill="rgb(236,221,53)"/><text x="52.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="49" y="596" width="12" height="15" fill="rgb(246,80,8)"/><text x="52.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="49" y="612" width="12" height="15" fill="rgb(250,216,34)"/><text x="52.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 1.00%)</title><rect x="49" y="628" width="12" height="15" fill="rgb(253,192,36)"/><text x="52.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="49" y="644" width="12" height="15" fill="rgb(216,190,41)"/><text x="52.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="49" y="660" width="12" height="15" fill="rgb(233,59,22)"/><text x="52.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="49" y="676" width="12" height="15" fill="rgb(247,51,46)"/><text x="52.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="49" y="692" width="12" height="15" fill="rgb(217,28,45)"/><text x="52.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="49" y="708" width="12" height="15" fill="rgb(248,55,31)"/><text x="52.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 1.00%)</title><rect x="49" y="724" width="12" height="15" fill="rgb(221,147,29)"/><text x="52.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="49" y="740" width="12" height="15" fill="rgb(218,44,41)"/><text x="52.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="49" y="756" width="12" height="15" fill="rgb(219,146,20)"/><text x="52.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="772" width="8" height="15" fill="rgb(209,100,24)"/><text x="56.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="53" y="788" width="8" height="15" fill="rgb(227,164,40)"/><text x="56.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="804" width="8" height="15" fill="rgb(222,100,12)"/><text x="56.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.67%)</title><rect x="53" y="820" width="8" height="15" fill="rgb(254,59,27)"/><text x="56.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="836" width="8" height="15" fill="rgb(231,140,30)"/><text x="56.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="852" width="8" height="15" fill="rgb(252,120,51)"/><text x="56.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="868" width="8" height="15" fill="rgb(222,33,36)"/><text x="56.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="53" y="884" width="8" height="15" fill="rgb(234,85,26)"/><text x="56.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="900" width="8" height="15" fill="rgb(248,148,49)"/><text x="56.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.67%)</title><rect x="53" y="916" width="8" height="15" fill="rgb(249,227,51)"/><text x="56.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="932" width="8" height="15" fill="rgb(251,185,31)"/><text x="56.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="948" width="8" height="15" fill="rgb(215,92,27)"/><text x="56.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="964" width="8" height="15" fill="rgb(248,200,49)"/><text x="56.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="53" y="980" width="8" height="15" fill="rgb(223,43,35)"/><text x="56.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="996" width="8" height="15" fill="rgb(229,77,4)"/><text x="56.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.67%)</title><rect x="53" y="1012" width="8" height="15" fill="rgb(239,105,17)"/><text x="56.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="1028" width="8" height="15" fill="rgb(224,192,54)"/><text x="56.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="1044" width="8" height="15" fill="rgb(218,173,13)"/><text x="56.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="1060" width="8" height="15" fill="rgb(237,147,47)"/><text x="56.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="53" y="1076" width="8" height="15" fill="rgb(233,85,8)"/><text x="56.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="1092" width="8" height="15" fill="rgb(254,201,50)"/><text x="56.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.33%)</title><rect x="57" y="1108" width="4" height="15" fill="rgb(242,1,11)"/><text x="60.00" y="1118.50"></text></g><g><title>_add_series_or_dataframe_operations (pandas/core/generic.py) (1 samples, 0.33%)</title><rect x="57" y="1124" width="4" height="15" fill="rgb(248,159,27)"/><text x="60.00" y="1134.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1140" width="4" height="15" fill="rgb(231,211,46)"/><text x="60.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1156" width="4" height="15" fill="rgb(225,227,22)"/><text x="60.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1172" width="4" height="15" fill="rgb(252,227,23)"/><text x="60.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1188" width="4" height="15" fill="rgb(209,214,46)"/><text x="60.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1204" width="4" height="15" fill="rgb(231,23,3)"/><text x="60.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="57" y="1220" width="4" height="15" fill="rgb(217,154,15)"/><text x="60.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="57" y="1236" width="4" height="15" fill="rgb(244,211,6)"/><text x="60.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="57" y="1252" width="4" height="15" fill="rgb(217,172,12)"/><text x="60.00" y="1262.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (9 samples, 3.00%)</title><rect x="29" y="340" width="36" height="15" fill="rgb(248,85,54)"/><text x="32.00" y="350.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.00%)</title><rect x="29" y="356" width="36" height="15" fill="rgb(209,184,42)"/><text x="32.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.00%)</title><rect x="29" y="372" width="36" height="15" fill="rgb(230,52,32)"/><text x="32.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.00%)</title><rect x="29" y="388" width="36" height="15" fill="rgb(206,179,53)"/><text x="32.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 3.00%)</title><rect x="29" y="404" width="36" height="15" fill="rgb(225,32,10)"/><text x="32.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.00%)</title><rect x="29" y="420" width="36" height="15" fill="rgb(250,26,1)"/><text x="32.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.33%)</title><rect x="61" y="436" width="4" height="15" fill="rgb(224,141,54)"/><text x="64.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="452" width="4" height="15" fill="rgb(217,182,17)"/><text x="64.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="468" width="4" height="15" fill="rgb(230,155,34)"/><text x="64.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="484" width="4" height="15" fill="rgb(208,218,8)"/><text x="64.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="61" y="500" width="4" height="15" fill="rgb(244,136,50)"/><text x="64.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="516" width="4" height="15" fill="rgb(207,120,49)"/><text x="64.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_openml.py) (1 samples, 0.33%)</title><rect x="61" y="532" width="4" height="15" fill="rgb(217,126,49)"/><text x="64.00" y="542.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="548" width="4" height="15" fill="rgb(207,189,49)"/><text x="64.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="564" width="4" height="15" fill="rgb(205,30,7)"/><text x="64.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="580" width="4" height="15" fill="rgb(251,7,41)"/><text x="64.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="596" width="4" height="15" fill="rgb(220,86,37)"/><text x="64.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="612" width="4" height="15" fill="rgb(247,223,12)"/><text x="64.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="61" y="628" width="4" height="15" fill="rgb(206,163,51)"/><text x="64.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="644" width="4" height="15" fill="rgb(246,186,4)"/><text x="64.00" y="654.50"></text></g><g><title>&lt;module&gt; (sklearn/externals/_arff.py) (1 samples, 0.33%)</title><rect x="61" y="660" width="4" height="15" fill="rgb(209,167,4)"/><text x="64.00" y="670.50"></text></g><g><title>compile (re.py) (1 samples, 0.33%)</title><rect x="61" y="676" width="4" height="15" fill="rgb(242,110,24)"/><text x="64.00" y="686.50"></text></g><g><title>_compile (re.py) (1 samples, 0.33%)</title><rect x="61" y="692" width="4" height="15" fill="rgb(246,80,11)"/><text x="64.00" y="702.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.33%)</title><rect x="61" y="708" width="4" height="15" fill="rgb(216,157,7)"/><text x="64.00" y="718.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.33%)</title><rect x="61" y="724" width="4" height="15" fill="rgb(221,30,36)"/><text x="64.00" y="734.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.33%)</title><rect x="61" y="740" width="4" height="15" fill="rgb(233,22,26)"/><text x="64.00" y="750.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.33%)</title><rect x="61" y="756" width="4" height="15" fill="rgb(220,56,10)"/><text x="64.00" y="766.50"></text></g><g><title>append (sre_parse.py) (1 samples, 0.33%)</title><rect x="61" y="772" width="4" height="15" fill="rgb(240,100,51)"/><text x="64.00" y="782.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (10 samples, 3.33%)</title><rect x="29" y="244" width="40" height="15" fill="rgb(243,176,36)"/><text x="32.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.33%)</title><rect x="29" y="260" width="40" height="15" fill="rgb(235,88,9)"/><text x="32.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.33%)</title><rect x="29" y="276" width="40" height="15" fill="rgb(226,39,49)"/><text x="32.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.33%)</title><rect x="29" y="292" width="40" height="15" fill="rgb(227,105,7)"/><text x="32.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 3.33%)</title><rect x="29" y="308" width="40" height="15" fill="rgb(217,42,46)"/><text x="32.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.33%)</title><rect x="29" y="324" width="40" height="15" fill="rgb(230,167,13)"/><text x="32.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.33%)</title><rect x="65" y="340" width="4" height="15" fill="rgb(235,46,35)"/><text x="68.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="356" width="4" height="15" fill="rgb(207,25,12)"/><text x="68.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="372" width="4" height="15" fill="rgb(221,146,38)"/><text x="68.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="388" width="4" height="15" fill="rgb(218,37,15)"/><text x="68.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="404" width="4" height="15" fill="rgb(215,156,33)"/><text x="68.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="420" width="4" height="15" fill="rgb(209,187,36)"/><text x="68.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="436" width="4" height="15" fill="rgb(238,0,22)"/><text x="68.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="65" y="452" width="4" height="15" fill="rgb(238,19,51)"/><text x="68.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="468" width="4" height="15" fill="rgb(228,92,13)"/><text x="68.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.33%)</title><rect x="65" y="484" width="4" height="15" fill="rgb(245,222,47)"/><text x="68.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="500" width="4" height="15" fill="rgb(221,81,29)"/><text x="68.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="516" width="4" height="15" fill="rgb(232,30,6)"/><text x="68.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="532" width="4" height="15" fill="rgb(210,229,48)"/><text x="68.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="65" y="548" width="4" height="15" fill="rgb(218,107,16)"/><text x="68.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="564" width="4" height="15" fill="rgb(238,65,15)"/><text x="68.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.33%)</title><rect x="65" y="580" width="4" height="15" fill="rgb(234,212,37)"/><text x="68.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="596" width="4" height="15" fill="rgb(230,32,1)"/><text x="68.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="612" width="4" height="15" fill="rgb(222,97,12)"/><text x="68.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="628" width="4" height="15" fill="rgb(233,197,44)"/><text x="68.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="644" width="4" height="15" fill="rgb(228,176,6)"/><text x="68.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="660" width="4" height="15" fill="rgb(242,58,32)"/><text x="68.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="676" width="4" height="15" fill="rgb(220,1,35)"/><text x="68.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="65" y="692" width="4" height="15" fill="rgb(237,115,14)"/><text x="68.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="708" width="4" height="15" fill="rgb(252,51,53)"/><text x="68.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.33%)</title><rect x="65" y="724" width="4" height="15" fill="rgb(250,192,52)"/><text x="68.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="740" width="4" height="15" fill="rgb(205,196,27)"/><text x="68.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="756" width="4" height="15" fill="rgb(245,198,27)"/><text x="68.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="772" width="4" height="15" fill="rgb(221,25,11)"/><text x="68.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="65" y="788" width="4" height="15" fill="rgb(240,71,39)"/><text x="68.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="804" width="4" height="15" fill="rgb(220,38,17)"/><text x="68.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.33%)</title><rect x="65" y="820" width="4" height="15" fill="rgb(226,140,48)"/><text x="68.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="836" width="4" height="15" fill="rgb(229,131,4)"/><text x="68.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="852" width="4" height="15" fill="rgb(234,48,11)"/><text x="68.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="868" width="4" height="15" fill="rgb(236,96,13)"/><text x="68.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="65" y="884" width="4" height="15" fill="rgb(251,107,1)"/><text x="68.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="900" width="4" height="15" fill="rgb(236,162,43)"/><text x="68.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.33%)</title><rect x="65" y="916" width="4" height="15" fill="rgb(218,20,47)"/><text x="68.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="932" width="4" height="15" fill="rgb(219,4,36)"/><text x="68.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="948" width="4" height="15" fill="rgb(245,95,0)"/><text x="68.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="964" width="4" height="15" fill="rgb(234,144,50)"/><text x="68.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="980" width="4" height="15" fill="rgb(216,72,12)"/><text x="68.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="996" width="4" height="15" fill="rgb(218,157,50)"/><text x="68.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="1012" width="4" height="15" fill="rgb(249,0,42)"/><text x="68.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="65" y="1028" width="4" height="15" fill="rgb(233,154,54)"/><text x="68.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="1044" width="4" height="15" fill="rgb(213,191,11)"/><text x="68.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.33%)</title><rect x="65" y="1060" width="4" height="15" fill="rgb(248,218,7)"/><text x="68.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="1076" width="4" height="15" fill="rgb(212,157,40)"/><text x="68.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="1092" width="4" height="15" fill="rgb(231,107,29)"/><text x="68.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="1108" width="4" height="15" fill="rgb(252,119,26)"/><text x="68.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="65" y="1124" width="4" height="15" fill="rgb(238,127,23)"/><text x="68.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="1140" width="4" height="15" fill="rgb(217,15,36)"/><text x="68.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py) (1 samples, 0.33%)</title><rect x="65" y="1156" width="4" height="15" fill="rgb(218,17,28)"/><text x="68.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="1172" width="4" height="15" fill="rgb(253,55,35)"/><text x="68.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="1188" width="4" height="15" fill="rgb(208,135,23)"/><text x="68.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="1204" width="4" height="15" fill="rgb(247,34,29)"/><text x="68.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="65" y="1220" width="4" height="15" fill="rgb(235,81,15)"/><text x="68.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="65" y="1236" width="4" height="15" fill="rgb(237,72,38)"/><text x="68.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="65" y="1252" width="4" height="15" fill="rgb(205,12,45)"/><text x="68.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.33%)</title><rect x="10" y="68" width="62" height="15" fill="rgb(216,109,33)"/><text x="13.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.33%)</title><rect x="10" y="84" width="62" height="15" fill="rgb(220,97,17)"/><text x="13.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.33%)</title><rect x="10" y="100" width="62" height="15" fill="rgb(242,81,17)"/><text x="13.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 5.33%)</title><rect x="10" y="116" width="62" height="15" fill="rgb(208,96,31)"/><text x="13.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.33%)</title><rect x="10" y="132" width="62" height="15" fill="rgb(232,214,1)"/><text x="13.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py) (16 samples, 5.33%)</title><rect x="10" y="148" width="62" height="15" fill="rgb(229,172,54)"/><text x="13.00" y="158.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.33%)</title><rect x="10" y="164" width="62" height="15" fill="rgb(253,71,16)"/><text x="13.00" y="174.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.33%)</title><rect x="10" y="180" width="62" height="15" fill="rgb(248,14,41)"/><text x="13.00" y="190.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.67%)</title><rect x="29" y="196" width="43" height="15" fill="rgb(213,89,0)"/><text x="32.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 3.67%)</title><rect x="29" y="212" width="43" height="15" fill="rgb(223,49,43)"/><text x="32.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.67%)</title><rect x="29" y="228" width="43" height="15" fill="rgb(227,62,31)"/><text x="32.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.33%)</title><rect x="69" y="244" width="3" height="15" fill="rgb(223,229,15)"/><text x="72.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="260" width="3" height="15" fill="rgb(251,209,27)"/><text x="72.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="276" width="3" height="15" fill="rgb(250,143,43)"/><text x="72.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="292" width="3" height="15" fill="rgb(213,175,17)"/><text x="72.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="308" width="3" height="15" fill="rgb(250,175,42)"/><text x="72.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="324" width="3" height="15" fill="rgb(211,50,54)"/><text x="72.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="69" y="340" width="3" height="15" fill="rgb(250,151,51)"/><text x="72.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="356" width="3" height="15" fill="rgb(250,163,17)"/><text x="72.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py) (1 samples, 0.33%)</title><rect x="69" y="372" width="3" height="15" fill="rgb(213,145,19)"/><text x="72.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="388" width="3" height="15" fill="rgb(231,1,23)"/><text x="72.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="404" width="3" height="15" fill="rgb(216,221,46)"/><text x="72.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="420" width="3" height="15" fill="rgb(219,138,4)"/><text x="72.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="436" width="3" height="15" fill="rgb(208,94,35)"/><text x="72.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="452" width="3" height="15" fill="rgb(232,56,47)"/><text x="72.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="69" y="468" width="3" height="15" fill="rgb(241,132,42)"/><text x="72.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="484" width="3" height="15" fill="rgb(236,31,40)"/><text x="72.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py) (1 samples, 0.33%)</title><rect x="69" y="500" width="3" height="15" fill="rgb(206,193,30)"/><text x="72.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="516" width="3" height="15" fill="rgb(205,156,53)"/><text x="72.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="532" width="3" height="15" fill="rgb(246,145,11)"/><text x="72.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="548" width="3" height="15" fill="rgb(215,143,7)"/><text x="72.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="69" y="564" width="3" height="15" fill="rgb(246,30,1)"/><text x="72.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="580" width="3" height="15" fill="rgb(220,205,52)"/><text x="72.00" y="590.50"></text></g><g><title>0x7f333f344585 (?) (1 samples, 0.33%)</title><rect x="69" y="596" width="3" height="15" fill="rgb(241,157,33)"/><text x="72.00" y="606.50"></text></g><g><title>0x7f333f34a075 (?) (1 samples, 0.33%)</title><rect x="69" y="612" width="3" height="15" fill="rgb(212,26,53)"/><text x="72.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="628" width="3" height="15" fill="rgb(218,109,51)"/><text x="72.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="644" width="3" height="15" fill="rgb(208,122,17)"/><text x="72.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="660" width="3" height="15" fill="rgb(242,200,2)"/><text x="72.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="69" y="676" width="3" height="15" fill="rgb(217,90,33)"/><text x="72.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="692" width="3" height="15" fill="rgb(247,89,52)"/><text x="72.00" y="702.50"></text></g><g><title>0x7f333ec81543 (?) (1 samples, 0.33%)</title><rect x="69" y="708" width="3" height="15" fill="rgb(246,7,2)"/><text x="72.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="724" width="3" height="15" fill="rgb(217,131,47)"/><text x="72.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="740" width="3" height="15" fill="rgb(214,183,29)"/><text x="72.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="756" width="3" height="15" fill="rgb(233,90,23)"/><text x="72.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="69" y="772" width="3" height="15" fill="rgb(236,108,43)"/><text x="72.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="788" width="3" height="15" fill="rgb(231,143,54)"/><text x="72.00" y="798.50"></text></g><g><title>0x7f333ea56b9c (?) (1 samples, 0.33%)</title><rect x="69" y="804" width="3" height="15" fill="rgb(217,223,43)"/><text x="72.00" y="814.50"></text></g><g><title>0x7f333ea5a885 (?) (1 samples, 0.33%)</title><rect x="69" y="820" width="3" height="15" fill="rgb(223,131,2)"/><text x="72.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="836" width="3" height="15" fill="rgb(254,20,23)"/><text x="72.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="852" width="3" height="15" fill="rgb(243,228,21)"/><text x="72.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="868" width="3" height="15" fill="rgb(224,75,5)"/><text x="72.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="69" y="884" width="3" height="15" fill="rgb(238,170,33)"/><text x="72.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="900" width="3" height="15" fill="rgb(246,215,50)"/><text x="72.00" y="910.50"></text></g><g><title>&lt;module&gt; (secrets.py) (1 samples, 0.33%)</title><rect x="69" y="916" width="3" height="15" fill="rgb(229,210,49)"/><text x="72.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="932" width="3" height="15" fill="rgb(236,48,10)"/><text x="72.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="948" width="3" height="15" fill="rgb(233,111,22)"/><text x="72.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="964" width="3" height="15" fill="rgb(244,129,12)"/><text x="72.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="69" y="980" width="3" height="15" fill="rgb(241,172,38)"/><text x="72.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="996" width="3" height="15" fill="rgb(209,131,29)"/><text x="72.00" y="1006.50"></text></g><g><title>&lt;module&gt; (hmac.py) (1 samples, 0.33%)</title><rect x="69" y="1012" width="3" height="15" fill="rgb(249,69,24)"/><text x="72.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1028" width="3" height="15" fill="rgb(227,103,26)"/><text x="72.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1044" width="3" height="15" fill="rgb(243,212,49)"/><text x="72.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1060" width="3" height="15" fill="rgb(253,216,20)"/><text x="72.00" y="1070.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1076" width="3" height="15" fill="rgb(234,169,6)"/><text x="72.00" y="1086.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="69" y="1092" width="3" height="15" fill="rgb(222,62,10)"/><text x="72.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1108" width="3" height="15" fill="rgb(254,200,49)"/><text x="72.00" y="1118.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="69" y="1124" width="3" height="15" fill="rgb(242,48,19)"/><text x="72.00" y="1134.50"></text></g><g><title>0x7f334cd05995 (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="69" y="1140" width="3" height="15" fill="rgb(215,152,53)"/><text x="72.00" y="1150.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.33%)</title><rect x="69" y="1156" width="3" height="15" fill="rgb(228,112,13)"/><text x="72.00" y="1166.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.33%)</title><rect x="69" y="1172" width="3" height="15" fill="rgb(246,106,30)"/><text x="72.00" y="1182.50"></text></g><g><title>0x7f334cd05258 (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="69" y="1188" width="3" height="15" fill="rgb(222,52,0)"/><text x="72.00" y="1198.50"></text></g><g><title>0x7f334cd52d7a (ld-2.29.so) (1 samples, 0.33%)</title><rect x="69" y="1204" width="3" height="15" fill="rgb(229,131,27)"/><text x="72.00" y="1214.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.33%)</title><rect x="69" y="1220" width="3" height="15" fill="rgb(240,159,37)"/><text x="72.00" y="1230.50"></text></g><g><title>0x7f334cd53345 (ld-2.29.so) (1 samples, 0.33%)</title><rect x="69" y="1236" width="3" height="15" fill="rgb(231,162,19)"/><text x="72.00" y="1246.50"></text></g><g><title>0x7f334cd4bf28 (ld-2.29.so) (1 samples, 0.33%)</title><rect x="69" y="1252" width="3" height="15" fill="rgb(236,59,25)"/><text x="72.00" y="1262.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.33%)</title><rect x="76" y="180" width="4" height="15" fill="rgb(224,143,37)"/><text x="79.00" y="190.50"></text></g><g><title>0x7f330cabbff9 (?) (1 samples, 0.33%)</title><rect x="84" y="212" width="4" height="15" fill="rgb(230,127,19)"/><text x="87.00" y="222.50"></text></g><g><title>0x7f330cab6ef6 (?) (1 samples, 0.33%)</title><rect x="84" y="228" width="4" height="15" fill="rgb(209,137,19)"/><text x="87.00" y="238.50"></text></g><g><title>0x7f330caabad0 (?) (1 samples, 0.33%)</title><rect x="84" y="244" width="4" height="15" fill="rgb(237,100,30)"/><text x="87.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.33%)</title><rect x="88" y="212" width="4" height="15" fill="rgb(248,192,7)"/><text x="91.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="88" y="228" width="4" height="15" fill="rgb(220,11,37)"/><text x="91.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="88" y="244" width="4" height="15" fill="rgb(248,163,21)"/><text x="91.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="88" y="260" width="4" height="15" fill="rgb(226,36,5)"/><text x="91.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="88" y="276" width="4" height="15" fill="rgb(207,179,51)"/><text x="91.00" y="286.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="88" y="292" width="4" height="15" fill="rgb(245,113,27)"/><text x="91.00" y="302.50"></text></g><g><title>onnxruntime::Concat::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="96" y="340" width="4" height="15" fill="rgb(241,150,19)"/><text x="99.00" y="350.50"></text></g><g><title>onnxruntime::ConcatBase::PrepareForCompute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="96" y="356" width="4" height="15" fill="rgb(227,20,15)"/><text x="99.00" y="366.50"></text></g><g><title>onnxruntime::CumSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="100" y="340" width="4" height="15" fill="rgb(218,87,45)"/><text x="103.00" y="350.50"></text></g><g><title>(anonymous namespace)::CopySlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="100" y="356" width="4" height="15" fill="rgb(206,131,28)"/><text x="103.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector [clone .constprop.161] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="100" y="372" width="4" height="15" fill="rgb(239,98,22)"/><text x="103.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="100" y="388" width="4" height="15" fill="rgb(214,146,39)"/><text x="103.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="100" y="404" width="4" height="15" fill="rgb(230,165,40)"/><text x="103.00" y="414.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="104" y="340" width="4" height="15" fill="rgb(224,154,21)"/><text x="107.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="104" y="356" width="4" height="15" fill="rgb(225,182,9)"/><text x="107.00" y="366.50"></text></g><g><title>onnxruntime::Broadcaster::~Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="104" y="372" width="4" height="15" fill="rgb(238,93,13)"/><text x="107.00" y="382.50"></text></g><g><title>0x7f333c54a7a0 (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="104" y="388" width="4" height="15" fill="rgb(238,20,31)"/><text x="107.00" y="398.50"></text></g><g><title>0x7f334ca7dbd8 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="112" y="356" width="4" height="15" fill="rgb(242,191,22)"/><text x="115.00" y="366.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.67%)</title><rect x="92" y="244" width="32" height="15" fill="rgb(225,180,22)"/><text x="95.00" y="254.50">on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.67%)</title><rect x="92" y="260" width="32" height="15" fill="rgb(251,226,37)"/><text x="95.00" y="270.50">on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.33%)</title><rect x="96" y="276" width="28" height="15" fill="rgb(213,63,53)"/><text x="99.00" y="286.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.33%)</title><rect x="96" y="292" width="28" height="15" fill="rgb(238,160,27)"/><text x="99.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.33%)</title><rect x="96" y="308" width="28" height="15" fill="rgb(243,123,17)"/><text x="99.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.33%)</title><rect x="96" y="324" width="28" height="15" fill="rgb(231,110,43)"/><text x="99.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.33%)</title><rect x="108" y="340" width="16" height="15" fill="rgb(216,116,41)"/><text x="111.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="116" y="356" width="8" height="15" fill="rgb(230,168,44)"/><text x="119.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="116" y="372" width="8" height="15" fill="rgb(254,199,30)"/><text x="119.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="116" y="388" width="8" height="15" fill="rgb(217,123,48)"/><text x="119.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="116" y="404" width="8" height="15" fill="rgb(242,106,41)"/><text x="119.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="120" y="420" width="4" height="15" fill="rgb(244,53,2)"/><text x="123.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="120" y="436" width="4" height="15" fill="rgb(211,90,18)"/><text x="123.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="120" y="452" width="4" height="15" fill="rgb(213,16,14)"/><text x="123.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="120" y="468" width="4" height="15" fill="rgb(240,225,36)"/><text x="123.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="120" y="484" width="4" height="15" fill="rgb(225,91,19)"/><text x="123.00" y="494.50"></text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (14 samples, 4.67%)</title><rect x="72" y="68" width="56" height="15" fill="rgb(205,32,47)"/><text x="75.00" y="78.50">profi..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (14 samples, 4.67%)</title><rect x="72" y="84" width="56" height="15" fill="rgb(229,82,22)"/><text x="75.00" y="94.50">setup..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (14 samples, 4.67%)</title><rect x="72" y="100" width="56" height="15" fill="rgb(206,59,26)"/><text x="75.00" y="110.50">profi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (14 samples, 4.67%)</title><rect x="72" y="116" width="56" height="15" fill="rgb(234,180,33)"/><text x="75.00" y="126.50">time_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (14 samples, 4.67%)</title><rect x="72" y="132" width="56" height="15" fill="rgb(218,94,8)"/><text x="75.00" y="142.50">&lt;lamb..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (13 samples, 4.33%)</title><rect x="76" y="148" width="52" height="15" fill="rgb(210,195,11)"/><text x="79.00" y="158.50">run (..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (13 samples, 4.33%)</title><rect x="76" y="164" width="52" height="15" fill="rgb(246,187,9)"/><text x="79.00" y="174.50">_run_..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (12 samples, 4.00%)</title><rect x="80" y="180" width="48" height="15" fill="rgb(228,119,33)"/><text x="83.00" y="190.50">run ..</text></g><g><title>run (onnxruntime/capi/session.py) (12 samples, 4.00%)</title><rect x="80" y="196" width="48" height="15" fill="rgb(208,12,7)"/><text x="83.00" y="206.50">run ..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.00%)</title><rect x="92" y="212" width="36" height="15" fill="rgb(253,133,41)"/><text x="95.00" y="222.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.00%)</title><rect x="92" y="228" width="36" height="15" fill="rgb(237,112,31)"/><text x="95.00" y="238.50">voi..</text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="124" y="244" width="4" height="15" fill="rgb(219,15,17)"/><text x="127.00" y="254.50"></text></g><g><title>pybind11::detail::instance::get_value_and_holder (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="124" y="260" width="4" height="15" fill="rgb(237,211,47)"/><text x="127.00" y="270.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.67%)</title><rect x="139" y="180" width="8" height="15" fill="rgb(237,81,5)"/><text x="142.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.33%)</title><rect x="210" y="196" width="4" height="15" fill="rgb(224,86,31)"/><text x="213.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="242" y="228" width="4" height="15" fill="rgb(234,24,44)"/><text x="245.00" y="238.50"></text></g><g><title>array_ravel (methods.c) (1 samples, 0.33%)</title><rect x="246" y="228" width="3" height="15" fill="rgb(225,24,7)"/><text x="249.00" y="238.50"></text></g><g><title>PyArray_Ravel (shape.c) (1 samples, 0.33%)</title><rect x="246" y="244" width="3" height="15" fill="rgb(218,138,25)"/><text x="249.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.33%)</title><rect x="246" y="260" width="3" height="15" fill="rgb(213,40,10)"/><text x="249.00" y="270.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.33%)</title><rect x="249" y="228" width="4" height="15" fill="rgb(251,151,5)"/><text x="252.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.33%)</title><rect x="253" y="244" width="4" height="15" fill="rgb(236,171,8)"/><text x="256.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.33%)</title><rect x="253" y="260" width="4" height="15" fill="rgb(221,200,33)"/><text x="256.00" y="270.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.33%)</title><rect x="257" y="244" width="4" height="15" fill="rgb(229,208,7)"/><text x="260.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.33%)</title><rect x="257" y="260" width="4" height="15" fill="rgb(236,28,51)"/><text x="260.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="257" y="276" width="4" height="15" fill="rgb(253,152,0)"/><text x="260.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.33%)</title><rect x="257" y="292" width="4" height="15" fill="rgb(244,179,0)"/><text x="260.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.33%)</title><rect x="257" y="308" width="4" height="15" fill="rgb(254,194,38)"/><text x="260.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="257" y="324" width="4" height="15" fill="rgb(224,47,47)"/><text x="260.00" y="334.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (1 samples, 0.33%)</title><rect x="261" y="276" width="4" height="15" fill="rgb(247,173,17)"/><text x="264.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c) (1 samples, 0.33%)</title><rect x="261" y="292" width="4" height="15" fill="rgb(228,55,3)"/><text x="264.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (9 samples, 3.00%)</title><rect x="234" y="212" width="35" height="15" fill="rgb(228,196,28)"/><text x="237.00" y="222.50">_r..</text></g><g><title>array_subscript (mapping.c) (4 samples, 1.33%)</title><rect x="253" y="228" width="16" height="15" fill="rgb(212,88,53)"/><text x="256.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (2 samples, 0.67%)</title><rect x="261" y="244" width="8" height="15" fill="rgb(248,210,27)"/><text x="264.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.67%)</title><rect x="261" y="260" width="8" height="15" fill="rgb(215,179,14)"/><text x="264.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.33%)</title><rect x="265" y="276" width="4" height="15" fill="rgb(241,155,36)"/><text x="268.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.67%)</title><rect x="269" y="212" width="8" height="15" fill="rgb(251,78,40)"/><text x="272.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.67%)</title><rect x="269" y="228" width="8" height="15" fill="rgb(227,123,42)"/><text x="272.00" y="238.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.67%)</title><rect x="269" y="244" width="8" height="15" fill="rgb(231,38,38)"/><text x="272.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.67%)</title><rect x="269" y="260" width="8" height="15" fill="rgb(240,162,24)"/><text x="272.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.67%)</title><rect x="269" y="276" width="8" height="15" fill="rgb(223,165,51)"/><text x="272.00" y="286.50"></text></g><g><title>0x7f334ca93e60 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="289" y="308" width="4" height="15" fill="rgb(229,0,17)"/><text x="292.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py) (6 samples, 2.00%)</title><rect x="277" y="212" width="24" height="15" fill="rgb(207,209,14)"/><text x="280.00" y="222.50">_..</text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (5 samples, 1.67%)</title><rect x="281" y="228" width="20" height="15" fill="rgb(220,102,54)"/><text x="284.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.00%)</title><rect x="289" y="244" width="12" height="15" fill="rgb(220,120,8)"/><text x="292.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (3 samples, 1.00%)</title><rect x="289" y="260" width="12" height="15" fill="rgb(228,178,34)"/><text x="292.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 1.00%)</title><rect x="289" y="276" width="12" height="15" fill="rgb(206,107,5)"/><text x="292.00" y="286.50"></text></g><g><title>array_cumsum (methods.c) (3 samples, 1.00%)</title><rect x="289" y="292" width="12" height="15" fill="rgb(213,79,46)"/><text x="292.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c) (2 samples, 0.67%)</title><rect x="293" y="308" width="8" height="15" fill="rgb(234,116,52)"/><text x="296.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (2 samples, 0.67%)</title><rect x="293" y="324" width="8" height="15" fill="rgb(246,49,5)"/><text x="296.00" y="334.50"></text></g><g><title>_get_keywords (number.c) (1 samples, 0.33%)</title><rect x="297" y="340" width="4" height="15" fill="rgb(227,193,44)"/><text x="300.00" y="350.50"></text></g><g><title>_choose_dispatcher (numpy/core/fromnumeric.py) (5 samples, 1.67%)</title><rect x="312" y="260" width="20" height="15" fill="rgb(246,170,9)"/><text x="315.00" y="270.50"></text></g><g><title>array_item (mapping.c) (3 samples, 1.00%)</title><rect x="320" y="276" width="12" height="15" fill="rgb(235,150,30)"/><text x="323.00" y="286.50"></text></g><g><title>array_item_asarray (mapping.c) (3 samples, 1.00%)</title><rect x="320" y="292" width="12" height="15" fill="rgb(223,117,5)"/><text x="323.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c) (3 samples, 1.00%)</title><rect x="320" y="308" width="12" height="15" fill="rgb(244,78,39)"/><text x="323.00" y="318.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.33%)</title><rect x="332" y="308" width="4" height="15" fill="rgb(206,53,41)"/><text x="335.00" y="318.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.33%)</title><rect x="332" y="324" width="4" height="15" fill="rgb(225,17,32)"/><text x="335.00" y="334.50"></text></g><g><title>PyArray_ConvertToCommonType (convert_datatype.c) (1 samples, 0.33%)</title><rect x="340" y="324" width="4" height="15" fill="rgb(215,226,47)"/><text x="343.00" y="334.50"></text></g><g><title>array_item_asarray (mapping.c) (1 samples, 0.33%)</title><rect x="340" y="340" width="4" height="15" fill="rgb(237,54,5)"/><text x="343.00" y="350.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.33%)</title><rect x="340" y="356" width="4" height="15" fill="rgb(232,121,53)"/><text x="343.00" y="366.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.33%)</title><rect x="340" y="372" width="4" height="15" fill="rgb(238,5,24)"/><text x="343.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="340" y="388" width="4" height="15" fill="rgb(244,204,31)"/><text x="343.00" y="398.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.33%)</title><rect x="340" y="404" width="4" height="15" fill="rgb(222,201,3)"/><text x="343.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.33%)</title><rect x="340" y="420" width="4" height="15" fill="rgb(205,110,46)"/><text x="343.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="340" y="436" width="4" height="15" fill="rgb(207,78,38)"/><text x="343.00" y="446.50"></text></g><g><title>0x7f334ca7ef2e (libc-2.29.so) (1 samples, 0.33%)</title><rect x="340" y="452" width="4" height="15" fill="rgb(225,52,51)"/><text x="343.00" y="462.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.33%)</title><rect x="344" y="324" width="4" height="15" fill="rgb(211,135,1)"/><text x="347.00" y="334.50"></text></g><g><title>0x7f334bc9ec90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="352" y="356" width="4" height="15" fill="rgb(207,172,49)"/><text x="355.00" y="366.50"></text></g><g><title>PyArray_MultiIterFromObjects (iterators.c) (3 samples, 1.00%)</title><rect x="348" y="324" width="12" height="15" fill="rgb(206,125,7)"/><text x="351.00" y="334.50"></text></g><g><title>multiiter_new_impl (iterators.c) (3 samples, 1.00%)</title><rect x="348" y="340" width="12" height="15" fill="rgb(246,228,2)"/><text x="351.00" y="350.50"></text></g><g><title>PyArray_IterNew (iterators.c) (1 samples, 0.33%)</title><rect x="356" y="356" width="4" height="15" fill="rgb(212,110,34)"/><text x="359.00" y="366.50"></text></g><g><title>array_iter_base_init (iterators.c) (1 samples, 0.33%)</title><rect x="356" y="372" width="4" height="15" fill="rgb(251,209,5)"/><text x="359.00" y="382.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.33%)</title><rect x="356" y="388" width="4" height="15" fill="rgb(251,197,1)"/><text x="359.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.33%)</title><rect x="360" y="324" width="4" height="15" fill="rgb(238,16,15)"/><text x="363.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="360" y="340" width="4" height="15" fill="rgb(235,49,11)"/><text x="363.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.33%)</title><rect x="360" y="356" width="4" height="15" fill="rgb(241,191,31)"/><text x="363.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.67%)</title><rect x="364" y="324" width="7" height="15" fill="rgb(241,210,51)"/><text x="367.00" y="334.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.67%)</title><rect x="364" y="340" width="7" height="15" fill="rgb(222,220,33)"/><text x="367.00" y="350.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.67%)</title><rect x="364" y="356" width="7" height="15" fill="rgb(241,191,34)"/><text x="367.00" y="366.50"></text></g><g><title>choose (&lt;__array_function__ internals&gt;) (18 samples, 6.00%)</title><rect x="305" y="228" width="70" height="15" fill="rgb(233,77,53)"/><text x="308.00" y="238.50">choose ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (17 samples, 5.67%)</title><rect x="308" y="244" width="67" height="15" fill="rgb(253,25,41)"/><text x="311.00" y="254.50">array_i..</text></g><g><title>choose (numpy/core/fromnumeric.py) (11 samples, 3.67%)</title><rect x="332" y="260" width="43" height="15" fill="rgb(234,32,47)"/><text x="335.00" y="270.50">choo..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (11 samples, 3.67%)</title><rect x="332" y="276" width="43" height="15" fill="rgb(236,71,50)"/><text x="335.00" y="286.50">_wra..</text></g><g><title>array_choose (methods.c) (11 samples, 3.67%)</title><rect x="332" y="292" width="43" height="15" fill="rgb(239,80,47)"/><text x="335.00" y="302.50">arra..</text></g><g><title>PyArray_Choose (item_selection.c) (10 samples, 3.33%)</title><rect x="336" y="308" width="39" height="15" fill="rgb(219,67,13)"/><text x="339.00" y="318.50">PyA..</text></g><g><title>arraymultiter_dealloc (iterators.c) (1 samples, 0.33%)</title><rect x="371" y="324" width="4" height="15" fill="rgb(207,104,9)"/><text x="374.00" y="334.50"></text></g><g><title>0x7f334ca7df71 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="371" y="340" width="4" height="15" fill="rgb(220,149,6)"/><text x="374.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py) (22 samples, 7.33%)</title><rect x="301" y="212" width="86" height="15" fill="rgb(220,152,53)"/><text x="304.00" y="222.50">_run (mlpr..</text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;) (3 samples, 1.00%)</title><rect x="375" y="228" width="12" height="15" fill="rgb(254,67,37)"/><text x="378.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.00%)</title><rect x="375" y="244" width="12" height="15" fill="rgb(224,37,49)"/><text x="378.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py) (1 samples, 0.33%)</title><rect x="383" y="260" width="4" height="15" fill="rgb(226,62,11)"/><text x="386.00" y="270.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (3 samples, 1.00%)</title><rect x="387" y="260" width="12" height="15" fill="rgb(230,120,16)"/><text x="390.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.67%)</title><rect x="391" y="276" width="8" height="15" fill="rgb(253,60,35)"/><text x="394.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (2 samples, 0.67%)</title><rect x="391" y="292" width="8" height="15" fill="rgb(217,223,9)"/><text x="394.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.67%)</title><rect x="391" y="308" width="8" height="15" fill="rgb(253,55,26)"/><text x="394.00" y="318.50"></text></g><g><title>array_argsort (methods.c) (2 samples, 0.67%)</title><rect x="391" y="324" width="8" height="15" fill="rgb(208,38,24)"/><text x="394.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (1 samples, 0.33%)</title><rect x="395" y="340" width="4" height="15" fill="rgb(253,12,36)"/><text x="398.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c) (1 samples, 0.33%)</title><rect x="395" y="356" width="4" height="15" fill="rgb(215,27,50)"/><text x="398.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.33%)</title><rect x="395" y="372" width="4" height="15" fill="rgb(211,88,8)"/><text x="398.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="395" y="388" width="4" height="15" fill="rgb(248,35,39)"/><text x="398.00" y="398.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.33%)</title><rect x="395" y="404" width="4" height="15" fill="rgb(245,141,7)"/><text x="398.00" y="414.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (4 samples, 1.33%)</title><rect x="387" y="212" width="16" height="15" fill="rgb(224,77,18)"/><text x="390.00" y="222.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (4 samples, 1.33%)</title><rect x="387" y="228" width="16" height="15" fill="rgb(223,18,37)"/><text x="390.00" y="238.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py) (4 samples, 1.33%)</title><rect x="387" y="244" width="16" height="15" fill="rgb(241,125,51)"/><text x="390.00" y="254.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.33%)</title><rect x="399" y="260" width="4" height="15" fill="rgb(252,136,7)"/><text x="402.00" y="270.50"></text></g><g><title>arraymapiter_dealloc (mapping.c) (1 samples, 0.33%)</title><rect x="399" y="276" width="4" height="15" fill="rgb(254,179,30)"/><text x="402.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.33%)</title><rect x="399" y="292" width="4" height="15" fill="rgb(210,47,43)"/><text x="402.00" y="302.50"></text></g><g><title>0x7f334ca7d902 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="399" y="308" width="4" height="15" fill="rgb(223,78,42)"/><text x="402.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.33%)</title><rect x="407" y="260" width="4" height="15" fill="rgb(247,20,37)"/><text x="410.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.33%)</title><rect x="407" y="276" width="4" height="15" fill="rgb(249,50,13)"/><text x="410.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.33%)</title><rect x="407" y="292" width="4" height="15" fill="rgb(250,13,48)"/><text x="410.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (2 samples, 0.67%)</title><rect x="407" y="228" width="8" height="15" fill="rgb(237,85,19)"/><text x="410.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.67%)</title><rect x="407" y="244" width="8" height="15" fill="rgb(230,193,49)"/><text x="410.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.33%)</title><rect x="411" y="260" width="4" height="15" fill="rgb(250,30,10)"/><text x="414.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.33%)</title><rect x="411" y="276" width="4" height="15" fill="rgb(245,128,20)"/><text x="414.00" y="286.50"></text></g><g><title>0x7f334ca9e14e (libc-2.29.so) (1 samples, 0.33%)</title><rect x="411" y="292" width="4" height="15" fill="rgb(242,213,48)"/><text x="414.00" y="302.50"></text></g><g><title>argmin (&lt;__array_function__ internals&gt;) (1 samples, 0.33%)</title><rect x="419" y="276" width="4" height="15" fill="rgb(217,171,37)"/><text x="422.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.33%)</title><rect x="419" y="292" width="4" height="15" fill="rgb(250,60,33)"/><text x="422.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (3 samples, 1.00%)</title><rect x="415" y="228" width="11" height="15" fill="rgb(242,145,21)"/><text x="418.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (3 samples, 1.00%)</title><rect x="415" y="244" width="11" height="15" fill="rgb(251,114,1)"/><text x="418.00" y="254.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py) (3 samples, 1.00%)</title><rect x="415" y="260" width="11" height="15" fill="rgb(254,124,14)"/><text x="418.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (1 samples, 0.33%)</title><rect x="423" y="276" width="3" height="15" fill="rgb(231,130,21)"/><text x="426.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.33%)</title><rect x="423" y="292" width="3" height="15" fill="rgb(234,192,14)"/><text x="426.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (1 samples, 0.33%)</title><rect x="423" y="308" width="3" height="15" fill="rgb(230,109,24)"/><text x="426.00" y="318.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.33%)</title><rect x="423" y="324" width="3" height="15" fill="rgb(239,22,10)"/><text x="426.00" y="334.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.33%)</title><rect x="423" y="340" width="3" height="15" fill="rgb(246,144,33)"/><text x="426.00" y="350.50"></text></g><g><title>0x7f334ca93782 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="423" y="356" width="3" height="15" fill="rgb(249,125,38)"/><text x="426.00" y="366.50"></text></g><g><title>0x7f330d51654f (?) (1 samples, 0.33%)</title><rect x="426" y="244" width="4" height="15" fill="rgb(228,107,5)"/><text x="429.00" y="254.50"></text></g><g><title>0x7f330d51c65e (?) (1 samples, 0.33%)</title><rect x="426" y="260" width="4" height="15" fill="rgb(242,143,46)"/><text x="429.00" y="270.50"></text></g><g><title>0x7f330d51c47a (?) (1 samples, 0.33%)</title><rect x="426" y="276" width="4" height="15" fill="rgb(211,59,19)"/><text x="429.00" y="286.50"></text></g><g><title>0x7f330d50113b (?) (1 samples, 0.33%)</title><rect x="426" y="292" width="4" height="15" fill="rgb(237,58,40)"/><text x="429.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="426" y="308" width="4" height="15" fill="rgb(212,110,3)"/><text x="429.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="426" y="324" width="4" height="15" fill="rgb(226,132,38)"/><text x="429.00" y="334.50"></text></g><g><title>0x7f3316a84ea0 (libgomp.so.1.0.0) (1 samples, 0.33%)</title><rect x="434" y="484" width="4" height="15" fill="rgb(233,176,20)"/><text x="437.00" y="494.50"></text></g><g><title>0x7f3316a84ea9 (libgomp.so.1.0.0) (6 samples, 2.00%)</title><rect x="438" y="484" width="24" height="15" fill="rgb(227,20,33)"/><text x="441.00" y="494.50">0..</text></g><g><title>0x7f3316a84eab (libgomp.so.1.0.0) (15 samples, 5.00%)</title><rect x="462" y="484" width="59" height="15" fill="rgb(245,110,46)"/><text x="465.00" y="494.50">0x7f33..</text></g><g><title>0x7f3316a83ab9 (libgomp.so.1.0.0) (33 samples, 11.00%)</title><rect x="434" y="468" width="130" height="15" fill="rgb(235,214,2)"/><text x="437.00" y="478.50">0x7f3316a83ab9 (..</text></g><g><title>0x7f3316a84ead (libgomp.so.1.0.0) (11 samples, 3.67%)</title><rect x="521" y="484" width="43" height="15" fill="rgb(241,21,33)"/><text x="524.00" y="494.50">0x7f..</text></g><g><title>0x7f3316a84cf9 (libgomp.so.1.0.0) (1 samples, 0.33%)</title><rect x="564" y="500" width="4" height="15" fill="rgb(221,53,48)"/><text x="567.00" y="510.50"></text></g><g><title>0x7f3316a84cfb (libgomp.so.1.0.0) (1 samples, 0.33%)</title><rect x="568" y="500" width="4" height="15" fill="rgb(252,93,5)"/><text x="571.00" y="510.50"></text></g><g><title>0x7f3316a84cfd (libgomp.so.1.0.0) (2 samples, 0.67%)</title><rect x="572" y="500" width="8" height="15" fill="rgb(212,142,6)"/><text x="575.00" y="510.50"></text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (116 samples, 38.67%)</title><rect x="128" y="68" width="456" height="15" fill="rgb(225,82,17)"/><text x="131.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_estimato..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (116 samples, 38.67%)</title><rect x="128" y="84" width="456" height="15" fill="rgb(240,227,7)"/><text x="131.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimat..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (116 samples, 38.67%)</title><rect x="128" y="100" width="456" height="15" fill="rgb(245,182,14)"/><text x="131.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (116 samples, 38.67%)</title><rect x="128" y="116" width="456" height="15" fill="rgb(221,31,30)"/><text x="131.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (115 samples, 38.33%)</title><rect x="131" y="132" width="453" height="15" fill="rgb(212,147,54)"/><text x="134.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (115 samples, 38.33%)</title><rect x="131" y="148" width="453" height="15" fill="rgb(226,219,2)"/><text x="134.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (114 samples, 38.00%)</title><rect x="135" y="164" width="449" height="15" fill="rgb(243,71,18)"/><text x="138.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (111 samples, 37.00%)</title><rect x="147" y="180" width="437" height="15" fill="rgb(215,12,47)"/><text x="150.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (94 samples, 31.33%)</title><rect x="214" y="196" width="370" height="15" fill="rgb(205,73,10)"/><text x="217.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (46 samples, 15.33%)</title><rect x="403" y="212" width="181" height="15" fill="rgb(242,142,2)"/><text x="406.00" y="222.50">run (mlprodict/onnxrt/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (40 samples, 13.33%)</title><rect x="426" y="228" width="158" height="15" fill="rgb(244,78,30)"/><text x="429.00" y="238.50">_run (mlprodict/onnx..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (39 samples, 13.00%)</title><rect x="430" y="244" width="154" height="15" fill="rgb(241,216,47)"/><text x="433.00" y="254.50">pybind11::cpp_funct..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (38 samples, 12.67%)</title><rect x="434" y="260" width="150" height="15" fill="rgb(227,78,41)"/><text x="437.00" y="270.50">void pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (38 samples, 12.67%)</title><rect x="434" y="276" width="150" height="15" fill="rgb(218,94,0)"/><text x="437.00" y="286.50">void pybind11::cpp_..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (38 samples, 12.67%)</title><rect x="434" y="292" width="150" height="15" fill="rgb(217,88,38)"/><text x="437.00" y="302.50">pybind11::detail::a..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (38 samples, 12.67%)</title><rect x="434" y="308" width="150" height="15" fill="rgb(229,54,36)"/><text x="437.00" y="318.50">pybind11::detail::a..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (38 samples, 12.67%)</title><rect x="434" y="324" width="150" height="15" fill="rgb(239,60,3)"/><text x="437.00" y="334.50">pybind11::cpp_funct..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (38 samples, 12.67%)</title><rect x="434" y="340" width="150" height="15" fill="rgb(246,66,6)"/><text x="437.00" y="350.50">pybind11::array_t&lt;f..</text></g><g><title>pybind11::array::~array (numpy.h) (38 samples, 12.67%)</title><rect x="434" y="356" width="150" height="15" fill="rgb(253,44,44)"/><text x="437.00" y="366.50">pybind11::array::~a..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (38 samples, 12.67%)</title><rect x="434" y="372" width="150" height="15" fill="rgb(250,197,24)"/><text x="437.00" y="382.50">pybind11::buffer::~..</text></g><g><title>pybind11::object::~object (pytypes.h) (38 samples, 12.67%)</title><rect x="434" y="388" width="150" height="15" fill="rgb(234,135,17)"/><text x="437.00" y="398.50">pybind11::object::~..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (38 samples, 12.67%)</title><rect x="434" y="404" width="150" height="15" fill="rgb(224,42,13)"/><text x="437.00" y="414.50">pybind11::handle::d..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (38 samples, 12.67%)</title><rect x="434" y="420" width="150" height="15" fill="rgb(215,42,15)"/><text x="437.00" y="430.50">RuntimeTreeEnsemble..</text></g><g><title>pybind11::array::size (numpy.h) (38 samples, 12.67%)</title><rect x="434" y="436" width="150" height="15" fill="rgb(228,104,48)"/><text x="437.00" y="446.50">pybind11::array::si..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (38 samples, 12.67%)</title><rect x="434" y="452" width="150" height="15" fill="rgb(217,204,33)"/><text x="437.00" y="462.50">std::accumulate&lt;lon..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (5 samples, 1.67%)</title><rect x="564" y="468" width="20" height="15" fill="rgb(205,37,49)"/><text x="567.00" y="478.50"></text></g><g><title>0x7f3316a82daa (libgomp.so.1.0.0) (5 samples, 1.67%)</title><rect x="564" y="484" width="20" height="15" fill="rgb(237,157,6)"/><text x="567.00" y="494.50"></text></g><g><title>0x7f3316a84d6d (libgomp.so.1.0.0) (1 samples, 0.33%)</title><rect x="580" y="500" width="4" height="15" fill="rgb(229,112,40)"/><text x="583.00" y="510.50"></text></g><g><title>0x7f33264a9228 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="619" y="308" width="4" height="15" fill="rgb(241,74,40)"/><text x="622.00" y="318.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.33%)</title><rect x="627" y="372" width="4" height="15" fill="rgb(241,214,54)"/><text x="630.00" y="382.50"></text></g><g><title>0x7f33264a92fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.00%)</title><rect x="623" y="308" width="12" height="15" fill="rgb(236,141,2)"/><text x="626.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 1.00%)</title><rect x="623" y="324" width="12" height="15" fill="rgb(240,53,44)"/><text x="626.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 1.00%)</title><rect x="623" y="340" width="12" height="15" fill="rgb(249,133,27)"/><text x="626.00" y="350.50"></text></g><g><title>_buffer_info_new (buffer.c) (3 samples, 1.00%)</title><rect x="623" y="356" width="12" height="15" fill="rgb(243,211,47)"/><text x="626.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="631" y="372" width="4" height="15" fill="rgb(247,73,37)"/><text x="634.00" y="382.50"></text></g><g><title>0x7f33264cf2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.67%)</title><rect x="619" y="260" width="20" height="15" fill="rgb(223,203,35)"/><text x="622.00" y="270.50"></text></g><g><title>0x7f33264b3d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.67%)</title><rect x="619" y="276" width="20" height="15" fill="rgb(230,75,22)"/><text x="622.00" y="286.50"></text></g><g><title>0x7f33264b3666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.67%)</title><rect x="619" y="292" width="20" height="15" fill="rgb(252,229,9)"/><text x="622.00" y="302.50"></text></g><g><title>0x7f33264a9467 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="635" y="308" width="4" height="15" fill="rgb(228,90,38)"/><text x="638.00" y="318.50"></text></g><g><title>0x7f33264cf364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="639" y="260" width="4" height="15" fill="rgb(231,16,8)"/><text x="642.00" y="270.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.33%)</title><rect x="639" y="276" width="4" height="15" fill="rgb(224,222,37)"/><text x="642.00" y="286.50"></text></g><g><title>0x7f33264cf456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="643" y="260" width="4" height="15" fill="rgb(242,13,37)"/><text x="646.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.33%)</title><rect x="647" y="292" width="4" height="15" fill="rgb(239,180,44)"/><text x="650.00" y="302.50"></text></g><g><title>0x7f334bca0020 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="647" y="308" width="4" height="15" fill="rgb(239,4,5)"/><text x="650.00" y="318.50"></text></g><g><title>0x7f33264cf592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.67%)</title><rect x="647" y="260" width="8" height="15" fill="rgb(252,78,47)"/><text x="650.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c) (2 samples, 0.67%)</title><rect x="647" y="276" width="8" height="15" fill="rgb(206,197,42)"/><text x="650.00" y="286.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.33%)</title><rect x="651" y="292" width="4" height="15" fill="rgb(232,79,0)"/><text x="654.00" y="302.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.33%)</title><rect x="651" y="308" width="4" height="15" fill="rgb(219,31,5)"/><text x="654.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="651" y="324" width="4" height="15" fill="rgb(211,94,33)"/><text x="654.00" y="334.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (1 samples, 0.33%)</title><rect x="651" y="340" width="4" height="15" fill="rgb(245,153,18)"/><text x="654.00" y="350.50"></text></g><g><title>0x7f334bc9ec90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="651" y="356" width="4" height="15" fill="rgb(254,39,17)"/><text x="654.00" y="366.50"></text></g><g><title>0x7f33264cf693 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="655" y="260" width="4" height="15" fill="rgb(223,86,9)"/><text x="658.00" y="270.50"></text></g><g><title>0x7f33264cf6fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="659" y="260" width="3" height="15" fill="rgb(224,69,30)"/><text x="662.00" y="270.50"></text></g><g><title>0x7f33264a7529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="662" y="276" width="4" height="15" fill="rgb(234,135,15)"/><text x="665.00" y="286.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.33%)</title><rect x="662" y="292" width="4" height="15" fill="rgb(220,95,13)"/><text x="665.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.33%)</title><rect x="662" y="308" width="4" height="15" fill="rgb(227,1,31)"/><text x="665.00" y="318.50"></text></g><g><title>0x7f33264a6d83 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="666" y="308" width="4" height="15" fill="rgb(219,107,30)"/><text x="669.00" y="318.50"></text></g><g><title>0x7f33264c0fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 4.67%)</title><rect x="619" y="228" width="55" height="15" fill="rgb(236,167,21)"/><text x="622.00" y="238.50">0x7f3..</text></g><g><title>0x7f33264d0405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 4.67%)</title><rect x="619" y="244" width="55" height="15" fill="rgb(216,41,13)"/><text x="622.00" y="254.50">0x7f3..</text></g><g><title>0x7f33264cfc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.00%)</title><rect x="662" y="260" width="12" height="15" fill="rgb(216,223,35)"/><text x="665.00" y="270.50"></text></g><g><title>0x7f33264a75f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.67%)</title><rect x="666" y="276" width="8" height="15" fill="rgb(219,224,1)"/><text x="669.00" y="286.50"></text></g><g><title>0x7f33264a72bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.67%)</title><rect x="666" y="292" width="8" height="15" fill="rgb(231,116,29)"/><text x="669.00" y="302.50"></text></g><g><title>0x7f33264a6db9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="670" y="308" width="4" height="15" fill="rgb(212,112,11)"/><text x="673.00" y="318.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (1 samples, 0.33%)</title><rect x="674" y="276" width="4" height="15" fill="rgb(230,83,29)"/><text x="677.00" y="286.50"></text></g><g><title>0x7f33264c105a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.67%)</title><rect x="674" y="228" width="8" height="15" fill="rgb(248,103,51)"/><text x="677.00" y="238.50"></text></g><g><title>array_take (methods.c) (2 samples, 0.67%)</title><rect x="674" y="244" width="8" height="15" fill="rgb(237,74,21)"/><text x="677.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (2 samples, 0.67%)</title><rect x="674" y="260" width="8" height="15" fill="rgb(225,213,17)"/><text x="677.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.33%)</title><rect x="678" y="276" width="4" height="15" fill="rgb(214,188,4)"/><text x="681.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="678" y="292" width="4" height="15" fill="rgb(220,124,36)"/><text x="681.00" y="302.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.33%)</title><rect x="678" y="308" width="4" height="15" fill="rgb(247,35,46)"/><text x="681.00" y="318.50"></text></g><g><title>0x7f33264c114f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="682" y="228" width="4" height="15" fill="rgb(248,7,50)"/><text x="685.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="682" y="244" width="4" height="15" fill="rgb(219,90,21)"/><text x="685.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.33%)</title><rect x="682" y="260" width="4" height="15" fill="rgb(221,73,8)"/><text x="685.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.33%)</title><rect x="682" y="276" width="4" height="15" fill="rgb(208,209,43)"/><text x="685.00" y="286.50"></text></g><g><title>0x7f33264c118f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="686" y="228" width="4" height="15" fill="rgb(249,12,41)"/><text x="689.00" y="238.50"></text></g><g><title>0x7f33264c12b5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="690" y="228" width="4" height="15" fill="rgb(211,164,38)"/><text x="693.00" y="238.50"></text></g><g><title>0x7f33264c1328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="694" y="228" width="4" height="15" fill="rgb(222,160,1)"/><text x="697.00" y="238.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.33%)</title><rect x="694" y="244" width="4" height="15" fill="rgb(222,49,29)"/><text x="697.00" y="254.50"></text></g><g><title>0x7f33264c1d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (21 samples, 7.00%)</title><rect x="619" y="212" width="83" height="15" fill="rgb(206,30,6)"/><text x="622.00" y="222.50">0x7f33264..</text></g><g><title>0x7f33264c1518 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="698" y="228" width="4" height="15" fill="rgb(247,104,22)"/><text x="701.00" y="238.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.67%)</title><rect x="749" y="244" width="8" height="15" fill="rgb(241,178,37)"/><text x="752.00" y="254.50"></text></g><g><title>__exit__ (warnings.py) (3 samples, 1.00%)</title><rect x="757" y="244" width="12" height="15" fill="rgb(209,191,11)"/><text x="760.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="780" y="260" width="12" height="15" fill="rgb(209,59,11)"/><text x="783.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (9 samples, 3.00%)</title><rect x="769" y="244" width="35" height="15" fill="rgb(224,187,23)"/><text x="772.00" y="254.50">_a..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="792" y="260" width="12" height="15" fill="rgb(249,1,40)"/><text x="795.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py) (4 samples, 1.33%)</title><rect x="816" y="260" width="16" height="15" fill="rgb(243,6,40)"/><text x="819.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (8 samples, 2.67%)</title><rect x="804" y="244" width="32" height="15" fill="rgb(247,188,6)"/><text x="807.00" y="254.50">_n..</text></g><g><title>array_shape_get (getset.c) (1 samples, 0.33%)</title><rect x="832" y="260" width="4" height="15" fill="rgb(244,95,3)"/><text x="835.00" y="270.50"></text></g><g><title>arraydescr_new (descriptor.c) (3 samples, 1.00%)</title><rect x="836" y="244" width="11" height="15" fill="rgb(239,178,18)"/><text x="839.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (2 samples, 0.67%)</title><rect x="839" y="260" width="8" height="15" fill="rgb(243,126,36)"/><text x="842.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.33%)</title><rect x="843" y="276" width="4" height="15" fill="rgb(214,151,13)"/><text x="846.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.33%)</title><rect x="843" y="292" width="4" height="15" fill="rgb(220,160,31)"/><text x="846.00" y="302.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (5 samples, 1.67%)</title><rect x="847" y="244" width="20" height="15" fill="rgb(250,102,17)"/><text x="850.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 1.00%)</title><rect x="855" y="260" width="12" height="15" fill="rgb(220,44,20)"/><text x="858.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.33%)</title><rect x="863" y="276" width="4" height="15" fill="rgb(224,114,36)"/><text x="866.00" y="286.50"></text></g><g><title>0x7f334cb5b134 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="863" y="292" width="4" height="15" fill="rgb(246,101,13)"/><text x="866.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (50 samples, 16.67%)</title><rect x="702" y="212" width="196" height="15" fill="rgb(231,108,30)"/><text x="705.00" y="222.50">_validate_X_predict (skle..</text></g><g><title>check_array (sklearn/utils/validation.py) (50 samples, 16.67%)</title><rect x="702" y="228" width="196" height="15" fill="rgb(254,154,30)"/><text x="705.00" y="238.50">check_array (sklearn/util..</text></g><g><title>simplefilter (warnings.py) (8 samples, 2.67%)</title><rect x="867" y="244" width="31" height="15" fill="rgb(235,226,24)"/><text x="870.00" y="254.50">si..</text></g><g><title>_add_filter (warnings.py) (7 samples, 2.33%)</title><rect x="871" y="260" width="27" height="15" fill="rgb(238,16,14)"/><text x="874.00" y="270.50">_..</text></g><g><title>0x7f334ca93e50 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="895" y="276" width="3" height="15" fill="rgb(231,126,54)"/><text x="898.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (10 samples, 3.33%)</title><rect x="902" y="228" width="40" height="15" fill="rgb(210,126,17)"/><text x="905.00" y="238.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.33%)</title><rect x="938" y="244" width="4" height="15" fill="rgb(233,57,11)"/><text x="941.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (12 samples, 4.00%)</title><rect x="898" y="212" width="48" height="15" fill="rgb(238,171,17)"/><text x="901.00" y="222.50">chec..</text></g><g><title>isclass (inspect.py) (1 samples, 0.33%)</title><rect x="942" y="228" width="4" height="15" fill="rgb(209,63,19)"/><text x="945.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py) (89 samples, 29.67%)</title><rect x="607" y="180" width="350" height="15" fill="rgb(205,3,21)"/><text x="610.00" y="190.50">&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.p..</text></g><g><title>predict (sklearn/tree/_classes.py) (88 samples, 29.33%)</title><rect x="611" y="196" width="346" height="15" fill="rgb(219,117,38)"/><text x="614.00" y="206.50">predict (sklearn/tree/_classes.py)</text></g><g><title>is_classifier (sklearn/base.py) (3 samples, 1.00%)</title><rect x="946" y="212" width="11" height="15" fill="rgb(235,99,14)"/><text x="949.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.33%)</title><rect x="957" y="180" width="4" height="15" fill="rgb(208,215,29)"/><text x="960.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.33%)</title><rect x="957" y="196" width="4" height="15" fill="rgb(244,15,30)"/><text x="960.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.33%)</title><rect x="957" y="212" width="4" height="15" fill="rgb(244,15,12)"/><text x="960.00" y="222.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.33%)</title><rect x="957" y="228" width="4" height="15" fill="rgb(254,157,33)"/><text x="960.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.33%)</title><rect x="981" y="196" width="4" height="15" fill="rgb(247,12,1)"/><text x="984.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (7 samples, 2.33%)</title><rect x="961" y="180" width="28" height="15" fill="rgb(250,134,42)"/><text x="964.00" y="190.50">_..</text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.33%)</title><rect x="985" y="196" width="4" height="15" fill="rgb(217,33,17)"/><text x="988.00" y="206.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (3 samples, 1.00%)</title><rect x="989" y="180" width="12" height="15" fill="rgb(246,16,3)"/><text x="992.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.00%)</title><rect x="989" y="196" width="12" height="15" fill="rgb(239,147,24)"/><text x="992.00" y="206.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (3 samples, 1.00%)</title><rect x="989" y="212" width="12" height="15" fill="rgb(250,3,2)"/><text x="992.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.67%)</title><rect x="993" y="228" width="8" height="15" fill="rgb(233,99,54)"/><text x="996.00" y="238.50"></text></g><g><title>array_argsort (methods.c) (1 samples, 0.33%)</title><rect x="997" y="244" width="4" height="15" fill="rgb(205,165,44)"/><text x="1000.00" y="254.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (1 samples, 0.33%)</title><rect x="997" y="260" width="4" height="15" fill="rgb(250,71,37)"/><text x="1000.00" y="270.50"></text></g><g><title>_new_argsortlike (item_selection.c) (1 samples, 0.33%)</title><rect x="997" y="276" width="4" height="15" fill="rgb(218,182,28)"/><text x="1000.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="997" y="292" width="4" height="15" fill="rgb(228,121,14)"/><text x="1000.00" y="302.50"></text></g><g><title>array_arange (multiarraymodule.c) (2 samples, 0.67%)</title><rect x="1001" y="180" width="8" height="15" fill="rgb(211,224,0)"/><text x="1004.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c) (2 samples, 0.67%)</title><rect x="1001" y="196" width="8" height="15" fill="rgb(206,22,19)"/><text x="1004.00" y="206.50"></text></g><g><title>_calc_length (ctors.c) (2 samples, 0.67%)</title><rect x="1001" y="212" width="8" height="15" fill="rgb(208,113,53)"/><text x="1004.00" y="222.50"></text></g><g><title>0x7f334bca0350 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="1005" y="228" width="4" height="15" fill="rgb(247,115,39)"/><text x="1008.00" y="238.50"></text></g><g><title>array_argmax (methods.c) (1 samples, 0.33%)</title><rect x="1009" y="180" width="4" height="15" fill="rgb(220,134,29)"/><text x="1012.00" y="190.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.33%)</title><rect x="1009" y="196" width="4" height="15" fill="rgb(222,59,10)"/><text x="1012.00" y="206.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.33%)</title><rect x="1009" y="212" width="4" height="15" fill="rgb(228,125,11)"/><text x="1012.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="1013" y="180" width="3" height="15" fill="rgb(239,187,21)"/><text x="1016.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.33%)</title><rect x="1013" y="196" width="3" height="15" fill="rgb(228,124,46)"/><text x="1016.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.33%)</title><rect x="1013" y="212" width="3" height="15" fill="rgb(230,149,21)"/><text x="1016.00" y="222.50"></text></g><g><title>array_multiply (number.c) (1 samples, 0.33%)</title><rect x="1016" y="180" width="4" height="15" fill="rgb(231,89,52)"/><text x="1019.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1016" y="196" width="4" height="15" fill="rgb(247,160,30)"/><text x="1019.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1016" y="212" width="4" height="15" fill="rgb(212,196,36)"/><text x="1019.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1016" y="228" width="4" height="15" fill="rgb(251,25,33)"/><text x="1019.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.33%)</title><rect x="1016" y="244" width="4" height="15" fill="rgb(251,211,10)"/><text x="1019.00" y="254.50"></text></g><g><title>binop_should_defer (binop_override.h) (1 samples, 0.33%)</title><rect x="1024" y="196" width="4" height="15" fill="rgb(250,176,41)"/><text x="1027.00" y="206.50"></text></g><g><title>array_richcompare (arrayobject.c) (4 samples, 1.33%)</title><rect x="1020" y="180" width="16" height="15" fill="rgb(249,31,5)"/><text x="1023.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.67%)</title><rect x="1028" y="196" width="8" height="15" fill="rgb(236,186,24)"/><text x="1031.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.67%)</title><rect x="1028" y="212" width="8" height="15" fill="rgb(235,102,3)"/><text x="1031.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.67%)</title><rect x="1028" y="228" width="8" height="15" fill="rgb(234,203,41)"/><text x="1031.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.67%)</title><rect x="1028" y="244" width="8" height="15" fill="rgb(229,87,40)"/><text x="1031.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.67%)</title><rect x="1028" y="260" width="8" height="15" fill="rgb(222,195,0)"/><text x="1031.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.67%)</title><rect x="1028" y="276" width="8" height="15" fill="rgb(205,163,43)"/><text x="1031.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1032" y="292" width="4" height="15" fill="rgb(246,16,30)"/><text x="1035.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.33%)</title><rect x="1032" y="308" width="4" height="15" fill="rgb(237,55,31)"/><text x="1035.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="1032" y="324" width="4" height="15" fill="rgb(248,228,7)"/><text x="1035.00" y="334.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (1 samples, 0.33%)</title><rect x="1036" y="212" width="4" height="15" fill="rgb(238,145,22)"/><text x="1039.00" y="222.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (1 samples, 0.33%)</title><rect x="1036" y="228" width="4" height="15" fill="rgb(254,139,37)"/><text x="1039.00" y="238.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.33%)</title><rect x="1036" y="244" width="4" height="15" fill="rgb(233,145,29)"/><text x="1039.00" y="254.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.67%)</title><rect x="1036" y="180" width="8" height="15" fill="rgb(211,229,39)"/><text x="1039.00" y="190.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (2 samples, 0.67%)</title><rect x="1036" y="196" width="8" height="15" fill="rgb(217,101,3)"/><text x="1039.00" y="206.50"></text></g><g><title>PyArray_OverflowMultiplyList (multiarraymodule.c) (1 samples, 0.33%)</title><rect x="1040" y="212" width="4" height="15" fill="rgb(241,185,24)"/><text x="1043.00" y="222.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.33%)</title><rect x="1048" y="292" width="4" height="15" fill="rgb(239,190,42)"/><text x="1051.00" y="302.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.33%)</title><rect x="1048" y="308" width="4" height="15" fill="rgb(218,187,47)"/><text x="1051.00" y="318.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (3 samples, 1.00%)</title><rect x="1048" y="196" width="12" height="15" fill="rgb(241,12,36)"/><text x="1051.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.00%)</title><rect x="1048" y="212" width="12" height="15" fill="rgb(241,35,36)"/><text x="1051.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py) (3 samples, 1.00%)</title><rect x="1048" y="228" width="12" height="15" fill="rgb(213,226,0)"/><text x="1051.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (3 samples, 1.00%)</title><rect x="1048" y="244" width="12" height="15" fill="rgb(208,20,20)"/><text x="1051.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (3 samples, 1.00%)</title><rect x="1048" y="260" width="12" height="15" fill="rgb(254,79,26)"/><text x="1051.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (3 samples, 1.00%)</title><rect x="1048" y="276" width="12" height="15" fill="rgb(211,197,32)"/><text x="1051.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.67%)</title><rect x="1052" y="292" width="8" height="15" fill="rgb(246,125,26)"/><text x="1055.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.67%)</title><rect x="1052" y="308" width="8" height="15" fill="rgb(219,222,33)"/><text x="1055.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.67%)</title><rect x="1052" y="324" width="8" height="15" fill="rgb(223,148,4)"/><text x="1055.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.67%)</title><rect x="1052" y="340" width="8" height="15" fill="rgb(228,98,38)"/><text x="1055.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.67%)</title><rect x="1052" y="356" width="8" height="15" fill="rgb(220,228,16)"/><text x="1055.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.67%)</title><rect x="1052" y="372" width="8" height="15" fill="rgb(213,128,20)"/><text x="1055.00" y="382.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.33%)</title><rect x="1056" y="388" width="4" height="15" fill="rgb(228,60,23)"/><text x="1059.00" y="398.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (1 samples, 0.33%)</title><rect x="1060" y="196" width="4" height="15" fill="rgb(221,79,47)"/><text x="1063.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.33%)</title><rect x="1060" y="212" width="4" height="15" fill="rgb(219,219,24)"/><text x="1063.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (1 samples, 0.33%)</title><rect x="1060" y="228" width="4" height="15" fill="rgb(226,216,24)"/><text x="1063.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.33%)</title><rect x="1060" y="244" width="4" height="15" fill="rgb(235,108,24)"/><text x="1063.00" y="254.50"></text></g><g><title>array_cumsum (methods.c) (1 samples, 0.33%)</title><rect x="1060" y="260" width="4" height="15" fill="rgb(213,117,13)"/><text x="1063.00" y="270.50"></text></g><g><title>PyArray_CumSum (calculation.c) (1 samples, 0.33%)</title><rect x="1060" y="276" width="4" height="15" fill="rgb(220,228,43)"/><text x="1063.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (1 samples, 0.33%)</title><rect x="1060" y="292" width="4" height="15" fill="rgb(248,68,13)"/><text x="1063.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1060" y="308" width="4" height="15" fill="rgb(249,209,0)"/><text x="1063.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1060" y="324" width="4" height="15" fill="rgb(207,83,32)"/><text x="1063.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1060" y="340" width="4" height="15" fill="rgb(218,28,3)"/><text x="1063.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1060" y="356" width="4" height="15" fill="rgb(234,50,48)"/><text x="1063.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1072" y="372" width="3" height="15" fill="rgb(247,55,1)"/><text x="1075.00" y="382.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1075" y="372" width="4" height="15" fill="rgb(229,222,12)"/><text x="1078.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1075" y="388" width="4" height="15" fill="rgb(228,129,28)"/><text x="1078.00" y="398.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (3 samples, 1.00%)</title><rect x="1072" y="244" width="11" height="15" fill="rgb(254,22,19)"/><text x="1075.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.00%)</title><rect x="1072" y="260" width="11" height="15" fill="rgb(207,39,51)"/><text x="1075.00" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py) (3 samples, 1.00%)</title><rect x="1072" y="276" width="11" height="15" fill="rgb(226,155,41)"/><text x="1075.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (3 samples, 1.00%)</title><rect x="1072" y="292" width="11" height="15" fill="rgb(253,80,29)"/><text x="1075.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (3 samples, 1.00%)</title><rect x="1072" y="308" width="11" height="15" fill="rgb(238,86,47)"/><text x="1075.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (3 samples, 1.00%)</title><rect x="1072" y="324" width="11" height="15" fill="rgb(230,166,17)"/><text x="1075.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (3 samples, 1.00%)</title><rect x="1072" y="340" width="11" height="15" fill="rgb(252,22,44)"/><text x="1075.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (3 samples, 1.00%)</title><rect x="1072" y="356" width="11" height="15" fill="rgb(244,70,16)"/><text x="1075.00" y="366.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c) (1 samples, 0.33%)</title><rect x="1079" y="372" width="4" height="15" fill="rgb(226,210,40)"/><text x="1082.00" y="382.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (1 samples, 0.33%)</title><rect x="1099" y="292" width="4" height="15" fill="rgb(228,95,12)"/><text x="1102.00" y="302.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py) (4 samples, 1.33%)</title><rect x="1091" y="260" width="16" height="15" fill="rgb(208,152,40)"/><text x="1094.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (3 samples, 1.00%)</title><rect x="1095" y="276" width="12" height="15" fill="rgb(210,153,53)"/><text x="1098.00" y="286.50"></text></g><g><title>ufunc_seterr (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1103" y="292" width="4" height="15" fill="rgb(236,65,45)"/><text x="1106.00" y="302.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py) (1 samples, 0.33%)</title><rect x="1107" y="260" width="4" height="15" fill="rgb(253,65,2)"/><text x="1110.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (1 samples, 0.33%)</title><rect x="1107" y="276" width="4" height="15" fill="rgb(218,138,17)"/><text x="1110.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (1 samples, 0.33%)</title><rect x="1107" y="292" width="4" height="15" fill="rgb(249,82,4)"/><text x="1110.00" y="302.50"></text></g><g><title>__init__ (numpy/core/_ufunc_config.py) (1 samples, 0.33%)</title><rect x="1111" y="260" width="4" height="15" fill="rgb(250,100,17)"/><text x="1114.00" y="270.50"></text></g><g><title>array_add (number.c) (1 samples, 0.33%)</title><rect x="1115" y="260" width="4" height="15" fill="rgb(235,59,19)"/><text x="1118.00" y="270.50"></text></g><g><title>PyArray_GenericBinaryFunction (number.c) (1 samples, 0.33%)</title><rect x="1115" y="276" width="4" height="15" fill="rgb(220,142,36)"/><text x="1118.00" y="286.50"></text></g><g><title>array_multiply (number.c) (1 samples, 0.33%)</title><rect x="1119" y="260" width="4" height="15" fill="rgb(252,209,8)"/><text x="1122.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1119" y="276" width="4" height="15" fill="rgb(232,4,35)"/><text x="1122.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1119" y="292" width="4" height="15" fill="rgb(243,87,33)"/><text x="1122.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="1119" y="308" width="4" height="15" fill="rgb(246,166,10)"/><text x="1122.00" y="318.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.33%)</title><rect x="1119" y="324" width="4" height="15" fill="rgb(208,170,47)"/><text x="1122.00" y="334.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.33%)</title><rect x="1119" y="340" width="4" height="15" fill="rgb(232,183,49)"/><text x="1122.00" y="350.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;) (16 samples, 5.33%)</title><rect x="1064" y="196" width="63" height="15" fill="rgb(213,180,44)"/><text x="1067.00" y="206.50">isclos..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (16 samples, 5.33%)</title><rect x="1064" y="212" width="63" height="15" fill="rgb(226,68,27)"/><text x="1067.00" y="222.50">array_..</text></g><g><title>isclose (numpy/core/numeric.py) (16 samples, 5.33%)</title><rect x="1064" y="228" width="63" height="15" fill="rgb(216,78,26)"/><text x="1067.00" y="238.50">isclos..</text></g><g><title>within_tol (numpy/core/numeric.py) (11 samples, 3.67%)</title><rect x="1083" y="244" width="44" height="15" fill="rgb(222,95,29)"/><text x="1086.00" y="254.50">with..</text></g><g><title>array_subtract (number.c) (1 samples, 0.33%)</title><rect x="1123" y="260" width="4" height="15" fill="rgb(222,179,48)"/><text x="1126.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1123" y="276" width="4" height="15" fill="rgb(223,85,22)"/><text x="1126.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1123" y="292" width="4" height="15" fill="rgb(215,119,33)"/><text x="1126.00" y="302.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1123" y="308" width="4" height="15" fill="rgb(235,171,9)"/><text x="1126.00" y="318.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.33%)</title><rect x="1123" y="324" width="4" height="15" fill="rgb(222,208,25)"/><text x="1126.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.33%)</title><rect x="1131" y="276" width="3" height="15" fill="rgb(208,114,27)"/><text x="1134.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.33%)</title><rect x="1131" y="292" width="3" height="15" fill="rgb(251,13,16)"/><text x="1134.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.33%)</title><rect x="1131" y="308" width="3" height="15" fill="rgb(224,32,7)"/><text x="1134.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.33%)</title><rect x="1131" y="324" width="3" height="15" fill="rgb(223,100,3)"/><text x="1134.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.33%)</title><rect x="1131" y="340" width="3" height="15" fill="rgb(205,211,28)"/><text x="1134.00" y="350.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py) (140 samples, 46.67%)</title><rect x="588" y="164" width="550" height="15" fill="rgb(218,103,5)"/><text x="591.00" y="174.50">_get_median_predict (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py) (24 samples, 8.00%)</title><rect x="1044" y="180" width="94" height="15" fill="rgb(208,148,37)"/><text x="1047.00" y="190.50">stable_cums..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (3 samples, 1.00%)</title><rect x="1127" y="196" width="11" height="15" fill="rgb(239,194,36)"/><text x="1130.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.67%)</title><rect x="1131" y="212" width="7" height="15" fill="rgb(236,108,24)"/><text x="1134.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (2 samples, 0.67%)</title><rect x="1131" y="228" width="7" height="15" fill="rgb(220,211,10)"/><text x="1134.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (2 samples, 0.67%)</title><rect x="1131" y="244" width="7" height="15" fill="rgb(242,20,53)"/><text x="1134.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.67%)</title><rect x="1131" y="260" width="7" height="15" fill="rgb(211,130,39)"/><text x="1134.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1134" y="276" width="4" height="15" fill="rgb(238,127,21)"/><text x="1137.00" y="286.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.33%)</title><rect x="1150" y="196" width="4" height="15" fill="rgb(212,21,52)"/><text x="1153.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.33%)</title><rect x="1154" y="196" width="4" height="15" fill="rgb(213,58,30)"/><text x="1157.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.33%)</title><rect x="1158" y="196" width="4" height="15" fill="rgb(238,2,26)"/><text x="1161.00" y="206.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (8 samples, 2.67%)</title><rect x="1138" y="164" width="32" height="15" fill="rgb(253,60,4)"/><text x="1141.00" y="174.50">_v..</text></g><g><title>check_array (sklearn/utils/validation.py) (8 samples, 2.67%)</title><rect x="1138" y="180" width="32" height="15" fill="rgb(240,51,45)"/><text x="1141.00" y="190.50">ch..</text></g><g><title>simplefilter (warnings.py) (2 samples, 0.67%)</title><rect x="1162" y="196" width="8" height="15" fill="rgb(227,205,30)"/><text x="1165.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.67%)</title><rect x="1162" y="212" width="8" height="15" fill="rgb(249,161,54)"/><text x="1165.00" y="222.50"></text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (152 samples, 50.67%)</title><rect x="584" y="100" width="598" height="15" fill="rgb(233,183,19)"/><text x="587.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (152 samples, 50.67%)</title><rect x="584" y="116" width="598" height="15" fill="rgb(210,187,52)"/><text x="587.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (152 samples, 50.67%)</title><rect x="584" y="132" width="598" height="15" fill="rgb(252,204,28)"/><text x="587.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py) (152 samples, 50.67%)</title><rect x="584" y="148" width="598" height="15" fill="rgb(247,143,7)"/><text x="587.00" y="158.50">predict (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (3 samples, 1.00%)</title><rect x="1170" y="164" width="12" height="15" fill="rgb(220,171,32)"/><text x="1173.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (3 samples, 1.00%)</title><rect x="1170" y="180" width="12" height="15" fill="rgb(210,224,31)"/><text x="1173.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.33%)</title><rect x="1178" y="196" width="4" height="15" fill="rgb(220,112,10)"/><text x="1181.00" y="206.50"></text></g><g><title>all (300 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(234,118,0)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (300 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(212,114,10)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (154 samples, 51.33%)</title><rect x="584" y="68" width="606" height="15" fill="rgb(248,135,51)"/><text x="587.00" y="78.50">profile_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (154 samples, 51.33%)</title><rect x="584" y="84" width="606" height="15" fill="rgb(241,160,20)"/><text x="587.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.p..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.67%)</title><rect x="1182" y="100" width="8" height="15" fill="rgb(212,121,49)"/><text x="1185.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.67%)</title><rect x="1182" y="116" width="8" height="15" fill="rgb(252,99,19)"/><text x="1185.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.67%)</title><rect x="1182" y="132" width="8" height="15" fill="rgb(253,70,34)"/><text x="1185.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (2 samples, 0.67%)</title><rect x="1182" y="148" width="8" height="15" fill="rgb(248,195,50)"/><text x="1185.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (2 samples, 0.67%)</title><rect x="1182" y="164" width="8" height="15" fill="rgb(235,192,5)"/><text x="1185.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (2 samples, 0.67%)</title><rect x="1182" y="180" width="8" height="15" fill="rgb(252,176,20)"/><text x="1185.00" y="190.50"></text></g><g><title>0x7f333add106a (?) (1 samples, 0.33%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(222,148,3)"/><text x="1189.00" y="206.50"></text></g><g><title>0x7f333add0eb4 (?) (1 samples, 0.33%)</title><rect x="1186" y="212" width="4" height="15" fill="rgb(221,210,40)"/><text x="1189.00" y="222.50"></text></g><g><title>0x7f333adce92a (?) (1 samples, 0.33%)</title><rect x="1186" y="228" width="4" height="15" fill="rgb(243,119,27)"/><text x="1189.00" y="238.50"></text></g><g><title>0x7f333adcd8e5 (?) (1 samples, 0.33%)</title><rect x="1186" y="244" width="4" height="15" fill="rgb(254,221,46)"/><text x="1189.00" y="254.50"></text></g><g><title>0x7f333adcb332 (?) (1 samples, 0.33%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(213,4,28)"/><text x="1189.00" y="270.50"></text></g></g></svg>