<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2102" onload="init(evt)" viewBox="0 0 1200 2102" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2102" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2085.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2085.00"> </text><g id="frames"><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(244,93,19)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="10" y="948" width="4" height="15" fill="rgb(219,119,38)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="10" y="964" width="4" height="15" fill="rgb(247,55,24)"/><text x="13.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.40%)</title><rect x="10" y="980" width="4" height="15" fill="rgb(219,148,52)"/><text x="13.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.40%)</title><rect x="10" y="996" width="4" height="15" fill="rgb(234,44,34)"/><text x="13.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.40%)</title><rect x="10" y="1012" width="4" height="15" fill="rgb(211,132,14)"/><text x="13.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.40%)</title><rect x="10" y="1028" width="4" height="15" fill="rgb(207,84,22)"/><text x="13.00" y="1038.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.81%)</title><rect x="10" y="836" width="9" height="15" fill="rgb(235,174,16)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.81%)</title><rect x="10" y="852" width="9" height="15" fill="rgb(211,3,2)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.81%)</title><rect x="10" y="868" width="9" height="15" fill="rgb(221,143,36)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.81%)</title><rect x="10" y="884" width="9" height="15" fill="rgb(230,226,53)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.81%)</title><rect x="10" y="900" width="9" height="15" fill="rgb(249,35,41)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.81%)</title><rect x="10" y="916" width="9" height="15" fill="rgb(252,164,16)"/><text x="13.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="14" y="932" width="5" height="15" fill="rgb(230,83,14)"/><text x="17.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.40%)</title><rect x="14" y="948" width="5" height="15" fill="rgb(222,107,0)"/><text x="17.00" y="958.50"></text></g><g><title>__close_nocancel (libc-2.29.so) (1 samples, 0.40%)</title><rect x="14" y="964" width="5" height="15" fill="rgb(243,228,11)"/><text x="17.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="10" y="356" width="14" height="15" fill="rgb(224,67,29)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="10" y="372" width="14" height="15" fill="rgb(208,78,2)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 1.21%)</title><rect x="10" y="388" width="14" height="15" fill="rgb(242,35,46)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="10" y="404" width="14" height="15" fill="rgb(238,148,7)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="10" y="420" width="14" height="15" fill="rgb(213,54,3)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="10" y="436" width="14" height="15" fill="rgb(247,214,30)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="10" y="452" width="14" height="15" fill="rgb(247,172,27)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="10" y="468" width="14" height="15" fill="rgb(243,1,40)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 1.21%)</title><rect x="10" y="484" width="14" height="15" fill="rgb(225,135,7)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="10" y="500" width="14" height="15" fill="rgb(205,227,2)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="10" y="516" width="14" height="15" fill="rgb(238,50,32)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="10" y="532" width="14" height="15" fill="rgb(247,68,47)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="10" y="548" width="14" height="15" fill="rgb(225,60,49)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="10" y="564" width="14" height="15" fill="rgb(212,220,53)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 1.21%)</title><rect x="10" y="580" width="14" height="15" fill="rgb(221,191,44)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="10" y="596" width="14" height="15" fill="rgb(236,173,12)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="10" y="612" width="14" height="15" fill="rgb(238,12,41)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="10" y="628" width="14" height="15" fill="rgb(246,165,13)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="10" y="644" width="14" height="15" fill="rgb(252,69,7)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="10" y="660" width="14" height="15" fill="rgb(214,137,29)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="10" y="676" width="14" height="15" fill="rgb(247,84,3)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="10" y="692" width="14" height="15" fill="rgb(206,16,43)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="10" y="708" width="14" height="15" fill="rgb(227,71,7)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 1.21%)</title><rect x="10" y="724" width="14" height="15" fill="rgb(253,69,42)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="10" y="740" width="14" height="15" fill="rgb(221,60,13)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="10" y="756" width="14" height="15" fill="rgb(212,228,12)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="10" y="772" width="14" height="15" fill="rgb(236,110,35)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="10" y="788" width="14" height="15" fill="rgb(245,204,23)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="10" y="804" width="14" height="15" fill="rgb(234,79,31)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 1.21%)</title><rect x="10" y="820" width="14" height="15" fill="rgb(209,67,35)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="836" width="5" height="15" fill="rgb(215,196,46)"/><text x="22.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="852" width="5" height="15" fill="rgb(210,229,36)"/><text x="22.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="868" width="5" height="15" fill="rgb(211,205,23)"/><text x="22.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="19" y="884" width="5" height="15" fill="rgb(237,29,31)"/><text x="22.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="900" width="5" height="15" fill="rgb(217,87,45)"/><text x="22.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.40%)</title><rect x="19" y="916" width="5" height="15" fill="rgb(247,189,31)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="932" width="5" height="15" fill="rgb(212,4,11)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="948" width="5" height="15" fill="rgb(216,68,16)"/><text x="22.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="964" width="5" height="15" fill="rgb(218,193,27)"/><text x="22.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="980" width="5" height="15" fill="rgb(208,137,4)"/><text x="22.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.40%)</title><rect x="19" y="996" width="5" height="15" fill="rgb(233,115,34)"/><text x="22.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="1012" width="5" height="15" fill="rgb(211,26,54)"/><text x="22.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="1028" width="5" height="15" fill="rgb(240,51,13)"/><text x="22.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="1044" width="5" height="15" fill="rgb(248,186,43)"/><text x="22.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="19" y="1060" width="5" height="15" fill="rgb(209,130,33)"/><text x="22.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="1076" width="5" height="15" fill="rgb(249,141,41)"/><text x="22.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.40%)</title><rect x="19" y="1092" width="5" height="15" fill="rgb(213,142,40)"/><text x="22.00" y="1102.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.40%)</title><rect x="19" y="1108" width="5" height="15" fill="rgb(242,42,30)"/><text x="22.00" y="1118.50"></text></g><g><title>compile (re.py) (1 samples, 0.40%)</title><rect x="19" y="1124" width="5" height="15" fill="rgb(240,155,11)"/><text x="22.00" y="1134.50"></text></g><g><title>_compile (re.py) (1 samples, 0.40%)</title><rect x="19" y="1140" width="5" height="15" fill="rgb(242,229,49)"/><text x="22.00" y="1150.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.40%)</title><rect x="19" y="1156" width="5" height="15" fill="rgb(209,98,9)"/><text x="22.00" y="1166.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.40%)</title><rect x="19" y="1172" width="5" height="15" fill="rgb(235,131,26)"/><text x="22.00" y="1182.50"></text></g><g><title>_compile_info (sre_compile.py) (1 samples, 0.40%)</title><rect x="19" y="1188" width="5" height="15" fill="rgb(225,91,13)"/><text x="22.00" y="1198.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.40%)</title><rect x="19" y="1204" width="5" height="15" fill="rgb(215,115,25)"/><text x="22.00" y="1214.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.62%)</title><rect x="10" y="292" width="19" height="15" fill="rgb(244,170,46)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.62%)</title><rect x="10" y="308" width="19" height="15" fill="rgb(241,1,41)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.62%)</title><rect x="10" y="324" width="19" height="15" fill="rgb(210,174,7)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.62%)</title><rect x="10" y="340" width="19" height="15" fill="rgb(237,125,18)"/><text x="13.00" y="350.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="356" width="5" height="15" fill="rgb(241,190,0)"/><text x="27.00" y="366.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="24" y="372" width="5" height="15" fill="rgb(238,174,24)"/><text x="27.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="388" width="5" height="15" fill="rgb(248,202,31)"/><text x="27.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.40%)</title><rect x="24" y="404" width="5" height="15" fill="rgb(221,157,17)"/><text x="27.00" y="414.50"></text></g><g><title>0x7f681c84c995 (libdl-2.29.so) (1 samples, 0.40%)</title><rect x="24" y="420" width="5" height="15" fill="rgb(231,138,27)"/><text x="27.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.40%)</title><rect x="24" y="436" width="5" height="15" fill="rgb(248,227,1)"/><text x="27.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.40%)</title><rect x="24" y="452" width="5" height="15" fill="rgb(254,111,54)"/><text x="27.00" y="462.50"></text></g><g><title>0x7f681c84c258 (libdl-2.29.so) (1 samples, 0.40%)</title><rect x="24" y="468" width="5" height="15" fill="rgb(254,10,37)"/><text x="27.00" y="478.50"></text></g><g><title>0x7f681c899d7a (ld-2.29.so) (1 samples, 0.40%)</title><rect x="24" y="484" width="5" height="15" fill="rgb(225,118,29)"/><text x="27.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.40%)</title><rect x="24" y="500" width="5" height="15" fill="rgb(242,114,54)"/><text x="27.00" y="510.50"></text></g><g><title>0x7f681c89a345 (ld-2.29.so) (1 samples, 0.40%)</title><rect x="24" y="516" width="5" height="15" fill="rgb(243,145,47)"/><text x="27.00" y="526.50"></text></g><g><title>0x7f681c892fec (ld-2.29.so) (1 samples, 0.40%)</title><rect x="24" y="532" width="5" height="15" fill="rgb(206,162,22)"/><text x="27.00" y="542.50"></text></g><g><title>0x7f681c89156b (ld-2.29.so) (1 samples, 0.40%)</title><rect x="24" y="548" width="5" height="15" fill="rgb(244,62,40)"/><text x="27.00" y="558.50"></text></g><g><title>0x7f681c890948 (ld-2.29.so) (1 samples, 0.40%)</title><rect x="24" y="564" width="5" height="15" fill="rgb(246,38,22)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.40%)</title><rect x="29" y="804" width="4" height="15" fill="rgb(245,75,23)"/><text x="32.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="820" width="4" height="15" fill="rgb(253,127,13)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="836" width="4" height="15" fill="rgb(252,115,21)"/><text x="32.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="852" width="4" height="15" fill="rgb(241,104,12)"/><text x="32.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="29" y="868" width="4" height="15" fill="rgb(216,218,14)"/><text x="32.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="884" width="4" height="15" fill="rgb(209,54,40)"/><text x="32.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py) (1 samples, 0.40%)</title><rect x="29" y="900" width="4" height="15" fill="rgb(251,1,15)"/><text x="32.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="916" width="4" height="15" fill="rgb(250,54,54)"/><text x="32.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="932" width="4" height="15" fill="rgb(224,15,43)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="948" width="4" height="15" fill="rgb(230,85,30)"/><text x="32.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="964" width="4" height="15" fill="rgb(254,192,34)"/><text x="32.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="980" width="4" height="15" fill="rgb(253,123,47)"/><text x="32.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="29" y="996" width="4" height="15" fill="rgb(223,189,22)"/><text x="32.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="1012" width="4" height="15" fill="rgb(254,88,35)"/><text x="32.00" y="1022.50"></text></g><g><title>&lt;module&gt; (joblib/numpy_pickle.py) (1 samples, 0.40%)</title><rect x="29" y="1028" width="4" height="15" fill="rgb(215,173,14)"/><text x="32.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="1044" width="4" height="15" fill="rgb(218,70,12)"/><text x="32.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="1060" width="4" height="15" fill="rgb(244,131,28)"/><text x="32.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="1076" width="4" height="15" fill="rgb(246,60,13)"/><text x="32.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="29" y="1092" width="4" height="15" fill="rgb(232,114,41)"/><text x="32.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="1108" width="4" height="15" fill="rgb(244,210,43)"/><text x="32.00" y="1118.50"></text></g><g><title>&lt;module&gt; (joblib/compressor.py) (1 samples, 0.40%)</title><rect x="29" y="1124" width="4" height="15" fill="rgb(225,125,39)"/><text x="32.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.43%)</title><rect x="10" y="196" width="28" height="15" fill="rgb(213,222,29)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.43%)</title><rect x="10" y="212" width="28" height="15" fill="rgb(235,213,15)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.43%)</title><rect x="10" y="228" width="28" height="15" fill="rgb(214,165,34)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.43%)</title><rect x="10" y="244" width="28" height="15" fill="rgb(214,186,31)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.43%)</title><rect x="10" y="260" width="28" height="15" fill="rgb(209,120,4)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.43%)</title><rect x="10" y="276" width="28" height="15" fill="rgb(214,66,11)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.81%)</title><rect x="29" y="292" width="9" height="15" fill="rgb(238,32,53)"/><text x="32.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="308" width="9" height="15" fill="rgb(254,39,16)"/><text x="32.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="324" width="9" height="15" fill="rgb(219,154,53)"/><text x="32.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="340" width="9" height="15" fill="rgb(254,157,54)"/><text x="32.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="29" y="356" width="9" height="15" fill="rgb(244,191,28)"/><text x="32.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="372" width="9" height="15" fill="rgb(215,158,36)"/><text x="32.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.81%)</title><rect x="29" y="388" width="9" height="15" fill="rgb(236,115,21)"/><text x="32.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="404" width="9" height="15" fill="rgb(221,177,8)"/><text x="32.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="420" width="9" height="15" fill="rgb(254,57,6)"/><text x="32.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="436" width="9" height="15" fill="rgb(207,146,29)"/><text x="32.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="29" y="452" width="9" height="15" fill="rgb(222,20,9)"/><text x="32.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="468" width="9" height="15" fill="rgb(243,28,45)"/><text x="32.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.81%)</title><rect x="29" y="484" width="9" height="15" fill="rgb(232,143,37)"/><text x="32.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="500" width="9" height="15" fill="rgb(244,16,40)"/><text x="32.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="516" width="9" height="15" fill="rgb(212,156,30)"/><text x="32.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="532" width="9" height="15" fill="rgb(245,197,37)"/><text x="32.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="548" width="9" height="15" fill="rgb(230,112,36)"/><text x="32.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="564" width="9" height="15" fill="rgb(245,81,13)"/><text x="32.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="29" y="580" width="9" height="15" fill="rgb(246,55,35)"/><text x="32.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="596" width="9" height="15" fill="rgb(220,145,34)"/><text x="32.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (2 samples, 0.81%)</title><rect x="29" y="612" width="9" height="15" fill="rgb(249,204,54)"/><text x="32.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="628" width="9" height="15" fill="rgb(250,130,40)"/><text x="32.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="644" width="9" height="15" fill="rgb(250,52,28)"/><text x="32.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="660" width="9" height="15" fill="rgb(213,190,3)"/><text x="32.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="29" y="676" width="9" height="15" fill="rgb(245,133,43)"/><text x="32.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="692" width="9" height="15" fill="rgb(246,22,32)"/><text x="32.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (2 samples, 0.81%)</title><rect x="29" y="708" width="9" height="15" fill="rgb(216,92,1)"/><text x="32.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="724" width="9" height="15" fill="rgb(206,201,30)"/><text x="32.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="740" width="9" height="15" fill="rgb(216,58,23)"/><text x="32.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="756" width="9" height="15" fill="rgb(242,146,46)"/><text x="32.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="29" y="772" width="9" height="15" fill="rgb(205,1,8)"/><text x="32.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="788" width="9" height="15" fill="rgb(236,62,51)"/><text x="32.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.40%)</title><rect x="33" y="804" width="5" height="15" fill="rgb(236,7,8)"/><text x="36.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="820" width="5" height="15" fill="rgb(247,139,49)"/><text x="36.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="836" width="5" height="15" fill="rgb(211,169,25)"/><text x="36.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="852" width="5" height="15" fill="rgb(210,228,45)"/><text x="36.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="33" y="868" width="5" height="15" fill="rgb(230,172,48)"/><text x="36.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="884" width="5" height="15" fill="rgb(222,222,19)"/><text x="36.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/my_exceptions.py) (1 samples, 0.40%)</title><rect x="33" y="900" width="5" height="15" fill="rgb(210,150,14)"/><text x="36.00" y="910.50"></text></g><g><title>_mk_common_exceptions (joblib/my_exceptions.py) (1 samples, 0.40%)</title><rect x="33" y="916" width="5" height="15" fill="rgb(208,134,30)"/><text x="36.00" y="926.50"></text></g><g><title>_mk_exception (joblib/my_exceptions.py) (1 samples, 0.40%)</title><rect x="33" y="932" width="5" height="15" fill="rgb(236,157,12)"/><text x="36.00" y="942.50"></text></g><g><title>0x7f67f0ab8677 (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="38" y="1300" width="5" height="15" fill="rgb(207,100,2)"/><text x="41.00" y="1310.50"></text></g><g><title>0x7f67f0ab2f92 (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="38" y="1316" width="5" height="15" fill="rgb(246,153,15)"/><text x="41.00" y="1326.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (2 samples, 0.81%)</title><rect x="38" y="724" width="10" height="15" fill="rgb(213,74,23)"/><text x="41.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="740" width="10" height="15" fill="rgb(229,164,33)"/><text x="41.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="756" width="10" height="15" fill="rgb(254,169,29)"/><text x="41.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="772" width="10" height="15" fill="rgb(207,118,32)"/><text x="41.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="38" y="788" width="10" height="15" fill="rgb(238,70,26)"/><text x="41.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="804" width="10" height="15" fill="rgb(232,6,33)"/><text x="41.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (2 samples, 0.81%)</title><rect x="38" y="820" width="10" height="15" fill="rgb(207,0,9)"/><text x="41.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="836" width="10" height="15" fill="rgb(211,149,38)"/><text x="41.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="852" width="10" height="15" fill="rgb(233,74,53)"/><text x="41.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="868" width="10" height="15" fill="rgb(222,124,1)"/><text x="41.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="38" y="884" width="10" height="15" fill="rgb(219,58,19)"/><text x="41.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="900" width="10" height="15" fill="rgb(245,127,43)"/><text x="41.00" y="910.50"></text></g><g><title>0x7f67f1af540e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.81%)</title><rect x="38" y="916" width="10" height="15" fill="rgb(227,70,34)"/><text x="41.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="932" width="10" height="15" fill="rgb(213,156,7)"/><text x="41.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="948" width="10" height="15" fill="rgb(246,213,21)"/><text x="41.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="964" width="10" height="15" fill="rgb(242,194,26)"/><text x="41.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="38" y="980" width="10" height="15" fill="rgb(237,110,33)"/><text x="41.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="996" width="10" height="15" fill="rgb(250,90,23)"/><text x="41.00" y="1006.50"></text></g><g><title>0x7f67f18aecd2 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.81%)</title><rect x="38" y="1012" width="10" height="15" fill="rgb(238,46,33)"/><text x="41.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="1028" width="10" height="15" fill="rgb(216,173,1)"/><text x="41.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="1044" width="10" height="15" fill="rgb(248,27,53)"/><text x="41.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="1060" width="10" height="15" fill="rgb(252,219,28)"/><text x="41.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="38" y="1076" width="10" height="15" fill="rgb(219,144,2)"/><text x="41.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="1092" width="10" height="15" fill="rgb(235,76,38)"/><text x="41.00" y="1102.50"></text></g><g><title>0x7f67f0fa40e5 (pandas/_libs/tslibs/tzconversion.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.81%)</title><rect x="38" y="1108" width="10" height="15" fill="rgb(214,129,33)"/><text x="41.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="1124" width="10" height="15" fill="rgb(214,109,3)"/><text x="41.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="1140" width="10" height="15" fill="rgb(210,165,50)"/><text x="41.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="1156" width="10" height="15" fill="rgb(253,0,25)"/><text x="41.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="38" y="1172" width="10" height="15" fill="rgb(214,172,53)"/><text x="41.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="1188" width="10" height="15" fill="rgb(239,216,52)"/><text x="41.00" y="1198.50"></text></g><g><title>0x7f67f0d28e68 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.81%)</title><rect x="38" y="1204" width="10" height="15" fill="rgb(205,56,46)"/><text x="41.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="1220" width="10" height="15" fill="rgb(207,92,10)"/><text x="41.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="1236" width="10" height="15" fill="rgb(210,111,11)"/><text x="41.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="1252" width="10" height="15" fill="rgb(239,41,15)"/><text x="41.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="38" y="1268" width="10" height="15" fill="rgb(235,169,48)"/><text x="41.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="38" y="1284" width="10" height="15" fill="rgb(248,85,13)"/><text x="41.00" y="1294.50"></text></g><g><title>0x7f67f0ab92fb (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="43" y="1300" width="5" height="15" fill="rgb(237,178,35)"/><text x="46.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="1316" width="5" height="15" fill="rgb(231,145,17)"/><text x="46.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="1332" width="5" height="15" fill="rgb(229,98,44)"/><text x="46.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="1348" width="5" height="15" fill="rgb(233,228,36)"/><text x="46.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="43" y="1364" width="5" height="15" fill="rgb(234,131,25)"/><text x="46.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="1380" width="5" height="15" fill="rgb(209,132,49)"/><text x="46.00" y="1390.50"></text></g><g><title>0x7f67f089d153 (?) (1 samples, 0.40%)</title><rect x="43" y="1396" width="5" height="15" fill="rgb(213,156,29)"/><text x="46.00" y="1406.50"></text></g><g><title>0x7f67f089bc13 (?) (1 samples, 0.40%)</title><rect x="43" y="1412" width="5" height="15" fill="rgb(252,105,16)"/><text x="46.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="1428" width="5" height="15" fill="rgb(246,43,45)"/><text x="46.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="1444" width="5" height="15" fill="rgb(211,154,38)"/><text x="46.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="1460" width="5" height="15" fill="rgb(218,32,2)"/><text x="46.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="43" y="1476" width="5" height="15" fill="rgb(214,122,38)"/><text x="46.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="1492" width="5" height="15" fill="rgb(208,208,11)"/><text x="46.00" y="1502.50"></text></g><g><title>0x7f67f0638181 (?) (1 samples, 0.40%)</title><rect x="43" y="1508" width="5" height="15" fill="rgb(227,153,19)"/><text x="46.00" y="1518.50"></text></g><g><title>0x7f67f063b1c9 (?) (1 samples, 0.40%)</title><rect x="43" y="1524" width="5" height="15" fill="rgb(236,111,8)"/><text x="46.00" y="1534.50"></text></g><g><title>0x7f67f0667167 (?) (1 samples, 0.40%)</title><rect x="43" y="1540" width="5" height="15" fill="rgb(209,154,9)"/><text x="46.00" y="1550.50"></text></g><g><title>0x7f67f0662b64 (?) (1 samples, 0.40%)</title><rect x="43" y="1556" width="5" height="15" fill="rgb(227,25,38)"/><text x="46.00" y="1566.50"></text></g><g><title>0x7f67f064607b (?) (1 samples, 0.40%)</title><rect x="43" y="1572" width="5" height="15" fill="rgb(214,45,34)"/><text x="46.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.40%)</title><rect x="43" y="1588" width="5" height="15" fill="rgb(211,218,25)"/><text x="46.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.40%)</title><rect x="43" y="1604" width="5" height="15" fill="rgb(236,21,4)"/><text x="46.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.40%)</title><rect x="43" y="1620" width="5" height="15" fill="rgb(216,157,11)"/><text x="46.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.40%)</title><rect x="43" y="1636" width="5" height="15" fill="rgb(207,71,40)"/><text x="46.00" y="1646.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.40%)</title><rect x="43" y="1652" width="5" height="15" fill="rgb(206,59,40)"/><text x="46.00" y="1662.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.40%)</title><rect x="43" y="1668" width="5" height="15" fill="rgb(237,112,45)"/><text x="46.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimes.py) (1 samples, 0.40%)</title><rect x="48" y="964" width="4" height="15" fill="rgb(206,58,43)"/><text x="51.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="980" width="4" height="15" fill="rgb(230,58,1)"/><text x="51.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="996" width="4" height="15" fill="rgb(252,95,36)"/><text x="51.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1012" width="4" height="15" fill="rgb(245,6,7)"/><text x="51.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1028" width="4" height="15" fill="rgb(209,42,16)"/><text x="51.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1044" width="4" height="15" fill="rgb(211,202,32)"/><text x="51.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="48" y="1060" width="4" height="15" fill="rgb(236,100,13)"/><text x="51.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1076" width="4" height="15" fill="rgb(234,84,13)"/><text x="51.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimelike.py) (1 samples, 0.40%)</title><rect x="48" y="1092" width="4" height="15" fill="rgb(223,178,3)"/><text x="51.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1108" width="4" height="15" fill="rgb(243,35,48)"/><text x="51.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1124" width="4" height="15" fill="rgb(212,30,49)"/><text x="51.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1140" width="4" height="15" fill="rgb(247,207,35)"/><text x="51.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1156" width="4" height="15" fill="rgb(210,191,22)"/><text x="51.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1172" width="4" height="15" fill="rgb(229,90,9)"/><text x="51.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="48" y="1188" width="4" height="15" fill="rgb(239,115,22)"/><text x="51.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1204" width="4" height="15" fill="rgb(237,58,24)"/><text x="51.00" y="1214.50"></text></g><g><title>&lt;module&gt; (pandas/tseries/frequencies.py) (1 samples, 0.40%)</title><rect x="48" y="1220" width="4" height="15" fill="rgb(224,157,31)"/><text x="51.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1236" width="4" height="15" fill="rgb(239,52,11)"/><text x="51.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1252" width="4" height="15" fill="rgb(245,82,40)"/><text x="51.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1268" width="4" height="15" fill="rgb(218,102,6)"/><text x="51.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="48" y="1284" width="4" height="15" fill="rgb(228,175,33)"/><text x="51.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1300" width="4" height="15" fill="rgb(234,130,22)"/><text x="51.00" y="1310.50"></text></g><g><title>&lt;module&gt; (pandas/tseries/offsets.py) (1 samples, 0.40%)</title><rect x="48" y="1316" width="4" height="15" fill="rgb(231,99,14)"/><text x="51.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="48" y="772" width="9" height="15" fill="rgb(223,42,33)"/><text x="51.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="48" y="788" width="9" height="15" fill="rgb(253,87,41)"/><text x="51.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="48" y="804" width="9" height="15" fill="rgb(242,3,14)"/><text x="51.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="48" y="820" width="9" height="15" fill="rgb(208,220,6)"/><text x="51.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="48" y="836" width="9" height="15" fill="rgb(223,75,20)"/><text x="51.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="48" y="852" width="9" height="15" fill="rgb(223,187,11)"/><text x="51.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (2 samples, 0.81%)</title><rect x="48" y="868" width="9" height="15" fill="rgb(213,42,8)"/><text x="51.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="48" y="884" width="9" height="15" fill="rgb(241,39,5)"/><text x="51.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="48" y="900" width="9" height="15" fill="rgb(211,19,34)"/><text x="51.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="48" y="916" width="9" height="15" fill="rgb(225,203,10)"/><text x="51.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="48" y="932" width="9" height="15" fill="rgb(210,190,33)"/><text x="51.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="48" y="948" width="9" height="15" fill="rgb(210,85,48)"/><text x="51.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py) (1 samples, 0.40%)</title><rect x="52" y="964" width="5" height="15" fill="rgb(205,13,20)"/><text x="55.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="52" y="980" width="5" height="15" fill="rgb(212,10,1)"/><text x="55.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="52" y="996" width="5" height="15" fill="rgb(244,86,48)"/><text x="55.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="52" y="1012" width="5" height="15" fill="rgb(214,191,27)"/><text x="55.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="52" y="1028" width="5" height="15" fill="rgb(245,143,32)"/><text x="55.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="52" y="1044" width="5" height="15" fill="rgb(247,5,42)"/><text x="55.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/base.py) (1 samples, 0.40%)</title><rect x="52" y="1060" width="5" height="15" fill="rgb(205,136,35)"/><text x="55.00" y="1070.50"></text></g><g><title>Index (pandas/core/indexes/base.py) (1 samples, 0.40%)</title><rect x="52" y="1076" width="5" height="15" fill="rgb(248,60,32)"/><text x="55.00" y="1086.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.40%)</title><rect x="52" y="1092" width="5" height="15" fill="rgb(243,228,11)"/><text x="55.00" y="1102.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.40%)</title><rect x="52" y="1108" width="5" height="15" fill="rgb(232,3,39)"/><text x="55.00" y="1118.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.40%)</title><rect x="52" y="1124" width="5" height="15" fill="rgb(217,50,23)"/><text x="55.00" y="1134.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.40%)</title><rect x="52" y="1140" width="5" height="15" fill="rgb(222,152,42)"/><text x="55.00" y="1150.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.40%)</title><rect x="52" y="1156" width="5" height="15" fill="rgb(231,87,18)"/><text x="55.00" y="1166.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.40%)</title><rect x="57" y="1108" width="5" height="15" fill="rgb(230,207,17)"/><text x="60.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1124" width="5" height="15" fill="rgb(219,179,52)"/><text x="60.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1140" width="5" height="15" fill="rgb(213,198,54)"/><text x="60.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1156" width="5" height="15" fill="rgb(224,200,14)"/><text x="60.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="1172" width="5" height="15" fill="rgb(248,229,30)"/><text x="60.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1188" width="5" height="15" fill="rgb(215,161,4)"/><text x="60.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.40%)</title><rect x="57" y="1204" width="5" height="15" fill="rgb(215,116,18)"/><text x="60.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1220" width="5" height="15" fill="rgb(214,92,47)"/><text x="60.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1236" width="5" height="15" fill="rgb(213,148,20)"/><text x="60.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1252" width="5" height="15" fill="rgb(241,204,39)"/><text x="60.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="1268" width="5" height="15" fill="rgb(226,207,6)"/><text x="60.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1284" width="5" height="15" fill="rgb(215,16,21)"/><text x="60.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.40%)</title><rect x="57" y="1300" width="5" height="15" fill="rgb(230,3,28)"/><text x="60.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1316" width="5" height="15" fill="rgb(208,24,9)"/><text x="60.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1332" width="5" height="15" fill="rgb(228,63,54)"/><text x="60.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1348" width="5" height="15" fill="rgb(220,86,31)"/><text x="60.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="1364" width="5" height="15" fill="rgb(237,51,35)"/><text x="60.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1380" width="5" height="15" fill="rgb(230,120,20)"/><text x="60.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py) (1 samples, 0.40%)</title><rect x="57" y="1396" width="5" height="15" fill="rgb(244,0,42)"/><text x="60.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1412" width="5" height="15" fill="rgb(206,133,20)"/><text x="60.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1428" width="5" height="15" fill="rgb(251,9,18)"/><text x="60.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1444" width="5" height="15" fill="rgb(235,137,30)"/><text x="60.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="1460" width="5" height="15" fill="rgb(244,88,29)"/><text x="60.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="1476" width="5" height="15" fill="rgb(231,93,46)"/><text x="60.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="1492" width="5" height="15" fill="rgb(223,124,48)"/><text x="60.00" y="1502.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py) (1 samples, 0.40%)</title><rect x="62" y="1684" width="5" height="15" fill="rgb(225,53,0)"/><text x="65.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1700" width="5" height="15" fill="rgb(239,132,0)"/><text x="65.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1716" width="5" height="15" fill="rgb(228,198,14)"/><text x="65.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1732" width="5" height="15" fill="rgb(241,224,33)"/><text x="65.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="62" y="1748" width="5" height="15" fill="rgb(221,12,19)"/><text x="65.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1764" width="5" height="15" fill="rgb(216,14,15)"/><text x="65.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py) (1 samples, 0.40%)</title><rect x="62" y="1780" width="5" height="15" fill="rgb(213,217,8)"/><text x="65.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py) (1 samples, 0.40%)</title><rect x="62" y="1796" width="5" height="15" fill="rgb(231,171,3)"/><text x="65.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py) (1 samples, 0.40%)</title><rect x="62" y="1812" width="5" height="15" fill="rgb(209,33,4)"/><text x="65.00" y="1822.50"></text></g><g><title>to_rgba (matplotlib/colors.py) (1 samples, 0.40%)</title><rect x="62" y="1828" width="5" height="15" fill="rgb(239,146,14)"/><text x="65.00" y="1838.50"></text></g><g><title>_to_rgba_no_colorcycle (matplotlib/colors.py) (1 samples, 0.40%)</title><rect x="62" y="1844" width="5" height="15" fill="rgb(230,157,16)"/><text x="65.00" y="1854.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.40%)</title><rect x="62" y="1860" width="5" height="15" fill="rgb(238,179,14)"/><text x="65.00" y="1870.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.40%)</title><rect x="62" y="1876" width="5" height="15" fill="rgb(241,59,15)"/><text x="65.00" y="1886.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.40%)</title><rect x="62" y="1892" width="5" height="15" fill="rgb(250,71,19)"/><text x="65.00" y="1902.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.40%)</title><rect x="62" y="1908" width="5" height="15" fill="rgb(235,114,48)"/><text x="65.00" y="1918.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.40%)</title><rect x="62" y="1924" width="5" height="15" fill="rgb(227,56,53)"/><text x="65.00" y="1934.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.40%)</title><rect x="62" y="1940" width="5" height="15" fill="rgb(206,164,13)"/><text x="65.00" y="1950.50"></text></g><g><title>PyArray_LookupSpecial_OnInstance (get_attr_string.h) (1 samples, 0.40%)</title><rect x="62" y="1956" width="5" height="15" fill="rgb(213,21,10)"/><text x="65.00" y="1966.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py) (1 samples, 0.40%)</title><rect x="67" y="1924" width="5" height="15" fill="rgb(211,189,45)"/><text x="70.00" y="1934.50"></text></g><g><title>is_alias (matplotlib/artist.py) (1 samples, 0.40%)</title><rect x="67" y="1940" width="5" height="15" fill="rgb(244,168,48)"/><text x="70.00" y="1950.50"></text></g><g><title>getdoc (inspect.py) (1 samples, 0.40%)</title><rect x="67" y="1956" width="5" height="15" fill="rgb(248,74,25)"/><text x="70.00" y="1966.50"></text></g><g><title>cleandoc (inspect.py) (1 samples, 0.40%)</title><rect x="67" y="1972" width="5" height="15" fill="rgb(232,123,28)"/><text x="70.00" y="1982.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.62%)</title><rect x="57" y="1028" width="19" height="15" fill="rgb(242,71,26)"/><text x="60.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.62%)</title><rect x="57" y="1044" width="19" height="15" fill="rgb(244,20,14)"/><text x="60.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.62%)</title><rect x="57" y="1060" width="19" height="15" fill="rgb(243,169,42)"/><text x="60.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.62%)</title><rect x="57" y="1076" width="19" height="15" fill="rgb(242,112,1)"/><text x="60.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.62%)</title><rect x="57" y="1092" width="19" height="15" fill="rgb(230,163,53)"/><text x="60.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (3 samples, 1.21%)</title><rect x="62" y="1108" width="14" height="15" fill="rgb(214,47,31)"/><text x="65.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1124" width="14" height="15" fill="rgb(209,182,13)"/><text x="65.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1140" width="14" height="15" fill="rgb(247,77,54)"/><text x="65.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1156" width="14" height="15" fill="rgb(208,23,34)"/><text x="65.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="62" y="1172" width="14" height="15" fill="rgb(232,78,0)"/><text x="65.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1188" width="14" height="15" fill="rgb(242,106,5)"/><text x="65.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (3 samples, 1.21%)</title><rect x="62" y="1204" width="14" height="15" fill="rgb(237,115,8)"/><text x="65.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1220" width="14" height="15" fill="rgb(230,83,20)"/><text x="65.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1236" width="14" height="15" fill="rgb(226,30,49)"/><text x="65.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1252" width="14" height="15" fill="rgb(231,72,24)"/><text x="65.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="62" y="1268" width="14" height="15" fill="rgb(220,224,8)"/><text x="65.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1284" width="14" height="15" fill="rgb(239,198,34)"/><text x="65.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (3 samples, 1.21%)</title><rect x="62" y="1300" width="14" height="15" fill="rgb(212,147,0)"/><text x="65.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1316" width="14" height="15" fill="rgb(211,108,22)"/><text x="65.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1332" width="14" height="15" fill="rgb(219,173,31)"/><text x="65.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1348" width="14" height="15" fill="rgb(244,203,32)"/><text x="65.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="62" y="1364" width="14" height="15" fill="rgb(220,195,50)"/><text x="65.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1380" width="14" height="15" fill="rgb(248,55,43)"/><text x="65.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (3 samples, 1.21%)</title><rect x="62" y="1396" width="14" height="15" fill="rgb(207,36,8)"/><text x="65.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1412" width="14" height="15" fill="rgb(251,192,12)"/><text x="65.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1428" width="14" height="15" fill="rgb(229,148,15)"/><text x="65.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1444" width="14" height="15" fill="rgb(244,9,29)"/><text x="65.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="62" y="1460" width="14" height="15" fill="rgb(253,120,50)"/><text x="65.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1476" width="14" height="15" fill="rgb(215,135,48)"/><text x="65.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (3 samples, 1.21%)</title><rect x="62" y="1492" width="14" height="15" fill="rgb(253,172,6)"/><text x="65.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1508" width="14" height="15" fill="rgb(237,151,26)"/><text x="65.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1524" width="14" height="15" fill="rgb(238,229,28)"/><text x="65.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1540" width="14" height="15" fill="rgb(245,87,40)"/><text x="65.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="62" y="1556" width="14" height="15" fill="rgb(240,37,29)"/><text x="65.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1572" width="14" height="15" fill="rgb(252,57,0)"/><text x="65.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (3 samples, 1.21%)</title><rect x="62" y="1588" width="14" height="15" fill="rgb(224,37,22)"/><text x="65.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1604" width="14" height="15" fill="rgb(208,152,19)"/><text x="65.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1620" width="14" height="15" fill="rgb(208,204,1)"/><text x="65.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1636" width="14" height="15" fill="rgb(237,190,7)"/><text x="65.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="62" y="1652" width="14" height="15" fill="rgb(230,3,51)"/><text x="65.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="62" y="1668" width="14" height="15" fill="rgb(234,178,29)"/><text x="65.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (2 samples, 0.81%)</title><rect x="67" y="1684" width="9" height="15" fill="rgb(246,192,41)"/><text x="70.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="67" y="1700" width="9" height="15" fill="rgb(230,105,28)"/><text x="70.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="67" y="1716" width="9" height="15" fill="rgb(237,68,38)"/><text x="70.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="67" y="1732" width="9" height="15" fill="rgb(253,229,44)"/><text x="70.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="67" y="1748" width="9" height="15" fill="rgb(245,59,31)"/><text x="70.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="67" y="1764" width="9" height="15" fill="rgb(216,72,49)"/><text x="70.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (2 samples, 0.81%)</title><rect x="67" y="1780" width="9" height="15" fill="rgb(216,223,7)"/><text x="70.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="67" y="1796" width="9" height="15" fill="rgb(240,127,22)"/><text x="70.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="67" y="1812" width="9" height="15" fill="rgb(241,220,50)"/><text x="70.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="67" y="1828" width="9" height="15" fill="rgb(231,181,3)"/><text x="70.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="67" y="1844" width="9" height="15" fill="rgb(244,43,1)"/><text x="70.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="67" y="1860" width="9" height="15" fill="rgb(231,99,50)"/><text x="70.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (2 samples, 0.81%)</title><rect x="67" y="1876" width="9" height="15" fill="rgb(250,136,47)"/><text x="70.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (2 samples, 0.81%)</title><rect x="67" y="1892" width="9" height="15" fill="rgb(214,224,51)"/><text x="70.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (2 samples, 0.81%)</title><rect x="67" y="1908" width="9" height="15" fill="rgb(244,106,18)"/><text x="70.00" y="1918.50"></text></g><g><title>get_valid_values (matplotlib/artist.py) (1 samples, 0.40%)</title><rect x="72" y="1924" width="4" height="15" fill="rgb(218,81,14)"/><text x="75.00" y="1934.50"></text></g><g><title>search (re.py) (1 samples, 0.40%)</title><rect x="72" y="1940" width="4" height="15" fill="rgb(249,98,42)"/><text x="75.00" y="1950.50"></text></g><g><title>_compile (re.py) (1 samples, 0.40%)</title><rect x="72" y="1956" width="4" height="15" fill="rgb(205,121,52)"/><text x="75.00" y="1966.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.40%)</title><rect x="72" y="1972" width="4" height="15" fill="rgb(226,87,3)"/><text x="75.00" y="1982.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.40%)</title><rect x="72" y="1988" width="4" height="15" fill="rgb(236,117,48)"/><text x="75.00" y="1998.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.40%)</title><rect x="72" y="2004" width="4" height="15" fill="rgb(247,115,1)"/><text x="75.00" y="2014.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.40%)</title><rect x="72" y="2020" width="4" height="15" fill="rgb(243,172,21)"/><text x="75.00" y="2030.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.40%)</title><rect x="72" y="2036" width="4" height="15" fill="rgb(246,82,21)"/><text x="75.00" y="2046.50"></text></g><g><title>0x7f681c5e5186 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="72" y="2052" width="4" height="15" fill="rgb(245,124,39)"/><text x="75.00" y="2062.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (5 samples, 2.02%)</title><rect x="57" y="1012" width="24" height="15" fill="rgb(219,55,28)"/><text x="60.00" y="1022.50">&lt;..</text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py) (1 samples, 0.40%)</title><rect x="76" y="1028" width="5" height="15" fill="rgb(244,218,27)"/><text x="79.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py) (1 samples, 0.40%)</title><rect x="76" y="1044" width="5" height="15" fill="rgb(233,173,30)"/><text x="79.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py) (1 samples, 0.40%)</title><rect x="76" y="1060" width="5" height="15" fill="rgb(212,161,33)"/><text x="79.00" y="1070.50"></text></g><g><title>_get_op_name (pandas/core/ops/__init__.py) (1 samples, 0.40%)</title><rect x="76" y="1076" width="5" height="15" fill="rgb(216,196,43)"/><text x="79.00" y="1086.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.40%)</title><rect x="81" y="1108" width="5" height="15" fill="rgb(245,107,47)"/><text x="84.00" y="1118.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.40%)</title><rect x="81" y="1124" width="5" height="15" fill="rgb(253,205,53)"/><text x="84.00" y="1134.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (11 samples, 4.45%)</title><rect x="38" y="340" width="53" height="15" fill="rgb(252,165,17)"/><text x="41.00" y="350.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.45%)</title><rect x="38" y="356" width="53" height="15" fill="rgb(240,183,41)"/><text x="41.00" y="366.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.45%)</title><rect x="38" y="372" width="53" height="15" fill="rgb(228,31,49)"/><text x="41.00" y="382.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.45%)</title><rect x="38" y="388" width="53" height="15" fill="rgb(232,115,3)"/><text x="41.00" y="398.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 4.45%)</title><rect x="38" y="404" width="53" height="15" fill="rgb(243,1,6)"/><text x="41.00" y="414.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.45%)</title><rect x="38" y="420" width="53" height="15" fill="rgb(223,89,5)"/><text x="41.00" y="430.50">_call..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (11 samples, 4.45%)</title><rect x="38" y="436" width="53" height="15" fill="rgb(212,69,28)"/><text x="41.00" y="446.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.45%)</title><rect x="38" y="452" width="53" height="15" fill="rgb(230,60,24)"/><text x="41.00" y="462.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.45%)</title><rect x="38" y="468" width="53" height="15" fill="rgb(248,106,1)"/><text x="41.00" y="478.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.45%)</title><rect x="38" y="484" width="53" height="15" fill="rgb(238,212,51)"/><text x="41.00" y="494.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 4.45%)</title><rect x="38" y="500" width="53" height="15" fill="rgb(244,82,51)"/><text x="41.00" y="510.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.45%)</title><rect x="38" y="516" width="53" height="15" fill="rgb(240,73,35)"/><text x="41.00" y="526.50">_call..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (11 samples, 4.45%)</title><rect x="38" y="532" width="53" height="15" fill="rgb(228,57,51)"/><text x="41.00" y="542.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.45%)</title><rect x="38" y="548" width="53" height="15" fill="rgb(223,85,7)"/><text x="41.00" y="558.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.45%)</title><rect x="38" y="564" width="53" height="15" fill="rgb(234,23,16)"/><text x="41.00" y="574.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.45%)</title><rect x="38" y="580" width="53" height="15" fill="rgb(235,97,50)"/><text x="41.00" y="590.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 4.45%)</title><rect x="38" y="596" width="53" height="15" fill="rgb(220,59,54)"/><text x="41.00" y="606.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.45%)</title><rect x="38" y="612" width="53" height="15" fill="rgb(223,25,36)"/><text x="41.00" y="622.50">_call..</text></g><g><title>&lt;module&gt; (pandas/__init__.py) (11 samples, 4.45%)</title><rect x="38" y="628" width="53" height="15" fill="rgb(217,188,28)"/><text x="41.00" y="638.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.45%)</title><rect x="38" y="644" width="53" height="15" fill="rgb(248,18,35)"/><text x="41.00" y="654.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.45%)</title><rect x="38" y="660" width="53" height="15" fill="rgb(218,184,54)"/><text x="41.00" y="670.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.45%)</title><rect x="38" y="676" width="53" height="15" fill="rgb(251,159,27)"/><text x="41.00" y="686.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 4.45%)</title><rect x="38" y="692" width="53" height="15" fill="rgb(251,209,47)"/><text x="41.00" y="702.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.45%)</title><rect x="38" y="708" width="53" height="15" fill="rgb(235,207,10)"/><text x="41.00" y="718.50">_call..</text></g><g><title>&lt;module&gt; (pandas/core/api.py) (9 samples, 3.64%)</title><rect x="48" y="724" width="43" height="15" fill="rgb(209,127,22)"/><text x="51.00" y="734.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.64%)</title><rect x="48" y="740" width="43" height="15" fill="rgb(243,209,47)"/><text x="51.00" y="750.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.64%)</title><rect x="48" y="756" width="43" height="15" fill="rgb(225,210,49)"/><text x="51.00" y="766.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.83%)</title><rect x="57" y="772" width="34" height="15" fill="rgb(227,149,36)"/><text x="60.00" y="782.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.83%)</title><rect x="57" y="788" width="34" height="15" fill="rgb(209,144,49)"/><text x="60.00" y="798.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.83%)</title><rect x="57" y="804" width="34" height="15" fill="rgb(212,111,23)"/><text x="60.00" y="814.50">_c..</text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (7 samples, 2.83%)</title><rect x="57" y="820" width="34" height="15" fill="rgb(250,22,10)"/><text x="60.00" y="830.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.83%)</title><rect x="57" y="836" width="34" height="15" fill="rgb(235,165,7)"/><text x="60.00" y="846.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.83%)</title><rect x="57" y="852" width="34" height="15" fill="rgb(230,104,13)"/><text x="60.00" y="862.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.83%)</title><rect x="57" y="868" width="34" height="15" fill="rgb(241,180,50)"/><text x="60.00" y="878.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.83%)</title><rect x="57" y="884" width="34" height="15" fill="rgb(241,65,46)"/><text x="60.00" y="894.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.83%)</title><rect x="57" y="900" width="34" height="15" fill="rgb(248,78,5)"/><text x="60.00" y="910.50">_c..</text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (7 samples, 2.83%)</title><rect x="57" y="916" width="34" height="15" fill="rgb(237,158,18)"/><text x="60.00" y="926.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.83%)</title><rect x="57" y="932" width="34" height="15" fill="rgb(222,220,35)"/><text x="60.00" y="942.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.83%)</title><rect x="57" y="948" width="34" height="15" fill="rgb(227,58,31)"/><text x="60.00" y="958.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.83%)</title><rect x="57" y="964" width="34" height="15" fill="rgb(248,209,10)"/><text x="60.00" y="974.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.83%)</title><rect x="57" y="980" width="34" height="15" fill="rgb(210,209,8)"/><text x="60.00" y="990.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.83%)</title><rect x="57" y="996" width="34" height="15" fill="rgb(252,87,53)"/><text x="60.00" y="1006.50">_c..</text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py) (2 samples, 0.81%)</title><rect x="81" y="1012" width="10" height="15" fill="rgb(206,61,3)"/><text x="84.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py) (2 samples, 0.81%)</title><rect x="81" y="1028" width="10" height="15" fill="rgb(222,61,50)"/><text x="84.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py) (2 samples, 0.81%)</title><rect x="81" y="1044" width="10" height="15" fill="rgb(249,111,50)"/><text x="84.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py) (2 samples, 0.81%)</title><rect x="81" y="1060" width="10" height="15" fill="rgb(207,80,16)"/><text x="84.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (2 samples, 0.81%)</title><rect x="81" y="1076" width="10" height="15" fill="rgb(213,203,37)"/><text x="84.00" y="1086.50"></text></g><g><title>dedent (textwrap.py) (2 samples, 0.81%)</title><rect x="81" y="1092" width="10" height="15" fill="rgb(208,215,17)"/><text x="84.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.40%)</title><rect x="86" y="1108" width="5" height="15" fill="rgb(251,82,10)"/><text x="89.00" y="1118.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.40%)</title><rect x="86" y="1124" width="5" height="15" fill="rgb(220,58,12)"/><text x="89.00" y="1134.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.40%)</title><rect x="86" y="1140" width="5" height="15" fill="rgb(234,76,15)"/><text x="89.00" y="1150.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (12 samples, 4.86%)</title><rect x="38" y="244" width="57" height="15" fill="rgb(238,226,14)"/><text x="41.00" y="254.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.86%)</title><rect x="38" y="260" width="57" height="15" fill="rgb(219,176,32)"/><text x="41.00" y="270.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.86%)</title><rect x="38" y="276" width="57" height="15" fill="rgb(212,169,20)"/><text x="41.00" y="286.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.86%)</title><rect x="38" y="292" width="57" height="15" fill="rgb(245,161,38)"/><text x="41.00" y="302.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 4.86%)</title><rect x="38" y="308" width="57" height="15" fill="rgb(229,217,8)"/><text x="41.00" y="318.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.86%)</title><rect x="38" y="324" width="57" height="15" fill="rgb(227,161,9)"/><text x="41.00" y="334.50">_call_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.40%)</title><rect x="91" y="340" width="4" height="15" fill="rgb(235,226,47)"/><text x="94.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="356" width="4" height="15" fill="rgb(211,122,24)"/><text x="94.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="372" width="4" height="15" fill="rgb(225,154,8)"/><text x="94.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="388" width="4" height="15" fill="rgb(252,91,26)"/><text x="94.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="404" width="4" height="15" fill="rgb(212,205,24)"/><text x="94.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="420" width="4" height="15" fill="rgb(244,37,29)"/><text x="94.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="436" width="4" height="15" fill="rgb(223,57,25)"/><text x="94.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="91" y="452" width="4" height="15" fill="rgb(251,217,15)"/><text x="94.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="468" width="4" height="15" fill="rgb(212,143,2)"/><text x="94.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.40%)</title><rect x="91" y="484" width="4" height="15" fill="rgb(214,150,27)"/><text x="94.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="500" width="4" height="15" fill="rgb(223,19,11)"/><text x="94.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="516" width="4" height="15" fill="rgb(205,208,28)"/><text x="94.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="532" width="4" height="15" fill="rgb(210,205,31)"/><text x="94.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="91" y="548" width="4" height="15" fill="rgb(247,154,49)"/><text x="94.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="564" width="4" height="15" fill="rgb(236,223,41)"/><text x="94.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.40%)</title><rect x="91" y="580" width="4" height="15" fill="rgb(252,51,24)"/><text x="94.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="596" width="4" height="15" fill="rgb(242,150,48)"/><text x="94.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="612" width="4" height="15" fill="rgb(206,222,47)"/><text x="94.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="628" width="4" height="15" fill="rgb(240,43,16)"/><text x="94.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="644" width="4" height="15" fill="rgb(217,83,42)"/><text x="94.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="660" width="4" height="15" fill="rgb(234,133,20)"/><text x="94.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="676" width="4" height="15" fill="rgb(248,22,1)"/><text x="94.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="91" y="692" width="4" height="15" fill="rgb(254,13,48)"/><text x="94.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="708" width="4" height="15" fill="rgb(217,29,45)"/><text x="94.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.40%)</title><rect x="91" y="724" width="4" height="15" fill="rgb(247,206,31)"/><text x="94.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="740" width="4" height="15" fill="rgb(231,103,20)"/><text x="94.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="756" width="4" height="15" fill="rgb(245,210,23)"/><text x="94.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="772" width="4" height="15" fill="rgb(230,164,17)"/><text x="94.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="91" y="788" width="4" height="15" fill="rgb(223,124,45)"/><text x="94.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="804" width="4" height="15" fill="rgb(237,57,5)"/><text x="94.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.40%)</title><rect x="91" y="820" width="4" height="15" fill="rgb(218,169,43)"/><text x="94.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="836" width="4" height="15" fill="rgb(206,47,43)"/><text x="94.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="852" width="4" height="15" fill="rgb(220,37,23)"/><text x="94.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="868" width="4" height="15" fill="rgb(252,104,33)"/><text x="94.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="91" y="884" width="4" height="15" fill="rgb(209,34,31)"/><text x="94.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="900" width="4" height="15" fill="rgb(232,166,53)"/><text x="94.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.40%)</title><rect x="91" y="916" width="4" height="15" fill="rgb(220,71,37)"/><text x="94.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="932" width="4" height="15" fill="rgb(223,147,32)"/><text x="94.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="948" width="4" height="15" fill="rgb(225,134,52)"/><text x="94.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="964" width="4" height="15" fill="rgb(220,77,8)"/><text x="94.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="980" width="4" height="15" fill="rgb(211,142,29)"/><text x="94.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="996" width="4" height="15" fill="rgb(249,72,39)"/><text x="94.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="1012" width="4" height="15" fill="rgb(246,221,15)"/><text x="94.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="91" y="1028" width="4" height="15" fill="rgb(242,122,1)"/><text x="94.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="1044" width="4" height="15" fill="rgb(220,73,12)"/><text x="94.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.40%)</title><rect x="91" y="1060" width="4" height="15" fill="rgb(246,129,0)"/><text x="94.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="1076" width="4" height="15" fill="rgb(224,98,13)"/><text x="94.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="1092" width="4" height="15" fill="rgb(242,147,49)"/><text x="94.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="1108" width="4" height="15" fill="rgb(235,185,25)"/><text x="94.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="91" y="1124" width="4" height="15" fill="rgb(210,150,28)"/><text x="94.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="1140" width="4" height="15" fill="rgb(252,21,10)"/><text x="94.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/flog.py) (1 samples, 0.40%)</title><rect x="91" y="1156" width="4" height="15" fill="rgb(223,194,28)"/><text x="94.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="1172" width="4" height="15" fill="rgb(240,229,17)"/><text x="94.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="1188" width="4" height="15" fill="rgb(206,211,29)"/><text x="94.00" y="1198.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="1204" width="4" height="15" fill="rgb(227,41,9)"/><text x="94.00" y="1214.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="91" y="1220" width="4" height="15" fill="rgb(226,179,11)"/><text x="94.00" y="1230.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="91" y="1236" width="4" height="15" fill="rgb(240,130,45)"/><text x="94.00" y="1246.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="91" y="1252" width="4" height="15" fill="rgb(236,6,34)"/><text x="94.00" y="1262.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="91" y="1268" width="4" height="15" fill="rgb(241,19,10)"/><text x="94.00" y="1278.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="91" y="1284" width="4" height="15" fill="rgb(247,117,53)"/><text x="94.00" y="1294.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.40%)</title><rect x="95" y="244" width="5" height="15" fill="rgb(236,27,25)"/><text x="98.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="95" y="260" width="5" height="15" fill="rgb(210,167,42)"/><text x="98.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="95" y="276" width="5" height="15" fill="rgb(225,120,3)"/><text x="98.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="95" y="292" width="5" height="15" fill="rgb(244,136,46)"/><text x="98.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="95" y="308" width="5" height="15" fill="rgb(237,158,33)"/><text x="98.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="95" y="324" width="5" height="15" fill="rgb(254,62,4)"/><text x="98.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="95" y="340" width="5" height="15" fill="rgb(211,82,7)"/><text x="98.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="95" y="356" width="5" height="15" fill="rgb(242,206,4)"/><text x="98.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.40%)</title><rect x="95" y="372" width="5" height="15" fill="rgb(223,119,30)"/><text x="98.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="95" y="388" width="5" height="15" fill="rgb(235,42,15)"/><text x="98.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="95" y="404" width="5" height="15" fill="rgb(217,196,54)"/><text x="98.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="95" y="420" width="5" height="15" fill="rgb(228,100,38)"/><text x="98.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="95" y="436" width="5" height="15" fill="rgb(226,229,35)"/><text x="98.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="95" y="452" width="5" height="15" fill="rgb(220,110,7)"/><text x="98.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="95" y="468" width="5" height="15" fill="rgb(211,210,24)"/><text x="98.00" y="478.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="95" y="484" width="5" height="15" fill="rgb(215,51,16)"/><text x="98.00" y="494.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="95" y="500" width="5" height="15" fill="rgb(237,73,54)"/><text x="98.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 8.10%)</title><rect x="10" y="68" width="95" height="15" fill="rgb(246,192,48)"/><text x="13.00" y="78.50">_find_and_l..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 8.10%)</title><rect x="10" y="84" width="95" height="15" fill="rgb(250,82,11)"/><text x="13.00" y="94.50">_find_and_l..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 8.10%)</title><rect x="10" y="100" width="95" height="15" fill="rgb(254,84,20)"/><text x="13.00" y="110.50">_load_unloc..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (20 samples, 8.10%)</title><rect x="10" y="116" width="95" height="15" fill="rgb(217,137,22)"/><text x="13.00" y="126.50">exec_module..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (20 samples, 8.10%)</title><rect x="10" y="132" width="95" height="15" fill="rgb(211,23,32)"/><text x="13.00" y="142.50">_call_with_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py) (20 samples, 8.10%)</title><rect x="10" y="148" width="95" height="15" fill="rgb(228,38,9)"/><text x="13.00" y="158.50">&lt;module&gt; (p..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 8.10%)</title><rect x="10" y="164" width="95" height="15" fill="rgb(229,201,17)"/><text x="13.00" y="174.50">_find_and_l..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 8.10%)</title><rect x="10" y="180" width="95" height="15" fill="rgb(232,50,32)"/><text x="13.00" y="190.50">_find_and_l..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 5.67%)</title><rect x="38" y="196" width="67" height="15" fill="rgb(247,84,34)"/><text x="41.00" y="206.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 5.67%)</title><rect x="38" y="212" width="67" height="15" fill="rgb(237,97,3)"/><text x="41.00" y="222.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 5.67%)</title><rect x="38" y="228" width="67" height="15" fill="rgb(229,182,46)"/><text x="41.00" y="238.50">_call_w..</text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (1 samples, 0.40%)</title><rect x="100" y="244" width="5" height="15" fill="rgb(247,71,54)"/><text x="103.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="260" width="5" height="15" fill="rgb(223,195,21)"/><text x="103.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="276" width="5" height="15" fill="rgb(250,163,25)"/><text x="103.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="292" width="5" height="15" fill="rgb(215,97,43)"/><text x="103.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="100" y="308" width="5" height="15" fill="rgb(223,184,46)"/><text x="103.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="324" width="5" height="15" fill="rgb(205,146,26)"/><text x="103.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py) (1 samples, 0.40%)</title><rect x="100" y="340" width="5" height="15" fill="rgb(206,48,53)"/><text x="103.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="356" width="5" height="15" fill="rgb(228,124,34)"/><text x="103.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="372" width="5" height="15" fill="rgb(220,7,47)"/><text x="103.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="388" width="5" height="15" fill="rgb(216,173,54)"/><text x="103.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="100" y="404" width="5" height="15" fill="rgb(212,118,46)"/><text x="103.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="420" width="5" height="15" fill="rgb(234,24,38)"/><text x="103.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py) (1 samples, 0.40%)</title><rect x="100" y="436" width="5" height="15" fill="rgb(252,174,8)"/><text x="103.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="452" width="5" height="15" fill="rgb(232,90,15)"/><text x="103.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="468" width="5" height="15" fill="rgb(205,175,27)"/><text x="103.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="484" width="5" height="15" fill="rgb(218,189,32)"/><text x="103.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="100" y="500" width="5" height="15" fill="rgb(208,173,5)"/><text x="103.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="516" width="5" height="15" fill="rgb(228,167,1)"/><text x="103.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py) (1 samples, 0.40%)</title><rect x="100" y="532" width="5" height="15" fill="rgb(225,173,38)"/><text x="103.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="548" width="5" height="15" fill="rgb(222,43,3)"/><text x="103.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="564" width="5" height="15" fill="rgb(206,203,53)"/><text x="103.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="580" width="5" height="15" fill="rgb(232,27,1)"/><text x="103.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="100" y="596" width="5" height="15" fill="rgb(217,188,53)"/><text x="103.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="612" width="5" height="15" fill="rgb(224,140,50)"/><text x="103.00" y="622.50"></text></g><g><title>0x7f67f648b373 (?) (1 samples, 0.40%)</title><rect x="100" y="628" width="5" height="15" fill="rgb(237,1,46)"/><text x="103.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="644" width="5" height="15" fill="rgb(244,203,28)"/><text x="103.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="660" width="5" height="15" fill="rgb(231,110,47)"/><text x="103.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="676" width="5" height="15" fill="rgb(249,147,14)"/><text x="103.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="100" y="692" width="5" height="15" fill="rgb(229,19,19)"/><text x="103.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="708" width="5" height="15" fill="rgb(251,38,44)"/><text x="103.00" y="718.50"></text></g><g><title>0x7f67f624eeea (?) (1 samples, 0.40%)</title><rect x="100" y="724" width="5" height="15" fill="rgb(209,139,41)"/><text x="103.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="740" width="5" height="15" fill="rgb(210,118,33)"/><text x="103.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="756" width="5" height="15" fill="rgb(236,229,1)"/><text x="103.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="772" width="5" height="15" fill="rgb(246,130,35)"/><text x="103.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="100" y="788" width="5" height="15" fill="rgb(225,92,13)"/><text x="103.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="804" width="5" height="15" fill="rgb(228,131,44)"/><text x="103.00" y="814.50"></text></g><g><title>0x7f67f5fe7887 (?) (1 samples, 0.40%)</title><rect x="100" y="820" width="5" height="15" fill="rgb(235,55,15)"/><text x="103.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="836" width="5" height="15" fill="rgb(247,219,4)"/><text x="103.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="852" width="5" height="15" fill="rgb(235,182,8)"/><text x="103.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="868" width="5" height="15" fill="rgb(218,171,30)"/><text x="103.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="884" width="5" height="15" fill="rgb(237,202,47)"/><text x="103.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="900" width="5" height="15" fill="rgb(247,88,14)"/><text x="103.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="100" y="916" width="5" height="15" fill="rgb(251,44,34)"/><text x="103.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="100" y="932" width="5" height="15" fill="rgb(214,200,44)"/><text x="103.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="100" y="948" width="5" height="15" fill="rgb(235,161,23)"/><text x="103.00" y="958.50"></text></g><g><title>profile0_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (1 samples, 0.40%)</title><rect x="105" y="68" width="5" height="15" fill="rgb(205,213,19)"/><text x="108.00" y="78.50"></text></g><g><title>setup_profile0 (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (1 samples, 0.40%)</title><rect x="105" y="84" width="5" height="15" fill="rgb(243,158,19)"/><text x="108.00" y="94.50"></text></g><g><title>profile0 (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (1 samples, 0.40%)</title><rect x="105" y="100" width="5" height="15" fill="rgb(232,121,0)"/><text x="108.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.40%)</title><rect x="105" y="116" width="5" height="15" fill="rgb(241,131,10)"/><text x="108.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.40%)</title><rect x="105" y="132" width="5" height="15" fill="rgb(252,124,50)"/><text x="108.00" y="142.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.40%)</title><rect x="105" y="148" width="5" height="15" fill="rgb(227,224,31)"/><text x="108.00" y="158.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.40%)</title><rect x="105" y="164" width="5" height="15" fill="rgb(251,50,0)"/><text x="108.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.40%)</title><rect x="105" y="180" width="5" height="15" fill="rgb(216,53,2)"/><text x="108.00" y="190.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (1 samples, 0.40%)</title><rect x="105" y="196" width="5" height="15" fill="rgb(233,25,41)"/><text x="108.00" y="206.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (1 samples, 0.40%)</title><rect x="105" y="212" width="5" height="15" fill="rgb(235,101,8)"/><text x="108.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.40%)</title><rect x="105" y="228" width="5" height="15" fill="rgb(220,7,37)"/><text x="108.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.40%)</title><rect x="105" y="244" width="5" height="15" fill="rgb(235,164,37)"/><text x="108.00" y="254.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.40%)</title><rect x="105" y="260" width="5" height="15" fill="rgb(206,211,28)"/><text x="108.00" y="270.50"></text></g><g><title>0x7f67dc602ff9 (?) (1 samples, 0.40%)</title><rect x="119" y="212" width="5" height="15" fill="rgb(230,16,39)"/><text x="122.00" y="222.50"></text></g><g><title>0x7f67dc5fdef6 (?) (1 samples, 0.40%)</title><rect x="119" y="228" width="5" height="15" fill="rgb(207,68,7)"/><text x="122.00" y="238.50"></text></g><g><title>0x7f67dc5f2962 (?) (1 samples, 0.40%)</title><rect x="119" y="244" width="5" height="15" fill="rgb(234,169,19)"/><text x="122.00" y="254.50"></text></g><g><title>0x7f67dc6267a7 (?) (1 samples, 0.40%)</title><rect x="119" y="260" width="5" height="15" fill="rgb(211,112,11)"/><text x="122.00" y="270.50"></text></g><g><title>0x7f67dc626379 (?) (1 samples, 0.40%)</title><rect x="119" y="276" width="5" height="15" fill="rgb(254,146,4)"/><text x="122.00" y="286.50"></text></g><g><title>0x7f67dca848b8 (?) (1 samples, 0.40%)</title><rect x="119" y="292" width="5" height="15" fill="rgb(252,82,15)"/><text x="122.00" y="302.50"></text></g><g><title>0x7f67dca82c7f (?) (1 samples, 0.40%)</title><rect x="119" y="308" width="5" height="15" fill="rgb(221,20,16)"/><text x="122.00" y="318.50"></text></g><g><title>0x7f67dca9599c (?) (1 samples, 0.40%)</title><rect x="119" y="324" width="5" height="15" fill="rgb(251,130,12)"/><text x="122.00" y="334.50"></text></g><g><title>0x7f67dc7bcdc2 (?) (1 samples, 0.40%)</title><rect x="119" y="340" width="5" height="15" fill="rgb(241,46,9)"/><text x="122.00" y="350.50"></text></g><g><title>0x7f67dc7bc65b (?) (1 samples, 0.40%)</title><rect x="119" y="356" width="5" height="15" fill="rgb(221,120,39)"/><text x="122.00" y="366.50"></text></g><g><title>0x7f67dc7bc317 (?) (1 samples, 0.40%)</title><rect x="119" y="372" width="5" height="15" fill="rgb(241,95,40)"/><text x="122.00" y="382.50"></text></g><g><title>0x7f67dc7bc1e5 (?) (1 samples, 0.40%)</title><rect x="119" y="388" width="5" height="15" fill="rgb(247,150,24)"/><text x="122.00" y="398.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="119" y="404" width="5" height="15" fill="rgb(224,124,1)"/><text x="122.00" y="414.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="119" y="420" width="5" height="15" fill="rgb(218,58,50)"/><text x="122.00" y="430.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.40%)</title><rect x="129" y="260" width="5" height="15" fill="rgb(251,40,21)"/><text x="132.00" y="270.50"></text></g><g><title>onnxruntime::ArgMin&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="134" y="340" width="4" height="15" fill="rgb(231,120,10)"/><text x="137.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="134" y="356" width="4" height="15" fill="rgb(248,68,48)"/><text x="137.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="134" y="372" width="4" height="15" fill="rgb(237,29,41)"/><text x="137.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="134" y="388" width="4" height="15" fill="rgb(220,52,53)"/><text x="137.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.40%)</title><rect x="134" y="404" width="4" height="15" fill="rgb(252,229,32)"/><text x="137.00" y="414.50"></text></g><g><title>onnxruntime::Concat::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="138" y="340" width="5" height="15" fill="rgb(208,219,8)"/><text x="141.00" y="350.50"></text></g><g><title>onnxruntime::ConcatBase::PrepareForCompute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="138" y="356" width="5" height="15" fill="rgb(219,65,9)"/><text x="141.00" y="366.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="143" y="340" width="5" height="15" fill="rgb(220,63,7)"/><text x="146.00" y="350.50"></text></g><g><title>0x7f681c5c4bd8 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="143" y="356" width="5" height="15" fill="rgb(249,221,14)"/><text x="146.00" y="366.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="148" y="340" width="5" height="15" fill="rgb(232,190,49)"/><text x="151.00" y="350.50"></text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="148" y="356" width="5" height="15" fill="rgb(229,89,20)"/><text x="151.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="148" y="372" width="5" height="15" fill="rgb(243,67,15)"/><text x="151.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="148" y="388" width="5" height="15" fill="rgb(243,0,54)"/><text x="151.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="148" y="404" width="5" height="15" fill="rgb(253,206,28)"/><text x="151.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.40%)</title><rect x="153" y="356" width="5" height="15" fill="rgb(238,6,40)"/><text x="156.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.43%)</title><rect x="134" y="260" width="28" height="15" fill="rgb(253,203,25)"/><text x="137.00" y="270.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.43%)</title><rect x="134" y="276" width="28" height="15" fill="rgb(220,23,29)"/><text x="137.00" y="286.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.43%)</title><rect x="134" y="292" width="28" height="15" fill="rgb(226,103,49)"/><text x="137.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.43%)</title><rect x="134" y="308" width="28" height="15" fill="rgb(240,103,45)"/><text x="137.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.43%)</title><rect x="134" y="324" width="28" height="15" fill="rgb(248,55,34)"/><text x="137.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.81%)</title><rect x="153" y="340" width="9" height="15" fill="rgb(212,51,35)"/><text x="156.00" y="350.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="158" y="356" width="4" height="15" fill="rgb(241,82,25)"/><text x="161.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="158" y="372" width="4" height="15" fill="rgb(230,222,34)"/><text x="161.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.40%)</title><rect x="158" y="388" width="4" height="15" fill="rgb(213,23,34)"/><text x="161.00" y="398.50"></text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (12 samples, 4.86%)</title><rect x="110" y="100" width="57" height="15" fill="rgb(244,6,45)"/><text x="113.00" y="110.50">profil..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (12 samples, 4.86%)</title><rect x="110" y="116" width="57" height="15" fill="rgb(225,198,30)"/><text x="113.00" y="126.50">time_p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (12 samples, 4.86%)</title><rect x="110" y="132" width="57" height="15" fill="rgb(240,87,37)"/><text x="113.00" y="142.50">&lt;lambd..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (12 samples, 4.86%)</title><rect x="110" y="148" width="57" height="15" fill="rgb(227,199,48)"/><text x="113.00" y="158.50">run (m..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (11 samples, 4.45%)</title><rect x="115" y="164" width="52" height="15" fill="rgb(222,122,34)"/><text x="118.00" y="174.50">_run_..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (11 samples, 4.45%)</title><rect x="115" y="180" width="52" height="15" fill="rgb(211,224,26)"/><text x="118.00" y="190.50">run (..</text></g><g><title>run (onnxruntime/capi/session.py) (11 samples, 4.45%)</title><rect x="115" y="196" width="52" height="15" fill="rgb(252,36,36)"/><text x="118.00" y="206.50">run (..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.64%)</title><rect x="124" y="212" width="43" height="15" fill="rgb(248,171,7)"/><text x="127.00" y="222.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.64%)</title><rect x="124" y="228" width="43" height="15" fill="rgb(242,105,50)"/><text x="127.00" y="238.50">void..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.64%)</title><rect x="124" y="244" width="43" height="15" fill="rgb(246,127,22)"/><text x="127.00" y="254.50">onnx..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="162" y="260" width="5" height="15" fill="rgb(226,131,13)"/><text x="165.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="162" y="276" width="5" height="15" fill="rgb(234,188,20)"/><text x="165.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="162" y="292" width="5" height="15" fill="rgb(222,66,3)"/><text x="165.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="162" y="308" width="5" height="15" fill="rgb(213,207,5)"/><text x="165.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="162" y="324" width="5" height="15" fill="rgb(216,212,29)"/><text x="165.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="162" y="340" width="5" height="15" fill="rgb(248,72,38)"/><text x="165.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="162" y="356" width="5" height="15" fill="rgb(208,49,0)"/><text x="165.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="162" y="372" width="5" height="15" fill="rgb(246,224,22)"/><text x="165.00" y="382.50"></text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (13 samples, 5.26%)</title><rect x="110" y="68" width="62" height="15" fill="rgb(230,186,48)"/><text x="113.00" y="78.50">profil..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (13 samples, 5.26%)</title><rect x="110" y="84" width="62" height="15" fill="rgb(223,104,26)"/><text x="113.00" y="94.50">setup_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.40%)</title><rect x="167" y="100" width="5" height="15" fill="rgb(205,82,21)"/><text x="170.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.40%)</title><rect x="167" y="116" width="5" height="15" fill="rgb(239,62,33)"/><text x="170.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.40%)</title><rect x="167" y="132" width="5" height="15" fill="rgb(235,177,51)"/><text x="170.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.40%)</title><rect x="167" y="148" width="5" height="15" fill="rgb(212,22,36)"/><text x="170.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.40%)</title><rect x="167" y="164" width="5" height="15" fill="rgb(247,228,35)"/><text x="170.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.40%)</title><rect x="167" y="180" width="5" height="15" fill="rgb(236,187,52)"/><text x="170.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_regressor (mlprodict/onnx_conv/sklconv/tree_converters.py) (1 samples, 0.40%)</title><rect x="167" y="196" width="5" height="15" fill="rgb(230,190,48)"/><text x="170.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.40%)</title><rect x="167" y="212" width="5" height="15" fill="rgb(236,28,8)"/><text x="170.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.40%)</title><rect x="167" y="228" width="5" height="15" fill="rgb(227,104,23)"/><text x="170.00" y="238.50"></text></g><g><title>google::protobuf::python::cmessage::SetFieldValue (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="167" y="244" width="5" height="15" fill="rgb(239,160,24)"/><text x="170.00" y="254.50"></text></g><g><title>google::protobuf::python::cmessage::AssureWritable (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="167" y="260" width="5" height="15" fill="rgb(244,126,4)"/><text x="170.00" y="270.50"></text></g><g><title>0x7f681c5e51ef (libc-2.29.so) (1 samples, 0.40%)</title><rect x="263" y="196" width="4" height="15" fill="rgb(228,116,13)"/><text x="266.00" y="206.50"></text></g><g><title>PyArray_ToList (convert.c) (1 samples, 0.40%)</title><rect x="277" y="228" width="5" height="15" fill="rgb(228,200,6)"/><text x="280.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (1 samples, 0.40%)</title><rect x="277" y="244" width="5" height="15" fill="rgb(246,146,54)"/><text x="280.00" y="254.50"></text></g><g><title>LONG_getitem (arraytypes.c.src) (1 samples, 0.40%)</title><rect x="277" y="260" width="5" height="15" fill="rgb(223,34,39)"/><text x="280.00" y="270.50"></text></g><g><title>0x7f681b7e7800 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="277" y="276" width="5" height="15" fill="rgb(211,81,19)"/><text x="280.00" y="286.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.40%)</title><rect x="282" y="276" width="5" height="15" fill="rgb(229,1,33)"/><text x="285.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.40%)</title><rect x="287" y="276" width="4" height="15" fill="rgb(234,23,43)"/><text x="290.00" y="286.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (3 samples, 1.21%)</title><rect x="282" y="244" width="14" height="15" fill="rgb(235,202,18)"/><text x="285.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.21%)</title><rect x="282" y="260" width="14" height="15" fill="rgb(250,100,27)"/><text x="285.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.40%)</title><rect x="291" y="276" width="5" height="15" fill="rgb(216,122,7)"/><text x="294.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.40%)</title><rect x="291" y="292" width="5" height="15" fill="rgb(247,36,4)"/><text x="294.00" y="302.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.40%)</title><rect x="296" y="244" width="5" height="15" fill="rgb(208,197,38)"/><text x="299.00" y="254.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (1 samples, 0.40%)</title><rect x="306" y="276" width="4" height="15" fill="rgb(213,186,36)"/><text x="309.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c) (1 samples, 0.40%)</title><rect x="306" y="292" width="4" height="15" fill="rgb(238,163,45)"/><text x="309.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 1.21%)</title><rect x="301" y="260" width="14" height="15" fill="rgb(227,71,45)"/><text x="304.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.40%)</title><rect x="310" y="276" width="5" height="15" fill="rgb(236,168,52)"/><text x="313.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="310" y="292" width="5" height="15" fill="rgb(206,6,10)"/><text x="313.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (9 samples, 3.64%)</title><rect x="277" y="212" width="43" height="15" fill="rgb(210,65,50)"/><text x="280.00" y="222.50">_run..</text></g><g><title>array_subscript (mapping.c) (8 samples, 3.24%)</title><rect x="282" y="228" width="38" height="15" fill="rgb(221,38,31)"/><text x="285.00" y="238.50">arr..</text></g><g><title>prepare_index (mapping.c) (4 samples, 1.62%)</title><rect x="301" y="244" width="19" height="15" fill="rgb(212,60,52)"/><text x="304.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.40%)</title><rect x="315" y="260" width="5" height="15" fill="rgb(213,208,1)"/><text x="318.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.40%)</title><rect x="315" y="276" width="5" height="15" fill="rgb(245,157,36)"/><text x="318.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.81%)</title><rect x="320" y="212" width="10" height="15" fill="rgb(214,219,42)"/><text x="323.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.40%)</title><rect x="325" y="228" width="5" height="15" fill="rgb(206,136,45)"/><text x="328.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.40%)</title><rect x="325" y="244" width="5" height="15" fill="rgb(241,143,29)"/><text x="328.00" y="254.50"></text></g><g><title>0x7f681c5e514a (libc-2.29.so) (1 samples, 0.40%)</title><rect x="334" y="244" width="5" height="15" fill="rgb(232,49,7)"/><text x="337.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="339" y="260" width="5" height="15" fill="rgb(248,202,14)"/><text x="342.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="339" y="276" width="5" height="15" fill="rgb(254,183,0)"/><text x="342.00" y="286.50"></text></g><g><title>array_cumsum (methods.c) (1 samples, 0.40%)</title><rect x="339" y="292" width="5" height="15" fill="rgb(224,133,53)"/><text x="342.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py) (4 samples, 1.62%)</title><rect x="330" y="212" width="19" height="15" fill="rgb(239,226,15)"/><text x="333.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (3 samples, 1.21%)</title><rect x="334" y="228" width="15" height="15" fill="rgb(250,58,2)"/><text x="337.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.81%)</title><rect x="339" y="244" width="10" height="15" fill="rgb(252,144,43)"/><text x="342.00" y="254.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.40%)</title><rect x="344" y="260" width="5" height="15" fill="rgb(214,178,50)"/><text x="347.00" y="270.50"></text></g><g><title>_choose_dispatcher (numpy/core/fromnumeric.py) (3 samples, 1.21%)</title><rect x="353" y="260" width="15" height="15" fill="rgb(233,63,6)"/><text x="356.00" y="270.50"></text></g><g><title>choose (&lt;__array_function__ internals&gt;) (5 samples, 2.02%)</title><rect x="353" y="228" width="24" height="15" fill="rgb(220,201,37)"/><text x="356.00" y="238.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 2.02%)</title><rect x="353" y="244" width="24" height="15" fill="rgb(238,213,39)"/><text x="356.00" y="254.50">a..</text></g><g><title>choose (numpy/core/fromnumeric.py) (2 samples, 0.81%)</title><rect x="368" y="260" width="9" height="15" fill="rgb(222,3,0)"/><text x="371.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.81%)</title><rect x="368" y="276" width="9" height="15" fill="rgb(225,38,19)"/><text x="371.00" y="286.50"></text></g><g><title>array_choose (methods.c) (2 samples, 0.81%)</title><rect x="368" y="292" width="9" height="15" fill="rgb(234,190,10)"/><text x="371.00" y="302.50"></text></g><g><title>PyArray_Choose (item_selection.c) (2 samples, 0.81%)</title><rect x="368" y="308" width="9" height="15" fill="rgb(220,183,40)"/><text x="371.00" y="318.50"></text></g><g><title>PyArray_MultiIterFromObjects (iterators.c) (2 samples, 0.81%)</title><rect x="368" y="324" width="9" height="15" fill="rgb(220,90,13)"/><text x="371.00" y="334.50"></text></g><g><title>multiiter_new_impl (iterators.c) (2 samples, 0.81%)</title><rect x="368" y="340" width="9" height="15" fill="rgb(222,84,49)"/><text x="371.00" y="350.50"></text></g><g><title>PyArray_IterNew (iterators.c) (2 samples, 0.81%)</title><rect x="368" y="356" width="9" height="15" fill="rgb(247,167,11)"/><text x="371.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.81%)</title><rect x="368" y="372" width="9" height="15" fill="rgb(219,173,7)"/><text x="371.00" y="382.50"></text></g><g><title>0x7f681c5c6700 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="373" y="388" width="4" height="15" fill="rgb(220,117,41)"/><text x="376.00" y="398.50"></text></g><g><title>0x7f681c5c3aa8 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="373" y="404" width="4" height="15" fill="rgb(210,93,1)"/><text x="376.00" y="414.50"></text></g><g><title>_swapaxes_dispatcher (numpy/core/fromnumeric.py) (2 samples, 0.81%)</title><rect x="377" y="244" width="10" height="15" fill="rgb(216,77,32)"/><text x="380.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py) (9 samples, 3.64%)</title><rect x="349" y="212" width="43" height="15" fill="rgb(222,6,36)"/><text x="352.00" y="222.50">_run..</text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;) (3 samples, 1.21%)</title><rect x="377" y="228" width="15" height="15" fill="rgb(227,0,47)"/><text x="380.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.40%)</title><rect x="387" y="244" width="5" height="15" fill="rgb(246,47,19)"/><text x="390.00" y="254.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.40%)</title><rect x="387" y="260" width="5" height="15" fill="rgb(237,7,12)"/><text x="390.00" y="270.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (2 samples, 0.81%)</title><rect x="392" y="260" width="9" height="15" fill="rgb(246,226,54)"/><text x="395.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.81%)</title><rect x="392" y="276" width="9" height="15" fill="rgb(226,12,39)"/><text x="395.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (2 samples, 0.81%)</title><rect x="392" y="292" width="9" height="15" fill="rgb(224,139,44)"/><text x="395.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.81%)</title><rect x="392" y="308" width="9" height="15" fill="rgb(223,196,1)"/><text x="395.00" y="318.50"></text></g><g><title>array_argsort (methods.c) (1 samples, 0.40%)</title><rect x="396" y="324" width="5" height="15" fill="rgb(211,18,10)"/><text x="399.00" y="334.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (1 samples, 0.40%)</title><rect x="401" y="292" width="5" height="15" fill="rgb(205,224,5)"/><text x="404.00" y="302.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.40%)</title><rect x="406" y="292" width="5" height="15" fill="rgb(254,206,52)"/><text x="409.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.40%)</title><rect x="406" y="308" width="5" height="15" fill="rgb(209,19,43)"/><text x="409.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.40%)</title><rect x="406" y="324" width="5" height="15" fill="rgb(215,211,2)"/><text x="409.00" y="334.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (3 samples, 1.21%)</title><rect x="401" y="276" width="15" height="15" fill="rgb(231,105,1)"/><text x="404.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.40%)</title><rect x="411" y="292" width="5" height="15" fill="rgb(243,201,47)"/><text x="414.00" y="302.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.40%)</title><rect x="416" y="276" width="4" height="15" fill="rgb(211,169,23)"/><text x="419.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="416" y="292" width="4" height="15" fill="rgb(213,144,42)"/><text x="419.00" y="302.50"></text></g><g><title>array_subscript (mapping.c) (5 samples, 2.02%)</title><rect x="401" y="260" width="24" height="15" fill="rgb(216,145,21)"/><text x="404.00" y="270.50">a..</text></g><g><title>prepare_index (mapping.c) (1 samples, 0.40%)</title><rect x="420" y="276" width="5" height="15" fill="rgb(206,205,38)"/><text x="423.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (8 samples, 3.24%)</title><rect x="392" y="212" width="38" height="15" fill="rgb(245,15,8)"/><text x="395.00" y="222.50">_ru..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (8 samples, 3.24%)</title><rect x="392" y="228" width="38" height="15" fill="rgb(243,147,2)"/><text x="395.00" y="238.50">_co..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py) (8 samples, 3.24%)</title><rect x="392" y="244" width="38" height="15" fill="rgb(234,165,32)"/><text x="395.00" y="254.50">top..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.40%)</title><rect x="425" y="260" width="5" height="15" fill="rgb(236,64,23)"/><text x="428.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.40%)</title><rect x="425" y="276" width="5" height="15" fill="rgb(211,34,25)"/><text x="428.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.40%)</title><rect x="425" y="292" width="5" height="15" fill="rgb(231,55,33)"/><text x="428.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.40%)</title><rect x="430" y="260" width="5" height="15" fill="rgb(234,28,6)"/><text x="433.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.40%)</title><rect x="430" y="276" width="5" height="15" fill="rgb(226,59,36)"/><text x="433.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.40%)</title><rect x="430" y="292" width="5" height="15" fill="rgb(217,58,45)"/><text x="433.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.40%)</title><rect x="430" y="308" width="5" height="15" fill="rgb(231,182,18)"/><text x="433.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.40%)</title><rect x="435" y="260" width="4" height="15" fill="rgb(237,212,2)"/><text x="438.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.40%)</title><rect x="435" y="276" width="4" height="15" fill="rgb(251,54,53)"/><text x="438.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.40%)</title><rect x="435" y="292" width="4" height="15" fill="rgb(244,72,32)"/><text x="438.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.40%)</title><rect x="435" y="308" width="4" height="15" fill="rgb(228,84,37)"/><text x="438.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (3 samples, 1.21%)</title><rect x="430" y="228" width="14" height="15" fill="rgb(235,167,51)"/><text x="433.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 1.21%)</title><rect x="430" y="244" width="14" height="15" fill="rgb(244,167,20)"/><text x="433.00" y="254.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.40%)</title><rect x="439" y="260" width="5" height="15" fill="rgb(216,161,49)"/><text x="442.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (3 samples, 1.21%)</title><rect x="444" y="228" width="15" height="15" fill="rgb(227,96,29)"/><text x="447.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (3 samples, 1.21%)</title><rect x="444" y="244" width="15" height="15" fill="rgb(232,94,42)"/><text x="447.00" y="254.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py) (3 samples, 1.21%)</title><rect x="444" y="260" width="15" height="15" fill="rgb(225,192,1)"/><text x="447.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (3 samples, 1.21%)</title><rect x="444" y="276" width="15" height="15" fill="rgb(229,115,1)"/><text x="447.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.21%)</title><rect x="444" y="292" width="15" height="15" fill="rgb(238,159,25)"/><text x="447.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (3 samples, 1.21%)</title><rect x="444" y="308" width="15" height="15" fill="rgb(233,166,40)"/><text x="447.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py) (1 samples, 0.40%)</title><rect x="454" y="324" width="5" height="15" fill="rgb(246,106,7)"/><text x="457.00" y="334.50"></text></g><g><title>0x7f67e65cbea0 (libgomp.so.1.0.0) (1 samples, 0.40%)</title><rect x="459" y="484" width="4" height="15" fill="rgb(234,197,39)"/><text x="462.00" y="494.50"></text></g><g><title>0x7f67e65cbea9 (libgomp.so.1.0.0) (4 samples, 1.62%)</title><rect x="463" y="484" width="19" height="15" fill="rgb(216,126,40)"/><text x="466.00" y="494.50"></text></g><g><title>0x7f67e65cbeab (libgomp.so.1.0.0) (10 samples, 4.05%)</title><rect x="482" y="484" width="48" height="15" fill="rgb(223,8,5)"/><text x="485.00" y="494.50">0x7f..</text></g><g><title>0x7f67e65caab9 (libgomp.so.1.0.0) (21 samples, 8.50%)</title><rect x="459" y="468" width="100" height="15" fill="rgb(237,27,7)"/><text x="462.00" y="478.50">0x7f67e65caa..</text></g><g><title>0x7f67e65cbead (libgomp.so.1.0.0) (6 samples, 2.43%)</title><rect x="530" y="484" width="29" height="15" fill="rgb(228,44,53)"/><text x="533.00" y="494.50">0x..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (82 samples, 33.20%)</title><rect x="172" y="164" width="392" height="15" fill="rgb(219,215,27)"/><text x="175.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (75 samples, 30.36%)</title><rect x="205" y="180" width="359" height="15" fill="rgb(221,74,52)"/><text x="208.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (62 samples, 25.10%)</title><rect x="267" y="196" width="297" height="15" fill="rgb(243,159,51)"/><text x="270.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (28 samples, 11.34%)</title><rect x="430" y="212" width="134" height="15" fill="rgb(237,159,7)"/><text x="433.00" y="222.50">run (mlprodict/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (22 samples, 8.91%)</title><rect x="459" y="228" width="105" height="15" fill="rgb(218,40,32)"/><text x="462.00" y="238.50">_run (mlprod..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (22 samples, 8.91%)</title><rect x="459" y="244" width="105" height="15" fill="rgb(251,169,43)"/><text x="462.00" y="254.50">pybind11::cp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (22 samples, 8.91%)</title><rect x="459" y="260" width="105" height="15" fill="rgb(212,113,37)"/><text x="462.00" y="270.50">void pybind1..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (22 samples, 8.91%)</title><rect x="459" y="276" width="105" height="15" fill="rgb(253,92,14)"/><text x="462.00" y="286.50">void pybind1..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (22 samples, 8.91%)</title><rect x="459" y="292" width="105" height="15" fill="rgb(220,82,53)"/><text x="462.00" y="302.50">pybind11::de..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (22 samples, 8.91%)</title><rect x="459" y="308" width="105" height="15" fill="rgb(209,168,19)"/><text x="462.00" y="318.50">pybind11::de..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (22 samples, 8.91%)</title><rect x="459" y="324" width="105" height="15" fill="rgb(219,50,37)"/><text x="462.00" y="334.50">pybind11::cp..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (22 samples, 8.91%)</title><rect x="459" y="340" width="105" height="15" fill="rgb(210,117,0)"/><text x="462.00" y="350.50">pybind11::ar..</text></g><g><title>pybind11::array::~array (numpy.h) (22 samples, 8.91%)</title><rect x="459" y="356" width="105" height="15" fill="rgb(206,218,32)"/><text x="462.00" y="366.50">pybind11::ar..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (22 samples, 8.91%)</title><rect x="459" y="372" width="105" height="15" fill="rgb(217,227,26)"/><text x="462.00" y="382.50">pybind11::bu..</text></g><g><title>pybind11::object::~object (pytypes.h) (22 samples, 8.91%)</title><rect x="459" y="388" width="105" height="15" fill="rgb(237,42,13)"/><text x="462.00" y="398.50">pybind11::ob..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (22 samples, 8.91%)</title><rect x="459" y="404" width="105" height="15" fill="rgb(230,166,29)"/><text x="462.00" y="414.50">pybind11::ha..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (22 samples, 8.91%)</title><rect x="459" y="420" width="105" height="15" fill="rgb(214,91,29)"/><text x="462.00" y="430.50">RuntimeTreeE..</text></g><g><title>pybind11::array::size (numpy.h) (22 samples, 8.91%)</title><rect x="459" y="436" width="105" height="15" fill="rgb(245,134,28)"/><text x="462.00" y="446.50">pybind11::ar..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (22 samples, 8.91%)</title><rect x="459" y="452" width="105" height="15" fill="rgb(237,173,27)"/><text x="462.00" y="462.50">std::accumul..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.40%)</title><rect x="559" y="468" width="5" height="15" fill="rgb(252,57,29)"/><text x="562.00" y="478.50"></text></g><g><title>0x7f67e65c9daa (libgomp.so.1.0.0) (1 samples, 0.40%)</title><rect x="559" y="484" width="5" height="15" fill="rgb(222,199,36)"/><text x="562.00" y="494.50"></text></g><g><title>0x7f67e65cbcfd (libgomp.so.1.0.0) (1 samples, 0.40%)</title><rect x="559" y="500" width="5" height="15" fill="rgb(213,48,5)"/><text x="562.00" y="510.50"></text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (83 samples, 33.60%)</title><rect x="172" y="100" width="396" height="15" fill="rgb(238,3,51)"/><text x="175.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_esti..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (83 samples, 33.60%)</title><rect x="172" y="116" width="396" height="15" fill="rgb(211,126,40)"/><text x="175.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (83 samples, 33.60%)</title><rect x="172" y="132" width="396" height="15" fill="rgb(236,131,54)"/><text x="175.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (83 samples, 33.60%)</title><rect x="172" y="148" width="396" height="15" fill="rgb(251,37,7)"/><text x="175.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="564" y="164" width="4" height="15" fill="rgb(234,78,48)"/><text x="567.00" y="174.50"></text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (84 samples, 34.01%)</title><rect x="172" y="68" width="401" height="15" fill="rgb(237,16,1)"/><text x="175.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (84 samples, 34.01%)</title><rect x="172" y="84" width="401" height="15" fill="rgb(223,4,27)"/><text x="175.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.40%)</title><rect x="568" y="100" width="5" height="15" fill="rgb(242,155,39)"/><text x="571.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.40%)</title><rect x="568" y="116" width="5" height="15" fill="rgb(214,139,29)"/><text x="571.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.40%)</title><rect x="568" y="132" width="5" height="15" fill="rgb(210,223,26)"/><text x="571.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.40%)</title><rect x="568" y="148" width="5" height="15" fill="rgb(230,92,48)"/><text x="571.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.40%)</title><rect x="568" y="164" width="5" height="15" fill="rgb(247,149,39)"/><text x="571.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.40%)</title><rect x="568" y="180" width="5" height="15" fill="rgb(215,53,8)"/><text x="571.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.40%)</title><rect x="568" y="196" width="5" height="15" fill="rgb(229,44,47)"/><text x="571.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="568" y="212" width="5" height="15" fill="rgb(209,180,20)"/><text x="571.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="568" y="228" width="5" height="15" fill="rgb(235,118,0)"/><text x="571.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="568" y="244" width="5" height="15" fill="rgb(240,21,32)"/><text x="571.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="568" y="260" width="5" height="15" fill="rgb(232,176,45)"/><text x="571.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="568" y="276" width="5" height="15" fill="rgb(223,46,40)"/><text x="571.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.40%)</title><rect x="568" y="292" width="5" height="15" fill="rgb(253,94,40)"/><text x="571.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="568" y="308" width="5" height="15" fill="rgb(210,125,37)"/><text x="571.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="568" y="324" width="5" height="15" fill="rgb(223,104,34)"/><text x="571.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="568" y="340" width="5" height="15" fill="rgb(251,45,23)"/><text x="571.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="568" y="356" width="5" height="15" fill="rgb(233,165,7)"/><text x="571.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="568" y="372" width="5" height="15" fill="rgb(253,32,17)"/><text x="571.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.40%)</title><rect x="568" y="388" width="5" height="15" fill="rgb(215,220,4)"/><text x="571.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="568" y="404" width="5" height="15" fill="rgb(227,84,40)"/><text x="571.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="568" y="420" width="5" height="15" fill="rgb(214,29,51)"/><text x="571.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="568" y="436" width="5" height="15" fill="rgb(227,11,29)"/><text x="571.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="568" y="452" width="5" height="15" fill="rgb(209,178,34)"/><text x="571.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="568" y="468" width="5" height="15" fill="rgb(219,183,42)"/><text x="571.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (1 samples, 0.40%)</title><rect x="568" y="484" width="5" height="15" fill="rgb(243,33,13)"/><text x="571.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="568" y="500" width="5" height="15" fill="rgb(209,100,4)"/><text x="571.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="568" y="516" width="5" height="15" fill="rgb(207,53,2)"/><text x="571.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="568" y="532" width="5" height="15" fill="rgb(208,139,17)"/><text x="571.00" y="542.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="568" y="548" width="5" height="15" fill="rgb(244,61,48)"/><text x="571.00" y="558.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="568" y="564" width="5" height="15" fill="rgb(220,187,7)"/><text x="571.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="568" y="580" width="5" height="15" fill="rgb(222,195,24)"/><text x="571.00" y="590.50"></text></g><g><title>0x7f67dd049e83 (?) (1 samples, 0.40%)</title><rect x="568" y="596" width="5" height="15" fill="rgb(246,184,11)"/><text x="571.00" y="606.50"></text></g><g><title>0x7f67dd0493fb (?) (1 samples, 0.40%)</title><rect x="568" y="612" width="5" height="15" fill="rgb(232,193,21)"/><text x="571.00" y="622.50"></text></g><g><title>0x7f67dd064d33 (?) (1 samples, 0.40%)</title><rect x="568" y="628" width="5" height="15" fill="rgb(240,128,48)"/><text x="571.00" y="638.50"></text></g><g><title>0x7f67dd064c3a (?) (1 samples, 0.40%)</title><rect x="568" y="644" width="5" height="15" fill="rgb(228,13,14)"/><text x="571.00" y="654.50"></text></g><g><title>0x7f67dd064bf8 (?) (1 samples, 0.40%)</title><rect x="568" y="660" width="5" height="15" fill="rgb(239,8,4)"/><text x="571.00" y="670.50"></text></g><g><title>0x7f67dd056d98 (?) (1 samples, 0.40%)</title><rect x="568" y="676" width="5" height="15" fill="rgb(231,25,10)"/><text x="571.00" y="686.50"></text></g><g><title>0x7f67dd0544cb (?) (1 samples, 0.40%)</title><rect x="568" y="692" width="5" height="15" fill="rgb(219,116,27)"/><text x="571.00" y="702.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.40%)</title><rect x="592" y="356" width="5" height="15" fill="rgb(232,75,20)"/><text x="595.00" y="366.50"></text></g><g><title>0x7f67f5ffa666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.81%)</title><rect x="592" y="292" width="10" height="15" fill="rgb(215,76,6)"/><text x="595.00" y="302.50"></text></g><g><title>0x7f67f5ff02fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.81%)</title><rect x="592" y="308" width="10" height="15" fill="rgb(233,193,22)"/><text x="595.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.81%)</title><rect x="592" y="324" width="10" height="15" fill="rgb(214,209,9)"/><text x="595.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.81%)</title><rect x="592" y="340" width="10" height="15" fill="rgb(246,146,44)"/><text x="595.00" y="350.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.40%)</title><rect x="597" y="356" width="5" height="15" fill="rgb(249,143,50)"/><text x="600.00" y="366.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.40%)</title><rect x="597" y="372" width="5" height="15" fill="rgb(206,217,0)"/><text x="600.00" y="382.50"></text></g><g><title>0x7f67f5ffad04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.21%)</title><rect x="592" y="276" width="15" height="15" fill="rgb(212,186,4)"/><text x="595.00" y="286.50"></text></g><g><title>0x7f67f5ffa6fa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="602" y="292" width="5" height="15" fill="rgb(213,45,37)"/><text x="605.00" y="302.50"></text></g><g><title>0x7f67f5fedf22 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="607" y="292" width="4" height="15" fill="rgb(242,17,44)"/><text x="610.00" y="302.50"></text></g><g><title>0x7f67f60162df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.02%)</title><rect x="592" y="260" width="24" height="15" fill="rgb(216,50,11)"/><text x="595.00" y="270.50">0..</text></g><g><title>0x7f67f5ffae72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.81%)</title><rect x="607" y="276" width="9" height="15" fill="rgb(230,98,7)"/><text x="610.00" y="286.50"></text></g><g><title>0x7f67f5fedf4c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="611" y="292" width="5" height="15" fill="rgb(253,1,53)"/><text x="614.00" y="302.50"></text></g><g><title>0x7f67f6016592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.81%)</title><rect x="616" y="260" width="10" height="15" fill="rgb(244,28,2)"/><text x="619.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c) (2 samples, 0.81%)</title><rect x="616" y="276" width="10" height="15" fill="rgb(225,54,13)"/><text x="619.00" y="286.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.40%)</title><rect x="621" y="292" width="5" height="15" fill="rgb(212,125,3)"/><text x="624.00" y="302.50"></text></g><g><title>0x7f67f601659c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="626" y="260" width="5" height="15" fill="rgb(250,220,18)"/><text x="629.00" y="270.50"></text></g><g><title>0x7f67f6016644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="631" y="260" width="4" height="15" fill="rgb(209,34,23)"/><text x="634.00" y="270.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="631" y="276" width="4" height="15" fill="rgb(217,92,0)"/><text x="634.00" y="286.50"></text></g><g><title>0x7f67f60166fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="635" y="260" width="5" height="15" fill="rgb(223,163,14)"/><text x="638.00" y="270.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="635" y="276" width="5" height="15" fill="rgb(242,224,47)"/><text x="638.00" y="286.50"></text></g><g><title>0x7f67f6017405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 4.45%)</title><rect x="592" y="244" width="53" height="15" fill="rgb(215,163,48)"/><text x="595.00" y="254.50">0x7f6..</text></g><g><title>0x7f67f6016c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="640" y="260" width="5" height="15" fill="rgb(253,197,36)"/><text x="643.00" y="270.50"></text></g><g><title>0x7f67f5fee529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="640" y="276" width="5" height="15" fill="rgb(218,68,17)"/><text x="643.00" y="286.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.40%)</title><rect x="640" y="292" width="5" height="15" fill="rgb(243,0,2)"/><text x="643.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.40%)</title><rect x="640" y="308" width="5" height="15" fill="rgb(247,168,24)"/><text x="643.00" y="318.50"></text></g><g><title>0x7f67f6007fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (12 samples, 4.86%)</title><rect x="592" y="228" width="58" height="15" fill="rgb(208,71,26)"/><text x="595.00" y="238.50">0x7f67..</text></g><g><title>0x7f67f6017540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="645" y="244" width="5" height="15" fill="rgb(234,81,14)"/><text x="648.00" y="254.50"></text></g><g><title>0x7f67f5fec178 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="645" y="260" width="5" height="15" fill="rgb(245,143,39)"/><text x="648.00" y="270.50"></text></g><g><title>0x7f67f600805a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.21%)</title><rect x="650" y="228" width="14" height="15" fill="rgb(252,159,7)"/><text x="653.00" y="238.50"></text></g><g><title>array_take (methods.c) (3 samples, 1.21%)</title><rect x="650" y="244" width="14" height="15" fill="rgb(223,0,0)"/><text x="653.00" y="254.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (2 samples, 0.81%)</title><rect x="654" y="260" width="10" height="15" fill="rgb(225,145,33)"/><text x="657.00" y="270.50"></text></g><g><title>0x7f67f600814f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.21%)</title><rect x="664" y="228" width="14" height="15" fill="rgb(219,143,0)"/><text x="667.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 1.21%)</title><rect x="664" y="244" width="14" height="15" fill="rgb(235,90,22)"/><text x="667.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (3 samples, 1.21%)</title><rect x="664" y="260" width="14" height="15" fill="rgb(214,154,41)"/><text x="667.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (3 samples, 1.21%)</title><rect x="664" y="276" width="14" height="15" fill="rgb(206,68,30)"/><text x="667.00" y="286.50"></text></g><g><title>0x7f67f6008163 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="678" y="228" width="5" height="15" fill="rgb(247,93,22)"/><text x="681.00" y="238.50"></text></g><g><title>0x7f67f6008328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="683" y="228" width="5" height="15" fill="rgb(205,121,2)"/><text x="686.00" y="238.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.40%)</title><rect x="683" y="244" width="5" height="15" fill="rgb(205,76,37)"/><text x="686.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.40%)</title><rect x="683" y="260" width="5" height="15" fill="rgb(252,119,21)"/><text x="686.00" y="270.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.40%)</title><rect x="683" y="276" width="5" height="15" fill="rgb(218,82,34)"/><text x="686.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.40%)</title><rect x="683" y="292" width="5" height="15" fill="rgb(234,171,7)"/><text x="686.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.40%)</title><rect x="683" y="308" width="5" height="15" fill="rgb(218,13,30)"/><text x="686.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.40%)</title><rect x="683" y="324" width="5" height="15" fill="rgb(206,211,24)"/><text x="686.00" y="334.50"></text></g><g><title>0x7f67f6008d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (21 samples, 8.50%)</title><rect x="592" y="212" width="101" height="15" fill="rgb(217,216,27)"/><text x="595.00" y="222.50">0x7f67f6008d..</text></g><g><title>0x7f67f600855e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="688" y="228" width="5" height="15" fill="rgb(218,126,44)"/><text x="691.00" y="238.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.40%)</title><rect x="740" y="244" width="5" height="15" fill="rgb(233,129,43)"/><text x="743.00" y="254.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.40%)</title><rect x="745" y="244" width="5" height="15" fill="rgb(242,227,46)"/><text x="748.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="760" y="260" width="9" height="15" fill="rgb(226,119,44)"/><text x="763.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (5 samples, 2.02%)</title><rect x="750" y="244" width="24" height="15" fill="rgb(206,83,36)"/><text x="753.00" y="254.50">_..</text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.40%)</title><rect x="769" y="260" width="5" height="15" fill="rgb(227,171,24)"/><text x="772.00" y="270.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.40%)</title><rect x="774" y="244" width="5" height="15" fill="rgb(224,42,13)"/><text x="777.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (16 samples, 6.48%)</title><rect x="779" y="244" width="76" height="15" fill="rgb(214,33,50)"/><text x="782.00" y="254.50">_num_sam..</text></g><g><title>__instancecheck__ (abc.py) (3 samples, 1.21%)</title><rect x="841" y="260" width="14" height="15" fill="rgb(233,7,33)"/><text x="844.00" y="270.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.81%)</title><rect x="846" y="276" width="9" height="15" fill="rgb(216,47,46)"/><text x="849.00" y="286.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.40%)</title><rect x="855" y="244" width="5" height="15" fill="rgb(221,20,38)"/><text x="858.00" y="254.50"></text></g><g><title>simplefilter (warnings.py) (3 samples, 1.21%)</title><rect x="860" y="244" width="14" height="15" fill="rgb(227,16,40)"/><text x="863.00" y="254.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.81%)</title><rect x="865" y="260" width="9" height="15" fill="rgb(231,140,37)"/><text x="868.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (39 samples, 15.79%)</title><rect x="693" y="212" width="186" height="15" fill="rgb(227,54,47)"/><text x="696.00" y="222.50">_validate_X_predict (skl..</text></g><g><title>check_array (sklearn/utils/validation.py) (37 samples, 14.98%)</title><rect x="702" y="228" width="177" height="15" fill="rgb(205,135,16)"/><text x="705.00" y="238.50">check_array (sklearn/ut..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.40%)</title><rect x="874" y="244" width="5" height="15" fill="rgb(213,121,52)"/><text x="877.00" y="254.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.40%)</title><rect x="879" y="212" width="5" height="15" fill="rgb(218,156,18)"/><text x="882.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.40%)</title><rect x="879" y="228" width="5" height="15" fill="rgb(250,216,50)"/><text x="882.00" y="238.50"></text></g><g><title>0x7f681b7e6ae0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="879" y="244" width="5" height="15" fill="rgb(215,210,15)"/><text x="882.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.81%)</title><rect x="922" y="244" width="10" height="15" fill="rgb(211,210,8)"/><text x="925.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (11 samples, 4.45%)</title><rect x="884" y="212" width="52" height="15" fill="rgb(252,217,39)"/><text x="887.00" y="222.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 2.43%)</title><rect x="908" y="228" width="28" height="15" fill="rgb(208,115,14)"/><text x="911.00" y="238.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.40%)</title><rect x="932" y="244" width="4" height="15" fill="rgb(239,107,8)"/><text x="935.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py) (76 samples, 30.77%)</title><rect x="578" y="180" width="363" height="15" fill="rgb(229,134,50)"/><text x="581.00" y="190.50">&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>predict (sklearn/tree/_classes.py) (73 samples, 29.55%)</title><rect x="592" y="196" width="349" height="15" fill="rgb(250,172,25)"/><text x="595.00" y="206.50">predict (sklearn/tree/_classes.py)</text></g><g><title>is_classifier (sklearn/base.py) (1 samples, 0.40%)</title><rect x="936" y="212" width="5" height="15" fill="rgb(226,201,2)"/><text x="939.00" y="222.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.40%)</title><rect x="941" y="180" width="5" height="15" fill="rgb(238,221,23)"/><text x="944.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.40%)</title><rect x="941" y="196" width="5" height="15" fill="rgb(253,65,42)"/><text x="944.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.40%)</title><rect x="941" y="212" width="5" height="15" fill="rgb(240,131,28)"/><text x="944.00" y="222.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="941" y="228" width="5" height="15" fill="rgb(212,158,34)"/><text x="944.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.40%)</title><rect x="946" y="180" width="5" height="15" fill="rgb(252,3,8)"/><text x="949.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.40%)</title><rect x="946" y="196" width="5" height="15" fill="rgb(232,177,22)"/><text x="949.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.40%)</title><rect x="946" y="212" width="5" height="15" fill="rgb(213,161,41)"/><text x="949.00" y="222.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.40%)</title><rect x="946" y="228" width="5" height="15" fill="rgb(234,224,48)"/><text x="949.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 1.21%)</title><rect x="951" y="180" width="14" height="15" fill="rgb(231,148,25)"/><text x="954.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.40%)</title><rect x="960" y="196" width="5" height="15" fill="rgb(252,189,25)"/><text x="963.00" y="206.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (1 samples, 0.40%)</title><rect x="965" y="180" width="5" height="15" fill="rgb(208,219,38)"/><text x="968.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.40%)</title><rect x="965" y="196" width="5" height="15" fill="rgb(217,31,30)"/><text x="968.00" y="206.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="965" y="212" width="5" height="15" fill="rgb(232,149,32)"/><text x="968.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="965" y="228" width="5" height="15" fill="rgb(210,24,18)"/><text x="968.00" y="238.50"></text></g><g><title>array_argsort (methods.c) (1 samples, 0.40%)</title><rect x="965" y="244" width="5" height="15" fill="rgb(215,202,29)"/><text x="968.00" y="254.50"></text></g><g><title>array_arange (multiarraymodule.c) (1 samples, 0.40%)</title><rect x="970" y="180" width="5" height="15" fill="rgb(215,135,29)"/><text x="973.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c) (1 samples, 0.40%)</title><rect x="970" y="196" width="5" height="15" fill="rgb(248,81,28)"/><text x="973.00" y="206.50"></text></g><g><title>_calc_length (ctors.c) (1 samples, 0.40%)</title><rect x="970" y="212" width="5" height="15" fill="rgb(229,205,40)"/><text x="973.00" y="222.50"></text></g><g><title>array_argmax (methods.c) (1 samples, 0.40%)</title><rect x="975" y="180" width="4" height="15" fill="rgb(231,22,26)"/><text x="978.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.40%)</title><rect x="975" y="196" width="4" height="15" fill="rgb(224,80,40)"/><text x="978.00" y="206.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.40%)</title><rect x="979" y="228" width="5" height="15" fill="rgb(236,197,41)"/><text x="982.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.40%)</title><rect x="979" y="244" width="5" height="15" fill="rgb(218,116,53)"/><text x="982.00" y="254.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.40%)</title><rect x="979" y="260" width="5" height="15" fill="rgb(237,32,49)"/><text x="982.00" y="270.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.40%)</title><rect x="979" y="276" width="5" height="15" fill="rgb(214,22,23)"/><text x="982.00" y="286.50"></text></g><g><title>array_multiply (number.c) (2 samples, 0.81%)</title><rect x="979" y="180" width="10" height="15" fill="rgb(225,180,14)"/><text x="982.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.81%)</title><rect x="979" y="196" width="10" height="15" fill="rgb(212,88,1)"/><text x="982.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.81%)</title><rect x="979" y="212" width="10" height="15" fill="rgb(226,114,33)"/><text x="982.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.40%)</title><rect x="984" y="228" width="5" height="15" fill="rgb(209,196,54)"/><text x="987.00" y="238.50"></text></g><g><title>0x7f681c5e514a (libc-2.29.so) (1 samples, 0.40%)</title><rect x="994" y="276" width="4" height="15" fill="rgb(223,88,28)"/><text x="997.00" y="286.50"></text></g><g><title>array_richcompare (arrayobject.c) (4 samples, 1.62%)</title><rect x="989" y="180" width="19" height="15" fill="rgb(227,222,34)"/><text x="992.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 1.21%)</title><rect x="994" y="196" width="14" height="15" fill="rgb(243,149,24)"/><text x="997.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 1.21%)</title><rect x="994" y="212" width="14" height="15" fill="rgb(223,42,40)"/><text x="997.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 1.21%)</title><rect x="994" y="228" width="14" height="15" fill="rgb(216,181,8)"/><text x="997.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 1.21%)</title><rect x="994" y="244" width="14" height="15" fill="rgb(207,67,40)"/><text x="997.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.21%)</title><rect x="994" y="260" width="14" height="15" fill="rgb(218,176,42)"/><text x="997.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.81%)</title><rect x="998" y="276" width="10" height="15" fill="rgb(249,58,14)"/><text x="1001.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1003" y="292" width="5" height="15" fill="rgb(218,80,6)"/><text x="1006.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.40%)</title><rect x="1003" y="308" width="5" height="15" fill="rgb(224,63,54)"/><text x="1006.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.40%)</title><rect x="1003" y="324" width="5" height="15" fill="rgb(254,184,15)"/><text x="1006.00" y="334.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.40%)</title><rect x="1008" y="196" width="5" height="15" fill="rgb(205,122,13)"/><text x="1011.00" y="206.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1008" y="212" width="5" height="15" fill="rgb(205,148,29)"/><text x="1011.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1008" y="228" width="5" height="15" fill="rgb(217,42,39)"/><text x="1011.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1008" y="244" width="5" height="15" fill="rgb(220,201,3)"/><text x="1011.00" y="254.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1008" y="260" width="5" height="15" fill="rgb(230,17,38)"/><text x="1011.00" y="270.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.81%)</title><rect x="1008" y="180" width="10" height="15" fill="rgb(232,17,16)"/><text x="1011.00" y="190.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.40%)</title><rect x="1013" y="196" width="5" height="15" fill="rgb(250,201,12)"/><text x="1016.00" y="206.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (1 samples, 0.40%)</title><rect x="1027" y="196" width="5" height="15" fill="rgb(248,104,19)"/><text x="1030.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.40%)</title><rect x="1027" y="212" width="5" height="15" fill="rgb(209,189,21)"/><text x="1030.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="1027" y="228" width="5" height="15" fill="rgb(213,56,51)"/><text x="1030.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="1027" y="244" width="5" height="15" fill="rgb(232,30,43)"/><text x="1030.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1027" y="260" width="5" height="15" fill="rgb(213,75,2)"/><text x="1030.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1027" y="276" width="5" height="15" fill="rgb(254,124,42)"/><text x="1030.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1027" y="292" width="5" height="15" fill="rgb(240,169,38)"/><text x="1030.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.40%)</title><rect x="1027" y="308" width="5" height="15" fill="rgb(249,38,13)"/><text x="1030.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1027" y="324" width="5" height="15" fill="rgb(210,12,23)"/><text x="1030.00" y="334.50"></text></g><g><title>BOOL_logical_and (loops.c.src) (1 samples, 0.40%)</title><rect x="1027" y="340" width="5" height="15" fill="rgb(225,16,2)"/><text x="1030.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.40%)</title><rect x="1032" y="196" width="5" height="15" fill="rgb(222,135,47)"/><text x="1035.00" y="206.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (1 samples, 0.40%)</title><rect x="1032" y="212" width="5" height="15" fill="rgb(220,21,33)"/><text x="1035.00" y="222.50"></text></g><g><title>array_take (methods.c) (1 samples, 0.40%)</title><rect x="1037" y="196" width="4" height="15" fill="rgb(232,213,50)"/><text x="1040.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (1 samples, 0.40%)</title><rect x="1037" y="212" width="4" height="15" fill="rgb(236,80,10)"/><text x="1040.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (1 samples, 0.40%)</title><rect x="1037" y="228" width="4" height="15" fill="rgb(244,223,1)"/><text x="1040.00" y="238.50"></text></g><g><title>0x7f681c6a214d (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1041" y="244" width="5" height="15" fill="rgb(232,89,0)"/><text x="1044.00" y="254.50"></text></g><g><title>_get_keywords (number.c) (1 samples, 0.40%)</title><rect x="1046" y="308" width="5" height="15" fill="rgb(219,222,24)"/><text x="1049.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.40%)</title><rect x="1051" y="340" width="5" height="15" fill="rgb(222,104,28)"/><text x="1054.00" y="350.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (4 samples, 1.62%)</title><rect x="1041" y="196" width="20" height="15" fill="rgb(236,134,50)"/><text x="1044.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.62%)</title><rect x="1041" y="212" width="20" height="15" fill="rgb(230,64,4)"/><text x="1044.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (4 samples, 1.62%)</title><rect x="1041" y="228" width="20" height="15" fill="rgb(208,70,40)"/><text x="1044.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 1.21%)</title><rect x="1046" y="244" width="15" height="15" fill="rgb(231,24,13)"/><text x="1049.00" y="254.50"></text></g><g><title>array_cumsum (methods.c) (3 samples, 1.21%)</title><rect x="1046" y="260" width="15" height="15" fill="rgb(217,86,25)"/><text x="1049.00" y="270.50"></text></g><g><title>PyArray_CumSum (calculation.c) (3 samples, 1.21%)</title><rect x="1046" y="276" width="15" height="15" fill="rgb(208,107,20)"/><text x="1049.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (3 samples, 1.21%)</title><rect x="1046" y="292" width="15" height="15" fill="rgb(245,17,30)"/><text x="1049.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (2 samples, 0.81%)</title><rect x="1051" y="308" width="10" height="15" fill="rgb(211,116,29)"/><text x="1054.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.81%)</title><rect x="1051" y="324" width="10" height="15" fill="rgb(227,163,10)"/><text x="1054.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1056" y="340" width="5" height="15" fill="rgb(212,119,22)"/><text x="1059.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1056" y="356" width="5" height="15" fill="rgb(249,215,47)"/><text x="1059.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.40%)</title><rect x="1061" y="324" width="4" height="15" fill="rgb(224,64,3)"/><text x="1064.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.40%)</title><rect x="1061" y="340" width="4" height="15" fill="rgb(234,28,0)"/><text x="1064.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.40%)</title><rect x="1061" y="356" width="4" height="15" fill="rgb(236,209,25)"/><text x="1064.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1065" y="372" width="5" height="15" fill="rgb(206,76,49)"/><text x="1068.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1065" y="388" width="5" height="15" fill="rgb(235,113,5)"/><text x="1068.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.81%)</title><rect x="1065" y="356" width="10" height="15" fill="rgb(252,129,6)"/><text x="1068.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.40%)</title><rect x="1070" y="372" width="5" height="15" fill="rgb(232,160,26)"/><text x="1073.00" y="382.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (4 samples, 1.62%)</title><rect x="1061" y="244" width="19" height="15" fill="rgb(244,25,46)"/><text x="1064.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.62%)</title><rect x="1061" y="260" width="19" height="15" fill="rgb(205,228,51)"/><text x="1064.00" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py) (4 samples, 1.62%)</title><rect x="1061" y="276" width="19" height="15" fill="rgb(236,74,25)"/><text x="1064.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (4 samples, 1.62%)</title><rect x="1061" y="292" width="19" height="15" fill="rgb(235,212,49)"/><text x="1064.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (4 samples, 1.62%)</title><rect x="1061" y="308" width="19" height="15" fill="rgb(247,34,52)"/><text x="1064.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (3 samples, 1.21%)</title><rect x="1065" y="324" width="15" height="15" fill="rgb(250,138,39)"/><text x="1068.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (3 samples, 1.21%)</title><rect x="1065" y="340" width="15" height="15" fill="rgb(234,199,42)"/><text x="1068.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1075" y="356" width="5" height="15" fill="rgb(213,199,24)"/><text x="1078.00" y="366.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 0.40%)</title><rect x="1075" y="372" width="5" height="15" fill="rgb(228,163,8)"/><text x="1078.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.40%)</title><rect x="1075" y="388" width="5" height="15" fill="rgb(247,145,14)"/><text x="1078.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.40%)</title><rect x="1075" y="404" width="5" height="15" fill="rgb(248,79,16)"/><text x="1078.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1080" y="244" width="4" height="15" fill="rgb(249,97,48)"/><text x="1083.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1080" y="260" width="4" height="15" fill="rgb(217,7,27)"/><text x="1083.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1080" y="276" width="4" height="15" fill="rgb(228,208,33)"/><text x="1083.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (1 samples, 0.40%)</title><rect x="1084" y="292" width="5" height="15" fill="rgb(238,147,41)"/><text x="1087.00" y="302.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py) (3 samples, 1.21%)</title><rect x="1084" y="260" width="15" height="15" fill="rgb(249,86,14)"/><text x="1087.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (3 samples, 1.21%)</title><rect x="1084" y="276" width="15" height="15" fill="rgb(206,6,2)"/><text x="1087.00" y="286.50"></text></g><g><title>ufunc_seterr (ufunc_object.c) (2 samples, 0.81%)</title><rect x="1089" y="292" width="10" height="15" fill="rgb(218,59,48)"/><text x="1092.00" y="302.50"></text></g><g><title>ufunc_update_use_defaults (extobj.c) (2 samples, 0.81%)</title><rect x="1089" y="308" width="10" height="15" fill="rgb(243,167,24)"/><text x="1092.00" y="318.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py) (2 samples, 0.81%)</title><rect x="1099" y="260" width="9" height="15" fill="rgb(245,102,7)"/><text x="1102.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (1 samples, 0.40%)</title><rect x="1104" y="276" width="4" height="15" fill="rgb(231,70,48)"/><text x="1107.00" y="286.50"></text></g><g><title>array_add (number.c) (1 samples, 0.40%)</title><rect x="1108" y="260" width="5" height="15" fill="rgb(222,59,30)"/><text x="1111.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1108" y="276" width="5" height="15" fill="rgb(238,92,1)"/><text x="1111.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1108" y="292" width="5" height="15" fill="rgb(224,93,4)"/><text x="1111.00" y="302.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.40%)</title><rect x="1108" y="308" width="5" height="15" fill="rgb(217,134,8)"/><text x="1111.00" y="318.50"></text></g><g><title>_extract_pyvals (extobj.c) (1 samples, 0.40%)</title><rect x="1108" y="324" width="5" height="15" fill="rgb(239,220,30)"/><text x="1111.00" y="334.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;) (12 samples, 4.86%)</title><rect x="1061" y="196" width="57" height="15" fill="rgb(225,191,11)"/><text x="1064.00" y="206.50">isclos..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (12 samples, 4.86%)</title><rect x="1061" y="212" width="57" height="15" fill="rgb(218,79,12)"/><text x="1064.00" y="222.50">array_..</text></g><g><title>isclose (numpy/core/numeric.py) (12 samples, 4.86%)</title><rect x="1061" y="228" width="57" height="15" fill="rgb(237,89,22)"/><text x="1064.00" y="238.50">isclos..</text></g><g><title>within_tol (numpy/core/numeric.py) (7 samples, 2.83%)</title><rect x="1084" y="244" width="34" height="15" fill="rgb(217,132,38)"/><text x="1087.00" y="254.50">wi..</text></g><g><title>array_multiply (number.c) (1 samples, 0.40%)</title><rect x="1113" y="260" width="5" height="15" fill="rgb(213,197,29)"/><text x="1116.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1113" y="276" width="5" height="15" fill="rgb(232,161,43)"/><text x="1116.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1113" y="292" width="5" height="15" fill="rgb(253,222,39)"/><text x="1116.00" y="302.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1113" y="308" width="5" height="15" fill="rgb(235,164,28)"/><text x="1116.00" y="318.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="1118" y="260" width="5" height="15" fill="rgb(240,200,26)"/><text x="1121.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.40%)</title><rect x="1123" y="276" width="4" height="15" fill="rgb(225,46,41)"/><text x="1126.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.40%)</title><rect x="1123" y="292" width="4" height="15" fill="rgb(249,178,17)"/><text x="1126.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.40%)</title><rect x="1123" y="308" width="4" height="15" fill="rgb(213,138,47)"/><text x="1126.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.40%)</title><rect x="1123" y="324" width="4" height="15" fill="rgb(211,72,39)"/><text x="1126.00" y="334.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py) (116 samples, 46.96%)</title><rect x="578" y="164" width="554" height="15" fill="rgb(210,50,7)"/><text x="581.00" y="174.50">_get_median_predict (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py) (24 samples, 9.72%)</title><rect x="1018" y="180" width="114" height="15" fill="rgb(229,20,35)"/><text x="1021.00" y="190.50">stable_cumsum ..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (3 samples, 1.21%)</title><rect x="1118" y="196" width="14" height="15" fill="rgb(238,24,28)"/><text x="1121.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.21%)</title><rect x="1118" y="212" width="14" height="15" fill="rgb(230,18,36)"/><text x="1121.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (3 samples, 1.21%)</title><rect x="1118" y="228" width="14" height="15" fill="rgb(208,225,31)"/><text x="1121.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (3 samples, 1.21%)</title><rect x="1118" y="244" width="14" height="15" fill="rgb(208,72,47)"/><text x="1121.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.81%)</title><rect x="1123" y="260" width="9" height="15" fill="rgb(241,123,47)"/><text x="1126.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1127" y="276" width="5" height="15" fill="rgb(250,181,49)"/><text x="1130.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1127" y="292" width="5" height="15" fill="rgb(241,50,13)"/><text x="1130.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.40%)</title><rect x="1127" y="308" width="5" height="15" fill="rgb(240,39,33)"/><text x="1130.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.40%)</title><rect x="1127" y="324" width="5" height="15" fill="rgb(245,13,33)"/><text x="1130.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.40%)</title><rect x="1127" y="340" width="5" height="15" fill="rgb(245,175,25)"/><text x="1130.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.40%)</title><rect x="1127" y="356" width="5" height="15" fill="rgb(249,215,9)"/><text x="1130.00" y="366.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.40%)</title><rect x="1127" y="372" width="5" height="15" fill="rgb(250,10,23)"/><text x="1130.00" y="382.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 1.21%)</title><rect x="1142" y="196" width="14" height="15" fill="rgb(253,179,52)"/><text x="1145.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.40%)</title><rect x="1156" y="196" width="5" height="15" fill="rgb(243,191,35)"/><text x="1159.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.40%)</title><rect x="1161" y="196" width="5" height="15" fill="rgb(225,222,26)"/><text x="1164.00" y="206.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (9 samples, 3.64%)</title><rect x="1132" y="164" width="43" height="15" fill="rgb(240,62,30)"/><text x="1135.00" y="174.50">_val..</text></g><g><title>check_array (sklearn/utils/validation.py) (9 samples, 3.64%)</title><rect x="1132" y="180" width="43" height="15" fill="rgb(249,225,22)"/><text x="1135.00" y="190.50">chec..</text></g><g><title>simplefilter (warnings.py) (2 samples, 0.81%)</title><rect x="1166" y="196" width="9" height="15" fill="rgb(215,183,21)"/><text x="1169.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.81%)</title><rect x="1166" y="212" width="9" height="15" fill="rgb(216,137,4)"/><text x="1169.00" y="222.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.40%)</title><rect x="1170" y="228" width="5" height="15" fill="rgb(213,25,29)"/><text x="1173.00" y="238.50"></text></g><g><title>all (247 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(247,202,26)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (247 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(225,73,36)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (129 samples, 52.23%)</title><rect x="573" y="68" width="617" height="15" fill="rgb(245,99,38)"/><text x="576.00" y="78.50">profile_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (129 samples, 52.23%)</title><rect x="573" y="84" width="617" height="15" fill="rgb(216,203,32)"/><text x="576.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py)</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py) (129 samples, 52.23%)</title><rect x="573" y="100" width="617" height="15" fill="rgb(236,153,44)"/><text x="576.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (129 samples, 52.23%)</title><rect x="573" y="116" width="617" height="15" fill="rgb(228,44,39)"/><text x="576.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (129 samples, 52.23%)</title><rect x="573" y="132" width="617" height="15" fill="rgb(247,217,43)"/><text x="576.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py) (129 samples, 52.23%)</title><rect x="573" y="148" width="617" height="15" fill="rgb(248,24,31)"/><text x="576.00" y="158.50">predict (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (3 samples, 1.21%)</title><rect x="1175" y="164" width="15" height="15" fill="rgb(215,177,52)"/><text x="1178.00" y="174.50"></text></g><g><title>isclass (inspect.py) (1 samples, 0.40%)</title><rect x="1185" y="180" width="5" height="15" fill="rgb(231,217,29)"/><text x="1188.00" y="190.50"></text></g></g></svg>