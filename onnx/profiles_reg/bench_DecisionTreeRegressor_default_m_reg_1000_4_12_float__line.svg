<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1862" onload="init(evt)" viewBox="0 0 1200 1862" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1862" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1845.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1845.00"> </text><g id="frames"><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:1) (1 samples, 0.18%)</title><rect x="10" y="148" width="2" height="15" fill="rgb(251,27,52)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(214,134,6)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(237,146,8)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(227,99,48)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(205,95,40)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="10" y="228" width="2" height="15" fill="rgb(212,47,40)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.18%)</title><rect x="10" y="244" width="2" height="15" fill="rgb(228,14,50)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.18%)</title><rect x="10" y="260" width="2" height="15" fill="rgb(244,78,50)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="10" y="276" width="2" height="15" fill="rgb(239,117,18)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="10" y="292" width="2" height="15" fill="rgb(243,125,50)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="10" y="308" width="2" height="15" fill="rgb(246,213,0)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="10" y="324" width="2" height="15" fill="rgb(254,166,1)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="10" y="340" width="2" height="15" fill="rgb(222,188,45)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="10" y="356" width="2" height="15" fill="rgb(205,17,49)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:86) (1 samples, 0.18%)</title><rect x="10" y="372" width="2" height="15" fill="rgb(229,11,39)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.18%)</title><rect x="10" y="388" width="2" height="15" fill="rgb(208,92,10)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="10" y="404" width="2" height="15" fill="rgb(216,216,18)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="10" y="420" width="2" height="15" fill="rgb(252,24,12)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="10" y="436" width="2" height="15" fill="rgb(253,209,7)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="10" y="452" width="2" height="15" fill="rgb(214,4,25)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="10" y="468" width="2" height="15" fill="rgb(206,7,25)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="10" y="484" width="2" height="15" fill="rgb(253,27,39)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/shape_base.py:285) (1 samples, 0.18%)</title><rect x="10" y="500" width="2" height="15" fill="rgb(247,123,22)"/><text x="13.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.18%)</title><rect x="10" y="516" width="2" height="15" fill="rgb(211,169,9)"/><text x="13.00" y="526.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.18%)</title><rect x="12" y="852" width="2" height="15" fill="rgb(244,62,3)"/><text x="15.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.18%)</title><rect x="12" y="868" width="2" height="15" fill="rgb(241,83,47)"/><text x="15.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.18%)</title><rect x="12" y="884" width="2" height="15" fill="rgb(227,104,35)"/><text x="15.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.18%)</title><rect x="12" y="900" width="2" height="15" fill="rgb(235,207,30)"/><text x="15.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.18%)</title><rect x="12" y="916" width="2" height="15" fill="rgb(245,144,18)"/><text x="15.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.18%)</title><rect x="12" y="932" width="2" height="15" fill="rgb(235,83,44)"/><text x="15.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.18%)</title><rect x="12" y="948" width="2" height="15" fill="rgb(228,178,48)"/><text x="15.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.18%)</title><rect x="12" y="964" width="2" height="15" fill="rgb(211,214,26)"/><text x="15.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.18%)</title><rect x="12" y="980" width="2" height="15" fill="rgb(210,134,42)"/><text x="15.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.18%)</title><rect x="12" y="996" width="2" height="15" fill="rgb(232,52,16)"/><text x="15.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.18%)</title><rect x="12" y="1012" width="2" height="15" fill="rgb(229,132,48)"/><text x="15.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.18%)</title><rect x="12" y="1028" width="2" height="15" fill="rgb(217,85,32)"/><text x="15.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.18%)</title><rect x="12" y="1044" width="2" height="15" fill="rgb(206,153,1)"/><text x="15.00" y="1054.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.18%)</title><rect x="12" y="1060" width="2" height="15" fill="rgb(227,205,23)"/><text x="15.00" y="1070.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.18%)</title><rect x="14" y="884" width="2" height="15" fill="rgb(218,12,12)"/><text x="17.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.18%)</title><rect x="14" y="900" width="2" height="15" fill="rgb(224,129,0)"/><text x="17.00" y="910.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py:54) (1 samples, 0.18%)</title><rect x="14" y="916" width="2" height="15" fill="rgb(253,123,34)"/><text x="17.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:66) (1 samples, 0.18%)</title><rect x="14" y="932" width="2" height="15" fill="rgb(221,52,33)"/><text x="17.00" y="942.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:2) (3 samples, 0.54%)</title><rect x="12" y="148" width="6" height="15" fill="rgb(214,103,41)"/><text x="15.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="12" y="164" width="6" height="15" fill="rgb(252,176,15)"/><text x="15.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.54%)</title><rect x="12" y="180" width="6" height="15" fill="rgb(211,229,3)"/><text x="15.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="12" y="196" width="6" height="15" fill="rgb(250,99,22)"/><text x="15.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="12" y="212" width="6" height="15" fill="rgb(251,182,49)"/><text x="15.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="12" y="228" width="6" height="15" fill="rgb(207,113,49)"/><text x="15.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="12" y="244" width="6" height="15" fill="rgb(219,113,27)"/><text x="15.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="12" y="260" width="6" height="15" fill="rgb(251,43,37)"/><text x="15.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="12" y="276" width="6" height="15" fill="rgb(252,3,17)"/><text x="15.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 0.54%)</title><rect x="12" y="292" width="6" height="15" fill="rgb(238,35,1)"/><text x="15.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="12" y="308" width="6" height="15" fill="rgb(231,68,34)"/><text x="15.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="12" y="324" width="6" height="15" fill="rgb(236,199,24)"/><text x="15.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="12" y="340" width="6" height="15" fill="rgb(253,169,35)"/><text x="15.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="12" y="356" width="6" height="15" fill="rgb(216,78,46)"/><text x="15.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="12" y="372" width="6" height="15" fill="rgb(247,181,0)"/><text x="15.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 0.54%)</title><rect x="12" y="388" width="6" height="15" fill="rgb(254,137,48)"/><text x="15.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="12" y="404" width="6" height="15" fill="rgb(205,62,25)"/><text x="15.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="12" y="420" width="6" height="15" fill="rgb(247,218,17)"/><text x="15.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="12" y="436" width="6" height="15" fill="rgb(212,4,34)"/><text x="15.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="12" y="452" width="6" height="15" fill="rgb(239,79,3)"/><text x="15.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="12" y="468" width="6" height="15" fill="rgb(230,117,45)"/><text x="15.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 0.54%)</title><rect x="12" y="484" width="6" height="15" fill="rgb(252,94,9)"/><text x="15.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="12" y="500" width="6" height="15" fill="rgb(211,162,18)"/><text x="15.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="12" y="516" width="6" height="15" fill="rgb(246,213,43)"/><text x="15.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="12" y="532" width="6" height="15" fill="rgb(247,192,54)"/><text x="15.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="12" y="548" width="6" height="15" fill="rgb(237,103,14)"/><text x="15.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="12" y="564" width="6" height="15" fill="rgb(218,41,17)"/><text x="15.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 0.54%)</title><rect x="12" y="580" width="6" height="15" fill="rgb(208,119,32)"/><text x="15.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="12" y="596" width="6" height="15" fill="rgb(215,229,54)"/><text x="15.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.54%)</title><rect x="12" y="612" width="6" height="15" fill="rgb(242,143,43)"/><text x="15.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="12" y="628" width="6" height="15" fill="rgb(241,203,28)"/><text x="15.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="12" y="644" width="6" height="15" fill="rgb(223,35,10)"/><text x="15.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="12" y="660" width="6" height="15" fill="rgb(228,207,26)"/><text x="15.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="12" y="676" width="6" height="15" fill="rgb(250,111,47)"/><text x="15.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="12" y="692" width="6" height="15" fill="rgb(224,0,29)"/><text x="15.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="12" y="708" width="6" height="15" fill="rgb(251,87,31)"/><text x="15.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 0.54%)</title><rect x="12" y="724" width="6" height="15" fill="rgb(210,142,20)"/><text x="15.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="12" y="740" width="6" height="15" fill="rgb(245,97,15)"/><text x="15.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="12" y="756" width="6" height="15" fill="rgb(254,34,26)"/><text x="15.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="12" y="772" width="6" height="15" fill="rgb(225,193,35)"/><text x="15.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="12" y="788" width="6" height="15" fill="rgb(211,39,15)"/><text x="15.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="12" y="804" width="6" height="15" fill="rgb(246,179,3)"/><text x="15.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 0.54%)</title><rect x="12" y="820" width="6" height="15" fill="rgb(213,108,30)"/><text x="15.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 0.54%)</title><rect x="12" y="836" width="6" height="15" fill="rgb(222,215,45)"/><text x="15.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.36%)</title><rect x="14" y="852" width="4" height="15" fill="rgb(241,120,41)"/><text x="17.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.36%)</title><rect x="14" y="868" width="4" height="15" fill="rgb(246,212,41)"/><text x="17.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.18%)</title><rect x="16" y="884" width="2" height="15" fill="rgb(214,58,3)"/><text x="19.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.18%)</title><rect x="16" y="900" width="2" height="15" fill="rgb(234,155,5)"/><text x="19.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2581) (1 samples, 0.18%)</title><rect x="16" y="916" width="2" height="15" fill="rgb(222,226,25)"/><text x="19.00" y="926.50"></text></g><g><title>splitext (posixpath.py:129) (1 samples, 0.18%)</title><rect x="16" y="932" width="2" height="15" fill="rgb(216,29,53)"/><text x="19.00" y="942.50"></text></g><g><title>_splitext (genericpath.py:134) (1 samples, 0.18%)</title><rect x="16" y="948" width="2" height="15" fill="rgb(245,202,15)"/><text x="19.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:13) (1 samples, 0.18%)</title><rect x="18" y="580" width="2" height="15" fill="rgb(219,145,24)"/><text x="21.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="18" y="596" width="2" height="15" fill="rgb(242,142,3)"/><text x="21.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.18%)</title><rect x="18" y="612" width="2" height="15" fill="rgb(249,218,10)"/><text x="21.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="18" y="628" width="2" height="15" fill="rgb(220,0,47)"/><text x="21.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="18" y="644" width="2" height="15" fill="rgb(227,8,29)"/><text x="21.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="18" y="660" width="2" height="15" fill="rgb(250,66,41)"/><text x="21.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="18" y="676" width="2" height="15" fill="rgb(236,185,3)"/><text x="21.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="18" y="692" width="2" height="15" fill="rgb(224,146,50)"/><text x="21.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="18" y="708" width="2" height="15" fill="rgb(217,138,17)"/><text x="21.00" y="718.50"></text></g><g><title>&lt;module&gt; (distutils/__init__.py:44) (1 samples, 0.18%)</title><rect x="18" y="724" width="2" height="15" fill="rgb(252,54,34)"/><text x="21.00" y="734.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.18%)</title><rect x="18" y="740" width="2" height="15" fill="rgb(239,209,27)"/><text x="21.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="18" y="756" width="2" height="15" fill="rgb(253,44,9)"/><text x="21.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="18" y="772" width="2" height="15" fill="rgb(250,141,34)"/><text x="21.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="18" y="788" width="2" height="15" fill="rgb(230,158,8)"/><text x="21.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="18" y="804" width="2" height="15" fill="rgb(249,102,49)"/><text x="21.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.18%)</title><rect x="18" y="820" width="2" height="15" fill="rgb(225,220,9)"/><text x="21.00" y="830.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:812) (1 samples, 0.18%)</title><rect x="18" y="836" width="2" height="15" fill="rgb(247,105,23)"/><text x="21.00" y="846.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;:953) (1 samples, 0.18%)</title><rect x="18" y="852" width="2" height="15" fill="rgb(237,167,52)"/><text x="21.00" y="862.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.18%)</title><rect x="18" y="868" width="2" height="15" fill="rgb(239,11,21)"/><text x="21.00" y="878.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.18%)</title><rect x="18" y="884" width="2" height="15" fill="rgb(239,144,2)"/><text x="21.00" y="894.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.18%)</title><rect x="18" y="900" width="2" height="15" fill="rgb(224,214,10)"/><text x="21.00" y="910.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py:196) (1 samples, 0.18%)</title><rect x="20" y="1220" width="2" height="15" fill="rgb(253,151,26)"/><text x="23.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="20" y="1236" width="2" height="15" fill="rgb(209,223,33)"/><text x="23.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="20" y="1252" width="2" height="15" fill="rgb(219,134,36)"/><text x="23.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="20" y="1268" width="2" height="15" fill="rgb(228,183,21)"/><text x="23.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="20" y="1284" width="2" height="15" fill="rgb(225,198,24)"/><text x="23.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="20" y="1300" width="2" height="15" fill="rgb(219,62,48)"/><text x="23.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/basic.py:12) (1 samples, 0.18%)</title><rect x="20" y="1316" width="2" height="15" fill="rgb(221,111,30)"/><text x="23.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="20" y="1332" width="2" height="15" fill="rgb(236,140,48)"/><text x="23.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="20" y="1348" width="2" height="15" fill="rgb(211,16,43)"/><text x="23.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="20" y="1364" width="2" height="15" fill="rgb(224,14,14)"/><text x="23.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="20" y="1380" width="2" height="15" fill="rgb(250,141,31)"/><text x="23.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="20" y="1396" width="2" height="15" fill="rgb(229,170,27)"/><text x="23.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/flinalg.py:13) (1 samples, 0.18%)</title><rect x="20" y="1412" width="2" height="15" fill="rgb(210,57,25)"/><text x="23.00" y="1422.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1021) (1 samples, 0.18%)</title><rect x="20" y="1428" width="2" height="15" fill="rgb(251,108,39)"/><text x="23.00" y="1438.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (2 samples, 0.36%)</title><rect x="20" y="772" width="4" height="15" fill="rgb(245,115,48)"/><text x="23.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="20" y="788" width="4" height="15" fill="rgb(247,161,30)"/><text x="23.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="20" y="804" width="4" height="15" fill="rgb(216,167,9)"/><text x="23.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="20" y="820" width="4" height="15" fill="rgb(254,125,45)"/><text x="23.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="20" y="836" width="4" height="15" fill="rgb(224,103,35)"/><text x="23.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="20" y="852" width="4" height="15" fill="rgb(252,182,17)"/><text x="23.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py:643) (2 samples, 0.36%)</title><rect x="20" y="868" width="4" height="15" fill="rgb(214,197,44)"/><text x="23.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="20" y="884" width="4" height="15" fill="rgb(222,86,53)"/><text x="23.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="20" y="900" width="4" height="15" fill="rgb(233,160,2)"/><text x="23.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="20" y="916" width="4" height="15" fill="rgb(205,139,31)"/><text x="23.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="20" y="932" width="4" height="15" fill="rgb(229,183,18)"/><text x="23.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="20" y="948" width="4" height="15" fill="rgb(216,192,0)"/><text x="23.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/special/basic.py:19) (2 samples, 0.36%)</title><rect x="20" y="964" width="4" height="15" fill="rgb(213,111,32)"/><text x="23.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.36%)</title><rect x="20" y="980" width="4" height="15" fill="rgb(253,129,16)"/><text x="23.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="20" y="996" width="4" height="15" fill="rgb(212,156,7)"/><text x="23.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="20" y="1012" width="4" height="15" fill="rgb(241,197,47)"/><text x="23.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="20" y="1028" width="4" height="15" fill="rgb(241,91,44)"/><text x="23.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="20" y="1044" width="4" height="15" fill="rgb(234,139,13)"/><text x="23.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="20" y="1060" width="4" height="15" fill="rgb(240,203,47)"/><text x="23.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="20" y="1076" width="4" height="15" fill="rgb(245,120,37)"/><text x="23.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/special/orthogonal.py:83) (2 samples, 0.36%)</title><rect x="20" y="1092" width="4" height="15" fill="rgb(236,59,1)"/><text x="23.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.36%)</title><rect x="20" y="1108" width="4" height="15" fill="rgb(206,43,18)"/><text x="23.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="20" y="1124" width="4" height="15" fill="rgb(249,34,6)"/><text x="23.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="20" y="1140" width="4" height="15" fill="rgb(207,22,42)"/><text x="23.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="20" y="1156" width="4" height="15" fill="rgb(220,164,20)"/><text x="23.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="20" y="1172" width="4" height="15" fill="rgb(232,93,44)"/><text x="23.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="20" y="1188" width="4" height="15" fill="rgb(209,74,37)"/><text x="23.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="20" y="1204" width="4" height="15" fill="rgb(235,138,22)"/><text x="23.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py:205) (1 samples, 0.18%)</title><rect x="22" y="1220" width="2" height="15" fill="rgb(237,84,12)"/><text x="25.00" y="1230.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:4) (4 samples, 0.72%)</title><rect x="18" y="148" width="8" height="15" fill="rgb(242,111,12)"/><text x="21.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.72%)</title><rect x="18" y="164" width="8" height="15" fill="rgb(247,147,3)"/><text x="21.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.72%)</title><rect x="18" y="180" width="8" height="15" fill="rgb(250,16,2)"/><text x="21.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.72%)</title><rect x="18" y="196" width="8" height="15" fill="rgb(237,172,32)"/><text x="21.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.72%)</title><rect x="18" y="212" width="8" height="15" fill="rgb(229,158,6)"/><text x="21.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.72%)</title><rect x="18" y="228" width="8" height="15" fill="rgb(210,78,0)"/><text x="21.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.72%)</title><rect x="18" y="244" width="8" height="15" fill="rgb(235,169,12)"/><text x="21.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.72%)</title><rect x="18" y="260" width="8" height="15" fill="rgb(212,109,19)"/><text x="21.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.72%)</title><rect x="18" y="276" width="8" height="15" fill="rgb(223,41,52)"/><text x="21.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (4 samples, 0.72%)</title><rect x="18" y="292" width="8" height="15" fill="rgb(223,53,52)"/><text x="21.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.72%)</title><rect x="18" y="308" width="8" height="15" fill="rgb(222,84,29)"/><text x="21.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.72%)</title><rect x="18" y="324" width="8" height="15" fill="rgb(253,154,8)"/><text x="21.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.72%)</title><rect x="18" y="340" width="8" height="15" fill="rgb(250,23,53)"/><text x="21.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.72%)</title><rect x="18" y="356" width="8" height="15" fill="rgb(245,73,1)"/><text x="21.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.72%)</title><rect x="18" y="372" width="8" height="15" fill="rgb(219,213,0)"/><text x="21.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (4 samples, 0.72%)</title><rect x="18" y="388" width="8" height="15" fill="rgb(225,161,19)"/><text x="21.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.72%)</title><rect x="18" y="404" width="8" height="15" fill="rgb(206,7,33)"/><text x="21.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.72%)</title><rect x="18" y="420" width="8" height="15" fill="rgb(222,23,54)"/><text x="21.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.72%)</title><rect x="18" y="436" width="8" height="15" fill="rgb(206,18,3)"/><text x="21.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.72%)</title><rect x="18" y="452" width="8" height="15" fill="rgb(253,0,20)"/><text x="21.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.72%)</title><rect x="18" y="468" width="8" height="15" fill="rgb(229,173,7)"/><text x="21.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (4 samples, 0.72%)</title><rect x="18" y="484" width="8" height="15" fill="rgb(224,2,3)"/><text x="21.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.72%)</title><rect x="18" y="500" width="8" height="15" fill="rgb(222,28,44)"/><text x="21.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.72%)</title><rect x="18" y="516" width="8" height="15" fill="rgb(248,77,13)"/><text x="21.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.72%)</title><rect x="18" y="532" width="8" height="15" fill="rgb(218,198,1)"/><text x="21.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.72%)</title><rect x="18" y="548" width="8" height="15" fill="rgb(214,127,16)"/><text x="21.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.72%)</title><rect x="18" y="564" width="8" height="15" fill="rgb(243,79,11)"/><text x="21.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (3 samples, 0.54%)</title><rect x="20" y="580" width="6" height="15" fill="rgb(218,99,1)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="20" y="596" width="6" height="15" fill="rgb(225,108,41)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="20" y="612" width="6" height="15" fill="rgb(234,74,41)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="20" y="628" width="6" height="15" fill="rgb(215,74,0)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="20" y="644" width="6" height="15" fill="rgb(218,101,47)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="20" y="660" width="6" height="15" fill="rgb(211,207,18)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (3 samples, 0.54%)</title><rect x="20" y="676" width="6" height="15" fill="rgb(233,205,32)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="20" y="692" width="6" height="15" fill="rgb(237,69,41)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="20" y="708" width="6" height="15" fill="rgb(235,200,28)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="20" y="724" width="6" height="15" fill="rgb(236,0,51)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="20" y="740" width="6" height="15" fill="rgb(223,80,33)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="20" y="756" width="6" height="15" fill="rgb(244,24,0)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.18%)</title><rect x="24" y="772" width="2" height="15" fill="rgb(252,133,51)"/><text x="27.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.18%)</title><rect x="24" y="788" width="2" height="15" fill="rgb(238,3,48)"/><text x="27.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="24" y="804" width="2" height="15" fill="rgb(223,24,10)"/><text x="27.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="24" y="820" width="2" height="15" fill="rgb(252,227,48)"/><text x="27.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="24" y="836" width="2" height="15" fill="rgb(214,172,22)"/><text x="27.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="24" y="852" width="2" height="15" fill="rgb(253,188,3)"/><text x="27.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="24" y="868" width="2" height="15" fill="rgb(223,51,21)"/><text x="27.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="24" y="884" width="2" height="15" fill="rgb(232,197,30)"/><text x="27.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.18%)</title><rect x="24" y="900" width="2" height="15" fill="rgb(240,125,31)"/><text x="27.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.18%)</title><rect x="24" y="916" width="2" height="15" fill="rgb(215,143,46)"/><text x="27.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="24" y="932" width="2" height="15" fill="rgb(234,69,43)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="24" y="948" width="2" height="15" fill="rgb(231,167,33)"/><text x="27.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="24" y="964" width="2" height="15" fill="rgb(209,42,14)"/><text x="27.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="24" y="980" width="2" height="15" fill="rgb(223,82,5)"/><text x="27.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="24" y="996" width="2" height="15" fill="rgb(244,197,42)"/><text x="27.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="24" y="1012" width="2" height="15" fill="rgb(215,64,44)"/><text x="27.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:7129) (1 samples, 0.18%)</title><rect x="24" y="1028" width="2" height="15" fill="rgb(211,154,34)"/><text x="27.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.18%)</title><rect x="24" y="1044" width="2" height="15" fill="rgb(214,118,54)"/><text x="27.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.18%)</title><rect x="24" y="1060" width="2" height="15" fill="rgb(241,163,28)"/><text x="27.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:60) (1 samples, 0.18%)</title><rect x="24" y="1076" width="2" height="15" fill="rgb(243,128,5)"/><text x="27.00" y="1086.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.18%)</title><rect x="24" y="1092" width="2" height="15" fill="rgb(226,154,15)"/><text x="27.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.18%)</title><rect x="26" y="244" width="3" height="15" fill="rgb(221,21,27)"/><text x="29.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="26" y="260" width="3" height="15" fill="rgb(237,183,11)"/><text x="29.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="26" y="276" width="3" height="15" fill="rgb(225,76,5)"/><text x="29.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="26" y="292" width="3" height="15" fill="rgb(206,178,2)"/><text x="29.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="26" y="308" width="3" height="15" fill="rgb(225,19,45)"/><text x="29.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="26" y="324" width="3" height="15" fill="rgb(210,170,42)"/><text x="29.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.18%)</title><rect x="26" y="340" width="3" height="15" fill="rgb(214,164,19)"/><text x="29.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="26" y="356" width="3" height="15" fill="rgb(229,69,11)"/><text x="29.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.18%)</title><rect x="26" y="372" width="3" height="15" fill="rgb(223,84,34)"/><text x="29.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="26" y="388" width="3" height="15" fill="rgb(208,104,49)"/><text x="29.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="26" y="404" width="3" height="15" fill="rgb(248,39,1)"/><text x="29.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="26" y="420" width="3" height="15" fill="rgb(253,217,26)"/><text x="29.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="26" y="436" width="3" height="15" fill="rgb(205,9,27)"/><text x="29.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="26" y="452" width="3" height="15" fill="rgb(235,123,10)"/><text x="29.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="26" y="468" width="3" height="15" fill="rgb(211,192,52)"/><text x="29.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.18%)</title><rect x="26" y="484" width="3" height="15" fill="rgb(243,23,35)"/><text x="29.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="26" y="500" width="3" height="15" fill="rgb(208,153,33)"/><text x="29.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="26" y="516" width="3" height="15" fill="rgb(245,48,11)"/><text x="29.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="26" y="532" width="3" height="15" fill="rgb(245,216,37)"/><text x="29.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="26" y="548" width="3" height="15" fill="rgb(216,192,14)"/><text x="29.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="26" y="564" width="3" height="15" fill="rgb(207,136,51)"/><text x="29.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.18%)</title><rect x="26" y="580" width="3" height="15" fill="rgb(241,131,34)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="26" y="596" width="3" height="15" fill="rgb(250,47,12)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="26" y="612" width="3" height="15" fill="rgb(214,92,39)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="26" y="628" width="3" height="15" fill="rgb(228,132,7)"/><text x="29.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="26" y="644" width="3" height="15" fill="rgb(209,11,37)"/><text x="29.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="26" y="660" width="3" height="15" fill="rgb(242,123,13)"/><text x="29.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.18%)</title><rect x="26" y="676" width="3" height="15" fill="rgb(214,119,5)"/><text x="29.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="26" y="692" width="3" height="15" fill="rgb(208,21,40)"/><text x="29.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="26" y="708" width="3" height="15" fill="rgb(224,165,21)"/><text x="29.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="26" y="724" width="3" height="15" fill="rgb(228,51,9)"/><text x="29.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="26" y="740" width="3" height="15" fill="rgb(210,13,47)"/><text x="29.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="26" y="756" width="3" height="15" fill="rgb(227,159,3)"/><text x="29.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.18%)</title><rect x="26" y="772" width="3" height="15" fill="rgb(224,104,2)"/><text x="29.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.18%)</title><rect x="26" y="788" width="3" height="15" fill="rgb(249,212,27)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="26" y="804" width="3" height="15" fill="rgb(246,114,42)"/><text x="29.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="26" y="820" width="3" height="15" fill="rgb(217,177,18)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="26" y="836" width="3" height="15" fill="rgb(234,128,47)"/><text x="29.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="26" y="852" width="3" height="15" fill="rgb(230,91,5)"/><text x="29.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="26" y="868" width="3" height="15" fill="rgb(236,24,39)"/><text x="29.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="26" y="884" width="3" height="15" fill="rgb(219,136,48)"/><text x="29.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.18%)</title><rect x="26" y="900" width="3" height="15" fill="rgb(245,103,16)"/><text x="29.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="26" y="916" width="3" height="15" fill="rgb(211,160,6)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="26" y="932" width="3" height="15" fill="rgb(226,191,49)"/><text x="29.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="26" y="948" width="3" height="15" fill="rgb(223,28,33)"/><text x="29.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="26" y="964" width="3" height="15" fill="rgb(243,157,40)"/><text x="29.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="26" y="980" width="3" height="15" fill="rgb(233,217,13)"/><text x="29.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.18%)</title><rect x="26" y="996" width="3" height="15" fill="rgb(231,70,11)"/><text x="29.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="26" y="1012" width="3" height="15" fill="rgb(216,122,3)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="26" y="1028" width="3" height="15" fill="rgb(233,164,32)"/><text x="29.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="26" y="1044" width="3" height="15" fill="rgb(253,170,30)"/><text x="29.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="26" y="1060" width="3" height="15" fill="rgb(245,34,8)"/><text x="29.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="26" y="1076" width="3" height="15" fill="rgb(211,159,18)"/><text x="29.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:27) (1 samples, 0.18%)</title><rect x="26" y="1092" width="3" height="15" fill="rgb(227,185,9)"/><text x="29.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="26" y="1108" width="3" height="15" fill="rgb(229,74,38)"/><text x="29.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="26" y="1124" width="3" height="15" fill="rgb(254,50,15)"/><text x="29.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="26" y="1140" width="3" height="15" fill="rgb(243,28,26)"/><text x="29.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="26" y="1156" width="3" height="15" fill="rgb(219,11,18)"/><text x="29.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="26" y="1172" width="3" height="15" fill="rgb(211,190,22)"/><text x="29.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/ciphers.py:17) (1 samples, 0.18%)</title><rect x="26" y="1188" width="3" height="15" fill="rgb(242,48,28)"/><text x="29.00" y="1198.50"></text></g><g><title>register_decorator (cryptography/utils.py:47) (1 samples, 0.18%)</title><rect x="26" y="1204" width="3" height="15" fill="rgb(234,39,7)"/><text x="29.00" y="1214.50"></text></g><g><title>verify_interface (cryptography/utils.py:106) (1 samples, 0.18%)</title><rect x="26" y="1220" width="3" height="15" fill="rgb(244,44,6)"/><text x="29.00" y="1230.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.18%)</title><rect x="26" y="1236" width="3" height="15" fill="rgb(216,2,10)"/><text x="29.00" y="1246.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.18%)</title><rect x="26" y="1252" width="3" height="15" fill="rgb(215,122,48)"/><text x="29.00" y="1262.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.18%)</title><rect x="26" y="1268" width="3" height="15" fill="rgb(248,5,48)"/><text x="29.00" y="1278.50"></text></g><g><title>_signature_from_function (inspect.py:2194) (1 samples, 0.18%)</title><rect x="26" y="1284" width="3" height="15" fill="rgb(223,3,26)"/><text x="29.00" y="1294.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.18%)</title><rect x="29" y="436" width="2" height="15" fill="rgb(248,196,26)"/><text x="32.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="29" y="452" width="2" height="15" fill="rgb(247,65,37)"/><text x="32.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="29" y="468" width="2" height="15" fill="rgb(237,1,31)"/><text x="32.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="29" y="484" width="2" height="15" fill="rgb(206,8,28)"/><text x="32.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="29" y="500" width="2" height="15" fill="rgb(234,28,23)"/><text x="32.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="29" y="516" width="2" height="15" fill="rgb(243,16,27)"/><text x="32.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.18%)</title><rect x="29" y="532" width="2" height="15" fill="rgb(230,115,19)"/><text x="32.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="29" y="548" width="2" height="15" fill="rgb(223,155,10)"/><text x="32.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="29" y="564" width="2" height="15" fill="rgb(243,194,23)"/><text x="32.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="29" y="580" width="2" height="15" fill="rgb(225,106,46)"/><text x="32.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="29" y="596" width="2" height="15" fill="rgb(220,42,45)"/><text x="32.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="29" y="612" width="2" height="15" fill="rgb(210,41,33)"/><text x="32.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.18%)</title><rect x="29" y="628" width="2" height="15" fill="rgb(208,101,12)"/><text x="32.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="29" y="644" width="2" height="15" fill="rgb(245,43,51)"/><text x="32.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="29" y="660" width="2" height="15" fill="rgb(238,121,26)"/><text x="32.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="29" y="676" width="2" height="15" fill="rgb(228,9,14)"/><text x="32.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="29" y="692" width="2" height="15" fill="rgb(253,154,46)"/><text x="32.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="29" y="708" width="2" height="15" fill="rgb(211,136,13)"/><text x="32.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.18%)</title><rect x="29" y="724" width="2" height="15" fill="rgb(214,118,33)"/><text x="32.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="29" y="740" width="2" height="15" fill="rgb(219,188,46)"/><text x="32.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="29" y="756" width="2" height="15" fill="rgb(223,18,4)"/><text x="32.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="29" y="772" width="2" height="15" fill="rgb(244,186,10)"/><text x="32.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="29" y="788" width="2" height="15" fill="rgb(247,215,32)"/><text x="32.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="29" y="804" width="2" height="15" fill="rgb(223,184,34)"/><text x="32.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.18%)</title><rect x="29" y="820" width="2" height="15" fill="rgb(244,128,13)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="29" y="836" width="2" height="15" fill="rgb(231,1,46)"/><text x="32.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="29" y="852" width="2" height="15" fill="rgb(210,31,51)"/><text x="32.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="29" y="868" width="2" height="15" fill="rgb(250,57,18)"/><text x="32.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="29" y="884" width="2" height="15" fill="rgb(241,58,46)"/><text x="32.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="29" y="900" width="2" height="15" fill="rgb(230,192,17)"/><text x="32.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.18%)</title><rect x="29" y="916" width="2" height="15" fill="rgb(246,95,0)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="29" y="932" width="2" height="15" fill="rgb(237,166,54)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="29" y="948" width="2" height="15" fill="rgb(252,69,3)"/><text x="32.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="29" y="964" width="2" height="15" fill="rgb(253,56,28)"/><text x="32.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="29" y="980" width="2" height="15" fill="rgb(239,84,19)"/><text x="32.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="29" y="996" width="2" height="15" fill="rgb(232,142,40)"/><text x="32.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.18%)</title><rect x="29" y="1012" width="2" height="15" fill="rgb(226,114,20)"/><text x="32.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="29" y="1028" width="2" height="15" fill="rgb(225,174,46)"/><text x="32.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="29" y="1044" width="2" height="15" fill="rgb(223,140,54)"/><text x="32.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="29" y="1060" width="2" height="15" fill="rgb(209,94,4)"/><text x="32.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="29" y="1076" width="2" height="15" fill="rgb(205,88,4)"/><text x="32.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="29" y="1092" width="2" height="15" fill="rgb(242,101,44)"/><text x="32.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.18%)</title><rect x="29" y="1108" width="2" height="15" fill="rgb(217,48,50)"/><text x="32.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="29" y="1124" width="2" height="15" fill="rgb(206,138,1)"/><text x="32.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="29" y="1140" width="2" height="15" fill="rgb(225,153,15)"/><text x="32.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="29" y="1156" width="2" height="15" fill="rgb(209,167,46)"/><text x="32.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="29" y="1172" width="2" height="15" fill="rgb(230,3,39)"/><text x="32.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="29" y="1188" width="2" height="15" fill="rgb(236,210,53)"/><text x="32.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.18%)</title><rect x="29" y="1204" width="2" height="15" fill="rgb(226,179,7)"/><text x="32.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="29" y="1220" width="2" height="15" fill="rgb(217,159,54)"/><text x="32.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="29" y="1236" width="2" height="15" fill="rgb(244,221,42)"/><text x="32.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="29" y="1252" width="2" height="15" fill="rgb(235,31,16)"/><text x="32.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="29" y="1268" width="2" height="15" fill="rgb(210,142,45)"/><text x="32.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="29" y="1284" width="2" height="15" fill="rgb(242,51,22)"/><text x="32.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.18%)</title><rect x="29" y="1300" width="2" height="15" fill="rgb(215,47,44)"/><text x="32.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="29" y="1316" width="2" height="15" fill="rgb(245,17,2)"/><text x="32.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="29" y="1332" width="2" height="15" fill="rgb(221,196,40)"/><text x="32.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="29" y="1348" width="2" height="15" fill="rgb(208,30,9)"/><text x="32.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="29" y="1364" width="2" height="15" fill="rgb(222,165,7)"/><text x="32.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="29" y="1380" width="2" height="15" fill="rgb(222,38,18)"/><text x="32.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.18%)</title><rect x="29" y="1396" width="2" height="15" fill="rgb(210,70,19)"/><text x="32.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="29" y="1412" width="2" height="15" fill="rgb(236,104,39)"/><text x="32.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="29" y="1428" width="2" height="15" fill="rgb(222,138,27)"/><text x="32.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="29" y="1444" width="2" height="15" fill="rgb(254,215,33)"/><text x="32.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="29" y="1460" width="2" height="15" fill="rgb(248,127,48)"/><text x="32.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="29" y="1476" width="2" height="15" fill="rgb(238,144,11)"/><text x="32.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.18%)</title><rect x="29" y="1492" width="2" height="15" fill="rgb(209,171,37)"/><text x="32.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="29" y="1508" width="2" height="15" fill="rgb(229,33,17)"/><text x="32.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="29" y="1524" width="2" height="15" fill="rgb(254,138,50)"/><text x="32.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="29" y="1540" width="2" height="15" fill="rgb(236,144,1)"/><text x="32.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="29" y="1556" width="2" height="15" fill="rgb(235,3,5)"/><text x="32.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="29" y="1572" width="2" height="15" fill="rgb(215,229,1)"/><text x="32.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:33) (1 samples, 0.18%)</title><rect x="29" y="1588" width="2" height="15" fill="rgb(223,139,34)"/><text x="32.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="29" y="1604" width="2" height="15" fill="rgb(206,122,4)"/><text x="32.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="29" y="1620" width="2" height="15" fill="rgb(239,91,30)"/><text x="32.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="29" y="1636" width="2" height="15" fill="rgb(205,166,36)"/><text x="32.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="29" y="1652" width="2" height="15" fill="rgb(217,209,42)"/><text x="32.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="29" y="1668" width="2" height="15" fill="rgb(210,97,21)"/><text x="32.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py:4) (1 samples, 0.18%)</title><rect x="29" y="1684" width="2" height="15" fill="rgb(218,67,33)"/><text x="32.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="29" y="1700" width="2" height="15" fill="rgb(232,28,22)"/><text x="32.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="29" y="1716" width="2" height="15" fill="rgb(214,205,41)"/><text x="32.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="29" y="1732" width="2" height="15" fill="rgb(221,218,14)"/><text x="32.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="29" y="1748" width="2" height="15" fill="rgb(227,139,47)"/><text x="32.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="29" y="1764" width="2" height="15" fill="rgb(223,195,42)"/><text x="32.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py:106) (1 samples, 0.18%)</title><rect x="29" y="1780" width="2" height="15" fill="rgb(244,189,6)"/><text x="32.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py:93) (1 samples, 0.18%)</title><rect x="29" y="1796" width="2" height="15" fill="rgb(215,50,26)"/><text x="32.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py:755) (1 samples, 0.18%)</title><rect x="29" y="1812" width="2" height="15" fill="rgb(241,21,16)"/><text x="32.00" y="1822.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.18%)</title><rect x="31" y="1492" width="2" height="15" fill="rgb(217,38,51)"/><text x="34.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.18%)</title><rect x="31" y="1508" width="2" height="15" fill="rgb(205,94,21)"/><text x="34.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.18%)</title><rect x="31" y="1524" width="2" height="15" fill="rgb(211,216,12)"/><text x="34.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.18%)</title><rect x="31" y="1540" width="2" height="15" fill="rgb(250,8,32)"/><text x="34.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.18%)</title><rect x="31" y="1556" width="2" height="15" fill="rgb(245,110,30)"/><text x="34.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:123) (1 samples, 0.18%)</title><rect x="31" y="1572" width="2" height="15" fill="rgb(209,56,10)"/><text x="34.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.18%)</title><rect x="31" y="1588" width="2" height="15" fill="rgb(250,102,10)"/><text x="34.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:152) (1 samples, 0.18%)</title><rect x="31" y="1604" width="2" height="15" fill="rgb(251,65,38)"/><text x="34.00" y="1614.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:4) (12 samples, 2.15%)</title><rect x="10" y="52" width="25" height="15" fill="rgb(225,119,35)"/><text x="13.00" y="62.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 2.15%)</title><rect x="10" y="68" width="25" height="15" fill="rgb(222,27,11)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 2.15%)</title><rect x="10" y="84" width="25" height="15" fill="rgb(231,68,37)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 2.15%)</title><rect x="10" y="100" width="25" height="15" fill="rgb(247,143,22)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 2.15%)</title><rect x="10" y="116" width="25" height="15" fill="rgb(240,14,40)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 2.15%)</title><rect x="10" y="132" width="25" height="15" fill="rgb(209,200,33)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:7) (4 samples, 0.72%)</title><rect x="26" y="148" width="9" height="15" fill="rgb(222,176,52)"/><text x="29.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.72%)</title><rect x="26" y="164" width="9" height="15" fill="rgb(249,11,7)"/><text x="29.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.72%)</title><rect x="26" y="180" width="9" height="15" fill="rgb(251,63,43)"/><text x="29.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.72%)</title><rect x="26" y="196" width="9" height="15" fill="rgb(215,28,53)"/><text x="29.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.72%)</title><rect x="26" y="212" width="9" height="15" fill="rgb(220,82,4)"/><text x="29.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.72%)</title><rect x="26" y="228" width="9" height="15" fill="rgb(250,73,33)"/><text x="29.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (3 samples, 0.54%)</title><rect x="29" y="244" width="6" height="15" fill="rgb(209,210,37)"/><text x="32.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="29" y="260" width="6" height="15" fill="rgb(252,189,44)"/><text x="32.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="29" y="276" width="6" height="15" fill="rgb(241,15,20)"/><text x="32.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="29" y="292" width="6" height="15" fill="rgb(242,121,52)"/><text x="32.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="29" y="308" width="6" height="15" fill="rgb(223,168,8)"/><text x="32.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="29" y="324" width="6" height="15" fill="rgb(212,158,24)"/><text x="32.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 0.54%)</title><rect x="29" y="340" width="6" height="15" fill="rgb(240,185,10)"/><text x="32.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="29" y="356" width="6" height="15" fill="rgb(241,38,37)"/><text x="32.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="29" y="372" width="6" height="15" fill="rgb(235,224,42)"/><text x="32.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="29" y="388" width="6" height="15" fill="rgb(229,49,29)"/><text x="32.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="29" y="404" width="6" height="15" fill="rgb(218,46,13)"/><text x="32.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="29" y="420" width="6" height="15" fill="rgb(227,179,22)"/><text x="32.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.36%)</title><rect x="31" y="436" width="4" height="15" fill="rgb(247,0,5)"/><text x="34.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="31" y="452" width="4" height="15" fill="rgb(222,95,25)"/><text x="34.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.36%)</title><rect x="31" y="468" width="4" height="15" fill="rgb(238,101,6)"/><text x="34.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="31" y="484" width="4" height="15" fill="rgb(247,109,4)"/><text x="34.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="31" y="500" width="4" height="15" fill="rgb(225,147,16)"/><text x="34.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="31" y="516" width="4" height="15" fill="rgb(207,88,26)"/><text x="34.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="31" y="532" width="4" height="15" fill="rgb(228,84,54)"/><text x="34.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="31" y="548" width="4" height="15" fill="rgb(237,150,10)"/><text x="34.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="31" y="564" width="4" height="15" fill="rgb(229,203,4)"/><text x="34.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.36%)</title><rect x="31" y="580" width="4" height="15" fill="rgb(231,59,34)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="31" y="596" width="4" height="15" fill="rgb(215,118,26)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="31" y="612" width="4" height="15" fill="rgb(227,63,45)"/><text x="34.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="31" y="628" width="4" height="15" fill="rgb(246,71,34)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="31" y="644" width="4" height="15" fill="rgb(208,89,20)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="31" y="660" width="4" height="15" fill="rgb(243,109,15)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.36%)</title><rect x="31" y="676" width="4" height="15" fill="rgb(223,217,30)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="31" y="692" width="4" height="15" fill="rgb(212,209,54)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="31" y="708" width="4" height="15" fill="rgb(218,181,0)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="31" y="724" width="4" height="15" fill="rgb(227,202,39)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="31" y="740" width="4" height="15" fill="rgb(211,193,2)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="31" y="756" width="4" height="15" fill="rgb(205,137,29)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.36%)</title><rect x="31" y="772" width="4" height="15" fill="rgb(216,167,43)"/><text x="34.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="31" y="788" width="4" height="15" fill="rgb(212,45,22)"/><text x="34.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="31" y="804" width="4" height="15" fill="rgb(252,91,49)"/><text x="34.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="31" y="820" width="4" height="15" fill="rgb(209,64,5)"/><text x="34.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="31" y="836" width="4" height="15" fill="rgb(233,105,20)"/><text x="34.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="31" y="852" width="4" height="15" fill="rgb(219,85,0)"/><text x="34.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.36%)</title><rect x="31" y="868" width="4" height="15" fill="rgb(234,78,10)"/><text x="34.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="31" y="884" width="4" height="15" fill="rgb(217,179,18)"/><text x="34.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.36%)</title><rect x="31" y="900" width="4" height="15" fill="rgb(209,43,26)"/><text x="34.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="31" y="916" width="4" height="15" fill="rgb(235,96,48)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="31" y="932" width="4" height="15" fill="rgb(231,160,13)"/><text x="34.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="31" y="948" width="4" height="15" fill="rgb(238,171,36)"/><text x="34.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="31" y="964" width="4" height="15" fill="rgb(249,140,5)"/><text x="34.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="31" y="980" width="4" height="15" fill="rgb(210,91,40)"/><text x="34.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="31" y="996" width="4" height="15" fill="rgb(228,107,42)"/><text x="34.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.36%)</title><rect x="31" y="1012" width="4" height="15" fill="rgb(209,106,24)"/><text x="34.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="31" y="1028" width="4" height="15" fill="rgb(211,145,11)"/><text x="34.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="31" y="1044" width="4" height="15" fill="rgb(205,121,0)"/><text x="34.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="31" y="1060" width="4" height="15" fill="rgb(227,178,20)"/><text x="34.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="31" y="1076" width="4" height="15" fill="rgb(246,97,39)"/><text x="34.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="31" y="1092" width="4" height="15" fill="rgb(227,170,4)"/><text x="34.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.36%)</title><rect x="31" y="1108" width="4" height="15" fill="rgb(224,17,15)"/><text x="34.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.36%)</title><rect x="31" y="1124" width="4" height="15" fill="rgb(251,32,28)"/><text x="34.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="31" y="1140" width="4" height="15" fill="rgb(215,23,25)"/><text x="34.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="31" y="1156" width="4" height="15" fill="rgb(229,27,0)"/><text x="34.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="31" y="1172" width="4" height="15" fill="rgb(248,133,0)"/><text x="34.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="31" y="1188" width="4" height="15" fill="rgb(251,48,37)"/><text x="34.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="31" y="1204" width="4" height="15" fill="rgb(252,199,22)"/><text x="34.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="31" y="1220" width="4" height="15" fill="rgb(209,205,9)"/><text x="34.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.36%)</title><rect x="31" y="1236" width="4" height="15" fill="rgb(240,146,34)"/><text x="34.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.36%)</title><rect x="31" y="1252" width="4" height="15" fill="rgb(215,192,46)"/><text x="34.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="31" y="1268" width="4" height="15" fill="rgb(252,135,24)"/><text x="34.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="31" y="1284" width="4" height="15" fill="rgb(210,25,43)"/><text x="34.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="31" y="1300" width="4" height="15" fill="rgb(213,144,17)"/><text x="34.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="31" y="1316" width="4" height="15" fill="rgb(229,64,36)"/><text x="34.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="31" y="1332" width="4" height="15" fill="rgb(241,48,48)"/><text x="34.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="31" y="1348" width="4" height="15" fill="rgb(214,135,14)"/><text x="34.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.36%)</title><rect x="31" y="1364" width="4" height="15" fill="rgb(222,196,10)"/><text x="34.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="31" y="1380" width="4" height="15" fill="rgb(226,129,7)"/><text x="34.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="31" y="1396" width="4" height="15" fill="rgb(209,212,42)"/><text x="34.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="31" y="1412" width="4" height="15" fill="rgb(211,41,43)"/><text x="34.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="31" y="1428" width="4" height="15" fill="rgb(213,130,45)"/><text x="34.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="31" y="1444" width="4" height="15" fill="rgb(246,21,33)"/><text x="34.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.36%)</title><rect x="31" y="1460" width="4" height="15" fill="rgb(244,223,12)"/><text x="34.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.36%)</title><rect x="31" y="1476" width="4" height="15" fill="rgb(253,67,45)"/><text x="34.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:128) (1 samples, 0.18%)</title><rect x="33" y="1492" width="2" height="15" fill="rgb(206,139,36)"/><text x="36.00" y="1502.50"></text></g><g><title>0x7fe7ff06bfe6 (?) (1 samples, 0.18%)</title><rect x="33" y="1508" width="2" height="15" fill="rgb(221,113,27)"/><text x="36.00" y="1518.50"></text></g><g><title>0x7fe7fea7c7a0 (?) (1 samples, 0.18%)</title><rect x="33" y="1524" width="2" height="15" fill="rgb(246,106,8)"/><text x="36.00" y="1534.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="45" y="148" width="3" height="15" fill="rgb(217,218,52)"/><text x="48.00" y="158.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="45" y="164" width="3" height="15" fill="rgb(241,155,5)"/><text x="48.00" y="174.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.18%)</title><rect x="45" y="180" width="3" height="15" fill="rgb(245,223,9)"/><text x="48.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.54%)</title><rect x="58" y="196" width="6" height="15" fill="rgb(215,15,51)"/><text x="61.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (10 samples, 1.79%)</title><rect x="48" y="148" width="21" height="15" fill="rgb(240,161,13)"/><text x="51.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (10 samples, 1.79%)</title><rect x="48" y="164" width="21" height="15" fill="rgb(221,152,19)"/><text x="51.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (8 samples, 1.43%)</title><rect x="52" y="180" width="17" height="15" fill="rgb(247,191,29)"/><text x="55.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.36%)</title><rect x="64" y="196" width="5" height="15" fill="rgb(236,72,39)"/><text x="67.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.18%)</title><rect x="73" y="180" width="2" height="15" fill="rgb(253,228,38)"/><text x="76.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.18%)</title><rect x="75" y="180" width="2" height="15" fill="rgb(238,197,44)"/><text x="78.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:488) (1 samples, 0.18%)</title><rect x="77" y="180" width="2" height="15" fill="rgb(219,76,7)"/><text x="80.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.18%)</title><rect x="79" y="180" width="2" height="15" fill="rgb(246,25,20)"/><text x="82.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.18%)</title><rect x="84" y="196" width="2" height="15" fill="rgb(213,160,5)"/><text x="87.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 0.36%)</title><rect x="86" y="196" width="4" height="15" fill="rgb(254,212,14)"/><text x="89.00" y="206.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.18%)</title><rect x="90" y="196" width="2" height="15" fill="rgb(237,18,45)"/><text x="93.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (6 samples, 1.08%)</title><rect x="81" y="180" width="13" height="15" fill="rgb(222,111,17)"/><text x="84.00" y="190.50"></text></g><g><title>__init__ (warnings.py:463) (1 samples, 0.18%)</title><rect x="92" y="196" width="2" height="15" fill="rgb(254,177,3)"/><text x="95.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (6 samples, 1.08%)</title><rect x="94" y="180" width="13" height="15" fill="rgb(239,47,21)"/><text x="97.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (4 samples, 0.72%)</title><rect x="98" y="196" width="9" height="15" fill="rgb(208,2,43)"/><text x="101.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 0.54%)</title><rect x="100" y="212" width="7" height="15" fill="rgb(248,162,46)"/><text x="103.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2261) (1 samples, 0.18%)</title><rect x="107" y="196" width="2" height="15" fill="rgb(209,191,38)"/><text x="110.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.18%)</title><rect x="109" y="212" width="2" height="15" fill="rgb(241,188,0)"/><text x="112.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (3 samples, 0.54%)</title><rect x="107" y="180" width="6" height="15" fill="rgb(231,84,19)"/><text x="110.00" y="190.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (2 samples, 0.36%)</title><rect x="109" y="196" width="4" height="15" fill="rgb(248,165,4)"/><text x="112.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.18%)</title><rect x="111" y="212" width="2" height="15" fill="rgb(224,7,54)"/><text x="114.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.36%)</title><rect x="113" y="180" width="4" height="15" fill="rgb(254,213,6)"/><text x="116.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.36%)</title><rect x="113" y="196" width="4" height="15" fill="rgb(247,186,38)"/><text x="116.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.18%)</title><rect x="115" y="212" width="2" height="15" fill="rgb(216,59,38)"/><text x="118.00" y="222.50"></text></g><g><title>PyArray_OrderConverter (conversion_utils.c:543) (1 samples, 0.18%)</title><rect x="115" y="228" width="2" height="15" fill="rgb(214,220,24)"/><text x="118.00" y="238.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.18%)</title><rect x="122" y="196" width="2" height="15" fill="rgb(227,71,5)"/><text x="125.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (4 samples, 0.72%)</title><rect x="117" y="180" width="9" height="15" fill="rgb(250,37,38)"/><text x="120.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.18%)</title><rect x="124" y="196" width="2" height="15" fill="rgb(238,107,42)"/><text x="127.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.18%)</title><rect x="126" y="180" width="2" height="15" fill="rgb(226,65,7)"/><text x="129.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.18%)</title><rect x="126" y="196" width="2" height="15" fill="rgb(250,126,2)"/><text x="129.00" y="206.50"></text></g><g><title>0x7fe80f08e0e6 (libc-2.29.so) (2 samples, 0.36%)</title><rect x="132" y="212" width="4" height="15" fill="rgb(225,173,32)"/><text x="135.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (4 samples, 0.72%)</title><rect x="136" y="212" width="9" height="15" fill="rgb(214,157,10)"/><text x="139.00" y="222.50"></text></g><g><title>0x7fe80efc5e6d (libc-2.29.so) (1 samples, 0.18%)</title><rect x="143" y="228" width="2" height="15" fill="rgb(233,24,11)"/><text x="146.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (10 samples, 1.79%)</title><rect x="130" y="196" width="21" height="15" fill="rgb(215,210,0)"/><text x="133.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (3 samples, 0.54%)</title><rect x="145" y="212" width="6" height="15" fill="rgb(225,116,15)"/><text x="148.00" y="222.50"></text></g><g><title>0x7fe80efc06d0 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="149" y="228" width="2" height="15" fill="rgb(206,36,52)"/><text x="152.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (12 samples, 2.15%)</title><rect x="128" y="180" width="25" height="15" fill="rgb(229,6,9)"/><text x="131.00" y="190.50">c..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.18%)</title><rect x="151" y="196" width="2" height="15" fill="rgb(251,2,25)"/><text x="154.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.18%)</title><rect x="153" y="180" width="2" height="15" fill="rgb(218,15,47)"/><text x="156.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (4 samples, 0.72%)</title><rect x="155" y="196" width="9" height="15" fill="rgb(224,13,39)"/><text x="158.00" y="206.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="162" y="212" width="2" height="15" fill="rgb(218,30,30)"/><text x="165.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.18%)</title><rect x="164" y="196" width="2" height="15" fill="rgb(253,137,45)"/><text x="167.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 0.54%)</title><rect x="166" y="196" width="6" height="15" fill="rgb(254,5,31)"/><text x="169.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.36%)</title><rect x="168" y="212" width="4" height="15" fill="rgb(222,32,17)"/><text x="171.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.18%)</title><rect x="170" y="228" width="2" height="15" fill="rgb(233,148,33)"/><text x="173.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (9 samples, 1.61%)</title><rect x="155" y="180" width="19" height="15" fill="rgb(206,123,26)"/><text x="158.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.18%)</title><rect x="172" y="196" width="2" height="15" fill="rgb(227,209,25)"/><text x="175.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.18%)</title><rect x="172" y="212" width="2" height="15" fill="rgb(240,156,39)"/><text x="175.00" y="222.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (51 samples, 9.14%)</title><rect x="69" y="148" width="108" height="15" fill="rgb(224,91,32)"/><text x="72.00" y="158.50">predict (skle..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (50 samples, 8.96%)</title><rect x="71" y="164" width="106" height="15" fill="rgb(241,132,2)"/><text x="74.00" y="174.50">_validate_X_..</text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.18%)</title><rect x="174" y="180" width="3" height="15" fill="rgb(234,101,38)"/><text x="177.00" y="190.50"></text></g><g><title>0x7fe7e961af12 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="177" y="180" width="2" height="15" fill="rgb(213,223,10)"/><text x="180.00" y="190.50"></text></g><g><title>0x7fe7e961af81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="179" y="180" width="2" height="15" fill="rgb(235,177,4)"/><text x="182.00" y="190.50"></text></g><g><title>0x7fe7e96292df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="181" y="212" width="2" height="15" fill="rgb(228,172,10)"/><text x="184.00" y="222.50"></text></g><g><title>0x7fe7e960dd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="181" y="228" width="2" height="15" fill="rgb(228,195,38)"/><text x="184.00" y="238.50"></text></g><g><title>0x7fe7e960d666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="181" y="244" width="2" height="15" fill="rgb(220,85,22)"/><text x="184.00" y="254.50"></text></g><g><title>0x7fe7e96032fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="181" y="260" width="2" height="15" fill="rgb(230,197,12)"/><text x="184.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.18%)</title><rect x="183" y="276" width="2" height="15" fill="rgb(208,102,20)"/><text x="186.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.18%)</title><rect x="183" y="292" width="2" height="15" fill="rgb(228,26,30)"/><text x="186.00" y="302.50"></text></g><g><title>0x7fe80efd0103 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="185" y="340" width="2" height="15" fill="rgb(229,52,22)"/><text x="188.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (2 samples, 0.36%)</title><rect x="185" y="292" width="4" height="15" fill="rgb(230,130,17)"/><text x="188.00" y="302.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (2 samples, 0.36%)</title><rect x="185" y="308" width="4" height="15" fill="rgb(250,109,21)"/><text x="188.00" y="318.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (2 samples, 0.36%)</title><rect x="185" y="324" width="4" height="15" fill="rgb(213,60,12)"/><text x="188.00" y="334.50"></text></g><g><title>0x7fe80efd0120 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="187" y="340" width="2" height="15" fill="rgb(206,201,31)"/><text x="190.00" y="350.50"></text></g><g><title>0x7fe7e9629592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.72%)</title><rect x="183" y="212" width="8" height="15" fill="rgb(218,43,2)"/><text x="186.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (4 samples, 0.72%)</title><rect x="183" y="228" width="8" height="15" fill="rgb(231,13,4)"/><text x="186.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (4 samples, 0.72%)</title><rect x="183" y="244" width="8" height="15" fill="rgb(234,145,10)"/><text x="186.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (4 samples, 0.72%)</title><rect x="183" y="260" width="8" height="15" fill="rgb(243,222,22)"/><text x="186.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (3 samples, 0.54%)</title><rect x="185" y="276" width="6" height="15" fill="rgb(253,136,30)"/><text x="188.00" y="286.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:140) (1 samples, 0.18%)</title><rect x="189" y="292" width="2" height="15" fill="rgb(242,185,23)"/><text x="192.00" y="302.50"></text></g><g><title>0x7fe7e9629698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="191" y="212" width="2" height="15" fill="rgb(220,141,4)"/><text x="194.00" y="222.50"></text></g><g><title>0x7fe7e96296a5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="193" y="212" width="3" height="15" fill="rgb(247,61,31)"/><text x="196.00" y="222.50"></text></g><g><title>0x7fe7e96296aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="196" y="212" width="4" height="15" fill="rgb(225,101,48)"/><text x="199.00" y="222.50"></text></g><g><title>0x7fe7e96296ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.08%)</title><rect x="200" y="212" width="13" height="15" fill="rgb(235,118,31)"/><text x="203.00" y="222.50"></text></g><g><title>0x7fe7e96296b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.54%)</title><rect x="213" y="212" width="6" height="15" fill="rgb(207,195,22)"/><text x="216.00" y="222.50"></text></g><g><title>0x7fe7e96296c6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="219" y="212" width="2" height="15" fill="rgb(206,183,17)"/><text x="222.00" y="222.50"></text></g><g><title>0x7fe7e96296c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="221" y="212" width="2" height="15" fill="rgb(250,172,48)"/><text x="224.00" y="222.50"></text></g><g><title>0x7fe7e96296d4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="223" y="212" width="4" height="15" fill="rgb(227,110,28)"/><text x="226.00" y="222.50"></text></g><g><title>0x7fe7e96296e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="227" y="212" width="2" height="15" fill="rgb(252,101,31)"/><text x="230.00" y="222.50"></text></g><g><title>0x7fe7e96297a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="229" y="212" width="3" height="15" fill="rgb(240,44,48)"/><text x="232.00" y="222.50"></text></g><g><title>0x7fe7e962a405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (28 samples, 5.02%)</title><rect x="181" y="196" width="59" height="15" fill="rgb(213,121,26)"/><text x="184.00" y="206.50">0x7fe7..</text></g><g><title>0x7fe7e96297b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.72%)</title><rect x="232" y="212" width="8" height="15" fill="rgb(240,82,2)"/><text x="235.00" y="222.50"></text></g><g><title>0x7fe7e961afa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (29 samples, 5.20%)</title><rect x="181" y="180" width="61" height="15" fill="rgb(250,191,40)"/><text x="184.00" y="190.50">0x7fe7..</text></g><g><title>0x7fe7e962a540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="240" y="196" width="2" height="15" fill="rgb(205,107,50)"/><text x="243.00" y="206.50"></text></g><g><title>0x7fe7e95ff2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="240" y="212" width="2" height="15" fill="rgb(223,166,50)"/><text x="243.00" y="222.50"></text></g><g><title>0x7fe7e95fe530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="240" y="228" width="2" height="15" fill="rgb(221,99,27)"/><text x="243.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.18%)</title><rect x="240" y="244" width="2" height="15" fill="rgb(251,35,15)"/><text x="243.00" y="254.50"></text></g><g><title>0x7fe7e961afd1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="242" y="180" width="2" height="15" fill="rgb(227,83,54)"/><text x="245.00" y="190.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:625) (1 samples, 0.18%)</title><rect x="244" y="212" width="2" height="15" fill="rgb(238,81,14)"/><text x="247.00" y="222.50"></text></g><g><title>0x7fe80f08d130 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="246" y="228" width="2" height="15" fill="rgb(253,97,41)"/><text x="249.00" y="238.50"></text></g><g><title>array_take (methods.c:138) (3 samples, 0.54%)</title><rect x="244" y="196" width="7" height="15" fill="rgb(219,168,9)"/><text x="247.00" y="206.50"></text></g><g><title>unicode_eq (python3.7) (2 samples, 0.36%)</title><rect x="246" y="212" width="5" height="15" fill="rgb(245,127,10)"/><text x="249.00" y="222.50"></text></g><g><title>0x7fe80f08d151 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="248" y="228" width="3" height="15" fill="rgb(212,190,27)"/><text x="251.00" y="238.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="251" y="244" width="2" height="15" fill="rgb(221,46,17)"/><text x="254.00" y="254.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3896) (2 samples, 0.36%)</title><rect x="251" y="228" width="4" height="15" fill="rgb(243,205,43)"/><text x="254.00" y="238.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="253" y="244" width="2" height="15" fill="rgb(240,4,41)"/><text x="256.00" y="254.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3948) (2 samples, 0.36%)</title><rect x="255" y="228" width="4" height="15" fill="rgb(205,131,9)"/><text x="258.00" y="238.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3949) (1 samples, 0.18%)</title><rect x="259" y="228" width="2" height="15" fill="rgb(229,211,39)"/><text x="262.00" y="238.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3954) (1 samples, 0.18%)</title><rect x="261" y="228" width="2" height="15" fill="rgb(253,213,37)"/><text x="264.00" y="238.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (8 samples, 1.43%)</title><rect x="251" y="212" width="16" height="15" fill="rgb(244,119,3)"/><text x="254.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3957) (2 samples, 0.36%)</title><rect x="263" y="228" width="4" height="15" fill="rgb(219,157,40)"/><text x="266.00" y="238.50"></text></g><g><title>0x7fe7e961b05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (12 samples, 2.15%)</title><rect x="244" y="180" width="26" height="15" fill="rgb(206,149,25)"/><text x="247.00" y="190.50">0..</text></g><g><title>array_take (methods.c:145) (9 samples, 1.61%)</title><rect x="251" y="196" width="19" height="15" fill="rgb(215,38,51)"/><text x="254.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:72) (1 samples, 0.18%)</title><rect x="267" y="212" width="3" height="15" fill="rgb(252,56,43)"/><text x="270.00" y="222.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.18%)</title><rect x="270" y="196" width="2" height="15" fill="rgb(247,94,8)"/><text x="273.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:125) (1 samples, 0.18%)</title><rect x="270" y="212" width="2" height="15" fill="rgb(254,0,10)"/><text x="273.00" y="222.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.18%)</title><rect x="270" y="228" width="2" height="15" fill="rgb(247,94,27)"/><text x="273.00" y="238.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.18%)</title><rect x="270" y="244" width="2" height="15" fill="rgb(212,129,51)"/><text x="273.00" y="254.50"></text></g><g><title>0x7fe7e961b328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="270" y="180" width="4" height="15" fill="rgb(249,157,21)"/><text x="273.00" y="190.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.18%)</title><rect x="272" y="196" width="2" height="15" fill="rgb(244,121,50)"/><text x="275.00" y="206.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.18%)</title><rect x="272" y="212" width="2" height="15" fill="rgb(220,55,10)"/><text x="275.00" y="222.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.18%)</title><rect x="272" y="228" width="2" height="15" fill="rgb(208,216,30)"/><text x="275.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.18%)</title><rect x="272" y="244" width="2" height="15" fill="rgb(227,126,6)"/><text x="275.00" y="254.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:166) (1 samples, 0.18%)</title><rect x="272" y="260" width="2" height="15" fill="rgb(245,91,16)"/><text x="275.00" y="270.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (47 samples, 8.42%)</title><rect x="177" y="148" width="99" height="15" fill="rgb(220,39,17)"/><text x="180.00" y="158.50">predict (sk..</text></g><g><title>0x7fe7e961bd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (47 samples, 8.42%)</title><rect x="177" y="164" width="99" height="15" fill="rgb(225,177,12)"/><text x="180.00" y="174.50">0x7fe7e961b..</text></g><g><title>0x7fe7e961b51c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="274" y="180" width="2" height="15" fill="rgb(231,150,54)"/><text x="277.00" y="190.50"></text></g><g><title>predict (sklearn/tree/_classes.py:421) (1 samples, 0.18%)</title><rect x="276" y="148" width="2" height="15" fill="rgb(237,73,44)"/><text x="279.00" y="158.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (1 samples, 0.18%)</title><rect x="278" y="148" width="2" height="15" fill="rgb(248,106,16)"/><text x="281.00" y="158.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (1 samples, 0.18%)</title><rect x="278" y="164" width="2" height="15" fill="rgb(207,143,48)"/><text x="281.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:54) (117 samples, 20.97%)</title><rect x="35" y="52" width="247" height="15" fill="rgb(222,44,6)"/><text x="38.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegr..</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:53) (117 samples, 20.97%)</title><rect x="35" y="68" width="247" height="15" fill="rgb(216,201,38)"/><text x="38.00" y="78.50">profile_skl (bench_DecisionTreeR..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:37) (117 samples, 20.97%)</title><rect x="35" y="84" width="247" height="15" fill="rgb(237,150,41)"/><text x="38.00" y="94.50">setup_profile (bench_DecisionTre..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:31) (117 samples, 20.97%)</title><rect x="35" y="100" width="247" height="15" fill="rgb(207,100,47)"/><text x="38.00" y="110.50">profile (bench_DecisionTreeRegre..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (117 samples, 20.97%)</title><rect x="35" y="116" width="247" height="15" fill="rgb(220,129,51)"/><text x="38.00" y="126.50">time_predict (mlprodict/asv_benc..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (113 samples, 20.25%)</title><rect x="43" y="132" width="239" height="15" fill="rgb(246,190,1)"/><text x="46.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchma..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (1 samples, 0.18%)</title><rect x="280" y="148" width="2" height="15" fill="rgb(249,1,45)"/><text x="283.00" y="158.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.18%)</title><rect x="280" y="164" width="2" height="15" fill="rgb(222,7,20)"/><text x="283.00" y="174.50"></text></g><g><title>prepare_index (mapping.c:423) (1 samples, 0.18%)</title><rect x="280" y="180" width="2" height="15" fill="rgb(234,3,25)"/><text x="283.00" y="190.50"></text></g><g><title>0x7fe7cfac854f (?) (1 samples, 0.18%)</title><rect x="282" y="244" width="2" height="15" fill="rgb(235,152,3)"/><text x="285.00" y="254.50"></text></g><g><title>0x7fe7cface65e (?) (1 samples, 0.18%)</title><rect x="282" y="260" width="2" height="15" fill="rgb(243,138,4)"/><text x="285.00" y="270.50"></text></g><g><title>0x7fe7cface50f (?) (1 samples, 0.18%)</title><rect x="282" y="276" width="2" height="15" fill="rgb(249,188,52)"/><text x="285.00" y="286.50"></text></g><g><title>0x7fe7cfad4d6c (?) (1 samples, 0.18%)</title><rect x="282" y="292" width="2" height="15" fill="rgb(223,118,43)"/><text x="285.00" y="302.50"></text></g><g><title>0x7fe7d8fb5ab9 (?) (1 samples, 0.18%)</title><rect x="282" y="308" width="2" height="15" fill="rgb(238,48,33)"/><text x="285.00" y="318.50"></text></g><g><title>0x7fe7d8fb6ead (?) (1 samples, 0.18%)</title><rect x="282" y="324" width="2" height="15" fill="rgb(249,136,2)"/><text x="285.00" y="334.50"></text></g><g><title>0x7fe7d8fb6ea0 (libgomp.so.1.0.0) (4 samples, 0.72%)</title><rect x="284" y="484" width="9" height="15" fill="rgb(229,204,1)"/><text x="287.00" y="494.50"></text></g><g><title>0x7fe7d8fb6ea9 (libgomp.so.1.0.0) (17 samples, 3.05%)</title><rect x="293" y="484" width="36" height="15" fill="rgb(211,218,52)"/><text x="296.00" y="494.50">0x7..</text></g><g><title>0x7fe7d8fb6eab (libgomp.so.1.0.0) (13 samples, 2.33%)</title><rect x="329" y="484" width="27" height="15" fill="rgb(243,27,49)"/><text x="332.00" y="494.50">0..</text></g><g><title>0x7fe7d8fb5ab9 (libgomp.so.1.0.0) (45 samples, 8.06%)</title><rect x="284" y="468" width="96" height="15" fill="rgb(206,138,18)"/><text x="287.00" y="478.50">0x7fe7d8fb5..</text></g><g><title>0x7fe7d8fb6ead (libgomp.so.1.0.0) (11 samples, 1.97%)</title><rect x="356" y="484" width="24" height="15" fill="rgb(219,19,25)"/><text x="359.00" y="494.50">0..</text></g><g><title>0x7fe7d8fb6cf9 (libgomp.so.1.0.0) (3 samples, 0.54%)</title><rect x="380" y="500" width="6" height="15" fill="rgb(216,71,32)"/><text x="383.00" y="510.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:61) (50 samples, 8.96%)</title><rect x="282" y="52" width="106" height="15" fill="rgb(236,108,7)"/><text x="285.00" y="62.50">&lt;module&gt; (be..</text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:60) (50 samples, 8.96%)</title><rect x="282" y="68" width="106" height="15" fill="rgb(220,148,10)"/><text x="285.00" y="78.50">profile_pyrt..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:37) (50 samples, 8.96%)</title><rect x="282" y="84" width="106" height="15" fill="rgb(250,68,12)"/><text x="285.00" y="94.50">setup_profil..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:31) (50 samples, 8.96%)</title><rect x="282" y="100" width="106" height="15" fill="rgb(221,151,33)"/><text x="285.00" y="110.50">profile (ben..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (50 samples, 8.96%)</title><rect x="282" y="116" width="106" height="15" fill="rgb(254,142,16)"/><text x="285.00" y="126.50">time_predict..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (50 samples, 8.96%)</title><rect x="282" y="132" width="106" height="15" fill="rgb(205,28,39)"/><text x="285.00" y="142.50">&lt;lambda&gt; (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (50 samples, 8.96%)</title><rect x="282" y="148" width="106" height="15" fill="rgb(213,140,26)"/><text x="285.00" y="158.50">run (mlprodi..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (50 samples, 8.96%)</title><rect x="282" y="164" width="106" height="15" fill="rgb(252,228,29)"/><text x="285.00" y="174.50">_run_sequenc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (50 samples, 8.96%)</title><rect x="282" y="180" width="106" height="15" fill="rgb(239,190,46)"/><text x="285.00" y="190.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (50 samples, 8.96%)</title><rect x="282" y="196" width="106" height="15" fill="rgb(229,123,4)"/><text x="285.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (50 samples, 8.96%)</title><rect x="282" y="212" width="106" height="15" fill="rgb(233,75,29)"/><text x="285.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (50 samples, 8.96%)</title><rect x="282" y="228" width="106" height="15" fill="rgb(223,121,42)"/><text x="285.00" y="238.50">_run (mlprod..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (49 samples, 8.78%)</title><rect x="284" y="244" width="104" height="15" fill="rgb(212,59,31)"/><text x="287.00" y="254.50">pybind11::cp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (49 samples, 8.78%)</title><rect x="284" y="260" width="104" height="15" fill="rgb(215,92,40)"/><text x="287.00" y="270.50">void pybind1..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (49 samples, 8.78%)</title><rect x="284" y="276" width="104" height="15" fill="rgb(209,39,40)"/><text x="287.00" y="286.50">void pybind1..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (49 samples, 8.78%)</title><rect x="284" y="292" width="104" height="15" fill="rgb(248,167,18)"/><text x="287.00" y="302.50">pybind11::de..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (49 samples, 8.78%)</title><rect x="284" y="308" width="104" height="15" fill="rgb(222,203,50)"/><text x="287.00" y="318.50">pybind11::de..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (49 samples, 8.78%)</title><rect x="284" y="324" width="104" height="15" fill="rgb(229,211,51)"/><text x="287.00" y="334.50">pybind11::cp..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (49 samples, 8.78%)</title><rect x="284" y="340" width="104" height="15" fill="rgb(225,135,46)"/><text x="287.00" y="350.50">pybind11::ar..</text></g><g><title>pybind11::array::~array (numpy.h:538) (49 samples, 8.78%)</title><rect x="284" y="356" width="104" height="15" fill="rgb(213,144,26)"/><text x="287.00" y="366.50">pybind11::ar..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (49 samples, 8.78%)</title><rect x="284" y="372" width="104" height="15" fill="rgb(235,113,5)"/><text x="287.00" y="382.50">pybind11::bu..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (49 samples, 8.78%)</title><rect x="284" y="388" width="104" height="15" fill="rgb(209,73,19)"/><text x="287.00" y="398.50">pybind11::ob..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (49 samples, 8.78%)</title><rect x="284" y="404" width="104" height="15" fill="rgb(242,31,16)"/><text x="287.00" y="414.50">pybind11::ha..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (49 samples, 8.78%)</title><rect x="284" y="420" width="104" height="15" fill="rgb(254,190,16)"/><text x="287.00" y="430.50">RuntimeTreeE..</text></g><g><title>pybind11::array::size (numpy.h:619) (49 samples, 8.78%)</title><rect x="284" y="436" width="104" height="15" fill="rgb(244,145,4)"/><text x="287.00" y="446.50">pybind11::ar..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (49 samples, 8.78%)</title><rect x="284" y="452" width="104" height="15" fill="rgb(211,60,31)"/><text x="287.00" y="462.50">std::accumul..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (4 samples, 0.72%)</title><rect x="380" y="468" width="8" height="15" fill="rgb(234,160,24)"/><text x="383.00" y="478.50"></text></g><g><title>0x7fe7d8fb4daa (libgomp.so.1.0.0) (4 samples, 0.72%)</title><rect x="380" y="484" width="8" height="15" fill="rgb(213,122,33)"/><text x="383.00" y="494.50"></text></g><g><title>0x7fe7d8fb6cfd (libgomp.so.1.0.0) (1 samples, 0.18%)</title><rect x="386" y="500" width="2" height="15" fill="rgb(246,57,14)"/><text x="389.00" y="510.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (2 samples, 0.36%)</title><rect x="392" y="148" width="4" height="15" fill="rgb(238,226,19)"/><text x="395.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (2 samples, 0.36%)</title><rect x="399" y="196" width="4" height="15" fill="rgb(220,111,41)"/><text x="402.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (2 samples, 0.36%)</title><rect x="403" y="196" width="4" height="15" fill="rgb(209,118,27)"/><text x="406.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.18%)</title><rect x="405" y="212" width="2" height="15" fill="rgb(226,152,18)"/><text x="408.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="405" y="228" width="2" height="15" fill="rgb(223,51,7)"/><text x="408.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="405" y="244" width="2" height="15" fill="rgb(224,224,51)"/><text x="408.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="405" y="260" width="2" height="15" fill="rgb(206,89,11)"/><text x="408.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="405" y="276" width="2" height="15" fill="rgb(223,173,17)"/><text x="408.00" y="286.50"></text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="405" y="292" width="2" height="15" fill="rgb(218,212,8)"/><text x="408.00" y="302.50"></text></g><g><title>0x7fe7cf06dff9 (?) (1 samples, 0.18%)</title><rect x="409" y="212" width="2" height="15" fill="rgb(243,67,9)"/><text x="412.00" y="222.50"></text></g><g><title>0x7fe7cf068ef6 (?) (1 samples, 0.18%)</title><rect x="409" y="228" width="2" height="15" fill="rgb(222,186,31)"/><text x="412.00" y="238.50"></text></g><g><title>0x7fe7cf05d962 (?) (1 samples, 0.18%)</title><rect x="409" y="244" width="2" height="15" fill="rgb(242,107,2)"/><text x="412.00" y="254.50"></text></g><g><title>0x7fe7cf0917a7 (?) (1 samples, 0.18%)</title><rect x="409" y="260" width="2" height="15" fill="rgb(231,195,18)"/><text x="412.00" y="270.50"></text></g><g><title>0x7fe7cf091379 (?) (1 samples, 0.18%)</title><rect x="409" y="276" width="2" height="15" fill="rgb(230,67,13)"/><text x="412.00" y="286.50"></text></g><g><title>0x7fe7cf4ef8b8 (?) (1 samples, 0.18%)</title><rect x="409" y="292" width="2" height="15" fill="rgb(248,187,30)"/><text x="412.00" y="302.50"></text></g><g><title>0x7fe7cf4edc7f (?) (1 samples, 0.18%)</title><rect x="409" y="308" width="2" height="15" fill="rgb(209,32,27)"/><text x="412.00" y="318.50"></text></g><g><title>0x7fe7cf50099c (?) (1 samples, 0.18%)</title><rect x="409" y="324" width="2" height="15" fill="rgb(224,132,49)"/><text x="412.00" y="334.50"></text></g><g><title>0x7fe7cf22830b (?) (1 samples, 0.18%)</title><rect x="409" y="340" width="2" height="15" fill="rgb(238,205,51)"/><text x="412.00" y="350.50"></text></g><g><title>0x7fe80efaf922 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="409" y="356" width="2" height="15" fill="rgb(246,220,25)"/><text x="412.00" y="366.50"></text></g><g><title>0x7fe7cf0358a0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="413" y="260" width="3" height="15" fill="rgb(243,39,24)"/><text x="416.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="416" y="292" width="4" height="15" fill="rgb(212,108,22)"/><text x="419.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="416" y="308" width="4" height="15" fill="rgb(212,110,13)"/><text x="419.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="416" y="324" width="4" height="15" fill="rgb(230,79,41)"/><text x="419.00" y="334.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="418" y="340" width="2" height="15" fill="rgb(224,162,42)"/><text x="421.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="418" y="356" width="2" height="15" fill="rgb(212,130,32)"/><text x="421.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="420" y="292" width="4" height="15" fill="rgb(217,148,54)"/><text x="423.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::CheckShapes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="422" y="308" width="2" height="15" fill="rgb(206,157,32)"/><text x="425.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="424" y="292" width="2" height="15" fill="rgb(234,172,23)"/><text x="427.00" y="302.50"></text></g><g><title>0x7fe7cf0350f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.54%)</title><rect x="521" y="356" width="7" height="15" fill="rgb(213,21,4)"/><text x="524.00" y="366.50"></text></g><g><title>0x7fe7fea7c7a0 (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="528" y="356" width="2" height="15" fill="rgb(228,92,27)"/><text x="531.00" y="366.50"></text></g><g><title>0x7fe80efaf900 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="530" y="356" width="2" height="15" fill="rgb(234,211,38)"/><text x="533.00" y="366.50"></text></g><g><title>0x7fe80efaf906 (libc-2.29.so) (2 samples, 0.36%)</title><rect x="532" y="356" width="4" height="15" fill="rgb(238,85,47)"/><text x="535.00" y="366.50"></text></g><g><title>0x7fe80efaf90e (libc-2.29.so) (1 samples, 0.18%)</title><rect x="536" y="356" width="2" height="15" fill="rgb(249,8,19)"/><text x="539.00" y="366.50"></text></g><g><title>0x7fe80efaf91c (libc-2.29.so) (1 samples, 0.18%)</title><rect x="538" y="356" width="2" height="15" fill="rgb(253,8,25)"/><text x="541.00" y="366.50"></text></g><g><title>0x7fe80efaf929 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="540" y="356" width="2" height="15" fill="rgb(220,30,35)"/><text x="543.00" y="366.50"></text></g><g><title>0x7fe80efaf93b (libc-2.29.so) (1 samples, 0.18%)</title><rect x="542" y="356" width="3" height="15" fill="rgb(237,185,38)"/><text x="545.00" y="366.50"></text></g><g><title>0x7fe80efaf945 (libc-2.29.so) (2 samples, 0.36%)</title><rect x="545" y="356" width="4" height="15" fill="rgb(245,189,32)"/><text x="548.00" y="366.50"></text></g><g><title>0x7fe80efaf95e (libc-2.29.so) (1 samples, 0.18%)</title><rect x="549" y="356" width="2" height="15" fill="rgb(248,139,12)"/><text x="552.00" y="366.50"></text></g><g><title>0x7fe80efaf961 (libc-2.29.so) (2 samples, 0.36%)</title><rect x="551" y="356" width="4" height="15" fill="rgb(246,10,26)"/><text x="554.00" y="366.50"></text></g><g><title>0x7fe80efaf965 (libc-2.29.so) (2 samples, 0.36%)</title><rect x="555" y="356" width="4" height="15" fill="rgb(207,24,19)"/><text x="558.00" y="366.50"></text></g><g><title>0x7fe80efaf96a (libc-2.29.so) (1 samples, 0.18%)</title><rect x="559" y="356" width="2" height="15" fill="rgb(235,192,24)"/><text x="562.00" y="366.50"></text></g><g><title>0x7fe80efaf97c (libc-2.29.so) (3 samples, 0.54%)</title><rect x="561" y="356" width="7" height="15" fill="rgb(217,193,6)"/><text x="564.00" y="366.50"></text></g><g><title>0x7fe80efaf991 (libc-2.29.so) (6 samples, 1.08%)</title><rect x="568" y="356" width="12" height="15" fill="rgb(221,137,34)"/><text x="571.00" y="366.50"></text></g><g><title>0x7fe80efaf998 (libc-2.29.so) (2 samples, 0.36%)</title><rect x="580" y="356" width="5" height="15" fill="rgb(214,141,44)"/><text x="583.00" y="366.50"></text></g><g><title>0x7fe80efafa41 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="585" y="356" width="2" height="15" fill="rgb(231,13,12)"/><text x="588.00" y="366.50"></text></g><g><title>0x7fe80efafa55 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="587" y="356" width="2" height="15" fill="rgb(210,218,27)"/><text x="590.00" y="366.50"></text></g><g><title>0x7fe80efafbdc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="589" y="356" width="2" height="15" fill="rgb(252,189,26)"/><text x="592.00" y="366.50"></text></g><g><title>0x7fe80efafbe8 (libc-2.29.so) (4 samples, 0.72%)</title><rect x="591" y="356" width="9" height="15" fill="rgb(210,36,4)"/><text x="594.00" y="366.50"></text></g><g><title>0x7fe80efd012f (libc-2.29.so) (1 samples, 0.18%)</title><rect x="600" y="356" width="2" height="15" fill="rgb(252,191,50)"/><text x="603.00" y="366.50"></text></g><g><title>0x7fe80efd014a (libc-2.29.so) (1 samples, 0.18%)</title><rect x="602" y="356" width="2" height="15" fill="rgb(254,29,21)"/><text x="605.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (7 samples, 1.25%)</title><rect x="604" y="356" width="15" height="15" fill="rgb(209,23,31)"/><text x="607.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="619" y="356" width="4" height="15" fill="rgb(217,72,16)"/><text x="622.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="619" y="372" width="4" height="15" fill="rgb(250,57,6)"/><text x="622.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="619" y="388" width="4" height="15" fill="rgb(222,104,41)"/><text x="622.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="619" y="404" width="4" height="15" fill="rgb(247,125,46)"/><text x="622.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="619" y="420" width="4" height="15" fill="rgb(222,25,46)"/><text x="622.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="619" y="436" width="4" height="15" fill="rgb(229,128,31)"/><text x="622.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="621" y="452" width="2" height="15" fill="rgb(217,117,1)"/><text x="624.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="621" y="468" width="2" height="15" fill="rgb(212,180,2)"/><text x="624.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="621" y="484" width="2" height="15" fill="rgb(238,179,38)"/><text x="624.00" y="494.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="621" y="500" width="2" height="15" fill="rgb(233,121,20)"/><text x="624.00" y="510.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="621" y="516" width="2" height="15" fill="rgb(246,60,24)"/><text x="624.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (11 samples, 1.97%)</title><rect x="862" y="388" width="23" height="15" fill="rgb(236,91,37)"/><text x="865.00" y="398.50">o..</text></g><g><title>malloc (libc-2.29.so) (8 samples, 1.43%)</title><rect x="868" y="404" width="17" height="15" fill="rgb(208,219,35)"/><text x="871.00" y="414.50"></text></g><g><title>0x7fe80efd0120 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="917" y="420" width="2" height="15" fill="rgb(232,126,1)"/><text x="920.00" y="430.50"></text></g><g><title>0x7fe80efd014a (libc-2.29.so) (2 samples, 0.36%)</title><rect x="919" y="420" width="4" height="15" fill="rgb(236,57,24)"/><text x="922.00" y="430.50"></text></g><g><title>0x7fe7fea7bd50 (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="923" y="436" width="2" height="15" fill="rgb(228,132,41)"/><text x="926.00" y="446.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 2.87%)</title><rect x="910" y="404" width="34" height="15" fill="rgb(220,84,53)"/><text x="913.00" y="414.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (10 samples, 1.79%)</title><rect x="923" y="420" width="21" height="15" fill="rgb(208,21,26)"/><text x="926.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (9 samples, 1.61%)</title><rect x="925" y="436" width="19" height="15" fill="rgb(226,98,53)"/><text x="928.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (207 samples, 37.10%)</title><rect x="623" y="356" width="438" height="15" fill="rgb(242,94,35)"/><text x="626.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeN..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (106 samples, 19.00%)</title><rect x="836" y="372" width="225" height="15" fill="rgb(223,167,40)"/><text x="839.00" y="382.50">std::_Hashtable&lt;long, std::pa..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (83 samples, 14.87%)</title><rect x="885" y="388" width="176" height="15" fill="rgb(207,216,54)"/><text x="888.00" y="398.50">std::_Hashtable&lt;long, ..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (55 samples, 9.86%)</title><rect x="944" y="404" width="117" height="15" fill="rgb(227,76,28)"/><text x="947.00" y="414.50">std::__detail:..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (29 samples, 5.20%)</title><rect x="999" y="420" width="62" height="15" fill="rgb(254,223,30)"/><text x="1002.00" y="430.50">std::_..</text></g><g><title>0x7fe80efcfd97 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1075" y="372" width="2" height="15" fill="rgb(209,203,44)"/><text x="1078.00" y="382.50"></text></g><g><title>0x7fe80efcfdbf (libc-2.29.so) (2 samples, 0.36%)</title><rect x="1077" y="372" width="5" height="15" fill="rgb(215,4,7)"/><text x="1080.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.15%)</title><rect x="1061" y="356" width="25" height="15" fill="rgb(216,2,30)"/><text x="1064.00" y="366.50">o..</text></g><g><title>0x7fe80efcfdc9 (libc-2.29.so) (2 samples, 0.36%)</title><rect x="1082" y="372" width="4" height="15" fill="rgb(241,147,42)"/><text x="1085.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="1086" y="356" width="2" height="15" fill="rgb(250,224,23)"/><text x="1089.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 3.05%)</title><rect x="1088" y="356" width="36" height="15" fill="rgb(210,136,32)"/><text x="1091.00" y="366.50">std..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (347 samples, 62.19%)</title><rect x="426" y="292" width="734" height="15" fill="rgb(235,33,46)"/><text x="429.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (347 samples, 62.19%)</title><rect x="426" y="308" width="734" height="15" fill="rgb(230,51,34)"/><text x="429.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (347 samples, 62.19%)</title><rect x="426" y="324" width="734" height="15" fill="rgb(234,148,52)"/><text x="429.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (347 samples, 62.19%)</title><rect x="426" y="340" width="734" height="15" fill="rgb(245,113,44)"/><text x="429.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.s..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 3.05%)</title><rect x="1124" y="356" width="36" height="15" fill="rgb(229,145,43)"/><text x="1127.00" y="366.50">std..</text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 1.43%)</title><rect x="1143" y="372" width="17" height="15" fill="rgb(206,218,24)"/><text x="1146.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 1.08%)</title><rect x="1147" y="388" width="13" height="15" fill="rgb(250,195,25)"/><text x="1150.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (353 samples, 63.26%)</title><rect x="416" y="260" width="746" height="15" fill="rgb(244,183,19)"/><text x="419.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (353 samples, 63.26%)</title><rect x="416" y="276" width="746" height="15" fill="rgb(220,109,28)"/><text x="419.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="1160" y="292" width="2" height="15" fill="rgb(212,13,7)"/><text x="1163.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1162" y="260" width="2" height="15" fill="rgb(237,70,28)"/><text x="1165.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.18%)</title><rect x="1162" y="276" width="2" height="15" fill="rgb(210,106,11)"/><text x="1165.00" y="286.50"></text></g><g><title>0x7fe80efaf91c (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1164" y="276" width="2" height="15" fill="rgb(239,212,35)"/><text x="1167.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="1164" y="260" width="4" height="15" fill="rgb(217,152,19)"/><text x="1167.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.18%)</title><rect x="1166" y="276" width="2" height="15" fill="rgb(220,167,51)"/><text x="1169.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.18%)</title><rect x="1166" y="292" width="2" height="15" fill="rgb(231,81,46)"/><text x="1169.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.18%)</title><rect x="1166" y="308" width="2" height="15" fill="rgb(243,8,39)"/><text x="1169.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (358 samples, 64.16%)</title><rect x="413" y="244" width="757" height="15" fill="rgb(236,83,12)"/><text x="416.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::v..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1168" y="260" width="2" height="15" fill="rgb(235,32,14)"/><text x="1171.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1168" y="276" width="2" height="15" fill="rgb(248,69,45)"/><text x="1171.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1168" y="292" width="2" height="15" fill="rgb(212,59,7)"/><text x="1171.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1168" y="308" width="2" height="15" fill="rgb(219,158,52)"/><text x="1171.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1168" y="324" width="2" height="15" fill="rgb(206,85,30)"/><text x="1171.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1168" y="340" width="2" height="15" fill="rgb(239,50,32)"/><text x="1171.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1168" y="356" width="2" height="15" fill="rgb(230,81,6)"/><text x="1171.00" y="366.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.54%)</title><rect x="1170" y="244" width="7" height="15" fill="rgb(222,4,33)"/><text x="1173.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="1173" y="260" width="4" height="15" fill="rgb(251,19,36)"/><text x="1176.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (370 samples, 66.31%)</title><rect x="396" y="164" width="783" height="15" fill="rgb(238,82,50)"/><text x="399.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (369 samples, 66.13%)</title><rect x="399" y="180" width="780" height="15" fill="rgb(228,184,53)"/><text x="402.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (365 samples, 65.41%)</title><rect x="407" y="196" width="772" height="15" fill="rgb(219,88,49)"/><text x="410.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (363 samples, 65.05%)</title><rect x="411" y="212" width="768" height="15" fill="rgb(241,209,43)"/><text x="414.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (363 samples, 65.05%)</title><rect x="411" y="228" width="768" height="15" fill="rgb(207,227,29)"/><text x="414.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(..</text></g><g><title>std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;::~vector [clone .lto_priv.576] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1177" y="244" width="2" height="15" fill="rgb(245,40,5)"/><text x="1180.00" y="254.50"></text></g><g><title>all (558 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(250,137,17)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:68) (379 samples, 67.92%)</title><rect x="388" y="52" width="802" height="15" fill="rgb(225,17,32)"/><text x="391.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:68)</text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:67) (379 samples, 67.92%)</title><rect x="388" y="68" width="802" height="15" fill="rgb(248,40,45)"/><text x="391.00" y="78.50">profile_ort (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:67)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:37) (379 samples, 67.92%)</title><rect x="388" y="84" width="802" height="15" fill="rgb(213,54,49)"/><text x="391.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:37)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:31) (379 samples, 67.92%)</title><rect x="388" y="100" width="802" height="15" fill="rgb(224,19,37)"/><text x="391.00" y="110.50">profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (379 samples, 67.92%)</title><rect x="388" y="116" width="802" height="15" fill="rgb(250,2,45)"/><text x="391.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (377 samples, 67.56%)</title><rect x="392" y="132" width="798" height="15" fill="rgb(213,216,40)"/><text x="395.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (375 samples, 67.20%)</title><rect x="396" y="148" width="794" height="15" fill="rgb(235,55,1)"/><text x="399.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (5 samples, 0.90%)</title><rect x="1179" y="164" width="11" height="15" fill="rgb(252,186,27)"/><text x="1182.00" y="174.50"></text></g></g></svg>