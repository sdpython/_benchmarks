<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2246" onload="init(evt)" viewBox="0 0 1200 2246" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2246" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2229.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2229.00"> </text><g id="frames"><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:1) (1 samples, 0.10%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(245,169,40)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(241,215,21)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(241,72,50)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(231,155,12)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(212,52,34)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(220,56,36)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.10%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(205,11,8)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="10" y="260" width="1" height="15" fill="rgb(205,10,40)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="10" y="276" width="1" height="15" fill="rgb(244,130,4)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="10" y="292" width="1" height="15" fill="rgb(244,215,44)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="10" y="308" width="1" height="15" fill="rgb(219,68,15)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="10" y="324" width="1" height="15" fill="rgb(208,46,49)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="10" y="340" width="1" height="15" fill="rgb(212,174,41)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="10" y="356" width="1" height="15" fill="rgb(241,6,51)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:9) (1 samples, 0.10%)</title><rect x="10" y="372" width="1" height="15" fill="rgb(241,135,5)"/><text x="13.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="10" y="388" width="1" height="15" fill="rgb(232,5,6)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="10" y="404" width="1" height="15" fill="rgb(249,222,37)"/><text x="13.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="10" y="420" width="1" height="15" fill="rgb(235,111,48)"/><text x="13.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="10" y="436" width="1" height="15" fill="rgb(234,65,9)"/><text x="13.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="10" y="452" width="1" height="15" fill="rgb(224,166,52)"/><text x="13.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py:18) (1 samples, 0.10%)</title><rect x="10" y="468" width="1" height="15" fill="rgb(227,203,23)"/><text x="13.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="10" y="484" width="1" height="15" fill="rgb(247,0,0)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="10" y="500" width="1" height="15" fill="rgb(244,33,27)"/><text x="13.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="10" y="516" width="1" height="15" fill="rgb(224,21,44)"/><text x="13.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.10%)</title><rect x="10" y="532" width="1" height="15" fill="rgb(251,203,14)"/><text x="13.00" y="542.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.10%)</title><rect x="10" y="548" width="1" height="15" fill="rgb(224,103,48)"/><text x="13.00" y="558.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.10%)</title><rect x="10" y="564" width="1" height="15" fill="rgb(244,141,27)"/><text x="13.00" y="574.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="10" y="580" width="1" height="15" fill="rgb(207,147,46)"/><text x="13.00" y="590.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:2407) (1 samples, 0.10%)</title><rect x="11" y="820" width="1" height="15" fill="rgb(225,66,36)"/><text x="14.00" y="830.50"></text></g><g><title>EntryPoint (pkg_resources/__init__.py:2469) (1 samples, 0.10%)</title><rect x="11" y="836" width="1" height="15" fill="rgb(242,12,6)"/><text x="14.00" y="846.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.10%)</title><rect x="11" y="852" width="1" height="15" fill="rgb(220,97,37)"/><text x="14.00" y="862.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.10%)</title><rect x="11" y="868" width="1" height="15" fill="rgb(219,88,14)"/><text x="14.00" y="878.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.10%)</title><rect x="11" y="884" width="1" height="15" fill="rgb(226,145,13)"/><text x="14.00" y="894.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.10%)</title><rect x="11" y="900" width="1" height="15" fill="rgb(222,140,24)"/><text x="14.00" y="910.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.10%)</title><rect x="11" y="916" width="1" height="15" fill="rgb(205,26,32)"/><text x="14.00" y="926.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.10%)</title><rect x="11" y="932" width="1" height="15" fill="rgb(213,37,16)"/><text x="14.00" y="942.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.10%)</title><rect x="11" y="948" width="1" height="15" fill="rgb(253,97,54)"/><text x="14.00" y="958.50"></text></g><g><title>_parse (sre_parse.py:493) (1 samples, 0.10%)</title><rect x="11" y="964" width="1" height="15" fill="rgb(205,107,13)"/><text x="14.00" y="974.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.10%)</title><rect x="11" y="980" width="1" height="15" fill="rgb(253,219,22)"/><text x="14.00" y="990.50"></text></g><g><title>__next (sre_parse.py:236) (1 samples, 0.10%)</title><rect x="11" y="996" width="1" height="15" fill="rgb(233,143,27)"/><text x="14.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.10%)</title><rect x="12" y="852" width="1" height="15" fill="rgb(205,97,30)"/><text x="15.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.10%)</title><rect x="12" y="868" width="1" height="15" fill="rgb(220,30,28)"/><text x="15.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.10%)</title><rect x="12" y="884" width="1" height="15" fill="rgb(231,150,45)"/><text x="15.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.10%)</title><rect x="12" y="900" width="1" height="15" fill="rgb(216,22,47)"/><text x="15.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.10%)</title><rect x="12" y="916" width="1" height="15" fill="rgb(235,57,37)"/><text x="15.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.10%)</title><rect x="12" y="932" width="1" height="15" fill="rgb(216,156,25)"/><text x="15.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.10%)</title><rect x="12" y="948" width="1" height="15" fill="rgb(212,107,24)"/><text x="15.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.10%)</title><rect x="12" y="964" width="1" height="15" fill="rgb(253,42,23)"/><text x="15.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.10%)</title><rect x="12" y="980" width="1" height="15" fill="rgb(247,146,40)"/><text x="15.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.10%)</title><rect x="12" y="996" width="1" height="15" fill="rgb(205,146,7)"/><text x="15.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.10%)</title><rect x="12" y="1012" width="1" height="15" fill="rgb(214,193,40)"/><text x="15.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.10%)</title><rect x="12" y="1028" width="1" height="15" fill="rgb(236,138,38)"/><text x="15.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.10%)</title><rect x="12" y="1044" width="1" height="15" fill="rgb(224,58,27)"/><text x="15.00" y="1054.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.10%)</title><rect x="13" y="964" width="1" height="15" fill="rgb(245,101,47)"/><text x="16.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.10%)</title><rect x="13" y="980" width="1" height="15" fill="rgb(245,129,26)"/><text x="16.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.10%)</title><rect x="13" y="996" width="1" height="15" fill="rgb(252,197,13)"/><text x="16.00" y="1006.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.10%)</title><rect x="13" y="1012" width="1" height="15" fill="rgb(224,222,21)"/><text x="16.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.21%)</title><rect x="13" y="852" width="3" height="15" fill="rgb(227,201,4)"/><text x="16.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.21%)</title><rect x="13" y="868" width="3" height="15" fill="rgb(206,159,24)"/><text x="16.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.21%)</title><rect x="13" y="884" width="3" height="15" fill="rgb(251,127,30)"/><text x="16.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.21%)</title><rect x="13" y="900" width="3" height="15" fill="rgb(212,212,13)"/><text x="16.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.21%)</title><rect x="13" y="916" width="3" height="15" fill="rgb(215,225,2)"/><text x="16.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.21%)</title><rect x="13" y="932" width="3" height="15" fill="rgb(209,77,49)"/><text x="16.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.21%)</title><rect x="13" y="948" width="3" height="15" fill="rgb(234,194,25)"/><text x="16.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1393) (1 samples, 0.10%)</title><rect x="14" y="964" width="2" height="15" fill="rgb(245,213,24)"/><text x="17.00" y="974.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.10%)</title><rect x="14" y="980" width="2" height="15" fill="rgb(236,20,42)"/><text x="17.00" y="990.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.10%)</title><rect x="16" y="980" width="1" height="15" fill="rgb(230,133,51)"/><text x="19.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:125) (1 samples, 0.10%)</title><rect x="16" y="996" width="1" height="15" fill="rgb(231,103,43)"/><text x="19.00" y="1006.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.10%)</title><rect x="16" y="1012" width="1" height="15" fill="rgb(212,95,11)"/><text x="19.00" y="1022.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.21%)</title><rect x="16" y="884" width="2" height="15" fill="rgb(206,112,21)"/><text x="19.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.21%)</title><rect x="16" y="900" width="2" height="15" fill="rgb(216,65,40)"/><text x="19.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.21%)</title><rect x="16" y="916" width="2" height="15" fill="rgb(250,90,26)"/><text x="19.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.21%)</title><rect x="16" y="932" width="2" height="15" fill="rgb(224,87,48)"/><text x="19.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (2 samples, 0.21%)</title><rect x="16" y="948" width="2" height="15" fill="rgb(252,41,31)"/><text x="19.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (2 samples, 0.21%)</title><rect x="16" y="964" width="2" height="15" fill="rgb(224,143,42)"/><text x="19.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:142) (1 samples, 0.10%)</title><rect x="17" y="980" width="1" height="15" fill="rgb(247,78,16)"/><text x="20.00" y="990.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (6 samples, 0.62%)</title><rect x="12" y="820" width="7" height="15" fill="rgb(229,25,30)"/><text x="15.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (6 samples, 0.62%)</title><rect x="12" y="836" width="7" height="15" fill="rgb(246,89,37)"/><text x="15.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 0.31%)</title><rect x="16" y="852" width="3" height="15" fill="rgb(242,219,43)"/><text x="19.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.31%)</title><rect x="16" y="868" width="3" height="15" fill="rgb(237,39,18)"/><text x="19.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.10%)</title><rect x="18" y="884" width="1" height="15" fill="rgb(240,40,44)"/><text x="21.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.10%)</title><rect x="18" y="900" width="1" height="15" fill="rgb(218,29,51)"/><text x="21.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.10%)</title><rect x="18" y="916" width="1" height="15" fill="rgb(254,67,28)"/><text x="21.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.10%)</title><rect x="18" y="932" width="1" height="15" fill="rgb(207,37,31)"/><text x="21.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.10%)</title><rect x="18" y="948" width="1" height="15" fill="rgb(233,187,1)"/><text x="21.00" y="958.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.10%)</title><rect x="18" y="964" width="1" height="15" fill="rgb(226,146,34)"/><text x="21.00" y="974.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py:264) (1 samples, 0.10%)</title><rect x="18" y="980" width="1" height="15" fill="rgb(218,92,37)"/><text x="21.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:2) (8 samples, 0.82%)</title><rect x="11" y="148" width="9" height="15" fill="rgb(251,110,52)"/><text x="14.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.82%)</title><rect x="11" y="164" width="9" height="15" fill="rgb(242,80,44)"/><text x="14.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 0.82%)</title><rect x="11" y="180" width="9" height="15" fill="rgb(211,121,24)"/><text x="14.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.82%)</title><rect x="11" y="196" width="9" height="15" fill="rgb(210,18,20)"/><text x="14.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.82%)</title><rect x="11" y="212" width="9" height="15" fill="rgb(238,21,33)"/><text x="14.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.82%)</title><rect x="11" y="228" width="9" height="15" fill="rgb(206,114,5)"/><text x="14.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.82%)</title><rect x="11" y="244" width="9" height="15" fill="rgb(249,106,40)"/><text x="14.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.82%)</title><rect x="11" y="260" width="9" height="15" fill="rgb(251,127,12)"/><text x="14.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.82%)</title><rect x="11" y="276" width="9" height="15" fill="rgb(214,40,51)"/><text x="14.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (8 samples, 0.82%)</title><rect x="11" y="292" width="9" height="15" fill="rgb(228,8,31)"/><text x="14.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.82%)</title><rect x="11" y="308" width="9" height="15" fill="rgb(243,94,40)"/><text x="14.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.82%)</title><rect x="11" y="324" width="9" height="15" fill="rgb(230,159,47)"/><text x="14.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.82%)</title><rect x="11" y="340" width="9" height="15" fill="rgb(212,109,32)"/><text x="14.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.82%)</title><rect x="11" y="356" width="9" height="15" fill="rgb(236,92,10)"/><text x="14.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.82%)</title><rect x="11" y="372" width="9" height="15" fill="rgb(246,195,7)"/><text x="14.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (8 samples, 0.82%)</title><rect x="11" y="388" width="9" height="15" fill="rgb(228,134,8)"/><text x="14.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.82%)</title><rect x="11" y="404" width="9" height="15" fill="rgb(245,122,50)"/><text x="14.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.82%)</title><rect x="11" y="420" width="9" height="15" fill="rgb(225,63,37)"/><text x="14.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.82%)</title><rect x="11" y="436" width="9" height="15" fill="rgb(221,207,8)"/><text x="14.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.82%)</title><rect x="11" y="452" width="9" height="15" fill="rgb(249,141,39)"/><text x="14.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.82%)</title><rect x="11" y="468" width="9" height="15" fill="rgb(224,4,40)"/><text x="14.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (8 samples, 0.82%)</title><rect x="11" y="484" width="9" height="15" fill="rgb(206,92,40)"/><text x="14.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.82%)</title><rect x="11" y="500" width="9" height="15" fill="rgb(205,100,34)"/><text x="14.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.82%)</title><rect x="11" y="516" width="9" height="15" fill="rgb(222,17,6)"/><text x="14.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.82%)</title><rect x="11" y="532" width="9" height="15" fill="rgb(228,97,53)"/><text x="14.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.82%)</title><rect x="11" y="548" width="9" height="15" fill="rgb(233,224,12)"/><text x="14.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.82%)</title><rect x="11" y="564" width="9" height="15" fill="rgb(236,111,31)"/><text x="14.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (8 samples, 0.82%)</title><rect x="11" y="580" width="9" height="15" fill="rgb(225,91,21)"/><text x="14.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.82%)</title><rect x="11" y="596" width="9" height="15" fill="rgb(242,41,21)"/><text x="14.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 0.82%)</title><rect x="11" y="612" width="9" height="15" fill="rgb(221,169,22)"/><text x="14.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.82%)</title><rect x="11" y="628" width="9" height="15" fill="rgb(239,1,37)"/><text x="14.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.82%)</title><rect x="11" y="644" width="9" height="15" fill="rgb(236,165,2)"/><text x="14.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.82%)</title><rect x="11" y="660" width="9" height="15" fill="rgb(214,186,30)"/><text x="14.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.82%)</title><rect x="11" y="676" width="9" height="15" fill="rgb(241,218,32)"/><text x="14.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.82%)</title><rect x="11" y="692" width="9" height="15" fill="rgb(223,220,5)"/><text x="14.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.82%)</title><rect x="11" y="708" width="9" height="15" fill="rgb(226,125,9)"/><text x="14.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (8 samples, 0.82%)</title><rect x="11" y="724" width="9" height="15" fill="rgb(207,33,40)"/><text x="14.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.82%)</title><rect x="11" y="740" width="9" height="15" fill="rgb(227,226,46)"/><text x="14.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.82%)</title><rect x="11" y="756" width="9" height="15" fill="rgb(251,79,34)"/><text x="14.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.82%)</title><rect x="11" y="772" width="9" height="15" fill="rgb(228,211,33)"/><text x="14.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.82%)</title><rect x="11" y="788" width="9" height="15" fill="rgb(244,207,17)"/><text x="14.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.82%)</title><rect x="11" y="804" width="9" height="15" fill="rgb(217,27,30)"/><text x="14.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.10%)</title><rect x="19" y="820" width="1" height="15" fill="rgb(254,56,24)"/><text x="22.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="19" y="836" width="1" height="15" fill="rgb(221,219,41)"/><text x="22.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="19" y="852" width="1" height="15" fill="rgb(222,106,16)"/><text x="22.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="19" y="868" width="1" height="15" fill="rgb(245,88,32)"/><text x="22.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="19" y="884" width="1" height="15" fill="rgb(228,160,52)"/><text x="22.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="19" y="900" width="1" height="15" fill="rgb(240,109,20)"/><text x="22.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:14) (1 samples, 0.10%)</title><rect x="19" y="916" width="1" height="15" fill="rgb(224,164,7)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="19" y="932" width="1" height="15" fill="rgb(237,12,12)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="19" y="948" width="1" height="15" fill="rgb(217,116,41)"/><text x="22.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="19" y="964" width="1" height="15" fill="rgb(232,95,28)"/><text x="22.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="19" y="980" width="1" height="15" fill="rgb(249,179,13)"/><text x="22.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="19" y="996" width="1" height="15" fill="rgb(215,183,18)"/><text x="22.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/markers.py:94) (1 samples, 0.10%)</title><rect x="19" y="1012" width="1" height="15" fill="rgb(219,166,2)"/><text x="22.00" y="1022.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2423) (1 samples, 0.10%)</title><rect x="19" y="1028" width="1" height="15" fill="rgb(218,208,12)"/><text x="22.00" y="1038.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.10%)</title><rect x="20" y="436" width="2" height="15" fill="rgb(248,140,16)"/><text x="23.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="20" y="452" width="2" height="15" fill="rgb(220,182,8)"/><text x="23.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="20" y="468" width="2" height="15" fill="rgb(229,208,26)"/><text x="23.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="20" y="484" width="2" height="15" fill="rgb(220,45,49)"/><text x="23.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="20" y="500" width="2" height="15" fill="rgb(250,126,18)"/><text x="23.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="20" y="516" width="2" height="15" fill="rgb(224,13,50)"/><text x="23.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.10%)</title><rect x="20" y="532" width="2" height="15" fill="rgb(235,223,21)"/><text x="23.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="20" y="548" width="2" height="15" fill="rgb(239,227,48)"/><text x="23.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="20" y="564" width="2" height="15" fill="rgb(219,135,26)"/><text x="23.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="20" y="580" width="2" height="15" fill="rgb(234,85,54)"/><text x="23.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="20" y="596" width="2" height="15" fill="rgb(213,212,5)"/><text x="23.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="20" y="612" width="2" height="15" fill="rgb(232,127,14)"/><text x="23.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.10%)</title><rect x="20" y="628" width="2" height="15" fill="rgb(217,112,35)"/><text x="23.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="20" y="644" width="2" height="15" fill="rgb(252,7,5)"/><text x="23.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="20" y="660" width="2" height="15" fill="rgb(222,159,25)"/><text x="23.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="20" y="676" width="2" height="15" fill="rgb(230,67,43)"/><text x="23.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="20" y="692" width="2" height="15" fill="rgb(235,195,36)"/><text x="23.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="20" y="708" width="2" height="15" fill="rgb(235,26,40)"/><text x="23.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.10%)</title><rect x="20" y="724" width="2" height="15" fill="rgb(210,4,53)"/><text x="23.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="20" y="740" width="2" height="15" fill="rgb(253,48,48)"/><text x="23.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="20" y="756" width="2" height="15" fill="rgb(224,199,2)"/><text x="23.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="20" y="772" width="2" height="15" fill="rgb(242,124,54)"/><text x="23.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="20" y="788" width="2" height="15" fill="rgb(216,20,15)"/><text x="23.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="20" y="804" width="2" height="15" fill="rgb(247,163,31)"/><text x="23.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.10%)</title><rect x="20" y="820" width="2" height="15" fill="rgb(215,41,54)"/><text x="23.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="20" y="836" width="2" height="15" fill="rgb(249,184,33)"/><text x="23.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="20" y="852" width="2" height="15" fill="rgb(215,178,34)"/><text x="23.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="20" y="868" width="2" height="15" fill="rgb(231,205,33)"/><text x="23.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="20" y="884" width="2" height="15" fill="rgb(240,208,15)"/><text x="23.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="20" y="900" width="2" height="15" fill="rgb(212,27,44)"/><text x="23.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.10%)</title><rect x="20" y="916" width="2" height="15" fill="rgb(215,171,17)"/><text x="23.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="20" y="932" width="2" height="15" fill="rgb(239,72,18)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="20" y="948" width="2" height="15" fill="rgb(221,52,10)"/><text x="23.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="20" y="964" width="2" height="15" fill="rgb(242,167,24)"/><text x="23.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="20" y="980" width="2" height="15" fill="rgb(226,31,28)"/><text x="23.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="20" y="996" width="2" height="15" fill="rgb(234,1,9)"/><text x="23.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.10%)</title><rect x="20" y="1012" width="2" height="15" fill="rgb(252,113,26)"/><text x="23.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="20" y="1028" width="2" height="15" fill="rgb(246,185,26)"/><text x="23.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="20" y="1044" width="2" height="15" fill="rgb(240,32,37)"/><text x="23.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="20" y="1060" width="2" height="15" fill="rgb(216,185,48)"/><text x="23.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="20" y="1076" width="2" height="15" fill="rgb(252,150,25)"/><text x="23.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="20" y="1092" width="2" height="15" fill="rgb(231,4,44)"/><text x="23.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.10%)</title><rect x="20" y="1108" width="2" height="15" fill="rgb(242,181,37)"/><text x="23.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="20" y="1124" width="2" height="15" fill="rgb(215,119,33)"/><text x="23.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="20" y="1140" width="2" height="15" fill="rgb(222,222,40)"/><text x="23.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="20" y="1156" width="2" height="15" fill="rgb(243,160,52)"/><text x="23.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="20" y="1172" width="2" height="15" fill="rgb(212,88,12)"/><text x="23.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="20" y="1188" width="2" height="15" fill="rgb(251,104,16)"/><text x="23.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.10%)</title><rect x="20" y="1204" width="2" height="15" fill="rgb(227,118,47)"/><text x="23.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="20" y="1220" width="2" height="15" fill="rgb(222,52,50)"/><text x="23.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="20" y="1236" width="2" height="15" fill="rgb(221,197,0)"/><text x="23.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="20" y="1252" width="2" height="15" fill="rgb(230,130,6)"/><text x="23.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="20" y="1268" width="2" height="15" fill="rgb(224,228,40)"/><text x="23.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="20" y="1284" width="2" height="15" fill="rgb(225,154,41)"/><text x="23.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.10%)</title><rect x="20" y="1300" width="2" height="15" fill="rgb(245,19,41)"/><text x="23.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="20" y="1316" width="2" height="15" fill="rgb(236,193,46)"/><text x="23.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="20" y="1332" width="2" height="15" fill="rgb(242,149,24)"/><text x="23.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="20" y="1348" width="2" height="15" fill="rgb(229,186,51)"/><text x="23.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="20" y="1364" width="2" height="15" fill="rgb(218,66,29)"/><text x="23.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="20" y="1380" width="2" height="15" fill="rgb(253,207,28)"/><text x="23.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.10%)</title><rect x="20" y="1396" width="2" height="15" fill="rgb(220,40,23)"/><text x="23.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="20" y="1412" width="2" height="15" fill="rgb(213,183,54)"/><text x="23.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="20" y="1428" width="2" height="15" fill="rgb(227,64,26)"/><text x="23.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="20" y="1444" width="2" height="15" fill="rgb(236,94,19)"/><text x="23.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="20" y="1460" width="2" height="15" fill="rgb(214,141,17)"/><text x="23.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="20" y="1476" width="2" height="15" fill="rgb(236,183,36)"/><text x="23.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.10%)</title><rect x="20" y="1492" width="2" height="15" fill="rgb(251,135,10)"/><text x="23.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="20" y="1508" width="2" height="15" fill="rgb(216,27,10)"/><text x="23.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="20" y="1524" width="2" height="15" fill="rgb(223,173,34)"/><text x="23.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="20" y="1540" width="2" height="15" fill="rgb(247,153,34)"/><text x="23.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="20" y="1556" width="2" height="15" fill="rgb(244,183,28)"/><text x="23.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="20" y="1572" width="2" height="15" fill="rgb(223,88,36)"/><text x="23.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.10%)</title><rect x="20" y="1588" width="2" height="15" fill="rgb(246,99,14)"/><text x="23.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="20" y="1604" width="2" height="15" fill="rgb(241,161,33)"/><text x="23.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="20" y="1620" width="2" height="15" fill="rgb(250,118,40)"/><text x="23.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="20" y="1636" width="2" height="15" fill="rgb(248,70,27)"/><text x="23.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="20" y="1652" width="2" height="15" fill="rgb(220,65,51)"/><text x="23.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="20" y="1668" width="2" height="15" fill="rgb(221,215,11)"/><text x="23.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.10%)</title><rect x="20" y="1684" width="2" height="15" fill="rgb(241,47,20)"/><text x="23.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="20" y="1700" width="2" height="15" fill="rgb(237,89,54)"/><text x="23.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="20" y="1716" width="2" height="15" fill="rgb(231,38,13)"/><text x="23.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="20" y="1732" width="2" height="15" fill="rgb(241,75,12)"/><text x="23.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="20" y="1748" width="2" height="15" fill="rgb(251,187,51)"/><text x="23.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="20" y="1764" width="2" height="15" fill="rgb(249,51,17)"/><text x="23.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.10%)</title><rect x="20" y="1780" width="2" height="15" fill="rgb(222,70,27)"/><text x="23.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="20" y="1796" width="2" height="15" fill="rgb(229,186,47)"/><text x="23.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="20" y="1812" width="2" height="15" fill="rgb(236,143,36)"/><text x="23.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="20" y="1828" width="2" height="15" fill="rgb(233,59,27)"/><text x="23.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="20" y="1844" width="2" height="15" fill="rgb(241,128,24)"/><text x="23.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="20" y="1860" width="2" height="15" fill="rgb(246,86,42)"/><text x="23.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:14) (1 samples, 0.10%)</title><rect x="20" y="1876" width="2" height="15" fill="rgb(231,126,3)"/><text x="23.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="20" y="1892" width="2" height="15" fill="rgb(231,214,30)"/><text x="23.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="20" y="1908" width="2" height="15" fill="rgb(236,85,34)"/><text x="23.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="20" y="1924" width="2" height="15" fill="rgb(228,74,2)"/><text x="23.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="20" y="1940" width="2" height="15" fill="rgb(224,123,3)"/><text x="23.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="20" y="1956" width="2" height="15" fill="rgb(234,141,23)"/><text x="23.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py:40) (1 samples, 0.10%)</title><rect x="20" y="1972" width="2" height="15" fill="rgb(224,84,17)"/><text x="23.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="20" y="1988" width="2" height="15" fill="rgb(241,165,42)"/><text x="23.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="20" y="2004" width="2" height="15" fill="rgb(207,94,53)"/><text x="23.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="20" y="2020" width="2" height="15" fill="rgb(247,181,11)"/><text x="23.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="20" y="2036" width="2" height="15" fill="rgb(225,140,37)"/><text x="23.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="20" y="2052" width="2" height="15" fill="rgb(227,104,24)"/><text x="23.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="20" y="2068" width="2" height="15" fill="rgb(239,163,14)"/><text x="23.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="20" y="2084" width="2" height="15" fill="rgb(238,161,5)"/><text x="23.00" y="2094.50"></text></g><g><title>&lt;module&gt; (matplotlib/afm.py:45) (1 samples, 0.10%)</title><rect x="20" y="2100" width="2" height="15" fill="rgb(242,131,48)"/><text x="23.00" y="2110.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="20" y="2116" width="2" height="15" fill="rgb(237,92,30)"/><text x="23.00" y="2126.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="20" y="2132" width="2" height="15" fill="rgb(236,126,15)"/><text x="23.00" y="2142.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="20" y="2148" width="2" height="15" fill="rgb(212,212,16)"/><text x="23.00" y="2158.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.10%)</title><rect x="20" y="2164" width="2" height="15" fill="rgb(231,182,37)"/><text x="23.00" y="2174.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.10%)</title><rect x="20" y="2180" width="2" height="15" fill="rgb(218,140,8)"/><text x="23.00" y="2190.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.10%)</title><rect x="20" y="2196" width="2" height="15" fill="rgb(249,39,38)"/><text x="23.00" y="2206.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.10%)</title><rect x="22" y="1364" width="1" height="15" fill="rgb(239,12,48)"/><text x="25.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.10%)</title><rect x="22" y="1380" width="1" height="15" fill="rgb(224,179,43)"/><text x="25.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.10%)</title><rect x="22" y="1396" width="1" height="15" fill="rgb(219,32,39)"/><text x="25.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 0.21%)</title><rect x="22" y="1108" width="2" height="15" fill="rgb(235,200,0)"/><text x="25.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="22" y="1124" width="2" height="15" fill="rgb(234,10,9)"/><text x="25.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="22" y="1140" width="2" height="15" fill="rgb(228,166,0)"/><text x="25.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="22" y="1156" width="2" height="15" fill="rgb(253,207,5)"/><text x="25.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="22" y="1172" width="2" height="15" fill="rgb(249,205,42)"/><text x="25.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="22" y="1188" width="2" height="15" fill="rgb(219,27,18)"/><text x="25.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (2 samples, 0.21%)</title><rect x="22" y="1204" width="2" height="15" fill="rgb(218,115,52)"/><text x="25.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="22" y="1220" width="2" height="15" fill="rgb(220,140,0)"/><text x="25.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="22" y="1236" width="2" height="15" fill="rgb(230,92,28)"/><text x="25.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="22" y="1252" width="2" height="15" fill="rgb(224,123,5)"/><text x="25.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="22" y="1268" width="2" height="15" fill="rgb(230,63,31)"/><text x="25.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="22" y="1284" width="2" height="15" fill="rgb(238,25,24)"/><text x="25.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (2 samples, 0.21%)</title><rect x="22" y="1300" width="2" height="15" fill="rgb(213,192,5)"/><text x="25.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (2 samples, 0.21%)</title><rect x="22" y="1316" width="2" height="15" fill="rgb(250,222,4)"/><text x="25.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (2 samples, 0.21%)</title><rect x="22" y="1332" width="2" height="15" fill="rgb(218,180,2)"/><text x="25.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (2 samples, 0.21%)</title><rect x="22" y="1348" width="2" height="15" fill="rgb(243,104,34)"/><text x="25.00" y="1358.50"></text></g><g><title>getblock (inspect.py:941) (1 samples, 0.10%)</title><rect x="23" y="1364" width="1" height="15" fill="rgb(211,3,5)"/><text x="26.00" y="1374.50"></text></g><g><title>tokeneater (inspect.py:898) (1 samples, 0.10%)</title><rect x="23" y="1380" width="1" height="15" fill="rgb(249,211,38)"/><text x="26.00" y="1390.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.10%)</title><rect x="24" y="1108" width="1" height="15" fill="rgb(226,72,32)"/><text x="27.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="24" y="1124" width="1" height="15" fill="rgb(216,140,21)"/><text x="27.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="24" y="1140" width="1" height="15" fill="rgb(249,49,15)"/><text x="27.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="24" y="1156" width="1" height="15" fill="rgb(214,102,45)"/><text x="27.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="24" y="1172" width="1" height="15" fill="rgb(250,4,0)"/><text x="27.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="24" y="1188" width="1" height="15" fill="rgb(209,214,28)"/><text x="27.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="24" y="1204" width="1" height="15" fill="rgb(237,151,46)"/><text x="27.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="24" y="1220" width="1" height="15" fill="rgb(227,136,6)"/><text x="27.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.10%)</title><rect x="24" y="1236" width="1" height="15" fill="rgb(230,129,2)"/><text x="27.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="24" y="1252" width="1" height="15" fill="rgb(243,160,12)"/><text x="27.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="24" y="1268" width="1" height="15" fill="rgb(240,196,1)"/><text x="27.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="24" y="1284" width="1" height="15" fill="rgb(211,100,23)"/><text x="27.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="24" y="1300" width="1" height="15" fill="rgb(206,19,13)"/><text x="27.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="24" y="1316" width="1" height="15" fill="rgb(243,128,9)"/><text x="27.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="24" y="1332" width="1" height="15" fill="rgb(228,188,23)"/><text x="27.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="24" y="1348" width="1" height="15" fill="rgb(206,149,32)"/><text x="27.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.10%)</title><rect x="24" y="1364" width="1" height="15" fill="rgb(244,223,23)"/><text x="27.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="24" y="1380" width="1" height="15" fill="rgb(250,227,8)"/><text x="27.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="24" y="1396" width="1" height="15" fill="rgb(249,8,15)"/><text x="27.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="24" y="1412" width="1" height="15" fill="rgb(251,70,25)"/><text x="27.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="24" y="1428" width="1" height="15" fill="rgb(213,197,19)"/><text x="27.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="24" y="1444" width="1" height="15" fill="rgb(239,143,5)"/><text x="27.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.10%)</title><rect x="24" y="1460" width="1" height="15" fill="rgb(236,183,48)"/><text x="27.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.10%)</title><rect x="24" y="1476" width="1" height="15" fill="rgb(214,150,12)"/><text x="27.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.10%)</title><rect x="24" y="1492" width="1" height="15" fill="rgb(245,1,46)"/><text x="27.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.10%)</title><rect x="24" y="1508" width="1" height="15" fill="rgb(239,16,19)"/><text x="27.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.10%)</title><rect x="24" y="1524" width="1" height="15" fill="rgb(250,21,26)"/><text x="27.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.10%)</title><rect x="24" y="1540" width="1" height="15" fill="rgb(234,163,13)"/><text x="27.00" y="1550.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:4) (14 samples, 1.44%)</title><rect x="10" y="52" width="16" height="15" fill="rgb(205,184,0)"/><text x="13.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 1.44%)</title><rect x="10" y="68" width="16" height="15" fill="rgb(246,82,46)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 1.44%)</title><rect x="10" y="84" width="16" height="15" fill="rgb(211,219,23)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 1.44%)</title><rect x="10" y="100" width="16" height="15" fill="rgb(214,113,54)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 1.44%)</title><rect x="10" y="116" width="16" height="15" fill="rgb(229,130,41)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 1.44%)</title><rect x="10" y="132" width="16" height="15" fill="rgb(214,3,31)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:7) (5 samples, 0.51%)</title><rect x="20" y="148" width="6" height="15" fill="rgb(244,105,53)"/><text x="23.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.51%)</title><rect x="20" y="164" width="6" height="15" fill="rgb(249,76,51)"/><text x="23.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.51%)</title><rect x="20" y="180" width="6" height="15" fill="rgb(225,161,42)"/><text x="23.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.51%)</title><rect x="20" y="196" width="6" height="15" fill="rgb(207,35,49)"/><text x="23.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.51%)</title><rect x="20" y="212" width="6" height="15" fill="rgb(207,8,10)"/><text x="23.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.51%)</title><rect x="20" y="228" width="6" height="15" fill="rgb(217,202,16)"/><text x="23.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 0.51%)</title><rect x="20" y="244" width="6" height="15" fill="rgb(241,192,41)"/><text x="23.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.51%)</title><rect x="20" y="260" width="6" height="15" fill="rgb(230,35,11)"/><text x="23.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.51%)</title><rect x="20" y="276" width="6" height="15" fill="rgb(220,38,0)"/><text x="23.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.51%)</title><rect x="20" y="292" width="6" height="15" fill="rgb(244,203,39)"/><text x="23.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.51%)</title><rect x="20" y="308" width="6" height="15" fill="rgb(247,48,12)"/><text x="23.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.51%)</title><rect x="20" y="324" width="6" height="15" fill="rgb(244,62,5)"/><text x="23.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 0.51%)</title><rect x="20" y="340" width="6" height="15" fill="rgb(225,167,22)"/><text x="23.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.51%)</title><rect x="20" y="356" width="6" height="15" fill="rgb(212,82,44)"/><text x="23.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.51%)</title><rect x="20" y="372" width="6" height="15" fill="rgb(231,53,35)"/><text x="23.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.51%)</title><rect x="20" y="388" width="6" height="15" fill="rgb(208,133,41)"/><text x="23.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.51%)</title><rect x="20" y="404" width="6" height="15" fill="rgb(245,201,40)"/><text x="23.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.51%)</title><rect x="20" y="420" width="6" height="15" fill="rgb(239,131,37)"/><text x="23.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 0.41%)</title><rect x="22" y="436" width="4" height="15" fill="rgb(223,229,51)"/><text x="25.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="22" y="452" width="4" height="15" fill="rgb(230,213,40)"/><text x="25.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.41%)</title><rect x="22" y="468" width="4" height="15" fill="rgb(216,49,26)"/><text x="25.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="22" y="484" width="4" height="15" fill="rgb(240,64,20)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="22" y="500" width="4" height="15" fill="rgb(211,199,37)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="22" y="516" width="4" height="15" fill="rgb(208,89,8)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="22" y="532" width="4" height="15" fill="rgb(211,219,53)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="22" y="548" width="4" height="15" fill="rgb(230,94,13)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="22" y="564" width="4" height="15" fill="rgb(245,183,47)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 0.41%)</title><rect x="22" y="580" width="4" height="15" fill="rgb(252,69,2)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="22" y="596" width="4" height="15" fill="rgb(210,162,49)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="22" y="612" width="4" height="15" fill="rgb(208,94,14)"/><text x="25.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="22" y="628" width="4" height="15" fill="rgb(229,98,25)"/><text x="25.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="22" y="644" width="4" height="15" fill="rgb(241,43,3)"/><text x="25.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="22" y="660" width="4" height="15" fill="rgb(232,76,53)"/><text x="25.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 0.41%)</title><rect x="22" y="676" width="4" height="15" fill="rgb(217,176,25)"/><text x="25.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="22" y="692" width="4" height="15" fill="rgb(213,219,22)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="22" y="708" width="4" height="15" fill="rgb(214,79,48)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="22" y="724" width="4" height="15" fill="rgb(246,16,17)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="22" y="740" width="4" height="15" fill="rgb(229,198,1)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="22" y="756" width="4" height="15" fill="rgb(245,78,31)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 0.41%)</title><rect x="22" y="772" width="4" height="15" fill="rgb(231,24,19)"/><text x="25.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="22" y="788" width="4" height="15" fill="rgb(222,57,2)"/><text x="25.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="22" y="804" width="4" height="15" fill="rgb(252,183,35)"/><text x="25.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="22" y="820" width="4" height="15" fill="rgb(231,73,8)"/><text x="25.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="22" y="836" width="4" height="15" fill="rgb(230,188,39)"/><text x="25.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="22" y="852" width="4" height="15" fill="rgb(252,59,17)"/><text x="25.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 0.41%)</title><rect x="22" y="868" width="4" height="15" fill="rgb(245,199,3)"/><text x="25.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="22" y="884" width="4" height="15" fill="rgb(232,141,45)"/><text x="25.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.41%)</title><rect x="22" y="900" width="4" height="15" fill="rgb(227,123,11)"/><text x="25.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="22" y="916" width="4" height="15" fill="rgb(244,66,44)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="22" y="932" width="4" height="15" fill="rgb(244,79,46)"/><text x="25.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="22" y="948" width="4" height="15" fill="rgb(206,158,1)"/><text x="25.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="22" y="964" width="4" height="15" fill="rgb(207,187,2)"/><text x="25.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="22" y="980" width="4" height="15" fill="rgb(227,95,25)"/><text x="25.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="22" y="996" width="4" height="15" fill="rgb(207,135,36)"/><text x="25.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 0.41%)</title><rect x="22" y="1012" width="4" height="15" fill="rgb(222,59,4)"/><text x="25.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="22" y="1028" width="4" height="15" fill="rgb(207,106,50)"/><text x="25.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="22" y="1044" width="4" height="15" fill="rgb(226,5,49)"/><text x="25.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="22" y="1060" width="4" height="15" fill="rgb(241,100,36)"/><text x="25.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="22" y="1076" width="4" height="15" fill="rgb(214,177,50)"/><text x="25.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="22" y="1092" width="4" height="15" fill="rgb(232,224,48)"/><text x="25.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:9) (1 samples, 0.10%)</title><rect x="25" y="1108" width="1" height="15" fill="rgb(251,224,20)"/><text x="28.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="25" y="1124" width="1" height="15" fill="rgb(238,129,0)"/><text x="28.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="25" y="1140" width="1" height="15" fill="rgb(210,0,34)"/><text x="28.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="25" y="1156" width="1" height="15" fill="rgb(218,225,42)"/><text x="28.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="25" y="1172" width="1" height="15" fill="rgb(236,39,5)"/><text x="28.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="25" y="1188" width="1" height="15" fill="rgb(241,225,22)"/><text x="28.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/proto/__init__.py:34) (1 samples, 0.10%)</title><rect x="25" y="1204" width="1" height="15" fill="rgb(219,45,33)"/><text x="28.00" y="1214.50"></text></g><g><title>_check_onnx_version (skl2onnx/proto/__init__.py:29) (1 samples, 0.10%)</title><rect x="25" y="1220" width="1" height="15" fill="rgb(206,184,5)"/><text x="28.00" y="1230.50"></text></g><g><title>get_distribution (pkg_resources/__init__.py:479) (1 samples, 0.10%)</title><rect x="25" y="1236" width="1" height="15" fill="rgb(245,19,6)"/><text x="28.00" y="1246.50"></text></g><g><title>parse (pkg_resources/__init__.py:3148) (1 samples, 0.10%)</title><rect x="25" y="1252" width="1" height="15" fill="rgb(252,25,5)"/><text x="28.00" y="1262.50"></text></g><g><title>parse_requirements (pkg_resources/__init__.py:3094) (1 samples, 0.10%)</title><rect x="25" y="1268" width="1" height="15" fill="rgb(217,14,42)"/><text x="28.00" y="1278.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:3101) (1 samples, 0.10%)</title><rect x="25" y="1284" width="1" height="15" fill="rgb(214,148,46)"/><text x="28.00" y="1294.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/requirements.py:90) (1 samples, 0.10%)</title><rect x="25" y="1300" width="1" height="15" fill="rgb(212,44,39)"/><text x="28.00" y="1310.50"></text></g><g><title>parseString (pkg_resources/_vendor/pyparsing.py:1637) (1 samples, 0.10%)</title><rect x="25" y="1316" width="1" height="15" fill="rgb(221,148,20)"/><text x="28.00" y="1326.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.10%)</title><rect x="25" y="1332" width="1" height="15" fill="rgb(232,23,17)"/><text x="28.00" y="1342.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.10%)</title><rect x="25" y="1348" width="1" height="15" fill="rgb(241,208,1)"/><text x="28.00" y="1358.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.10%)</title><rect x="25" y="1364" width="1" height="15" fill="rgb(231,164,27)"/><text x="28.00" y="1374.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.10%)</title><rect x="25" y="1380" width="1" height="15" fill="rgb(226,22,32)"/><text x="28.00" y="1390.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.10%)</title><rect x="25" y="1396" width="1" height="15" fill="rgb(244,68,51)"/><text x="28.00" y="1406.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.10%)</title><rect x="25" y="1412" width="1" height="15" fill="rgb(212,52,15)"/><text x="28.00" y="1422.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3349) (1 samples, 0.10%)</title><rect x="25" y="1428" width="1" height="15" fill="rgb(206,190,53)"/><text x="28.00" y="1438.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.10%)</title><rect x="25" y="1444" width="1" height="15" fill="rgb(229,155,13)"/><text x="28.00" y="1454.50"></text></g><g><title>__str__ (pkg_resources/_vendor/pyparsing.py:3439) (1 samples, 0.10%)</title><rect x="25" y="1460" width="1" height="15" fill="rgb(253,35,40)"/><text x="28.00" y="1470.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.10%)</title><rect x="25" y="1476" width="1" height="15" fill="rgb(225,64,49)"/><text x="28.00" y="1486.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="25" y="1492" width="1" height="15" fill="rgb(223,130,45)"/><text x="28.00" y="1502.50"></text></g><g><title>0x7f920a9ef8a4 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="25" y="1508" width="1" height="15" fill="rgb(230,196,1)"/><text x="28.00" y="1518.50"></text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:30) (1 samples, 0.10%)</title><rect x="26" y="100" width="2" height="15" fill="rgb(214,34,8)"/><text x="29.00" y="110.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (2 samples, 0.21%)</title><rect x="39" y="164" width="2" height="15" fill="rgb(244,143,3)"/><text x="42.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.10%)</title><rect x="41" y="164" width="1" height="15" fill="rgb(221,198,36)"/><text x="44.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.10%)</title><rect x="42" y="164" width="1" height="15" fill="rgb(229,24,43)"/><text x="45.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (5 samples, 0.51%)</title><rect x="48" y="180" width="6" height="15" fill="rgb(213,140,15)"/><text x="51.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.10%)</title><rect x="62" y="196" width="1" height="15" fill="rgb(248,18,42)"/><text x="65.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (28 samples, 2.88%)</title><rect x="36" y="148" width="34" height="15" fill="rgb(217,207,51)"/><text x="39.00" y="158.50">pr..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (22 samples, 2.26%)</title><rect x="43" y="164" width="27" height="15" fill="rgb(246,204,2)"/><text x="46.00" y="174.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (13 samples, 1.34%)</title><rect x="54" y="180" width="16" height="15" fill="rgb(205,185,52)"/><text x="57.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (6 samples, 0.62%)</title><rect x="63" y="196" width="7" height="15" fill="rgb(220,12,35)"/><text x="66.00" y="206.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:377) (1 samples, 0.10%)</title><rect x="71" y="164" width="2" height="15" fill="rgb(205,165,2)"/><text x="74.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:434) (2 samples, 0.21%)</title><rect x="74" y="180" width="2" height="15" fill="rgb(216,60,22)"/><text x="77.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.10%)</title><rect x="76" y="180" width="1" height="15" fill="rgb(218,21,21)"/><text x="79.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:488) (1 samples, 0.10%)</title><rect x="77" y="180" width="2" height="15" fill="rgb(223,92,46)"/><text x="80.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:475) (3 samples, 0.31%)</title><rect x="82" y="196" width="4" height="15" fill="rgb(211,148,2)"/><text x="85.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.10%)</title><rect x="86" y="196" width="1" height="15" fill="rgb(206,165,6)"/><text x="89.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (9 samples, 0.93%)</title><rect x="79" y="180" width="11" height="15" fill="rgb(207,62,17)"/><text x="82.00" y="190.50"></text></g><g><title>__init__ (warnings.py:462) (2 samples, 0.21%)</title><rect x="87" y="196" width="3" height="15" fill="rgb(229,84,45)"/><text x="90.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.10%)</title><rect x="90" y="196" width="1" height="15" fill="rgb(254,70,28)"/><text x="93.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (8 samples, 0.82%)</title><rect x="91" y="212" width="10" height="15" fill="rgb(207,127,14)"/><text x="94.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (10 samples, 1.03%)</title><rect x="90" y="180" width="12" height="15" fill="rgb(216,4,51)"/><text x="93.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (9 samples, 0.93%)</title><rect x="91" y="196" width="11" height="15" fill="rgb(249,182,27)"/><text x="94.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.10%)</title><rect x="101" y="212" width="1" height="15" fill="rgb(254,43,6)"/><text x="104.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2261) (1 samples, 0.10%)</title><rect x="104" y="196" width="1" height="15" fill="rgb(252,94,11)"/><text x="107.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (4 samples, 0.41%)</title><rect x="102" y="180" width="5" height="15" fill="rgb(215,46,9)"/><text x="105.00" y="190.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.10%)</title><rect x="105" y="196" width="2" height="15" fill="rgb(205,32,13)"/><text x="108.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.10%)</title><rect x="105" y="212" width="2" height="15" fill="rgb(239,155,37)"/><text x="108.00" y="222.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.10%)</title><rect x="105" y="228" width="2" height="15" fill="rgb(247,128,10)"/><text x="108.00" y="238.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.10%)</title><rect x="105" y="244" width="2" height="15" fill="rgb(216,192,19)"/><text x="108.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (8 samples, 0.82%)</title><rect x="107" y="180" width="9" height="15" fill="rgb(207,214,3)"/><text x="110.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (5 samples, 0.51%)</title><rect x="110" y="196" width="6" height="15" fill="rgb(205,169,14)"/><text x="113.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (3 samples, 0.31%)</title><rect x="113" y="212" width="3" height="15" fill="rgb(244,68,53)"/><text x="116.00" y="222.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (2 samples, 0.21%)</title><rect x="114" y="228" width="2" height="15" fill="rgb(254,29,1)"/><text x="117.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.10%)</title><rect x="116" y="180" width="2" height="15" fill="rgb(244,20,16)"/><text x="119.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.10%)</title><rect x="116" y="196" width="2" height="15" fill="rgb(246,210,47)"/><text x="119.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.10%)</title><rect x="118" y="196" width="1" height="15" fill="rgb(246,177,32)"/><text x="121.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.21%)</title><rect x="118" y="180" width="2" height="15" fill="rgb(215,51,50)"/><text x="121.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.10%)</title><rect x="119" y="196" width="1" height="15" fill="rgb(253,55,10)"/><text x="122.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.10%)</title><rect x="120" y="180" width="1" height="15" fill="rgb(225,222,32)"/><text x="123.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.10%)</title><rect x="121" y="180" width="1" height="15" fill="rgb(241,168,46)"/><text x="124.00" y="190.50"></text></g><g><title>0x7f920aacb151 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="128" y="212" width="2" height="15" fill="rgb(210,219,1)"/><text x="131.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.10%)</title><rect x="130" y="212" width="1" height="15" fill="rgb(224,108,12)"/><text x="133.00" y="222.50"></text></g><g><title>0x7f920a9fe6d0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="133" y="228" width="2" height="15" fill="rgb(210,43,21)"/><text x="136.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (11 samples, 1.13%)</title><rect x="122" y="196" width="14" height="15" fill="rgb(229,158,1)"/><text x="125.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (4 samples, 0.41%)</title><rect x="131" y="212" width="5" height="15" fill="rgb(210,14,28)"/><text x="134.00" y="222.50"></text></g><g><title>0x7f920a9fe6d4 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="135" y="228" width="1" height="15" fill="rgb(245,194,0)"/><text x="138.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (12 samples, 1.23%)</title><rect x="122" y="180" width="15" height="15" fill="rgb(224,94,52)"/><text x="125.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.10%)</title><rect x="136" y="196" width="1" height="15" fill="rgb(228,79,13)"/><text x="139.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 0.31%)</title><rect x="139" y="196" width="4" height="15" fill="rgb(232,58,9)"/><text x="142.00" y="206.50"></text></g><g><title>0x7f920aa03e66 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="142" y="212" width="1" height="15" fill="rgb(251,2,26)"/><text x="145.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.10%)</title><rect x="143" y="196" width="1" height="15" fill="rgb(210,202,6)"/><text x="146.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.10%)</title><rect x="144" y="196" width="1" height="15" fill="rgb(246,170,21)"/><text x="147.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (6 samples, 0.62%)</title><rect x="145" y="196" width="8" height="15" fill="rgb(236,175,41)"/><text x="148.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.21%)</title><rect x="150" y="212" width="3" height="15" fill="rgb(228,68,36)"/><text x="153.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (15 samples, 1.54%)</title><rect x="137" y="180" width="18" height="15" fill="rgb(211,70,8)"/><text x="140.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (2 samples, 0.21%)</title><rect x="153" y="196" width="2" height="15" fill="rgb(231,217,43)"/><text x="156.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.10%)</title><rect x="154" y="212" width="1" height="15" fill="rgb(252,118,51)"/><text x="157.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:574) (1 samples, 0.10%)</title><rect x="155" y="180" width="1" height="15" fill="rgb(224,40,27)"/><text x="158.00" y="190.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (70 samples, 7.20%)</title><rect x="73" y="164" width="85" height="15" fill="rgb(223,33,28)"/><text x="76.00" y="174.50">_validate_..</text></g><g><title>check_array (sklearn/utils/validation.py:580) (1 samples, 0.10%)</title><rect x="156" y="180" width="2" height="15" fill="rgb(205,122,50)"/><text x="159.00" y="190.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:381) (2 samples, 0.21%)</title><rect x="158" y="164" width="2" height="15" fill="rgb(225,95,10)"/><text x="161.00" y="174.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.10%)</title><rect x="159" y="180" width="1" height="15" fill="rgb(252,43,26)"/><text x="162.00" y="190.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (75 samples, 7.72%)</title><rect x="70" y="148" width="91" height="15" fill="rgb(209,167,35)"/><text x="73.00" y="158.50">predict (s..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (1 samples, 0.10%)</title><rect x="160" y="164" width="1" height="15" fill="rgb(208,37,22)"/><text x="163.00" y="174.50"></text></g><g><title>0x7f91e5059d24 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="162" y="164" width="2" height="15" fill="rgb(221,41,43)"/><text x="165.00" y="174.50"></text></g><g><title>0x7f91e5059d2e (?) (1 samples, 0.10%)</title><rect x="164" y="164" width="1" height="15" fill="rgb(240,64,23)"/><text x="167.00" y="174.50"></text></g><g><title>0x7f91e5058f55 (?) (1 samples, 0.10%)</title><rect x="164" y="180" width="1" height="15" fill="rgb(218,133,13)"/><text x="167.00" y="190.50"></text></g><g><title>0x7f91e5048d33 (?) (1 samples, 0.10%)</title><rect x="164" y="196" width="1" height="15" fill="rgb(228,91,33)"/><text x="167.00" y="206.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.10%)</title><rect x="164" y="212" width="1" height="15" fill="rgb(234,102,6)"/><text x="167.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.10%)</title><rect x="164" y="228" width="1" height="15" fill="rgb(215,204,32)"/><text x="167.00" y="238.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.10%)</title><rect x="164" y="244" width="1" height="15" fill="rgb(212,203,10)"/><text x="167.00" y="254.50"></text></g><g><title>0x7f91e50410e0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="165" y="260" width="1" height="15" fill="rgb(241,150,21)"/><text x="168.00" y="270.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.10%)</title><rect x="166" y="292" width="1" height="15" fill="rgb(209,172,50)"/><text x="169.00" y="302.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.10%)</title><rect x="166" y="308" width="1" height="15" fill="rgb(249,214,20)"/><text x="169.00" y="318.50"></text></g><g><title>_buffer_format_string (buffer.c:433) (1 samples, 0.10%)</title><rect x="166" y="324" width="1" height="15" fill="rgb(220,20,39)"/><text x="169.00" y="334.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.10%)</title><rect x="166" y="340" width="1" height="15" fill="rgb(253,59,3)"/><text x="169.00" y="350.50"></text></g><g><title>0x7f9209c10d50 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="166" y="356" width="1" height="15" fill="rgb(221,23,13)"/><text x="169.00" y="366.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (2 samples, 0.21%)</title><rect x="167" y="292" width="3" height="15" fill="rgb(233,47,39)"/><text x="170.00" y="302.50"></text></g><g><title>0x7f9209c0ee30 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="169" y="308" width="1" height="15" fill="rgb(214,113,54)"/><text x="172.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.10%)</title><rect x="170" y="292" width="1" height="15" fill="rgb(213,163,27)"/><text x="173.00" y="302.50"></text></g><g><title>_buffer_info_cmp (buffer.c:611) (1 samples, 0.10%)</title><rect x="170" y="308" width="1" height="15" fill="rgb(212,61,44)"/><text x="173.00" y="318.50"></text></g><g><title>0x7f920a9fc6a2 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="170" y="324" width="1" height="15" fill="rgb(232,207,50)"/><text x="173.00" y="334.50"></text></g><g><title>0x7f91e504b666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.62%)</title><rect x="165" y="244" width="7" height="15" fill="rgb(209,14,19)"/><text x="168.00" y="254.50"></text></g><g><title>0x7f91e50412fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.51%)</title><rect x="166" y="260" width="6" height="15" fill="rgb(229,28,32)"/><text x="169.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c:782) (5 samples, 0.51%)</title><rect x="166" y="276" width="6" height="15" fill="rgb(224,142,32)"/><text x="169.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.10%)</title><rect x="171" y="292" width="1" height="15" fill="rgb(218,78,3)"/><text x="174.00" y="302.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.10%)</title><rect x="171" y="308" width="1" height="15" fill="rgb(246,34,42)"/><text x="174.00" y="318.50"></text></g><g><title>0x7f920a9edbd8 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="171" y="324" width="1" height="15" fill="rgb(250,227,33)"/><text x="174.00" y="334.50"></text></g><g><title>0x7f91e504bd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 0.72%)</title><rect x="165" y="228" width="8" height="15" fill="rgb(226,168,15)"/><text x="168.00" y="238.50"></text></g><g><title>0x7f91e504b6fa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="172" y="244" width="1" height="15" fill="rgb(222,131,12)"/><text x="175.00" y="254.50"></text></g><g><title>0x7f91e504be72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="173" y="228" width="2" height="15" fill="rgb(230,84,33)"/><text x="176.00" y="238.50"></text></g><g><title>0x7f91e503f2bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="173" y="244" width="2" height="15" fill="rgb(231,82,18)"/><text x="176.00" y="254.50"></text></g><g><title>0x7f91e503ee27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="173" y="260" width="2" height="15" fill="rgb(239,32,41)"/><text x="176.00" y="270.50"></text></g><g><title>0x7f91e504c007 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="175" y="228" width="1" height="15" fill="rgb(232,81,32)"/><text x="178.00" y="238.50"></text></g><g><title>0x7f91e50672df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.03%)</title><rect x="165" y="212" width="12" height="15" fill="rgb(234,5,26)"/><text x="168.00" y="222.50"></text></g><g><title>0x7f91e504c121 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="176" y="228" width="1" height="15" fill="rgb(241,196,0)"/><text x="179.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.10%)</title><rect x="177" y="228" width="1" height="15" fill="rgb(246,186,29)"/><text x="180.00" y="238.50"></text></g><g><title>0x7f920aa0e120 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="177" y="244" width="1" height="15" fill="rgb(232,153,30)"/><text x="180.00" y="254.50"></text></g><g><title>0x7f91e5067364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="177" y="212" width="2" height="15" fill="rgb(251,6,21)"/><text x="180.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.10%)</title><rect x="178" y="228" width="1" height="15" fill="rgb(250,93,36)"/><text x="181.00" y="238.50"></text></g><g><title>0x7f91e50674a4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="179" y="212" width="2" height="15" fill="rgb(227,163,21)"/><text x="182.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.10%)</title><rect x="181" y="228" width="1" height="15" fill="rgb(254,171,42)"/><text x="184.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.10%)</title><rect x="181" y="244" width="1" height="15" fill="rgb(250,6,54)"/><text x="184.00" y="254.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:252) (3 samples, 0.31%)</title><rect x="182" y="308" width="4" height="15" fill="rgb(249,43,36)"/><text x="185.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="184" y="324" width="2" height="15" fill="rgb(206,88,4)"/><text x="187.00" y="334.50"></text></g><g><title>0x7f920a9ef700 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="186" y="340" width="1" height="15" fill="rgb(235,218,52)"/><text x="189.00" y="350.50"></text></g><g><title>0x7f920a9ecb02 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="186" y="356" width="1" height="15" fill="rgb(213,107,49)"/><text x="189.00" y="366.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (6 samples, 0.62%)</title><rect x="182" y="292" width="7" height="15" fill="rgb(229,6,21)"/><text x="185.00" y="302.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (3 samples, 0.31%)</title><rect x="186" y="308" width="3" height="15" fill="rgb(244,194,20)"/><text x="189.00" y="318.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (3 samples, 0.31%)</title><rect x="186" y="324" width="3" height="15" fill="rgb(228,33,8)"/><text x="189.00" y="334.50"></text></g><g><title>0x7f920aa0e103 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="187" y="340" width="2" height="15" fill="rgb(240,74,37)"/><text x="190.00" y="350.50"></text></g><g><title>0x7f91e5067592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.82%)</title><rect x="181" y="212" width="9" height="15" fill="rgb(251,183,24)"/><text x="184.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (7 samples, 0.72%)</title><rect x="182" y="228" width="8" height="15" fill="rgb(212,224,26)"/><text x="185.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (7 samples, 0.72%)</title><rect x="182" y="244" width="8" height="15" fill="rgb(239,68,31)"/><text x="185.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (7 samples, 0.72%)</title><rect x="182" y="260" width="8" height="15" fill="rgb(208,229,11)"/><text x="185.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (7 samples, 0.72%)</title><rect x="182" y="276" width="8" height="15" fill="rgb(228,207,54)"/><text x="185.00" y="286.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:140) (1 samples, 0.10%)</title><rect x="189" y="292" width="1" height="15" fill="rgb(209,115,11)"/><text x="192.00" y="302.50"></text></g><g><title>0x7f91e5067644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="190" y="212" width="2" height="15" fill="rgb(214,177,4)"/><text x="193.00" y="222.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="190" y="228" width="2" height="15" fill="rgb(222,36,52)"/><text x="193.00" y="238.50"></text></g><g><title>0x7f91e5067698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.31%)</title><rect x="192" y="212" width="3" height="15" fill="rgb(242,187,6)"/><text x="195.00" y="222.50"></text></g><g><title>0x7f91e50676a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="195" y="212" width="1" height="15" fill="rgb(225,124,34)"/><text x="198.00" y="222.50"></text></g><g><title>0x7f91e50676aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.41%)</title><rect x="196" y="212" width="5" height="15" fill="rgb(206,12,54)"/><text x="199.00" y="222.50"></text></g><g><title>0x7f91e50676ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.31%)</title><rect x="201" y="212" width="4" height="15" fill="rgb(208,122,48)"/><text x="204.00" y="222.50"></text></g><g><title>0x7f91e50676b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.41%)</title><rect x="205" y="212" width="5" height="15" fill="rgb(220,55,3)"/><text x="208.00" y="222.50"></text></g><g><title>0x7f91e50676b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="210" y="212" width="1" height="15" fill="rgb(230,177,43)"/><text x="213.00" y="222.50"></text></g><g><title>0x7f91e50676c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.31%)</title><rect x="211" y="212" width="4" height="15" fill="rgb(211,194,35)"/><text x="214.00" y="222.50"></text></g><g><title>0x7f91e50676e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="215" y="212" width="1" height="15" fill="rgb(232,224,43)"/><text x="218.00" y="222.50"></text></g><g><title>0x7f91e50677b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="216" y="212" width="1" height="15" fill="rgb(248,150,1)"/><text x="219.00" y="222.50"></text></g><g><title>0x7f91e506787d (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="217" y="212" width="1" height="15" fill="rgb(245,93,22)"/><text x="220.00" y="222.50"></text></g><g><title>0x7f91e503c9af (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="218" y="228" width="2" height="15" fill="rgb(219,35,18)"/><text x="221.00" y="238.50"></text></g><g><title>0x7f91e506792f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="218" y="212" width="3" height="15" fill="rgb(212,163,1)"/><text x="221.00" y="222.50"></text></g><g><title>0x7f91e503ca05 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="220" y="228" width="1" height="15" fill="rgb(238,25,14)"/><text x="223.00" y="238.50"></text></g><g><title>0x7f91e5033e70 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="221" y="244" width="1" height="15" fill="rgb(215,103,40)"/><text x="224.00" y="254.50"></text></g><g><title>0x7f91e5068405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (49 samples, 5.04%)</title><rect x="165" y="196" width="59" height="15" fill="rgb(231,169,11)"/><text x="168.00" y="206.50">0x7f91..</text></g><g><title>0x7f91e5067c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.31%)</title><rect x="221" y="212" width="3" height="15" fill="rgb(254,23,53)"/><text x="224.00" y="222.50"></text></g><g><title>0x7f91e503f529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.31%)</title><rect x="221" y="228" width="3" height="15" fill="rgb(219,141,41)"/><text x="224.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.21%)</title><rect x="222" y="244" width="2" height="15" fill="rgb(240,69,12)"/><text x="225.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (2 samples, 0.21%)</title><rect x="222" y="260" width="2" height="15" fill="rgb(213,173,3)"/><text x="225.00" y="270.50"></text></g><g><title>0x7f91e5058fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (50 samples, 5.14%)</title><rect x="165" y="180" width="61" height="15" fill="rgb(241,165,0)"/><text x="168.00" y="190.50">0x7f91..</text></g><g><title>0x7f91e5068540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="224" y="196" width="2" height="15" fill="rgb(237,201,24)"/><text x="227.00" y="206.50"></text></g><g><title>0x7f91e503d2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="224" y="212" width="2" height="15" fill="rgb(218,191,3)"/><text x="227.00" y="222.50"></text></g><g><title>0x7f91e503c530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="224" y="228" width="2" height="15" fill="rgb(246,137,9)"/><text x="227.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.10%)</title><rect x="224" y="244" width="2" height="15" fill="rgb(217,136,10)"/><text x="227.00" y="254.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.10%)</title><rect x="227" y="212" width="1" height="15" fill="rgb(207,185,23)"/><text x="230.00" y="222.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.10%)</title><rect x="228" y="212" width="1" height="15" fill="rgb(215,132,46)"/><text x="231.00" y="222.50"></text></g><g><title>0x7f920aacb130 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="228" y="228" width="1" height="15" fill="rgb(236,186,41)"/><text x="231.00" y="238.50"></text></g><g><title>array_take (methods.c:138) (4 samples, 0.41%)</title><rect x="226" y="196" width="4" height="15" fill="rgb(208,88,8)"/><text x="229.00" y="206.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.10%)</title><rect x="229" y="212" width="1" height="15" fill="rgb(245,192,28)"/><text x="232.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3896) (1 samples, 0.10%)</title><rect x="230" y="228" width="2" height="15" fill="rgb(246,175,45)"/><text x="233.00" y="238.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="230" y="244" width="2" height="15" fill="rgb(238,226,5)"/><text x="233.00" y="254.50"></text></g><g><title>0x7f91e505905a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.62%)</title><rect x="226" y="180" width="7" height="15" fill="rgb(236,116,14)"/><text x="229.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.21%)</title><rect x="230" y="196" width="3" height="15" fill="rgb(215,55,23)"/><text x="233.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.21%)</title><rect x="230" y="212" width="3" height="15" fill="rgb(248,102,46)"/><text x="233.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3954) (1 samples, 0.10%)</title><rect x="232" y="228" width="1" height="15" fill="rgb(224,32,4)"/><text x="235.00" y="238.50"></text></g><g><title>0x7f91e505914f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="233" y="180" width="1" height="15" fill="rgb(212,141,1)"/><text x="236.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.10%)</title><rect x="233" y="196" width="1" height="15" fill="rgb(242,48,47)"/><text x="236.00" y="206.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.10%)</title><rect x="233" y="212" width="1" height="15" fill="rgb(210,45,52)"/><text x="236.00" y="222.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.10%)</title><rect x="233" y="228" width="1" height="15" fill="rgb(231,98,19)"/><text x="236.00" y="238.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.10%)</title><rect x="233" y="244" width="1" height="15" fill="rgb(229,188,20)"/><text x="236.00" y="254.50"></text></g><g><title>0x7f920a9ed93b (libc-2.29.so) (1 samples, 0.10%)</title><rect x="233" y="260" width="1" height="15" fill="rgb(221,184,26)"/><text x="236.00" y="270.50"></text></g><g><title>0x7f91e505918f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="234" y="180" width="3" height="15" fill="rgb(214,72,6)"/><text x="237.00" y="190.50"></text></g><g><title>0x7f91e5059240 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="237" y="180" width="1" height="15" fill="rgb(250,139,53)"/><text x="240.00" y="190.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.10%)</title><rect x="239" y="196" width="1" height="15" fill="rgb(252,168,15)"/><text x="242.00" y="206.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.10%)</title><rect x="239" y="212" width="1" height="15" fill="rgb(214,171,9)"/><text x="242.00" y="222.50"></text></g><g><title>0x7f920aa03734 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="239" y="228" width="1" height="15" fill="rgb(240,30,53)"/><text x="242.00" y="238.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.10%)</title><rect x="240" y="196" width="1" height="15" fill="rgb(235,140,49)"/><text x="243.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.10%)</title><rect x="240" y="212" width="1" height="15" fill="rgb(220,163,13)"/><text x="243.00" y="222.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.10%)</title><rect x="240" y="228" width="1" height="15" fill="rgb(227,196,22)"/><text x="243.00" y="238.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (67 samples, 6.89%)</title><rect x="161" y="148" width="82" height="15" fill="rgb(222,193,28)"/><text x="164.00" y="158.50">predict (..</text></g><g><title>0x7f91e5059d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (64 samples, 6.58%)</title><rect x="165" y="164" width="78" height="15" fill="rgb(230,186,40)"/><text x="168.00" y="174.50">0x7f91e50..</text></g><g><title>0x7f91e5059328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.41%)</title><rect x="238" y="180" width="5" height="15" fill="rgb(211,142,20)"/><text x="241.00" y="190.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.10%)</title><rect x="241" y="196" width="2" height="15" fill="rgb(223,180,26)"/><text x="244.00" y="206.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.10%)</title><rect x="241" y="212" width="2" height="15" fill="rgb(206,109,2)"/><text x="244.00" y="222.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.10%)</title><rect x="241" y="228" width="2" height="15" fill="rgb(210,178,46)"/><text x="244.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.10%)</title><rect x="241" y="244" width="2" height="15" fill="rgb(219,77,47)"/><text x="244.00" y="254.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.10%)</title><rect x="241" y="260" width="2" height="15" fill="rgb(247,190,40)"/><text x="244.00" y="270.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:171) (1 samples, 0.10%)</title><rect x="241" y="276" width="2" height="15" fill="rgb(220,216,20)"/><text x="244.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (3 samples, 0.31%)</title><rect x="243" y="148" width="3" height="15" fill="rgb(235,203,38)"/><text x="246.00" y="158.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (1 samples, 0.10%)</title><rect x="245" y="164" width="1" height="15" fill="rgb(221,185,30)"/><text x="248.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.10%)</title><rect x="249" y="164" width="1" height="15" fill="rgb(235,26,10)"/><text x="252.00" y="174.50"></text></g><g><title>prepare_index (mapping.c:555) (1 samples, 0.10%)</title><rect x="249" y="180" width="1" height="15" fill="rgb(218,12,9)"/><text x="252.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (180 samples, 18.52%)</title><rect x="33" y="132" width="218" height="15" fill="rgb(253,208,17)"/><text x="36.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (4 samples, 0.41%)</title><rect x="246" y="148" width="5" height="15" fill="rgb(205,130,36)"/><text x="249.00" y="158.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.10%)</title><rect x="250" y="164" width="1" height="15" fill="rgb(222,22,40)"/><text x="253.00" y="174.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.10%)</title><rect x="250" y="180" width="1" height="15" fill="rgb(205,50,3)"/><text x="253.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:54) (187 samples, 19.24%)</title><rect x="26" y="52" width="228" height="15" fill="rgb(211,66,2)"/><text x="29.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRe..</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:53) (187 samples, 19.24%)</title><rect x="26" y="68" width="228" height="15" fill="rgb(217,70,27)"/><text x="29.00" y="78.50">profile_skl (bench_DecisionTre..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:37) (187 samples, 19.24%)</title><rect x="26" y="84" width="228" height="15" fill="rgb(218,16,40)"/><text x="29.00" y="94.50">setup_profile (bench_DecisionT..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:31) (186 samples, 19.14%)</title><rect x="28" y="100" width="226" height="15" fill="rgb(234,212,9)"/><text x="31.00" y="110.50">profile (bench_DecisionTreeRe..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (184 samples, 18.93%)</title><rect x="30" y="116" width="224" height="15" fill="rgb(222,118,31)"/><text x="33.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>unicode_eq (python3.7) (2 samples, 0.21%)</title><rect x="251" y="132" width="3" height="15" fill="rgb(211,130,20)"/><text x="254.00" y="142.50"></text></g><g><title>0x7f920aacb151 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="252" y="148" width="2" height="15" fill="rgb(250,161,25)"/><text x="255.00" y="158.50"></text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:36) (1 samples, 0.10%)</title><rect x="254" y="84" width="1" height="15" fill="rgb(240,45,19)"/><text x="257.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.10%)</title><rect x="254" y="100" width="1" height="15" fill="rgb(240,33,42)"/><text x="257.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.10%)</title><rect x="254" y="116" width="1" height="15" fill="rgb(246,199,23)"/><text x="257.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.10%)</title><rect x="254" y="132" width="1" height="15" fill="rgb(220,27,32)"/><text x="257.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.10%)</title><rect x="254" y="148" width="1" height="15" fill="rgb(238,191,14)"/><text x="257.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.10%)</title><rect x="254" y="164" width="1" height="15" fill="rgb(244,154,30)"/><text x="257.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.10%)</title><rect x="254" y="180" width="1" height="15" fill="rgb(229,94,41)"/><text x="257.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.10%)</title><rect x="254" y="196" width="1" height="15" fill="rgb(248,87,46)"/><text x="257.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="254" y="212" width="1" height="15" fill="rgb(244,99,44)"/><text x="257.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="254" y="228" width="1" height="15" fill="rgb(249,50,0)"/><text x="257.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="254" y="244" width="1" height="15" fill="rgb(252,42,1)"/><text x="257.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="254" y="260" width="1" height="15" fill="rgb(222,63,16)"/><text x="257.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="254" y="276" width="1" height="15" fill="rgb(240,171,17)"/><text x="257.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.10%)</title><rect x="254" y="292" width="1" height="15" fill="rgb(232,123,29)"/><text x="257.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="254" y="308" width="1" height="15" fill="rgb(231,32,20)"/><text x="257.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="254" y="324" width="1" height="15" fill="rgb(223,29,17)"/><text x="257.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="254" y="340" width="1" height="15" fill="rgb(210,178,26)"/><text x="257.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="254" y="356" width="1" height="15" fill="rgb(230,145,35)"/><text x="257.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="254" y="372" width="1" height="15" fill="rgb(247,70,27)"/><text x="257.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.10%)</title><rect x="254" y="388" width="1" height="15" fill="rgb(212,173,17)"/><text x="257.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.10%)</title><rect x="254" y="404" width="1" height="15" fill="rgb(208,45,47)"/><text x="257.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.10%)</title><rect x="254" y="420" width="1" height="15" fill="rgb(213,55,27)"/><text x="257.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.10%)</title><rect x="254" y="436" width="1" height="15" fill="rgb(230,203,17)"/><text x="257.00" y="446.50"></text></g><g><title>new_context (jinja2/environment.py:1064) (1 samples, 0.10%)</title><rect x="254" y="452" width="1" height="15" fill="rgb(214,21,24)"/><text x="257.00" y="462.50"></text></g><g><title>new_context (jinja2/runtime.py:77) (1 samples, 0.10%)</title><rect x="254" y="468" width="1" height="15" fill="rgb(226,19,3)"/><text x="257.00" y="478.50"></text></g><g><title>__init__ (jinja2/runtime.py:168) (1 samples, 0.10%)</title><rect x="254" y="484" width="1" height="15" fill="rgb(212,92,46)"/><text x="257.00" y="494.50"></text></g><g><title>&lt;lambda&gt; (jinja2/_compat.py:29) (1 samples, 0.10%)</title><rect x="254" y="500" width="1" height="15" fill="rgb(248,156,44)"/><text x="257.00" y="510.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.10%)</title><rect x="255" y="180" width="1" height="15" fill="rgb(246,145,16)"/><text x="258.00" y="190.50"></text></g><g><title>0x7f91cb4c654f (?) (1 samples, 0.10%)</title><rect x="256" y="244" width="1" height="15" fill="rgb(229,172,33)"/><text x="259.00" y="254.50"></text></g><g><title>0x7f91cb4cc65e (?) (1 samples, 0.10%)</title><rect x="256" y="260" width="1" height="15" fill="rgb(217,42,35)"/><text x="259.00" y="270.50"></text></g><g><title>0x7f91cb4cc50f (?) (1 samples, 0.10%)</title><rect x="256" y="276" width="1" height="15" fill="rgb(206,85,14)"/><text x="259.00" y="286.50"></text></g><g><title>0x7f91cb4d2d6c (?) (1 samples, 0.10%)</title><rect x="256" y="292" width="1" height="15" fill="rgb(216,149,2)"/><text x="259.00" y="302.50"></text></g><g><title>0x7f91d49f3ab9 (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="256" y="308" width="1" height="15" fill="rgb(249,14,4)"/><text x="259.00" y="318.50"></text></g><g><title>0x7f91d49f4ead (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="256" y="324" width="1" height="15" fill="rgb(233,69,12)"/><text x="259.00" y="334.50"></text></g><g><title>0x7f91d49f4ea0 (libgomp.so.1.0.0) (6 samples, 0.62%)</title><rect x="257" y="484" width="7" height="15" fill="rgb(230,136,40)"/><text x="260.00" y="494.50"></text></g><g><title>0x7f91d49f4ea9 (libgomp.so.1.0.0) (24 samples, 2.47%)</title><rect x="264" y="484" width="30" height="15" fill="rgb(254,135,27)"/><text x="267.00" y="494.50">0x..</text></g><g><title>0x7f91d49f4eab (libgomp.so.1.0.0) (23 samples, 2.37%)</title><rect x="294" y="484" width="27" height="15" fill="rgb(220,11,52)"/><text x="297.00" y="494.50">0..</text></g><g><title>0x7f91d49f3ab9 (libgomp.so.1.0.0) (78 samples, 8.02%)</title><rect x="257" y="468" width="95" height="15" fill="rgb(228,92,20)"/><text x="260.00" y="478.50">0x7f91d49f3..</text></g><g><title>0x7f91d49f4ead (libgomp.so.1.0.0) (25 samples, 2.57%)</title><rect x="321" y="484" width="31" height="15" fill="rgb(218,138,47)"/><text x="324.00" y="494.50">0x..</text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:61) (82 samples, 8.44%)</title><rect x="254" y="52" width="99" height="15" fill="rgb(231,123,23)"/><text x="257.00" y="62.50">&lt;module&gt; (b..</text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:60) (82 samples, 8.44%)</title><rect x="254" y="68" width="99" height="15" fill="rgb(219,217,9)"/><text x="257.00" y="78.50">profile_pyr..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:37) (81 samples, 8.33%)</title><rect x="255" y="84" width="98" height="15" fill="rgb(221,209,50)"/><text x="258.00" y="94.50">setup_profi..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:31) (81 samples, 8.33%)</title><rect x="255" y="100" width="98" height="15" fill="rgb(234,37,41)"/><text x="258.00" y="110.50">profile (be..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (81 samples, 8.33%)</title><rect x="255" y="116" width="98" height="15" fill="rgb(208,145,15)"/><text x="258.00" y="126.50">time_predic..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (81 samples, 8.33%)</title><rect x="255" y="132" width="98" height="15" fill="rgb(224,79,22)"/><text x="258.00" y="142.50">&lt;lambda&gt; (m..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (81 samples, 8.33%)</title><rect x="255" y="148" width="98" height="15" fill="rgb(241,137,42)"/><text x="258.00" y="158.50">run (mlprod..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (81 samples, 8.33%)</title><rect x="255" y="164" width="98" height="15" fill="rgb(232,189,0)"/><text x="258.00" y="174.50">_run_sequen..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (80 samples, 8.23%)</title><rect x="256" y="180" width="97" height="15" fill="rgb(235,173,12)"/><text x="259.00" y="190.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (80 samples, 8.23%)</title><rect x="256" y="196" width="97" height="15" fill="rgb(222,141,36)"/><text x="259.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (80 samples, 8.23%)</title><rect x="256" y="212" width="97" height="15" fill="rgb(237,16,0)"/><text x="259.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (80 samples, 8.23%)</title><rect x="256" y="228" width="97" height="15" fill="rgb(212,226,10)"/><text x="259.00" y="238.50">_run (mlpro..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (79 samples, 8.13%)</title><rect x="257" y="244" width="96" height="15" fill="rgb(227,76,50)"/><text x="260.00" y="254.50">pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (79 samples, 8.13%)</title><rect x="257" y="260" width="96" height="15" fill="rgb(214,92,52)"/><text x="260.00" y="270.50">void pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (79 samples, 8.13%)</title><rect x="257" y="276" width="96" height="15" fill="rgb(228,178,46)"/><text x="260.00" y="286.50">void pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (79 samples, 8.13%)</title><rect x="257" y="292" width="96" height="15" fill="rgb(250,206,39)"/><text x="260.00" y="302.50">pybind11::d..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (79 samples, 8.13%)</title><rect x="257" y="308" width="96" height="15" fill="rgb(222,132,33)"/><text x="260.00" y="318.50">pybind11::d..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (79 samples, 8.13%)</title><rect x="257" y="324" width="96" height="15" fill="rgb(242,154,24)"/><text x="260.00" y="334.50">pybind11::c..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (79 samples, 8.13%)</title><rect x="257" y="340" width="96" height="15" fill="rgb(251,112,33)"/><text x="260.00" y="350.50">pybind11::a..</text></g><g><title>pybind11::array::~array (numpy.h:538) (79 samples, 8.13%)</title><rect x="257" y="356" width="96" height="15" fill="rgb(205,151,24)"/><text x="260.00" y="366.50">pybind11::a..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (79 samples, 8.13%)</title><rect x="257" y="372" width="96" height="15" fill="rgb(250,111,45)"/><text x="260.00" y="382.50">pybind11::b..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (79 samples, 8.13%)</title><rect x="257" y="388" width="96" height="15" fill="rgb(253,172,40)"/><text x="260.00" y="398.50">pybind11::o..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (79 samples, 8.13%)</title><rect x="257" y="404" width="96" height="15" fill="rgb(245,47,54)"/><text x="260.00" y="414.50">pybind11::h..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (79 samples, 8.13%)</title><rect x="257" y="420" width="96" height="15" fill="rgb(214,217,23)"/><text x="260.00" y="430.50">RuntimeTree..</text></g><g><title>pybind11::array::size (numpy.h:619) (79 samples, 8.13%)</title><rect x="257" y="436" width="96" height="15" fill="rgb(232,63,10)"/><text x="260.00" y="446.50">pybind11::a..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (79 samples, 8.13%)</title><rect x="257" y="452" width="96" height="15" fill="rgb(210,138,31)"/><text x="260.00" y="462.50">std::accumu..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="352" y="468" width="1" height="15" fill="rgb(246,219,49)"/><text x="355.00" y="478.50"></text></g><g><title>0x7f91d49f2daa (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="352" y="484" width="1" height="15" fill="rgb(248,44,23)"/><text x="355.00" y="494.50"></text></g><g><title>0x7f91d49f4cfb (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="352" y="500" width="1" height="15" fill="rgb(246,227,52)"/><text x="355.00" y="510.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="353" y="116" width="1" height="15" fill="rgb(235,76,47)"/><text x="356.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.10%)</title><rect x="353" y="132" width="1" height="15" fill="rgb(246,51,10)"/><text x="356.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.10%)</title><rect x="353" y="148" width="1" height="15" fill="rgb(253,163,43)"/><text x="356.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.10%)</title><rect x="354" y="116" width="1" height="15" fill="rgb(205,87,14)"/><text x="357.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.10%)</title><rect x="354" y="132" width="1" height="15" fill="rgb(251,80,12)"/><text x="357.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.10%)</title><rect x="354" y="148" width="1" height="15" fill="rgb(225,12,15)"/><text x="357.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c:273) (1 samples, 0.10%)</title><rect x="354" y="164" width="1" height="15" fill="rgb(206,140,54)"/><text x="357.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (2 samples, 0.21%)</title><rect x="358" y="148" width="2" height="15" fill="rgb(241,219,3)"/><text x="361.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (4 samples, 0.41%)</title><rect x="360" y="148" width="5" height="15" fill="rgb(253,45,3)"/><text x="363.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:563) (1 samples, 0.10%)</title><rect x="368" y="164" width="1" height="15" fill="rgb(231,70,44)"/><text x="371.00" y="174.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.10%)</title><rect x="374" y="196" width="1" height="15" fill="rgb(237,16,25)"/><text x="377.00" y="206.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="379" y="260" width="1" height="15" fill="rgb(246,142,37)"/><text x="382.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="379" y="276" width="1" height="15" fill="rgb(222,89,4)"/><text x="382.00" y="286.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (5 samples, 0.51%)</title><rect x="375" y="196" width="6" height="15" fill="rgb(225,51,46)"/><text x="378.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (4 samples, 0.41%)</title><rect x="376" y="212" width="5" height="15" fill="rgb(223,222,13)"/><text x="379.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="377" y="228" width="4" height="15" fill="rgb(218,155,25)"/><text x="380.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="379" y="244" width="2" height="15" fill="rgb(253,36,16)"/><text x="382.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="380" y="260" width="1" height="15" fill="rgb(237,168,11)"/><text x="383.00" y="270.50"></text></g><g><title>0x7f91caaabff9 (?) (1 samples, 0.10%)</title><rect x="382" y="212" width="1" height="15" fill="rgb(208,16,15)"/><text x="385.00" y="222.50"></text></g><g><title>0x7f91caaa6ef6 (?) (1 samples, 0.10%)</title><rect x="382" y="228" width="1" height="15" fill="rgb(242,14,20)"/><text x="385.00" y="238.50"></text></g><g><title>0x7f91caa9b962 (?) (1 samples, 0.10%)</title><rect x="382" y="244" width="1" height="15" fill="rgb(206,154,7)"/><text x="385.00" y="254.50"></text></g><g><title>0x7f91caacf7a7 (?) (1 samples, 0.10%)</title><rect x="382" y="260" width="1" height="15" fill="rgb(209,2,0)"/><text x="385.00" y="270.50"></text></g><g><title>0x7f91caacf379 (?) (1 samples, 0.10%)</title><rect x="382" y="276" width="1" height="15" fill="rgb(216,220,42)"/><text x="385.00" y="286.50"></text></g><g><title>0x7f91caf2d8b8 (?) (1 samples, 0.10%)</title><rect x="382" y="292" width="1" height="15" fill="rgb(205,90,49)"/><text x="385.00" y="302.50"></text></g><g><title>0x7f91caf2bc7f (?) (1 samples, 0.10%)</title><rect x="382" y="308" width="1" height="15" fill="rgb(244,151,41)"/><text x="385.00" y="318.50"></text></g><g><title>0x7f91caf3e99c (?) (1 samples, 0.10%)</title><rect x="382" y="324" width="1" height="15" fill="rgb(235,135,6)"/><text x="385.00" y="334.50"></text></g><g><title>0x7f91cac662ab (?) (1 samples, 0.10%)</title><rect x="382" y="340" width="1" height="15" fill="rgb(254,70,39)"/><text x="385.00" y="350.50"></text></g><g><title>0x7f91caae03e6 (?) (1 samples, 0.10%)</title><rect x="382" y="356" width="1" height="15" fill="rgb(232,181,53)"/><text x="385.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="382" y="372" width="1" height="15" fill="rgb(219,56,5)"/><text x="385.00" y="382.50"></text></g><g><title>0x7f91fa4b9d50 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="382" y="388" width="1" height="15" fill="rgb(241,155,50)"/><text x="385.00" y="398.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="385" y="228" width="1" height="15" fill="rgb(218,73,33)"/><text x="388.00" y="238.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="388" y="260" width="1" height="15" fill="rgb(213,71,49)"/><text x="391.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="391" y="292" width="1" height="15" fill="rgb(223,76,43)"/><text x="394.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="391" y="308" width="1" height="15" fill="rgb(205,8,22)"/><text x="394.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="392" y="292" width="1" height="15" fill="rgb(205,227,39)"/><text x="395.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="392" y="308" width="1" height="15" fill="rgb(232,182,30)"/><text x="395.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="392" y="324" width="1" height="15" fill="rgb(236,12,11)"/><text x="395.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="392" y="340" width="1" height="15" fill="rgb(239,226,52)"/><text x="395.00" y="350.50"></text></g><g><title>0x7f91fa4ba7a0 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="393" y="308" width="1" height="15" fill="rgb(209,193,36)"/><text x="396.00" y="318.50"></text></g><g><title>0x7f920a9ed92f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="394" y="308" width="2" height="15" fill="rgb(229,46,25)"/><text x="397.00" y="318.50"></text></g><g><title>0x7f920a9edcf4 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="396" y="308" width="1" height="15" fill="rgb(207,115,1)"/><text x="399.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.41%)</title><rect x="393" y="292" width="5" height="15" fill="rgb(244,225,37)"/><text x="396.00" y="302.50"></text></g><g><title>0x7f920a9edd07 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="397" y="308" width="1" height="15" fill="rgb(239,170,10)"/><text x="400.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="398" y="292" width="1" height="15" fill="rgb(213,81,41)"/><text x="401.00" y="302.50"></text></g><g><title>0x7f920aacbcfe (libc-2.29.so) (1 samples, 0.10%)</title><rect x="398" y="308" width="1" height="15" fill="rgb(234,213,40)"/><text x="401.00" y="318.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="399" y="340" width="1" height="15" fill="rgb(219,162,25)"/><text x="402.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="400" y="340" width="2" height="15" fill="rgb(229,227,44)"/><text x="403.00" y="350.50"></text></g><g><title>0x7f920a9eda4c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="400" y="356" width="2" height="15" fill="rgb(216,29,34)"/><text x="403.00" y="366.50"></text></g><g><title>0x7f91caa72c40 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="506" y="356" width="2" height="15" fill="rgb(212,143,14)"/><text x="509.00" y="366.50"></text></g><g><title>0x7f91caa730f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="508" y="356" width="3" height="15" fill="rgb(227,81,35)"/><text x="511.00" y="366.50"></text></g><g><title>0x7f91fa4ba7a0 (libstdc++.so.6.0.28) (2 samples, 0.21%)</title><rect x="511" y="356" width="2" height="15" fill="rgb(209,109,39)"/><text x="514.00" y="366.50"></text></g><g><title>0x7f920a9ed906 (libc-2.29.so) (3 samples, 0.31%)</title><rect x="513" y="356" width="4" height="15" fill="rgb(207,33,29)"/><text x="516.00" y="366.50"></text></g><g><title>0x7f920a9ed917 (libc-2.29.so) (20 samples, 2.06%)</title><rect x="517" y="356" width="24" height="15" fill="rgb(246,179,15)"/><text x="520.00" y="366.50">0..</text></g><g><title>0x7f920a9ed91c (libc-2.29.so) (3 samples, 0.31%)</title><rect x="541" y="356" width="4" height="15" fill="rgb(205,170,0)"/><text x="544.00" y="366.50"></text></g><g><title>0x7f920a9ed929 (libc-2.29.so) (4 samples, 0.41%)</title><rect x="545" y="356" width="5" height="15" fill="rgb(244,86,5)"/><text x="548.00" y="366.50"></text></g><g><title>0x7f920a9ed93b (libc-2.29.so) (5 samples, 0.51%)</title><rect x="550" y="356" width="6" height="15" fill="rgb(253,189,31)"/><text x="553.00" y="366.50"></text></g><g><title>0x7f920a9ed95e (libc-2.29.so) (3 samples, 0.31%)</title><rect x="556" y="356" width="3" height="15" fill="rgb(250,61,49)"/><text x="559.00" y="366.50"></text></g><g><title>0x7f920a9ed961 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="559" y="356" width="2" height="15" fill="rgb(211,152,42)"/><text x="562.00" y="366.50"></text></g><g><title>0x7f920a9ed96a (libc-2.29.so) (1 samples, 0.10%)</title><rect x="561" y="356" width="1" height="15" fill="rgb(245,37,4)"/><text x="564.00" y="366.50"></text></g><g><title>0x7f920a9ed96e (libc-2.29.so) (1 samples, 0.10%)</title><rect x="562" y="356" width="1" height="15" fill="rgb(218,55,45)"/><text x="565.00" y="366.50"></text></g><g><title>0x7f920a9ed97e (libc-2.29.so) (3 samples, 0.31%)</title><rect x="563" y="356" width="4" height="15" fill="rgb(233,66,0)"/><text x="566.00" y="366.50"></text></g><g><title>0x7f920a9ed982 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="567" y="356" width="1" height="15" fill="rgb(234,39,42)"/><text x="570.00" y="366.50"></text></g><g><title>0x7f920a9ed991 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="568" y="356" width="2" height="15" fill="rgb(227,52,15)"/><text x="571.00" y="366.50"></text></g><g><title>0x7f920a9ed998 (libc-2.29.so) (4 samples, 0.41%)</title><rect x="570" y="356" width="5" height="15" fill="rgb(227,186,2)"/><text x="573.00" y="366.50"></text></g><g><title>0x7f920a9eda33 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="575" y="356" width="1" height="15" fill="rgb(208,53,8)"/><text x="578.00" y="366.50"></text></g><g><title>0x7f920a9eda38 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="576" y="356" width="2" height="15" fill="rgb(226,18,16)"/><text x="579.00" y="366.50"></text></g><g><title>0x7f920a9eda41 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="578" y="356" width="2" height="15" fill="rgb(245,159,9)"/><text x="581.00" y="366.50"></text></g><g><title>0x7f920a9eda47 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="580" y="356" width="3" height="15" fill="rgb(220,162,51)"/><text x="583.00" y="366.50"></text></g><g><title>0x7f920a9eda4b (libc-2.29.so) (1 samples, 0.10%)</title><rect x="583" y="356" width="1" height="15" fill="rgb(240,71,20)"/><text x="586.00" y="366.50"></text></g><g><title>0x7f920a9eda4f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="584" y="356" width="1" height="15" fill="rgb(248,84,14)"/><text x="587.00" y="366.50"></text></g><g><title>0x7f920a9eda51 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="585" y="356" width="1" height="15" fill="rgb(223,13,35)"/><text x="588.00" y="366.50"></text></g><g><title>0x7f920a9eda55 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="586" y="356" width="1" height="15" fill="rgb(212,160,17)"/><text x="589.00" y="366.50"></text></g><g><title>0x7f920a9edbc0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="587" y="356" width="2" height="15" fill="rgb(215,183,22)"/><text x="590.00" y="366.50"></text></g><g><title>0x7f920a9edbd1 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="589" y="356" width="1" height="15" fill="rgb(238,156,29)"/><text x="592.00" y="366.50"></text></g><g><title>0x7f920a9edbd8 (libc-2.29.so) (4 samples, 0.41%)</title><rect x="590" y="356" width="5" height="15" fill="rgb(216,124,51)"/><text x="593.00" y="366.50"></text></g><g><title>0x7f920a9edbe0 (libc-2.29.so) (3 samples, 0.31%)</title><rect x="595" y="356" width="3" height="15" fill="rgb(238,0,16)"/><text x="598.00" y="366.50"></text></g><g><title>0x7f920a9edbe4 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="598" y="356" width="2" height="15" fill="rgb(220,73,53)"/><text x="601.00" y="366.50"></text></g><g><title>0x7f920aa0e120 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="600" y="356" width="2" height="15" fill="rgb(233,165,45)"/><text x="603.00" y="366.50"></text></g><g><title>0x7f920aa0e12f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="602" y="356" width="1" height="15" fill="rgb(241,31,17)"/><text x="605.00" y="366.50"></text></g><g><title>0x7f920aa0e14a (libc-2.29.so) (1 samples, 0.10%)</title><rect x="603" y="356" width="1" height="15" fill="rgb(206,32,27)"/><text x="606.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (18 samples, 1.85%)</title><rect x="604" y="356" width="22" height="15" fill="rgb(236,208,18)"/><text x="607.00" y="366.50">f..</text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="629" y="500" width="1" height="15" fill="rgb(210,194,29)"/><text x="632.00" y="510.50"></text></g><g><title>0x7f920a9ed991 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="629" y="516" width="1" height="15" fill="rgb(213,47,7)"/><text x="632.00" y="526.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="627" y="420" width="4" height="15" fill="rgb(216,146,7)"/><text x="630.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="627" y="436" width="4" height="15" fill="rgb(222,190,50)"/><text x="630.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="627" y="452" width="4" height="15" fill="rgb(230,214,39)"/><text x="630.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="627" y="468" width="4" height="15" fill="rgb(207,108,54)"/><text x="630.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="627" y="484" width="4" height="15" fill="rgb(249,218,43)"/><text x="630.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="630" y="500" width="1" height="15" fill="rgb(234,179,26)"/><text x="633.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="630" y="516" width="1" height="15" fill="rgb(208,115,32)"/><text x="633.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="630" y="532" width="1" height="15" fill="rgb(246,34,35)"/><text x="633.00" y="542.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.51%)</title><rect x="626" y="356" width="6" height="15" fill="rgb(249,53,42)"/><text x="629.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.51%)</title><rect x="626" y="372" width="6" height="15" fill="rgb(253,175,46)"/><text x="629.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.51%)</title><rect x="626" y="388" width="6" height="15" fill="rgb(221,34,26)"/><text x="629.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.51%)</title><rect x="626" y="404" width="6" height="15" fill="rgb(207,165,53)"/><text x="629.00" y="414.50"></text></g><g><title>onnxruntime::TensorType&lt;float&gt;::GetElementType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="631" y="420" width="1" height="15" fill="rgb(209,21,4)"/><text x="634.00" y="430.50"></text></g><g><title>0x7f91caa72930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="876" y="388" width="2" height="15" fill="rgb(207,108,53)"/><text x="879.00" y="398.50"></text></g><g><title>0x7f91fa4b9d50 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="884" y="404" width="1" height="15" fill="rgb(246,222,8)"/><text x="887.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (21 samples, 2.16%)</title><rect x="878" y="388" width="25" height="15" fill="rgb(220,8,29)"/><text x="881.00" y="398.50">o..</text></g><g><title>malloc (libc-2.29.so) (15 samples, 1.54%)</title><rect x="885" y="404" width="18" height="15" fill="rgb(241,19,37)"/><text x="888.00" y="414.50"></text></g><g><title>0x7f920aa0e12f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="942" y="420" width="1" height="15" fill="rgb(251,78,27)"/><text x="945.00" y="430.50"></text></g><g><title>0x7f920aa0e14a (libc-2.29.so) (1 samples, 0.10%)</title><rect x="943" y="420" width="1" height="15" fill="rgb(212,95,9)"/><text x="946.00" y="430.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 2.67%)</title><rect x="928" y="404" width="32" height="15" fill="rgb(231,88,42)"/><text x="931.00" y="414.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (13 samples, 1.34%)</title><rect x="944" y="420" width="16" height="15" fill="rgb(225,120,46)"/><text x="947.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (10 samples, 1.03%)</title><rect x="948" y="436" width="12" height="15" fill="rgb(241,127,51)"/><text x="951.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (358 samples, 36.83%)</title><rect x="632" y="356" width="435" height="15" fill="rgb(251,200,16)"/><text x="635.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeN..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (174 samples, 17.90%)</title><rect x="856" y="372" width="211" height="15" fill="rgb(231,48,22)"/><text x="859.00" y="382.50">std::_Hashtable&lt;long, std::..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (135 samples, 13.89%)</title><rect x="903" y="388" width="164" height="15" fill="rgb(254,87,16)"/><text x="906.00" y="398.50">std::_Hashtable&lt;long,..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (88 samples, 9.05%)</title><rect x="960" y="404" width="107" height="15" fill="rgb(232,169,35)"/><text x="963.00" y="414.50">std::__detail..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (44 samples, 4.53%)</title><rect x="1013" y="420" width="54" height="15" fill="rgb(226,97,42)"/><text x="1016.00" y="430.50">std::..</text></g><g><title>0x7f91caa72850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="1085" y="372" width="3" height="15" fill="rgb(232,212,31)"/><text x="1088.00" y="382.50"></text></g><g><title>0x7f920aa0dd50 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="1088" y="372" width="2" height="15" fill="rgb(228,32,10)"/><text x="1091.00" y="382.50"></text></g><g><title>0x7f920aa0ddc3 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="1090" y="372" width="2" height="15" fill="rgb(214,145,16)"/><text x="1093.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 2.26%)</title><rect x="1067" y="356" width="27" height="15" fill="rgb(242,69,35)"/><text x="1070.00" y="366.50">o..</text></g><g><title>0x7f920aa0ddcb (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1092" y="372" width="2" height="15" fill="rgb(205,155,27)"/><text x="1095.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (4 samples, 0.41%)</title><rect x="1094" y="356" width="4" height="15" fill="rgb(232,227,52)"/><text x="1097.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 2.98%)</title><rect x="1098" y="356" width="36" height="15" fill="rgb(229,1,21)"/><text x="1101.00" y="366.50">std..</text></g><g><title>0x7f91fa4b9d50 (libstdc++.so.6.0.28) (2 samples, 0.21%)</title><rect x="1156" y="388" width="2" height="15" fill="rgb(215,79,35)"/><text x="1159.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (643 samples, 66.15%)</title><rect x="389" y="260" width="781" height="15" fill="rgb(212,147,38)"/><text x="392.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (643 samples, 66.15%)</title><rect x="389" y="276" width="781" height="15" fill="rgb(251,73,47)"/><text x="392.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (635 samples, 65.33%)</title><rect x="399" y="292" width="771" height="15" fill="rgb(242,92,20)"/><text x="402.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (635 samples, 65.33%)</title><rect x="399" y="308" width="771" height="15" fill="rgb(210,166,53)"/><text x="402.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (635 samples, 65.33%)</title><rect x="399" y="324" width="771" height="15" fill="rgb(247,152,47)"/><text x="402.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (633 samples, 65.12%)</title><rect x="402" y="340" width="768" height="15" fill="rgb(234,15,32)"/><text x="405.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 3.09%)</title><rect x="1134" y="356" width="36" height="15" fill="rgb(230,100,23)"/><text x="1137.00" y="366.50">std..</text></g><g><title>operator new (libstdc++.so.6.0.28) (16 samples, 1.65%)</title><rect x="1151" y="372" width="19" height="15" fill="rgb(205,205,23)"/><text x="1154.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (10 samples, 1.03%)</title><rect x="1158" y="388" width="12" height="15" fill="rgb(221,211,30)"/><text x="1161.00" y="398.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="1170" y="260" width="3" height="15" fill="rgb(216,64,15)"/><text x="1173.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1171" y="276" width="2" height="15" fill="rgb(232,78,40)"/><text x="1174.00" y="286.50"></text></g><g><title>0x7f920aa0dd94 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1173" y="276" width="1" height="15" fill="rgb(238,97,9)"/><text x="1176.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.10%)</title><rect x="1174" y="292" width="1" height="15" fill="rgb(236,83,4)"/><text x="1177.00" y="302.50"></text></g><g><title>_array_fill_strides (ctors.c:4131) (1 samples, 0.10%)</title><rect x="1174" y="308" width="1" height="15" fill="rgb(220,190,12)"/><text x="1177.00" y="318.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.21%)</title><rect x="1174" y="276" width="2" height="15" fill="rgb(222,33,26)"/><text x="1177.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.10%)</title><rect x="1175" y="292" width="1" height="15" fill="rgb(217,70,50)"/><text x="1178.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.10%)</title><rect x="1175" y="308" width="1" height="15" fill="rgb(226,74,47)"/><text x="1178.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.10%)</title><rect x="1175" y="324" width="1" height="15" fill="rgb(235,14,29)"/><text x="1178.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.10%)</title><rect x="1175" y="340" width="1" height="15" fill="rgb(250,41,44)"/><text x="1178.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1175" y="356" width="1" height="15" fill="rgb(208,153,8)"/><text x="1178.00" y="366.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.41%)</title><rect x="1173" y="260" width="4" height="15" fill="rgb(244,149,33)"/><text x="1176.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1176" y="276" width="1" height="15" fill="rgb(227,25,46)"/><text x="1179.00" y="286.50"></text></g><g><title>0x7f920aa0ddb3 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1176" y="292" width="1" height="15" fill="rgb(230,130,27)"/><text x="1179.00" y="302.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="1177" y="260" width="2" height="15" fill="rgb(253,44,34)"/><text x="1180.00" y="270.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1179" y="356" width="1" height="15" fill="rgb(213,5,24)"/><text x="1182.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1179" y="372" width="1" height="15" fill="rgb(213,27,48)"/><text x="1182.00" y="382.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (653 samples, 67.18%)</title><rect x="388" y="244" width="793" height="15" fill="rgb(206,15,17)"/><text x="391.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="1179" y="260" width="2" height="15" fill="rgb(222,99,5)"/><text x="1182.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="1179" y="276" width="2" height="15" fill="rgb(212,122,42)"/><text x="1182.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="1179" y="292" width="2" height="15" fill="rgb(254,106,24)"/><text x="1182.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="1179" y="308" width="2" height="15" fill="rgb(242,60,16)"/><text x="1182.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="1179" y="324" width="2" height="15" fill="rgb(228,181,30)"/><text x="1182.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="1179" y="340" width="2" height="15" fill="rgb(213,20,0)"/><text x="1182.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1180" y="356" width="1" height="15" fill="rgb(205,158,24)"/><text x="1183.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1180" y="372" width="1" height="15" fill="rgb(209,96,32)"/><text x="1183.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1180" y="388" width="1" height="15" fill="rgb(232,211,20)"/><text x="1183.00" y="398.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (671 samples, 69.03%)</title><rect x="369" y="164" width="814" height="15" fill="rgb(231,104,6)"/><text x="372.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (668 samples, 68.72%)</title><rect x="372" y="180" width="811" height="15" fill="rgb(227,125,28)"/><text x="375.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (661 samples, 68.00%)</title><rect x="381" y="196" width="802" height="15" fill="rgb(206,50,37)"/><text x="384.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (659 samples, 67.80%)</title><rect x="383" y="212" width="800" height="15" fill="rgb(254,178,11)"/><text x="386.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (657 samples, 67.59%)</title><rect x="386" y="228" width="797" height="15" fill="rgb(243,214,15)"/><text x="389.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnx..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="1181" y="244" width="2" height="15" fill="rgb(206,146,48)"/><text x="1184.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="1181" y="260" width="2" height="15" fill="rgb(214,128,42)"/><text x="1184.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1182" y="276" width="1" height="15" fill="rgb(220,70,5)"/><text x="1185.00" y="286.50"></text></g><g><title>0x7f920aa0dd50 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1182" y="292" width="1" height="15" fill="rgb(209,183,13)"/><text x="1185.00" y="302.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (684 samples, 70.37%)</title><rect x="358" y="132" width="830" height="15" fill="rgb(237,191,29)"/><text x="361.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (678 samples, 69.75%)</title><rect x="365" y="148" width="823" height="15" fill="rgb(219,79,11)"/><text x="368.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (4 samples, 0.41%)</title><rect x="1183" y="164" width="5" height="15" fill="rgb(220,148,46)"/><text x="1186.00" y="174.50"></text></g><g><title>all (972 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(216,33,34)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:68) (689 samples, 70.88%)</title><rect x="353" y="52" width="837" height="15" fill="rgb(251,102,8)"/><text x="356.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:68)</text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:67) (689 samples, 70.88%)</title><rect x="353" y="68" width="837" height="15" fill="rgb(232,90,16)"/><text x="356.00" y="78.50">profile_ort (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:67)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:37) (689 samples, 70.88%)</title><rect x="353" y="84" width="837" height="15" fill="rgb(252,164,41)"/><text x="356.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:37)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:31) (689 samples, 70.88%)</title><rect x="353" y="100" width="837" height="15" fill="rgb(226,167,40)"/><text x="356.00" y="110.50">profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (687 samples, 70.68%)</title><rect x="355" y="116" width="835" height="15" fill="rgb(240,132,37)"/><text x="358.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.10%)</title><rect x="1188" y="132" width="2" height="15" fill="rgb(249,108,42)"/><text x="1191.00" y="142.50"></text></g></g></svg>