<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1958" onload="init(evt)" viewBox="0 0 1200 1958" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1958" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1941.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1941.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (4 samples, 0.76%)</title><rect x="10" y="868" width="8" height="15" fill="rgb(235,224,35)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (4 samples, 0.76%)</title><rect x="10" y="884" width="8" height="15" fill="rgb(223,191,30)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (3 samples, 0.57%)</title><rect x="12" y="900" width="6" height="15" fill="rgb(237,90,18)"/><text x="15.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (3 samples, 0.57%)</title><rect x="12" y="916" width="6" height="15" fill="rgb(222,225,53)"/><text x="15.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.57%)</title><rect x="12" y="932" width="6" height="15" fill="rgb(234,43,6)"/><text x="15.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="14" y="948" width="4" height="15" fill="rgb(246,0,41)"/><text x="17.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="14" y="964" width="4" height="15" fill="rgb(217,47,6)"/><text x="17.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="16" y="980" width="2" height="15" fill="rgb(220,119,35)"/><text x="19.00" y="990.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="18" y="916" width="3" height="15" fill="rgb(213,85,54)"/><text x="21.00" y="926.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.38%)</title><rect x="18" y="868" width="5" height="15" fill="rgb(217,7,52)"/><text x="21.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.38%)</title><rect x="18" y="884" width="5" height="15" fill="rgb(246,166,3)"/><text x="21.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.38%)</title><rect x="18" y="900" width="5" height="15" fill="rgb(225,198,0)"/><text x="21.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="21" y="916" width="2" height="15" fill="rgb(223,20,22)"/><text x="24.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="21" y="932" width="2" height="15" fill="rgb(208,195,32)"/><text x="24.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.19%)</title><rect x="21" y="948" width="2" height="15" fill="rgb(233,142,40)"/><text x="24.00" y="958.50"></text></g><g><title>0x7f604ca26eb9 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="21" y="964" width="2" height="15" fill="rgb(241,52,12)"/><text x="24.00" y="974.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.38%)</title><rect x="23" y="900" width="4" height="15" fill="rgb(233,39,54)"/><text x="26.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.38%)</title><rect x="23" y="916" width="4" height="15" fill="rgb(237,192,23)"/><text x="26.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.38%)</title><rect x="23" y="932" width="4" height="15" fill="rgb(207,226,47)"/><text x="26.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.38%)</title><rect x="23" y="948" width="4" height="15" fill="rgb(252,42,36)"/><text x="26.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.38%)</title><rect x="23" y="964" width="4" height="15" fill="rgb(205,46,53)"/><text x="26.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.19%)</title><rect x="25" y="980" width="2" height="15" fill="rgb(230,55,50)"/><text x="28.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.19%)</title><rect x="25" y="996" width="2" height="15" fill="rgb(242,48,0)"/><text x="28.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.19%)</title><rect x="25" y="1012" width="2" height="15" fill="rgb(239,61,13)"/><text x="28.00" y="1022.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.38%)</title><rect x="27" y="916" width="5" height="15" fill="rgb(212,35,32)"/><text x="30.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="30" y="932" width="2" height="15" fill="rgb(224,143,4)"/><text x="33.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="30" y="948" width="2" height="15" fill="rgb(237,176,45)"/><text x="33.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.19%)</title><rect x="30" y="964" width="2" height="15" fill="rgb(209,139,21)"/><text x="33.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.19%)</title><rect x="30" y="980" width="2" height="15" fill="rgb(251,36,0)"/><text x="33.00" y="990.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (11 samples, 2.10%)</title><rect x="10" y="836" width="24" height="15" fill="rgb(207,223,44)"/><text x="13.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (11 samples, 2.10%)</title><rect x="10" y="852" width="24" height="15" fill="rgb(250,202,15)"/><text x="13.00" y="862.50">_..</text></g><g><title>add_entry (pkg_resources/__init__.py) (5 samples, 0.95%)</title><rect x="23" y="868" width="11" height="15" fill="rgb(213,101,30)"/><text x="26.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (5 samples, 0.95%)</title><rect x="23" y="884" width="11" height="15" fill="rgb(248,158,4)"/><text x="26.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (3 samples, 0.57%)</title><rect x="27" y="900" width="7" height="15" fill="rgb(232,196,53)"/><text x="30.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.19%)</title><rect x="32" y="916" width="2" height="15" fill="rgb(253,114,4)"/><text x="35.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="32" y="932" width="2" height="15" fill="rgb(220,11,44)"/><text x="35.00" y="942.50"></text></g><g><title>0x7f604ca50237 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="32" y="948" width="2" height="15" fill="rgb(242,207,38)"/><text x="35.00" y="958.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (12 samples, 2.29%)</title><rect x="10" y="292" width="26" height="15" fill="rgb(247,160,35)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="308" width="26" height="15" fill="rgb(236,115,6)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="324" width="26" height="15" fill="rgb(222,99,31)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="340" width="26" height="15" fill="rgb(224,141,54)"/><text x="13.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.29%)</title><rect x="10" y="356" width="26" height="15" fill="rgb(223,82,20)"/><text x="13.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="372" width="26" height="15" fill="rgb(243,41,33)"/><text x="13.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (12 samples, 2.29%)</title><rect x="10" y="388" width="26" height="15" fill="rgb(246,32,43)"/><text x="13.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="404" width="26" height="15" fill="rgb(247,157,36)"/><text x="13.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="420" width="26" height="15" fill="rgb(244,79,38)"/><text x="13.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="436" width="26" height="15" fill="rgb(229,158,1)"/><text x="13.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.29%)</title><rect x="10" y="452" width="26" height="15" fill="rgb(221,113,36)"/><text x="13.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="468" width="26" height="15" fill="rgb(227,222,34)"/><text x="13.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (12 samples, 2.29%)</title><rect x="10" y="484" width="26" height="15" fill="rgb(218,131,0)"/><text x="13.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="500" width="26" height="15" fill="rgb(234,224,41)"/><text x="13.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="516" width="26" height="15" fill="rgb(224,169,13)"/><text x="13.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="532" width="26" height="15" fill="rgb(220,144,34)"/><text x="13.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.29%)</title><rect x="10" y="548" width="26" height="15" fill="rgb(231,42,7)"/><text x="13.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="564" width="26" height="15" fill="rgb(251,117,36)"/><text x="13.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (12 samples, 2.29%)</title><rect x="10" y="580" width="26" height="15" fill="rgb(252,211,13)"/><text x="13.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="596" width="26" height="15" fill="rgb(250,74,39)"/><text x="13.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="612" width="26" height="15" fill="rgb(238,165,16)"/><text x="13.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="628" width="26" height="15" fill="rgb(233,122,15)"/><text x="13.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="644" width="26" height="15" fill="rgb(205,74,34)"/><text x="13.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="660" width="26" height="15" fill="rgb(251,209,15)"/><text x="13.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="676" width="26" height="15" fill="rgb(238,148,24)"/><text x="13.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.29%)</title><rect x="10" y="692" width="26" height="15" fill="rgb(206,15,12)"/><text x="13.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="708" width="26" height="15" fill="rgb(249,186,24)"/><text x="13.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (12 samples, 2.29%)</title><rect x="10" y="724" width="26" height="15" fill="rgb(232,103,7)"/><text x="13.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="740" width="26" height="15" fill="rgb(222,208,5)"/><text x="13.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="756" width="26" height="15" fill="rgb(247,159,18)"/><text x="13.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="772" width="26" height="15" fill="rgb(218,80,42)"/><text x="13.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.29%)</title><rect x="10" y="788" width="26" height="15" fill="rgb(222,164,1)"/><text x="13.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.29%)</title><rect x="10" y="804" width="26" height="15" fill="rgb(215,61,21)"/><text x="13.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (12 samples, 2.29%)</title><rect x="10" y="820" width="26" height="15" fill="rgb(247,5,50)"/><text x="13.00" y="830.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="836" width="2" height="15" fill="rgb(240,21,53)"/><text x="37.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="852" width="2" height="15" fill="rgb(235,63,7)"/><text x="37.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="868" width="2" height="15" fill="rgb(220,175,31)"/><text x="37.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="34" y="884" width="2" height="15" fill="rgb(209,225,20)"/><text x="37.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="900" width="2" height="15" fill="rgb(243,47,13)"/><text x="37.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.19%)</title><rect x="34" y="916" width="2" height="15" fill="rgb(205,20,40)"/><text x="37.00" y="926.50"></text></g><g><title>__add__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.19%)</title><rect x="34" y="932" width="2" height="15" fill="rgb(241,49,14)"/><text x="37.00" y="942.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.19%)</title><rect x="34" y="948" width="2" height="15" fill="rgb(240,145,26)"/><text x="37.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.19%)</title><rect x="34" y="964" width="2" height="15" fill="rgb(209,188,46)"/><text x="37.00" y="974.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.19%)</title><rect x="34" y="980" width="2" height="15" fill="rgb(214,64,32)"/><text x="37.00" y="990.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="34" y="996" width="2" height="15" fill="rgb(249,30,30)"/><text x="37.00" y="1006.50"></text></g><g><title>0x7f604ca12774 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="34" y="1012" width="2" height="15" fill="rgb(234,90,8)"/><text x="37.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py) (1 samples, 0.19%)</title><rect x="36" y="580" width="3" height="15" fill="rgb(226,80,52)"/><text x="39.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="596" width="3" height="15" fill="rgb(226,68,40)"/><text x="39.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="612" width="3" height="15" fill="rgb(220,227,21)"/><text x="39.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="628" width="3" height="15" fill="rgb(243,13,28)"/><text x="39.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="644" width="3" height="15" fill="rgb(227,193,21)"/><text x="39.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="660" width="3" height="15" fill="rgb(217,146,6)"/><text x="39.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="36" y="676" width="3" height="15" fill="rgb(230,220,33)"/><text x="39.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="692" width="3" height="15" fill="rgb(216,60,52)"/><text x="39.00" y="702.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csgraph/__init__.py) (1 samples, 0.19%)</title><rect x="36" y="708" width="3" height="15" fill="rgb(253,6,8)"/><text x="39.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="724" width="3" height="15" fill="rgb(235,165,35)"/><text x="39.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="740" width="3" height="15" fill="rgb(210,219,44)"/><text x="39.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="756" width="3" height="15" fill="rgb(236,145,41)"/><text x="39.00" y="766.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="772" width="3" height="15" fill="rgb(233,39,16)"/><text x="39.00" y="782.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="36" y="788" width="3" height="15" fill="rgb(247,124,23)"/><text x="39.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="804" width="3" height="15" fill="rgb(233,122,26)"/><text x="39.00" y="814.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="36" y="820" width="3" height="15" fill="rgb(251,212,52)"/><text x="39.00" y="830.50"></text></g><g><title>0x7f604cc98995 (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="36" y="836" width="3" height="15" fill="rgb(226,127,4)"/><text x="39.00" y="846.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.19%)</title><rect x="36" y="852" width="3" height="15" fill="rgb(222,197,9)"/><text x="39.00" y="862.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.19%)</title><rect x="36" y="868" width="3" height="15" fill="rgb(252,215,25)"/><text x="39.00" y="878.50"></text></g><g><title>0x7f604cc98258 (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="36" y="884" width="3" height="15" fill="rgb(215,129,10)"/><text x="39.00" y="894.50"></text></g><g><title>0x7f604cce5d7a (ld-2.29.so) (1 samples, 0.19%)</title><rect x="36" y="900" width="3" height="15" fill="rgb(237,10,29)"/><text x="39.00" y="910.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.19%)</title><rect x="36" y="916" width="3" height="15" fill="rgb(214,184,4)"/><text x="39.00" y="926.50"></text></g><g><title>0x7f604cce6345 (ld-2.29.so) (1 samples, 0.19%)</title><rect x="36" y="932" width="3" height="15" fill="rgb(210,194,27)"/><text x="39.00" y="942.50"></text></g><g><title>0x7f604ccdf3d4 (ld-2.29.so) (1 samples, 0.19%)</title><rect x="36" y="948" width="3" height="15" fill="rgb(233,130,22)"/><text x="39.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="916" width="2" height="15" fill="rgb(219,110,54)"/><text x="42.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="932" width="2" height="15" fill="rgb(242,134,52)"/><text x="42.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="948" width="2" height="15" fill="rgb(248,40,0)"/><text x="42.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="39" y="964" width="2" height="15" fill="rgb(208,66,14)"/><text x="42.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="980" width="2" height="15" fill="rgb(239,213,32)"/><text x="42.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.19%)</title><rect x="39" y="996" width="2" height="15" fill="rgb(243,6,33)"/><text x="42.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1012" width="2" height="15" fill="rgb(211,22,25)"/><text x="42.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1028" width="2" height="15" fill="rgb(236,103,43)"/><text x="42.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1044" width="2" height="15" fill="rgb(241,217,46)"/><text x="42.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="39" y="1060" width="2" height="15" fill="rgb(245,191,7)"/><text x="42.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1076" width="2" height="15" fill="rgb(230,111,41)"/><text x="42.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/misc/__init__.py) (1 samples, 0.19%)</title><rect x="39" y="1092" width="2" height="15" fill="rgb(218,104,11)"/><text x="42.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1108" width="2" height="15" fill="rgb(223,210,33)"/><text x="42.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1124" width="2" height="15" fill="rgb(243,94,40)"/><text x="42.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1140" width="2" height="15" fill="rgb(254,190,36)"/><text x="42.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1156" width="2" height="15" fill="rgb(249,226,0)"/><text x="42.00" y="1166.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1172" width="2" height="15" fill="rgb(241,214,26)"/><text x="42.00" y="1182.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="39" y="1188" width="2" height="15" fill="rgb(209,217,2)"/><text x="42.00" y="1198.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="39" y="1204" width="2" height="15" fill="rgb(217,120,46)"/><text x="42.00" y="1214.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="39" y="1220" width="2" height="15" fill="rgb(223,91,54)"/><text x="42.00" y="1230.50"></text></g><g><title>_fill_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="39" y="1236" width="2" height="15" fill="rgb(218,73,22)"/><text x="42.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.86%)</title><rect x="10" y="196" width="33" height="15" fill="rgb(220,98,33)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.86%)</title><rect x="10" y="212" width="33" height="15" fill="rgb(252,4,28)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.86%)</title><rect x="10" y="228" width="33" height="15" fill="rgb(205,157,10)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.86%)</title><rect x="10" y="244" width="33" height="15" fill="rgb(228,15,38)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 2.86%)</title><rect x="10" y="260" width="33" height="15" fill="rgb(207,37,6)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.86%)</title><rect x="10" y="276" width="33" height="15" fill="rgb(254,68,15)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.57%)</title><rect x="36" y="292" width="7" height="15" fill="rgb(210,168,31)"/><text x="39.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.57%)</title><rect x="36" y="308" width="7" height="15" fill="rgb(252,178,48)"/><text x="39.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.57%)</title><rect x="36" y="324" width="7" height="15" fill="rgb(208,30,29)"/><text x="39.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.57%)</title><rect x="36" y="340" width="7" height="15" fill="rgb(222,118,43)"/><text x="39.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.57%)</title><rect x="36" y="356" width="7" height="15" fill="rgb(212,158,1)"/><text x="39.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.57%)</title><rect x="36" y="372" width="7" height="15" fill="rgb(232,179,43)"/><text x="39.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.57%)</title><rect x="36" y="388" width="7" height="15" fill="rgb(248,211,47)"/><text x="39.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.57%)</title><rect x="36" y="404" width="7" height="15" fill="rgb(228,24,1)"/><text x="39.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.57%)</title><rect x="36" y="420" width="7" height="15" fill="rgb(219,65,48)"/><text x="39.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.57%)</title><rect x="36" y="436" width="7" height="15" fill="rgb(219,136,21)"/><text x="39.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.57%)</title><rect x="36" y="452" width="7" height="15" fill="rgb(217,115,15)"/><text x="39.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.57%)</title><rect x="36" y="468" width="7" height="15" fill="rgb(217,53,40)"/><text x="39.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.57%)</title><rect x="36" y="484" width="7" height="15" fill="rgb(229,210,22)"/><text x="39.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.57%)</title><rect x="36" y="500" width="7" height="15" fill="rgb(205,201,44)"/><text x="39.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.57%)</title><rect x="36" y="516" width="7" height="15" fill="rgb(240,218,54)"/><text x="39.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.57%)</title><rect x="36" y="532" width="7" height="15" fill="rgb(216,6,43)"/><text x="39.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.57%)</title><rect x="36" y="548" width="7" height="15" fill="rgb(222,37,16)"/><text x="39.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.57%)</title><rect x="36" y="564" width="7" height="15" fill="rgb(248,172,35)"/><text x="39.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.38%)</title><rect x="39" y="580" width="4" height="15" fill="rgb(233,65,48)"/><text x="42.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="39" y="596" width="4" height="15" fill="rgb(225,125,42)"/><text x="42.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="39" y="612" width="4" height="15" fill="rgb(253,63,12)"/><text x="42.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="39" y="628" width="4" height="15" fill="rgb(253,136,44)"/><text x="42.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="39" y="644" width="4" height="15" fill="rgb(245,39,32)"/><text x="42.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="39" y="660" width="4" height="15" fill="rgb(246,141,49)"/><text x="42.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.38%)</title><rect x="39" y="676" width="4" height="15" fill="rgb(226,21,49)"/><text x="42.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="39" y="692" width="4" height="15" fill="rgb(215,9,7)"/><text x="42.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="39" y="708" width="4" height="15" fill="rgb(232,166,36)"/><text x="42.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="39" y="724" width="4" height="15" fill="rgb(216,48,47)"/><text x="42.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="39" y="740" width="4" height="15" fill="rgb(237,113,41)"/><text x="42.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="39" y="756" width="4" height="15" fill="rgb(233,38,49)"/><text x="42.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.38%)</title><rect x="39" y="772" width="4" height="15" fill="rgb(215,126,2)"/><text x="42.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="39" y="788" width="4" height="15" fill="rgb(249,4,10)"/><text x="42.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="39" y="804" width="4" height="15" fill="rgb(242,96,30)"/><text x="42.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="39" y="820" width="4" height="15" fill="rgb(250,27,21)"/><text x="42.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="39" y="836" width="4" height="15" fill="rgb(238,93,36)"/><text x="42.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="39" y="852" width="4" height="15" fill="rgb(233,33,21)"/><text x="42.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="39" y="868" width="4" height="15" fill="rgb(232,217,8)"/><text x="42.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="39" y="884" width="4" height="15" fill="rgb(230,55,29)"/><text x="42.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.38%)</title><rect x="39" y="900" width="4" height="15" fill="rgb(226,210,17)"/><text x="42.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="916" width="2" height="15" fill="rgb(213,113,2)"/><text x="44.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="932" width="2" height="15" fill="rgb(224,150,13)"/><text x="44.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="948" width="2" height="15" fill="rgb(244,65,47)"/><text x="44.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="964" width="2" height="15" fill="rgb(205,2,39)"/><text x="44.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="980" width="2" height="15" fill="rgb(209,33,18)"/><text x="44.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="996" width="2" height="15" fill="rgb(205,54,25)"/><text x="44.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1012" width="2" height="15" fill="rgb(243,106,13)"/><text x="44.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.19%)</title><rect x="41" y="1028" width="2" height="15" fill="rgb(242,166,28)"/><text x="44.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.19%)</title><rect x="41" y="1044" width="2" height="15" fill="rgb(229,112,15)"/><text x="44.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.19%)</title><rect x="41" y="1060" width="2" height="15" fill="rgb(206,100,53)"/><text x="44.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.19%)</title><rect x="41" y="1076" width="2" height="15" fill="rgb(229,116,40)"/><text x="44.00" y="1086.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (1 samples, 0.19%)</title><rect x="43" y="436" width="2" height="15" fill="rgb(222,101,49)"/><text x="46.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="452" width="2" height="15" fill="rgb(235,62,29)"/><text x="46.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="468" width="2" height="15" fill="rgb(237,23,31)"/><text x="46.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="484" width="2" height="15" fill="rgb(245,39,0)"/><text x="46.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="500" width="2" height="15" fill="rgb(228,52,40)"/><text x="46.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="516" width="2" height="15" fill="rgb(238,27,32)"/><text x="46.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="532" width="2" height="15" fill="rgb(254,97,4)"/><text x="46.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="548" width="2" height="15" fill="rgb(223,133,49)"/><text x="46.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="564" width="2" height="15" fill="rgb(241,29,4)"/><text x="46.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.19%)</title><rect x="43" y="580" width="2" height="15" fill="rgb(219,70,35)"/><text x="46.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="596" width="2" height="15" fill="rgb(220,144,44)"/><text x="46.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="612" width="2" height="15" fill="rgb(217,109,35)"/><text x="46.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="628" width="2" height="15" fill="rgb(235,214,18)"/><text x="46.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="644" width="2" height="15" fill="rgb(230,109,35)"/><text x="46.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="660" width="2" height="15" fill="rgb(249,109,26)"/><text x="46.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.19%)</title><rect x="43" y="676" width="2" height="15" fill="rgb(211,0,23)"/><text x="46.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="692" width="2" height="15" fill="rgb(239,223,14)"/><text x="46.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="708" width="2" height="15" fill="rgb(223,37,27)"/><text x="46.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="724" width="2" height="15" fill="rgb(234,147,50)"/><text x="46.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="740" width="2" height="15" fill="rgb(253,20,6)"/><text x="46.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="756" width="2" height="15" fill="rgb(236,10,36)"/><text x="46.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.19%)</title><rect x="43" y="772" width="2" height="15" fill="rgb(232,68,23)"/><text x="46.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="788" width="2" height="15" fill="rgb(234,15,48)"/><text x="46.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="804" width="2" height="15" fill="rgb(242,186,29)"/><text x="46.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="820" width="2" height="15" fill="rgb(221,7,41)"/><text x="46.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="836" width="2" height="15" fill="rgb(238,35,13)"/><text x="46.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="852" width="2" height="15" fill="rgb(210,169,49)"/><text x="46.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.19%)</title><rect x="43" y="868" width="2" height="15" fill="rgb(244,146,9)"/><text x="46.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="884" width="2" height="15" fill="rgb(209,180,12)"/><text x="46.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="900" width="2" height="15" fill="rgb(207,117,14)"/><text x="46.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="916" width="2" height="15" fill="rgb(251,134,11)"/><text x="46.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="932" width="2" height="15" fill="rgb(250,5,25)"/><text x="46.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="948" width="2" height="15" fill="rgb(243,128,18)"/><text x="46.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="964" width="2" height="15" fill="rgb(206,12,19)"/><text x="46.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="980" width="2" height="15" fill="rgb(241,62,36)"/><text x="46.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="996" width="2" height="15" fill="rgb(211,84,23)"/><text x="46.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.19%)</title><rect x="43" y="1012" width="2" height="15" fill="rgb(210,2,27)"/><text x="46.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1028" width="2" height="15" fill="rgb(253,37,10)"/><text x="46.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1044" width="2" height="15" fill="rgb(230,79,1)"/><text x="46.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1060" width="2" height="15" fill="rgb(224,201,16)"/><text x="46.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="1076" width="2" height="15" fill="rgb(211,88,33)"/><text x="46.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1092" width="2" height="15" fill="rgb(244,94,37)"/><text x="46.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.19%)</title><rect x="43" y="1108" width="2" height="15" fill="rgb(224,150,0)"/><text x="46.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1124" width="2" height="15" fill="rgb(237,72,37)"/><text x="46.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1140" width="2" height="15" fill="rgb(229,153,35)"/><text x="46.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1156" width="2" height="15" fill="rgb(236,99,13)"/><text x="46.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1172" width="2" height="15" fill="rgb(217,197,43)"/><text x="46.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1188" width="2" height="15" fill="rgb(220,33,8)"/><text x="46.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="1204" width="2" height="15" fill="rgb(216,24,21)"/><text x="46.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1220" width="2" height="15" fill="rgb(230,27,49)"/><text x="46.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.19%)</title><rect x="43" y="1236" width="2" height="15" fill="rgb(251,68,52)"/><text x="46.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1252" width="2" height="15" fill="rgb(214,209,21)"/><text x="46.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1268" width="2" height="15" fill="rgb(206,228,40)"/><text x="46.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1284" width="2" height="15" fill="rgb(212,167,41)"/><text x="46.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1300" width="2" height="15" fill="rgb(209,118,43)"/><text x="46.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1316" width="2" height="15" fill="rgb(231,25,4)"/><text x="46.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="1332" width="2" height="15" fill="rgb(221,107,3)"/><text x="46.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1348" width="2" height="15" fill="rgb(227,142,54)"/><text x="46.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.19%)</title><rect x="43" y="1364" width="2" height="15" fill="rgb(217,77,29)"/><text x="46.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1380" width="2" height="15" fill="rgb(213,31,30)"/><text x="46.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1396" width="2" height="15" fill="rgb(234,72,14)"/><text x="46.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1412" width="2" height="15" fill="rgb(224,5,54)"/><text x="46.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="1428" width="2" height="15" fill="rgb(226,128,28)"/><text x="46.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1444" width="2" height="15" fill="rgb(235,142,44)"/><text x="46.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.19%)</title><rect x="43" y="1460" width="2" height="15" fill="rgb(244,142,8)"/><text x="46.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1476" width="2" height="15" fill="rgb(220,168,41)"/><text x="46.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1492" width="2" height="15" fill="rgb(229,184,37)"/><text x="46.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1508" width="2" height="15" fill="rgb(236,177,8)"/><text x="46.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="1524" width="2" height="15" fill="rgb(223,219,23)"/><text x="46.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1540" width="2" height="15" fill="rgb(253,153,31)"/><text x="46.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.19%)</title><rect x="43" y="1556" width="2" height="15" fill="rgb(254,56,52)"/><text x="46.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.19%)</title><rect x="43" y="1572" width="2" height="15" fill="rgb(221,166,41)"/><text x="46.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1588" width="2" height="15" fill="rgb(238,188,28)"/><text x="46.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1604" width="2" height="15" fill="rgb(228,185,53)"/><text x="46.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1620" width="2" height="15" fill="rgb(247,75,34)"/><text x="46.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="1636" width="2" height="15" fill="rgb(222,55,1)"/><text x="46.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1652" width="2" height="15" fill="rgb(235,25,54)"/><text x="46.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.19%)</title><rect x="43" y="1668" width="2" height="15" fill="rgb(252,113,51)"/><text x="46.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1684" width="2" height="15" fill="rgb(213,176,9)"/><text x="46.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1700" width="2" height="15" fill="rgb(239,68,31)"/><text x="46.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1716" width="2" height="15" fill="rgb(229,176,12)"/><text x="46.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="1732" width="2" height="15" fill="rgb(227,113,50)"/><text x="46.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1748" width="2" height="15" fill="rgb(233,175,43)"/><text x="46.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py) (1 samples, 0.19%)</title><rect x="43" y="1764" width="2" height="15" fill="rgb(238,64,2)"/><text x="46.00" y="1774.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1780" width="2" height="15" fill="rgb(214,168,46)"/><text x="46.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1796" width="2" height="15" fill="rgb(223,205,15)"/><text x="46.00" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1812" width="2" height="15" fill="rgb(220,42,6)"/><text x="46.00" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1828" width="2" height="15" fill="rgb(253,218,6)"/><text x="46.00" y="1838.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1844" width="2" height="15" fill="rgb(229,28,45)"/><text x="46.00" y="1854.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="1860" width="2" height="15" fill="rgb(208,36,0)"/><text x="46.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1876" width="2" height="15" fill="rgb(248,198,46)"/><text x="46.00" y="1886.50"></text></g><g><title>&lt;module&gt; (jinja2/nodes.py) (1 samples, 0.19%)</title><rect x="43" y="1892" width="2" height="15" fill="rgb(241,229,48)"/><text x="46.00" y="1902.50"></text></g><g><title>__new__ (jinja2/nodes.py) (1 samples, 0.19%)</title><rect x="43" y="1908" width="2" height="15" fill="rgb(247,133,46)"/><text x="46.00" y="1918.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (2 samples, 0.38%)</title><rect x="43" y="244" width="5" height="15" fill="rgb(218,1,49)"/><text x="46.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="43" y="260" width="5" height="15" fill="rgb(228,44,52)"/><text x="46.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="43" y="276" width="5" height="15" fill="rgb(205,193,18)"/><text x="46.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="43" y="292" width="5" height="15" fill="rgb(208,209,30)"/><text x="46.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="43" y="308" width="5" height="15" fill="rgb(226,41,37)"/><text x="46.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="43" y="324" width="5" height="15" fill="rgb(233,182,5)"/><text x="46.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.38%)</title><rect x="43" y="340" width="5" height="15" fill="rgb(240,90,21)"/><text x="46.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="43" y="356" width="5" height="15" fill="rgb(208,46,11)"/><text x="46.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="43" y="372" width="5" height="15" fill="rgb(228,12,42)"/><text x="46.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="43" y="388" width="5" height="15" fill="rgb(249,64,11)"/><text x="46.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="43" y="404" width="5" height="15" fill="rgb(216,58,9)"/><text x="46.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="43" y="420" width="5" height="15" fill="rgb(254,219,53)"/><text x="46.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.19%)</title><rect x="45" y="436" width="3" height="15" fill="rgb(249,27,34)"/><text x="48.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="45" y="452" width="3" height="15" fill="rgb(247,6,8)"/><text x="48.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="45" y="468" width="3" height="15" fill="rgb(238,99,10)"/><text x="48.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="45" y="484" width="3" height="15" fill="rgb(246,13,32)"/><text x="48.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="45" y="500" width="3" height="15" fill="rgb(215,9,0)"/><text x="48.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="45" y="516" width="3" height="15" fill="rgb(210,13,34)"/><text x="48.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_lfw.py) (1 samples, 0.19%)</title><rect x="45" y="532" width="3" height="15" fill="rgb(206,157,43)"/><text x="48.00" y="542.50"></text></g><g><title>getLogger (logging/__init__.py) (1 samples, 0.19%)</title><rect x="45" y="548" width="3" height="15" fill="rgb(236,53,28)"/><text x="48.00" y="558.50"></text></g><g><title>getLogger (logging/__init__.py) (1 samples, 0.19%)</title><rect x="45" y="564" width="3" height="15" fill="rgb(214,196,6)"/><text x="48.00" y="574.50"></text></g><g><title>_releaseLock (logging/__init__.py) (1 samples, 0.19%)</title><rect x="45" y="580" width="3" height="15" fill="rgb(229,86,49)"/><text x="48.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (19 samples, 3.62%)</title><rect x="10" y="68" width="42" height="15" fill="rgb(254,167,6)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 3.62%)</title><rect x="10" y="84" width="42" height="15" fill="rgb(240,51,29)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 3.62%)</title><rect x="10" y="100" width="42" height="15" fill="rgb(241,66,23)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (19 samples, 3.62%)</title><rect x="10" y="116" width="42" height="15" fill="rgb(212,36,54)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (19 samples, 3.62%)</title><rect x="10" y="132" width="42" height="15" fill="rgb(217,5,10)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3.py) (19 samples, 3.62%)</title><rect x="10" y="148" width="42" height="15" fill="rgb(253,97,33)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (19 samples, 3.62%)</title><rect x="10" y="164" width="42" height="15" fill="rgb(209,63,20)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 3.62%)</title><rect x="10" y="180" width="42" height="15" fill="rgb(241,184,1)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="43" y="196" width="9" height="15" fill="rgb(205,127,18)"/><text x="46.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.76%)</title><rect x="43" y="212" width="9" height="15" fill="rgb(245,181,48)"/><text x="46.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="43" y="228" width="9" height="15" fill="rgb(253,152,28)"/><text x="46.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.38%)</title><rect x="48" y="244" width="4" height="15" fill="rgb(212,107,44)"/><text x="51.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="48" y="260" width="4" height="15" fill="rgb(240,56,47)"/><text x="51.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="48" y="276" width="4" height="15" fill="rgb(236,38,20)"/><text x="51.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="48" y="292" width="4" height="15" fill="rgb(219,174,30)"/><text x="51.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="48" y="308" width="4" height="15" fill="rgb(236,220,40)"/><text x="51.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="48" y="324" width="4" height="15" fill="rgb(225,114,18)"/><text x="51.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="48" y="340" width="4" height="15" fill="rgb(233,208,30)"/><text x="51.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="48" y="356" width="4" height="15" fill="rgb(230,217,49)"/><text x="51.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (2 samples, 0.38%)</title><rect x="48" y="372" width="4" height="15" fill="rgb(212,188,30)"/><text x="51.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="48" y="388" width="4" height="15" fill="rgb(218,8,54)"/><text x="51.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="48" y="404" width="4" height="15" fill="rgb(238,80,19)"/><text x="51.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="48" y="420" width="4" height="15" fill="rgb(247,171,21)"/><text x="51.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="48" y="436" width="4" height="15" fill="rgb(221,59,19)"/><text x="51.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="48" y="452" width="4" height="15" fill="rgb(214,141,51)"/><text x="51.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="48" y="468" width="4" height="15" fill="rgb(222,15,9)"/><text x="51.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="48" y="484" width="4" height="15" fill="rgb(217,219,35)"/><text x="51.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (2 samples, 0.38%)</title><rect x="48" y="500" width="4" height="15" fill="rgb(226,229,32)"/><text x="51.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py) (2 samples, 0.38%)</title><rect x="48" y="516" width="4" height="15" fill="rgb(241,155,9)"/><text x="51.00" y="526.50"></text></g><g><title>decorator (numpy/core/overrides.py) (2 samples, 0.38%)</title><rect x="48" y="532" width="4" height="15" fill="rgb(228,22,14)"/><text x="51.00" y="542.50"></text></g><g><title>0x7f604caee130 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="50" y="548" width="2" height="15" fill="rgb(252,42,8)"/><text x="53.00" y="558.50"></text></g><g><title>0x7f604bd23ee4 (?) (1 samples, 0.19%)</title><rect x="52" y="212" width="2" height="15" fill="rgb(226,26,20)"/><text x="55.00" y="222.50"></text></g><g><title>0x7f604bd1e76d (?) (1 samples, 0.19%)</title><rect x="52" y="228" width="2" height="15" fill="rgb(224,147,34)"/><text x="55.00" y="238.50"></text></g><g><title>0x7f604bd42e90 (?) (1 samples, 0.19%)</title><rect x="52" y="244" width="2" height="15" fill="rgb(231,101,7)"/><text x="55.00" y="254.50"></text></g><g><title>0x7f604bd46dbf (?) (1 samples, 0.19%)</title><rect x="52" y="260" width="2" height="15" fill="rgb(208,166,10)"/><text x="55.00" y="270.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py) (2 samples, 0.38%)</title><rect x="52" y="196" width="5" height="15" fill="rgb(205,5,39)"/><text x="55.00" y="206.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (1 samples, 0.19%)</title><rect x="54" y="212" width="3" height="15" fill="rgb(216,13,43)"/><text x="57.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.19%)</title><rect x="54" y="228" width="3" height="15" fill="rgb(249,108,10)"/><text x="57.00" y="238.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="54" y="244" width="3" height="15" fill="rgb(225,196,18)"/><text x="57.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="54" y="260" width="3" height="15" fill="rgb(208,136,41)"/><text x="57.00" y="270.50"></text></g><g><title>array_argpartition (methods.c) (1 samples, 0.19%)</title><rect x="54" y="276" width="3" height="15" fill="rgb(245,133,46)"/><text x="57.00" y="286.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c) (1 samples, 0.19%)</title><rect x="54" y="292" width="3" height="15" fill="rgb(223,139,31)"/><text x="57.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c) (1 samples, 0.19%)</title><rect x="54" y="308" width="3" height="15" fill="rgb(230,45,13)"/><text x="57.00" y="318.50"></text></g><g><title>aintroselect_double (selection.c.src) (1 samples, 0.19%)</title><rect x="54" y="324" width="3" height="15" fill="rgb(217,210,9)"/><text x="57.00" y="334.50"></text></g><g><title>adumb_select_double (selection.c.src) (1 samples, 0.19%)</title><rect x="54" y="340" width="3" height="15" fill="rgb(225,188,42)"/><text x="57.00" y="350.50"></text></g><g><title>DOUBLE_LT (npysort_common.h) (1 samples, 0.19%)</title><rect x="54" y="356" width="3" height="15" fill="rgb(248,58,26)"/><text x="57.00" y="366.50"></text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py) (1 samples, 0.19%)</title><rect x="57" y="244" width="2" height="15" fill="rgb(221,188,7)"/><text x="60.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.19%)</title><rect x="57" y="260" width="2" height="15" fill="rgb(247,5,24)"/><text x="60.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.19%)</title><rect x="57" y="276" width="2" height="15" fill="rgb(207,143,21)"/><text x="60.00" y="286.50"></text></g><g><title>profile0_skl (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (4 samples, 0.76%)</title><rect x="52" y="68" width="9" height="15" fill="rgb(241,27,12)"/><text x="55.00" y="78.50"></text></g><g><title>setup_profile0 (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (4 samples, 0.76%)</title><rect x="52" y="84" width="9" height="15" fill="rgb(233,164,48)"/><text x="55.00" y="94.50"></text></g><g><title>profile0 (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (4 samples, 0.76%)</title><rect x="52" y="100" width="9" height="15" fill="rgb(228,44,15)"/><text x="55.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.76%)</title><rect x="52" y="116" width="9" height="15" fill="rgb(228,215,42)"/><text x="55.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.76%)</title><rect x="52" y="132" width="9" height="15" fill="rgb(241,4,41)"/><text x="55.00" y="142.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py) (4 samples, 0.76%)</title><rect x="52" y="148" width="9" height="15" fill="rgb(230,212,9)"/><text x="55.00" y="158.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py) (4 samples, 0.76%)</title><rect x="52" y="164" width="9" height="15" fill="rgb(220,40,30)"/><text x="55.00" y="174.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py) (4 samples, 0.76%)</title><rect x="52" y="180" width="9" height="15" fill="rgb(217,225,53)"/><text x="55.00" y="190.50"></text></g><g><title>pairwise_distances (sklearn/metrics/pairwise.py) (2 samples, 0.38%)</title><rect x="57" y="196" width="4" height="15" fill="rgb(238,12,17)"/><text x="60.00" y="206.50"></text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py) (2 samples, 0.38%)</title><rect x="57" y="212" width="4" height="15" fill="rgb(216,75,18)"/><text x="60.00" y="222.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py) (2 samples, 0.38%)</title><rect x="57" y="228" width="4" height="15" fill="rgb(206,153,9)"/><text x="60.00" y="238.50"></text></g><g><title>row_norms (sklearn/utils/extmath.py) (1 samples, 0.19%)</title><rect x="59" y="244" width="2" height="15" fill="rgb(213,19,33)"/><text x="62.00" y="254.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;) (1 samples, 0.19%)</title><rect x="59" y="260" width="2" height="15" fill="rgb(238,168,14)"/><text x="62.00" y="270.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="61" y="340" width="2" height="15" fill="rgb(231,44,32)"/><text x="64.00" y="350.50"></text></g><g><title>0x7f604cbe2ed2 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="362" y="372" width="3" height="15" fill="rgb(221,81,38)"/><text x="365.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="365" y="372" width="2" height="15" fill="rgb(235,37,21)"/><text x="368.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.38%)</title><rect x="367" y="372" width="4" height="15" fill="rgb(218,201,10)"/><text x="370.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.38%)</title><rect x="367" y="388" width="4" height="15" fill="rgb(252,165,33)"/><text x="370.00" y="398.50"></text></g><g><title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::LesserValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="371" y="372" width="3" height="15" fill="rgb(220,54,31)"/><text x="374.00" y="382.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 26.86%)</title><rect x="63" y="340" width="317" height="15" fill="rgb(214,25,33)"/><text x="66.00" y="350.50">onnxruntime::TopK&lt;11, float&gt;::Compute (onn..</text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 26.86%)</title><rect x="63" y="356" width="317" height="15" fill="rgb(246,103,25)"/><text x="66.00" y="366.50">onnxruntime::TopKImpl (onnxruntime/capi/on..</text></g><g><title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::LesserValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.57%)</title><rect x="374" y="372" width="6" height="15" fill="rgb(226,89,21)"/><text x="377.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolTempl&lt;Eigen::StlThreadEnvironment&gt;::Schedule (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="380" y="404" width="3" height="15" fill="rgb(235,50,40)"/><text x="383.00" y="414.50"></text></g><g><title>Eigen::ThreadPoolTempl&lt;Eigen::StlThreadEnvironment&gt;::ScheduleWithHint (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="380" y="420" width="3" height="15" fill="rgb(220,33,20)"/><text x="383.00" y="430.50"></text></g><g><title>Eigen::EventCount::Unpark [clone .isra.126] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="380" y="436" width="3" height="15" fill="rgb(210,87,18)"/><text x="383.00" y="446.50"></text></g><g><title>std::condition_variable::notify_one (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="380" y="452" width="3" height="15" fill="rgb(206,145,0)"/><text x="383.00" y="462.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="380" y="468" width="3" height="15" fill="rgb(233,138,39)"/><text x="383.00" y="478.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (149 samples, 28.38%)</title><rect x="61" y="260" width="335" height="15" fill="rgb(248,169,37)"/><text x="64.00" y="270.50">onnxruntime::InferenceSession::Run (onnxrunti..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (149 samples, 28.38%)</title><rect x="61" y="276" width="335" height="15" fill="rgb(226,199,26)"/><text x="64.00" y="286.50">onnxruntime::InferenceSession::Run (onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (149 samples, 28.38%)</title><rect x="61" y="292" width="335" height="15" fill="rgb(251,6,26)"/><text x="64.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (149 samples, 28.38%)</title><rect x="61" y="308" width="335" height="15" fill="rgb(247,64,36)"/><text x="64.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxrun..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (149 samples, 28.38%)</title><rect x="61" y="324" width="335" height="15" fill="rgb(241,46,47)"/><text x="64.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onn..</text></g><g><title>onnxruntime::contrib::CDist&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.33%)</title><rect x="380" y="340" width="16" height="15" fill="rgb(240,196,3)"/><text x="383.00" y="350.50"></text></g><g><title>onnxruntime::contrib::cdist&lt;float, onnxruntime::Euclidean&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.33%)</title><rect x="380" y="356" width="16" height="15" fill="rgb(241,32,39)"/><text x="383.00" y="366.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.33%)</title><rect x="380" y="372" width="16" height="15" fill="rgb(218,197,51)"/><text x="383.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.33%)</title><rect x="380" y="388" width="16" height="15" fill="rgb(231,137,29)"/><text x="383.00" y="398.50"></text></g><g><title>std::condition_variable::wait (libstdc++.so.6.0.28) (6 samples, 1.14%)</title><rect x="383" y="404" width="13" height="15" fill="rgb(222,137,14)"/><text x="386.00" y="414.50"></text></g><g><title>__pthread_cond_wait (libpthread-2.29.so) (6 samples, 1.14%)</title><rect x="383" y="420" width="13" height="15" fill="rgb(233,34,4)"/><text x="386.00" y="430.50"></text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (150 samples, 28.57%)</title><rect x="61" y="100" width="337" height="15" fill="rgb(236,213,11)"/><text x="64.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (150 samples, 28.57%)</title><rect x="61" y="116" width="337" height="15" fill="rgb(233,228,28)"/><text x="64.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (150 samples, 28.57%)</title><rect x="61" y="132" width="337" height="15" fill="rgb(212,83,11)"/><text x="64.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (150 samples, 28.57%)</title><rect x="61" y="148" width="337" height="15" fill="rgb(227,167,11)"/><text x="64.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (150 samples, 28.57%)</title><rect x="61" y="164" width="337" height="15" fill="rgb(210,40,40)"/><text x="64.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (150 samples, 28.57%)</title><rect x="61" y="180" width="337" height="15" fill="rgb(207,184,11)"/><text x="64.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (150 samples, 28.57%)</title><rect x="61" y="196" width="337" height="15" fill="rgb(220,71,9)"/><text x="64.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (150 samples, 28.57%)</title><rect x="61" y="212" width="337" height="15" fill="rgb(250,88,11)"/><text x="64.00" y="222.50">pybind11::cpp_function::dispatcher (onnxrunti..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (150 samples, 28.57%)</title><rect x="61" y="228" width="337" height="15" fill="rgb(213,93,1)"/><text x="64.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxr..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (150 samples, 28.57%)</title><rect x="61" y="244" width="337" height="15" fill="rgb(243,161,3)"/><text x="64.00" y="254.50">onnxruntime::python::addObjectMethods(pybind1..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="396" y="260" width="2" height="15" fill="rgb(216,37,47)"/><text x="399.00" y="270.50"></text></g><g><title>profile_ort (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (151 samples, 28.76%)</title><rect x="61" y="68" width="340" height="15" fill="rgb(228,38,21)"/><text x="64.00" y="78.50">profile_ort (bench_KNeighborsRegressor_default..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (151 samples, 28.76%)</title><rect x="61" y="84" width="340" height="15" fill="rgb(236,28,49)"/><text x="64.00" y="94.50">setup_profile (bench_KNeighborsRegressor_defau..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.19%)</title><rect x="398" y="100" width="3" height="15" fill="rgb(239,226,11)"/><text x="401.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.19%)</title><rect x="398" y="116" width="3" height="15" fill="rgb(237,61,36)"/><text x="401.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.19%)</title><rect x="398" y="132" width="3" height="15" fill="rgb(239,58,43)"/><text x="401.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.19%)</title><rect x="398" y="148" width="3" height="15" fill="rgb(215,120,38)"/><text x="401.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.19%)</title><rect x="398" y="164" width="3" height="15" fill="rgb(252,8,11)"/><text x="401.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="398" y="180" width="3" height="15" fill="rgb(240,182,40)"/><text x="401.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="398" y="196" width="3" height="15" fill="rgb(242,3,54)"/><text x="401.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="398" y="212" width="3" height="15" fill="rgb(219,107,46)"/><text x="401.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="398" y="228" width="3" height="15" fill="rgb(208,211,21)"/><text x="401.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="398" y="244" width="3" height="15" fill="rgb(227,201,10)"/><text x="401.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.19%)</title><rect x="398" y="260" width="3" height="15" fill="rgb(243,117,20)"/><text x="401.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="398" y="276" width="3" height="15" fill="rgb(242,150,51)"/><text x="401.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="398" y="292" width="3" height="15" fill="rgb(230,136,13)"/><text x="401.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="398" y="308" width="3" height="15" fill="rgb(229,40,39)"/><text x="401.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="398" y="324" width="3" height="15" fill="rgb(226,129,8)"/><text x="401.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="398" y="340" width="3" height="15" fill="rgb(250,199,33)"/><text x="401.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.19%)</title><rect x="398" y="356" width="3" height="15" fill="rgb(218,71,10)"/><text x="401.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="398" y="372" width="3" height="15" fill="rgb(244,43,54)"/><text x="401.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="398" y="388" width="3" height="15" fill="rgb(234,88,43)"/><text x="401.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="398" y="404" width="3" height="15" fill="rgb(251,114,9)"/><text x="401.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="398" y="420" width="3" height="15" fill="rgb(217,208,30)"/><text x="401.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="398" y="436" width="3" height="15" fill="rgb(246,97,50)"/><text x="401.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (1 samples, 0.19%)</title><rect x="398" y="452" width="3" height="15" fill="rgb(206,150,25)"/><text x="401.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="398" y="468" width="3" height="15" fill="rgb(249,62,48)"/><text x="401.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="398" y="484" width="3" height="15" fill="rgb(217,198,11)"/><text x="401.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="398" y="500" width="3" height="15" fill="rgb(238,187,11)"/><text x="401.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="398" y="516" width="3" height="15" fill="rgb(241,205,5)"/><text x="401.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="398" y="532" width="3" height="15" fill="rgb(248,96,34)"/><text x="401.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="398" y="548" width="3" height="15" fill="rgb(244,153,25)"/><text x="401.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="398" y="564" width="3" height="15" fill="rgb(218,81,27)"/><text x="401.00" y="574.50"></text></g><g><title>0x7f604cc98995 (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="398" y="580" width="3" height="15" fill="rgb(221,119,31)"/><text x="401.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.19%)</title><rect x="398" y="596" width="3" height="15" fill="rgb(219,221,19)"/><text x="401.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.19%)</title><rect x="398" y="612" width="3" height="15" fill="rgb(251,100,7)"/><text x="401.00" y="622.50"></text></g><g><title>0x7f604cc98258 (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="398" y="628" width="3" height="15" fill="rgb(221,7,6)"/><text x="401.00" y="638.50"></text></g><g><title>0x7f604cce5d7a (ld-2.29.so) (1 samples, 0.19%)</title><rect x="398" y="644" width="3" height="15" fill="rgb(221,202,51)"/><text x="401.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.19%)</title><rect x="398" y="660" width="3" height="15" fill="rgb(233,163,47)"/><text x="401.00" y="670.50"></text></g><g><title>0x7f604cce6473 (ld-2.29.so) (1 samples, 0.19%)</title><rect x="398" y="676" width="3" height="15" fill="rgb(231,81,33)"/><text x="401.00" y="686.50"></text></g><g><title>0x7f604cce26b9 (ld-2.29.so) (1 samples, 0.19%)</title><rect x="398" y="692" width="3" height="15" fill="rgb(244,169,41)"/><text x="401.00" y="702.50"></text></g><g><title>0x7f604cce25ba (ld-2.29.so) (1 samples, 0.19%)</title><rect x="398" y="708" width="3" height="15" fill="rgb(217,112,50)"/><text x="401.00" y="718.50"></text></g><g><title>0x7f60030b6580 (?) (1 samples, 0.19%)</title><rect x="398" y="724" width="3" height="15" fill="rgb(207,117,46)"/><text x="401.00" y="734.50"></text></g><g><title>LONG_getitem (arraytypes.c.src) (1 samples, 0.19%)</title><rect x="403" y="260" width="2" height="15" fill="rgb(216,97,41)"/><text x="406.00" y="270.50"></text></g><g><title>PyArray_ToList (convert.c) (2 samples, 0.38%)</title><rect x="403" y="228" width="4" height="15" fill="rgb(237,89,53)"/><text x="406.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (2 samples, 0.38%)</title><rect x="403" y="244" width="4" height="15" fill="rgb(235,122,30)"/><text x="406.00" y="254.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="405" y="260" width="2" height="15" fill="rgb(233,148,49)"/><text x="408.00" y="270.50"></text></g><g><title>0x7f604ca31103 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="405" y="276" width="2" height="15" fill="rgb(224,167,24)"/><text x="408.00" y="286.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.19%)</title><rect x="407" y="244" width="3" height="15" fill="rgb(224,60,6)"/><text x="410.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.19%)</title><rect x="407" y="260" width="3" height="15" fill="rgb(233,148,28)"/><text x="410.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (6 samples, 1.14%)</title><rect x="410" y="276" width="13" height="15" fill="rgb(224,59,40)"/><text x="413.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c) (6 samples, 1.14%)</title><rect x="410" y="292" width="13" height="15" fill="rgb(217,159,42)"/><text x="413.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (4 samples, 0.76%)</title><rect x="414" y="308" width="9" height="15" fill="rgb(221,157,17)"/><text x="417.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (4 samples, 0.76%)</title><rect x="414" y="324" width="9" height="15" fill="rgb(225,224,20)"/><text x="417.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (4 samples, 0.76%)</title><rect x="414" y="340" width="9" height="15" fill="rgb(211,159,28)"/><text x="417.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (3 samples, 0.57%)</title><rect x="437" y="340" width="6" height="15" fill="rgb(206,52,37)"/><text x="440.00" y="350.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c) (1 samples, 0.19%)</title><rect x="441" y="356" width="2" height="15" fill="rgb(238,77,11)"/><text x="444.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (15 samples, 2.86%)</title><rect x="423" y="292" width="34" height="15" fill="rgb(222,150,38)"/><text x="426.00" y="302.50">Py..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (15 samples, 2.86%)</title><rect x="423" y="308" width="34" height="15" fill="rgb(238,229,39)"/><text x="426.00" y="318.50">Py..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (15 samples, 2.86%)</title><rect x="423" y="324" width="34" height="15" fill="rgb(231,187,54)"/><text x="426.00" y="334.50">Py..</text></g><g><title>_array_find_python_scalar_type (common.c) (6 samples, 1.14%)</title><rect x="443" y="340" width="14" height="15" fill="rgb(224,12,4)"/><text x="446.00" y="350.50"></text></g><g><title>array_subscript (mapping.c) (24 samples, 4.57%)</title><rect x="407" y="228" width="54" height="15" fill="rgb(235,184,3)"/><text x="410.00" y="238.50">array..</text></g><g><title>prepare_index (mapping.c) (23 samples, 4.38%)</title><rect x="410" y="244" width="51" height="15" fill="rgb(245,201,37)"/><text x="413.00" y="254.50">prepa..</text></g><g><title>PyArray_FromAny (ctors.c) (23 samples, 4.38%)</title><rect x="410" y="260" width="51" height="15" fill="rgb(226,151,52)"/><text x="413.00" y="270.50">PyArr..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (17 samples, 3.24%)</title><rect x="423" y="276" width="38" height="15" fill="rgb(252,138,52)"/><text x="426.00" y="286.50">PyA..</text></g><g><title>discover_dimensions (ctors.c) (2 samples, 0.38%)</title><rect x="457" y="292" width="4" height="15" fill="rgb(238,208,21)"/><text x="460.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c) (2 samples, 0.38%)</title><rect x="457" y="308" width="4" height="15" fill="rgb(226,130,43)"/><text x="460.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (27 samples, 5.14%)</title><rect x="403" y="212" width="61" height="15" fill="rgb(212,170,30)"/><text x="406.00" y="222.50">_run (..</text></g><g><title>array_tolist (methods.c) (1 samples, 0.19%)</title><rect x="461" y="228" width="3" height="15" fill="rgb(239,198,3)"/><text x="464.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.19%)</title><rect x="464" y="212" width="2" height="15" fill="rgb(220,83,33)"/><text x="467.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.19%)</title><rect x="464" y="228" width="2" height="15" fill="rgb(209,149,26)"/><text x="467.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.19%)</title><rect x="464" y="244" width="2" height="15" fill="rgb(239,152,51)"/><text x="467.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.19%)</title><rect x="464" y="260" width="2" height="15" fill="rgb(237,150,0)"/><text x="467.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="464" y="276" width="2" height="15" fill="rgb(229,44,18)"/><text x="467.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.19%)</title><rect x="464" y="292" width="2" height="15" fill="rgb(251,55,28)"/><text x="467.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="464" y="308" width="2" height="15" fill="rgb(221,52,23)"/><text x="467.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_flatten.py) (1 samples, 0.19%)</title><rect x="466" y="212" width="2" height="15" fill="rgb(246,95,52)"/><text x="469.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.19%)</title><rect x="466" y="228" width="2" height="15" fill="rgb(225,229,47)"/><text x="469.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_shape.py) (2 samples, 0.38%)</title><rect x="468" y="212" width="5" height="15" fill="rgb(210,154,16)"/><text x="471.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.38%)</title><rect x="468" y="228" width="5" height="15" fill="rgb(214,144,27)"/><text x="471.00" y="238.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.19%)</title><rect x="470" y="244" width="3" height="15" fill="rgb(214,177,5)"/><text x="473.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.19%)</title><rect x="470" y="260" width="3" height="15" fill="rgb(228,24,51)"/><text x="473.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.19%)</title><rect x="470" y="276" width="3" height="15" fill="rgb(231,162,52)"/><text x="473.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.19%)</title><rect x="470" y="292" width="3" height="15" fill="rgb(232,2,22)"/><text x="473.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.19%)</title><rect x="470" y="308" width="3" height="15" fill="rgb(254,178,44)"/><text x="473.00" y="318.50"></text></g><g><title>adumb_select_float (selection.c.src) (56 samples, 10.67%)</title><rect x="479" y="388" width="126" height="15" fill="rgb(208,120,54)"/><text x="482.00" y="398.50">adumb_select_fl..</text></g><g><title>FLOAT_LT (npysort_common.h) (42 samples, 8.00%)</title><rect x="511" y="404" width="94" height="15" fill="rgb(219,176,27)"/><text x="514.00" y="414.50">FLOAT_LT (n..</text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (60 samples, 11.43%)</title><rect x="473" y="260" width="134" height="15" fill="rgb(253,80,10)"/><text x="476.00" y="270.50">argpartition (&lt;_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (60 samples, 11.43%)</title><rect x="473" y="276" width="134" height="15" fill="rgb(250,60,26)"/><text x="476.00" y="286.50">array_implement_..</text></g><g><title>argpartition (numpy/core/fromnumeric.py) (60 samples, 11.43%)</title><rect x="473" y="292" width="134" height="15" fill="rgb(232,214,24)"/><text x="476.00" y="302.50">argpartition (nu..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (60 samples, 11.43%)</title><rect x="473" y="308" width="134" height="15" fill="rgb(221,80,47)"/><text x="476.00" y="318.50">_wrapfunc (numpy..</text></g><g><title>array_argpartition (methods.c) (60 samples, 11.43%)</title><rect x="473" y="324" width="134" height="15" fill="rgb(232,24,0)"/><text x="476.00" y="334.50">array_argpartiti..</text></g><g><title>PyArray_ArgPartition (item_selection.c) (60 samples, 11.43%)</title><rect x="473" y="340" width="134" height="15" fill="rgb(241,78,18)"/><text x="476.00" y="350.50">PyArray_ArgParti..</text></g><g><title>_new_argsortlike (item_selection.c) (60 samples, 11.43%)</title><rect x="473" y="356" width="134" height="15" fill="rgb(241,115,28)"/><text x="476.00" y="366.50">_new_argsortlike..</text></g><g><title>aintroselect_float (selection.c.src) (57 samples, 10.86%)</title><rect x="479" y="372" width="128" height="15" fill="rgb(242,113,43)"/><text x="482.00" y="382.50">aintroselect_flo..</text></g><g><title>store_pivot (selection.c.src) (1 samples, 0.19%)</title><rect x="605" y="388" width="2" height="15" fill="rgb(214,133,21)"/><text x="608.00" y="398.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (3 samples, 0.57%)</title><rect x="607" y="260" width="7" height="15" fill="rgb(228,220,27)"/><text x="610.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.57%)</title><rect x="607" y="276" width="7" height="15" fill="rgb(215,24,22)"/><text x="610.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (3 samples, 0.57%)</title><rect x="607" y="292" width="7" height="15" fill="rgb(249,41,15)"/><text x="610.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 0.57%)</title><rect x="607" y="308" width="7" height="15" fill="rgb(205,204,49)"/><text x="610.00" y="318.50"></text></g><g><title>array_argsort (methods.c) (3 samples, 0.57%)</title><rect x="607" y="324" width="7" height="15" fill="rgb(221,74,6)"/><text x="610.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (3 samples, 0.57%)</title><rect x="607" y="340" width="7" height="15" fill="rgb(239,106,8)"/><text x="610.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c) (3 samples, 0.57%)</title><rect x="607" y="356" width="7" height="15" fill="rgb(234,29,21)"/><text x="610.00" y="366.50"></text></g><g><title>PyArray_IterAllButAxis (iterators.c) (1 samples, 0.19%)</title><rect x="612" y="372" width="2" height="15" fill="rgb(251,109,12)"/><text x="615.00" y="382.50"></text></g><g><title>PyArray_IterNew (iterators.c) (1 samples, 0.19%)</title><rect x="612" y="388" width="2" height="15" fill="rgb(239,157,38)"/><text x="615.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="612" y="404" width="2" height="15" fill="rgb(205,186,51)"/><text x="615.00" y="414.50"></text></g><g><title>array_arange (multiarraymodule.c) (1 samples, 0.19%)</title><rect x="614" y="260" width="2" height="15" fill="rgb(246,181,13)"/><text x="617.00" y="270.50"></text></g><g><title>PyArray_ArangeObj (ctors.c) (1 samples, 0.19%)</title><rect x="614" y="276" width="2" height="15" fill="rgb(217,133,2)"/><text x="617.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="614" y="292" width="2" height="15" fill="rgb(250,106,23)"/><text x="617.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="616" y="260" width="3" height="15" fill="rgb(221,72,7)"/><text x="619.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="616" y="276" width="3" height="15" fill="rgb(251,77,2)"/><text x="619.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.19%)</title><rect x="616" y="292" width="3" height="15" fill="rgb(220,116,13)"/><text x="619.00" y="302.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.19%)</title><rect x="623" y="292" width="2" height="15" fill="rgb(236,159,35)"/><text x="626.00" y="302.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.19%)</title><rect x="623" y="308" width="2" height="15" fill="rgb(212,93,25)"/><text x="626.00" y="318.50"></text></g><g><title>NpyIter_New (nditer_constr.c) (1 samples, 0.19%)</title><rect x="625" y="292" width="3" height="15" fill="rgb(227,197,6)"/><text x="628.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.19%)</title><rect x="625" y="308" width="3" height="15" fill="rgb(249,152,31)"/><text x="628.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.19%)</title><rect x="625" y="324" width="3" height="15" fill="rgb(215,142,54)"/><text x="628.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.19%)</title><rect x="625" y="340" width="3" height="15" fill="rgb(214,207,54)"/><text x="628.00" y="350.50"></text></g><g><title>0x7f604bc332b0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="625" y="356" width="3" height="15" fill="rgb(209,119,12)"/><text x="628.00" y="366.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c) (6 samples, 1.14%)</title><rect x="619" y="276" width="13" height="15" fill="rgb(225,150,26)"/><text x="622.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h) (2 samples, 0.38%)</title><rect x="628" y="292" width="4" height="15" fill="rgb(226,186,15)"/><text x="631.00" y="302.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.19%)</title><rect x="632" y="276" width="2" height="15" fill="rgb(215,189,42)"/><text x="635.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (1 samples, 0.19%)</title><rect x="632" y="292" width="2" height="15" fill="rgb(206,204,42)"/><text x="635.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (1 samples, 0.19%)</title><rect x="632" y="308" width="2" height="15" fill="rgb(249,45,21)"/><text x="635.00" y="318.50"></text></g><g><title>array_subscript (mapping.c) (12 samples, 2.29%)</title><rect x="619" y="260" width="27" height="15" fill="rgb(220,107,7)"/><text x="622.00" y="270.50">a..</text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (5 samples, 0.95%)</title><rect x="634" y="276" width="12" height="15" fill="rgb(211,115,26)"/><text x="637.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (78 samples, 14.86%)</title><rect x="473" y="212" width="175" height="15" fill="rgb(250,56,46)"/><text x="476.00" y="222.50">_run (mlprodict/onnxrt..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (78 samples, 14.86%)</title><rect x="473" y="228" width="175" height="15" fill="rgb(244,188,42)"/><text x="476.00" y="238.50">_common_run (mlprodict..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py) (78 samples, 14.86%)</title><rect x="473" y="244" width="175" height="15" fill="rgb(249,36,15)"/><text x="476.00" y="254.50">topk_sorted_implementa..</text></g><g><title>long_subtract (scalarmath.c.src) (1 samples, 0.19%)</title><rect x="646" y="260" width="2" height="15" fill="rgb(253,138,2)"/><text x="649.00" y="270.50"></text></g><g><title>_long_convert2_to_ctypes (scalarmath.c.src) (1 samples, 0.19%)</title><rect x="646" y="276" width="2" height="15" fill="rgb(221,86,41)"/><text x="649.00" y="286.50"></text></g><g><title>_long_convert_to_ctype (scalarmath.c.src) (1 samples, 0.19%)</title><rect x="646" y="292" width="2" height="15" fill="rgb(214,170,24)"/><text x="649.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.57%)</title><rect x="648" y="260" width="7" height="15" fill="rgb(205,218,29)"/><text x="651.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 0.57%)</title><rect x="648" y="276" width="7" height="15" fill="rgb(213,10,48)"/><text x="651.00" y="286.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src) (3 samples, 0.57%)</title><rect x="648" y="292" width="7" height="15" fill="rgb(252,114,54)"/><text x="651.00" y="302.50"></text></g><g><title>array_astype (methods.c) (4 samples, 0.76%)</title><rect x="648" y="244" width="9" height="15" fill="rgb(254,23,32)"/><text x="651.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.19%)</title><rect x="655" y="260" width="2" height="15" fill="rgb(246,207,6)"/><text x="658.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="655" y="276" width="2" height="15" fill="rgb(212,1,40)"/><text x="658.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.19%)</title><rect x="655" y="292" width="2" height="15" fill="rgb(239,200,44)"/><text x="658.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="655" y="308" width="2" height="15" fill="rgb(215,57,6)"/><text x="658.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="655" y="324" width="2" height="15" fill="rgb(254,65,54)"/><text x="658.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="655" y="340" width="2" height="15" fill="rgb(225,17,40)"/><text x="658.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.19%)</title><rect x="655" y="356" width="2" height="15" fill="rgb(231,160,2)"/><text x="658.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="655" y="372" width="2" height="15" fill="rgb(242,92,18)"/><text x="658.00" y="382.50"></text></g><g><title>0x7f604ca11cc2 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="655" y="388" width="2" height="15" fill="rgb(234,39,3)"/><text x="658.00" y="398.50"></text></g><g><title>0x7f6029c365d1 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="659" y="260" width="2" height="15" fill="rgb(209,114,15)"/><text x="662.00" y="270.50"></text></g><g><title>0x7f6029c366cf (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.95%)</title><rect x="661" y="260" width="12" height="15" fill="rgb(246,75,17)"/><text x="664.00" y="270.50"></text></g><g><title>0x7f6029c366e0 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.76%)</title><rect x="673" y="260" width="9" height="15" fill="rgb(210,107,10)"/><text x="676.00" y="270.50"></text></g><g><title>0x7f6029c366ef (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="682" y="260" width="2" height="15" fill="rgb(211,203,40)"/><text x="685.00" y="270.50"></text></g><g><title>0x7f6029c366fe (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.57%)</title><rect x="684" y="260" width="7" height="15" fill="rgb(240,145,0)"/><text x="687.00" y="270.50"></text></g><g><title>0x7f6029c36710 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.57%)</title><rect x="691" y="260" width="6" height="15" fill="rgb(215,168,36)"/><text x="694.00" y="270.50"></text></g><g><title>0x7f6029c36720 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.76%)</title><rect x="697" y="260" width="9" height="15" fill="rgb(207,158,16)"/><text x="700.00" y="270.50"></text></g><g><title>0x7f6029c36730 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.95%)</title><rect x="706" y="260" width="12" height="15" fill="rgb(237,90,49)"/><text x="709.00" y="270.50"></text></g><g><title>0x7f6029c369f5 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="718" y="260" width="2" height="15" fill="rgb(240,138,35)"/><text x="721.00" y="270.50"></text></g><g><title>0x7f6029c369f9 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.76%)</title><rect x="720" y="260" width="9" height="15" fill="rgb(227,160,12)"/><text x="723.00" y="270.50"></text></g><g><title>0x7f6029c369fd (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (16 samples, 3.05%)</title><rect x="729" y="260" width="36" height="15" fill="rgb(248,84,8)"/><text x="732.00" y="270.50">0x7..</text></g><g><title>0x7f6029c36a03 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.95%)</title><rect x="765" y="260" width="11" height="15" fill="rgb(219,3,50)"/><text x="768.00" y="270.50"></text></g><g><title>0x7f6029c36a12 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="776" y="260" width="2" height="15" fill="rgb(207,27,46)"/><text x="779.00" y="270.50"></text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py) (1 samples, 0.19%)</title><rect x="778" y="260" width="2" height="15" fill="rgb(222,108,32)"/><text x="781.00" y="270.50"></text></g><g><title>_convert_to_type (scipy/spatial/distance.py) (1 samples, 0.19%)</title><rect x="778" y="276" width="2" height="15" fill="rgb(212,72,14)"/><text x="781.00" y="286.50"></text></g><g><title>ascontiguousarray (numpy/core/_asarray.py) (1 samples, 0.19%)</title><rect x="778" y="292" width="2" height="15" fill="rgb(217,144,45)"/><text x="781.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cdist.py) (60 samples, 11.43%)</title><rect x="648" y="228" width="135" height="15" fill="rgb(235,40,43)"/><text x="651.00" y="238.50">_run (mlprodict/o..</text></g><g><title>cdist (scipy/spatial/distance.py) (56 samples, 10.67%)</title><rect x="657" y="244" width="126" height="15" fill="rgb(254,187,33)"/><text x="660.00" y="254.50">cdist (scipy/sp..</text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.19%)</title><rect x="780" y="260" width="3" height="15" fill="rgb(248,146,29)"/><text x="783.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.19%)</title><rect x="780" y="276" width="3" height="15" fill="rgb(212,101,45)"/><text x="783.00" y="286.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="780" y="292" width="3" height="15" fill="rgb(240,19,15)"/><text x="783.00" y="302.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="783" y="340" width="2" height="15" fill="rgb(247,188,19)"/><text x="786.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="783" y="356" width="2" height="15" fill="rgb(229,151,43)"/><text x="786.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="783" y="372" width="2" height="15" fill="rgb(212,28,8)"/><text x="786.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.19%)</title><rect x="783" y="388" width="2" height="15" fill="rgb(216,12,48)"/><text x="786.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.38%)</title><rect x="783" y="308" width="4" height="15" fill="rgb(234,71,21)"/><text x="786.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.38%)</title><rect x="783" y="324" width="4" height="15" fill="rgb(219,95,24)"/><text x="786.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="785" y="340" width="2" height="15" fill="rgb(242,8,11)"/><text x="788.00" y="350.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="785" y="356" width="2" height="15" fill="rgb(208,36,1)"/><text x="788.00" y="366.50"></text></g><g><title>sse2_binary_scalar2_divide_FLOAT (simd.inc.src) (1 samples, 0.19%)</title><rect x="785" y="372" width="2" height="15" fill="rgb(239,153,44)"/><text x="788.00" y="382.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.19%)</title><rect x="785" y="388" width="2" height="15" fill="rgb(233,193,8)"/><text x="788.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.19%)</title><rect x="789" y="372" width="3" height="15" fill="rgb(237,179,3)"/><text x="792.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.19%)</title><rect x="789" y="388" width="3" height="15" fill="rgb(227,22,20)"/><text x="792.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="789" y="404" width="3" height="15" fill="rgb(216,191,4)"/><text x="792.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="789" y="420" width="3" height="15" fill="rgb(223,40,1)"/><text x="792.00" y="430.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="789" y="436" width="3" height="15" fill="rgb(224,195,21)"/><text x="792.00" y="446.50"></text></g><g><title>FLOAT_add (loops.c.src) (2 samples, 0.38%)</title><rect x="792" y="388" width="4" height="15" fill="rgb(251,196,23)"/><text x="795.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (1 samples, 0.19%)</title><rect x="794" y="404" width="2" height="15" fill="rgb(243,138,39)"/><text x="797.00" y="414.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (177 samples, 33.71%)</title><rect x="401" y="132" width="397" height="15" fill="rgb(220,129,5)"/><text x="404.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (177 samples, 33.71%)</title><rect x="401" y="148" width="397" height="15" fill="rgb(245,157,18)"/><text x="404.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (177 samples, 33.71%)</title><rect x="401" y="164" width="397" height="15" fill="rgb(229,179,7)"/><text x="404.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (177 samples, 33.71%)</title><rect x="401" y="180" width="397" height="15" fill="rgb(249,111,23)"/><text x="404.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (176 samples, 33.52%)</title><rect x="403" y="196" width="395" height="15" fill="rgb(213,130,19)"/><text x="406.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (67 samples, 12.76%)</title><rect x="648" y="212" width="150" height="15" fill="rgb(253,34,12)"/><text x="651.00" y="222.50">run (mlprodict/onnx..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_mean.py) (7 samples, 1.33%)</title><rect x="783" y="228" width="15" height="15" fill="rgb(241,12,38)"/><text x="786.00" y="238.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;) (7 samples, 1.33%)</title><rect x="783" y="244" width="15" height="15" fill="rgb(228,108,25)"/><text x="786.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 1.33%)</title><rect x="783" y="260" width="15" height="15" fill="rgb(243,71,13)"/><text x="786.00" y="270.50"></text></g><g><title>mean (numpy/core/fromnumeric.py) (7 samples, 1.33%)</title><rect x="783" y="276" width="15" height="15" fill="rgb(238,114,54)"/><text x="786.00" y="286.50"></text></g><g><title>_mean (numpy/core/_methods.py) (7 samples, 1.33%)</title><rect x="783" y="292" width="15" height="15" fill="rgb(229,217,1)"/><text x="786.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (5 samples, 0.95%)</title><rect x="787" y="308" width="11" height="15" fill="rgb(250,141,12)"/><text x="790.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (5 samples, 0.95%)</title><rect x="787" y="324" width="11" height="15" fill="rgb(212,72,25)"/><text x="790.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 0.76%)</title><rect x="789" y="340" width="9" height="15" fill="rgb(247,220,10)"/><text x="792.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 0.76%)</title><rect x="789" y="356" width="9" height="15" fill="rgb(206,109,16)"/><text x="792.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c) (3 samples, 0.57%)</title><rect x="792" y="372" width="6" height="15" fill="rgb(222,50,4)"/><text x="795.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.19%)</title><rect x="796" y="388" width="2" height="15" fill="rgb(241,216,47)"/><text x="799.00" y="398.50"></text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (178 samples, 33.90%)</title><rect x="401" y="100" width="400" height="15" fill="rgb(227,226,3)"/><text x="404.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_m_reg_al..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (178 samples, 33.90%)</title><rect x="401" y="116" width="400" height="15" fill="rgb(253,127,39)"/><text x="404.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.19%)</title><rect x="798" y="132" width="3" height="15" fill="rgb(215,133,45)"/><text x="801.00" y="142.50"></text></g><g><title>profile_pyrt (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (180 samples, 34.29%)</title><rect x="401" y="68" width="404" height="15" fill="rgb(238,10,6)"/><text x="404.00" y="78.50">profile_pyrt (bench_KNeighborsRegressor_default_k3_m_re..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (180 samples, 34.29%)</title><rect x="401" y="84" width="404" height="15" fill="rgb(233,70,9)"/><text x="404.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default_k3_m_r..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.38%)</title><rect x="801" y="100" width="4" height="15" fill="rgb(241,223,52)"/><text x="804.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.38%)</title><rect x="801" y="116" width="4" height="15" fill="rgb(223,222,31)"/><text x="804.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.38%)</title><rect x="801" y="132" width="4" height="15" fill="rgb(223,205,34)"/><text x="804.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.38%)</title><rect x="801" y="148" width="4" height="15" fill="rgb(242,127,23)"/><text x="804.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.38%)</title><rect x="801" y="164" width="4" height="15" fill="rgb(230,70,26)"/><text x="804.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.38%)</title><rect x="801" y="180" width="4" height="15" fill="rgb(254,173,36)"/><text x="804.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.38%)</title><rect x="801" y="196" width="4" height="15" fill="rgb(239,17,26)"/><text x="804.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="801" y="212" width="4" height="15" fill="rgb(252,32,19)"/><text x="804.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="801" y="228" width="4" height="15" fill="rgb(226,193,48)"/><text x="804.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="801" y="244" width="4" height="15" fill="rgb(245,203,52)"/><text x="804.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="801" y="260" width="4" height="15" fill="rgb(250,41,6)"/><text x="804.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="801" y="276" width="4" height="15" fill="rgb(233,152,47)"/><text x="804.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.38%)</title><rect x="801" y="292" width="4" height="15" fill="rgb(238,176,8)"/><text x="804.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="801" y="308" width="4" height="15" fill="rgb(233,71,54)"/><text x="804.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="801" y="324" width="4" height="15" fill="rgb(229,92,17)"/><text x="804.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="801" y="340" width="4" height="15" fill="rgb(229,77,39)"/><text x="804.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="801" y="356" width="4" height="15" fill="rgb(231,191,54)"/><text x="804.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="801" y="372" width="4" height="15" fill="rgb(216,101,8)"/><text x="804.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.38%)</title><rect x="801" y="388" width="4" height="15" fill="rgb(253,127,36)"/><text x="804.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="801" y="404" width="4" height="15" fill="rgb(247,55,6)"/><text x="804.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="801" y="420" width="4" height="15" fill="rgb(244,134,36)"/><text x="804.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="801" y="436" width="4" height="15" fill="rgb(253,6,52)"/><text x="804.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="801" y="452" width="4" height="15" fill="rgb(251,48,8)"/><text x="804.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="801" y="468" width="4" height="15" fill="rgb(245,62,43)"/><text x="804.00" y="478.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="801" y="484" width="4" height="15" fill="rgb(228,216,53)"/><text x="804.00" y="494.50"></text></g><g><title>open64 (libpthread-2.29.so) (2 samples, 0.38%)</title><rect x="801" y="500" width="4" height="15" fill="rgb(227,208,37)"/><text x="804.00" y="510.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.19%)</title><rect x="805" y="164" width="2" height="15" fill="rgb(216,126,16)"/><text x="808.00" y="174.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.19%)</title><rect x="805" y="180" width="2" height="15" fill="rgb(205,158,20)"/><text x="808.00" y="190.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.19%)</title><rect x="812" y="180" width="2" height="15" fill="rgb(236,110,0)"/><text x="815.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.19%)</title><rect x="814" y="180" width="2" height="15" fill="rgb(205,120,21)"/><text x="817.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.19%)</title><rect x="814" y="196" width="2" height="15" fill="rgb(250,163,19)"/><text x="817.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.19%)</title><rect x="816" y="180" width="3" height="15" fill="rgb(223,198,18)"/><text x="819.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.19%)</title><rect x="816" y="196" width="3" height="15" fill="rgb(238,136,1)"/><text x="819.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (6 samples, 1.14%)</title><rect x="807" y="164" width="14" height="15" fill="rgb(237,147,29)"/><text x="810.00" y="174.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.19%)</title><rect x="819" y="180" width="2" height="15" fill="rgb(215,130,28)"/><text x="822.00" y="190.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.19%)</title><rect x="819" y="196" width="2" height="15" fill="rgb(205,141,2)"/><text x="822.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (2 samples, 0.38%)</title><rect x="821" y="196" width="4" height="15" fill="rgb(215,54,8)"/><text x="824.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="823" y="212" width="2" height="15" fill="rgb(240,40,21)"/><text x="826.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (3 samples, 0.57%)</title><rect x="821" y="180" width="7" height="15" fill="rgb(224,9,52)"/><text x="824.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.19%)</title><rect x="825" y="196" width="3" height="15" fill="rgb(234,165,51)"/><text x="828.00" y="206.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py) (1 samples, 0.19%)</title><rect x="828" y="180" width="2" height="15" fill="rgb(236,185,23)"/><text x="831.00" y="190.50"></text></g><g><title>_check_chunk_size (sklearn/metrics/pairwise.py) (1 samples, 0.19%)</title><rect x="832" y="196" width="2" height="15" fill="rgb(252,203,16)"/><text x="835.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/metrics/pairwise.py) (1 samples, 0.19%)</title><rect x="832" y="212" width="2" height="15" fill="rgb(239,193,7)"/><text x="835.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.19%)</title><rect x="832" y="228" width="2" height="15" fill="rgb(251,28,24)"/><text x="835.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.19%)</title><rect x="832" y="244" width="2" height="15" fill="rgb(222,124,28)"/><text x="835.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="855" y="324" width="2" height="15" fill="rgb(233,31,51)"/><text x="858.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="855" y="340" width="2" height="15" fill="rgb(232,226,10)"/><text x="858.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="855" y="356" width="2" height="15" fill="rgb(224,176,26)"/><text x="858.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="855" y="372" width="2" height="15" fill="rgb(227,27,36)"/><text x="858.00" y="382.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.19%)</title><rect x="855" y="388" width="2" height="15" fill="rgb(215,135,26)"/><text x="858.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="855" y="404" width="2" height="15" fill="rgb(241,135,31)"/><text x="858.00" y="414.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (61 samples, 11.62%)</title><rect x="834" y="212" width="137" height="15" fill="rgb(254,102,11)"/><text x="837.00" y="222.50">argpartition (&lt;__..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (61 samples, 11.62%)</title><rect x="834" y="228" width="137" height="15" fill="rgb(237,6,15)"/><text x="837.00" y="238.50">array_implement_a..</text></g><g><title>argpartition (numpy/core/fromnumeric.py) (61 samples, 11.62%)</title><rect x="834" y="244" width="137" height="15" fill="rgb(229,188,21)"/><text x="837.00" y="254.50">argpartition (num..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (60 samples, 11.43%)</title><rect x="837" y="260" width="134" height="15" fill="rgb(207,156,18)"/><text x="840.00" y="270.50">_wrapfunc (numpy..</text></g><g><title>array_argpartition (methods.c) (60 samples, 11.43%)</title><rect x="837" y="276" width="134" height="15" fill="rgb(205,141,25)"/><text x="840.00" y="286.50">array_argpartiti..</text></g><g><title>PyArray_ArgPartition (item_selection.c) (59 samples, 11.24%)</title><rect x="839" y="292" width="132" height="15" fill="rgb(249,5,30)"/><text x="842.00" y="302.50">PyArray_ArgParti..</text></g><g><title>_new_argsortlike (item_selection.c) (59 samples, 11.24%)</title><rect x="839" y="308" width="132" height="15" fill="rgb(218,213,53)"/><text x="842.00" y="318.50">_new_argsortlike..</text></g><g><title>aintroselect_double (selection.c.src) (51 samples, 9.71%)</title><rect x="857" y="324" width="114" height="15" fill="rgb(215,174,16)"/><text x="860.00" y="334.50">aintroselect_d..</text></g><g><title>adumb_select_double (selection.c.src) (50 samples, 9.52%)</title><rect x="859" y="340" width="112" height="15" fill="rgb(206,32,0)"/><text x="862.00" y="350.50">adumb_select_..</text></g><g><title>DOUBLE_LT (npysort_common.h) (34 samples, 6.48%)</title><rect x="895" y="356" width="76" height="15" fill="rgb(237,1,15)"/><text x="898.00" y="366.50">DOUBLE_L..</text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (7 samples, 1.33%)</title><rect x="971" y="212" width="16" height="15" fill="rgb(221,170,17)"/><text x="974.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 1.33%)</title><rect x="971" y="228" width="16" height="15" fill="rgb(242,200,16)"/><text x="974.00" y="238.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (7 samples, 1.33%)</title><rect x="971" y="244" width="16" height="15" fill="rgb(242,224,47)"/><text x="974.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (7 samples, 1.33%)</title><rect x="971" y="260" width="16" height="15" fill="rgb(217,29,43)"/><text x="974.00" y="270.50"></text></g><g><title>array_argsort (methods.c) (7 samples, 1.33%)</title><rect x="971" y="276" width="16" height="15" fill="rgb(215,74,13)"/><text x="974.00" y="286.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (7 samples, 1.33%)</title><rect x="971" y="292" width="16" height="15" fill="rgb(221,8,48)"/><text x="974.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c) (7 samples, 1.33%)</title><rect x="971" y="308" width="16" height="15" fill="rgb(223,141,7)"/><text x="974.00" y="318.50"></text></g><g><title>aquicksort_double (quicksort.c.src) (1 samples, 0.19%)</title><rect x="985" y="324" width="2" height="15" fill="rgb(245,105,29)"/><text x="988.00" y="334.50"></text></g><g><title>DOUBLE_LT (npysort_common.h) (1 samples, 0.19%)</title><rect x="985" y="340" width="2" height="15" fill="rgb(248,219,26)"/><text x="988.00" y="350.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c) (2 samples, 0.38%)</title><rect x="987" y="228" width="5" height="15" fill="rgb(210,167,41)"/><text x="990.00" y="238.50"></text></g><g><title>check_and_adjust_index (common.h) (1 samples, 0.19%)</title><rect x="989" y="244" width="3" height="15" fill="rgb(214,5,46)"/><text x="992.00" y="254.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.19%)</title><rect x="992" y="228" width="2" height="15" fill="rgb(227,91,16)"/><text x="995.00" y="238.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.19%)</title><rect x="992" y="244" width="2" height="15" fill="rgb(211,224,53)"/><text x="995.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.19%)</title><rect x="992" y="260" width="2" height="15" fill="rgb(251,44,42)"/><text x="995.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.19%)</title><rect x="992" y="276" width="2" height="15" fill="rgb(214,147,42)"/><text x="995.00" y="286.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py) (75 samples, 14.29%)</title><rect x="834" y="196" width="169" height="15" fill="rgb(226,101,32)"/><text x="837.00" y="206.50">_kneighbors_reduce_fu..</text></g><g><title>array_subscript (mapping.c) (7 samples, 1.33%)</title><rect x="987" y="212" width="16" height="15" fill="rgb(219,45,0)"/><text x="990.00" y="222.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (4 samples, 0.76%)</title><rect x="994" y="228" width="9" height="15" fill="rgb(234,95,43)"/><text x="997.00" y="238.50"></text></g><g><title>gen_batches (sklearn/utils/__init__.py) (1 samples, 0.19%)</title><rect x="1003" y="196" width="2" height="15" fill="rgb(226,208,34)"/><text x="1006.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="1005" y="228" width="2" height="15" fill="rgb(231,171,21)"/><text x="1008.00" y="238.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.19%)</title><rect x="1005" y="244" width="2" height="15" fill="rgb(207,53,27)"/><text x="1008.00" y="254.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.19%)</title><rect x="1005" y="260" width="2" height="15" fill="rgb(211,37,54)"/><text x="1008.00" y="270.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.19%)</title><rect x="1005" y="276" width="2" height="15" fill="rgb(229,191,15)"/><text x="1008.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1005" y="292" width="2" height="15" fill="rgb(205,122,43)"/><text x="1008.00" y="302.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py) (1 samples, 0.19%)</title><rect x="1007" y="228" width="3" height="15" fill="rgb(209,132,25)"/><text x="1010.00" y="238.50"></text></g><g><title>effective_n_jobs (joblib/_parallel_backends.py) (1 samples, 0.19%)</title><rect x="1007" y="244" width="3" height="15" fill="rgb(234,49,19)"/><text x="1010.00" y="254.50"></text></g><g><title>in_main_thread (joblib/_parallel_backends.py) (1 samples, 0.19%)</title><rect x="1007" y="260" width="3" height="15" fill="rgb(233,135,50)"/><text x="1010.00" y="270.50"></text></g><g><title>_mm_mul_pd (emmintrin.h) (1 samples, 0.19%)</title><rect x="1012" y="356" width="2" height="15" fill="rgb(234,91,40)"/><text x="1015.00" y="366.50"></text></g><g><title>array_multiply (number.c) (3 samples, 0.57%)</title><rect x="1012" y="244" width="7" height="15" fill="rgb(221,184,54)"/><text x="1015.00" y="254.50"></text></g><g><title>try_binary_elide (temp_elide.c) (3 samples, 0.57%)</title><rect x="1012" y="260" width="7" height="15" fill="rgb(243,139,7)"/><text x="1015.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.57%)</title><rect x="1012" y="276" width="7" height="15" fill="rgb(217,73,44)"/><text x="1015.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.57%)</title><rect x="1012" y="292" width="7" height="15" fill="rgb(216,106,53)"/><text x="1015.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.57%)</title><rect x="1012" y="308" width="7" height="15" fill="rgb(250,65,33)"/><text x="1015.00" y="318.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (3 samples, 0.57%)</title><rect x="1012" y="324" width="7" height="15" fill="rgb(253,190,6)"/><text x="1015.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_multiply_DOUBLE (simd.inc.src) (3 samples, 0.57%)</title><rect x="1012" y="340" width="7" height="15" fill="rgb(234,181,51)"/><text x="1015.00" y="350.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.38%)</title><rect x="1014" y="356" width="5" height="15" fill="rgb(249,216,40)"/><text x="1017.00" y="366.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.19%)</title><rect x="1025" y="276" width="3" height="15" fill="rgb(206,60,42)"/><text x="1028.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (2 samples, 0.38%)</title><rect x="1028" y="276" width="4" height="15" fill="rgb(234,40,20)"/><text x="1031.00" y="286.50"></text></g><g><title>0x7f604ca26e50 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1030" y="292" width="2" height="15" fill="rgb(220,127,32)"/><text x="1033.00" y="302.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.19%)</title><rect x="1032" y="276" width="2" height="15" fill="rgb(232,159,14)"/><text x="1035.00" y="286.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.19%)</title><rect x="1034" y="276" width="3" height="15" fill="rgb(205,123,33)"/><text x="1037.00" y="286.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.19%)</title><rect x="1034" y="292" width="3" height="15" fill="rgb(208,153,19)"/><text x="1037.00" y="302.50"></text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py) (10 samples, 1.90%)</title><rect x="1019" y="244" width="22" height="15" fill="rgb(242,79,6)"/><text x="1022.00" y="254.50">c..</text></g><g><title>check_array (sklearn/utils/validation.py) (10 samples, 1.90%)</title><rect x="1019" y="260" width="22" height="15" fill="rgb(241,84,37)"/><text x="1022.00" y="270.50">c..</text></g><g><title>simplefilter (warnings.py) (2 samples, 0.38%)</title><rect x="1037" y="276" width="4" height="15" fill="rgb(225,67,10)"/><text x="1040.00" y="286.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.38%)</title><rect x="1037" y="292" width="4" height="15" fill="rgb(235,125,30)"/><text x="1040.00" y="302.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py) (1 samples, 0.19%)</title><rect x="1043" y="292" width="3" height="15" fill="rgb(251,104,37)"/><text x="1046.00" y="302.50"></text></g><g><title>array_einsum (multiarraymodule.c) (1 samples, 0.19%)</title><rect x="1043" y="308" width="3" height="15" fill="rgb(242,16,53)"/><text x="1046.00" y="318.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src) (1 samples, 0.19%)</title><rect x="1043" y="324" width="3" height="15" fill="rgb(210,81,54)"/><text x="1046.00" y="334.50"></text></g><g><title>unbuffered_loop_nop2_ndim2 (einsum.c.src) (1 samples, 0.19%)</title><rect x="1043" y="340" width="3" height="15" fill="rgb(251,229,7)"/><text x="1046.00" y="350.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.19%)</title><rect x="1046" y="292" width="2" height="15" fill="rgb(238,212,45)"/><text x="1049.00" y="302.50"></text></g><g><title>row_norms (sklearn/utils/extmath.py) (4 samples, 0.76%)</title><rect x="1041" y="244" width="9" height="15" fill="rgb(223,18,42)"/><text x="1044.00" y="254.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;) (4 samples, 0.76%)</title><rect x="1041" y="260" width="9" height="15" fill="rgb(247,34,13)"/><text x="1044.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.76%)</title><rect x="1041" y="276" width="9" height="15" fill="rgb(217,135,4)"/><text x="1044.00" y="286.50"></text></g><g><title>npy_cache_import (npy_import.h) (1 samples, 0.19%)</title><rect x="1048" y="292" width="2" height="15" fill="rgb(233,152,53)"/><text x="1051.00" y="302.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.76%)</title><rect x="1050" y="260" width="9" height="15" fill="rgb(215,81,27)"/><text x="1053.00" y="270.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.95%)</title><rect x="1059" y="260" width="11" height="15" fill="rgb(205,0,22)"/><text x="1062.00" y="270.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.38%)</title><rect x="1070" y="388" width="5" height="15" fill="rgb(214,136,43)"/><text x="1073.00" y="398.50"></text></g><g><title>sched_yield (libc-2.29.so) (2 samples, 0.38%)</title><rect x="1070" y="404" width="5" height="15" fill="rgb(250,78,23)"/><text x="1073.00" y="414.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (3 samples, 0.57%)</title><rect x="1070" y="308" width="7" height="15" fill="rgb(222,103,23)"/><text x="1073.00" y="318.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.57%)</title><rect x="1070" y="324" width="7" height="15" fill="rgb(225,50,21)"/><text x="1073.00" y="334.50"></text></g><g><title>dgemm_thread_tn (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.57%)</title><rect x="1070" y="340" width="7" height="15" fill="rgb(208,208,44)"/><text x="1073.00" y="350.50"></text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.57%)</title><rect x="1070" y="356" width="7" height="15" fill="rgb(237,208,31)"/><text x="1073.00" y="366.50"></text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.57%)</title><rect x="1070" y="372" width="7" height="15" fill="rgb(240,62,39)"/><text x="1073.00" y="382.50"></text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="1075" y="388" width="2" height="15" fill="rgb(229,217,50)"/><text x="1078.00" y="398.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="1075" y="404" width="2" height="15" fill="rgb(229,152,22)"/><text x="1078.00" y="414.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (13 samples, 2.48%)</title><rect x="1050" y="244" width="29" height="15" fill="rgb(239,45,48)"/><text x="1053.00" y="254.50">sa..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.76%)</title><rect x="1070" y="260" width="9" height="15" fill="rgb(210,173,32)"/><text x="1073.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.76%)</title><rect x="1070" y="276" width="9" height="15" fill="rgb(231,151,52)"/><text x="1073.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (4 samples, 0.76%)</title><rect x="1070" y="292" width="9" height="15" fill="rgb(236,109,43)"/><text x="1073.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="1077" y="308" width="2" height="15" fill="rgb(236,50,1)"/><text x="1080.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="1079" y="276" width="3" height="15" fill="rgb(236,0,19)"/><text x="1082.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.19%)</title><rect x="1079" y="292" width="3" height="15" fill="rgb(244,191,6)"/><text x="1082.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.19%)</title><rect x="1079" y="308" width="3" height="15" fill="rgb(242,198,25)"/><text x="1082.00" y="318.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1082" y="276" width="2" height="15" fill="rgb(250,158,39)"/><text x="1085.00" y="286.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (5 samples, 0.95%)</title><rect x="1084" y="356" width="11" height="15" fill="rgb(249,201,51)"/><text x="1087.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src) (11 samples, 2.10%)</title><rect x="1084" y="308" width="25" height="15" fill="rgb(250,129,32)"/><text x="1087.00" y="318.50">D..</text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (11 samples, 2.10%)</title><rect x="1084" y="324" width="25" height="15" fill="rgb(212,224,22)"/><text x="1087.00" y="334.50">r..</text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (11 samples, 2.10%)</title><rect x="1084" y="340" width="25" height="15" fill="rgb(246,17,48)"/><text x="1087.00" y="350.50">s..</text></g><g><title>_mm_store_pd (emmintrin.h) (6 samples, 1.14%)</title><rect x="1095" y="356" width="14" height="15" fill="rgb(231,129,40)"/><text x="1098.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1109" y="308" width="2" height="15" fill="rgb(242,202,9)"/><text x="1112.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1109" y="324" width="2" height="15" fill="rgb(240,38,41)"/><text x="1112.00" y="334.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c) (1 samples, 0.19%)</title><rect x="1111" y="308" width="2" height="15" fill="rgb(234,89,20)"/><text x="1114.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.19%)</title><rect x="1113" y="308" width="2" height="15" fill="rgb(232,60,47)"/><text x="1116.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.19%)</title><rect x="1113" y="324" width="2" height="15" fill="rgb(239,74,39)"/><text x="1116.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.19%)</title><rect x="1113" y="340" width="2" height="15" fill="rgb(223,123,42)"/><text x="1116.00" y="350.50"></text></g><g><title>0x7f604ca30f3a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1113" y="356" width="2" height="15" fill="rgb(216,169,17)"/><text x="1116.00" y="366.50"></text></g><g><title>0x7f604ca30e5f (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1115" y="356" width="3" height="15" fill="rgb(232,216,29)"/><text x="1118.00" y="366.50"></text></g><g><title>0x7f604ca30f46 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1118" y="356" width="2" height="15" fill="rgb(207,95,45)"/><text x="1121.00" y="366.50"></text></g><g><title>0x7f604ca30f53 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1120" y="356" width="2" height="15" fill="rgb(213,217,32)"/><text x="1123.00" y="366.50"></text></g><g><title>0x7f604ca30f58 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1122" y="356" width="2" height="15" fill="rgb(221,188,0)"/><text x="1125.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (22 samples, 4.19%)</title><rect x="1084" y="292" width="49" height="15" fill="rgb(253,171,21)"/><text x="1087.00" y="302.50">iter..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (8 samples, 1.52%)</title><rect x="1115" y="308" width="18" height="15" fill="rgb(254,46,25)"/><text x="1118.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (8 samples, 1.52%)</title><rect x="1115" y="324" width="18" height="15" fill="rgb(252,213,12)"/><text x="1118.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (8 samples, 1.52%)</title><rect x="1115" y="340" width="18" height="15" fill="rgb(210,75,4)"/><text x="1118.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (4 samples, 0.76%)</title><rect x="1124" y="356" width="9" height="15" fill="rgb(238,170,35)"/><text x="1127.00" y="366.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py) (153 samples, 29.14%)</title><rect x="830" y="180" width="344" height="15" fill="rgb(215,92,3)"/><text x="833.00" y="190.50">pairwise_distances_chunked (sklearn/metrics/pa..</text></g><g><title>pairwise_distances (sklearn/metrics/pairwise.py) (75 samples, 14.29%)</title><rect x="1005" y="196" width="169" height="15" fill="rgb(223,217,28)"/><text x="1008.00" y="206.50">pairwise_distances (s..</text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py) (75 samples, 14.29%)</title><rect x="1005" y="212" width="169" height="15" fill="rgb(244,104,8)"/><text x="1008.00" y="222.50">_parallel_pairwise (s..</text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py) (73 samples, 13.90%)</title><rect x="1010" y="228" width="164" height="15" fill="rgb(234,113,44)"/><text x="1013.00" y="238.50">euclidean_distances (..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (42 samples, 8.00%)</title><rect x="1079" y="244" width="95" height="15" fill="rgb(210,109,11)"/><text x="1082.00" y="254.50">ufunc_gener..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (42 samples, 8.00%)</title><rect x="1079" y="260" width="95" height="15" fill="rgb(241,221,23)"/><text x="1082.00" y="270.50">PyUFunc_Gen..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (40 samples, 7.62%)</title><rect x="1084" y="276" width="90" height="15" fill="rgb(211,52,48)"/><text x="1087.00" y="286.50">execute_le..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (18 samples, 3.43%)</title><rect x="1133" y="292" width="41" height="15" fill="rgb(228,32,38)"/><text x="1136.00" y="302.50">tri..</text></g><g><title>DOUBLE_maximum (loops.c.src) (18 samples, 3.43%)</title><rect x="1133" y="308" width="41" height="15" fill="rgb(206,135,42)"/><text x="1136.00" y="318.50">DOU..</text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;) (2 samples, 0.38%)</title><rect x="1174" y="228" width="4" height="15" fill="rgb(218,19,27)"/><text x="1177.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.38%)</title><rect x="1174" y="244" width="4" height="15" fill="rgb(234,109,22)"/><text x="1177.00" y="254.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py) (2 samples, 0.38%)</title><rect x="1174" y="260" width="4" height="15" fill="rgb(246,122,14)"/><text x="1177.00" y="270.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py) (160 samples, 30.48%)</title><rect x="821" y="164" width="360" height="15" fill="rgb(248,187,23)"/><text x="824.00" y="174.50">kneighbors (sklearn/neighbors/_base.py)</text></g><g><title>vstack (&lt;__array_function__ internals&gt;) (3 samples, 0.57%)</title><rect x="1174" y="180" width="7" height="15" fill="rgb(243,90,41)"/><text x="1177.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.57%)</title><rect x="1174" y="196" width="7" height="15" fill="rgb(218,160,0)"/><text x="1177.00" y="206.50"></text></g><g><title>vstack (numpy/core/shape_base.py) (3 samples, 0.57%)</title><rect x="1174" y="212" width="7" height="15" fill="rgb(245,159,22)"/><text x="1177.00" y="222.50"></text></g><g><title>concatenate (&lt;__array_function__ internals&gt;) (1 samples, 0.19%)</title><rect x="1178" y="228" width="3" height="15" fill="rgb(208,199,27)"/><text x="1181.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.19%)</title><rect x="1178" y="244" width="3" height="15" fill="rgb(217,72,3)"/><text x="1181.00" y="254.50"></text></g><g><title>array_concatenate (multiarraymodule.c) (1 samples, 0.19%)</title><rect x="1178" y="260" width="3" height="15" fill="rgb(254,1,20)"/><text x="1181.00" y="270.50"></text></g><g><title>PyArray_ConcatenateInto (multiarraymodule.c) (1 samples, 0.19%)</title><rect x="1178" y="276" width="3" height="15" fill="rgb(240,127,16)"/><text x="1181.00" y="286.50"></text></g><g><title>PyArray_ConcatenateArrays (multiarraymodule.c) (1 samples, 0.19%)</title><rect x="1178" y="292" width="3" height="15" fill="rgb(220,71,5)"/><text x="1181.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.19%)</title><rect x="1178" y="308" width="3" height="15" fill="rgb(229,12,25)"/><text x="1181.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.19%)</title><rect x="1178" y="324" width="3" height="15" fill="rgb(237,116,49)"/><text x="1181.00" y="334.50"></text></g><g><title>0x7f604ca30d94 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1178" y="340" width="3" height="15" fill="rgb(249,4,26)"/><text x="1181.00" y="350.50"></text></g><g><title>_count_reduce_items (numpy/core/_methods.py) (1 samples, 0.19%)</title><rect x="1183" y="228" width="2" height="15" fill="rgb(231,212,1)"/><text x="1186.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.19%)</title><rect x="1185" y="244" width="2" height="15" fill="rgb(254,192,37)"/><text x="1188.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.19%)</title><rect x="1185" y="260" width="2" height="15" fill="rgb(231,119,34)"/><text x="1188.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.19%)</title><rect x="1185" y="276" width="2" height="15" fill="rgb(238,186,4)"/><text x="1188.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.19%)</title><rect x="1185" y="292" width="2" height="15" fill="rgb(252,100,6)"/><text x="1188.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.19%)</title><rect x="1185" y="308" width="2" height="15" fill="rgb(241,56,2)"/><text x="1188.00" y="318.50"></text></g><g><title>all (525 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(221,129,31)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (525 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(235,114,35)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py)</text></g><g><title>profile_skl (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (171 samples, 32.57%)</title><rect x="805" y="68" width="385" height="15" fill="rgb(253,2,25)"/><text x="808.00" y="78.50">profile_skl (bench_KNeighborsRegressor_default_k3_m_..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (171 samples, 32.57%)</title><rect x="805" y="84" width="385" height="15" fill="rgb(239,57,10)"/><text x="808.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default_k3_..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (171 samples, 32.57%)</title><rect x="805" y="100" width="385" height="15" fill="rgb(254,82,30)"/><text x="808.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_m_reg_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (171 samples, 32.57%)</title><rect x="805" y="116" width="385" height="15" fill="rgb(223,114,40)"/><text x="808.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (171 samples, 32.57%)</title><rect x="805" y="132" width="385" height="15" fill="rgb(244,173,26)"/><text x="808.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/neighbors/_regression.py) (171 samples, 32.57%)</title><rect x="805" y="148" width="385" height="15" fill="rgb(221,103,49)"/><text x="808.00" y="158.50">predict (sklearn/neighbors/_regression.py)</text></g><g><title>mean (&lt;__array_function__ internals&gt;) (4 samples, 0.76%)</title><rect x="1181" y="164" width="9" height="15" fill="rgb(240,23,41)"/><text x="1184.00" y="174.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.76%)</title><rect x="1181" y="180" width="9" height="15" fill="rgb(216,155,27)"/><text x="1184.00" y="190.50"></text></g><g><title>mean (numpy/core/fromnumeric.py) (4 samples, 0.76%)</title><rect x="1181" y="196" width="9" height="15" fill="rgb(225,158,38)"/><text x="1184.00" y="206.50"></text></g><g><title>_mean (numpy/core/_methods.py) (3 samples, 0.57%)</title><rect x="1183" y="212" width="7" height="15" fill="rgb(254,191,1)"/><text x="1186.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.38%)</title><rect x="1185" y="228" width="5" height="15" fill="rgb(219,21,4)"/><text x="1188.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1187" y="244" width="3" height="15" fill="rgb(234,184,36)"/><text x="1190.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1187" y="260" width="3" height="15" fill="rgb(245,27,0)"/><text x="1190.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.19%)</title><rect x="1187" y="276" width="3" height="15" fill="rgb(212,144,6)"/><text x="1190.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1187" y="292" width="3" height="15" fill="rgb(217,155,14)"/><text x="1190.00" y="302.50"></text></g></g></svg>