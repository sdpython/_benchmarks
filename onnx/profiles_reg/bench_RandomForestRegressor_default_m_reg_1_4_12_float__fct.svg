<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2422" onload="init(evt)" viewBox="0 0 1200 2422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2422" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2405.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2405.00"> </text><g id="frames"><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(240,21,47)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(247,162,54)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(248,71,42)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(242,177,7)"/><text x="13.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(208,152,35)"/><text x="13.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="10" y="948" width="4" height="15" fill="rgb(232,102,38)"/><text x="13.00" y="958.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.41%)</title><rect x="10" y="964" width="4" height="15" fill="rgb(246,134,51)"/><text x="13.00" y="974.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.41%)</title><rect x="10" y="980" width="4" height="15" fill="rgb(253,53,0)"/><text x="13.00" y="990.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.41%)</title><rect x="10" y="996" width="4" height="15" fill="rgb(212,223,11)"/><text x="13.00" y="1006.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="14" y="884" width="5" height="15" fill="rgb(206,144,11)"/><text x="17.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="19" y="900" width="5" height="15" fill="rgb(235,173,52)"/><text x="22.00" y="910.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.41%)</title><rect x="19" y="916" width="5" height="15" fill="rgb(220,224,16)"/><text x="22.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.41%)</title><rect x="19" y="932" width="5" height="15" fill="rgb(212,24,25)"/><text x="22.00" y="942.50"></text></g><g><title>&lt;lambda&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.41%)</title><rect x="19" y="948" width="5" height="15" fill="rgb(221,193,18)"/><text x="22.00" y="958.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.63%)</title><rect x="10" y="292" width="19" height="15" fill="rgb(221,57,47)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="308" width="19" height="15" fill="rgb(230,205,42)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="324" width="19" height="15" fill="rgb(209,162,54)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="340" width="19" height="15" fill="rgb(221,16,22)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="10" y="356" width="19" height="15" fill="rgb(208,86,8)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="372" width="19" height="15" fill="rgb(227,221,53)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.63%)</title><rect x="10" y="388" width="19" height="15" fill="rgb(249,18,17)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="404" width="19" height="15" fill="rgb(247,114,40)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="420" width="19" height="15" fill="rgb(221,172,45)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="436" width="19" height="15" fill="rgb(232,222,23)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="10" y="452" width="19" height="15" fill="rgb(228,220,30)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="468" width="19" height="15" fill="rgb(218,43,36)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.63%)</title><rect x="10" y="484" width="19" height="15" fill="rgb(239,44,32)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="500" width="19" height="15" fill="rgb(239,34,50)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="516" width="19" height="15" fill="rgb(221,194,4)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="532" width="19" height="15" fill="rgb(247,207,21)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="10" y="548" width="19" height="15" fill="rgb(227,229,12)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="564" width="19" height="15" fill="rgb(244,107,15)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.63%)</title><rect x="10" y="580" width="19" height="15" fill="rgb(238,166,41)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="596" width="19" height="15" fill="rgb(254,167,51)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="612" width="19" height="15" fill="rgb(242,35,17)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="628" width="19" height="15" fill="rgb(238,167,17)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="644" width="19" height="15" fill="rgb(221,117,53)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="660" width="19" height="15" fill="rgb(254,89,35)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="676" width="19" height="15" fill="rgb(233,134,21)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="10" y="692" width="19" height="15" fill="rgb(232,124,18)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="708" width="19" height="15" fill="rgb(247,171,20)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.63%)</title><rect x="10" y="724" width="19" height="15" fill="rgb(214,13,41)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="740" width="19" height="15" fill="rgb(229,15,12)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="756" width="19" height="15" fill="rgb(238,164,30)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="772" width="19" height="15" fill="rgb(244,117,42)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="10" y="788" width="19" height="15" fill="rgb(241,219,12)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="804" width="19" height="15" fill="rgb(221,112,9)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.63%)</title><rect x="10" y="820" width="19" height="15" fill="rgb(210,12,41)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.63%)</title><rect x="10" y="836" width="19" height="15" fill="rgb(225,115,53)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.63%)</title><rect x="10" y="852" width="19" height="15" fill="rgb(232,139,26)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 1.22%)</title><rect x="14" y="868" width="15" height="15" fill="rgb(233,36,51)"/><text x="17.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.82%)</title><rect x="19" y="884" width="10" height="15" fill="rgb(240,208,50)"/><text x="22.00" y="894.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.41%)</title><rect x="24" y="900" width="5" height="15" fill="rgb(206,130,31)"/><text x="27.00" y="910.50"></text></g><g><title>_get_sep (posixpath.py) (1 samples, 0.41%)</title><rect x="24" y="916" width="5" height="15" fill="rgb(231,77,54)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="788" width="5" height="15" fill="rgb(214,11,27)"/><text x="32.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="804" width="5" height="15" fill="rgb(221,121,31)"/><text x="32.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="820" width="5" height="15" fill="rgb(242,2,53)"/><text x="32.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="836" width="5" height="15" fill="rgb(208,87,13)"/><text x="32.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="852" width="5" height="15" fill="rgb(251,84,37)"/><text x="32.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.41%)</title><rect x="29" y="868" width="5" height="15" fill="rgb(244,169,47)"/><text x="32.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="884" width="5" height="15" fill="rgb(211,189,12)"/><text x="32.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="900" width="5" height="15" fill="rgb(214,133,2)"/><text x="32.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="916" width="5" height="15" fill="rgb(220,163,13)"/><text x="32.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="932" width="5" height="15" fill="rgb(246,206,29)"/><text x="32.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="948" width="5" height="15" fill="rgb(205,58,41)"/><text x="32.00" y="958.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="964" width="5" height="15" fill="rgb(231,69,48)"/><text x="32.00" y="974.50"></text></g><g><title>__close (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="29" y="980" width="5" height="15" fill="rgb(217,185,43)"/><text x="32.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="29" y="500" width="9" height="15" fill="rgb(226,198,37)"/><text x="32.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="29" y="516" width="9" height="15" fill="rgb(205,172,13)"/><text x="32.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="29" y="532" width="9" height="15" fill="rgb(229,107,26)"/><text x="32.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="29" y="548" width="9" height="15" fill="rgb(226,71,44)"/><text x="32.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="29" y="564" width="9" height="15" fill="rgb(214,83,45)"/><text x="32.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.82%)</title><rect x="29" y="580" width="9" height="15" fill="rgb(233,107,34)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="29" y="596" width="9" height="15" fill="rgb(211,8,39)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="29" y="612" width="9" height="15" fill="rgb(224,177,26)"/><text x="32.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="29" y="628" width="9" height="15" fill="rgb(237,18,35)"/><text x="32.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="29" y="644" width="9" height="15" fill="rgb(226,145,13)"/><text x="32.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="29" y="660" width="9" height="15" fill="rgb(224,127,11)"/><text x="32.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.82%)</title><rect x="29" y="676" width="9" height="15" fill="rgb(237,224,41)"/><text x="32.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="29" y="692" width="9" height="15" fill="rgb(227,123,9)"/><text x="32.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="29" y="708" width="9" height="15" fill="rgb(207,86,51)"/><text x="32.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="29" y="724" width="9" height="15" fill="rgb(237,155,40)"/><text x="32.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="29" y="740" width="9" height="15" fill="rgb(240,43,9)"/><text x="32.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="29" y="756" width="9" height="15" fill="rgb(214,140,28)"/><text x="32.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.82%)</title><rect x="29" y="772" width="9" height="15" fill="rgb(238,79,37)"/><text x="32.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="788" width="4" height="15" fill="rgb(215,41,53)"/><text x="37.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="804" width="4" height="15" fill="rgb(252,163,47)"/><text x="37.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="820" width="4" height="15" fill="rgb(211,132,35)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="836" width="4" height="15" fill="rgb(228,157,24)"/><text x="37.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="852" width="4" height="15" fill="rgb(206,150,32)"/><text x="37.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="34" y="868" width="4" height="15" fill="rgb(227,39,5)"/><text x="37.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="884" width="4" height="15" fill="rgb(240,163,3)"/><text x="37.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.41%)</title><rect x="34" y="900" width="4" height="15" fill="rgb(254,28,20)"/><text x="37.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="916" width="4" height="15" fill="rgb(234,118,47)"/><text x="37.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="932" width="4" height="15" fill="rgb(216,178,31)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="948" width="4" height="15" fill="rgb(214,28,24)"/><text x="37.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="964" width="4" height="15" fill="rgb(220,138,11)"/><text x="37.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="980" width="4" height="15" fill="rgb(253,34,28)"/><text x="37.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="34" y="996" width="4" height="15" fill="rgb(251,56,23)"/><text x="37.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="1012" width="4" height="15" fill="rgb(212,122,23)"/><text x="37.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.41%)</title><rect x="34" y="1028" width="4" height="15" fill="rgb(210,87,6)"/><text x="37.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.41%)</title><rect x="34" y="1044" width="4" height="15" fill="rgb(245,213,40)"/><text x="37.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.41%)</title><rect x="34" y="1060" width="4" height="15" fill="rgb(227,143,28)"/><text x="37.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.41%)</title><rect x="34" y="1076" width="4" height="15" fill="rgb(205,117,13)"/><text x="37.00" y="1086.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py) (1 samples, 0.41%)</title><rect x="38" y="900" width="5" height="15" fill="rgb(206,168,31)"/><text x="41.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="916" width="5" height="15" fill="rgb(226,69,26)"/><text x="41.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="932" width="5" height="15" fill="rgb(230,69,54)"/><text x="41.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="948" width="5" height="15" fill="rgb(249,205,36)"/><text x="41.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="38" y="964" width="5" height="15" fill="rgb(254,197,14)"/><text x="41.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="980" width="5" height="15" fill="rgb(245,198,31)"/><text x="41.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py) (1 samples, 0.41%)</title><rect x="38" y="996" width="5" height="15" fill="rgb(246,4,35)"/><text x="41.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1012" width="5" height="15" fill="rgb(242,59,12)"/><text x="41.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1028" width="5" height="15" fill="rgb(211,25,3)"/><text x="41.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1044" width="5" height="15" fill="rgb(235,29,42)"/><text x="41.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1060" width="5" height="15" fill="rgb(225,145,28)"/><text x="41.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1076" width="5" height="15" fill="rgb(227,208,14)"/><text x="41.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1092" width="5" height="15" fill="rgb(252,67,9)"/><text x="41.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="38" y="1108" width="5" height="15" fill="rgb(228,179,33)"/><text x="41.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1124" width="5" height="15" fill="rgb(214,98,19)"/><text x="41.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py) (1 samples, 0.41%)</title><rect x="38" y="1140" width="5" height="15" fill="rgb(212,180,30)"/><text x="41.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1156" width="5" height="15" fill="rgb(207,148,54)"/><text x="41.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1172" width="5" height="15" fill="rgb(236,111,10)"/><text x="41.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1188" width="5" height="15" fill="rgb(254,26,46)"/><text x="41.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="38" y="1204" width="5" height="15" fill="rgb(205,7,35)"/><text x="41.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1220" width="5" height="15" fill="rgb(208,50,24)"/><text x="41.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py) (1 samples, 0.41%)</title><rect x="38" y="1236" width="5" height="15" fill="rgb(218,211,24)"/><text x="41.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1252" width="5" height="15" fill="rgb(253,49,43)"/><text x="41.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1268" width="5" height="15" fill="rgb(241,109,5)"/><text x="41.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1284" width="5" height="15" fill="rgb(248,198,11)"/><text x="41.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="38" y="1300" width="5" height="15" fill="rgb(229,121,15)"/><text x="41.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1316" width="5" height="15" fill="rgb(233,81,54)"/><text x="41.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py) (1 samples, 0.41%)</title><rect x="38" y="1332" width="5" height="15" fill="rgb(230,186,23)"/><text x="41.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1348" width="5" height="15" fill="rgb(216,114,29)"/><text x="41.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1364" width="5" height="15" fill="rgb(220,102,40)"/><text x="41.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1380" width="5" height="15" fill="rgb(251,36,48)"/><text x="41.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="38" y="1396" width="5" height="15" fill="rgb(246,181,30)"/><text x="41.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1412" width="5" height="15" fill="rgb(221,120,24)"/><text x="41.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/queues.py) (1 samples, 0.41%)</title><rect x="38" y="1428" width="5" height="15" fill="rgb(214,135,24)"/><text x="41.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1444" width="5" height="15" fill="rgb(244,32,26)"/><text x="41.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1460" width="5" height="15" fill="rgb(246,135,47)"/><text x="41.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1476" width="5" height="15" fill="rgb(206,187,17)"/><text x="41.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="38" y="1492" width="5" height="15" fill="rgb(249,158,15)"/><text x="41.00" y="1502.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="38" y="1508" width="5" height="15" fill="rgb(235,214,37)"/><text x="41.00" y="1518.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="38" y="1524" width="5" height="15" fill="rgb(251,61,8)"/><text x="41.00" y="1534.50"></text></g><g><title>lseek64 (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="38" y="1540" width="5" height="15" fill="rgb(251,216,31)"/><text x="41.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="29" y="308" width="19" height="15" fill="rgb(214,137,49)"/><text x="32.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="29" y="324" width="19" height="15" fill="rgb(234,205,40)"/><text x="32.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="29" y="340" width="19" height="15" fill="rgb(230,135,31)"/><text x="32.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="29" y="356" width="19" height="15" fill="rgb(223,145,26)"/><text x="32.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="29" y="372" width="19" height="15" fill="rgb(228,193,39)"/><text x="32.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (4 samples, 1.63%)</title><rect x="29" y="388" width="19" height="15" fill="rgb(240,119,21)"/><text x="32.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="29" y="404" width="19" height="15" fill="rgb(246,125,46)"/><text x="32.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="29" y="420" width="19" height="15" fill="rgb(223,111,10)"/><text x="32.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="29" y="436" width="19" height="15" fill="rgb(206,37,11)"/><text x="32.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="29" y="452" width="19" height="15" fill="rgb(222,44,34)"/><text x="32.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="29" y="468" width="19" height="15" fill="rgb(208,217,45)"/><text x="32.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (4 samples, 1.63%)</title><rect x="29" y="484" width="19" height="15" fill="rgb(218,170,53)"/><text x="32.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="500" width="10" height="15" fill="rgb(241,111,19)"/><text x="41.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="516" width="10" height="15" fill="rgb(209,19,22)"/><text x="41.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="532" width="10" height="15" fill="rgb(221,97,28)"/><text x="41.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="548" width="10" height="15" fill="rgb(205,21,34)"/><text x="41.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="564" width="10" height="15" fill="rgb(226,57,31)"/><text x="41.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="38" y="580" width="10" height="15" fill="rgb(213,191,54)"/><text x="41.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="596" width="10" height="15" fill="rgb(241,174,12)"/><text x="41.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (2 samples, 0.82%)</title><rect x="38" y="612" width="10" height="15" fill="rgb(237,45,51)"/><text x="41.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="628" width="10" height="15" fill="rgb(253,168,14)"/><text x="41.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="644" width="10" height="15" fill="rgb(218,154,54)"/><text x="41.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="660" width="10" height="15" fill="rgb(216,55,52)"/><text x="41.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="38" y="676" width="10" height="15" fill="rgb(238,148,25)"/><text x="41.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="692" width="10" height="15" fill="rgb(226,147,47)"/><text x="41.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (2 samples, 0.82%)</title><rect x="38" y="708" width="10" height="15" fill="rgb(237,199,47)"/><text x="41.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="724" width="10" height="15" fill="rgb(208,98,1)"/><text x="41.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="740" width="10" height="15" fill="rgb(223,113,44)"/><text x="41.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="756" width="10" height="15" fill="rgb(221,172,49)"/><text x="41.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="38" y="772" width="10" height="15" fill="rgb(251,96,54)"/><text x="41.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="788" width="10" height="15" fill="rgb(250,188,15)"/><text x="41.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (2 samples, 0.82%)</title><rect x="38" y="804" width="10" height="15" fill="rgb(213,121,23)"/><text x="41.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="820" width="10" height="15" fill="rgb(219,105,21)"/><text x="41.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="836" width="10" height="15" fill="rgb(225,187,22)"/><text x="41.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="852" width="10" height="15" fill="rgb(236,70,1)"/><text x="41.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="38" y="868" width="10" height="15" fill="rgb(245,173,4)"/><text x="41.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="884" width="10" height="15" fill="rgb(211,104,44)"/><text x="41.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/my_exceptions.py) (1 samples, 0.41%)</title><rect x="43" y="900" width="5" height="15" fill="rgb(210,88,34)"/><text x="46.00" y="910.50"></text></g><g><title>_mk_common_exceptions (joblib/my_exceptions.py) (1 samples, 0.41%)</title><rect x="43" y="916" width="5" height="15" fill="rgb(234,200,21)"/><text x="46.00" y="926.50"></text></g><g><title>_mk_exception (joblib/my_exceptions.py) (1 samples, 0.41%)</title><rect x="43" y="932" width="5" height="15" fill="rgb(216,143,23)"/><text x="46.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.67%)</title><rect x="10" y="196" width="43" height="15" fill="rgb(210,108,36)"/><text x="13.00" y="206.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.67%)</title><rect x="10" y="212" width="43" height="15" fill="rgb(211,18,21)"/><text x="13.00" y="222.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.67%)</title><rect x="10" y="228" width="43" height="15" fill="rgb(226,135,4)"/><text x="13.00" y="238.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.67%)</title><rect x="10" y="244" width="43" height="15" fill="rgb(247,64,16)"/><text x="13.00" y="254.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 3.67%)</title><rect x="10" y="260" width="43" height="15" fill="rgb(223,173,39)"/><text x="13.00" y="270.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.67%)</title><rect x="10" y="276" width="43" height="15" fill="rgb(240,217,31)"/><text x="13.00" y="286.50">_cal..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (5 samples, 2.04%)</title><rect x="29" y="292" width="24" height="15" fill="rgb(239,53,30)"/><text x="32.00" y="302.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="308" width="5" height="15" fill="rgb(253,223,53)"/><text x="51.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="324" width="5" height="15" fill="rgb(208,51,10)"/><text x="51.00" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="340" width="5" height="15" fill="rgb(248,216,27)"/><text x="51.00" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="356" width="5" height="15" fill="rgb(213,130,19)"/><text x="51.00" y="366.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="372" width="5" height="15" fill="rgb(239,87,30)"/><text x="51.00" y="382.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="388" width="5" height="15" fill="rgb(216,142,51)"/><text x="51.00" y="398.50"></text></g><g><title>PyThread_acquire_lock (python3.7) (1 samples, 0.41%)</title><rect x="48" y="404" width="5" height="15" fill="rgb(226,62,28)"/><text x="51.00" y="414.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="48" y="420" width="5" height="15" fill="rgb(251,3,50)"/><text x="51.00" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1476" width="5" height="15" fill="rgb(248,32,43)"/><text x="56.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1492" width="5" height="15" fill="rgb(237,38,13)"/><text x="56.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1508" width="5" height="15" fill="rgb(243,94,7)"/><text x="56.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="53" y="1524" width="5" height="15" fill="rgb(206,152,23)"/><text x="56.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1540" width="5" height="15" fill="rgb(220,60,25)"/><text x="56.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.41%)</title><rect x="53" y="1556" width="5" height="15" fill="rgb(206,128,25)"/><text x="56.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.41%)</title><rect x="53" y="1572" width="5" height="15" fill="rgb(215,66,11)"/><text x="56.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1588" width="5" height="15" fill="rgb(221,112,22)"/><text x="56.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1604" width="5" height="15" fill="rgb(217,156,51)"/><text x="56.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1620" width="5" height="15" fill="rgb(224,167,28)"/><text x="56.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="53" y="1636" width="5" height="15" fill="rgb(207,6,5)"/><text x="56.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1652" width="5" height="15" fill="rgb(229,164,47)"/><text x="56.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.41%)</title><rect x="53" y="1668" width="5" height="15" fill="rgb(247,226,23)"/><text x="56.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py) (1 samples, 0.41%)</title><rect x="53" y="1684" width="5" height="15" fill="rgb(244,24,43)"/><text x="56.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1700" width="5" height="15" fill="rgb(236,141,1)"/><text x="56.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1716" width="5" height="15" fill="rgb(214,102,36)"/><text x="56.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1732" width="5" height="15" fill="rgb(252,177,45)"/><text x="56.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="53" y="1748" width="5" height="15" fill="rgb(208,99,7)"/><text x="56.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1764" width="5" height="15" fill="rgb(229,131,36)"/><text x="56.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py) (1 samples, 0.41%)</title><rect x="53" y="1780" width="5" height="15" fill="rgb(244,67,26)"/><text x="56.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1796" width="5" height="15" fill="rgb(249,204,25)"/><text x="56.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1812" width="5" height="15" fill="rgb(218,53,16)"/><text x="56.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1828" width="5" height="15" fill="rgb(249,169,9)"/><text x="56.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="53" y="1844" width="5" height="15" fill="rgb(252,102,28)"/><text x="56.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1860" width="5" height="15" fill="rgb(207,112,7)"/><text x="56.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py) (1 samples, 0.41%)</title><rect x="53" y="1876" width="5" height="15" fill="rgb(212,57,23)"/><text x="56.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1892" width="5" height="15" fill="rgb(208,70,51)"/><text x="56.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1908" width="5" height="15" fill="rgb(213,8,44)"/><text x="56.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1924" width="5" height="15" fill="rgb(217,87,10)"/><text x="56.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="53" y="1940" width="5" height="15" fill="rgb(229,120,34)"/><text x="56.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1956" width="5" height="15" fill="rgb(251,49,25)"/><text x="56.00" y="1966.50"></text></g><g><title>&lt;module&gt; (asyncio/base_events.py) (1 samples, 0.41%)</title><rect x="53" y="1972" width="5" height="15" fill="rgb(248,55,30)"/><text x="56.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="1988" width="5" height="15" fill="rgb(241,71,53)"/><text x="56.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="2004" width="5" height="15" fill="rgb(233,42,17)"/><text x="56.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="2020" width="5" height="15" fill="rgb(238,51,44)"/><text x="56.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="2036" width="5" height="15" fill="rgb(233,86,53)"/><text x="56.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="2052" width="5" height="15" fill="rgb(243,37,47)"/><text x="56.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="53" y="2068" width="5" height="15" fill="rgb(229,13,44)"/><text x="56.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="2084" width="5" height="15" fill="rgb(207,3,51)"/><text x="56.00" y="2094.50"></text></g><g><title>&lt;module&gt; (asyncio/coroutines.py) (1 samples, 0.41%)</title><rect x="53" y="2100" width="5" height="15" fill="rgb(226,126,53)"/><text x="56.00" y="2110.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="2116" width="5" height="15" fill="rgb(228,39,4)"/><text x="56.00" y="2126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="2132" width="5" height="15" fill="rgb(212,8,27)"/><text x="56.00" y="2142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="2148" width="5" height="15" fill="rgb(210,159,29)"/><text x="56.00" y="2158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="2164" width="5" height="15" fill="rgb(211,148,5)"/><text x="56.00" y="2174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="2180" width="5" height="15" fill="rgb(233,76,17)"/><text x="56.00" y="2190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="53" y="2196" width="5" height="15" fill="rgb(235,229,20)"/><text x="56.00" y="2206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="2212" width="5" height="15" fill="rgb(212,176,5)"/><text x="56.00" y="2222.50"></text></g><g><title>&lt;module&gt; (asyncio/base_futures.py) (1 samples, 0.41%)</title><rect x="53" y="2228" width="5" height="15" fill="rgb(228,131,54)"/><text x="56.00" y="2238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="2244" width="5" height="15" fill="rgb(252,20,43)"/><text x="56.00" y="2254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="2260" width="5" height="15" fill="rgb(242,43,30)"/><text x="56.00" y="2270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="2276" width="5" height="15" fill="rgb(234,219,29)"/><text x="56.00" y="2286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="2292" width="5" height="15" fill="rgb(226,31,3)"/><text x="56.00" y="2302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="2308" width="5" height="15" fill="rgb(206,5,40)"/><text x="56.00" y="2318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="53" y="2324" width="5" height="15" fill="rgb(231,123,9)"/><text x="56.00" y="2334.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="53" y="2340" width="5" height="15" fill="rgb(216,157,29)"/><text x="56.00" y="2350.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="53" y="2356" width="5" height="15" fill="rgb(221,220,33)"/><text x="56.00" y="2366.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="53" y="2372" width="5" height="15" fill="rgb(222,6,22)"/><text x="56.00" y="2382.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.41%)</title><rect x="58" y="1508" width="4" height="15" fill="rgb(236,219,24)"/><text x="61.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="484" width="19" height="15" fill="rgb(214,22,45)"/><text x="56.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="500" width="19" height="15" fill="rgb(250,200,18)"/><text x="56.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="516" width="19" height="15" fill="rgb(237,223,50)"/><text x="56.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="532" width="19" height="15" fill="rgb(237,84,35)"/><text x="56.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="53" y="548" width="19" height="15" fill="rgb(253,185,51)"/><text x="56.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="564" width="19" height="15" fill="rgb(243,51,50)"/><text x="56.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 1.63%)</title><rect x="53" y="580" width="19" height="15" fill="rgb(214,81,38)"/><text x="56.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="596" width="19" height="15" fill="rgb(208,167,28)"/><text x="56.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="612" width="19" height="15" fill="rgb(244,110,37)"/><text x="56.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="628" width="19" height="15" fill="rgb(226,2,47)"/><text x="56.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="53" y="644" width="19" height="15" fill="rgb(243,112,38)"/><text x="56.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="660" width="19" height="15" fill="rgb(240,58,19)"/><text x="56.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 1.63%)</title><rect x="53" y="676" width="19" height="15" fill="rgb(214,57,26)"/><text x="56.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="692" width="19" height="15" fill="rgb(233,112,9)"/><text x="56.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="708" width="19" height="15" fill="rgb(243,19,15)"/><text x="56.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="724" width="19" height="15" fill="rgb(237,73,42)"/><text x="56.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="53" y="740" width="19" height="15" fill="rgb(242,61,8)"/><text x="56.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="756" width="19" height="15" fill="rgb(223,101,13)"/><text x="56.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 1.63%)</title><rect x="53" y="772" width="19" height="15" fill="rgb(245,228,31)"/><text x="56.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="788" width="19" height="15" fill="rgb(248,96,24)"/><text x="56.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="804" width="19" height="15" fill="rgb(226,0,32)"/><text x="56.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="820" width="19" height="15" fill="rgb(243,223,1)"/><text x="56.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="53" y="836" width="19" height="15" fill="rgb(248,122,17)"/><text x="56.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="852" width="19" height="15" fill="rgb(232,110,39)"/><text x="56.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 1.63%)</title><rect x="53" y="868" width="19" height="15" fill="rgb(222,118,12)"/><text x="56.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="884" width="19" height="15" fill="rgb(211,198,36)"/><text x="56.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="900" width="19" height="15" fill="rgb(229,217,11)"/><text x="56.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="916" width="19" height="15" fill="rgb(233,22,32)"/><text x="56.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="932" width="19" height="15" fill="rgb(252,74,24)"/><text x="56.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="948" width="19" height="15" fill="rgb(222,180,11)"/><text x="56.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="964" width="19" height="15" fill="rgb(220,110,42)"/><text x="56.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="53" y="980" width="19" height="15" fill="rgb(228,223,47)"/><text x="56.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="996" width="19" height="15" fill="rgb(208,89,42)"/><text x="56.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 1.63%)</title><rect x="53" y="1012" width="19" height="15" fill="rgb(243,133,37)"/><text x="56.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="1028" width="19" height="15" fill="rgb(215,26,14)"/><text x="56.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="1044" width="19" height="15" fill="rgb(238,104,12)"/><text x="56.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="1060" width="19" height="15" fill="rgb(244,168,22)"/><text x="56.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="53" y="1076" width="19" height="15" fill="rgb(223,213,28)"/><text x="56.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="1092" width="19" height="15" fill="rgb(208,177,46)"/><text x="56.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 1.63%)</title><rect x="53" y="1108" width="19" height="15" fill="rgb(238,125,47)"/><text x="56.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="1124" width="19" height="15" fill="rgb(236,134,29)"/><text x="56.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="1140" width="19" height="15" fill="rgb(233,82,38)"/><text x="56.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="1156" width="19" height="15" fill="rgb(231,209,0)"/><text x="56.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="1172" width="19" height="15" fill="rgb(228,98,54)"/><text x="56.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="1188" width="19" height="15" fill="rgb(248,86,41)"/><text x="56.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="53" y="1204" width="19" height="15" fill="rgb(228,144,13)"/><text x="56.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="1220" width="19" height="15" fill="rgb(248,97,22)"/><text x="56.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (4 samples, 1.63%)</title><rect x="53" y="1236" width="19" height="15" fill="rgb(253,75,52)"/><text x="56.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="1252" width="19" height="15" fill="rgb(235,147,25)"/><text x="56.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="1268" width="19" height="15" fill="rgb(223,192,44)"/><text x="56.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="1284" width="19" height="15" fill="rgb(231,73,39)"/><text x="56.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="1300" width="19" height="15" fill="rgb(234,1,46)"/><text x="56.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="1316" width="19" height="15" fill="rgb(241,62,30)"/><text x="56.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="53" y="1332" width="19" height="15" fill="rgb(248,105,11)"/><text x="56.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="1348" width="19" height="15" fill="rgb(245,120,3)"/><text x="56.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (4 samples, 1.63%)</title><rect x="53" y="1364" width="19" height="15" fill="rgb(246,25,26)"/><text x="56.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="1380" width="19" height="15" fill="rgb(229,137,39)"/><text x="56.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="1396" width="19" height="15" fill="rgb(227,12,39)"/><text x="56.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="1412" width="19" height="15" fill="rgb(225,34,40)"/><text x="56.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="53" y="1428" width="19" height="15" fill="rgb(208,216,49)"/><text x="56.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="53" y="1444" width="19" height="15" fill="rgb(238,54,13)"/><text x="56.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (4 samples, 1.63%)</title><rect x="53" y="1460" width="19" height="15" fill="rgb(240,146,48)"/><text x="56.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.22%)</title><rect x="58" y="1476" width="14" height="15" fill="rgb(252,145,18)"/><text x="61.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.22%)</title><rect x="58" y="1492" width="14" height="15" fill="rgb(233,225,36)"/><text x="61.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.82%)</title><rect x="62" y="1508" width="10" height="15" fill="rgb(217,87,25)"/><text x="65.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.82%)</title><rect x="62" y="1524" width="10" height="15" fill="rgb(252,206,53)"/><text x="65.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.82%)</title><rect x="62" y="1540" width="10" height="15" fill="rgb(254,108,32)"/><text x="65.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.82%)</title><rect x="62" y="1556" width="10" height="15" fill="rgb(223,79,2)"/><text x="65.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.82%)</title><rect x="62" y="1572" width="10" height="15" fill="rgb(244,8,14)"/><text x="65.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (2 samples, 0.82%)</title><rect x="62" y="1588" width="10" height="15" fill="rgb(224,139,2)"/><text x="65.00" y="1598.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.41%)</title><rect x="72" y="724" width="5" height="15" fill="rgb(238,114,54)"/><text x="75.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="740" width="5" height="15" fill="rgb(223,103,8)"/><text x="75.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="756" width="5" height="15" fill="rgb(220,183,1)"/><text x="75.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="772" width="5" height="15" fill="rgb(232,55,5)"/><text x="75.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="72" y="788" width="5" height="15" fill="rgb(205,142,16)"/><text x="75.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="804" width="5" height="15" fill="rgb(209,79,8)"/><text x="75.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.41%)</title><rect x="72" y="820" width="5" height="15" fill="rgb(237,219,54)"/><text x="75.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="836" width="5" height="15" fill="rgb(247,225,45)"/><text x="75.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="852" width="5" height="15" fill="rgb(231,119,10)"/><text x="75.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="868" width="5" height="15" fill="rgb(219,216,43)"/><text x="75.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="72" y="884" width="5" height="15" fill="rgb(218,49,3)"/><text x="75.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="900" width="5" height="15" fill="rgb(236,56,46)"/><text x="75.00" y="910.50"></text></g><g><title>0x7ff5ddafd40e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="72" y="916" width="5" height="15" fill="rgb(226,162,41)"/><text x="75.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="932" width="5" height="15" fill="rgb(224,117,42)"/><text x="75.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="948" width="5" height="15" fill="rgb(253,36,10)"/><text x="75.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="964" width="5" height="15" fill="rgb(237,138,54)"/><text x="75.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="72" y="980" width="5" height="15" fill="rgb(243,178,11)"/><text x="75.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="996" width="5" height="15" fill="rgb(237,146,12)"/><text x="75.00" y="1006.50"></text></g><g><title>0x7ff5dd8b6cd2 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="72" y="1012" width="5" height="15" fill="rgb(239,216,1)"/><text x="75.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="1028" width="5" height="15" fill="rgb(227,39,24)"/><text x="75.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="1044" width="5" height="15" fill="rgb(227,166,49)"/><text x="75.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="1060" width="5" height="15" fill="rgb(212,31,45)"/><text x="75.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="72" y="1076" width="5" height="15" fill="rgb(234,110,48)"/><text x="75.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="1092" width="5" height="15" fill="rgb(234,24,42)"/><text x="75.00" y="1102.50"></text></g><g><title>0x7ff5dcfac0e5 (pandas/_libs/tslibs/tzconversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="72" y="1108" width="5" height="15" fill="rgb(228,28,54)"/><text x="75.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="1124" width="5" height="15" fill="rgb(252,166,25)"/><text x="75.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="1140" width="5" height="15" fill="rgb(218,24,46)"/><text x="75.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="1156" width="5" height="15" fill="rgb(246,189,46)"/><text x="75.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="72" y="1172" width="5" height="15" fill="rgb(244,138,6)"/><text x="75.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="1188" width="5" height="15" fill="rgb(248,2,22)"/><text x="75.00" y="1198.50"></text></g><g><title>0x7ff5dcd30e68 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="72" y="1204" width="5" height="15" fill="rgb(228,94,52)"/><text x="75.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="1220" width="5" height="15" fill="rgb(206,31,47)"/><text x="75.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="1236" width="5" height="15" fill="rgb(236,200,45)"/><text x="75.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="1252" width="5" height="15" fill="rgb(244,113,43)"/><text x="75.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="72" y="1268" width="5" height="15" fill="rgb(221,107,29)"/><text x="75.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="1284" width="5" height="15" fill="rgb(232,177,52)"/><text x="75.00" y="1294.50"></text></g><g><title>0x7ff5dcac12fb (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="72" y="1300" width="5" height="15" fill="rgb(215,145,19)"/><text x="75.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="1316" width="5" height="15" fill="rgb(209,28,43)"/><text x="75.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="1332" width="5" height="15" fill="rgb(227,54,42)"/><text x="75.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="1348" width="5" height="15" fill="rgb(240,97,28)"/><text x="75.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="72" y="1364" width="5" height="15" fill="rgb(239,187,53)"/><text x="75.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="1380" width="5" height="15" fill="rgb(211,153,53)"/><text x="75.00" y="1390.50"></text></g><g><title>0x7ff5dc8a5153 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="72" y="1396" width="5" height="15" fill="rgb(242,15,53)"/><text x="75.00" y="1406.50"></text></g><g><title>0x7ff5dc8a3c13 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="72" y="1412" width="5" height="15" fill="rgb(251,133,21)"/><text x="75.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="1428" width="5" height="15" fill="rgb(215,189,50)"/><text x="75.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="1444" width="5" height="15" fill="rgb(215,87,28)"/><text x="75.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="1460" width="5" height="15" fill="rgb(240,164,23)"/><text x="75.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="72" y="1476" width="5" height="15" fill="rgb(210,33,11)"/><text x="75.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="72" y="1492" width="5" height="15" fill="rgb(209,225,9)"/><text x="75.00" y="1502.50"></text></g><g><title>0x7ff5dc640181 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="72" y="1508" width="5" height="15" fill="rgb(218,97,13)"/><text x="75.00" y="1518.50"></text></g><g><title>0x7ff5dc6431c9 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="72" y="1524" width="5" height="15" fill="rgb(221,85,31)"/><text x="75.00" y="1534.50"></text></g><g><title>0x7ff5dc66f167 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="72" y="1540" width="5" height="15" fill="rgb(216,131,14)"/><text x="75.00" y="1550.50"></text></g><g><title>0x7ff5dc66ab64 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="72" y="1556" width="5" height="15" fill="rgb(240,168,45)"/><text x="75.00" y="1566.50"></text></g><g><title>0x7ff5dc64e07b (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="72" y="1572" width="5" height="15" fill="rgb(213,142,12)"/><text x="75.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.41%)</title><rect x="72" y="1588" width="5" height="15" fill="rgb(220,136,41)"/><text x="75.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.41%)</title><rect x="72" y="1604" width="5" height="15" fill="rgb(231,127,36)"/><text x="75.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.41%)</title><rect x="72" y="1620" width="5" height="15" fill="rgb(208,85,16)"/><text x="75.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.41%)</title><rect x="72" y="1636" width="5" height="15" fill="rgb(249,164,15)"/><text x="75.00" y="1646.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.41%)</title><rect x="72" y="1652" width="5" height="15" fill="rgb(252,179,11)"/><text x="75.00" y="1662.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.41%)</title><rect x="72" y="1668" width="5" height="15" fill="rgb(209,80,9)"/><text x="75.00" y="1678.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.41%)</title><rect x="72" y="1684" width="5" height="15" fill="rgb(245,194,29)"/><text x="75.00" y="1694.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.41%)</title><rect x="77" y="1108" width="5" height="15" fill="rgb(213,229,41)"/><text x="80.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="77" y="1124" width="5" height="15" fill="rgb(209,94,38)"/><text x="80.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="77" y="1140" width="5" height="15" fill="rgb(219,199,32)"/><text x="80.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="77" y="1156" width="5" height="15" fill="rgb(228,83,31)"/><text x="80.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="77" y="1172" width="5" height="15" fill="rgb(224,17,13)"/><text x="80.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="77" y="1188" width="5" height="15" fill="rgb(205,180,27)"/><text x="80.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/internals/__init__.py) (1 samples, 0.41%)</title><rect x="77" y="1204" width="5" height="15" fill="rgb(242,18,38)"/><text x="80.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="77" y="1220" width="5" height="15" fill="rgb(237,91,46)"/><text x="80.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="77" y="1236" width="5" height="15" fill="rgb(229,105,13)"/><text x="80.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="77" y="1252" width="5" height="15" fill="rgb(233,46,2)"/><text x="80.00" y="1262.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="77" y="1268" width="5" height="15" fill="rgb(232,32,54)"/><text x="80.00" y="1278.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="77" y="1284" width="5" height="15" fill="rgb(214,136,35)"/><text x="80.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="82" y="1540" width="5" height="15" fill="rgb(215,4,48)"/><text x="85.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="82" y="1556" width="5" height="15" fill="rgb(213,29,15)"/><text x="85.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="82" y="1572" width="5" height="15" fill="rgb(211,34,14)"/><text x="85.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="82" y="1588" width="5" height="15" fill="rgb(233,6,21)"/><text x="85.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="82" y="1604" width="5" height="15" fill="rgb(237,37,24)"/><text x="85.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="82" y="1620" width="5" height="15" fill="rgb(243,96,53)"/><text x="85.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.41%)</title><rect x="82" y="1636" width="5" height="15" fill="rgb(239,104,23)"/><text x="85.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="82" y="1652" width="5" height="15" fill="rgb(227,129,24)"/><text x="85.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="82" y="1668" width="5" height="15" fill="rgb(208,52,35)"/><text x="85.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="82" y="1684" width="5" height="15" fill="rgb(210,30,34)"/><text x="85.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="82" y="1700" width="5" height="15" fill="rgb(210,116,34)"/><text x="85.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="82" y="1716" width="5" height="15" fill="rgb(228,136,20)"/><text x="85.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="82" y="1732" width="5" height="15" fill="rgb(224,32,43)"/><text x="85.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="82" y="1748" width="5" height="15" fill="rgb(217,154,39)"/><text x="85.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.41%)</title><rect x="82" y="1764" width="5" height="15" fill="rgb(247,212,23)"/><text x="85.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="82" y="1780" width="5" height="15" fill="rgb(254,85,7)"/><text x="85.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="82" y="1796" width="5" height="15" fill="rgb(232,139,51)"/><text x="85.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="82" y="1812" width="5" height="15" fill="rgb(242,66,42)"/><text x="85.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="82" y="1828" width="5" height="15" fill="rgb(206,58,25)"/><text x="85.00" y="1838.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="82" y="1844" width="5" height="15" fill="rgb(243,143,46)"/><text x="85.00" y="1854.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="82" y="1860" width="5" height="15" fill="rgb(250,112,3)"/><text x="85.00" y="1870.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 3.27%)</title><rect x="53" y="340" width="38" height="15" fill="rgb(213,190,44)"/><text x="56.00" y="350.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.27%)</title><rect x="53" y="356" width="38" height="15" fill="rgb(248,53,6)"/><text x="56.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.27%)</title><rect x="53" y="372" width="38" height="15" fill="rgb(245,111,23)"/><text x="56.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.27%)</title><rect x="53" y="388" width="38" height="15" fill="rgb(242,163,2)"/><text x="56.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.27%)</title><rect x="53" y="404" width="38" height="15" fill="rgb(242,188,1)"/><text x="56.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.27%)</title><rect x="53" y="420" width="38" height="15" fill="rgb(232,13,30)"/><text x="56.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 3.27%)</title><rect x="53" y="436" width="38" height="15" fill="rgb(205,5,50)"/><text x="56.00" y="446.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.27%)</title><rect x="53" y="452" width="38" height="15" fill="rgb(241,202,6)"/><text x="56.00" y="462.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.27%)</title><rect x="53" y="468" width="38" height="15" fill="rgb(217,170,50)"/><text x="56.00" y="478.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="72" y="484" width="19" height="15" fill="rgb(214,30,26)"/><text x="75.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="72" y="500" width="19" height="15" fill="rgb(207,18,32)"/><text x="75.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="72" y="516" width="19" height="15" fill="rgb(227,152,40)"/><text x="75.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 1.63%)</title><rect x="72" y="532" width="19" height="15" fill="rgb(228,40,28)"/><text x="75.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="72" y="548" width="19" height="15" fill="rgb(239,131,28)"/><text x="75.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="72" y="564" width="19" height="15" fill="rgb(222,212,19)"/><text x="75.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="72" y="580" width="19" height="15" fill="rgb(243,184,5)"/><text x="75.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="72" y="596" width="19" height="15" fill="rgb(226,66,50)"/><text x="75.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="72" y="612" width="19" height="15" fill="rgb(220,9,41)"/><text x="75.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 1.63%)</title><rect x="72" y="628" width="19" height="15" fill="rgb(227,152,20)"/><text x="75.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="72" y="644" width="19" height="15" fill="rgb(250,90,17)"/><text x="75.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="72" y="660" width="19" height="15" fill="rgb(232,198,32)"/><text x="75.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="72" y="676" width="19" height="15" fill="rgb(252,77,35)"/><text x="75.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="72" y="692" width="19" height="15" fill="rgb(209,145,2)"/><text x="75.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="72" y="708" width="19" height="15" fill="rgb(233,143,52)"/><text x="75.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 1.22%)</title><rect x="77" y="724" width="14" height="15" fill="rgb(228,184,19)"/><text x="80.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="77" y="740" width="14" height="15" fill="rgb(218,20,46)"/><text x="80.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="77" y="756" width="14" height="15" fill="rgb(237,132,26)"/><text x="80.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="77" y="772" width="14" height="15" fill="rgb(214,228,48)"/><text x="80.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.22%)</title><rect x="77" y="788" width="14" height="15" fill="rgb(248,198,47)"/><text x="80.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="77" y="804" width="14" height="15" fill="rgb(233,47,53)"/><text x="80.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 1.22%)</title><rect x="77" y="820" width="14" height="15" fill="rgb(226,8,30)"/><text x="80.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="77" y="836" width="14" height="15" fill="rgb(232,105,31)"/><text x="80.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="77" y="852" width="14" height="15" fill="rgb(253,17,52)"/><text x="80.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="77" y="868" width="14" height="15" fill="rgb(236,34,41)"/><text x="80.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.22%)</title><rect x="77" y="884" width="14" height="15" fill="rgb(238,128,41)"/><text x="80.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="77" y="900" width="14" height="15" fill="rgb(209,169,52)"/><text x="80.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 1.22%)</title><rect x="77" y="916" width="14" height="15" fill="rgb(233,186,38)"/><text x="80.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="77" y="932" width="14" height="15" fill="rgb(227,156,41)"/><text x="80.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="77" y="948" width="14" height="15" fill="rgb(214,224,17)"/><text x="80.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="77" y="964" width="14" height="15" fill="rgb(254,16,22)"/><text x="80.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.22%)</title><rect x="77" y="980" width="14" height="15" fill="rgb(213,196,9)"/><text x="80.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="77" y="996" width="14" height="15" fill="rgb(211,183,38)"/><text x="80.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 1.22%)</title><rect x="77" y="1012" width="14" height="15" fill="rgb(227,160,30)"/><text x="80.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="77" y="1028" width="14" height="15" fill="rgb(237,176,33)"/><text x="80.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="77" y="1044" width="14" height="15" fill="rgb(211,93,23)"/><text x="80.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="77" y="1060" width="14" height="15" fill="rgb(246,9,20)"/><text x="80.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.22%)</title><rect x="77" y="1076" width="14" height="15" fill="rgb(207,101,40)"/><text x="80.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="77" y="1092" width="14" height="15" fill="rgb(252,154,31)"/><text x="80.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.82%)</title><rect x="82" y="1108" width="9" height="15" fill="rgb(240,130,30)"/><text x="85.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="82" y="1124" width="9" height="15" fill="rgb(226,22,54)"/><text x="85.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="82" y="1140" width="9" height="15" fill="rgb(229,190,31)"/><text x="85.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="82" y="1156" width="9" height="15" fill="rgb(211,62,5)"/><text x="85.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="82" y="1172" width="9" height="15" fill="rgb(232,100,0)"/><text x="85.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="82" y="1188" width="9" height="15" fill="rgb(250,203,50)"/><text x="85.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.82%)</title><rect x="82" y="1204" width="9" height="15" fill="rgb(228,12,17)"/><text x="85.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="82" y="1220" width="9" height="15" fill="rgb(252,186,38)"/><text x="85.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="82" y="1236" width="9" height="15" fill="rgb(225,219,4)"/><text x="85.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="82" y="1252" width="9" height="15" fill="rgb(253,114,21)"/><text x="85.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="82" y="1268" width="9" height="15" fill="rgb(225,222,5)"/><text x="85.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="82" y="1284" width="9" height="15" fill="rgb(243,167,39)"/><text x="85.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.82%)</title><rect x="82" y="1300" width="9" height="15" fill="rgb(223,79,1)"/><text x="85.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="82" y="1316" width="9" height="15" fill="rgb(225,39,35)"/><text x="85.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="82" y="1332" width="9" height="15" fill="rgb(214,44,32)"/><text x="85.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="82" y="1348" width="9" height="15" fill="rgb(227,57,49)"/><text x="85.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="82" y="1364" width="9" height="15" fill="rgb(205,225,36)"/><text x="85.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="82" y="1380" width="9" height="15" fill="rgb(210,184,21)"/><text x="85.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.82%)</title><rect x="82" y="1396" width="9" height="15" fill="rgb(239,2,22)"/><text x="85.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="82" y="1412" width="9" height="15" fill="rgb(205,82,35)"/><text x="85.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="82" y="1428" width="9" height="15" fill="rgb(239,204,53)"/><text x="85.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="82" y="1444" width="9" height="15" fill="rgb(219,172,50)"/><text x="85.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="82" y="1460" width="9" height="15" fill="rgb(244,93,33)"/><text x="85.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="82" y="1476" width="9" height="15" fill="rgb(214,153,42)"/><text x="85.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.82%)</title><rect x="82" y="1492" width="9" height="15" fill="rgb(233,132,29)"/><text x="85.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="82" y="1508" width="9" height="15" fill="rgb(252,89,39)"/><text x="85.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="82" y="1524" width="9" height="15" fill="rgb(234,66,39)"/><text x="85.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="87" y="1540" width="4" height="15" fill="rgb(228,59,34)"/><text x="90.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="87" y="1556" width="4" height="15" fill="rgb(205,201,39)"/><text x="90.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="87" y="1572" width="4" height="15" fill="rgb(248,184,41)"/><text x="90.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.41%)</title><rect x="87" y="1588" width="4" height="15" fill="rgb(217,87,37)"/><text x="90.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="87" y="1604" width="4" height="15" fill="rgb(227,22,44)"/><text x="90.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="87" y="1620" width="4" height="15" fill="rgb(205,123,42)"/><text x="90.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="87" y="1636" width="4" height="15" fill="rgb(250,171,48)"/><text x="90.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="87" y="1652" width="4" height="15" fill="rgb(220,166,19)"/><text x="90.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="87" y="1668" width="4" height="15" fill="rgb(213,17,40)"/><text x="90.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py) (1 samples, 0.41%)</title><rect x="87" y="1684" width="4" height="15" fill="rgb(227,87,32)"/><text x="90.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="87" y="1700" width="4" height="15" fill="rgb(205,83,18)"/><text x="90.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="87" y="1716" width="4" height="15" fill="rgb(216,42,34)"/><text x="90.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="87" y="1732" width="4" height="15" fill="rgb(225,152,39)"/><text x="90.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="87" y="1748" width="4" height="15" fill="rgb(205,2,48)"/><text x="90.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="87" y="1764" width="4" height="15" fill="rgb(218,167,49)"/><text x="90.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py) (1 samples, 0.41%)</title><rect x="87" y="1780" width="4" height="15" fill="rgb(221,165,37)"/><text x="90.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py) (1 samples, 0.41%)</title><rect x="87" y="1796" width="4" height="15" fill="rgb(239,52,25)"/><text x="90.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py) (1 samples, 0.41%)</title><rect x="87" y="1812" width="4" height="15" fill="rgb(206,192,53)"/><text x="90.00" y="1822.50"></text></g><g><title>array_item (mapping.c) (1 samples, 0.41%)</title><rect x="87" y="1828" width="4" height="15" fill="rgb(232,23,9)"/><text x="90.00" y="1838.50"></text></g><g><title>sprintf (libc-2.29.so) (1 samples, 0.41%)</title><rect x="87" y="1844" width="4" height="15" fill="rgb(241,132,16)"/><text x="90.00" y="1854.50"></text></g><g><title>0x7ff6085bdab0 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="87" y="1860" width="4" height="15" fill="rgb(237,62,9)"/><text x="90.00" y="1870.50"></text></g><g><title>0x7ff6085b18a0 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="87" y="1876" width="4" height="15" fill="rgb(212,192,51)"/><text x="90.00" y="1886.50"></text></g><g><title>0x7ff608597e93 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="87" y="1892" width="4" height="15" fill="rgb(226,1,41)"/><text x="90.00" y="1902.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (9 samples, 3.67%)</title><rect x="53" y="244" width="43" height="15" fill="rgb(235,17,50)"/><text x="56.00" y="254.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.67%)</title><rect x="53" y="260" width="43" height="15" fill="rgb(244,158,1)"/><text x="56.00" y="270.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.67%)</title><rect x="53" y="276" width="43" height="15" fill="rgb(222,80,6)"/><text x="56.00" y="286.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.67%)</title><rect x="53" y="292" width="43" height="15" fill="rgb(252,0,29)"/><text x="56.00" y="302.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 3.67%)</title><rect x="53" y="308" width="43" height="15" fill="rgb(240,100,53)"/><text x="56.00" y="318.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.67%)</title><rect x="53" y="324" width="43" height="15" fill="rgb(232,167,22)"/><text x="56.00" y="334.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.41%)</title><rect x="91" y="340" width="5" height="15" fill="rgb(230,1,20)"/><text x="94.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="356" width="5" height="15" fill="rgb(231,150,32)"/><text x="94.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="372" width="5" height="15" fill="rgb(211,223,39)"/><text x="94.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="388" width="5" height="15" fill="rgb(242,20,33)"/><text x="94.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="404" width="5" height="15" fill="rgb(227,131,45)"/><text x="94.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="420" width="5" height="15" fill="rgb(232,186,48)"/><text x="94.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="436" width="5" height="15" fill="rgb(253,13,32)"/><text x="94.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="91" y="452" width="5" height="15" fill="rgb(229,53,36)"/><text x="94.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="468" width="5" height="15" fill="rgb(225,124,54)"/><text x="94.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.41%)</title><rect x="91" y="484" width="5" height="15" fill="rgb(212,157,23)"/><text x="94.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="500" width="5" height="15" fill="rgb(253,153,9)"/><text x="94.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="516" width="5" height="15" fill="rgb(250,210,50)"/><text x="94.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="532" width="5" height="15" fill="rgb(220,107,48)"/><text x="94.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="91" y="548" width="5" height="15" fill="rgb(243,50,13)"/><text x="94.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="564" width="5" height="15" fill="rgb(245,177,52)"/><text x="94.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.41%)</title><rect x="91" y="580" width="5" height="15" fill="rgb(205,99,47)"/><text x="94.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="596" width="5" height="15" fill="rgb(238,24,43)"/><text x="94.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="612" width="5" height="15" fill="rgb(211,219,2)"/><text x="94.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="628" width="5" height="15" fill="rgb(246,37,18)"/><text x="94.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="644" width="5" height="15" fill="rgb(223,142,12)"/><text x="94.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="660" width="5" height="15" fill="rgb(227,4,0)"/><text x="94.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="676" width="5" height="15" fill="rgb(239,106,32)"/><text x="94.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="91" y="692" width="5" height="15" fill="rgb(229,51,50)"/><text x="94.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="708" width="5" height="15" fill="rgb(240,36,50)"/><text x="94.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.41%)</title><rect x="91" y="724" width="5" height="15" fill="rgb(217,36,51)"/><text x="94.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="740" width="5" height="15" fill="rgb(216,14,18)"/><text x="94.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="756" width="5" height="15" fill="rgb(222,186,10)"/><text x="94.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="772" width="5" height="15" fill="rgb(218,144,25)"/><text x="94.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="91" y="788" width="5" height="15" fill="rgb(223,206,47)"/><text x="94.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="804" width="5" height="15" fill="rgb(243,32,15)"/><text x="94.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.41%)</title><rect x="91" y="820" width="5" height="15" fill="rgb(216,193,7)"/><text x="94.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="836" width="5" height="15" fill="rgb(234,224,17)"/><text x="94.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="852" width="5" height="15" fill="rgb(221,181,4)"/><text x="94.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="868" width="5" height="15" fill="rgb(226,75,53)"/><text x="94.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="91" y="884" width="5" height="15" fill="rgb(244,203,47)"/><text x="94.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="900" width="5" height="15" fill="rgb(226,24,34)"/><text x="94.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.41%)</title><rect x="91" y="916" width="5" height="15" fill="rgb(241,9,14)"/><text x="94.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="932" width="5" height="15" fill="rgb(211,228,16)"/><text x="94.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="948" width="5" height="15" fill="rgb(238,129,6)"/><text x="94.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="964" width="5" height="15" fill="rgb(238,55,15)"/><text x="94.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="980" width="5" height="15" fill="rgb(219,26,44)"/><text x="94.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="996" width="5" height="15" fill="rgb(244,154,42)"/><text x="94.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="1012" width="5" height="15" fill="rgb(244,190,53)"/><text x="94.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="91" y="1028" width="5" height="15" fill="rgb(221,211,36)"/><text x="94.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="1044" width="5" height="15" fill="rgb(248,81,50)"/><text x="94.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.41%)</title><rect x="91" y="1060" width="5" height="15" fill="rgb(230,128,37)"/><text x="94.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="1076" width="5" height="15" fill="rgb(223,80,10)"/><text x="94.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="1092" width="5" height="15" fill="rgb(207,32,6)"/><text x="94.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="1108" width="5" height="15" fill="rgb(238,227,26)"/><text x="94.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="91" y="1124" width="5" height="15" fill="rgb(214,11,45)"/><text x="94.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="1140" width="5" height="15" fill="rgb(234,100,11)"/><text x="94.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py) (1 samples, 0.41%)</title><rect x="91" y="1156" width="5" height="15" fill="rgb(238,211,47)"/><text x="94.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="1172" width="5" height="15" fill="rgb(228,91,47)"/><text x="94.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="1188" width="5" height="15" fill="rgb(213,180,15)"/><text x="94.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="91" y="1204" width="5" height="15" fill="rgb(221,195,36)"/><text x="94.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="91" y="1220" width="5" height="15" fill="rgb(215,7,10)"/><text x="94.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="91" y="1236" width="5" height="15" fill="rgb(231,52,24)"/><text x="94.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="91" y="1252" width="5" height="15" fill="rgb(239,140,43)"/><text x="94.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (19 samples, 7.76%)</title><rect x="10" y="68" width="91" height="15" fill="rgb(224,96,41)"/><text x="13.00" y="78.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 7.76%)</title><rect x="10" y="84" width="91" height="15" fill="rgb(223,48,39)"/><text x="13.00" y="94.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 7.76%)</title><rect x="10" y="100" width="91" height="15" fill="rgb(215,9,41)"/><text x="13.00" y="110.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (19 samples, 7.76%)</title><rect x="10" y="116" width="91" height="15" fill="rgb(250,0,39)"/><text x="13.00" y="126.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (19 samples, 7.76%)</title><rect x="10" y="132" width="91" height="15" fill="rgb(220,177,26)"/><text x="13.00" y="142.50">_call_with..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py) (19 samples, 7.76%)</title><rect x="10" y="148" width="91" height="15" fill="rgb(220,12,5)"/><text x="13.00" y="158.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (19 samples, 7.76%)</title><rect x="10" y="164" width="91" height="15" fill="rgb(206,91,41)"/><text x="13.00" y="174.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 7.76%)</title><rect x="10" y="180" width="91" height="15" fill="rgb(223,23,46)"/><text x="13.00" y="190.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.08%)</title><rect x="53" y="196" width="48" height="15" fill="rgb(231,5,19)"/><text x="56.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 4.08%)</title><rect x="53" y="212" width="48" height="15" fill="rgb(245,57,38)"/><text x="56.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.08%)</title><rect x="53" y="228" width="48" height="15" fill="rgb(221,16,38)"/><text x="56.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (1 samples, 0.41%)</title><rect x="96" y="244" width="5" height="15" fill="rgb(228,100,30)"/><text x="99.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="260" width="5" height="15" fill="rgb(223,202,39)"/><text x="99.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="276" width="5" height="15" fill="rgb(222,8,28)"/><text x="99.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="292" width="5" height="15" fill="rgb(228,35,44)"/><text x="99.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="96" y="308" width="5" height="15" fill="rgb(219,144,28)"/><text x="99.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="324" width="5" height="15" fill="rgb(223,12,45)"/><text x="99.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py) (1 samples, 0.41%)</title><rect x="96" y="340" width="5" height="15" fill="rgb(229,102,50)"/><text x="99.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="356" width="5" height="15" fill="rgb(208,145,51)"/><text x="99.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="372" width="5" height="15" fill="rgb(247,66,54)"/><text x="99.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="388" width="5" height="15" fill="rgb(236,157,17)"/><text x="99.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="96" y="404" width="5" height="15" fill="rgb(215,186,1)"/><text x="99.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="420" width="5" height="15" fill="rgb(208,112,40)"/><text x="99.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py) (1 samples, 0.41%)</title><rect x="96" y="436" width="5" height="15" fill="rgb(248,27,21)"/><text x="99.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="452" width="5" height="15" fill="rgb(210,130,4)"/><text x="99.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="468" width="5" height="15" fill="rgb(224,23,52)"/><text x="99.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="484" width="5" height="15" fill="rgb(231,57,42)"/><text x="99.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="96" y="500" width="5" height="15" fill="rgb(210,88,9)"/><text x="99.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="516" width="5" height="15" fill="rgb(239,70,19)"/><text x="99.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py) (1 samples, 0.41%)</title><rect x="96" y="532" width="5" height="15" fill="rgb(212,90,47)"/><text x="99.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="548" width="5" height="15" fill="rgb(242,90,9)"/><text x="99.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="564" width="5" height="15" fill="rgb(225,61,41)"/><text x="99.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="580" width="5" height="15" fill="rgb(254,14,40)"/><text x="99.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="96" y="596" width="5" height="15" fill="rgb(245,40,44)"/><text x="99.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="612" width="5" height="15" fill="rgb(215,80,18)"/><text x="99.00" y="622.50"></text></g><g><title>0x7ff5e2493373 (?) (1 samples, 0.41%)</title><rect x="96" y="628" width="5" height="15" fill="rgb(250,1,36)"/><text x="99.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="644" width="5" height="15" fill="rgb(215,97,7)"/><text x="99.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="660" width="5" height="15" fill="rgb(224,136,49)"/><text x="99.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="676" width="5" height="15" fill="rgb(237,26,10)"/><text x="99.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="96" y="692" width="5" height="15" fill="rgb(235,23,24)"/><text x="99.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="708" width="5" height="15" fill="rgb(216,14,38)"/><text x="99.00" y="718.50"></text></g><g><title>0x7ff5e2256eea (?) (1 samples, 0.41%)</title><rect x="96" y="724" width="5" height="15" fill="rgb(248,197,38)"/><text x="99.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="740" width="5" height="15" fill="rgb(222,123,10)"/><text x="99.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="756" width="5" height="15" fill="rgb(213,56,49)"/><text x="99.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="772" width="5" height="15" fill="rgb(229,58,27)"/><text x="99.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="96" y="788" width="5" height="15" fill="rgb(244,141,24)"/><text x="99.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="804" width="5" height="15" fill="rgb(210,132,51)"/><text x="99.00" y="814.50"></text></g><g><title>0x7ff5e1fef887 (?) (1 samples, 0.41%)</title><rect x="96" y="820" width="5" height="15" fill="rgb(211,46,37)"/><text x="99.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="836" width="5" height="15" fill="rgb(205,28,49)"/><text x="99.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="852" width="5" height="15" fill="rgb(205,40,50)"/><text x="99.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="868" width="5" height="15" fill="rgb(217,86,25)"/><text x="99.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="884" width="5" height="15" fill="rgb(246,19,13)"/><text x="99.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="900" width="5" height="15" fill="rgb(225,117,2)"/><text x="99.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="916" width="5" height="15" fill="rgb(232,42,16)"/><text x="99.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="96" y="932" width="5" height="15" fill="rgb(231,178,45)"/><text x="99.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="948" width="5" height="15" fill="rgb(229,101,25)"/><text x="99.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.41%)</title><rect x="96" y="964" width="5" height="15" fill="rgb(239,229,51)"/><text x="99.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="980" width="5" height="15" fill="rgb(240,30,20)"/><text x="99.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="996" width="5" height="15" fill="rgb(210,134,13)"/><text x="99.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="1012" width="5" height="15" fill="rgb(223,80,52)"/><text x="99.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="96" y="1028" width="5" height="15" fill="rgb(217,33,7)"/><text x="99.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="1044" width="5" height="15" fill="rgb(254,27,52)"/><text x="99.00" y="1054.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py) (1 samples, 0.41%)</title><rect x="96" y="1060" width="5" height="15" fill="rgb(225,198,52)"/><text x="99.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="1076" width="5" height="15" fill="rgb(225,208,15)"/><text x="99.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="1092" width="5" height="15" fill="rgb(239,164,7)"/><text x="99.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="1108" width="5" height="15" fill="rgb(217,74,26)"/><text x="99.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="96" y="1124" width="5" height="15" fill="rgb(218,82,21)"/><text x="99.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="1140" width="5" height="15" fill="rgb(225,98,51)"/><text x="99.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py) (1 samples, 0.41%)</title><rect x="96" y="1156" width="5" height="15" fill="rgb(250,38,44)"/><text x="99.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="1172" width="5" height="15" fill="rgb(205,10,17)"/><text x="99.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="1188" width="5" height="15" fill="rgb(211,221,47)"/><text x="99.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="1204" width="5" height="15" fill="rgb(208,169,18)"/><text x="99.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="96" y="1220" width="5" height="15" fill="rgb(253,139,12)"/><text x="99.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="1236" width="5" height="15" fill="rgb(238,66,36)"/><text x="99.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py) (1 samples, 0.41%)</title><rect x="96" y="1252" width="5" height="15" fill="rgb(247,141,1)"/><text x="99.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="1268" width="5" height="15" fill="rgb(214,66,9)"/><text x="99.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="1284" width="5" height="15" fill="rgb(210,50,29)"/><text x="99.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="1300" width="5" height="15" fill="rgb(213,141,22)"/><text x="99.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="96" y="1316" width="5" height="15" fill="rgb(230,119,26)"/><text x="99.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="1332" width="5" height="15" fill="rgb(221,160,7)"/><text x="99.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.41%)</title><rect x="96" y="1348" width="5" height="15" fill="rgb(247,183,16)"/><text x="99.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="1364" width="5" height="15" fill="rgb(232,192,47)"/><text x="99.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="1380" width="5" height="15" fill="rgb(243,208,24)"/><text x="99.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="1396" width="5" height="15" fill="rgb(212,200,35)"/><text x="99.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="96" y="1412" width="5" height="15" fill="rgb(220,131,48)"/><text x="99.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="96" y="1428" width="5" height="15" fill="rgb(246,145,41)"/><text x="99.00" y="1438.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_ridge.py) (1 samples, 0.41%)</title><rect x="96" y="1444" width="5" height="15" fill="rgb(234,125,51)"/><text x="99.00" y="1454.50"></text></g><g><title>__new__ (abc.py) (1 samples, 0.41%)</title><rect x="96" y="1460" width="5" height="15" fill="rgb(254,164,9)"/><text x="99.00" y="1470.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (2 samples, 0.82%)</title><rect x="101" y="196" width="10" height="15" fill="rgb(246,8,13)"/><text x="104.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py) (1 samples, 0.41%)</title><rect x="106" y="212" width="5" height="15" fill="rgb(224,10,50)"/><text x="109.00" y="222.50"></text></g><g><title>update_wrapper (functools.py) (1 samples, 0.41%)</title><rect x="106" y="228" width="5" height="15" fill="rgb(226,74,26)"/><text x="109.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py) (1 samples, 0.41%)</title><rect x="111" y="228" width="4" height="15" fill="rgb(242,218,3)"/><text x="114.00" y="238.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (1 samples, 0.41%)</title><rect x="115" y="292" width="5" height="15" fill="rgb(233,121,8)"/><text x="118.00" y="302.50"></text></g><g><title>0x7ff5e2010d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="115" y="308" width="5" height="15" fill="rgb(242,127,54)"/><text x="118.00" y="318.50"></text></g><g><title>0x7ff5e201005a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="115" y="324" width="5" height="15" fill="rgb(206,158,26)"/><text x="118.00" y="334.50"></text></g><g><title>array_take (methods.c) (1 samples, 0.41%)</title><rect x="115" y="340" width="5" height="15" fill="rgb(231,203,44)"/><text x="118.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (1 samples, 0.41%)</title><rect x="115" y="356" width="5" height="15" fill="rgb(231,80,13)"/><text x="118.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.41%)</title><rect x="115" y="372" width="5" height="15" fill="rgb(250,136,40)"/><text x="118.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.41%)</title><rect x="115" y="388" width="5" height="15" fill="rgb(236,167,14)"/><text x="118.00" y="398.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.41%)</title><rect x="115" y="404" width="5" height="15" fill="rgb(252,221,2)"/><text x="118.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.41%)</title><rect x="115" y="420" width="5" height="15" fill="rgb(208,185,44)"/><text x="118.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.41%)</title><rect x="120" y="324" width="5" height="15" fill="rgb(239,149,15)"/><text x="123.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.41%)</title><rect x="120" y="340" width="5" height="15" fill="rgb(230,204,44)"/><text x="123.00" y="350.50"></text></g><g><title>_dispatch (joblib/parallel.py) (4 samples, 1.63%)</title><rect x="111" y="196" width="19" height="15" fill="rgb(217,10,28)"/><text x="114.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (4 samples, 1.63%)</title><rect x="111" y="212" width="19" height="15" fill="rgb(232,49,2)"/><text x="114.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (3 samples, 1.22%)</title><rect x="115" y="228" width="15" height="15" fill="rgb(215,207,25)"/><text x="118.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py) (3 samples, 1.22%)</title><rect x="115" y="244" width="15" height="15" fill="rgb(244,178,27)"/><text x="118.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (3 samples, 1.22%)</title><rect x="115" y="260" width="15" height="15" fill="rgb(253,84,32)"/><text x="118.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (3 samples, 1.22%)</title><rect x="115" y="276" width="15" height="15" fill="rgb(231,0,4)"/><text x="118.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.82%)</title><rect x="120" y="292" width="10" height="15" fill="rgb(238,19,3)"/><text x="123.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.82%)</title><rect x="120" y="308" width="10" height="15" fill="rgb(210,141,27)"/><text x="123.00" y="318.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.41%)</title><rect x="125" y="324" width="5" height="15" fill="rgb(225,178,46)"/><text x="128.00" y="334.50"></text></g><g><title>get (queue.py) (1 samples, 0.41%)</title><rect x="130" y="196" width="5" height="15" fill="rgb(216,100,38)"/><text x="133.00" y="206.50"></text></g><g><title>notify (threading.py) (1 samples, 0.41%)</title><rect x="130" y="212" width="5" height="15" fill="rgb(244,136,4)"/><text x="133.00" y="222.50"></text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py) (8 samples, 3.27%)</title><rect x="101" y="68" width="39" height="15" fill="rgb(218,18,31)"/><text x="104.00" y="78.50">pro..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py) (8 samples, 3.27%)</title><rect x="101" y="84" width="39" height="15" fill="rgb(222,91,8)"/><text x="104.00" y="94.50">set..</text></g><g><title>profile0 (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py) (8 samples, 3.27%)</title><rect x="101" y="100" width="39" height="15" fill="rgb(248,188,27)"/><text x="104.00" y="110.50">pro..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 3.27%)</title><rect x="101" y="116" width="39" height="15" fill="rgb(248,26,46)"/><text x="104.00" y="126.50">tim..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 3.27%)</title><rect x="101" y="132" width="39" height="15" fill="rgb(244,21,4)"/><text x="104.00" y="142.50">&lt;la..</text></g><g><title>predict (sklearn/ensemble/_forest.py) (8 samples, 3.27%)</title><rect x="101" y="148" width="39" height="15" fill="rgb(242,26,18)"/><text x="104.00" y="158.50">pre..</text></g><g><title>__call__ (joblib/parallel.py) (8 samples, 3.27%)</title><rect x="101" y="164" width="39" height="15" fill="rgb(239,114,36)"/><text x="104.00" y="174.50">__c..</text></g><g><title>dispatch_one_batch (joblib/parallel.py) (8 samples, 3.27%)</title><rect x="101" y="180" width="39" height="15" fill="rgb(235,85,0)"/><text x="104.00" y="190.50">dis..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (1 samples, 0.41%)</title><rect x="135" y="196" width="5" height="15" fill="rgb(254,182,13)"/><text x="138.00" y="206.50"></text></g><g><title>0x7ff5c860aff9 (?) (1 samples, 0.41%)</title><rect x="140" y="212" width="4" height="15" fill="rgb(226,177,48)"/><text x="143.00" y="222.50"></text></g><g><title>0x7ff5c8605ef6 (?) (1 samples, 0.41%)</title><rect x="140" y="228" width="4" height="15" fill="rgb(221,27,54)"/><text x="143.00" y="238.50"></text></g><g><title>0x7ff5c85fa962 (?) (1 samples, 0.41%)</title><rect x="140" y="244" width="4" height="15" fill="rgb(207,72,22)"/><text x="143.00" y="254.50"></text></g><g><title>0x7ff5c862e7a7 (?) (1 samples, 0.41%)</title><rect x="140" y="260" width="4" height="15" fill="rgb(206,88,43)"/><text x="143.00" y="270.50"></text></g><g><title>0x7ff5c862e379 (?) (1 samples, 0.41%)</title><rect x="140" y="276" width="4" height="15" fill="rgb(217,6,20)"/><text x="143.00" y="286.50"></text></g><g><title>0x7ff5c8a8c8b8 (?) (1 samples, 0.41%)</title><rect x="140" y="292" width="4" height="15" fill="rgb(222,18,40)"/><text x="143.00" y="302.50"></text></g><g><title>0x7ff5c8a8ac7f (?) (1 samples, 0.41%)</title><rect x="140" y="308" width="4" height="15" fill="rgb(207,117,45)"/><text x="143.00" y="318.50"></text></g><g><title>0x7ff5c8a9d99c (?) (1 samples, 0.41%)</title><rect x="140" y="324" width="4" height="15" fill="rgb(222,26,9)"/><text x="143.00" y="334.50"></text></g><g><title>0x7ff5c87c4dc2 (?) (1 samples, 0.41%)</title><rect x="140" y="340" width="4" height="15" fill="rgb(219,188,20)"/><text x="143.00" y="350.50"></text></g><g><title>0x7ff5c87c4541 (?) (1 samples, 0.41%)</title><rect x="140" y="356" width="4" height="15" fill="rgb(235,104,3)"/><text x="143.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="144" y="260" width="5" height="15" fill="rgb(224,30,30)"/><text x="147.00" y="270.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="144" y="276" width="5" height="15" fill="rgb(228,17,11)"/><text x="147.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="144" y="292" width="5" height="15" fill="rgb(254,194,30)"/><text x="147.00" y="302.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py) (3 samples, 1.22%)</title><rect x="140" y="100" width="14" height="15" fill="rgb(244,34,4)"/><text x="143.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 1.22%)</title><rect x="140" y="116" width="14" height="15" fill="rgb(209,14,19)"/><text x="143.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 1.22%)</title><rect x="140" y="132" width="14" height="15" fill="rgb(217,59,15)"/><text x="143.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.22%)</title><rect x="140" y="148" width="14" height="15" fill="rgb(224,108,35)"/><text x="143.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.22%)</title><rect x="140" y="164" width="14" height="15" fill="rgb(244,218,46)"/><text x="143.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (3 samples, 1.22%)</title><rect x="140" y="180" width="14" height="15" fill="rgb(254,123,35)"/><text x="143.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py) (3 samples, 1.22%)</title><rect x="140" y="196" width="14" height="15" fill="rgb(247,145,38)"/><text x="143.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.82%)</title><rect x="144" y="212" width="10" height="15" fill="rgb(228,78,19)"/><text x="147.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.82%)</title><rect x="144" y="228" width="10" height="15" fill="rgb(213,45,20)"/><text x="147.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.82%)</title><rect x="144" y="244" width="10" height="15" fill="rgb(208,100,11)"/><text x="147.00" y="254.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="149" y="260" width="5" height="15" fill="rgb(212,123,9)"/><text x="152.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.41%)</title><rect x="149" y="276" width="5" height="15" fill="rgb(211,48,51)"/><text x="152.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.41%)</title><rect x="149" y="292" width="5" height="15" fill="rgb(207,135,53)"/><text x="152.00" y="302.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.41%)</title><rect x="154" y="132" width="5" height="15" fill="rgb(248,199,34)"/><text x="157.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.41%)</title><rect x="154" y="148" width="5" height="15" fill="rgb(248,127,50)"/><text x="157.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.41%)</title><rect x="154" y="164" width="5" height="15" fill="rgb(243,51,1)"/><text x="157.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="154" y="180" width="5" height="15" fill="rgb(236,70,35)"/><text x="157.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="154" y="196" width="5" height="15" fill="rgb(226,161,30)"/><text x="157.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="154" y="212" width="5" height="15" fill="rgb(235,138,39)"/><text x="157.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="154" y="228" width="5" height="15" fill="rgb(254,157,24)"/><text x="157.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="154" y="244" width="5" height="15" fill="rgb(221,212,0)"/><text x="157.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.41%)</title><rect x="154" y="260" width="5" height="15" fill="rgb(209,218,10)"/><text x="157.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="154" y="276" width="5" height="15" fill="rgb(251,186,28)"/><text x="157.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="154" y="292" width="5" height="15" fill="rgb(231,127,38)"/><text x="157.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="154" y="308" width="5" height="15" fill="rgb(244,228,50)"/><text x="157.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="154" y="324" width="5" height="15" fill="rgb(241,29,5)"/><text x="157.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="154" y="340" width="5" height="15" fill="rgb(227,57,27)"/><text x="157.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.41%)</title><rect x="154" y="356" width="5" height="15" fill="rgb(212,130,30)"/><text x="157.00" y="366.50"></text></g><g><title>check_distro_info (onnxruntime/capi/onnxruntime_validation.py) (1 samples, 0.41%)</title><rect x="154" y="372" width="5" height="15" fill="rgb(248,100,5)"/><text x="157.00" y="382.50"></text></g><g><title>architecture (platform.py) (1 samples, 0.41%)</title><rect x="154" y="388" width="5" height="15" fill="rgb(235,200,0)"/><text x="157.00" y="398.50"></text></g><g><title>_syscmd_file (platform.py) (1 samples, 0.41%)</title><rect x="154" y="404" width="5" height="15" fill="rgb(233,118,39)"/><text x="157.00" y="414.50"></text></g><g><title>__init__ (subprocess.py) (1 samples, 0.41%)</title><rect x="154" y="420" width="5" height="15" fill="rgb(235,108,27)"/><text x="157.00" y="430.50"></text></g><g><title>_execute_child (subprocess.py) (1 samples, 0.41%)</title><rect x="154" y="436" width="5" height="15" fill="rgb(212,73,47)"/><text x="157.00" y="446.50"></text></g><g><title>subprocess_fork_exec (_posixsubprocess.c) (1 samples, 0.41%)</title><rect x="154" y="452" width="5" height="15" fill="rgb(236,78,50)"/><text x="157.00" y="462.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.41%)</title><rect x="154" y="468" width="5" height="15" fill="rgb(243,208,44)"/><text x="157.00" y="478.50"></text></g><g><title>profile_ort (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py) (5 samples, 2.04%)</title><rect x="140" y="68" width="24" height="15" fill="rgb(216,189,6)"/><text x="143.00" y="78.50">p..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py) (5 samples, 2.04%)</title><rect x="140" y="84" width="24" height="15" fill="rgb(233,76,35)"/><text x="143.00" y="94.50">s..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.82%)</title><rect x="154" y="100" width="10" height="15" fill="rgb(234,217,13)"/><text x="157.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.82%)</title><rect x="154" y="116" width="10" height="15" fill="rgb(217,116,13)"/><text x="157.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.41%)</title><rect x="159" y="132" width="5" height="15" fill="rgb(247,57,48)"/><text x="162.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.41%)</title><rect x="159" y="148" width="5" height="15" fill="rgb(222,181,0)"/><text x="162.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.41%)</title><rect x="159" y="164" width="5" height="15" fill="rgb(213,135,19)"/><text x="162.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.41%)</title><rect x="159" y="180" width="5" height="15" fill="rgb(208,72,26)"/><text x="162.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py) (1 samples, 0.41%)</title><rect x="159" y="196" width="5" height="15" fill="rgb(214,169,52)"/><text x="162.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.41%)</title><rect x="159" y="212" width="5" height="15" fill="rgb(233,100,36)"/><text x="162.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.41%)</title><rect x="159" y="228" width="5" height="15" fill="rgb(214,41,40)"/><text x="162.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="159" y="244" width="5" height="15" fill="rgb(221,17,28)"/><text x="162.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.41%)</title><rect x="159" y="260" width="5" height="15" fill="rgb(209,136,11)"/><text x="162.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.41%)</title><rect x="159" y="276" width="5" height="15" fill="rgb(222,163,38)"/><text x="162.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.41%)</title><rect x="159" y="292" width="5" height="15" fill="rgb(225,201,3)"/><text x="162.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py) (1 samples, 0.41%)</title><rect x="159" y="308" width="5" height="15" fill="rgb(206,221,1)"/><text x="162.00" y="318.50"></text></g><g><title>0x7ff5c90a554f (?) (1 samples, 0.41%)</title><rect x="164" y="244" width="4" height="15" fill="rgb(250,8,0)"/><text x="167.00" y="254.50"></text></g><g><title>0x7ff5c90ab65e (?) (1 samples, 0.41%)</title><rect x="164" y="260" width="4" height="15" fill="rgb(209,182,36)"/><text x="167.00" y="270.50"></text></g><g><title>0x7ff5c90ab50f (?) (1 samples, 0.41%)</title><rect x="164" y="276" width="4" height="15" fill="rgb(254,209,20)"/><text x="167.00" y="286.50"></text></g><g><title>0x7ff5c90b1d6c (?) (1 samples, 0.41%)</title><rect x="164" y="292" width="4" height="15" fill="rgb(233,76,15)"/><text x="167.00" y="302.50"></text></g><g><title>0x7ff5d2588cfa (?) (1 samples, 0.41%)</title><rect x="164" y="308" width="4" height="15" fill="rgb(222,77,52)"/><text x="167.00" y="318.50"></text></g><g><title>0x7ff5d2591daa (?) (1 samples, 0.41%)</title><rect x="164" y="324" width="4" height="15" fill="rgb(252,223,27)"/><text x="167.00" y="334.50"></text></g><g><title>0x7ff5d2593cf9 (?) (1 samples, 0.41%)</title><rect x="164" y="340" width="4" height="15" fill="rgb(223,25,46)"/><text x="167.00" y="350.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py) (2 samples, 0.82%)</title><rect x="164" y="100" width="9" height="15" fill="rgb(248,94,4)"/><text x="167.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.82%)</title><rect x="164" y="116" width="9" height="15" fill="rgb(208,177,45)"/><text x="167.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.82%)</title><rect x="164" y="132" width="9" height="15" fill="rgb(223,29,34)"/><text x="167.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.82%)</title><rect x="164" y="148" width="9" height="15" fill="rgb(211,53,3)"/><text x="167.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.82%)</title><rect x="164" y="164" width="9" height="15" fill="rgb(206,187,47)"/><text x="167.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.82%)</title><rect x="164" y="180" width="9" height="15" fill="rgb(206,36,4)"/><text x="167.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (2 samples, 0.82%)</title><rect x="164" y="196" width="9" height="15" fill="rgb(248,4,24)"/><text x="167.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (2 samples, 0.82%)</title><rect x="164" y="212" width="9" height="15" fill="rgb(223,156,49)"/><text x="167.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (2 samples, 0.82%)</title><rect x="164" y="228" width="9" height="15" fill="rgb(254,54,0)"/><text x="167.00" y="238.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (1 samples, 0.41%)</title><rect x="168" y="244" width="5" height="15" fill="rgb(235,27,4)"/><text x="171.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (1 samples, 0.41%)</title><rect x="168" y="260" width="5" height="15" fill="rgb(251,78,10)"/><text x="171.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (1 samples, 0.41%)</title><rect x="168" y="276" width="5" height="15" fill="rgb(229,179,3)"/><text x="171.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (1 samples, 0.41%)</title><rect x="168" y="292" width="5" height="15" fill="rgb(229,7,6)"/><text x="171.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (1 samples, 0.41%)</title><rect x="168" y="308" width="5" height="15" fill="rgb(251,131,26)"/><text x="171.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (1 samples, 0.41%)</title><rect x="168" y="324" width="5" height="15" fill="rgb(235,63,3)"/><text x="171.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (1 samples, 0.41%)</title><rect x="168" y="340" width="5" height="15" fill="rgb(218,138,50)"/><text x="171.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h) (1 samples, 0.41%)</title><rect x="168" y="356" width="5" height="15" fill="rgb(222,216,32)"/><text x="171.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (1 samples, 0.41%)</title><rect x="168" y="372" width="5" height="15" fill="rgb(240,200,15)"/><text x="171.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 0.41%)</title><rect x="168" y="388" width="5" height="15" fill="rgb(249,142,26)"/><text x="171.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.41%)</title><rect x="168" y="404" width="5" height="15" fill="rgb(231,142,16)"/><text x="171.00" y="414.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (1 samples, 0.41%)</title><rect x="168" y="420" width="5" height="15" fill="rgb(249,23,24)"/><text x="171.00" y="430.50"></text></g><g><title>pybind11::array::size (numpy.h) (1 samples, 0.41%)</title><rect x="168" y="436" width="5" height="15" fill="rgb(228,19,24)"/><text x="171.00" y="446.50"></text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (1 samples, 0.41%)</title><rect x="168" y="452" width="5" height="15" fill="rgb(234,49,5)"/><text x="171.00" y="462.50"></text></g><g><title>0x7ff5d2592ab9 (libgomp.so.1.0.0) (1 samples, 0.41%)</title><rect x="168" y="468" width="5" height="15" fill="rgb(212,123,34)"/><text x="171.00" y="478.50"></text></g><g><title>0x7ff5d2593eab (libgomp.so.1.0.0) (1 samples, 0.41%)</title><rect x="168" y="484" width="5" height="15" fill="rgb(246,86,48)"/><text x="171.00" y="494.50"></text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py) (3 samples, 1.22%)</title><rect x="164" y="68" width="14" height="15" fill="rgb(213,18,48)"/><text x="167.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py) (3 samples, 1.22%)</title><rect x="164" y="84" width="14" height="15" fill="rgb(208,13,7)"/><text x="167.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.41%)</title><rect x="173" y="100" width="5" height="15" fill="rgb(237,201,52)"/><text x="176.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.41%)</title><rect x="173" y="116" width="5" height="15" fill="rgb(237,68,35)"/><text x="176.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.41%)</title><rect x="173" y="132" width="5" height="15" fill="rgb(228,158,44)"/><text x="176.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.41%)</title><rect x="173" y="148" width="5" height="15" fill="rgb(229,73,51)"/><text x="176.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.41%)</title><rect x="173" y="164" width="5" height="15" fill="rgb(225,195,42)"/><text x="176.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.41%)</title><rect x="173" y="180" width="5" height="15" fill="rgb(236,147,0)"/><text x="176.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.41%)</title><rect x="173" y="196" width="5" height="15" fill="rgb(235,79,52)"/><text x="176.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="173" y="212" width="5" height="15" fill="rgb(220,200,14)"/><text x="176.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="173" y="228" width="5" height="15" fill="rgb(219,46,0)"/><text x="176.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="173" y="244" width="5" height="15" fill="rgb(226,18,24)"/><text x="176.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="173" y="260" width="5" height="15" fill="rgb(225,57,50)"/><text x="176.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="173" y="276" width="5" height="15" fill="rgb(241,217,39)"/><text x="176.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.41%)</title><rect x="173" y="292" width="5" height="15" fill="rgb(240,130,35)"/><text x="176.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="173" y="308" width="5" height="15" fill="rgb(208,194,0)"/><text x="176.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="173" y="324" width="5" height="15" fill="rgb(234,195,30)"/><text x="176.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="173" y="340" width="5" height="15" fill="rgb(225,37,16)"/><text x="176.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="173" y="356" width="5" height="15" fill="rgb(238,0,38)"/><text x="176.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="173" y="372" width="5" height="15" fill="rgb(222,159,3)"/><text x="176.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.41%)</title><rect x="173" y="388" width="5" height="15" fill="rgb(244,68,12)"/><text x="176.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="173" y="404" width="5" height="15" fill="rgb(226,46,29)"/><text x="176.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="173" y="420" width="5" height="15" fill="rgb(209,80,45)"/><text x="176.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="173" y="436" width="5" height="15" fill="rgb(231,158,17)"/><text x="176.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="173" y="452" width="5" height="15" fill="rgb(246,198,42)"/><text x="176.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="173" y="468" width="5" height="15" fill="rgb(221,157,21)"/><text x="176.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.41%)</title><rect x="173" y="484" width="5" height="15" fill="rgb(252,170,39)"/><text x="176.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.41%)</title><rect x="173" y="500" width="5" height="15" fill="rgb(215,206,37)"/><text x="176.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.41%)</title><rect x="173" y="516" width="5" height="15" fill="rgb(227,205,34)"/><text x="176.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.41%)</title><rect x="173" y="532" width="5" height="15" fill="rgb(248,20,19)"/><text x="176.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.41%)</title><rect x="173" y="548" width="5" height="15" fill="rgb(208,225,11)"/><text x="176.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.41%)</title><rect x="173" y="564" width="5" height="15" fill="rgb(245,202,14)"/><text x="176.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.41%)</title><rect x="173" y="580" width="5" height="15" fill="rgb(244,7,30)"/><text x="176.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.41%)</title><rect x="173" y="596" width="5" height="15" fill="rgb(245,43,3)"/><text x="176.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.41%)</title><rect x="173" y="612" width="5" height="15" fill="rgb(231,66,15)"/><text x="176.00" y="622.50"></text></g><g><title>find (jinja2/nodes.py) (1 samples, 0.41%)</title><rect x="173" y="628" width="5" height="15" fill="rgb(247,31,25)"/><text x="176.00" y="638.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.41%)</title><rect x="173" y="644" width="5" height="15" fill="rgb(231,225,22)"/><text x="176.00" y="654.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.41%)</title><rect x="173" y="660" width="5" height="15" fill="rgb(241,208,37)"/><text x="176.00" y="670.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.41%)</title><rect x="173" y="676" width="5" height="15" fill="rgb(241,195,3)"/><text x="176.00" y="686.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.41%)</title><rect x="173" y="692" width="5" height="15" fill="rgb(219,29,28)"/><text x="176.00" y="702.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.41%)</title><rect x="173" y="708" width="5" height="15" fill="rgb(236,8,23)"/><text x="176.00" y="718.50"></text></g><g><title>delayed (joblib/parallel.py) (14 samples, 5.71%)</title><rect x="342" y="212" width="67" height="15" fill="rgb(246,39,22)"/><text x="345.00" y="222.50">delayed..</text></g><g><title>update_wrapper (functools.py) (11 samples, 4.49%)</title><rect x="356" y="228" width="53" height="15" fill="rgb(216,215,40)"/><text x="359.00" y="238.50">updat..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (18 samples, 7.35%)</title><rect x="327" y="196" width="87" height="15" fill="rgb(219,223,15)"/><text x="330.00" y="206.50">&lt;genexpr&gt; ..</text></g><g><title>delayed_function (joblib/parallel.py) (1 samples, 0.41%)</title><rect x="409" y="212" width="5" height="15" fill="rgb(254,208,48)"/><text x="412.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.41%)</title><rect x="438" y="212" width="5" height="15" fill="rgb(216,205,47)"/><text x="441.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py) (7 samples, 2.86%)</title><rect x="448" y="228" width="34" height="15" fill="rgb(205,80,1)"/><text x="451.00" y="238.50">__..</text></g><g><title>print_progress (joblib/parallel.py) (1 samples, 0.41%)</title><rect x="477" y="244" width="5" height="15" fill="rgb(214,81,43)"/><text x="480.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.41%)</title><rect x="530" y="292" width="4" height="15" fill="rgb(253,199,19)"/><text x="533.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.41%)</title><rect x="530" y="308" width="4" height="15" fill="rgb(233,38,52)"/><text x="533.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.41%)</title><rect x="530" y="324" width="4" height="15" fill="rgb(239,216,21)"/><text x="533.00" y="334.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.41%)</title><rect x="534" y="292" width="5" height="15" fill="rgb(230,188,47)"/><text x="537.00" y="302.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.41%)</title><rect x="534" y="308" width="5" height="15" fill="rgb(249,205,1)"/><text x="537.00" y="318.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="534" y="324" width="5" height="15" fill="rgb(221,135,16)"/><text x="537.00" y="334.50"></text></g><g><title>0x7ff5e1fffcd1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="559" y="340" width="4" height="15" fill="rgb(248,168,52)"/><text x="562.00" y="350.50"></text></g><g><title>0x7ff5e200ff55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.22%)</title><rect x="559" y="324" width="14" height="15" fill="rgb(242,151,9)"/><text x="562.00" y="334.50"></text></g><g><title>0x7ff5e1fffd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.82%)</title><rect x="563" y="340" width="10" height="15" fill="rgb(249,228,14)"/><text x="566.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.82%)</title><rect x="563" y="356" width="10" height="15" fill="rgb(229,133,13)"/><text x="566.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.82%)</title><rect x="563" y="372" width="10" height="15" fill="rgb(229,167,7)"/><text x="566.00" y="382.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src) (1 samples, 0.41%)</title><rect x="568" y="388" width="5" height="15" fill="rgb(240,124,48)"/><text x="571.00" y="398.50"></text></g><g><title>0x7ff5e201e1dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="573" y="356" width="5" height="15" fill="rgb(214,122,6)"/><text x="576.00" y="366.50"></text></g><g><title>0x7ff5e201e225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="578" y="356" width="5" height="15" fill="rgb(216,114,44)"/><text x="581.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.41%)</title><rect x="578" y="372" width="5" height="15" fill="rgb(220,107,10)"/><text x="581.00" y="382.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.41%)</title><rect x="578" y="388" width="5" height="15" fill="rgb(207,48,15)"/><text x="581.00" y="398.50"></text></g><g><title>0x7ff5e1ff80f3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="583" y="404" width="4" height="15" fill="rgb(212,79,43)"/><text x="586.00" y="414.50"></text></g><g><title>0x7ff5e1ff82c2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="587" y="404" width="5" height="15" fill="rgb(252,119,20)"/><text x="590.00" y="414.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.41%)</title><rect x="592" y="452" width="5" height="15" fill="rgb(206,61,30)"/><text x="595.00" y="462.50"></text></g><g><title>0x7ff6085db6a2 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="592" y="468" width="5" height="15" fill="rgb(228,81,36)"/><text x="595.00" y="478.50"></text></g><g><title>0x7ff5e2002d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.45%)</title><rect x="583" y="372" width="29" height="15" fill="rgb(230,8,8)"/><text x="586.00" y="382.50">0x..</text></g><g><title>0x7ff5e2002666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.45%)</title><rect x="583" y="388" width="29" height="15" fill="rgb(234,13,51)"/><text x="586.00" y="398.50">0x..</text></g><g><title>0x7ff5e1ff82fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.63%)</title><rect x="592" y="404" width="20" height="15" fill="rgb(229,26,1)"/><text x="595.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c) (4 samples, 1.63%)</title><rect x="592" y="420" width="20" height="15" fill="rgb(239,5,13)"/><text x="595.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c) (4 samples, 1.63%)</title><rect x="592" y="436" width="20" height="15" fill="rgb(241,189,18)"/><text x="595.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c) (3 samples, 1.22%)</title><rect x="597" y="452" width="15" height="15" fill="rgb(241,40,51)"/><text x="600.00" y="462.50"></text></g><g><title>_buffer_format_string (buffer.c) (3 samples, 1.22%)</title><rect x="597" y="468" width="15" height="15" fill="rgb(250,104,40)"/><text x="600.00" y="478.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.41%)</title><rect x="607" y="484" width="5" height="15" fill="rgb(234,150,36)"/><text x="610.00" y="494.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="607" y="500" width="5" height="15" fill="rgb(237,117,53)"/><text x="610.00" y="510.50"></text></g><g><title>0x7ff5e2002e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="612" y="372" width="4" height="15" fill="rgb(234,203,52)"/><text x="615.00" y="382.50"></text></g><g><title>0x7ff5e1ff5f4c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="612" y="388" width="4" height="15" fill="rgb(214,196,9)"/><text x="615.00" y="398.50"></text></g><g><title>0x7ff5e201e2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 3.27%)</title><rect x="583" y="356" width="38" height="15" fill="rgb(246,39,42)"/><text x="586.00" y="366.50">0x7..</text></g><g><title>0x7ff5e2002efd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="616" y="372" width="5" height="15" fill="rgb(236,109,43)"/><text x="619.00" y="382.50"></text></g><g><title>0x7ff5e1ff32a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="616" y="388" width="5" height="15" fill="rgb(208,171,40)"/><text x="619.00" y="398.50"></text></g><g><title>0x7ff5e201e33c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="621" y="356" width="5" height="15" fill="rgb(222,100,10)"/><text x="624.00" y="366.50"></text></g><g><title>0x7ff5e201e456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="626" y="356" width="5" height="15" fill="rgb(205,119,30)"/><text x="629.00" y="366.50"></text></g><g><title>0x7ff5e201e511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="631" y="356" width="5" height="15" fill="rgb(213,14,32)"/><text x="634.00" y="366.50"></text></g><g><title>0x7ff6086aa134 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="631" y="372" width="5" height="15" fill="rgb(205,145,28)"/><text x="634.00" y="382.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.41%)</title><rect x="640" y="404" width="5" height="15" fill="rgb(212,29,15)"/><text x="643.00" y="414.50"></text></g><g><title>0x7ff5e201e592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.22%)</title><rect x="636" y="356" width="14" height="15" fill="rgb(217,221,51)"/><text x="639.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c) (2 samples, 0.82%)</title><rect x="640" y="372" width="10" height="15" fill="rgb(231,85,27)"/><text x="643.00" y="382.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.82%)</title><rect x="640" y="388" width="10" height="15" fill="rgb(220,171,24)"/><text x="643.00" y="398.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.41%)</title><rect x="645" y="404" width="5" height="15" fill="rgb(224,124,2)"/><text x="648.00" y="414.50"></text></g><g><title>0x7ff5e201e6fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="650" y="356" width="5" height="15" fill="rgb(226,90,44)"/><text x="653.00" y="366.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="650" y="372" width="5" height="15" fill="rgb(253,143,38)"/><text x="653.00" y="382.50"></text></g><g><title>0x7ff5e200ffa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (20 samples, 8.16%)</title><rect x="573" y="324" width="96" height="15" fill="rgb(232,126,3)"/><text x="576.00" y="334.50">0x7ff5e200f..</text></g><g><title>0x7ff5e201f405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (20 samples, 8.16%)</title><rect x="573" y="340" width="96" height="15" fill="rgb(226,40,49)"/><text x="576.00" y="350.50">0x7ff5e201f..</text></g><g><title>0x7ff5e201ec27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.22%)</title><rect x="655" y="356" width="14" height="15" fill="rgb(253,143,3)"/><text x="658.00" y="366.50"></text></g><g><title>0x7ff5e1ff6529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.22%)</title><rect x="655" y="372" width="14" height="15" fill="rgb(211,120,44)"/><text x="658.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 1.22%)</title><rect x="655" y="388" width="14" height="15" fill="rgb(224,165,33)"/><text x="658.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 1.22%)</title><rect x="655" y="404" width="14" height="15" fill="rgb(247,173,2)"/><text x="658.00" y="414.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.41%)</title><rect x="674" y="356" width="5" height="15" fill="rgb(252,31,49)"/><text x="677.00" y="366.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.41%)</title><rect x="679" y="356" width="5" height="15" fill="rgb(246,59,46)"/><text x="682.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (1 samples, 0.41%)</title><rect x="684" y="372" width="5" height="15" fill="rgb(228,152,24)"/><text x="687.00" y="382.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.41%)</title><rect x="689" y="372" width="4" height="15" fill="rgb(244,169,1)"/><text x="692.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.41%)</title><rect x="689" y="388" width="4" height="15" fill="rgb(234,34,47)"/><text x="692.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.41%)</title><rect x="689" y="404" width="4" height="15" fill="rgb(249,161,19)"/><text x="692.00" y="414.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.41%)</title><rect x="689" y="420" width="4" height="15" fill="rgb(226,133,6)"/><text x="692.00" y="430.50"></text></g><g><title>0x7ff5e201005a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.45%)</title><rect x="669" y="324" width="29" height="15" fill="rgb(225,120,3)"/><text x="672.00" y="334.50">0x..</text></g><g><title>array_take (methods.c) (6 samples, 2.45%)</title><rect x="669" y="340" width="29" height="15" fill="rgb(214,223,3)"/><text x="672.00" y="350.50">ar..</text></g><g><title>PyArray_TakeFrom (item_selection.c) (3 samples, 1.22%)</title><rect x="684" y="356" width="14" height="15" fill="rgb(216,23,50)"/><text x="687.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.41%)</title><rect x="693" y="372" width="5" height="15" fill="rgb(251,74,3)"/><text x="696.00" y="382.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.41%)</title><rect x="693" y="388" width="5" height="15" fill="rgb(210,85,8)"/><text x="696.00" y="398.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.41%)</title><rect x="698" y="356" width="5" height="15" fill="rgb(216,226,16)"/><text x="701.00" y="366.50"></text></g><g><title>0x7ff6077ee3d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="698" y="372" width="5" height="15" fill="rgb(214,64,23)"/><text x="701.00" y="382.50"></text></g><g><title>0x7ff5e2010328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.22%)</title><rect x="698" y="324" width="15" height="15" fill="rgb(229,127,23)"/><text x="701.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (3 samples, 1.22%)</title><rect x="698" y="340" width="15" height="15" fill="rgb(243,125,14)"/><text x="701.00" y="350.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.82%)</title><rect x="703" y="356" width="10" height="15" fill="rgb(244,67,33)"/><text x="706.00" y="366.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 0.82%)</title><rect x="703" y="372" width="10" height="15" fill="rgb(220,153,43)"/><text x="706.00" y="382.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.41%)</title><rect x="708" y="388" width="5" height="15" fill="rgb(230,227,47)"/><text x="711.00" y="398.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.41%)</title><rect x="708" y="404" width="5" height="15" fill="rgb(207,178,45)"/><text x="711.00" y="414.50"></text></g><g><title>0x7ff5e2010d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (33 samples, 13.47%)</title><rect x="559" y="308" width="159" height="15" fill="rgb(207,54,24)"/><text x="562.00" y="318.50">0x7ff5e2010d2e (skle..</text></g><g><title>0x7ff5e20108d3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="713" y="324" width="5" height="15" fill="rgb(236,112,13)"/><text x="716.00" y="334.50"></text></g><g><title>0x7ff5e1fecbbb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="713" y="340" width="5" height="15" fill="rgb(245,33,16)"/><text x="716.00" y="350.50"></text></g><g><title>get_view_from_index (mapping.c) (2 samples, 0.82%)</title><rect x="722" y="324" width="10" height="15" fill="rgb(212,55,46)"/><text x="725.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.41%)</title><rect x="727" y="340" width="5" height="15" fill="rgb(221,141,27)"/><text x="730.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.41%)</title><rect x="727" y="356" width="5" height="15" fill="rgb(217,102,22)"/><text x="730.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.41%)</title><rect x="727" y="372" width="5" height="15" fill="rgb(245,58,8)"/><text x="730.00" y="382.50"></text></g><g><title>array_subscript (mapping.c) (4 samples, 1.63%)</title><rect x="718" y="308" width="19" height="15" fill="rgb(221,217,45)"/><text x="721.00" y="318.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.41%)</title><rect x="732" y="324" width="5" height="15" fill="rgb(217,59,48)"/><text x="735.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.41%)</title><rect x="770" y="340" width="5" height="15" fill="rgb(228,6,4)"/><text x="773.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 2.45%)</title><rect x="756" y="324" width="29" height="15" fill="rgb(249,91,45)"/><text x="759.00" y="334.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.82%)</title><rect x="775" y="340" width="10" height="15" fill="rgb(216,65,11)"/><text x="778.00" y="350.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (12 samples, 4.90%)</title><rect x="737" y="308" width="58" height="15" fill="rgb(209,32,13)"/><text x="740.00" y="318.50">check_..</text></g><g><title>isclass (inspect.py) (2 samples, 0.82%)</title><rect x="785" y="324" width="10" height="15" fill="rgb(207,20,0)"/><text x="788.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (55 samples, 22.45%)</title><rect x="539" y="292" width="265" height="15" fill="rgb(226,161,29)"/><text x="542.00" y="302.50">predict (sklearn/tree/_classes.py)</text></g><g><title>is_classifier (sklearn/base.py) (2 samples, 0.82%)</title><rect x="795" y="308" width="9" height="15" fill="rgb(218,124,48)"/><text x="798.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.82%)</title><rect x="809" y="324" width="10" height="15" fill="rgb(230,62,45)"/><text x="812.00" y="334.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c) (1 samples, 0.41%)</title><rect x="814" y="340" width="5" height="15" fill="rgb(217,150,9)"/><text x="817.00" y="350.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.41%)</title><rect x="819" y="324" width="4" height="15" fill="rgb(222,10,45)"/><text x="822.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.41%)</title><rect x="823" y="356" width="5" height="15" fill="rgb(225,217,19)"/><text x="826.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.41%)</title><rect x="823" y="372" width="5" height="15" fill="rgb(243,4,22)"/><text x="826.00" y="382.50"></text></g><g><title>solve_may_have_internal_overlap (mem_overlap.c) (1 samples, 0.41%)</title><rect x="823" y="388" width="5" height="15" fill="rgb(221,96,32)"/><text x="826.00" y="398.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.41%)</title><rect x="828" y="356" width="5" height="15" fill="rgb(236,209,19)"/><text x="831.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.82%)</title><rect x="833" y="356" width="10" height="15" fill="rgb(213,229,3)"/><text x="836.00" y="366.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.41%)</title><rect x="838" y="372" width="5" height="15" fill="rgb(220,124,2)"/><text x="841.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 2.04%)</title><rect x="823" y="324" width="25" height="15" fill="rgb(231,124,29)"/><text x="826.00" y="334.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 2.04%)</title><rect x="823" y="340" width="25" height="15" fill="rgb(219,208,7)"/><text x="826.00" y="350.50">i..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.41%)</title><rect x="843" y="356" width="5" height="15" fill="rgb(230,226,17)"/><text x="846.00" y="366.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.41%)</title><rect x="843" y="372" width="5" height="15" fill="rgb(229,145,18)"/><text x="846.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 4.08%)</title><rect x="804" y="308" width="48" height="15" fill="rgb(241,134,5)"/><text x="807.00" y="318.50">PyUF..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.41%)</title><rect x="848" y="324" width="4" height="15" fill="rgb(242,82,20)"/><text x="851.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (72 samples, 29.39%)</title><rect x="510" y="260" width="347" height="15" fill="rgb(226,162,47)"/><text x="513.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (69 samples, 28.16%)</title><rect x="525" y="276" width="332" height="15" fill="rgb(252,86,16)"/><text x="528.00" y="286.50">_accumulate_prediction (sklearn/ensemble/_fo..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 4.49%)</title><rect x="804" y="292" width="53" height="15" fill="rgb(237,83,8)"/><text x="807.00" y="302.50">ufunc..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.41%)</title><rect x="852" y="308" width="5" height="15" fill="rgb(226,23,23)"/><text x="855.00" y="318.50"></text></g><g><title>_get_output_array_method (ufunc_object.c) (1 samples, 0.41%)</title><rect x="852" y="324" width="5" height="15" fill="rgb(254,92,26)"/><text x="855.00" y="334.50"></text></g><g><title>__exit__ (joblib/parallel.py) (2 samples, 0.82%)</title><rect x="857" y="260" width="10" height="15" fill="rgb(229,23,41)"/><text x="860.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py) (1 samples, 0.41%)</title><rect x="862" y="276" width="5" height="15" fill="rgb(205,222,32)"/><text x="865.00" y="286.50"></text></g><g><title>_dispatch (joblib/parallel.py) (100 samples, 40.82%)</title><rect x="414" y="196" width="482" height="15" fill="rgb(250,80,20)"/><text x="417.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>apply_async (joblib/_parallel_backends.py) (94 samples, 38.37%)</title><rect x="443" y="212" width="453" height="15" fill="rgb(233,110,47)"/><text x="446.00" y="222.50">apply_async (joblib/_parallel_backends.py)</text></g><g><title>__init__ (joblib/_parallel_backends.py) (86 samples, 35.10%)</title><rect x="482" y="228" width="414" height="15" fill="rgb(216,210,35)"/><text x="485.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (85 samples, 34.69%)</title><rect x="486" y="244" width="410" height="15" fill="rgb(212,193,52)"/><text x="489.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (6 samples, 2.45%)</title><rect x="867" y="260" width="29" height="15" fill="rgb(250,55,45)"/><text x="870.00" y="270.50">__..</text></g><g><title>0x7ff6085ed12f (libc-2.29.so) (1 samples, 0.41%)</title><rect x="920" y="212" width="5" height="15" fill="rgb(242,30,25)"/><text x="923.00" y="222.50"></text></g><g><title>__enter__ (threading.py) (2 samples, 0.82%)</title><rect x="925" y="212" width="9" height="15" fill="rgb(230,50,37)"/><text x="928.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.41%)</title><rect x="929" y="228" width="5" height="15" fill="rgb(253,142,47)"/><text x="932.00" y="238.50"></text></g><g><title>0x7ff6085e2776 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="929" y="244" width="5" height="15" fill="rgb(233,84,48)"/><text x="932.00" y="254.50"></text></g><g><title>__exit__ (threading.py) (2 samples, 0.82%)</title><rect x="934" y="212" width="10" height="15" fill="rgb(220,95,8)"/><text x="937.00" y="222.50"></text></g><g><title>_qsize (queue.py) (1 samples, 0.41%)</title><rect x="944" y="212" width="5" height="15" fill="rgb(250,14,10)"/><text x="947.00" y="222.50"></text></g><g><title>get (queue.py) (14 samples, 5.71%)</title><rect x="896" y="196" width="67" height="15" fill="rgb(209,90,14)"/><text x="899.00" y="206.50">get (qu..</text></g><g><title>notify (threading.py) (3 samples, 1.22%)</title><rect x="949" y="212" width="14" height="15" fill="rgb(252,62,20)"/><text x="952.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.45%)</title><rect x="1002" y="212" width="29" height="15" fill="rgb(243,154,19)"/><text x="1005.00" y="222.50">_h..</text></g><g><title>0x7ff6085e2eaa (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1026" y="228" width="5" height="15" fill="rgb(253,20,19)"/><text x="1029.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (5 samples, 2.04%)</title><rect x="1031" y="212" width="24" height="15" fill="rgb(252,38,39)"/><text x="1034.00" y="222.50">g..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.41%)</title><rect x="1050" y="228" width="5" height="15" fill="rgb(215,178,38)"/><text x="1053.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="1055" y="212" width="4" height="15" fill="rgb(251,111,19)"/><text x="1058.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (22 samples, 8.98%)</title><rect x="963" y="196" width="106" height="15" fill="rgb(212,123,12)"/><text x="966.00" y="206.50">get_nested_b..</text></g><g><title>unicode_hash (python3.7) (2 samples, 0.82%)</title><rect x="1059" y="212" width="10" height="15" fill="rgb(226,18,26)"/><text x="1062.00" y="222.50"></text></g><g><title>__enter__ (threading.py) (1 samples, 0.41%)</title><rect x="1093" y="212" width="5" height="15" fill="rgb(239,47,37)"/><text x="1096.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (193 samples, 78.78%)</title><rect x="197" y="180" width="930" height="15" fill="rgb(246,95,43)"/><text x="200.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (12 samples, 4.90%)</title><rect x="1069" y="196" width="58" height="15" fill="rgb(242,42,17)"/><text x="1072.00" y="206.50">put (q..</text></g><g><title>notify (threading.py) (6 samples, 2.45%)</title><rect x="1098" y="212" width="29" height="15" fill="rgb(224,79,49)"/><text x="1101.00" y="222.50">no..</text></g><g><title>_is_owned (threading.py) (2 samples, 0.82%)</title><rect x="1117" y="228" width="10" height="15" fill="rgb(243,163,45)"/><text x="1120.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.82%)</title><rect x="1117" y="244" width="10" height="15" fill="rgb(220,78,14)"/><text x="1120.00" y="254.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.41%)</title><rect x="1122" y="260" width="5" height="15" fill="rgb(226,62,38)"/><text x="1125.00" y="270.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="1122" y="276" width="5" height="15" fill="rgb(246,117,42)"/><text x="1125.00" y="286.50"></text></g><g><title>retrieve (joblib/parallel.py) (3 samples, 1.22%)</title><rect x="1127" y="180" width="14" height="15" fill="rgb(226,103,0)"/><text x="1130.00" y="190.50"></text></g><g><title>__call__ (joblib/parallel.py) (199 samples, 81.22%)</title><rect x="188" y="164" width="958" height="15" fill="rgb(214,12,39)"/><text x="191.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>short_format_time (joblib/logger.py) (1 samples, 0.41%)</title><rect x="1141" y="180" width="5" height="15" fill="rgb(250,173,50)"/><text x="1144.00" y="190.50"></text></g><g><title>_squeeze_time (joblib/logger.py) (1 samples, 0.41%)</title><rect x="1141" y="196" width="5" height="15" fill="rgb(239,93,47)"/><text x="1144.00" y="206.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py) (1 samples, 0.41%)</title><rect x="1146" y="164" width="5" height="15" fill="rgb(231,212,33)"/><text x="1149.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.41%)</title><rect x="1146" y="180" width="5" height="15" fill="rgb(248,97,22)"/><text x="1149.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.41%)</title><rect x="1146" y="196" width="5" height="15" fill="rgb(205,97,41)"/><text x="1149.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.41%)</title><rect x="1146" y="212" width="5" height="15" fill="rgb(226,124,40)"/><text x="1149.00" y="222.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.41%)</title><rect x="1146" y="228" width="5" height="15" fill="rgb(218,127,6)"/><text x="1149.00" y="238.50"></text></g><g><title>0x7ff6077ef0a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="1146" y="244" width="5" height="15" fill="rgb(254,166,50)"/><text x="1149.00" y="254.50"></text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py) (1 samples, 0.41%)</title><rect x="1151" y="164" width="5" height="15" fill="rgb(249,123,38)"/><text x="1154.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.41%)</title><rect x="1151" y="180" width="5" height="15" fill="rgb(216,19,26)"/><text x="1154.00" y="190.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py) (204 samples, 83.27%)</title><rect x="178" y="100" width="983" height="15" fill="rgb(208,12,34)"/><text x="181.00" y="110.50">profile (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (204 samples, 83.27%)</title><rect x="178" y="116" width="983" height="15" fill="rgb(244,161,21)"/><text x="181.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (204 samples, 83.27%)</title><rect x="178" y="132" width="983" height="15" fill="rgb(250,181,8)"/><text x="181.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/ensemble/_forest.py) (203 samples, 82.86%)</title><rect x="183" y="148" width="978" height="15" fill="rgb(233,198,53)"/><text x="186.00" y="158.50">predict (sklearn/ensemble/_forest.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.41%)</title><rect x="1156" y="164" width="5" height="15" fill="rgb(213,129,32)"/><text x="1159.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.41%)</title><rect x="1156" y="180" width="5" height="15" fill="rgb(214,77,13)"/><text x="1159.00" y="190.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.41%)</title><rect x="1156" y="196" width="5" height="15" fill="rgb(251,55,41)"/><text x="1159.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.41%)</title><rect x="1156" y="212" width="5" height="15" fill="rgb(227,44,50)"/><text x="1159.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.41%)</title><rect x="1156" y="228" width="5" height="15" fill="rgb(205,201,32)"/><text x="1159.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.41%)</title><rect x="1156" y="244" width="5" height="15" fill="rgb(217,227,30)"/><text x="1159.00" y="254.50"></text></g><g><title>profile_skl (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py) (206 samples, 84.08%)</title><rect x="178" y="68" width="992" height="15" fill="rgb(233,180,24)"/><text x="181.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py) (206 samples, 84.08%)</title><rect x="178" y="84" width="992" height="15" fill="rgb(225,34,39)"/><text x="181.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.82%)</title><rect x="1161" y="100" width="9" height="15" fill="rgb(214,147,10)"/><text x="1164.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.82%)</title><rect x="1161" y="116" width="9" height="15" fill="rgb(209,142,42)"/><text x="1164.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.82%)</title><rect x="1161" y="132" width="9" height="15" fill="rgb(219,67,5)"/><text x="1164.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (2 samples, 0.82%)</title><rect x="1161" y="148" width="9" height="15" fill="rgb(207,86,50)"/><text x="1164.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (2 samples, 0.82%)</title><rect x="1161" y="164" width="9" height="15" fill="rgb(240,112,43)"/><text x="1164.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (2 samples, 0.82%)</title><rect x="1161" y="180" width="9" height="15" fill="rgb(238,105,50)"/><text x="1164.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py) (2 samples, 0.82%)</title><rect x="1161" y="196" width="9" height="15" fill="rgb(220,82,31)"/><text x="1164.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (2 samples, 0.82%)</title><rect x="1161" y="212" width="9" height="15" fill="rgb(226,45,28)"/><text x="1164.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (2 samples, 0.82%)</title><rect x="1161" y="228" width="9" height="15" fill="rgb(214,1,34)"/><text x="1164.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.82%)</title><rect x="1161" y="244" width="9" height="15" fill="rgb(218,72,49)"/><text x="1164.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (2 samples, 0.82%)</title><rect x="1161" y="260" width="9" height="15" fill="rgb(214,45,50)"/><text x="1164.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (2 samples, 0.82%)</title><rect x="1161" y="276" width="9" height="15" fill="rgb(242,41,27)"/><text x="1164.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py) (2 samples, 0.82%)</title><rect x="1161" y="292" width="9" height="15" fill="rgb(242,191,30)"/><text x="1164.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py) (1 samples, 0.41%)</title><rect x="1165" y="308" width="5" height="15" fill="rgb(208,123,50)"/><text x="1168.00" y="318.50"></text></g><g><title>__init__ (sklearn/tree/_classes.py) (1 samples, 0.41%)</title><rect x="1170" y="180" width="5" height="15" fill="rgb(241,214,50)"/><text x="1173.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py) (2 samples, 0.82%)</title><rect x="1170" y="132" width="10" height="15" fill="rgb(251,226,12)"/><text x="1173.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (2 samples, 0.82%)</title><rect x="1170" y="148" width="10" height="15" fill="rgb(239,44,6)"/><text x="1173.00" y="158.50"></text></g><g><title>clone (sklearn/base.py) (2 samples, 0.82%)</title><rect x="1170" y="164" width="10" height="15" fill="rgb(238,59,43)"/><text x="1173.00" y="174.50"></text></g><g><title>clone (sklearn/base.py) (1 samples, 0.41%)</title><rect x="1175" y="180" width="5" height="15" fill="rgb(206,97,43)"/><text x="1178.00" y="190.50"></text></g><g><title>_generate_sample_indices (sklearn/ensemble/_forest.py) (1 samples, 0.41%)</title><rect x="1180" y="260" width="5" height="15" fill="rgb(222,183,48)"/><text x="1183.00" y="270.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (1 samples, 0.41%)</title><rect x="1180" y="276" width="5" height="15" fill="rgb(236,190,22)"/><text x="1183.00" y="286.50"></text></g><g><title>__init__ (mtrand.c) (1 samples, 0.41%)</title><rect x="1180" y="292" width="5" height="15" fill="rgb(250,167,35)"/><text x="1183.00" y="302.50"></text></g><g><title>RandomState___init__ (mtrand.c) (1 samples, 0.41%)</title><rect x="1180" y="308" width="5" height="15" fill="rgb(253,83,38)"/><text x="1183.00" y="318.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (1 samples, 0.41%)</title><rect x="1180" y="324" width="5" height="15" fill="rgb(233,110,26)"/><text x="1183.00" y="334.50"></text></g><g><title>__init__ (mt19937.c) (1 samples, 0.41%)</title><rect x="1180" y="340" width="5" height="15" fill="rgb(215,88,32)"/><text x="1183.00" y="350.50"></text></g><g><title>MT19937___init__ (mt19937.c) (1 samples, 0.41%)</title><rect x="1180" y="356" width="5" height="15" fill="rgb(209,22,32)"/><text x="1183.00" y="366.50"></text></g><g><title>__init__ (bit_generator.c) (1 samples, 0.41%)</title><rect x="1180" y="372" width="5" height="15" fill="rgb(227,63,37)"/><text x="1183.00" y="382.50"></text></g><g><title>BitGenerator___init__ (bit_generator.c) (1 samples, 0.41%)</title><rect x="1180" y="388" width="5" height="15" fill="rgb(230,27,47)"/><text x="1183.00" y="398.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (bit_generator.c) (1 samples, 0.41%)</title><rect x="1180" y="404" width="5" height="15" fill="rgb(250,200,35)"/><text x="1183.00" y="414.50"></text></g><g><title>__init__ (bit_generator.c) (1 samples, 0.41%)</title><rect x="1180" y="420" width="5" height="15" fill="rgb(218,172,45)"/><text x="1183.00" y="430.50"></text></g><g><title>SeedSequence___init__ (bit_generator.c) (1 samples, 0.41%)</title><rect x="1180" y="436" width="5" height="15" fill="rgb(213,224,32)"/><text x="1183.00" y="446.50"></text></g><g><title>all (245 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(250,149,22)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py) (245 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(209,66,43)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py)</text></g><g><title>start (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py) (4 samples, 1.63%)</title><rect x="1170" y="68" width="20" height="15" fill="rgb(216,218,33)"/><text x="1173.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py) (4 samples, 1.63%)</title><rect x="1170" y="84" width="20" height="15" fill="rgb(245,52,9)"/><text x="1173.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.63%)</title><rect x="1170" y="100" width="20" height="15" fill="rgb(220,49,27)"/><text x="1173.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py) (4 samples, 1.63%)</title><rect x="1170" y="116" width="20" height="15" fill="rgb(206,139,29)"/><text x="1173.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py) (2 samples, 0.82%)</title><rect x="1180" y="132" width="10" height="15" fill="rgb(215,220,53)"/><text x="1183.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (2 samples, 0.82%)</title><rect x="1180" y="148" width="10" height="15" fill="rgb(211,179,27)"/><text x="1183.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py) (2 samples, 0.82%)</title><rect x="1180" y="164" width="10" height="15" fill="rgb(206,147,39)"/><text x="1183.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (2 samples, 0.82%)</title><rect x="1180" y="180" width="10" height="15" fill="rgb(252,106,31)"/><text x="1183.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (2 samples, 0.82%)</title><rect x="1180" y="196" width="10" height="15" fill="rgb(211,59,16)"/><text x="1183.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py) (2 samples, 0.82%)</title><rect x="1180" y="212" width="10" height="15" fill="rgb(250,210,29)"/><text x="1183.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (2 samples, 0.82%)</title><rect x="1180" y="228" width="10" height="15" fill="rgb(242,176,45)"/><text x="1183.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py) (2 samples, 0.82%)</title><rect x="1180" y="244" width="10" height="15" fill="rgb(234,146,35)"/><text x="1183.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.41%)</title><rect x="1185" y="260" width="5" height="15" fill="rgb(210,221,20)"/><text x="1188.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.41%)</title><rect x="1185" y="276" width="5" height="15" fill="rgb(246,135,13)"/><text x="1188.00" y="286.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (1 samples, 0.41%)</title><rect x="1185" y="292" width="5" height="15" fill="rgb(236,162,11)"/><text x="1188.00" y="302.50"></text></g><g><title>__init__ (mtrand.c) (1 samples, 0.41%)</title><rect x="1185" y="308" width="5" height="15" fill="rgb(234,83,26)"/><text x="1188.00" y="318.50"></text></g><g><title>RandomState___init__ (mtrand.c) (1 samples, 0.41%)</title><rect x="1185" y="324" width="5" height="15" fill="rgb(238,207,9)"/><text x="1188.00" y="334.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (1 samples, 0.41%)</title><rect x="1185" y="340" width="5" height="15" fill="rgb(229,65,28)"/><text x="1188.00" y="350.50"></text></g><g><title>__init__ (mt19937.c) (1 samples, 0.41%)</title><rect x="1185" y="356" width="5" height="15" fill="rgb(210,116,36)"/><text x="1188.00" y="366.50"></text></g><g><title>MT19937___init__ (mt19937.c) (1 samples, 0.41%)</title><rect x="1185" y="372" width="5" height="15" fill="rgb(205,120,25)"/><text x="1188.00" y="382.50"></text></g><g><title>__init__ (bit_generator.c) (1 samples, 0.41%)</title><rect x="1185" y="388" width="5" height="15" fill="rgb(207,154,1)"/><text x="1188.00" y="398.50"></text></g><g><title>BitGenerator___init__ (bit_generator.c) (1 samples, 0.41%)</title><rect x="1185" y="404" width="5" height="15" fill="rgb(244,25,31)"/><text x="1188.00" y="414.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (bit_generator.c) (1 samples, 0.41%)</title><rect x="1185" y="420" width="5" height="15" fill="rgb(246,122,40)"/><text x="1188.00" y="430.50"></text></g><g><title>__init__ (bit_generator.c) (1 samples, 0.41%)</title><rect x="1185" y="436" width="5" height="15" fill="rgb(251,45,30)"/><text x="1188.00" y="446.50"></text></g><g><title>SeedSequence___init__ (bit_generator.c) (1 samples, 0.41%)</title><rect x="1185" y="452" width="5" height="15" fill="rgb(245,23,44)"/><text x="1188.00" y="462.50"></text></g><g><title>SeedSequence_get_assembled_entropy (bit_generator.c) (1 samples, 0.41%)</title><rect x="1185" y="468" width="5" height="15" fill="rgb(226,57,45)"/><text x="1188.00" y="478.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c) (1 samples, 0.41%)</title><rect x="1185" y="484" width="5" height="15" fill="rgb(207,147,41)"/><text x="1188.00" y="494.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c) (1 samples, 0.41%)</title><rect x="1185" y="500" width="5" height="15" fill="rgb(239,63,30)"/><text x="1188.00" y="510.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c) (1 samples, 0.41%)</title><rect x="1185" y="516" width="5" height="15" fill="rgb(210,126,34)"/><text x="1188.00" y="526.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c) (1 samples, 0.41%)</title><rect x="1185" y="532" width="5" height="15" fill="rgb(231,12,11)"/><text x="1188.00" y="542.50"></text></g><g><title>_int_to_uint32_array (bit_generator.c) (1 samples, 0.41%)</title><rect x="1185" y="548" width="5" height="15" fill="rgb(216,115,13)"/><text x="1188.00" y="558.50"></text></g><g><title>bit_generator__int_to_uint32_array (bit_generator.c) (1 samples, 0.41%)</title><rect x="1185" y="564" width="5" height="15" fill="rgb(249,81,50)"/><text x="1188.00" y="574.50"></text></g></g></svg>