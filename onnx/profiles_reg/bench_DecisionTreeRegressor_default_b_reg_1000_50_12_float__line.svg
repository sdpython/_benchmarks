<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1942" onload="init(evt)" viewBox="0 0 1200 1942" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1942" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1925.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1925.00"> </text><g id="frames"><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:1) (2 samples, 0.34%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(227,15,48)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.34%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(227,24,17)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.34%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(214,124,19)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.34%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(215,50,0)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.34%)</title><rect x="10" y="212" width="3" height="15" fill="rgb(218,27,32)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.34%)</title><rect x="10" y="228" width="3" height="15" fill="rgb(224,75,54)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (2 samples, 0.34%)</title><rect x="10" y="244" width="3" height="15" fill="rgb(207,118,19)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.34%)</title><rect x="10" y="260" width="3" height="15" fill="rgb(225,169,5)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.34%)</title><rect x="10" y="276" width="3" height="15" fill="rgb(243,168,7)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.34%)</title><rect x="10" y="292" width="3" height="15" fill="rgb(209,146,33)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.34%)</title><rect x="10" y="308" width="3" height="15" fill="rgb(246,183,42)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.34%)</title><rect x="10" y="324" width="3" height="15" fill="rgb(244,213,11)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.34%)</title><rect x="10" y="340" width="3" height="15" fill="rgb(209,86,22)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.34%)</title><rect x="10" y="356" width="3" height="15" fill="rgb(243,66,44)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:23) (2 samples, 0.34%)</title><rect x="10" y="372" width="3" height="15" fill="rgb(226,79,16)"/><text x="13.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.34%)</title><rect x="10" y="388" width="3" height="15" fill="rgb(208,79,14)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.34%)</title><rect x="10" y="404" width="3" height="15" fill="rgb(242,82,47)"/><text x="13.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.34%)</title><rect x="10" y="420" width="3" height="15" fill="rgb(253,222,0)"/><text x="13.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.34%)</title><rect x="10" y="436" width="3" height="15" fill="rgb(234,123,21)"/><text x="13.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.34%)</title><rect x="10" y="452" width="3" height="15" fill="rgb(233,198,52)"/><text x="13.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/arraysetops.py:437) (2 samples, 0.34%)</title><rect x="10" y="468" width="3" height="15" fill="rgb(205,96,22)"/><text x="13.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (2 samples, 0.34%)</title><rect x="10" y="484" width="3" height="15" fill="rgb(214,142,22)"/><text x="13.00" y="494.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.17%)</title><rect x="13" y="884" width="2" height="15" fill="rgb(221,60,14)"/><text x="16.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.17%)</title><rect x="13" y="900" width="2" height="15" fill="rgb(210,4,0)"/><text x="16.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.17%)</title><rect x="13" y="916" width="2" height="15" fill="rgb(245,60,10)"/><text x="16.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.17%)</title><rect x="13" y="932" width="2" height="15" fill="rgb(231,208,22)"/><text x="16.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.17%)</title><rect x="13" y="948" width="2" height="15" fill="rgb(250,54,31)"/><text x="16.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.17%)</title><rect x="13" y="964" width="2" height="15" fill="rgb(229,140,47)"/><text x="16.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.17%)</title><rect x="13" y="980" width="2" height="15" fill="rgb(216,191,6)"/><text x="16.00" y="990.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2063) (1 samples, 0.17%)</title><rect x="15" y="884" width="2" height="15" fill="rgb(249,185,45)"/><text x="18.00" y="894.50"></text></g><g><title>join (posixpath.py:89) (1 samples, 0.17%)</title><rect x="15" y="900" width="2" height="15" fill="rgb(242,114,42)"/><text x="18.00" y="910.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.17%)</title><rect x="15" y="916" width="2" height="15" fill="rgb(208,102,32)"/><text x="18.00" y="926.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 0.50%)</title><rect x="13" y="820" width="6" height="15" fill="rgb(216,32,23)"/><text x="16.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 0.50%)</title><rect x="13" y="836" width="6" height="15" fill="rgb(240,148,36)"/><text x="16.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 0.50%)</title><rect x="13" y="852" width="6" height="15" fill="rgb(221,13,46)"/><text x="16.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.50%)</title><rect x="13" y="868" width="6" height="15" fill="rgb(209,111,14)"/><text x="16.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.17%)</title><rect x="17" y="884" width="2" height="15" fill="rgb(230,10,29)"/><text x="20.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.17%)</title><rect x="17" y="900" width="2" height="15" fill="rgb(221,126,37)"/><text x="20.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.17%)</title><rect x="17" y="916" width="2" height="15" fill="rgb(230,228,46)"/><text x="20.00" y="926.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.17%)</title><rect x="17" y="932" width="2" height="15" fill="rgb(246,152,38)"/><text x="20.00" y="942.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.17%)</title><rect x="17" y="948" width="2" height="15" fill="rgb(239,227,32)"/><text x="20.00" y="958.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:36) (1 samples, 0.17%)</title><rect x="19" y="820" width="2" height="15" fill="rgb(239,3,28)"/><text x="22.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="19" y="836" width="2" height="15" fill="rgb(247,35,31)"/><text x="22.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="19" y="852" width="2" height="15" fill="rgb(246,73,39)"/><text x="22.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="19" y="868" width="2" height="15" fill="rgb(232,5,46)"/><text x="22.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="19" y="884" width="2" height="15" fill="rgb(238,194,50)"/><text x="22.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="19" y="900" width="2" height="15" fill="rgb(229,222,18)"/><text x="22.00" y="910.50"></text></g><g><title>&lt;module&gt; (email/parser.py:12) (1 samples, 0.17%)</title><rect x="19" y="916" width="2" height="15" fill="rgb(216,21,31)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="19" y="932" width="2" height="15" fill="rgb(222,138,16)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:968) (1 samples, 0.17%)</title><rect x="19" y="948" width="2" height="15" fill="rgb(241,25,7)"/><text x="22.00" y="958.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:81) (1 samples, 0.17%)</title><rect x="21" y="820" width="2" height="15" fill="rgb(245,60,3)"/><text x="24.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.17%)</title><rect x="21" y="836" width="2" height="15" fill="rgb(227,165,38)"/><text x="24.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="21" y="852" width="2" height="15" fill="rgb(231,57,49)"/><text x="24.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="21" y="868" width="2" height="15" fill="rgb(218,212,41)"/><text x="24.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.17%)</title><rect x="21" y="884" width="2" height="15" fill="rgb(246,33,11)"/><text x="24.00" y="894.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.17%)</title><rect x="21" y="900" width="2" height="15" fill="rgb(240,225,46)"/><text x="24.00" y="910.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.17%)</title><rect x="21" y="916" width="2" height="15" fill="rgb(245,143,13)"/><text x="24.00" y="926.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.17%)</title><rect x="21" y="932" width="2" height="15" fill="rgb(223,222,0)"/><text x="24.00" y="942.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.17%)</title><rect x="21" y="948" width="2" height="15" fill="rgb(206,125,26)"/><text x="24.00" y="958.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.17%)</title><rect x="21" y="964" width="2" height="15" fill="rgb(236,220,32)"/><text x="24.00" y="974.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.17%)</title><rect x="21" y="980" width="2" height="15" fill="rgb(233,90,53)"/><text x="24.00" y="990.50"></text></g><g><title>unicode_rstrip (python3.7) (1 samples, 0.17%)</title><rect x="21" y="996" width="2" height="15" fill="rgb(223,8,31)"/><text x="24.00" y="1006.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 1.01%)</title><rect x="13" y="388" width="12" height="15" fill="rgb(224,94,23)"/><text x="16.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.01%)</title><rect x="13" y="404" width="12" height="15" fill="rgb(233,2,34)"/><text x="16.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.01%)</title><rect x="13" y="420" width="12" height="15" fill="rgb(236,73,15)"/><text x="16.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.01%)</title><rect x="13" y="436" width="12" height="15" fill="rgb(247,198,26)"/><text x="16.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.01%)</title><rect x="13" y="452" width="12" height="15" fill="rgb(247,85,5)"/><text x="16.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.01%)</title><rect x="13" y="468" width="12" height="15" fill="rgb(218,140,17)"/><text x="16.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 1.01%)</title><rect x="13" y="484" width="12" height="15" fill="rgb(226,65,27)"/><text x="16.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.01%)</title><rect x="13" y="500" width="12" height="15" fill="rgb(219,109,52)"/><text x="16.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.01%)</title><rect x="13" y="516" width="12" height="15" fill="rgb(219,15,52)"/><text x="16.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.01%)</title><rect x="13" y="532" width="12" height="15" fill="rgb(235,33,16)"/><text x="16.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.01%)</title><rect x="13" y="548" width="12" height="15" fill="rgb(215,61,51)"/><text x="16.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.01%)</title><rect x="13" y="564" width="12" height="15" fill="rgb(225,91,28)"/><text x="16.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 1.01%)</title><rect x="13" y="580" width="12" height="15" fill="rgb(212,19,45)"/><text x="16.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.01%)</title><rect x="13" y="596" width="12" height="15" fill="rgb(221,168,26)"/><text x="16.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.01%)</title><rect x="13" y="612" width="12" height="15" fill="rgb(241,217,41)"/><text x="16.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.01%)</title><rect x="13" y="628" width="12" height="15" fill="rgb(233,87,37)"/><text x="16.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.01%)</title><rect x="13" y="644" width="12" height="15" fill="rgb(221,118,3)"/><text x="16.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.01%)</title><rect x="13" y="660" width="12" height="15" fill="rgb(245,210,31)"/><text x="16.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.01%)</title><rect x="13" y="676" width="12" height="15" fill="rgb(205,47,51)"/><text x="16.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.01%)</title><rect x="13" y="692" width="12" height="15" fill="rgb(222,207,51)"/><text x="16.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.01%)</title><rect x="13" y="708" width="12" height="15" fill="rgb(216,91,35)"/><text x="16.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 1.01%)</title><rect x="13" y="724" width="12" height="15" fill="rgb(209,125,2)"/><text x="16.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.01%)</title><rect x="13" y="740" width="12" height="15" fill="rgb(229,177,41)"/><text x="16.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.01%)</title><rect x="13" y="756" width="12" height="15" fill="rgb(235,48,1)"/><text x="16.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.01%)</title><rect x="13" y="772" width="12" height="15" fill="rgb(207,64,5)"/><text x="16.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.01%)</title><rect x="13" y="788" width="12" height="15" fill="rgb(206,100,51)"/><text x="16.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.01%)</title><rect x="13" y="804" width="12" height="15" fill="rgb(214,130,22)"/><text x="16.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.17%)</title><rect x="23" y="820" width="2" height="15" fill="rgb(253,168,1)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="23" y="836" width="2" height="15" fill="rgb(240,90,16)"/><text x="26.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="23" y="852" width="2" height="15" fill="rgb(213,160,8)"/><text x="26.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="23" y="868" width="2" height="15" fill="rgb(254,197,51)"/><text x="26.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="23" y="884" width="2" height="15" fill="rgb(238,57,9)"/><text x="26.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="23" y="900" width="2" height="15" fill="rgb(212,1,46)"/><text x="26.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.17%)</title><rect x="23" y="916" width="2" height="15" fill="rgb(231,97,24)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="23" y="932" width="2" height="15" fill="rgb(235,157,45)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="23" y="948" width="2" height="15" fill="rgb(248,89,9)"/><text x="26.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.17%)</title><rect x="23" y="964" width="2" height="15" fill="rgb(244,87,3)"/><text x="26.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.17%)</title><rect x="23" y="980" width="2" height="15" fill="rgb(233,37,41)"/><text x="26.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.17%)</title><rect x="23" y="996" width="2" height="15" fill="rgb(237,196,44)"/><text x="26.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="23" y="1012" width="2" height="15" fill="rgb(214,189,41)"/><text x="26.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="23" y="1028" width="2" height="15" fill="rgb(241,216,21)"/><text x="26.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="23" y="1044" width="2" height="15" fill="rgb(221,195,1)"/><text x="26.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="23" y="1060" width="2" height="15" fill="rgb(243,23,29)"/><text x="26.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="23" y="1076" width="2" height="15" fill="rgb(218,182,50)"/><text x="26.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:5361) (1 samples, 0.17%)</title><rect x="23" y="1092" width="2" height="15" fill="rgb(242,145,18)"/><text x="26.00" y="1102.50"></text></g><g><title>srange (pkg_resources/_vendor/pyparsing.py:4783) (1 samples, 0.17%)</title><rect x="23" y="1108" width="2" height="15" fill="rgb(221,117,28)"/><text x="26.00" y="1118.50"></text></g><g><title>parseString (pkg_resources/_vendor/pyparsing.py:1644) (1 samples, 0.17%)</title><rect x="23" y="1124" width="2" height="15" fill="rgb(238,111,13)"/><text x="26.00" y="1134.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py:1402) (1 samples, 0.17%)</title><rect x="23" y="1140" width="2" height="15" fill="rgb(240,33,9)"/><text x="26.00" y="1150.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py:3417) (1 samples, 0.17%)</title><rect x="23" y="1156" width="2" height="15" fill="rgb(238,196,5)"/><text x="26.00" y="1166.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py:1402) (1 samples, 0.17%)</title><rect x="23" y="1172" width="2" height="15" fill="rgb(216,156,13)"/><text x="26.00" y="1182.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py:3739) (1 samples, 0.17%)</title><rect x="23" y="1188" width="2" height="15" fill="rgb(250,49,25)"/><text x="26.00" y="1198.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py:1402) (1 samples, 0.17%)</title><rect x="23" y="1204" width="2" height="15" fill="rgb(253,101,1)"/><text x="26.00" y="1214.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py:3880) (1 samples, 0.17%)</title><rect x="23" y="1220" width="2" height="15" fill="rgb(208,73,33)"/><text x="26.00" y="1230.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py:1402) (1 samples, 0.17%)</title><rect x="23" y="1236" width="2" height="15" fill="rgb(228,45,41)"/><text x="26.00" y="1246.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py:3552) (1 samples, 0.17%)</title><rect x="23" y="1252" width="2" height="15" fill="rgb(248,118,7)"/><text x="26.00" y="1262.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py:1402) (1 samples, 0.17%)</title><rect x="23" y="1268" width="2" height="15" fill="rgb(243,153,42)"/><text x="26.00" y="1278.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py:3739) (1 samples, 0.17%)</title><rect x="23" y="1284" width="2" height="15" fill="rgb(245,179,5)"/><text x="26.00" y="1294.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py:1402) (1 samples, 0.17%)</title><rect x="23" y="1300" width="2" height="15" fill="rgb(247,164,32)"/><text x="26.00" y="1310.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py:3403) (1 samples, 0.17%)</title><rect x="23" y="1316" width="2" height="15" fill="rgb(234,186,6)"/><text x="26.00" y="1326.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:2) (7 samples, 1.17%)</title><rect x="13" y="148" width="14" height="15" fill="rgb(215,209,19)"/><text x="16.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.17%)</title><rect x="13" y="164" width="14" height="15" fill="rgb(205,186,22)"/><text x="16.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 1.17%)</title><rect x="13" y="180" width="14" height="15" fill="rgb(244,170,47)"/><text x="16.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.17%)</title><rect x="13" y="196" width="14" height="15" fill="rgb(206,116,6)"/><text x="16.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.17%)</title><rect x="13" y="212" width="14" height="15" fill="rgb(205,38,36)"/><text x="16.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.17%)</title><rect x="13" y="228" width="14" height="15" fill="rgb(215,53,33)"/><text x="16.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.17%)</title><rect x="13" y="244" width="14" height="15" fill="rgb(251,147,52)"/><text x="16.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.17%)</title><rect x="13" y="260" width="14" height="15" fill="rgb(220,58,36)"/><text x="16.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.17%)</title><rect x="13" y="276" width="14" height="15" fill="rgb(214,174,45)"/><text x="16.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (7 samples, 1.17%)</title><rect x="13" y="292" width="14" height="15" fill="rgb(226,186,48)"/><text x="16.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.17%)</title><rect x="13" y="308" width="14" height="15" fill="rgb(245,53,43)"/><text x="16.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.17%)</title><rect x="13" y="324" width="14" height="15" fill="rgb(239,145,0)"/><text x="16.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.17%)</title><rect x="13" y="340" width="14" height="15" fill="rgb(217,73,38)"/><text x="16.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.17%)</title><rect x="13" y="356" width="14" height="15" fill="rgb(252,13,35)"/><text x="16.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.17%)</title><rect x="13" y="372" width="14" height="15" fill="rgb(248,71,13)"/><text x="16.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:9) (1 samples, 0.17%)</title><rect x="25" y="388" width="2" height="15" fill="rgb(249,119,27)"/><text x="28.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="25" y="404" width="2" height="15" fill="rgb(210,152,46)"/><text x="28.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="25" y="420" width="2" height="15" fill="rgb(232,130,37)"/><text x="28.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="25" y="436" width="2" height="15" fill="rgb(246,30,8)"/><text x="28.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="25" y="452" width="2" height="15" fill="rgb(213,92,52)"/><text x="28.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="25" y="468" width="2" height="15" fill="rgb(211,184,22)"/><text x="28.00" y="478.50"></text></g><g><title>&lt;module&gt; (typing.py:1377) (1 samples, 0.17%)</title><rect x="25" y="484" width="2" height="15" fill="rgb(229,3,51)"/><text x="28.00" y="494.50"></text></g><g><title>__new__ (typing.py:1350) (1 samples, 0.17%)</title><rect x="25" y="500" width="2" height="15" fill="rgb(235,176,8)"/><text x="28.00" y="510.50"></text></g><g><title>0x7fed75204373 (?) (1 samples, 0.17%)</title><rect x="27" y="436" width="2" height="15" fill="rgb(212,77,8)"/><text x="30.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="27" y="452" width="2" height="15" fill="rgb(242,146,6)"/><text x="30.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="27" y="468" width="2" height="15" fill="rgb(240,9,3)"/><text x="30.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="27" y="484" width="2" height="15" fill="rgb(213,172,0)"/><text x="30.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.17%)</title><rect x="27" y="500" width="2" height="15" fill="rgb(237,51,46)"/><text x="30.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="27" y="516" width="2" height="15" fill="rgb(227,205,4)"/><text x="30.00" y="526.50"></text></g><g><title>0x7fed74fc7eea (?) (1 samples, 0.17%)</title><rect x="27" y="532" width="2" height="15" fill="rgb(219,94,31)"/><text x="30.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="27" y="548" width="2" height="15" fill="rgb(213,98,15)"/><text x="30.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="27" y="564" width="2" height="15" fill="rgb(207,62,21)"/><text x="30.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="27" y="580" width="2" height="15" fill="rgb(239,160,41)"/><text x="30.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.17%)</title><rect x="27" y="596" width="2" height="15" fill="rgb(243,66,9)"/><text x="30.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="27" y="612" width="2" height="15" fill="rgb(250,122,1)"/><text x="30.00" y="622.50"></text></g><g><title>0x7fed74d60887 (?) (1 samples, 0.17%)</title><rect x="27" y="628" width="2" height="15" fill="rgb(244,0,4)"/><text x="30.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="27" y="644" width="2" height="15" fill="rgb(220,96,16)"/><text x="30.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.17%)</title><rect x="27" y="660" width="2" height="15" fill="rgb(217,151,18)"/><text x="30.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="27" y="676" width="2" height="15" fill="rgb(211,65,13)"/><text x="30.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="27" y="692" width="2" height="15" fill="rgb(234,174,31)"/><text x="30.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="27" y="708" width="2" height="15" fill="rgb(235,98,39)"/><text x="30.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="27" y="724" width="2" height="15" fill="rgb(254,52,25)"/><text x="30.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="27" y="740" width="2" height="15" fill="rgb(236,121,25)"/><text x="30.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="27" y="756" width="2" height="15" fill="rgb(228,140,28)"/><text x="30.00" y="766.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:9) (1 samples, 0.17%)</title><rect x="27" y="772" width="2" height="15" fill="rgb(213,214,38)"/><text x="30.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="27" y="788" width="2" height="15" fill="rgb(212,15,27)"/><text x="30.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="27" y="804" width="2" height="15" fill="rgb(223,13,51)"/><text x="30.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="27" y="820" width="2" height="15" fill="rgb(210,136,35)"/><text x="30.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="27" y="836" width="2" height="15" fill="rgb(219,121,36)"/><text x="30.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="27" y="852" width="2" height="15" fill="rgb(232,163,43)"/><text x="30.00" y="862.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_graph.py:7) (1 samples, 0.17%)</title><rect x="27" y="868" width="2" height="15" fill="rgb(224,119,13)"/><text x="30.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="27" y="884" width="2" height="15" fill="rgb(240,65,24)"/><text x="30.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="27" y="900" width="2" height="15" fill="rgb(227,188,47)"/><text x="30.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="27" y="916" width="2" height="15" fill="rgb(213,153,26)"/><text x="30.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="27" y="932" width="2" height="15" fill="rgb(227,49,51)"/><text x="30.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="27" y="948" width="2" height="15" fill="rgb(206,192,18)"/><text x="30.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_base.py:24) (1 samples, 0.17%)</title><rect x="27" y="964" width="2" height="15" fill="rgb(209,53,19)"/><text x="30.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="27" y="980" width="2" height="15" fill="rgb(221,48,51)"/><text x="30.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="27" y="996" width="2" height="15" fill="rgb(210,156,1)"/><text x="30.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="27" y="1012" width="2" height="15" fill="rgb(241,126,29)"/><text x="30.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="27" y="1028" width="2" height="15" fill="rgb(223,223,49)"/><text x="30.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="27" y="1044" width="2" height="15" fill="rgb(232,105,51)"/><text x="30.00" y="1054.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py:7) (1 samples, 0.17%)</title><rect x="27" y="1060" width="2" height="15" fill="rgb(209,44,29)"/><text x="30.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="27" y="1076" width="2" height="15" fill="rgb(211,119,28)"/><text x="30.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="27" y="1092" width="2" height="15" fill="rgb(245,5,36)"/><text x="30.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="27" y="1108" width="2" height="15" fill="rgb(254,27,44)"/><text x="30.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.17%)</title><rect x="27" y="1124" width="2" height="15" fill="rgb(243,175,11)"/><text x="30.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.17%)</title><rect x="27" y="1140" width="2" height="15" fill="rgb(250,77,20)"/><text x="30.00" y="1150.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.17%)</title><rect x="27" y="1156" width="2" height="15" fill="rgb(210,166,23)"/><text x="30.00" y="1166.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="27" y="1172" width="2" height="15" fill="rgb(212,194,38)"/><text x="30.00" y="1182.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:4) (2 samples, 0.34%)</title><rect x="27" y="148" width="4" height="15" fill="rgb(223,94,1)"/><text x="30.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.34%)</title><rect x="27" y="164" width="4" height="15" fill="rgb(248,80,47)"/><text x="30.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.34%)</title><rect x="27" y="180" width="4" height="15" fill="rgb(222,21,29)"/><text x="30.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.34%)</title><rect x="27" y="196" width="4" height="15" fill="rgb(211,8,33)"/><text x="30.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.34%)</title><rect x="27" y="212" width="4" height="15" fill="rgb(230,36,39)"/><text x="30.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.34%)</title><rect x="27" y="228" width="4" height="15" fill="rgb(208,108,43)"/><text x="30.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py:6) (2 samples, 0.34%)</title><rect x="27" y="244" width="4" height="15" fill="rgb(236,23,52)"/><text x="30.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.34%)</title><rect x="27" y="260" width="4" height="15" fill="rgb(214,186,53)"/><text x="30.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.34%)</title><rect x="27" y="276" width="4" height="15" fill="rgb(213,213,19)"/><text x="30.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.34%)</title><rect x="27" y="292" width="4" height="15" fill="rgb(241,185,45)"/><text x="30.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.34%)</title><rect x="27" y="308" width="4" height="15" fill="rgb(208,29,21)"/><text x="30.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.34%)</title><rect x="27" y="324" width="4" height="15" fill="rgb(231,9,32)"/><text x="30.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py:40) (2 samples, 0.34%)</title><rect x="27" y="340" width="4" height="15" fill="rgb(250,56,54)"/><text x="30.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.34%)</title><rect x="27" y="356" width="4" height="15" fill="rgb(213,218,13)"/><text x="30.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.34%)</title><rect x="27" y="372" width="4" height="15" fill="rgb(234,195,54)"/><text x="30.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.34%)</title><rect x="27" y="388" width="4" height="15" fill="rgb(234,3,21)"/><text x="30.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (2 samples, 0.34%)</title><rect x="27" y="404" width="4" height="15" fill="rgb(226,166,11)"/><text x="30.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.34%)</title><rect x="27" y="420" width="4" height="15" fill="rgb(228,179,45)"/><text x="30.00" y="430.50"></text></g><g><title>0x7fed75204373 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="29" y="436" width="2" height="15" fill="rgb(230,11,14)"/><text x="32.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="29" y="452" width="2" height="15" fill="rgb(242,178,6)"/><text x="32.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="29" y="468" width="2" height="15" fill="rgb(240,53,45)"/><text x="32.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="29" y="484" width="2" height="15" fill="rgb(234,8,54)"/><text x="32.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.17%)</title><rect x="29" y="500" width="2" height="15" fill="rgb(221,154,12)"/><text x="32.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="29" y="516" width="2" height="15" fill="rgb(235,18,22)"/><text x="32.00" y="526.50"></text></g><g><title>0x7fed74fc7eea (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="29" y="532" width="2" height="15" fill="rgb(219,84,13)"/><text x="32.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="29" y="548" width="2" height="15" fill="rgb(252,93,53)"/><text x="32.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="29" y="564" width="2" height="15" fill="rgb(218,89,11)"/><text x="32.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="29" y="580" width="2" height="15" fill="rgb(224,60,49)"/><text x="32.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.17%)</title><rect x="29" y="596" width="2" height="15" fill="rgb(221,141,34)"/><text x="32.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="29" y="612" width="2" height="15" fill="rgb(223,188,17)"/><text x="32.00" y="622.50"></text></g><g><title>0x7fed74d60887 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="29" y="628" width="2" height="15" fill="rgb(246,88,47)"/><text x="32.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="29" y="644" width="2" height="15" fill="rgb(229,36,45)"/><text x="32.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.17%)</title><rect x="29" y="660" width="2" height="15" fill="rgb(216,198,18)"/><text x="32.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="29" y="676" width="2" height="15" fill="rgb(232,19,31)"/><text x="32.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="29" y="692" width="2" height="15" fill="rgb(213,61,40)"/><text x="32.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="29" y="708" width="2" height="15" fill="rgb(239,210,13)"/><text x="32.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="29" y="724" width="2" height="15" fill="rgb(249,119,19)"/><text x="32.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="29" y="740" width="2" height="15" fill="rgb(226,169,51)"/><text x="32.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="29" y="756" width="2" height="15" fill="rgb(252,54,10)"/><text x="32.00" y="766.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:17) (1 samples, 0.17%)</title><rect x="29" y="772" width="2" height="15" fill="rgb(235,219,9)"/><text x="32.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="29" y="788" width="2" height="15" fill="rgb(215,183,26)"/><text x="32.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="29" y="804" width="2" height="15" fill="rgb(244,177,39)"/><text x="32.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="29" y="820" width="2" height="15" fill="rgb(221,119,8)"/><text x="32.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="29" y="836" width="2" height="15" fill="rgb(247,112,3)"/><text x="32.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="29" y="852" width="2" height="15" fill="rgb(236,167,18)"/><text x="32.00" y="862.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py:22) (1 samples, 0.17%)</title><rect x="29" y="868" width="2" height="15" fill="rgb(241,211,29)"/><text x="32.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="29" y="884" width="2" height="15" fill="rgb(243,111,41)"/><text x="32.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="29" y="900" width="2" height="15" fill="rgb(246,14,45)"/><text x="32.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="29" y="916" width="2" height="15" fill="rgb(206,150,19)"/><text x="32.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="29" y="932" width="2" height="15" fill="rgb(241,67,43)"/><text x="32.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="29" y="948" width="2" height="15" fill="rgb(218,207,35)"/><text x="32.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py:11) (1 samples, 0.17%)</title><rect x="29" y="964" width="2" height="15" fill="rgb(206,190,43)"/><text x="32.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="29" y="980" width="2" height="15" fill="rgb(242,13,46)"/><text x="32.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="29" y="996" width="2" height="15" fill="rgb(215,139,24)"/><text x="32.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="29" y="1012" width="2" height="15" fill="rgb(235,136,37)"/><text x="32.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="29" y="1028" width="2" height="15" fill="rgb(208,38,1)"/><text x="32.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="29" y="1044" width="2" height="15" fill="rgb(208,74,11)"/><text x="32.00" y="1054.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py:11) (1 samples, 0.17%)</title><rect x="29" y="1060" width="2" height="15" fill="rgb(242,39,6)"/><text x="32.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="29" y="1076" width="2" height="15" fill="rgb(231,70,3)"/><text x="32.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="29" y="1092" width="2" height="15" fill="rgb(205,183,13)"/><text x="32.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="29" y="1108" width="2" height="15" fill="rgb(254,86,40)"/><text x="32.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="29" y="1124" width="2" height="15" fill="rgb(250,227,36)"/><text x="32.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="29" y="1140" width="2" height="15" fill="rgb(238,200,47)"/><text x="32.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:12) (1 samples, 0.17%)</title><rect x="29" y="1156" width="2" height="15" fill="rgb(232,199,32)"/><text x="32.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="29" y="1172" width="2" height="15" fill="rgb(251,171,13)"/><text x="32.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="29" y="1188" width="2" height="15" fill="rgb(230,182,19)"/><text x="32.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="29" y="1204" width="2" height="15" fill="rgb(221,196,42)"/><text x="32.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="29" y="1220" width="2" height="15" fill="rgb(217,131,31)"/><text x="32.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="29" y="1236" width="2" height="15" fill="rgb(238,27,8)"/><text x="32.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_least_angle.py:22) (1 samples, 0.17%)</title><rect x="29" y="1252" width="2" height="15" fill="rgb(241,32,53)"/><text x="32.00" y="1262.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.17%)</title><rect x="29" y="1268" width="2" height="15" fill="rgb(246,114,2)"/><text x="32.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="29" y="1284" width="2" height="15" fill="rgb(233,211,22)"/><text x="32.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="29" y="1300" width="2" height="15" fill="rgb(234,60,22)"/><text x="32.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="29" y="1316" width="2" height="15" fill="rgb(230,101,10)"/><text x="32.00" y="1326.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="29" y="1332" width="2" height="15" fill="rgb(249,68,14)"/><text x="32.00" y="1342.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.17%)</title><rect x="29" y="1348" width="2" height="15" fill="rgb(241,13,45)"/><text x="32.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="29" y="1364" width="2" height="15" fill="rgb(230,195,38)"/><text x="32.00" y="1374.50"></text></g><g><title>0x7fed72ec86c1 (sklearn/utils/arrayfuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="29" y="1380" width="2" height="15" fill="rgb(254,82,11)"/><text x="32.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="29" y="1396" width="2" height="15" fill="rgb(221,103,19)"/><text x="32.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="29" y="1412" width="2" height="15" fill="rgb(208,116,26)"/><text x="32.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="29" y="1428" width="2" height="15" fill="rgb(224,37,47)"/><text x="32.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.17%)</title><rect x="29" y="1444" width="2" height="15" fill="rgb(239,13,33)"/><text x="32.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="29" y="1460" width="2" height="15" fill="rgb(230,227,50)"/><text x="32.00" y="1470.50"></text></g><g><title>0x7fed72c6871d (sklearn/utils/_cython_blas.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="29" y="1476" width="2" height="15" fill="rgb(239,229,53)"/><text x="32.00" y="1486.50"></text></g><g><title>0x7fed72c6b04f (sklearn/utils/_cython_blas.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="29" y="1492" width="2" height="15" fill="rgb(233,111,34)"/><text x="32.00" y="1502.50"></text></g><g><title>__call__ (enum.py:311) (1 samples, 0.17%)</title><rect x="29" y="1508" width="2" height="15" fill="rgb(211,136,11)"/><text x="32.00" y="1518.50"></text></g><g><title>_create_ (enum.py:423) (1 samples, 0.17%)</title><rect x="29" y="1524" width="2" height="15" fill="rgb(232,126,40)"/><text x="32.00" y="1534.50"></text></g><g><title>__new__ (enum.py:176) (1 samples, 0.17%)</title><rect x="29" y="1540" width="2" height="15" fill="rgb(235,113,29)"/><text x="32.00" y="1550.50"></text></g><g><title>&lt;setcomp&gt; (enum.py:177) (1 samples, 0.17%)</title><rect x="29" y="1556" width="2" height="15" fill="rgb(222,45,40)"/><text x="32.00" y="1566.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.17%)</title><rect x="31" y="244" width="2" height="15" fill="rgb(250,22,52)"/><text x="34.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="31" y="260" width="2" height="15" fill="rgb(243,10,31)"/><text x="34.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="31" y="276" width="2" height="15" fill="rgb(248,103,1)"/><text x="34.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="31" y="292" width="2" height="15" fill="rgb(218,129,39)"/><text x="34.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="31" y="308" width="2" height="15" fill="rgb(243,138,24)"/><text x="34.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="31" y="324" width="2" height="15" fill="rgb(229,206,3)"/><text x="34.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.17%)</title><rect x="31" y="340" width="2" height="15" fill="rgb(229,96,48)"/><text x="34.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="31" y="356" width="2" height="15" fill="rgb(216,0,32)"/><text x="34.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.17%)</title><rect x="31" y="372" width="2" height="15" fill="rgb(225,116,26)"/><text x="34.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="31" y="388" width="2" height="15" fill="rgb(228,111,51)"/><text x="34.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="31" y="404" width="2" height="15" fill="rgb(229,164,35)"/><text x="34.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="31" y="420" width="2" height="15" fill="rgb(250,204,50)"/><text x="34.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="31" y="436" width="2" height="15" fill="rgb(239,72,38)"/><text x="34.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="31" y="452" width="2" height="15" fill="rgb(251,60,53)"/><text x="34.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="31" y="468" width="2" height="15" fill="rgb(249,53,43)"/><text x="34.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.17%)</title><rect x="31" y="484" width="2" height="15" fill="rgb(249,98,16)"/><text x="34.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="31" y="500" width="2" height="15" fill="rgb(235,37,5)"/><text x="34.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="31" y="516" width="2" height="15" fill="rgb(224,168,42)"/><text x="34.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="31" y="532" width="2" height="15" fill="rgb(220,167,31)"/><text x="34.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="31" y="548" width="2" height="15" fill="rgb(228,208,32)"/><text x="34.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="31" y="564" width="2" height="15" fill="rgb(221,39,4)"/><text x="34.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.17%)</title><rect x="31" y="580" width="2" height="15" fill="rgb(232,87,3)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="31" y="596" width="2" height="15" fill="rgb(214,22,15)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="31" y="612" width="2" height="15" fill="rgb(224,69,9)"/><text x="34.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="31" y="628" width="2" height="15" fill="rgb(231,97,48)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="31" y="644" width="2" height="15" fill="rgb(213,88,26)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="31" y="660" width="2" height="15" fill="rgb(207,103,41)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.17%)</title><rect x="31" y="676" width="2" height="15" fill="rgb(205,143,9)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="31" y="692" width="2" height="15" fill="rgb(226,163,45)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="31" y="708" width="2" height="15" fill="rgb(208,176,12)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="31" y="724" width="2" height="15" fill="rgb(254,96,38)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="31" y="740" width="2" height="15" fill="rgb(242,210,26)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="31" y="756" width="2" height="15" fill="rgb(237,69,35)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:114) (1 samples, 0.17%)</title><rect x="31" y="772" width="2" height="15" fill="rgb(206,48,46)"/><text x="34.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="31" y="788" width="2" height="15" fill="rgb(232,62,11)"/><text x="34.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="31" y="804" width="2" height="15" fill="rgb(216,11,32)"/><text x="34.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="31" y="820" width="2" height="15" fill="rgb(232,61,1)"/><text x="34.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="31" y="836" width="2" height="15" fill="rgb(216,62,19)"/><text x="34.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="31" y="852" width="2" height="15" fill="rgb(229,195,1)"/><text x="34.00" y="862.50"></text></g><g><title>&lt;module&gt; (requests/models.py:43) (1 samples, 0.17%)</title><rect x="31" y="868" width="2" height="15" fill="rgb(241,107,35)"/><text x="34.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="31" y="884" width="2" height="15" fill="rgb(245,159,2)"/><text x="34.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="31" y="900" width="2" height="15" fill="rgb(208,171,22)"/><text x="34.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.17%)</title><rect x="31" y="916" width="2" height="15" fill="rgb(220,158,49)"/><text x="34.00" y="926.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.17%)</title><rect x="31" y="932" width="2" height="15" fill="rgb(218,30,53)"/><text x="34.00" y="942.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:563) (1 samples, 0.17%)</title><rect x="31" y="948" width="2" height="15" fill="rgb(245,113,13)"/><text x="34.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.17%)</title><rect x="33" y="724" width="2" height="15" fill="rgb(217,25,13)"/><text x="36.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="33" y="740" width="2" height="15" fill="rgb(226,201,6)"/><text x="36.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="33" y="756" width="2" height="15" fill="rgb(231,105,50)"/><text x="36.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="33" y="772" width="2" height="15" fill="rgb(212,126,18)"/><text x="36.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="33" y="788" width="2" height="15" fill="rgb(242,120,44)"/><text x="36.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="33" y="804" width="2" height="15" fill="rgb(228,157,20)"/><text x="36.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.17%)</title><rect x="33" y="820" width="2" height="15" fill="rgb(249,54,43)"/><text x="36.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="33" y="836" width="2" height="15" fill="rgb(220,40,46)"/><text x="36.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="33" y="852" width="2" height="15" fill="rgb(253,135,15)"/><text x="36.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="33" y="868" width="2" height="15" fill="rgb(218,36,38)"/><text x="36.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="33" y="884" width="2" height="15" fill="rgb(205,165,24)"/><text x="36.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="33" y="900" width="2" height="15" fill="rgb(228,196,53)"/><text x="36.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.17%)</title><rect x="33" y="916" width="2" height="15" fill="rgb(225,23,48)"/><text x="36.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="33" y="932" width="2" height="15" fill="rgb(229,195,36)"/><text x="36.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="33" y="948" width="2" height="15" fill="rgb(235,119,29)"/><text x="36.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="33" y="964" width="2" height="15" fill="rgb(230,155,15)"/><text x="36.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="33" y="980" width="2" height="15" fill="rgb(243,164,39)"/><text x="36.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="33" y="996" width="2" height="15" fill="rgb(246,81,29)"/><text x="36.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.17%)</title><rect x="33" y="1012" width="2" height="15" fill="rgb(253,6,48)"/><text x="36.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="33" y="1028" width="2" height="15" fill="rgb(252,197,19)"/><text x="36.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="33" y="1044" width="2" height="15" fill="rgb(238,212,35)"/><text x="36.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="33" y="1060" width="2" height="15" fill="rgb(250,27,6)"/><text x="36.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="33" y="1076" width="2" height="15" fill="rgb(236,106,17)"/><text x="36.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="33" y="1092" width="2" height="15" fill="rgb(222,216,43)"/><text x="36.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (1 samples, 0.17%)</title><rect x="33" y="1108" width="2" height="15" fill="rgb(225,13,22)"/><text x="36.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="33" y="1124" width="2" height="15" fill="rgb(244,224,35)"/><text x="36.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="33" y="1140" width="2" height="15" fill="rgb(252,115,21)"/><text x="36.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="33" y="1156" width="2" height="15" fill="rgb(226,4,4)"/><text x="36.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="33" y="1172" width="2" height="15" fill="rgb(221,175,52)"/><text x="36.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="33" y="1188" width="2" height="15" fill="rgb(217,1,8)"/><text x="36.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (1 samples, 0.17%)</title><rect x="33" y="1204" width="2" height="15" fill="rgb(252,154,21)"/><text x="36.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="33" y="1220" width="2" height="15" fill="rgb(217,0,46)"/><text x="36.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="33" y="1236" width="2" height="15" fill="rgb(234,208,46)"/><text x="36.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="33" y="1252" width="2" height="15" fill="rgb(212,27,13)"/><text x="36.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="33" y="1268" width="2" height="15" fill="rgb(243,115,6)"/><text x="36.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="33" y="1284" width="2" height="15" fill="rgb(213,211,37)"/><text x="36.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:25) (1 samples, 0.17%)</title><rect x="33" y="1300" width="2" height="15" fill="rgb(244,229,17)"/><text x="36.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="33" y="1316" width="2" height="15" fill="rgb(247,19,31)"/><text x="36.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="33" y="1332" width="2" height="15" fill="rgb(228,100,54)"/><text x="36.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="33" y="1348" width="2" height="15" fill="rgb(251,42,37)"/><text x="36.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="33" y="1364" width="2" height="15" fill="rgb(208,6,47)"/><text x="36.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="33" y="1380" width="2" height="15" fill="rgb(229,215,49)"/><text x="36.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/range.py:36) (1 samples, 0.17%)</title><rect x="33" y="1396" width="2" height="15" fill="rgb(205,128,52)"/><text x="36.00" y="1406.50"></text></g><g><title>RangeIndex (pandas/core/indexes/range.py:423) (1 samples, 0.17%)</title><rect x="33" y="1412" width="2" height="15" fill="rgb(216,105,8)"/><text x="36.00" y="1422.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.17%)</title><rect x="33" y="1428" width="2" height="15" fill="rgb(207,131,36)"/><text x="36.00" y="1438.50"></text></g><g><title>dedent (textwrap.py:438) (1 samples, 0.17%)</title><rect x="33" y="1444" width="2" height="15" fill="rgb(245,77,10)"/><text x="36.00" y="1454.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.17%)</title><rect x="33" y="1460" width="2" height="15" fill="rgb(245,121,13)"/><text x="36.00" y="1470.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.34%)</title><rect x="33" y="436" width="4" height="15" fill="rgb(225,50,47)"/><text x="36.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.34%)</title><rect x="33" y="452" width="4" height="15" fill="rgb(233,92,0)"/><text x="36.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.34%)</title><rect x="33" y="468" width="4" height="15" fill="rgb(231,165,36)"/><text x="36.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.34%)</title><rect x="33" y="484" width="4" height="15" fill="rgb(213,208,34)"/><text x="36.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.34%)</title><rect x="33" y="500" width="4" height="15" fill="rgb(227,44,15)"/><text x="36.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.34%)</title><rect x="33" y="516" width="4" height="15" fill="rgb(211,130,39)"/><text x="36.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.34%)</title><rect x="33" y="532" width="4" height="15" fill="rgb(206,10,17)"/><text x="36.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.34%)</title><rect x="33" y="548" width="4" height="15" fill="rgb(244,174,10)"/><text x="36.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.34%)</title><rect x="33" y="564" width="4" height="15" fill="rgb(244,24,10)"/><text x="36.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.34%)</title><rect x="33" y="580" width="4" height="15" fill="rgb(219,215,33)"/><text x="36.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.34%)</title><rect x="33" y="596" width="4" height="15" fill="rgb(253,105,26)"/><text x="36.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.34%)</title><rect x="33" y="612" width="4" height="15" fill="rgb(209,186,6)"/><text x="36.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.34%)</title><rect x="33" y="628" width="4" height="15" fill="rgb(211,140,25)"/><text x="36.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.34%)</title><rect x="33" y="644" width="4" height="15" fill="rgb(221,208,20)"/><text x="36.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.34%)</title><rect x="33" y="660" width="4" height="15" fill="rgb(252,198,7)"/><text x="36.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.34%)</title><rect x="33" y="676" width="4" height="15" fill="rgb(211,101,35)"/><text x="36.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.34%)</title><rect x="33" y="692" width="4" height="15" fill="rgb(253,229,44)"/><text x="36.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.34%)</title><rect x="33" y="708" width="4" height="15" fill="rgb(206,219,39)"/><text x="36.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.17%)</title><rect x="35" y="724" width="2" height="15" fill="rgb(221,14,49)"/><text x="38.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="35" y="740" width="2" height="15" fill="rgb(226,101,22)"/><text x="38.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.17%)</title><rect x="35" y="756" width="2" height="15" fill="rgb(211,142,10)"/><text x="38.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="35" y="772" width="2" height="15" fill="rgb(237,37,25)"/><text x="38.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="35" y="788" width="2" height="15" fill="rgb(231,5,25)"/><text x="38.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="35" y="804" width="2" height="15" fill="rgb(246,53,13)"/><text x="38.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="35" y="820" width="2" height="15" fill="rgb(239,3,49)"/><text x="38.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="35" y="836" width="2" height="15" fill="rgb(240,213,54)"/><text x="38.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="35" y="852" width="2" height="15" fill="rgb(209,164,14)"/><text x="38.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:13) (1 samples, 0.17%)</title><rect x="35" y="868" width="2" height="15" fill="rgb(213,220,34)"/><text x="38.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="35" y="884" width="2" height="15" fill="rgb(243,174,19)"/><text x="38.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="35" y="900" width="2" height="15" fill="rgb(215,142,50)"/><text x="38.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="35" y="916" width="2" height="15" fill="rgb(236,16,18)"/><text x="38.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.17%)</title><rect x="35" y="932" width="2" height="15" fill="rgb(220,94,17)"/><text x="38.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.17%)</title><rect x="35" y="948" width="2" height="15" fill="rgb(239,126,24)"/><text x="38.00" y="958.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.17%)</title><rect x="35" y="964" width="2" height="15" fill="rgb(241,40,7)"/><text x="38.00" y="974.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:4) (15 samples, 2.51%)</title><rect x="10" y="52" width="29" height="15" fill="rgb(208,143,24)"/><text x="13.00" y="62.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 2.51%)</title><rect x="10" y="68" width="29" height="15" fill="rgb(220,54,4)"/><text x="13.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 2.51%)</title><rect x="10" y="84" width="29" height="15" fill="rgb(214,190,36)"/><text x="13.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 2.51%)</title><rect x="10" y="100" width="29" height="15" fill="rgb(231,225,5)"/><text x="13.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 2.51%)</title><rect x="10" y="116" width="29" height="15" fill="rgb(212,212,45)"/><text x="13.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 2.51%)</title><rect x="10" y="132" width="29" height="15" fill="rgb(213,30,41)"/><text x="13.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:7) (4 samples, 0.67%)</title><rect x="31" y="148" width="8" height="15" fill="rgb(241,15,33)"/><text x="34.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.67%)</title><rect x="31" y="164" width="8" height="15" fill="rgb(233,1,2)"/><text x="34.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.67%)</title><rect x="31" y="180" width="8" height="15" fill="rgb(236,64,17)"/><text x="34.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.67%)</title><rect x="31" y="196" width="8" height="15" fill="rgb(245,58,5)"/><text x="34.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.67%)</title><rect x="31" y="212" width="8" height="15" fill="rgb(239,20,54)"/><text x="34.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.67%)</title><rect x="31" y="228" width="8" height="15" fill="rgb(214,84,33)"/><text x="34.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (3 samples, 0.50%)</title><rect x="33" y="244" width="6" height="15" fill="rgb(227,44,3)"/><text x="36.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.50%)</title><rect x="33" y="260" width="6" height="15" fill="rgb(254,132,0)"/><text x="36.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.50%)</title><rect x="33" y="276" width="6" height="15" fill="rgb(208,16,22)"/><text x="36.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.50%)</title><rect x="33" y="292" width="6" height="15" fill="rgb(252,1,10)"/><text x="36.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.50%)</title><rect x="33" y="308" width="6" height="15" fill="rgb(235,116,39)"/><text x="36.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.50%)</title><rect x="33" y="324" width="6" height="15" fill="rgb(246,225,36)"/><text x="36.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 0.50%)</title><rect x="33" y="340" width="6" height="15" fill="rgb(237,194,0)"/><text x="36.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.50%)</title><rect x="33" y="356" width="6" height="15" fill="rgb(240,50,33)"/><text x="36.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.50%)</title><rect x="33" y="372" width="6" height="15" fill="rgb(252,189,18)"/><text x="36.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.50%)</title><rect x="33" y="388" width="6" height="15" fill="rgb(223,137,37)"/><text x="36.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.50%)</title><rect x="33" y="404" width="6" height="15" fill="rgb(241,132,42)"/><text x="36.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.50%)</title><rect x="33" y="420" width="6" height="15" fill="rgb(242,179,45)"/><text x="36.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.17%)</title><rect x="37" y="436" width="2" height="15" fill="rgb(210,79,36)"/><text x="40.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="37" y="452" width="2" height="15" fill="rgb(207,207,37)"/><text x="40.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.17%)</title><rect x="37" y="468" width="2" height="15" fill="rgb(240,80,45)"/><text x="40.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="37" y="484" width="2" height="15" fill="rgb(225,94,28)"/><text x="40.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="37" y="500" width="2" height="15" fill="rgb(246,51,28)"/><text x="40.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="37" y="516" width="2" height="15" fill="rgb(227,59,19)"/><text x="40.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="37" y="532" width="2" height="15" fill="rgb(229,173,31)"/><text x="40.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="37" y="548" width="2" height="15" fill="rgb(229,185,28)"/><text x="40.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="37" y="564" width="2" height="15" fill="rgb(211,106,39)"/><text x="40.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.17%)</title><rect x="37" y="580" width="2" height="15" fill="rgb(221,152,8)"/><text x="40.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="37" y="596" width="2" height="15" fill="rgb(228,166,6)"/><text x="40.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="37" y="612" width="2" height="15" fill="rgb(242,213,11)"/><text x="40.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="37" y="628" width="2" height="15" fill="rgb(228,125,39)"/><text x="40.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="37" y="644" width="2" height="15" fill="rgb(232,67,10)"/><text x="40.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="37" y="660" width="2" height="15" fill="rgb(229,41,8)"/><text x="40.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.17%)</title><rect x="37" y="676" width="2" height="15" fill="rgb(248,20,1)"/><text x="40.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="37" y="692" width="2" height="15" fill="rgb(212,179,27)"/><text x="40.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="37" y="708" width="2" height="15" fill="rgb(228,213,10)"/><text x="40.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="37" y="724" width="2" height="15" fill="rgb(216,57,19)"/><text x="40.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="37" y="740" width="2" height="15" fill="rgb(227,211,36)"/><text x="40.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="37" y="756" width="2" height="15" fill="rgb(224,219,21)"/><text x="40.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.17%)</title><rect x="37" y="772" width="2" height="15" fill="rgb(210,26,25)"/><text x="40.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="37" y="788" width="2" height="15" fill="rgb(233,186,52)"/><text x="40.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="37" y="804" width="2" height="15" fill="rgb(233,197,3)"/><text x="40.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="37" y="820" width="2" height="15" fill="rgb(254,118,50)"/><text x="40.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="37" y="836" width="2" height="15" fill="rgb(227,176,28)"/><text x="40.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="37" y="852" width="2" height="15" fill="rgb(233,97,51)"/><text x="40.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.17%)</title><rect x="37" y="868" width="2" height="15" fill="rgb(237,132,10)"/><text x="40.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="37" y="884" width="2" height="15" fill="rgb(216,174,5)"/><text x="40.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.17%)</title><rect x="37" y="900" width="2" height="15" fill="rgb(212,19,30)"/><text x="40.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="37" y="916" width="2" height="15" fill="rgb(207,141,26)"/><text x="40.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="37" y="932" width="2" height="15" fill="rgb(224,99,26)"/><text x="40.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="37" y="948" width="2" height="15" fill="rgb(211,143,51)"/><text x="40.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="37" y="964" width="2" height="15" fill="rgb(216,77,14)"/><text x="40.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="37" y="980" width="2" height="15" fill="rgb(232,42,12)"/><text x="40.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="37" y="996" width="2" height="15" fill="rgb(214,24,29)"/><text x="40.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.17%)</title><rect x="37" y="1012" width="2" height="15" fill="rgb(214,100,43)"/><text x="40.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="37" y="1028" width="2" height="15" fill="rgb(253,184,13)"/><text x="40.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="37" y="1044" width="2" height="15" fill="rgb(213,223,10)"/><text x="40.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="37" y="1060" width="2" height="15" fill="rgb(241,104,29)"/><text x="40.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="37" y="1076" width="2" height="15" fill="rgb(228,74,41)"/><text x="40.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="37" y="1092" width="2" height="15" fill="rgb(233,97,49)"/><text x="40.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.17%)</title><rect x="37" y="1108" width="2" height="15" fill="rgb(213,70,32)"/><text x="40.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.17%)</title><rect x="37" y="1124" width="2" height="15" fill="rgb(244,156,32)"/><text x="40.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="37" y="1140" width="2" height="15" fill="rgb(232,25,18)"/><text x="40.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="37" y="1156" width="2" height="15" fill="rgb(243,156,23)"/><text x="40.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="37" y="1172" width="2" height="15" fill="rgb(205,94,50)"/><text x="40.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="37" y="1188" width="2" height="15" fill="rgb(237,1,14)"/><text x="40.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="37" y="1204" width="2" height="15" fill="rgb(251,181,48)"/><text x="40.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="37" y="1220" width="2" height="15" fill="rgb(242,57,26)"/><text x="40.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.17%)</title><rect x="37" y="1236" width="2" height="15" fill="rgb(221,81,50)"/><text x="40.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.17%)</title><rect x="37" y="1252" width="2" height="15" fill="rgb(206,147,34)"/><text x="40.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="37" y="1268" width="2" height="15" fill="rgb(209,209,54)"/><text x="40.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="37" y="1284" width="2" height="15" fill="rgb(205,196,3)"/><text x="40.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="37" y="1300" width="2" height="15" fill="rgb(234,228,23)"/><text x="40.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="37" y="1316" width="2" height="15" fill="rgb(208,165,33)"/><text x="40.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="37" y="1332" width="2" height="15" fill="rgb(227,8,27)"/><text x="40.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="37" y="1348" width="2" height="15" fill="rgb(237,228,8)"/><text x="40.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.17%)</title><rect x="37" y="1364" width="2" height="15" fill="rgb(246,91,46)"/><text x="40.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="37" y="1380" width="2" height="15" fill="rgb(225,23,4)"/><text x="40.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="37" y="1396" width="2" height="15" fill="rgb(226,199,8)"/><text x="40.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="37" y="1412" width="2" height="15" fill="rgb(233,108,33)"/><text x="40.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="37" y="1428" width="2" height="15" fill="rgb(236,24,41)"/><text x="40.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="37" y="1444" width="2" height="15" fill="rgb(251,149,20)"/><text x="40.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.17%)</title><rect x="37" y="1460" width="2" height="15" fill="rgb(249,96,41)"/><text x="40.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="37" y="1476" width="2" height="15" fill="rgb(230,169,44)"/><text x="40.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="37" y="1492" width="2" height="15" fill="rgb(213,199,14)"/><text x="40.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="37" y="1508" width="2" height="15" fill="rgb(211,56,33)"/><text x="40.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="37" y="1524" width="2" height="15" fill="rgb(246,188,51)"/><text x="40.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="37" y="1540" width="2" height="15" fill="rgb(241,72,2)"/><text x="40.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.17%)</title><rect x="37" y="1556" width="2" height="15" fill="rgb(214,99,30)"/><text x="40.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.17%)</title><rect x="37" y="1572" width="2" height="15" fill="rgb(208,154,34)"/><text x="40.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="37" y="1588" width="2" height="15" fill="rgb(246,92,49)"/><text x="40.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="37" y="1604" width="2" height="15" fill="rgb(219,159,18)"/><text x="40.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="37" y="1620" width="2" height="15" fill="rgb(237,150,11)"/><text x="40.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="37" y="1636" width="2" height="15" fill="rgb(214,166,23)"/><text x="40.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="37" y="1652" width="2" height="15" fill="rgb(205,75,1)"/><text x="40.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.17%)</title><rect x="37" y="1668" width="2" height="15" fill="rgb(219,145,50)"/><text x="40.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="37" y="1684" width="2" height="15" fill="rgb(228,50,5)"/><text x="40.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="37" y="1700" width="2" height="15" fill="rgb(205,43,26)"/><text x="40.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="37" y="1716" width="2" height="15" fill="rgb(254,24,16)"/><text x="40.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="37" y="1732" width="2" height="15" fill="rgb(240,157,48)"/><text x="40.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="37" y="1748" width="2" height="15" fill="rgb(227,46,31)"/><text x="40.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:15) (1 samples, 0.17%)</title><rect x="37" y="1764" width="2" height="15" fill="rgb(254,118,12)"/><text x="40.00" y="1774.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.17%)</title><rect x="37" y="1780" width="2" height="15" fill="rgb(243,76,28)"/><text x="40.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="37" y="1796" width="2" height="15" fill="rgb(213,16,27)"/><text x="40.00" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="37" y="1812" width="2" height="15" fill="rgb(214,229,36)"/><text x="40.00" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="37" y="1828" width="2" height="15" fill="rgb(252,210,28)"/><text x="40.00" y="1838.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="37" y="1844" width="2" height="15" fill="rgb(214,92,45)"/><text x="40.00" y="1854.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="37" y="1860" width="2" height="15" fill="rgb(240,217,2)"/><text x="40.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="37" y="1876" width="2" height="15" fill="rgb(244,116,15)"/><text x="40.00" y="1886.50"></text></g><g><title>&lt;module&gt; (jinja2/nodes.py:790) (1 samples, 0.17%)</title><rect x="37" y="1892" width="2" height="15" fill="rgb(217,69,43)"/><text x="40.00" y="1902.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.17%)</title><rect x="39" y="116" width="2" height="15" fill="rgb(245,143,46)"/><text x="42.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.17%)</title><rect x="39" y="132" width="2" height="15" fill="rgb(241,173,23)"/><text x="42.00" y="142.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.17%)</title><rect x="39" y="148" width="2" height="15" fill="rgb(240,208,21)"/><text x="42.00" y="158.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.17%)</title><rect x="39" y="164" width="2" height="15" fill="rgb(250,16,12)"/><text x="42.00" y="174.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.17%)</title><rect x="39" y="180" width="2" height="15" fill="rgb(237,211,37)"/><text x="42.00" y="190.50"></text></g><g><title>0x7fed9a715902 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="39" y="196" width="2" height="15" fill="rgb(226,190,7)"/><text x="42.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.17%)</title><rect x="47" y="164" width="2" height="15" fill="rgb(232,172,26)"/><text x="50.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.34%)</title><rect x="49" y="164" width="4" height="15" fill="rgb(220,20,48)"/><text x="52.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.17%)</title><rect x="51" y="180" width="2" height="15" fill="rgb(207,79,51)"/><text x="54.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.17%)</title><rect x="55" y="180" width="2" height="15" fill="rgb(217,103,9)"/><text x="58.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.34%)</title><rect x="65" y="196" width="4" height="15" fill="rgb(214,73,35)"/><text x="68.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (8 samples, 1.34%)</title><rect x="57" y="180" width="16" height="15" fill="rgb(228,9,11)"/><text x="60.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.34%)</title><rect x="69" y="196" width="4" height="15" fill="rgb(244,194,6)"/><text x="72.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (17 samples, 2.85%)</title><rect x="43" y="148" width="34" height="15" fill="rgb(249,23,34)"/><text x="46.00" y="158.50">pr..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (12 samples, 2.01%)</title><rect x="53" y="164" width="24" height="15" fill="rgb(214,161,15)"/><text x="56.00" y="174.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.34%)</title><rect x="73" y="180" width="4" height="15" fill="rgb(217,27,9)"/><text x="76.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.34%)</title><rect x="73" y="196" width="4" height="15" fill="rgb(235,92,19)"/><text x="76.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (2 samples, 0.34%)</title><rect x="81" y="180" width="4" height="15" fill="rgb(224,97,53)"/><text x="84.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.17%)</title><rect x="85" y="180" width="2" height="15" fill="rgb(213,24,13)"/><text x="88.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (1 samples, 0.17%)</title><rect x="87" y="180" width="2" height="15" fill="rgb(245,105,10)"/><text x="90.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.34%)</title><rect x="89" y="180" width="4" height="15" fill="rgb(248,120,35)"/><text x="92.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.17%)</title><rect x="91" y="196" width="2" height="15" fill="rgb(244,33,13)"/><text x="94.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.17%)</title><rect x="98" y="196" width="2" height="15" fill="rgb(237,186,41)"/><text x="101.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.17%)</title><rect x="100" y="196" width="2" height="15" fill="rgb(212,62,25)"/><text x="103.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.17%)</title><rect x="102" y="196" width="2" height="15" fill="rgb(226,169,18)"/><text x="105.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.17%)</title><rect x="104" y="196" width="2" height="15" fill="rgb(241,176,39)"/><text x="107.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:491) (1 samples, 0.17%)</title><rect x="106" y="196" width="2" height="15" fill="rgb(216,16,19)"/><text x="109.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (9 samples, 1.51%)</title><rect x="93" y="180" width="17" height="15" fill="rgb(241,125,5)"/><text x="96.00" y="190.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.17%)</title><rect x="108" y="196" width="2" height="15" fill="rgb(206,110,36)"/><text x="111.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (6 samples, 1.01%)</title><rect x="112" y="212" width="12" height="15" fill="rgb(238,221,42)"/><text x="115.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (9 samples, 1.51%)</title><rect x="110" y="180" width="18" height="15" fill="rgb(213,175,4)"/><text x="113.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (9 samples, 1.51%)</title><rect x="110" y="196" width="18" height="15" fill="rgb(252,208,37)"/><text x="113.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:189) (2 samples, 0.34%)</title><rect x="124" y="212" width="4" height="15" fill="rgb(221,44,50)"/><text x="127.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.17%)</title><rect x="128" y="180" width="2" height="15" fill="rgb(207,48,45)"/><text x="131.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.34%)</title><rect x="130" y="180" width="4" height="15" fill="rgb(242,37,42)"/><text x="133.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.34%)</title><rect x="130" y="196" width="4" height="15" fill="rgb(217,181,1)"/><text x="133.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.17%)</title><rect x="132" y="212" width="2" height="15" fill="rgb(225,132,50)"/><text x="135.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.17%)</title><rect x="134" y="180" width="2" height="15" fill="rgb(210,16,46)"/><text x="137.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.17%)</title><rect x="134" y="196" width="2" height="15" fill="rgb(237,188,5)"/><text x="137.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.17%)</title><rect x="136" y="180" width="2" height="15" fill="rgb(230,169,33)"/><text x="139.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.17%)</title><rect x="146" y="212" width="2" height="15" fill="rgb(232,28,43)"/><text x="149.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (7 samples, 1.17%)</title><rect x="138" y="180" width="14" height="15" fill="rgb(221,52,26)"/><text x="141.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (6 samples, 1.01%)</title><rect x="140" y="196" width="12" height="15" fill="rgb(241,121,22)"/><text x="143.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.34%)</title><rect x="148" y="212" width="4" height="15" fill="rgb(254,93,22)"/><text x="151.00" y="222.50"></text></g><g><title>unicode_rpartition (python3.7) (1 samples, 0.17%)</title><rect x="150" y="228" width="2" height="15" fill="rgb(249,72,15)"/><text x="153.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (5 samples, 0.84%)</title><rect x="152" y="196" width="10" height="15" fill="rgb(239,183,15)"/><text x="155.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.17%)</title><rect x="162" y="196" width="2" height="15" fill="rgb(219,8,48)"/><text x="165.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (2 samples, 0.34%)</title><rect x="164" y="196" width="4" height="15" fill="rgb(246,114,1)"/><text x="167.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (2 samples, 0.34%)</title><rect x="168" y="196" width="4" height="15" fill="rgb(229,37,50)"/><text x="171.00" y="206.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (50 samples, 8.38%)</title><rect x="77" y="164" width="99" height="15" fill="rgb(209,199,38)"/><text x="80.00" y="174.50">_validate_X..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (12 samples, 2.01%)</title><rect x="152" y="180" width="24" height="15" fill="rgb(232,75,54)"/><text x="155.00" y="190.50">c..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.34%)</title><rect x="172" y="196" width="4" height="15" fill="rgb(205,27,32)"/><text x="175.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (51 samples, 8.54%)</title><rect x="77" y="148" width="101" height="15" fill="rgb(225,201,34)"/><text x="80.00" y="158.50">predict (skl..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:381) (1 samples, 0.17%)</title><rect x="176" y="164" width="2" height="15" fill="rgb(205,88,25)"/><text x="179.00" y="174.50"></text></g><g><title>0x7fed74d80f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="178" y="180" width="1" height="15" fill="rgb(209,12,0)"/><text x="181.00" y="190.50"></text></g><g><title>0x7fed74d70d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="178" y="196" width="1" height="15" fill="rgb(243,102,40)"/><text x="181.00" y="206.50"></text></g><g><title>PyArray_New (ctors.c:1357) (1 samples, 0.17%)</title><rect x="178" y="212" width="1" height="15" fill="rgb(216,32,15)"/><text x="181.00" y="222.50"></text></g><g><title>0x7fed74d8f225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="179" y="212" width="2" height="15" fill="rgb(208,53,39)"/><text x="182.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3228) (1 samples, 0.17%)</title><rect x="179" y="228" width="2" height="15" fill="rgb(242,225,16)"/><text x="182.00" y="238.50"></text></g><g><title>0x7fed74d6910c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="181" y="260" width="2" height="15" fill="rgb(243,17,26)"/><text x="184.00" y="270.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.17%)</title><rect x="183" y="292" width="2" height="15" fill="rgb(252,192,11)"/><text x="186.00" y="302.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.17%)</title><rect x="183" y="308" width="2" height="15" fill="rgb(250,201,14)"/><text x="186.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="183" y="324" width="2" height="15" fill="rgb(208,45,4)"/><text x="186.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.17%)</title><rect x="185" y="292" width="2" height="15" fill="rgb(208,178,52)"/><text x="188.00" y="302.50"></text></g><g><title>_buffer_info_cmp (buffer.c:611) (1 samples, 0.17%)</title><rect x="185" y="308" width="2" height="15" fill="rgb(248,8,36)"/><text x="188.00" y="318.50"></text></g><g><title>0x7fed9a7246a0 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="185" y="324" width="2" height="15" fill="rgb(229,8,22)"/><text x="188.00" y="334.50"></text></g><g><title>0x7fed74d73d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.67%)</title><rect x="181" y="228" width="8" height="15" fill="rgb(253,66,19)"/><text x="184.00" y="238.50"></text></g><g><title>0x7fed74d73666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.67%)</title><rect x="181" y="244" width="8" height="15" fill="rgb(220,94,34)"/><text x="184.00" y="254.50"></text></g><g><title>0x7fed74d692fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.50%)</title><rect x="183" y="260" width="6" height="15" fill="rgb(233,79,27)"/><text x="186.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 0.50%)</title><rect x="183" y="276" width="6" height="15" fill="rgb(239,43,39)"/><text x="186.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.17%)</title><rect x="187" y="292" width="2" height="15" fill="rgb(205,213,32)"/><text x="190.00" y="302.50"></text></g><g><title>_buffer_info_free (buffer.c:635) (1 samples, 0.17%)</title><rect x="187" y="308" width="2" height="15" fill="rgb(229,127,54)"/><text x="190.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.17%)</title><rect x="187" y="324" width="2" height="15" fill="rgb(242,45,12)"/><text x="190.00" y="334.50"></text></g><g><title>0x7fed74d8f2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.84%)</title><rect x="181" y="212" width="10" height="15" fill="rgb(221,201,2)"/><text x="184.00" y="222.50"></text></g><g><title>0x7fed74d73e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="189" y="228" width="2" height="15" fill="rgb(236,192,40)"/><text x="192.00" y="238.50"></text></g><g><title>0x7fed74d67022 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="189" y="244" width="2" height="15" fill="rgb(221,109,4)"/><text x="192.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.17%)</title><rect x="191" y="244" width="2" height="15" fill="rgb(222,173,38)"/><text x="194.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.17%)</title><rect x="191" y="260" width="2" height="15" fill="rgb(228,4,54)"/><text x="194.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (2 samples, 0.34%)</title><rect x="191" y="228" width="4" height="15" fill="rgb(246,41,34)"/><text x="194.00" y="238.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.17%)</title><rect x="193" y="244" width="2" height="15" fill="rgb(251,21,6)"/><text x="196.00" y="254.50"></text></g><g><title>0x7fed74d8f592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.50%)</title><rect x="191" y="212" width="6" height="15" fill="rgb(234,0,22)"/><text x="194.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.17%)</title><rect x="195" y="228" width="2" height="15" fill="rgb(220,176,17)"/><text x="198.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.17%)</title><rect x="195" y="244" width="2" height="15" fill="rgb(216,73,3)"/><text x="198.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.17%)</title><rect x="195" y="260" width="2" height="15" fill="rgb(241,86,21)"/><text x="198.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1025) (1 samples, 0.17%)</title><rect x="195" y="276" width="2" height="15" fill="rgb(227,32,46)"/><text x="198.00" y="286.50"></text></g><g><title>0x7fed74d8f644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="197" y="212" width="2" height="15" fill="rgb(223,35,40)"/><text x="200.00" y="222.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="197" y="228" width="2" height="15" fill="rgb(229,88,27)"/><text x="200.00" y="238.50"></text></g><g><title>0x7fed74d8f690 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="199" y="212" width="2" height="15" fill="rgb(228,206,48)"/><text x="202.00" y="222.50"></text></g><g><title>0x7fed74d8f698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.34%)</title><rect x="201" y="212" width="4" height="15" fill="rgb(233,127,30)"/><text x="204.00" y="222.50"></text></g><g><title>0x7fed74d8f6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.50%)</title><rect x="205" y="212" width="6" height="15" fill="rgb(207,0,43)"/><text x="208.00" y="222.50"></text></g><g><title>0x7fed74d8f6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.34%)</title><rect x="211" y="212" width="4" height="15" fill="rgb(210,197,48)"/><text x="214.00" y="222.50"></text></g><g><title>0x7fed74d8f6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="215" y="212" width="2" height="15" fill="rgb(251,62,53)"/><text x="218.00" y="222.50"></text></g><g><title>0x7fed74d8f6b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.67%)</title><rect x="217" y="212" width="8" height="15" fill="rgb(220,210,14)"/><text x="220.00" y="222.50"></text></g><g><title>0x7fed74d8f6c6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="225" y="212" width="2" height="15" fill="rgb(243,205,47)"/><text x="228.00" y="222.50"></text></g><g><title>0x7fed74d8f8aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="227" y="212" width="2" height="15" fill="rgb(222,146,16)"/><text x="230.00" y="222.50"></text></g><g><title>0x7fed74d8f92f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="229" y="212" width="2" height="15" fill="rgb(233,31,52)"/><text x="232.00" y="222.50"></text></g><g><title>0x7fed74d648b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="229" y="228" width="2" height="15" fill="rgb(230,8,48)"/><text x="232.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.34%)</title><rect x="231" y="244" width="4" height="15" fill="rgb(218,61,40)"/><text x="234.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (2 samples, 0.34%)</title><rect x="231" y="260" width="4" height="15" fill="rgb(215,168,54)"/><text x="234.00" y="270.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (2 samples, 0.34%)</title><rect x="231" y="276" width="4" height="15" fill="rgb(225,109,15)"/><text x="234.00" y="286.50"></text></g><g><title>_buffer_format_string (buffer.c:419) (2 samples, 0.34%)</title><rect x="231" y="292" width="4" height="15" fill="rgb(226,158,20)"/><text x="234.00" y="302.50"></text></g><g><title>_append_char (buffer.c:121) (2 samples, 0.34%)</title><rect x="231" y="308" width="4" height="15" fill="rgb(219,66,4)"/><text x="234.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.34%)</title><rect x="231" y="324" width="4" height="15" fill="rgb(249,182,50)"/><text x="234.00" y="334.50"></text></g><g><title>0x7fed74d80fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (29 samples, 4.86%)</title><rect x="179" y="180" width="58" height="15" fill="rgb(236,179,43)"/><text x="182.00" y="190.50">0x7fed..</text></g><g><title>0x7fed74d90405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (29 samples, 4.86%)</title><rect x="179" y="196" width="58" height="15" fill="rgb(224,222,12)"/><text x="182.00" y="206.50">0x7fed..</text></g><g><title>0x7fed74d8fc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.50%)</title><rect x="231" y="212" width="6" height="15" fill="rgb(228,106,34)"/><text x="234.00" y="222.50"></text></g><g><title>0x7fed74d67529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.50%)</title><rect x="231" y="228" width="6" height="15" fill="rgb(252,135,19)"/><text x="234.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c:800) (1 samples, 0.17%)</title><rect x="235" y="244" width="2" height="15" fill="rgb(219,157,52)"/><text x="238.00" y="254.50"></text></g><g><title>0x7fed74d80fd1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="237" y="180" width="2" height="15" fill="rgb(219,107,13)"/><text x="240.00" y="190.50"></text></g><g><title>0x7fed74d80ff3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="239" y="180" width="2" height="15" fill="rgb(230,38,3)"/><text x="242.00" y="190.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:229) (1 samples, 0.17%)</title><rect x="243" y="212" width="2" height="15" fill="rgb(213,218,27)"/><text x="246.00" y="222.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.17%)</title><rect x="243" y="228" width="2" height="15" fill="rgb(248,166,17)"/><text x="246.00" y="238.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.17%)</title><rect x="243" y="244" width="2" height="15" fill="rgb(247,140,31)"/><text x="246.00" y="254.50"></text></g><g><title>array_take (methods.c:138) (3 samples, 0.50%)</title><rect x="241" y="196" width="6" height="15" fill="rgb(236,21,41)"/><text x="244.00" y="206.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.17%)</title><rect x="245" y="212" width="2" height="15" fill="rgb(242,77,19)"/><text x="248.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3896) (1 samples, 0.17%)</title><rect x="247" y="228" width="2" height="15" fill="rgb(211,48,26)"/><text x="250.00" y="238.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="247" y="244" width="2" height="15" fill="rgb(246,110,14)"/><text x="250.00" y="254.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3949) (2 samples, 0.34%)</title><rect x="249" y="228" width="4" height="15" fill="rgb(239,204,6)"/><text x="252.00" y="238.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (4 samples, 0.67%)</title><rect x="247" y="212" width="8" height="15" fill="rgb(214,164,37)"/><text x="250.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3954) (1 samples, 0.17%)</title><rect x="253" y="228" width="2" height="15" fill="rgb(245,138,40)"/><text x="256.00" y="238.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.17%)</title><rect x="255" y="212" width="2" height="15" fill="rgb(227,7,16)"/><text x="258.00" y="222.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.17%)</title><rect x="255" y="228" width="2" height="15" fill="rgb(223,119,43)"/><text x="258.00" y="238.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.17%)</title><rect x="255" y="244" width="2" height="15" fill="rgb(241,113,9)"/><text x="258.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.17%)</title><rect x="255" y="260" width="2" height="15" fill="rgb(209,152,31)"/><text x="258.00" y="270.50"></text></g><g><title>PyArray_FromArray (ctors.c:2231) (1 samples, 0.17%)</title><rect x="255" y="276" width="2" height="15" fill="rgb(240,60,20)"/><text x="258.00" y="286.50"></text></g><g><title>0x7fed74d8105a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.51%)</title><rect x="241" y="180" width="18" height="15" fill="rgb(247,11,11)"/><text x="244.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (6 samples, 1.01%)</title><rect x="247" y="196" width="12" height="15" fill="rgb(224,115,20)"/><text x="250.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:55) (1 samples, 0.17%)</title><rect x="257" y="212" width="2" height="15" fill="rgb(205,11,1)"/><text x="260.00" y="222.50"></text></g><g><title>PyArray_FromAny (ctors.c:1867) (1 samples, 0.17%)</title><rect x="257" y="228" width="2" height="15" fill="rgb(221,126,3)"/><text x="260.00" y="238.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.17%)</title><rect x="257" y="244" width="2" height="15" fill="rgb(229,126,17)"/><text x="260.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:725) (1 samples, 0.17%)</title><rect x="259" y="228" width="2" height="15" fill="rgb(241,123,22)"/><text x="262.00" y="238.50"></text></g><g><title>0x7fed9a715a53 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="259" y="244" width="2" height="15" fill="rgb(250,83,26)"/><text x="262.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 0.50%)</title><rect x="259" y="196" width="5" height="15" fill="rgb(227,229,22)"/><text x="262.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (3 samples, 0.50%)</title><rect x="259" y="212" width="5" height="15" fill="rgb(220,168,24)"/><text x="262.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (2 samples, 0.34%)</title><rect x="261" y="228" width="3" height="15" fill="rgb(241,22,13)"/><text x="264.00" y="238.50"></text></g><g><title>0x7fed74d8114f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.67%)</title><rect x="259" y="180" width="7" height="15" fill="rgb(225,122,52)"/><text x="262.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.17%)</title><rect x="264" y="196" width="2" height="15" fill="rgb(234,194,23)"/><text x="267.00" y="206.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.17%)</title><rect x="264" y="212" width="2" height="15" fill="rgb(208,64,47)"/><text x="267.00" y="222.50"></text></g><g><title>0x7fed74d81163 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="266" y="180" width="2" height="15" fill="rgb(241,23,13)"/><text x="269.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1178) (1 samples, 0.17%)</title><rect x="268" y="196" width="2" height="15" fill="rgb(220,93,28)"/><text x="271.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (48 samples, 8.04%)</title><rect x="178" y="148" width="94" height="15" fill="rgb(229,228,15)"/><text x="181.00" y="158.50">predict (sk..</text></g><g><title>0x7fed74d81d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (48 samples, 8.04%)</title><rect x="178" y="164" width="94" height="15" fill="rgb(213,221,42)"/><text x="181.00" y="174.50">0x7fed74d81..</text></g><g><title>0x7fed74d811bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.34%)</title><rect x="268" y="180" width="4" height="15" fill="rgb(228,193,52)"/><text x="271.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.17%)</title><rect x="270" y="196" width="2" height="15" fill="rgb(225,225,19)"/><text x="273.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:421) (3 samples, 0.50%)</title><rect x="272" y="148" width="6" height="15" fill="rgb(242,193,40)"/><text x="275.00" y="158.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.17%)</title><rect x="276" y="164" width="2" height="15" fill="rgb(211,126,19)"/><text x="279.00" y="174.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (3 samples, 0.50%)</title><rect x="278" y="148" width="6" height="15" fill="rgb(243,46,35)"/><text x="281.00" y="158.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (2 samples, 0.34%)</title><rect x="280" y="164" width="4" height="15" fill="rgb(239,203,53)"/><text x="283.00" y="174.50"></text></g><g><title>predict (sklearn/tree/_classes.py:441) (2 samples, 0.34%)</title><rect x="284" y="148" width="4" height="15" fill="rgb(238,1,33)"/><text x="287.00" y="158.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (126 samples, 21.11%)</title><rect x="41" y="132" width="249" height="15" fill="rgb(246,82,48)"/><text x="44.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (1 samples, 0.17%)</title><rect x="288" y="148" width="2" height="15" fill="rgb(232,17,26)"/><text x="291.00" y="158.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.17%)</title><rect x="288" y="164" width="2" height="15" fill="rgb(219,78,25)"/><text x="291.00" y="174.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.17%)</title><rect x="288" y="180" width="2" height="15" fill="rgb(235,200,20)"/><text x="291.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.17%)</title><rect x="288" y="196" width="2" height="15" fill="rgb(233,10,17)"/><text x="291.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:54) (128 samples, 21.44%)</title><rect x="39" y="52" width="253" height="15" fill="rgb(222,28,45)"/><text x="42.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegre..</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:53) (128 samples, 21.44%)</title><rect x="39" y="68" width="253" height="15" fill="rgb(242,96,8)"/><text x="42.00" y="78.50">profile_skl (bench_DecisionTreeRe..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:37) (128 samples, 21.44%)</title><rect x="39" y="84" width="253" height="15" fill="rgb(239,185,50)"/><text x="42.00" y="94.50">setup_profile (bench_DecisionTree..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:31) (128 samples, 21.44%)</title><rect x="39" y="100" width="253" height="15" fill="rgb(233,95,13)"/><text x="42.00" y="110.50">profile (bench_DecisionTreeRegres..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (127 samples, 21.27%)</title><rect x="41" y="116" width="251" height="15" fill="rgb(214,205,50)"/><text x="44.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.17%)</title><rect x="290" y="132" width="2" height="15" fill="rgb(250,170,48)"/><text x="293.00" y="142.50"></text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:36) (1 samples, 0.17%)</title><rect x="292" y="84" width="2" height="15" fill="rgb(238,102,30)"/><text x="295.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.17%)</title><rect x="292" y="100" width="2" height="15" fill="rgb(212,155,21)"/><text x="295.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.17%)</title><rect x="292" y="116" width="2" height="15" fill="rgb(247,103,48)"/><text x="295.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.17%)</title><rect x="292" y="132" width="2" height="15" fill="rgb(222,175,38)"/><text x="295.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.17%)</title><rect x="292" y="148" width="2" height="15" fill="rgb(221,86,47)"/><text x="295.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.17%)</title><rect x="292" y="164" width="2" height="15" fill="rgb(249,209,18)"/><text x="295.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.17%)</title><rect x="292" y="180" width="2" height="15" fill="rgb(225,113,0)"/><text x="295.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.17%)</title><rect x="292" y="196" width="2" height="15" fill="rgb(238,12,2)"/><text x="295.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="292" y="212" width="2" height="15" fill="rgb(252,154,28)"/><text x="295.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="292" y="228" width="2" height="15" fill="rgb(254,132,5)"/><text x="295.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="292" y="244" width="2" height="15" fill="rgb(238,213,5)"/><text x="295.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="292" y="260" width="2" height="15" fill="rgb(232,111,54)"/><text x="295.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="292" y="276" width="2" height="15" fill="rgb(219,131,51)"/><text x="295.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.17%)</title><rect x="292" y="292" width="2" height="15" fill="rgb(206,6,14)"/><text x="295.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="292" y="308" width="2" height="15" fill="rgb(233,103,4)"/><text x="295.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="292" y="324" width="2" height="15" fill="rgb(239,185,13)"/><text x="295.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="292" y="340" width="2" height="15" fill="rgb(208,128,53)"/><text x="295.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="292" y="356" width="2" height="15" fill="rgb(236,199,28)"/><text x="295.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="292" y="372" width="2" height="15" fill="rgb(250,80,20)"/><text x="295.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.17%)</title><rect x="292" y="388" width="2" height="15" fill="rgb(212,36,13)"/><text x="295.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="292" y="404" width="2" height="15" fill="rgb(208,100,16)"/><text x="295.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="292" y="420" width="2" height="15" fill="rgb(231,218,20)"/><text x="295.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="292" y="436" width="2" height="15" fill="rgb(247,14,39)"/><text x="295.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="292" y="452" width="2" height="15" fill="rgb(209,216,1)"/><text x="295.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="292" y="468" width="2" height="15" fill="rgb(224,192,24)"/><text x="295.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.17%)</title><rect x="292" y="484" width="2" height="15" fill="rgb(213,99,29)"/><text x="295.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.17%)</title><rect x="292" y="500" width="2" height="15" fill="rgb(219,67,31)"/><text x="295.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.17%)</title><rect x="292" y="516" width="2" height="15" fill="rgb(253,173,25)"/><text x="295.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.17%)</title><rect x="292" y="532" width="2" height="15" fill="rgb(245,84,53)"/><text x="295.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.17%)</title><rect x="292" y="548" width="2" height="15" fill="rgb(215,102,28)"/><text x="295.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.17%)</title><rect x="292" y="564" width="2" height="15" fill="rgb(232,127,24)"/><text x="295.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.17%)</title><rect x="292" y="580" width="2" height="15" fill="rgb(244,40,36)"/><text x="295.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.17%)</title><rect x="292" y="596" width="2" height="15" fill="rgb(221,64,13)"/><text x="295.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:713) (1 samples, 0.17%)</title><rect x="292" y="612" width="2" height="15" fill="rgb(216,207,34)"/><text x="295.00" y="622.50"></text></g><g><title>find (jinja2/nodes.py:181) (1 samples, 0.17%)</title><rect x="292" y="628" width="2" height="15" fill="rgb(224,187,50)"/><text x="295.00" y="638.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.17%)</title><rect x="292" y="644" width="2" height="15" fill="rgb(212,96,50)"/><text x="295.00" y="654.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.17%)</title><rect x="292" y="660" width="2" height="15" fill="rgb(236,15,42)"/><text x="295.00" y="670.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.17%)</title><rect x="292" y="676" width="2" height="15" fill="rgb(251,86,37)"/><text x="295.00" y="686.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.17%)</title><rect x="292" y="692" width="2" height="15" fill="rgb(206,1,0)"/><text x="295.00" y="702.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.17%)</title><rect x="292" y="708" width="2" height="15" fill="rgb(240,58,30)"/><text x="295.00" y="718.50"></text></g><g><title>find_all (jinja2/nodes.py:189) (1 samples, 0.17%)</title><rect x="292" y="724" width="2" height="15" fill="rgb(213,125,13)"/><text x="295.00" y="734.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.17%)</title><rect x="294" y="164" width="2" height="15" fill="rgb(212,199,50)"/><text x="297.00" y="174.50"></text></g><g><title>0x7fed5b1ee54f (?) (1 samples, 0.17%)</title><rect x="296" y="244" width="2" height="15" fill="rgb(238,223,47)"/><text x="299.00" y="254.50"></text></g><g><title>0x7fed5b1f465e (?) (1 samples, 0.17%)</title><rect x="296" y="260" width="2" height="15" fill="rgb(238,205,44)"/><text x="299.00" y="270.50"></text></g><g><title>0x7fed5b1f450f (?) (1 samples, 0.17%)</title><rect x="296" y="276" width="2" height="15" fill="rgb(251,210,29)"/><text x="299.00" y="286.50"></text></g><g><title>0x7fed5b1fad6c (?) (1 samples, 0.17%)</title><rect x="296" y="292" width="2" height="15" fill="rgb(223,144,24)"/><text x="299.00" y="302.50"></text></g><g><title>0x7fed6471bab9 (?) (1 samples, 0.17%)</title><rect x="296" y="308" width="2" height="15" fill="rgb(224,193,7)"/><text x="299.00" y="318.50"></text></g><g><title>0x7fed6471cea0 (?) (1 samples, 0.17%)</title><rect x="296" y="324" width="2" height="15" fill="rgb(217,167,47)"/><text x="299.00" y="334.50"></text></g><g><title>0x7fed6471cea9 (libgomp.so.1.0.0) (15 samples, 2.51%)</title><rect x="298" y="484" width="30" height="15" fill="rgb(208,162,49)"/><text x="301.00" y="494.50">0x..</text></g><g><title>0x7fed6471ceab (libgomp.so.1.0.0) (9 samples, 1.51%)</title><rect x="328" y="484" width="18" height="15" fill="rgb(245,23,12)"/><text x="331.00" y="494.50"></text></g><g><title>0x7fed6471bab9 (libgomp.so.1.0.0) (36 samples, 6.03%)</title><rect x="298" y="468" width="71" height="15" fill="rgb(238,165,29)"/><text x="301.00" y="478.50">0x7fed64..</text></g><g><title>0x7fed6471cead (libgomp.so.1.0.0) (12 samples, 2.01%)</title><rect x="346" y="484" width="23" height="15" fill="rgb(230,94,1)"/><text x="349.00" y="494.50">0..</text></g><g><title>0x7fed6471ccf0 (libgomp.so.1.0.0) (1 samples, 0.17%)</title><rect x="369" y="500" width="2" height="15" fill="rgb(223,202,28)"/><text x="372.00" y="510.50"></text></g><g><title>0x7fed6471ccf9 (libgomp.so.1.0.0) (1 samples, 0.17%)</title><rect x="371" y="500" width="2" height="15" fill="rgb(207,81,26)"/><text x="374.00" y="510.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:61) (43 samples, 7.20%)</title><rect x="292" y="52" width="85" height="15" fill="rgb(223,222,2)"/><text x="295.00" y="62.50">&lt;module&gt; (..</text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:60) (43 samples, 7.20%)</title><rect x="292" y="68" width="85" height="15" fill="rgb(251,137,46)"/><text x="295.00" y="78.50">profile_py..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:37) (42 samples, 7.04%)</title><rect x="294" y="84" width="83" height="15" fill="rgb(218,77,52)"/><text x="297.00" y="94.50">setup_pro..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:31) (42 samples, 7.04%)</title><rect x="294" y="100" width="83" height="15" fill="rgb(253,227,48)"/><text x="297.00" y="110.50">profile (..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (42 samples, 7.04%)</title><rect x="294" y="116" width="83" height="15" fill="rgb(214,225,30)"/><text x="297.00" y="126.50">time_pred..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (42 samples, 7.04%)</title><rect x="294" y="132" width="83" height="15" fill="rgb(227,187,31)"/><text x="297.00" y="142.50">&lt;lambda&gt; ..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (42 samples, 7.04%)</title><rect x="294" y="148" width="83" height="15" fill="rgb(236,57,24)"/><text x="297.00" y="158.50">run (mlpr..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (41 samples, 6.87%)</title><rect x="296" y="164" width="81" height="15" fill="rgb(245,85,20)"/><text x="299.00" y="174.50">_run_sequ..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (41 samples, 6.87%)</title><rect x="296" y="180" width="81" height="15" fill="rgb(217,152,27)"/><text x="299.00" y="190.50">run (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (41 samples, 6.87%)</title><rect x="296" y="196" width="81" height="15" fill="rgb(228,66,32)"/><text x="299.00" y="206.50">run (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (41 samples, 6.87%)</title><rect x="296" y="212" width="81" height="15" fill="rgb(221,197,51)"/><text x="299.00" y="222.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (41 samples, 6.87%)</title><rect x="296" y="228" width="81" height="15" fill="rgb(213,3,11)"/><text x="299.00" y="238.50">_run (mlp..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (40 samples, 6.70%)</title><rect x="298" y="244" width="79" height="15" fill="rgb(233,146,10)"/><text x="301.00" y="254.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (40 samples, 6.70%)</title><rect x="298" y="260" width="79" height="15" fill="rgb(228,5,14)"/><text x="301.00" y="270.50">void pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (40 samples, 6.70%)</title><rect x="298" y="276" width="79" height="15" fill="rgb(247,103,20)"/><text x="301.00" y="286.50">void pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (40 samples, 6.70%)</title><rect x="298" y="292" width="79" height="15" fill="rgb(208,118,19)"/><text x="301.00" y="302.50">pybind11:..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (40 samples, 6.70%)</title><rect x="298" y="308" width="79" height="15" fill="rgb(217,141,21)"/><text x="301.00" y="318.50">pybind11:..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (40 samples, 6.70%)</title><rect x="298" y="324" width="79" height="15" fill="rgb(254,47,49)"/><text x="301.00" y="334.50">pybind11:..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (40 samples, 6.70%)</title><rect x="298" y="340" width="79" height="15" fill="rgb(220,222,13)"/><text x="301.00" y="350.50">pybind11:..</text></g><g><title>pybind11::array::~array (numpy.h:538) (40 samples, 6.70%)</title><rect x="298" y="356" width="79" height="15" fill="rgb(235,103,5)"/><text x="301.00" y="366.50">pybind11:..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (40 samples, 6.70%)</title><rect x="298" y="372" width="79" height="15" fill="rgb(243,210,21)"/><text x="301.00" y="382.50">pybind11:..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (40 samples, 6.70%)</title><rect x="298" y="388" width="79" height="15" fill="rgb(219,5,2)"/><text x="301.00" y="398.50">pybind11:..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (40 samples, 6.70%)</title><rect x="298" y="404" width="79" height="15" fill="rgb(242,221,17)"/><text x="301.00" y="414.50">pybind11:..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (40 samples, 6.70%)</title><rect x="298" y="420" width="79" height="15" fill="rgb(253,217,43)"/><text x="301.00" y="430.50">RuntimeTr..</text></g><g><title>pybind11::array::size (numpy.h:619) (40 samples, 6.70%)</title><rect x="298" y="436" width="79" height="15" fill="rgb(214,136,4)"/><text x="301.00" y="446.50">pybind11:..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (40 samples, 6.70%)</title><rect x="298" y="452" width="79" height="15" fill="rgb(230,210,14)"/><text x="301.00" y="462.50">std::accu..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (4 samples, 0.67%)</title><rect x="369" y="468" width="8" height="15" fill="rgb(205,79,53)"/><text x="372.00" y="478.50"></text></g><g><title>0x7fed6471adaa (libgomp.so.1.0.0) (4 samples, 0.67%)</title><rect x="369" y="484" width="8" height="15" fill="rgb(233,175,7)"/><text x="372.00" y="494.50"></text></g><g><title>0x7fed6471ccfd (libgomp.so.1.0.0) (2 samples, 0.34%)</title><rect x="373" y="500" width="4" height="15" fill="rgb(217,38,54)"/><text x="376.00" y="510.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (2 samples, 0.34%)</title><rect x="385" y="148" width="4" height="15" fill="rgb(234,176,54)"/><text x="388.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.17%)</title><rect x="389" y="148" width="2" height="15" fill="rgb(205,194,25)"/><text x="392.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.17%)</title><rect x="393" y="196" width="2" height="15" fill="rgb(208,158,33)"/><text x="396.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (7 samples, 1.17%)</title><rect x="395" y="196" width="14" height="15" fill="rgb(236,5,1)"/><text x="398.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (6 samples, 1.01%)</title><rect x="397" y="212" width="12" height="15" fill="rgb(207,205,31)"/><text x="400.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="405" y="228" width="4" height="15" fill="rgb(253,127,40)"/><text x="408.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="405" y="244" width="4" height="15" fill="rgb(248,4,51)"/><text x="408.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="407" y="260" width="2" height="15" fill="rgb(250,116,2)"/><text x="410.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="407" y="276" width="2" height="15" fill="rgb(214,0,43)"/><text x="410.00" y="286.50"></text></g><g><title>pybind11::detail::instance::get_value_and_holder (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="407" y="292" width="2" height="15" fill="rgb(231,87,45)"/><text x="410.00" y="302.50"></text></g><g><title>0x7fed5a7d3ff9 (?) (1 samples, 0.17%)</title><rect x="413" y="212" width="2" height="15" fill="rgb(216,146,5)"/><text x="416.00" y="222.50"></text></g><g><title>0x7fed5a7ceef6 (?) (1 samples, 0.17%)</title><rect x="413" y="228" width="2" height="15" fill="rgb(224,226,11)"/><text x="416.00" y="238.50"></text></g><g><title>0x7fed5a7c3962 (?) (1 samples, 0.17%)</title><rect x="413" y="244" width="2" height="15" fill="rgb(223,13,28)"/><text x="416.00" y="254.50"></text></g><g><title>0x7fed5a7f77a7 (?) (1 samples, 0.17%)</title><rect x="413" y="260" width="2" height="15" fill="rgb(252,172,48)"/><text x="416.00" y="270.50"></text></g><g><title>0x7fed5a7f7379 (?) (1 samples, 0.17%)</title><rect x="413" y="276" width="2" height="15" fill="rgb(225,71,8)"/><text x="416.00" y="286.50"></text></g><g><title>0x7fed5ac558b8 (?) (1 samples, 0.17%)</title><rect x="413" y="292" width="2" height="15" fill="rgb(206,87,53)"/><text x="416.00" y="302.50"></text></g><g><title>0x7fed5ac53c7f (?) (1 samples, 0.17%)</title><rect x="413" y="308" width="2" height="15" fill="rgb(211,57,13)"/><text x="416.00" y="318.50"></text></g><g><title>0x7fed5ac6699c (?) (1 samples, 0.17%)</title><rect x="413" y="324" width="2" height="15" fill="rgb(214,41,15)"/><text x="416.00" y="334.50"></text></g><g><title>0x7fed5a98e2ab (?) (1 samples, 0.17%)</title><rect x="413" y="340" width="2" height="15" fill="rgb(248,174,5)"/><text x="416.00" y="350.50"></text></g><g><title>0x7fed5a8083e6 (?) (1 samples, 0.17%)</title><rect x="413" y="356" width="2" height="15" fill="rgb(244,62,14)"/><text x="416.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="413" y="372" width="2" height="15" fill="rgb(216,222,53)"/><text x="416.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="413" y="388" width="2" height="15" fill="rgb(251,86,49)"/><text x="416.00" y="398.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="415" y="228" width="2" height="15" fill="rgb(236,213,10)"/><text x="418.00" y="238.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="417" y="228" width="2" height="15" fill="rgb(253,190,13)"/><text x="420.00" y="238.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="427" y="292" width="4" height="15" fill="rgb(209,129,19)"/><text x="430.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.34%)</title><rect x="427" y="308" width="4" height="15" fill="rgb(235,81,48)"/><text x="430.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.34%)</title><rect x="427" y="324" width="4" height="15" fill="rgb(211,37,37)"/><text x="430.00" y="334.50"></text></g><g><title>0x7fed9a7177ff (libc-2.29.so) (1 samples, 0.17%)</title><rect x="429" y="340" width="2" height="15" fill="rgb(219,94,43)"/><text x="432.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="436" y="356" width="2" height="15" fill="rgb(213,178,3)"/><text x="439.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="436" y="372" width="2" height="15" fill="rgb(231,196,3)"/><text x="439.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="436" y="388" width="2" height="15" fill="rgb(216,14,4)"/><text x="439.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="438" y="356" width="2" height="15" fill="rgb(236,194,6)"/><text x="441.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="438" y="372" width="2" height="15" fill="rgb(247,197,6)"/><text x="441.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="438" y="388" width="2" height="15" fill="rgb(231,228,25)"/><text x="441.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.67%)</title><rect x="434" y="340" width="8" height="15" fill="rgb(246,168,30)"/><text x="437.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetExecutionPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="440" y="356" width="2" height="15" fill="rgb(229,31,5)"/><text x="443.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="442" y="340" width="2" height="15" fill="rgb(217,54,38)"/><text x="445.00" y="350.50"></text></g><g><title>0x7fed5a79b0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="529" y="356" width="4" height="15" fill="rgb(244,226,29)"/><text x="532.00" y="366.50"></text></g><g><title>0x7fed8a1e27a0 (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="533" y="356" width="2" height="15" fill="rgb(243,186,11)"/><text x="536.00" y="366.50"></text></g><g><title>0x7fed9a715900 (libc-2.29.so) (2 samples, 0.34%)</title><rect x="535" y="356" width="4" height="15" fill="rgb(237,12,4)"/><text x="538.00" y="366.50"></text></g><g><title>0x7fed9a715908 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="539" y="356" width="2" height="15" fill="rgb(237,217,20)"/><text x="542.00" y="366.50"></text></g><g><title>0x7fed9a715938 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="541" y="356" width="2" height="15" fill="rgb(210,125,23)"/><text x="544.00" y="366.50"></text></g><g><title>0x7fed9a71595e (libc-2.29.so) (1 samples, 0.17%)</title><rect x="543" y="356" width="2" height="15" fill="rgb(211,72,29)"/><text x="546.00" y="366.50"></text></g><g><title>0x7fed9a715961 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="545" y="356" width="2" height="15" fill="rgb(252,6,3)"/><text x="548.00" y="366.50"></text></g><g><title>0x7fed9a715965 (libc-2.29.so) (2 samples, 0.34%)</title><rect x="547" y="356" width="4" height="15" fill="rgb(221,168,8)"/><text x="550.00" y="366.50"></text></g><g><title>0x7fed9a71596a (libc-2.29.so) (1 samples, 0.17%)</title><rect x="551" y="356" width="2" height="15" fill="rgb(252,65,52)"/><text x="554.00" y="366.50"></text></g><g><title>0x7fed9a71597c (libc-2.29.so) (2 samples, 0.34%)</title><rect x="553" y="356" width="4" height="15" fill="rgb(238,213,51)"/><text x="556.00" y="366.50"></text></g><g><title>0x7fed9a715991 (libc-2.29.so) (7 samples, 1.17%)</title><rect x="557" y="356" width="14" height="15" fill="rgb(226,38,54)"/><text x="560.00" y="366.50"></text></g><g><title>0x7fed9a715998 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="571" y="356" width="2" height="15" fill="rgb(217,0,39)"/><text x="574.00" y="366.50"></text></g><g><title>0x7fed9a715a4c (libc-2.29.so) (1 samples, 0.17%)</title><rect x="573" y="356" width="2" height="15" fill="rgb(225,228,48)"/><text x="576.00" y="366.50"></text></g><g><title>0x7fed9a715a4d (libc-2.29.so) (1 samples, 0.17%)</title><rect x="575" y="356" width="2" height="15" fill="rgb(234,44,40)"/><text x="578.00" y="366.50"></text></g><g><title>0x7fed9a715a55 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="577" y="356" width="2" height="15" fill="rgb(222,103,54)"/><text x="580.00" y="366.50"></text></g><g><title>0x7fed9a715bc0 (libc-2.29.so) (2 samples, 0.34%)</title><rect x="579" y="356" width="4" height="15" fill="rgb(220,141,50)"/><text x="582.00" y="366.50"></text></g><g><title>0x7fed9a715bd8 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="583" y="356" width="2" height="15" fill="rgb(244,101,37)"/><text x="586.00" y="366.50"></text></g><g><title>0x7fed9a715be4 (libc-2.29.so) (2 samples, 0.34%)</title><rect x="585" y="356" width="4" height="15" fill="rgb(222,46,26)"/><text x="588.00" y="366.50"></text></g><g><title>0x7fed9a73612b (libc-2.29.so) (1 samples, 0.17%)</title><rect x="589" y="356" width="2" height="15" fill="rgb(210,133,49)"/><text x="592.00" y="366.50"></text></g><g><title>0x7fed9a736144 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="591" y="356" width="2" height="15" fill="rgb(219,133,49)"/><text x="594.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (13 samples, 2.18%)</title><rect x="593" y="356" width="25" height="15" fill="rgb(234,115,43)"/><text x="596.00" y="366.50">f..</text></g><g><title>0x7fed5a79a930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="852" y="388" width="1" height="15" fill="rgb(246,74,35)"/><text x="855.00" y="398.50"></text></g><g><title>0x7fed8a1e1d50 (libstdc++.so.6.0.28) (2 samples, 0.34%)</title><rect x="857" y="404" width="4" height="15" fill="rgb(243,197,13)"/><text x="860.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (11 samples, 1.84%)</title><rect x="853" y="388" width="22" height="15" fill="rgb(216,157,8)"/><text x="856.00" y="398.50">o..</text></g><g><title>malloc (libc-2.29.so) (7 samples, 1.17%)</title><rect x="861" y="404" width="14" height="15" fill="rgb(225,66,35)"/><text x="864.00" y="414.50"></text></g><g><title>0x7fed9a736120 (libc-2.29.so) (2 samples, 0.34%)</title><rect x="927" y="420" width="4" height="15" fill="rgb(231,222,5)"/><text x="930.00" y="430.50"></text></g><g><title>0x7fed9a73614a (libc-2.29.so) (1 samples, 0.17%)</title><rect x="931" y="420" width="2" height="15" fill="rgb(228,178,35)"/><text x="934.00" y="430.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.85%)</title><rect x="909" y="404" width="33" height="15" fill="rgb(236,160,35)"/><text x="912.00" y="414.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.84%)</title><rect x="933" y="420" width="9" height="15" fill="rgb(240,24,8)"/><text x="936.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.84%)</title><rect x="933" y="436" width="9" height="15" fill="rgb(220,52,6)"/><text x="936.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (226 samples, 37.86%)</title><rect x="618" y="356" width="447" height="15" fill="rgb(212,40,50)"/><text x="621.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNod..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (121 samples, 20.27%)</title><rect x="826" y="372" width="239" height="15" fill="rgb(223,175,3)"/><text x="829.00" y="382.50">std::_Hashtable&lt;long, std::pair..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (96 samples, 16.08%)</title><rect x="875" y="388" width="190" height="15" fill="rgb(211,34,9)"/><text x="878.00" y="398.50">std::_Hashtable&lt;long, st..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (62 samples, 10.39%)</title><rect x="942" y="404" width="123" height="15" fill="rgb(251,137,18)"/><text x="945.00" y="414.50">std::__detail::..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (26 samples, 4.36%)</title><rect x="1014" y="420" width="51" height="15" fill="rgb(226,107,9)"/><text x="1017.00" y="430.50">std::..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.01%)</title><rect x="1065" y="356" width="12" height="15" fill="rgb(229,208,47)"/><text x="1068.00" y="366.50"></text></g><g><title>0x7fed9a735dcb (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1075" y="372" width="2" height="15" fill="rgb(210,27,44)"/><text x="1078.00" y="382.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 3.85%)</title><rect x="1077" y="356" width="45" height="15" fill="rgb(231,225,6)"/><text x="1080.00" y="366.50">std:..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (372 samples, 62.31%)</title><rect x="423" y="260" width="735" height="15" fill="rgb(237,169,43)"/><text x="426.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (370 samples, 61.98%)</title><rect x="427" y="276" width="731" height="15" fill="rgb(239,117,49)"/><text x="430.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (368 samples, 61.64%)</title><rect x="431" y="292" width="727" height="15" fill="rgb(212,156,2)"/><text x="434.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (368 samples, 61.64%)</title><rect x="431" y="308" width="727" height="15" fill="rgb(253,46,36)"/><text x="434.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (367 samples, 61.47%)</title><rect x="432" y="324" width="726" height="15" fill="rgb(215,98,9)"/><text x="435.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (361 samples, 60.47%)</title><rect x="444" y="340" width="714" height="15" fill="rgb(238,219,47)"/><text x="447.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_stat..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 3.02%)</title><rect x="1122" y="356" width="36" height="15" fill="rgb(233,196,28)"/><text x="1125.00" y="366.50">std..</text></g><g><title>operator new (libstdc++.so.6.0.28) (9 samples, 1.51%)</title><rect x="1140" y="372" width="18" height="15" fill="rgb(208,188,54)"/><text x="1143.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (7 samples, 1.17%)</title><rect x="1144" y="388" width="14" height="15" fill="rgb(216,2,46)"/><text x="1147.00" y="398.50"></text></g><g><title>0x7fed9a72be7a (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1160" y="276" width="2" height="15" fill="rgb(217,45,31)"/><text x="1163.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.50%)</title><rect x="1158" y="260" width="6" height="15" fill="rgb(214,82,43)"/><text x="1161.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.17%)</title><rect x="1162" y="276" width="2" height="15" fill="rgb(237,41,6)"/><text x="1165.00" y="286.50"></text></g><g><title>0x7fed9a735d94 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1164" y="276" width="2" height="15" fill="rgb(220,156,30)"/><text x="1167.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="1164" y="260" width="4" height="15" fill="rgb(224,102,23)"/><text x="1167.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.17%)</title><rect x="1166" y="276" width="2" height="15" fill="rgb(211,220,9)"/><text x="1169.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.17%)</title><rect x="1166" y="292" width="2" height="15" fill="rgb(240,103,29)"/><text x="1169.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.17%)</title><rect x="1166" y="308" width="2" height="15" fill="rgb(239,7,40)"/><text x="1169.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.17%)</title><rect x="1166" y="324" width="2" height="15" fill="rgb(226,213,36)"/><text x="1169.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.17%)</title><rect x="1166" y="340" width="2" height="15" fill="rgb(221,212,0)"/><text x="1169.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1166" y="356" width="2" height="15" fill="rgb(233,185,51)"/><text x="1169.00" y="366.50"></text></g><g><title>0x7fed9a717028 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1166" y="372" width="2" height="15" fill="rgb(250,164,46)"/><text x="1169.00" y="382.50"></text></g><g><title>0x7fed9a714b9b (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1166" y="388" width="2" height="15" fill="rgb(223,6,26)"/><text x="1169.00" y="398.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1168" y="260" width="2" height="15" fill="rgb(241,180,49)"/><text x="1171.00" y="270.50"></text></g><g><title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, false&gt; &gt; &gt;::_M_allocate_buckets [clone .isra.925] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1170" y="260" width="2" height="15" fill="rgb(251,82,52)"/><text x="1173.00" y="270.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="1170" y="276" width="2" height="15" fill="rgb(234,94,27)"/><text x="1173.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1170" y="292" width="2" height="15" fill="rgb(222,177,45)"/><text x="1173.00" y="302.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (380 samples, 63.65%)</title><rect x="423" y="244" width="751" height="15" fill="rgb(238,99,50)"/><text x="426.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::v..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1172" y="260" width="2" height="15" fill="rgb(229,131,14)"/><text x="1175.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1172" y="276" width="2" height="15" fill="rgb(245,214,53)"/><text x="1175.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1172" y="292" width="2" height="15" fill="rgb(205,16,37)"/><text x="1175.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1172" y="308" width="2" height="15" fill="rgb(219,169,42)"/><text x="1175.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1172" y="324" width="2" height="15" fill="rgb(229,46,29)"/><text x="1175.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1172" y="340" width="2" height="15" fill="rgb(247,177,28)"/><text x="1175.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1172" y="356" width="2" height="15" fill="rgb(240,172,46)"/><text x="1175.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1172" y="372" width="2" height="15" fill="rgb(246,126,28)"/><text x="1175.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1172" y="388" width="2" height="15" fill="rgb(229,116,23)"/><text x="1175.00" y="398.50"></text></g><g><title>0x7fed9a715998 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1172" y="404" width="2" height="15" fill="rgb(233,117,11)"/><text x="1175.00" y="414.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (397 samples, 66.50%)</title><rect x="391" y="164" width="785" height="15" fill="rgb(238,135,40)"/><text x="394.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (397 samples, 66.50%)</title><rect x="391" y="180" width="785" height="15" fill="rgb(205,173,38)"/><text x="394.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (388 samples, 64.99%)</title><rect x="409" y="196" width="767" height="15" fill="rgb(223,102,10)"/><text x="412.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (385 samples, 64.49%)</title><rect x="415" y="212" width="761" height="15" fill="rgb(215,91,9)"/><text x="418.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (383 samples, 64.15%)</title><rect x="419" y="228" width="757" height="15" fill="rgb(243,181,46)"/><text x="422.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambd..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1174" y="244" width="2" height="15" fill="rgb(254,168,51)"/><text x="1177.00" y="254.50"></text></g><g><title>all (597 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(240,5,45)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:68) (411 samples, 68.84%)</title><rect x="377" y="52" width="813" height="15" fill="rgb(214,87,7)"/><text x="380.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:68)</text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:67) (411 samples, 68.84%)</title><rect x="377" y="68" width="813" height="15" fill="rgb(245,131,31)"/><text x="380.00" y="78.50">profile_ort (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:67)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:37) (411 samples, 68.84%)</title><rect x="377" y="84" width="813" height="15" fill="rgb(222,142,40)"/><text x="380.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:37)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:31) (411 samples, 68.84%)</title><rect x="377" y="100" width="813" height="15" fill="rgb(252,185,14)"/><text x="380.00" y="110.50">profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (411 samples, 68.84%)</title><rect x="377" y="116" width="813" height="15" fill="rgb(207,107,41)"/><text x="380.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (408 samples, 68.34%)</title><rect x="383" y="132" width="807" height="15" fill="rgb(249,163,15)"/><text x="386.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (404 samples, 67.67%)</title><rect x="391" y="148" width="799" height="15" fill="rgb(226,24,53)"/><text x="394.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (7 samples, 1.17%)</title><rect x="1176" y="164" width="14" height="15" fill="rgb(221,189,0)"/><text x="1179.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 0.50%)</title><rect x="1184" y="180" width="6" height="15" fill="rgb(229,24,0)"/><text x="1187.00" y="190.50"></text></g></g></svg>