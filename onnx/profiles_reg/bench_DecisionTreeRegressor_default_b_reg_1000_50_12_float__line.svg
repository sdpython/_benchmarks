<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2278" onload="init(evt)" viewBox="0 0 1200 2278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2278" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2261.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2261.00"> </text><g id="frames"><g><title>namedtuple (collections/__init__.py:457) (1 samples, 0.16%)</title><rect x="10" y="644" width="1" height="15" fill="rgb(220,7,3)"/><text x="13.00" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (2 samples, 0.32%)</title><rect x="10" y="372" width="3" height="15" fill="rgb(221,14,13)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.32%)</title><rect x="10" y="388" width="3" height="15" fill="rgb(241,217,1)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="10" y="404" width="3" height="15" fill="rgb(221,199,52)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="10" y="420" width="3" height="15" fill="rgb(219,157,8)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="10" y="436" width="3" height="15" fill="rgb(251,20,41)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="10" y="452" width="3" height="15" fill="rgb(231,193,35)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="10" y="468" width="3" height="15" fill="rgb(220,35,15)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="10" y="484" width="3" height="15" fill="rgb(215,227,25)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:14) (2 samples, 0.32%)</title><rect x="10" y="500" width="3" height="15" fill="rgb(251,164,36)"/><text x="13.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.32%)</title><rect x="10" y="516" width="3" height="15" fill="rgb(229,101,15)"/><text x="13.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="10" y="532" width="3" height="15" fill="rgb(242,55,51)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="10" y="548" width="3" height="15" fill="rgb(206,49,37)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="10" y="564" width="3" height="15" fill="rgb(227,103,23)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="10" y="580" width="3" height="15" fill="rgb(231,23,27)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="10" y="596" width="3" height="15" fill="rgb(209,210,29)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="10" y="612" width="3" height="15" fill="rgb(237,163,37)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:69) (2 samples, 0.32%)</title><rect x="10" y="628" width="3" height="15" fill="rgb(243,65,14)"/><text x="13.00" y="638.50"></text></g><g><title>namedtuple (collections/__init__.py:473) (1 samples, 0.16%)</title><rect x="11" y="644" width="2" height="15" fill="rgb(224,125,18)"/><text x="14.00" y="654.50"></text></g><g><title>sys_getframe (python3.7) (1 samples, 0.16%)</title><rect x="11" y="660" width="2" height="15" fill="rgb(242,139,40)"/><text x="14.00" y="670.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:1) (3 samples, 0.48%)</title><rect x="10" y="148" width="5" height="15" fill="rgb(229,185,52)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.48%)</title><rect x="10" y="164" width="5" height="15" fill="rgb(207,121,33)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.48%)</title><rect x="10" y="180" width="5" height="15" fill="rgb(245,30,37)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.48%)</title><rect x="10" y="196" width="5" height="15" fill="rgb(211,199,38)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.48%)</title><rect x="10" y="212" width="5" height="15" fill="rgb(247,161,38)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.48%)</title><rect x="10" y="228" width="5" height="15" fill="rgb(230,156,38)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (3 samples, 0.48%)</title><rect x="10" y="244" width="5" height="15" fill="rgb(216,93,15)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.48%)</title><rect x="10" y="260" width="5" height="15" fill="rgb(244,32,43)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.48%)</title><rect x="10" y="276" width="5" height="15" fill="rgb(233,68,15)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.48%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(207,160,48)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.48%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(219,186,52)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.48%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(205,143,36)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.48%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(215,140,8)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.48%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(249,211,23)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:71) (1 samples, 0.16%)</title><rect x="13" y="372" width="2" height="15" fill="rgb(228,113,9)"/><text x="16.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="13" y="388" width="2" height="15" fill="rgb(212,227,31)"/><text x="16.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="13" y="404" width="2" height="15" fill="rgb(238,41,10)"/><text x="16.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="13" y="420" width="2" height="15" fill="rgb(235,193,3)"/><text x="16.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="13" y="436" width="2" height="15" fill="rgb(234,41,13)"/><text x="16.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="13" y="452" width="2" height="15" fill="rgb(240,20,7)"/><text x="16.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="13" y="468" width="2" height="15" fill="rgb(223,219,19)"/><text x="16.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="13" y="484" width="2" height="15" fill="rgb(211,12,20)"/><text x="16.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py:2420) (1 samples, 0.16%)</title><rect x="13" y="500" width="2" height="15" fill="rgb(205,133,39)"/><text x="16.00" y="510.50"></text></g><g><title>extend_all (numpy/core/numeric.py:2401) (1 samples, 0.16%)</title><rect x="13" y="516" width="2" height="15" fill="rgb(225,145,37)"/><text x="16.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="13" y="532" width="2" height="15" fill="rgb(224,89,32)"/><text x="16.00" y="542.50"></text></g><g><title>0x7fcbfcea96df (libc-2.29.so) (1 samples, 0.16%)</title><rect x="13" y="548" width="2" height="15" fill="rgb(250,182,46)"/><text x="16.00" y="558.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.16%)</title><rect x="15" y="964" width="2" height="15" fill="rgb(217,5,21)"/><text x="18.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.16%)</title><rect x="15" y="980" width="2" height="15" fill="rgb(250,170,16)"/><text x="18.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.16%)</title><rect x="15" y="996" width="2" height="15" fill="rgb(235,74,54)"/><text x="18.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.16%)</title><rect x="15" y="1012" width="2" height="15" fill="rgb(224,154,21)"/><text x="18.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.16%)</title><rect x="15" y="1028" width="2" height="15" fill="rgb(244,90,37)"/><text x="18.00" y="1038.50"></text></g><g><title>strerror (libc-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="1044" width="2" height="15" fill="rgb(244,23,49)"/><text x="18.00" y="1054.50"></text></g><g><title>__strerror_r (libc-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="1060" width="2" height="15" fill="rgb(208,57,37)"/><text x="18.00" y="1070.50"></text></g><g><title>0x7fcbfce5897c (libc-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="1076" width="2" height="15" fill="rgb(249,21,13)"/><text x="18.00" y="1086.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (3 samples, 0.48%)</title><rect x="15" y="852" width="6" height="15" fill="rgb(240,71,42)"/><text x="18.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (3 samples, 0.48%)</title><rect x="15" y="868" width="6" height="15" fill="rgb(226,56,11)"/><text x="18.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (3 samples, 0.48%)</title><rect x="15" y="884" width="6" height="15" fill="rgb(220,63,39)"/><text x="18.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (3 samples, 0.48%)</title><rect x="15" y="900" width="6" height="15" fill="rgb(236,130,47)"/><text x="18.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (3 samples, 0.48%)</title><rect x="15" y="916" width="6" height="15" fill="rgb(232,38,28)"/><text x="18.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (3 samples, 0.48%)</title><rect x="15" y="932" width="6" height="15" fill="rgb(234,77,33)"/><text x="18.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (3 samples, 0.48%)</title><rect x="15" y="948" width="6" height="15" fill="rgb(216,125,38)"/><text x="18.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1388) (2 samples, 0.32%)</title><rect x="17" y="964" width="4" height="15" fill="rgb(221,1,49)"/><text x="20.00" y="974.50"></text></g><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;:102) (2 samples, 0.32%)</title><rect x="17" y="980" width="4" height="15" fill="rgb(207,11,33)"/><text x="20.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.16%)</title><rect x="19" y="996" width="2" height="15" fill="rgb(249,204,6)"/><text x="22.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.16%)</title><rect x="19" y="1012" width="2" height="15" fill="rgb(250,84,13)"/><text x="22.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.16%)</title><rect x="19" y="1028" width="2" height="15" fill="rgb(241,137,51)"/><text x="22.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.16%)</title><rect x="19" y="1044" width="2" height="15" fill="rgb(208,9,34)"/><text x="22.00" y="1054.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py:54) (1 samples, 0.16%)</title><rect x="21" y="916" width="2" height="15" fill="rgb(219,15,28)"/><text x="24.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:69) (1 samples, 0.16%)</title><rect x="21" y="932" width="2" height="15" fill="rgb(249,177,3)"/><text x="24.00" y="942.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 0.80%)</title><rect x="15" y="820" width="10" height="15" fill="rgb(219,163,45)"/><text x="18.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 0.80%)</title><rect x="15" y="836" width="10" height="15" fill="rgb(225,143,49)"/><text x="18.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.32%)</title><rect x="21" y="852" width="4" height="15" fill="rgb(215,206,19)"/><text x="24.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.32%)</title><rect x="21" y="868" width="4" height="15" fill="rgb(233,31,6)"/><text x="24.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.32%)</title><rect x="21" y="884" width="4" height="15" fill="rgb(243,82,2)"/><text x="24.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.32%)</title><rect x="21" y="900" width="4" height="15" fill="rgb(225,178,48)"/><text x="24.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.16%)</title><rect x="23" y="916" width="2" height="15" fill="rgb(233,106,45)"/><text x="26.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.16%)</title><rect x="23" y="932" width="2" height="15" fill="rgb(216,21,40)"/><text x="26.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.16%)</title><rect x="23" y="948" width="2" height="15" fill="rgb(239,140,8)"/><text x="26.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.16%)</title><rect x="23" y="964" width="2" height="15" fill="rgb(245,183,49)"/><text x="26.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.16%)</title><rect x="23" y="980" width="2" height="15" fill="rgb(254,134,47)"/><text x="26.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:2) (6 samples, 0.96%)</title><rect x="15" y="148" width="11" height="15" fill="rgb(226,200,35)"/><text x="18.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.96%)</title><rect x="15" y="164" width="11" height="15" fill="rgb(219,163,47)"/><text x="18.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 0.96%)</title><rect x="15" y="180" width="11" height="15" fill="rgb(214,127,39)"/><text x="18.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.96%)</title><rect x="15" y="196" width="11" height="15" fill="rgb(220,140,15)"/><text x="18.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.96%)</title><rect x="15" y="212" width="11" height="15" fill="rgb(248,135,26)"/><text x="18.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.96%)</title><rect x="15" y="228" width="11" height="15" fill="rgb(230,111,16)"/><text x="18.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.96%)</title><rect x="15" y="244" width="11" height="15" fill="rgb(226,143,34)"/><text x="18.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.96%)</title><rect x="15" y="260" width="11" height="15" fill="rgb(214,142,22)"/><text x="18.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.96%)</title><rect x="15" y="276" width="11" height="15" fill="rgb(252,137,9)"/><text x="18.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 0.96%)</title><rect x="15" y="292" width="11" height="15" fill="rgb(209,104,45)"/><text x="18.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.96%)</title><rect x="15" y="308" width="11" height="15" fill="rgb(242,220,35)"/><text x="18.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.96%)</title><rect x="15" y="324" width="11" height="15" fill="rgb(225,32,11)"/><text x="18.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.96%)</title><rect x="15" y="340" width="11" height="15" fill="rgb(246,59,52)"/><text x="18.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.96%)</title><rect x="15" y="356" width="11" height="15" fill="rgb(229,25,11)"/><text x="18.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.96%)</title><rect x="15" y="372" width="11" height="15" fill="rgb(254,108,26)"/><text x="18.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 0.96%)</title><rect x="15" y="388" width="11" height="15" fill="rgb(224,168,49)"/><text x="18.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.96%)</title><rect x="15" y="404" width="11" height="15" fill="rgb(228,36,34)"/><text x="18.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.96%)</title><rect x="15" y="420" width="11" height="15" fill="rgb(225,78,30)"/><text x="18.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.96%)</title><rect x="15" y="436" width="11" height="15" fill="rgb(245,38,50)"/><text x="18.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.96%)</title><rect x="15" y="452" width="11" height="15" fill="rgb(218,93,51)"/><text x="18.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.96%)</title><rect x="15" y="468" width="11" height="15" fill="rgb(209,127,23)"/><text x="18.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 0.96%)</title><rect x="15" y="484" width="11" height="15" fill="rgb(210,141,49)"/><text x="18.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.96%)</title><rect x="15" y="500" width="11" height="15" fill="rgb(233,131,14)"/><text x="18.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.96%)</title><rect x="15" y="516" width="11" height="15" fill="rgb(222,197,7)"/><text x="18.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.96%)</title><rect x="15" y="532" width="11" height="15" fill="rgb(230,60,15)"/><text x="18.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.96%)</title><rect x="15" y="548" width="11" height="15" fill="rgb(220,208,32)"/><text x="18.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.96%)</title><rect x="15" y="564" width="11" height="15" fill="rgb(252,162,20)"/><text x="18.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 0.96%)</title><rect x="15" y="580" width="11" height="15" fill="rgb(225,157,15)"/><text x="18.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.96%)</title><rect x="15" y="596" width="11" height="15" fill="rgb(217,14,46)"/><text x="18.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 0.96%)</title><rect x="15" y="612" width="11" height="15" fill="rgb(242,135,37)"/><text x="18.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.96%)</title><rect x="15" y="628" width="11" height="15" fill="rgb(246,23,25)"/><text x="18.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.96%)</title><rect x="15" y="644" width="11" height="15" fill="rgb(232,177,5)"/><text x="18.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.96%)</title><rect x="15" y="660" width="11" height="15" fill="rgb(206,106,41)"/><text x="18.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.96%)</title><rect x="15" y="676" width="11" height="15" fill="rgb(231,169,33)"/><text x="18.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.96%)</title><rect x="15" y="692" width="11" height="15" fill="rgb(231,114,14)"/><text x="18.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.96%)</title><rect x="15" y="708" width="11" height="15" fill="rgb(218,176,53)"/><text x="18.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 0.96%)</title><rect x="15" y="724" width="11" height="15" fill="rgb(229,46,44)"/><text x="18.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.96%)</title><rect x="15" y="740" width="11" height="15" fill="rgb(209,31,51)"/><text x="18.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.96%)</title><rect x="15" y="756" width="11" height="15" fill="rgb(211,71,40)"/><text x="18.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.96%)</title><rect x="15" y="772" width="11" height="15" fill="rgb(247,16,45)"/><text x="18.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.96%)</title><rect x="15" y="788" width="11" height="15" fill="rgb(244,138,6)"/><text x="18.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.96%)</title><rect x="15" y="804" width="11" height="15" fill="rgb(251,128,6)"/><text x="18.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:81) (1 samples, 0.16%)</title><rect x="25" y="820" width="1" height="15" fill="rgb(245,208,18)"/><text x="28.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="25" y="836" width="1" height="15" fill="rgb(206,126,25)"/><text x="28.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="25" y="852" width="1" height="15" fill="rgb(252,59,47)"/><text x="28.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="25" y="868" width="1" height="15" fill="rgb(253,171,22)"/><text x="28.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="25" y="884" width="1" height="15" fill="rgb(246,72,44)"/><text x="28.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.16%)</title><rect x="25" y="900" width="1" height="15" fill="rgb(214,228,50)"/><text x="28.00" y="910.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.16%)</title><rect x="25" y="916" width="1" height="15" fill="rgb(208,59,18)"/><text x="28.00" y="926.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.16%)</title><rect x="25" y="932" width="1" height="15" fill="rgb(225,193,24)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="25" y="948" width="1" height="15" fill="rgb(231,10,8)"/><text x="28.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="25" y="964" width="1" height="15" fill="rgb(210,127,4)"/><text x="28.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="25" y="980" width="1" height="15" fill="rgb(243,168,41)"/><text x="28.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="25" y="996" width="1" height="15" fill="rgb(253,28,38)"/><text x="28.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="25" y="1012" width="1" height="15" fill="rgb(207,6,9)"/><text x="28.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/__init__.py:6) (1 samples, 0.16%)</title><rect x="25" y="1028" width="1" height="15" fill="rgb(238,136,4)"/><text x="28.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="25" y="1044" width="1" height="15" fill="rgb(249,217,32)"/><text x="28.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="25" y="1060" width="1" height="15" fill="rgb(230,47,20)"/><text x="28.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="25" y="1076" width="1" height="15" fill="rgb(218,145,23)"/><text x="28.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.16%)</title><rect x="25" y="1092" width="1" height="15" fill="rgb(214,183,48)"/><text x="28.00" y="1102.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.16%)</title><rect x="25" y="1108" width="1" height="15" fill="rgb(223,181,44)"/><text x="28.00" y="1118.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.16%)</title><rect x="25" y="1124" width="1" height="15" fill="rgb(243,206,47)"/><text x="28.00" y="1134.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:4) (1 samples, 0.16%)</title><rect x="26" y="148" width="2" height="15" fill="rgb(209,119,17)"/><text x="29.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="26" y="164" width="2" height="15" fill="rgb(230,87,28)"/><text x="29.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="26" y="180" width="2" height="15" fill="rgb(214,209,26)"/><text x="29.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="26" y="196" width="2" height="15" fill="rgb(223,206,46)"/><text x="29.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="26" y="212" width="2" height="15" fill="rgb(208,87,6)"/><text x="29.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="26" y="228" width="2" height="15" fill="rgb(217,17,14)"/><text x="29.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="26" y="244" width="2" height="15" fill="rgb(243,99,21)"/><text x="29.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="26" y="260" width="2" height="15" fill="rgb(208,188,9)"/><text x="29.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="26" y="276" width="2" height="15" fill="rgb(246,207,38)"/><text x="29.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.16%)</title><rect x="26" y="292" width="2" height="15" fill="rgb(207,90,5)"/><text x="29.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="26" y="308" width="2" height="15" fill="rgb(245,21,50)"/><text x="29.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="26" y="324" width="2" height="15" fill="rgb(228,88,3)"/><text x="29.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="26" y="340" width="2" height="15" fill="rgb(215,158,20)"/><text x="29.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="26" y="356" width="2" height="15" fill="rgb(207,124,32)"/><text x="29.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="26" y="372" width="2" height="15" fill="rgb(219,182,5)"/><text x="29.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.16%)</title><rect x="26" y="388" width="2" height="15" fill="rgb(246,109,47)"/><text x="29.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="26" y="404" width="2" height="15" fill="rgb(224,211,36)"/><text x="29.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="26" y="420" width="2" height="15" fill="rgb(241,174,32)"/><text x="29.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="26" y="436" width="2" height="15" fill="rgb(213,41,3)"/><text x="29.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="26" y="452" width="2" height="15" fill="rgb(224,81,17)"/><text x="29.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="26" y="468" width="2" height="15" fill="rgb(211,178,42)"/><text x="29.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.16%)</title><rect x="26" y="484" width="2" height="15" fill="rgb(208,228,27)"/><text x="29.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="26" y="500" width="2" height="15" fill="rgb(213,11,27)"/><text x="29.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="26" y="516" width="2" height="15" fill="rgb(226,49,48)"/><text x="29.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="26" y="532" width="2" height="15" fill="rgb(236,98,27)"/><text x="29.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="26" y="548" width="2" height="15" fill="rgb(243,61,10)"/><text x="29.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="26" y="564" width="2" height="15" fill="rgb(230,229,36)"/><text x="29.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.16%)</title><rect x="26" y="580" width="2" height="15" fill="rgb(206,113,53)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="26" y="596" width="2" height="15" fill="rgb(218,103,26)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="26" y="612" width="2" height="15" fill="rgb(209,170,37)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="26" y="628" width="2" height="15" fill="rgb(232,204,16)"/><text x="29.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="26" y="644" width="2" height="15" fill="rgb(223,84,36)"/><text x="29.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="26" y="660" width="2" height="15" fill="rgb(222,92,50)"/><text x="29.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.16%)</title><rect x="26" y="676" width="2" height="15" fill="rgb(219,209,9)"/><text x="29.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="26" y="692" width="2" height="15" fill="rgb(249,132,1)"/><text x="29.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="26" y="708" width="2" height="15" fill="rgb(207,146,6)"/><text x="29.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="26" y="724" width="2" height="15" fill="rgb(211,134,24)"/><text x="29.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="26" y="740" width="2" height="15" fill="rgb(215,24,10)"/><text x="29.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="26" y="756" width="2" height="15" fill="rgb(210,26,18)"/><text x="29.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.16%)</title><rect x="26" y="772" width="2" height="15" fill="rgb(205,200,15)"/><text x="29.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="26" y="788" width="2" height="15" fill="rgb(217,133,30)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="26" y="804" width="2" height="15" fill="rgb(252,46,33)"/><text x="29.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="26" y="820" width="2" height="15" fill="rgb(245,125,8)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="26" y="836" width="2" height="15" fill="rgb(206,104,7)"/><text x="29.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="26" y="852" width="2" height="15" fill="rgb(229,150,31)"/><text x="29.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="26" y="868" width="2" height="15" fill="rgb(245,220,10)"/><text x="29.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="26" y="884" width="2" height="15" fill="rgb(253,115,21)"/><text x="29.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:14) (1 samples, 0.16%)</title><rect x="26" y="900" width="2" height="15" fill="rgb(249,65,12)"/><text x="29.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="26" y="916" width="2" height="15" fill="rgb(218,184,26)"/><text x="29.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="26" y="932" width="2" height="15" fill="rgb(208,140,32)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="26" y="948" width="2" height="15" fill="rgb(225,5,29)"/><text x="29.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="26" y="964" width="2" height="15" fill="rgb(221,61,36)"/><text x="29.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="26" y="980" width="2" height="15" fill="rgb(251,65,25)"/><text x="29.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="26" y="996" width="2" height="15" fill="rgb(206,125,35)"/><text x="29.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="26" y="1012" width="2" height="15" fill="rgb(244,214,15)"/><text x="29.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py:553) (1 samples, 0.16%)</title><rect x="26" y="1028" width="2" height="15" fill="rgb(205,83,3)"/><text x="29.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:2824) (1 samples, 0.16%)</title><rect x="26" y="1044" width="2" height="15" fill="rgb(213,215,40)"/><text x="29.00" y="1054.50"></text></g><g><title>_construct_docstrings (scipy/stats/_distn_infrastructure.py:2849) (1 samples, 0.16%)</title><rect x="26" y="1060" width="2" height="15" fill="rgb(216,12,44)"/><text x="29.00" y="1070.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.16%)</title><rect x="26" y="1076" width="2" height="15" fill="rgb(227,90,8)"/><text x="29.00" y="1086.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:62) (1 samples, 0.16%)</title><rect x="26" y="1092" width="2" height="15" fill="rgb(230,35,29)"/><text x="29.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.16%)</title><rect x="28" y="628" width="2" height="15" fill="rgb(207,85,51)"/><text x="31.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="644" width="2" height="15" fill="rgb(246,167,36)"/><text x="31.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="660" width="2" height="15" fill="rgb(228,136,54)"/><text x="31.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="676" width="2" height="15" fill="rgb(228,116,39)"/><text x="31.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="28" y="692" width="2" height="15" fill="rgb(213,34,40)"/><text x="31.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="708" width="2" height="15" fill="rgb(209,204,54)"/><text x="31.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.16%)</title><rect x="28" y="724" width="2" height="15" fill="rgb(243,20,27)"/><text x="31.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="740" width="2" height="15" fill="rgb(213,221,35)"/><text x="31.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="756" width="2" height="15" fill="rgb(249,45,23)"/><text x="31.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="772" width="2" height="15" fill="rgb(212,62,17)"/><text x="31.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="28" y="788" width="2" height="15" fill="rgb(247,107,40)"/><text x="31.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="804" width="2" height="15" fill="rgb(241,50,17)"/><text x="31.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.16%)</title><rect x="28" y="820" width="2" height="15" fill="rgb(207,180,50)"/><text x="31.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="836" width="2" height="15" fill="rgb(240,140,15)"/><text x="31.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="852" width="2" height="15" fill="rgb(244,174,7)"/><text x="31.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="868" width="2" height="15" fill="rgb(225,155,6)"/><text x="31.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="28" y="884" width="2" height="15" fill="rgb(248,47,10)"/><text x="31.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="900" width="2" height="15" fill="rgb(242,98,19)"/><text x="31.00" y="910.50"></text></g><g><title>0x7fcbd268f40e (?) (1 samples, 0.16%)</title><rect x="28" y="916" width="2" height="15" fill="rgb(221,58,9)"/><text x="31.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="932" width="2" height="15" fill="rgb(229,37,52)"/><text x="31.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="948" width="2" height="15" fill="rgb(218,100,34)"/><text x="31.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="964" width="2" height="15" fill="rgb(244,129,33)"/><text x="31.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="28" y="980" width="2" height="15" fill="rgb(223,112,28)"/><text x="31.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="996" width="2" height="15" fill="rgb(239,24,22)"/><text x="31.00" y="1006.50"></text></g><g><title>0x7fcbd2448cd2 (?) (1 samples, 0.16%)</title><rect x="28" y="1012" width="2" height="15" fill="rgb(252,196,50)"/><text x="31.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="1028" width="2" height="15" fill="rgb(251,224,31)"/><text x="31.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="1044" width="2" height="15" fill="rgb(239,152,12)"/><text x="31.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="1060" width="2" height="15" fill="rgb(234,205,45)"/><text x="31.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="28" y="1076" width="2" height="15" fill="rgb(207,74,37)"/><text x="31.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="1092" width="2" height="15" fill="rgb(220,37,5)"/><text x="31.00" y="1102.50"></text></g><g><title>0x7fcbd1b3e0e5 (?) (1 samples, 0.16%)</title><rect x="28" y="1108" width="2" height="15" fill="rgb(244,136,42)"/><text x="31.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="1124" width="2" height="15" fill="rgb(219,163,17)"/><text x="31.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="1140" width="2" height="15" fill="rgb(235,52,7)"/><text x="31.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="1156" width="2" height="15" fill="rgb(242,70,7)"/><text x="31.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="28" y="1172" width="2" height="15" fill="rgb(219,147,27)"/><text x="31.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="1188" width="2" height="15" fill="rgb(212,177,33)"/><text x="31.00" y="1198.50"></text></g><g><title>0x7fcbd18c2e68 (?) (1 samples, 0.16%)</title><rect x="28" y="1204" width="2" height="15" fill="rgb(210,203,43)"/><text x="31.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="1220" width="2" height="15" fill="rgb(220,36,52)"/><text x="31.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="1236" width="2" height="15" fill="rgb(214,220,49)"/><text x="31.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="1252" width="2" height="15" fill="rgb(219,95,38)"/><text x="31.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="28" y="1268" width="2" height="15" fill="rgb(241,84,28)"/><text x="31.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="1284" width="2" height="15" fill="rgb(249,141,23)"/><text x="31.00" y="1294.50"></text></g><g><title>0x7fcbd16532fb (?) (1 samples, 0.16%)</title><rect x="28" y="1300" width="2" height="15" fill="rgb(245,14,50)"/><text x="31.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="1316" width="2" height="15" fill="rgb(228,219,4)"/><text x="31.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="1332" width="2" height="15" fill="rgb(242,121,36)"/><text x="31.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="1348" width="2" height="15" fill="rgb(223,134,16)"/><text x="31.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="28" y="1364" width="2" height="15" fill="rgb(242,127,38)"/><text x="31.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="1380" width="2" height="15" fill="rgb(233,91,28)"/><text x="31.00" y="1390.50"></text></g><g><title>0x7fcbd1437153 (?) (1 samples, 0.16%)</title><rect x="28" y="1396" width="2" height="15" fill="rgb(238,224,23)"/><text x="31.00" y="1406.50"></text></g><g><title>0x7fcbd1435c13 (?) (1 samples, 0.16%)</title><rect x="28" y="1412" width="2" height="15" fill="rgb(249,149,31)"/><text x="31.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="1428" width="2" height="15" fill="rgb(253,223,8)"/><text x="31.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="1444" width="2" height="15" fill="rgb(207,107,10)"/><text x="31.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="1460" width="2" height="15" fill="rgb(242,118,48)"/><text x="31.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="28" y="1476" width="2" height="15" fill="rgb(235,133,34)"/><text x="31.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="1492" width="2" height="15" fill="rgb(212,37,52)"/><text x="31.00" y="1502.50"></text></g><g><title>0x7fcbd11d2181 (?) (1 samples, 0.16%)</title><rect x="28" y="1508" width="2" height="15" fill="rgb(219,36,13)"/><text x="31.00" y="1518.50"></text></g><g><title>0x7fcbd11d51c9 (?) (1 samples, 0.16%)</title><rect x="28" y="1524" width="2" height="15" fill="rgb(234,118,25)"/><text x="31.00" y="1534.50"></text></g><g><title>0x7fcbd1201167 (?) (1 samples, 0.16%)</title><rect x="28" y="1540" width="2" height="15" fill="rgb(216,123,40)"/><text x="31.00" y="1550.50"></text></g><g><title>0x7fcbd11fd2fd (?) (1 samples, 0.16%)</title><rect x="28" y="1556" width="2" height="15" fill="rgb(232,23,46)"/><text x="31.00" y="1566.50"></text></g><g><title>0x7fcbd11e441b (?) (1 samples, 0.16%)</title><rect x="28" y="1572" width="2" height="15" fill="rgb(238,194,11)"/><text x="31.00" y="1582.50"></text></g><g><title>0x7fcbd11f83e8 (?) (1 samples, 0.16%)</title><rect x="28" y="1588" width="2" height="15" fill="rgb(205,201,34)"/><text x="31.00" y="1598.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.16%)</title><rect x="28" y="1604" width="2" height="15" fill="rgb(252,217,19)"/><text x="31.00" y="1614.50"></text></g><g><title>_subx (re.py:309) (1 samples, 0.16%)</title><rect x="28" y="1620" width="2" height="15" fill="rgb(208,117,12)"/><text x="31.00" y="1630.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.32%)</title><rect x="28" y="436" width="4" height="15" fill="rgb(213,35,18)"/><text x="31.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="28" y="452" width="4" height="15" fill="rgb(240,66,47)"/><text x="31.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="28" y="468" width="4" height="15" fill="rgb(206,17,31)"/><text x="31.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="28" y="484" width="4" height="15" fill="rgb(220,191,42)"/><text x="31.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="28" y="500" width="4" height="15" fill="rgb(240,229,46)"/><text x="31.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="28" y="516" width="4" height="15" fill="rgb(228,224,0)"/><text x="31.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.32%)</title><rect x="28" y="532" width="4" height="15" fill="rgb(241,106,13)"/><text x="31.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="28" y="548" width="4" height="15" fill="rgb(221,7,16)"/><text x="31.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="28" y="564" width="4" height="15" fill="rgb(250,101,42)"/><text x="31.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="28" y="580" width="4" height="15" fill="rgb(228,77,12)"/><text x="31.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="28" y="596" width="4" height="15" fill="rgb(213,206,14)"/><text x="31.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="28" y="612" width="4" height="15" fill="rgb(238,104,50)"/><text x="31.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.16%)</title><rect x="30" y="628" width="2" height="15" fill="rgb(242,158,32)"/><text x="33.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="30" y="644" width="2" height="15" fill="rgb(221,220,14)"/><text x="33.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="30" y="660" width="2" height="15" fill="rgb(251,136,41)"/><text x="33.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="30" y="676" width="2" height="15" fill="rgb(222,184,13)"/><text x="33.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="30" y="692" width="2" height="15" fill="rgb(208,226,22)"/><text x="33.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="30" y="708" width="2" height="15" fill="rgb(221,38,21)"/><text x="33.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.16%)</title><rect x="30" y="724" width="2" height="15" fill="rgb(217,181,5)"/><text x="33.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="30" y="740" width="2" height="15" fill="rgb(245,137,17)"/><text x="33.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="30" y="756" width="2" height="15" fill="rgb(252,206,41)"/><text x="33.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="30" y="772" width="2" height="15" fill="rgb(249,89,37)"/><text x="33.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="30" y="788" width="2" height="15" fill="rgb(206,33,9)"/><text x="33.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="30" y="804" width="2" height="15" fill="rgb(213,137,21)"/><text x="33.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="30" y="820" width="2" height="15" fill="rgb(209,35,31)"/><text x="33.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="30" y="836" width="2" height="15" fill="rgb(220,226,32)"/><text x="33.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="30" y="852" width="2" height="15" fill="rgb(240,184,7)"/><text x="33.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:13) (1 samples, 0.16%)</title><rect x="30" y="868" width="2" height="15" fill="rgb(219,50,23)"/><text x="33.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="30" y="884" width="2" height="15" fill="rgb(245,61,1)"/><text x="33.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="30" y="900" width="2" height="15" fill="rgb(222,171,1)"/><text x="33.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="30" y="916" width="2" height="15" fill="rgb(232,122,48)"/><text x="33.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="30" y="932" width="2" height="15" fill="rgb(219,24,23)"/><text x="33.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="30" y="948" width="2" height="15" fill="rgb(241,187,48)"/><text x="33.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/sparse.py:15) (1 samples, 0.16%)</title><rect x="30" y="964" width="2" height="15" fill="rgb(215,67,1)"/><text x="33.00" y="974.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.16%)</title><rect x="32" y="1108" width="2" height="15" fill="rgb(213,189,45)"/><text x="35.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="32" y="1124" width="2" height="15" fill="rgb(250,150,25)"/><text x="35.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="32" y="1140" width="2" height="15" fill="rgb(218,219,46)"/><text x="35.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="32" y="1156" width="2" height="15" fill="rgb(254,116,15)"/><text x="35.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="32" y="1172" width="2" height="15" fill="rgb(251,157,42)"/><text x="35.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="32" y="1188" width="2" height="15" fill="rgb(222,82,33)"/><text x="35.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:33) (1 samples, 0.16%)</title><rect x="32" y="1204" width="2" height="15" fill="rgb(210,193,11)"/><text x="35.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="32" y="1220" width="2" height="15" fill="rgb(218,38,11)"/><text x="35.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="32" y="1236" width="2" height="15" fill="rgb(206,214,52)"/><text x="35.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="32" y="1252" width="2" height="15" fill="rgb(207,84,1)"/><text x="35.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="32" y="1268" width="2" height="15" fill="rgb(249,33,0)"/><text x="35.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="32" y="1284" width="2" height="15" fill="rgb(239,150,49)"/><text x="35.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py:104) (1 samples, 0.16%)</title><rect x="32" y="1300" width="2" height="15" fill="rgb(216,193,10)"/><text x="35.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="32" y="1316" width="2" height="15" fill="rgb(243,191,47)"/><text x="35.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="32" y="1332" width="2" height="15" fill="rgb(230,59,34)"/><text x="35.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="32" y="1348" width="2" height="15" fill="rgb(235,209,29)"/><text x="35.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="32" y="1364" width="2" height="15" fill="rgb(225,208,47)"/><text x="35.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="32" y="1380" width="2" height="15" fill="rgb(206,21,21)"/><text x="35.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/cross_decomposition/__init__.py:1) (1 samples, 0.16%)</title><rect x="32" y="1396" width="2" height="15" fill="rgb(240,186,0)"/><text x="35.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="32" y="1412" width="2" height="15" fill="rgb(217,31,20)"/><text x="35.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="32" y="1428" width="2" height="15" fill="rgb(243,87,41)"/><text x="35.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.16%)</title><rect x="32" y="1444" width="2" height="15" fill="rgb(254,93,17)"/><text x="35.00" y="1454.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.16%)</title><rect x="32" y="1460" width="2" height="15" fill="rgb(229,105,39)"/><text x="35.00" y="1470.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.16%)</title><rect x="32" y="1476" width="2" height="15" fill="rgb(230,159,41)"/><text x="35.00" y="1486.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:409) (1 samples, 0.16%)</title><rect x="32" y="1492" width="2" height="15" fill="rgb(238,88,2)"/><text x="35.00" y="1502.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:372) (1 samples, 0.16%)</title><rect x="32" y="1508" width="2" height="15" fill="rgb(228,123,39)"/><text x="35.00" y="1518.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:313) (1 samples, 0.16%)</title><rect x="32" y="1524" width="2" height="15" fill="rgb(217,180,20)"/><text x="35.00" y="1534.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.16%)</title><rect x="32" y="1540" width="2" height="15" fill="rgb(246,229,19)"/><text x="35.00" y="1550.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:4) (14 samples, 2.24%)</title><rect x="10" y="52" width="26" height="15" fill="rgb(219,47,42)"/><text x="13.00" y="62.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 2.24%)</title><rect x="10" y="68" width="26" height="15" fill="rgb(226,167,8)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 2.24%)</title><rect x="10" y="84" width="26" height="15" fill="rgb(220,197,51)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 2.24%)</title><rect x="10" y="100" width="26" height="15" fill="rgb(222,59,54)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 2.24%)</title><rect x="10" y="116" width="26" height="15" fill="rgb(216,213,29)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 2.24%)</title><rect x="10" y="132" width="26" height="15" fill="rgb(243,170,44)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:7) (4 samples, 0.64%)</title><rect x="28" y="148" width="8" height="15" fill="rgb(205,95,38)"/><text x="31.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.64%)</title><rect x="28" y="164" width="8" height="15" fill="rgb(209,98,45)"/><text x="31.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.64%)</title><rect x="28" y="180" width="8" height="15" fill="rgb(231,185,18)"/><text x="31.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.64%)</title><rect x="28" y="196" width="8" height="15" fill="rgb(252,134,18)"/><text x="31.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.64%)</title><rect x="28" y="212" width="8" height="15" fill="rgb(234,30,39)"/><text x="31.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.64%)</title><rect x="28" y="228" width="8" height="15" fill="rgb(246,223,23)"/><text x="31.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 0.64%)</title><rect x="28" y="244" width="8" height="15" fill="rgb(249,226,39)"/><text x="31.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.64%)</title><rect x="28" y="260" width="8" height="15" fill="rgb(220,21,20)"/><text x="31.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.64%)</title><rect x="28" y="276" width="8" height="15" fill="rgb(241,100,50)"/><text x="31.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.64%)</title><rect x="28" y="292" width="8" height="15" fill="rgb(248,177,36)"/><text x="31.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.64%)</title><rect x="28" y="308" width="8" height="15" fill="rgb(229,204,35)"/><text x="31.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.64%)</title><rect x="28" y="324" width="8" height="15" fill="rgb(210,37,52)"/><text x="31.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 0.64%)</title><rect x="28" y="340" width="8" height="15" fill="rgb(208,221,25)"/><text x="31.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.64%)</title><rect x="28" y="356" width="8" height="15" fill="rgb(229,58,18)"/><text x="31.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.64%)</title><rect x="28" y="372" width="8" height="15" fill="rgb(235,86,3)"/><text x="31.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.64%)</title><rect x="28" y="388" width="8" height="15" fill="rgb(214,20,50)"/><text x="31.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.64%)</title><rect x="28" y="404" width="8" height="15" fill="rgb(213,121,12)"/><text x="31.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.64%)</title><rect x="28" y="420" width="8" height="15" fill="rgb(205,155,44)"/><text x="31.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.32%)</title><rect x="32" y="436" width="4" height="15" fill="rgb(249,215,23)"/><text x="35.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="32" y="452" width="4" height="15" fill="rgb(233,63,52)"/><text x="35.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.32%)</title><rect x="32" y="468" width="4" height="15" fill="rgb(215,18,10)"/><text x="35.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="32" y="484" width="4" height="15" fill="rgb(250,79,6)"/><text x="35.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="32" y="500" width="4" height="15" fill="rgb(250,226,34)"/><text x="35.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="32" y="516" width="4" height="15" fill="rgb(241,116,35)"/><text x="35.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="32" y="532" width="4" height="15" fill="rgb(243,80,6)"/><text x="35.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="32" y="548" width="4" height="15" fill="rgb(237,24,4)"/><text x="35.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="32" y="564" width="4" height="15" fill="rgb(231,139,8)"/><text x="35.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.32%)</title><rect x="32" y="580" width="4" height="15" fill="rgb(217,34,52)"/><text x="35.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="32" y="596" width="4" height="15" fill="rgb(246,198,26)"/><text x="35.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="32" y="612" width="4" height="15" fill="rgb(246,115,26)"/><text x="35.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="32" y="628" width="4" height="15" fill="rgb(245,176,14)"/><text x="35.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="32" y="644" width="4" height="15" fill="rgb(238,86,5)"/><text x="35.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="32" y="660" width="4" height="15" fill="rgb(205,33,1)"/><text x="35.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.32%)</title><rect x="32" y="676" width="4" height="15" fill="rgb(219,228,15)"/><text x="35.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="32" y="692" width="4" height="15" fill="rgb(215,199,2)"/><text x="35.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="32" y="708" width="4" height="15" fill="rgb(214,121,14)"/><text x="35.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="32" y="724" width="4" height="15" fill="rgb(226,33,45)"/><text x="35.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="32" y="740" width="4" height="15" fill="rgb(218,166,39)"/><text x="35.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="32" y="756" width="4" height="15" fill="rgb(252,214,9)"/><text x="35.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.32%)</title><rect x="32" y="772" width="4" height="15" fill="rgb(251,159,47)"/><text x="35.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="32" y="788" width="4" height="15" fill="rgb(211,68,48)"/><text x="35.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="32" y="804" width="4" height="15" fill="rgb(236,181,44)"/><text x="35.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="32" y="820" width="4" height="15" fill="rgb(228,71,38)"/><text x="35.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="32" y="836" width="4" height="15" fill="rgb(241,57,35)"/><text x="35.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="32" y="852" width="4" height="15" fill="rgb(226,116,1)"/><text x="35.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.32%)</title><rect x="32" y="868" width="4" height="15" fill="rgb(229,169,39)"/><text x="35.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="32" y="884" width="4" height="15" fill="rgb(247,193,48)"/><text x="35.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.32%)</title><rect x="32" y="900" width="4" height="15" fill="rgb(210,219,1)"/><text x="35.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="32" y="916" width="4" height="15" fill="rgb(218,52,3)"/><text x="35.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="32" y="932" width="4" height="15" fill="rgb(230,61,54)"/><text x="35.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="32" y="948" width="4" height="15" fill="rgb(253,207,10)"/><text x="35.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="32" y="964" width="4" height="15" fill="rgb(249,86,41)"/><text x="35.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="32" y="980" width="4" height="15" fill="rgb(225,188,33)"/><text x="35.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="32" y="996" width="4" height="15" fill="rgb(250,133,16)"/><text x="35.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.32%)</title><rect x="32" y="1012" width="4" height="15" fill="rgb(248,36,10)"/><text x="35.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="32" y="1028" width="4" height="15" fill="rgb(232,13,27)"/><text x="35.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="32" y="1044" width="4" height="15" fill="rgb(220,122,33)"/><text x="35.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="32" y="1060" width="4" height="15" fill="rgb(224,58,6)"/><text x="35.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="32" y="1076" width="4" height="15" fill="rgb(246,23,25)"/><text x="35.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="32" y="1092" width="4" height="15" fill="rgb(235,228,32)"/><text x="35.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.16%)</title><rect x="34" y="1108" width="2" height="15" fill="rgb(206,141,43)"/><text x="37.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="34" y="1124" width="2" height="15" fill="rgb(216,156,24)"/><text x="37.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="34" y="1140" width="2" height="15" fill="rgb(230,188,48)"/><text x="37.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="34" y="1156" width="2" height="15" fill="rgb(217,80,9)"/><text x="37.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="34" y="1172" width="2" height="15" fill="rgb(213,198,12)"/><text x="37.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="34" y="1188" width="2" height="15" fill="rgb(242,76,26)"/><text x="37.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="34" y="1204" width="2" height="15" fill="rgb(213,164,54)"/><text x="37.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="34" y="1220" width="2" height="15" fill="rgb(247,116,11)"/><text x="37.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.16%)</title><rect x="34" y="1236" width="2" height="15" fill="rgb(209,6,42)"/><text x="37.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="34" y="1252" width="2" height="15" fill="rgb(244,28,23)"/><text x="37.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="34" y="1268" width="2" height="15" fill="rgb(223,208,26)"/><text x="37.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="34" y="1284" width="2" height="15" fill="rgb(246,73,36)"/><text x="37.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="34" y="1300" width="2" height="15" fill="rgb(218,218,14)"/><text x="37.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="34" y="1316" width="2" height="15" fill="rgb(225,21,28)"/><text x="37.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="34" y="1332" width="2" height="15" fill="rgb(245,41,37)"/><text x="37.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="34" y="1348" width="2" height="15" fill="rgb(220,179,26)"/><text x="37.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.16%)</title><rect x="34" y="1364" width="2" height="15" fill="rgb(248,145,27)"/><text x="37.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="34" y="1380" width="2" height="15" fill="rgb(214,191,12)"/><text x="37.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="34" y="1396" width="2" height="15" fill="rgb(251,53,14)"/><text x="37.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="34" y="1412" width="2" height="15" fill="rgb(229,187,2)"/><text x="37.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="34" y="1428" width="2" height="15" fill="rgb(206,98,5)"/><text x="37.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="34" y="1444" width="2" height="15" fill="rgb(246,207,47)"/><text x="37.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.16%)</title><rect x="34" y="1460" width="2" height="15" fill="rgb(220,141,34)"/><text x="37.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="34" y="1476" width="2" height="15" fill="rgb(251,40,39)"/><text x="37.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="34" y="1492" width="2" height="15" fill="rgb(208,200,26)"/><text x="37.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="34" y="1508" width="2" height="15" fill="rgb(214,158,23)"/><text x="37.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="34" y="1524" width="2" height="15" fill="rgb(216,193,12)"/><text x="37.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="34" y="1540" width="2" height="15" fill="rgb(218,78,48)"/><text x="37.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.16%)</title><rect x="34" y="1556" width="2" height="15" fill="rgb(246,217,17)"/><text x="37.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.16%)</title><rect x="34" y="1572" width="2" height="15" fill="rgb(207,169,2)"/><text x="37.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="34" y="1588" width="2" height="15" fill="rgb(211,189,7)"/><text x="37.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="34" y="1604" width="2" height="15" fill="rgb(225,183,23)"/><text x="37.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="34" y="1620" width="2" height="15" fill="rgb(241,69,5)"/><text x="37.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="34" y="1636" width="2" height="15" fill="rgb(210,77,37)"/><text x="37.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="34" y="1652" width="2" height="15" fill="rgb(212,122,37)"/><text x="37.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.16%)</title><rect x="34" y="1668" width="2" height="15" fill="rgb(241,10,48)"/><text x="37.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="34" y="1684" width="2" height="15" fill="rgb(233,206,8)"/><text x="37.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="34" y="1700" width="2" height="15" fill="rgb(245,116,44)"/><text x="37.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="34" y="1716" width="2" height="15" fill="rgb(232,168,17)"/><text x="37.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="34" y="1732" width="2" height="15" fill="rgb(221,218,27)"/><text x="37.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="34" y="1748" width="2" height="15" fill="rgb(210,13,18)"/><text x="37.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:15) (1 samples, 0.16%)</title><rect x="34" y="1764" width="2" height="15" fill="rgb(242,55,10)"/><text x="37.00" y="1774.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="34" y="1780" width="2" height="15" fill="rgb(207,13,40)"/><text x="37.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="34" y="1796" width="2" height="15" fill="rgb(212,94,6)"/><text x="37.00" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="34" y="1812" width="2" height="15" fill="rgb(245,69,27)"/><text x="37.00" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="34" y="1828" width="2" height="15" fill="rgb(227,45,6)"/><text x="37.00" y="1838.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="34" y="1844" width="2" height="15" fill="rgb(249,48,32)"/><text x="37.00" y="1854.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="34" y="1860" width="2" height="15" fill="rgb(243,137,22)"/><text x="37.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="34" y="1876" width="2" height="15" fill="rgb(234,27,23)"/><text x="37.00" y="1886.50"></text></g><g><title>&lt;module&gt; (jinja2/nodes.py:19) (1 samples, 0.16%)</title><rect x="34" y="1892" width="2" height="15" fill="rgb(208,229,50)"/><text x="37.00" y="1902.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="34" y="1908" width="2" height="15" fill="rgb(216,43,2)"/><text x="37.00" y="1918.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="34" y="1924" width="2" height="15" fill="rgb(211,150,28)"/><text x="37.00" y="1934.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="34" y="1940" width="2" height="15" fill="rgb(219,140,36)"/><text x="37.00" y="1950.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="34" y="1956" width="2" height="15" fill="rgb(230,142,31)"/><text x="37.00" y="1966.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="34" y="1972" width="2" height="15" fill="rgb(223,213,17)"/><text x="37.00" y="1982.50"></text></g><g><title>&lt;module&gt; (jinja2/utils.py:642) (1 samples, 0.16%)</title><rect x="34" y="1988" width="2" height="15" fill="rgb(215,212,51)"/><text x="37.00" y="1998.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="34" y="2004" width="2" height="15" fill="rgb(243,180,28)"/><text x="37.00" y="2014.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="34" y="2020" width="2" height="15" fill="rgb(208,108,7)"/><text x="37.00" y="2030.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="34" y="2036" width="2" height="15" fill="rgb(239,62,13)"/><text x="37.00" y="2046.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="34" y="2052" width="2" height="15" fill="rgb(233,192,40)"/><text x="37.00" y="2062.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="34" y="2068" width="2" height="15" fill="rgb(206,119,51)"/><text x="37.00" y="2078.50"></text></g><g><title>&lt;module&gt; (markupsafe/__init__.py:321) (1 samples, 0.16%)</title><rect x="34" y="2084" width="2" height="15" fill="rgb(212,47,28)"/><text x="37.00" y="2094.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="34" y="2100" width="2" height="15" fill="rgb(249,11,14)"/><text x="37.00" y="2110.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.16%)</title><rect x="34" y="2116" width="2" height="15" fill="rgb(226,52,3)"/><text x="37.00" y="2126.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.16%)</title><rect x="34" y="2132" width="2" height="15" fill="rgb(242,163,38)"/><text x="37.00" y="2142.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.16%)</title><rect x="34" y="2148" width="2" height="15" fill="rgb(221,91,45)"/><text x="37.00" y="2158.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.16%)</title><rect x="34" y="2164" width="2" height="15" fill="rgb(227,72,0)"/><text x="37.00" y="2174.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1396) (1 samples, 0.16%)</title><rect x="34" y="2180" width="2" height="15" fill="rgb(214,60,18)"/><text x="37.00" y="2190.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1354) (1 samples, 0.16%)</title><rect x="34" y="2196" width="2" height="15" fill="rgb(208,35,43)"/><text x="37.00" y="2206.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;:606) (1 samples, 0.16%)</title><rect x="34" y="2212" width="2" height="15" fill="rgb(243,183,45)"/><text x="37.00" y="2222.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap&gt;:375) (1 samples, 0.16%)</title><rect x="34" y="2228" width="2" height="15" fill="rgb(205,58,0)"/><text x="37.00" y="2238.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.16%)</title><rect x="36" y="100" width="2" height="15" fill="rgb(225,175,4)"/><text x="39.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:83) (1 samples, 0.16%)</title><rect x="36" y="116" width="2" height="15" fill="rgb(214,171,7)"/><text x="39.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py:383) (1 samples, 0.16%)</title><rect x="36" y="132" width="2" height="15" fill="rgb(252,219,42)"/><text x="39.00" y="142.50"></text></g><g><title>dirname (posixpath.py:158) (1 samples, 0.16%)</title><rect x="36" y="148" width="2" height="15" fill="rgb(225,55,18)"/><text x="39.00" y="158.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.16%)</title><rect x="36" y="164" width="2" height="15" fill="rgb(212,82,21)"/><text x="39.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:40) (2 samples, 0.32%)</title><rect x="36" y="52" width="4" height="15" fill="rgb(205,194,35)"/><text x="39.00" y="62.50"></text></g><g><title>start (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:11) (2 samples, 0.32%)</title><rect x="36" y="68" width="4" height="15" fill="rgb(242,192,43)"/><text x="39.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:39) (2 samples, 0.32%)</title><rect x="36" y="84" width="4" height="15" fill="rgb(241,122,0)"/><text x="39.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:156) (1 samples, 0.16%)</title><rect x="38" y="100" width="2" height="15" fill="rgb(225,186,23)"/><text x="41.00" y="110.50"></text></g><g><title>exists (genericpath.py:22) (1 samples, 0.16%)</title><rect x="38" y="116" width="2" height="15" fill="rgb(247,116,6)"/><text x="41.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.16%)</title><rect x="40" y="116" width="2" height="15" fill="rgb(222,189,43)"/><text x="43.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.16%)</title><rect x="40" y="132" width="2" height="15" fill="rgb(210,189,20)"/><text x="43.00" y="142.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.16%)</title><rect x="40" y="148" width="2" height="15" fill="rgb(224,75,41)"/><text x="43.00" y="158.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.16%)</title><rect x="40" y="164" width="2" height="15" fill="rgb(249,138,25)"/><text x="43.00" y="174.50"></text></g><g><title>PyDataMem_FREE (alloc.c:273) (1 samples, 0.16%)</title><rect x="40" y="180" width="2" height="15" fill="rgb(223,120,19)"/><text x="43.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.16%)</title><rect x="47" y="164" width="2" height="15" fill="rgb(237,70,1)"/><text x="50.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.16%)</title><rect x="49" y="164" width="2" height="15" fill="rgb(213,192,23)"/><text x="52.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.16%)</title><rect x="55" y="180" width="2" height="15" fill="rgb(232,143,36)"/><text x="58.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 0.64%)</title><rect x="64" y="196" width="8" height="15" fill="rgb(253,151,25)"/><text x="67.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (9 samples, 1.44%)</title><rect x="57" y="180" width="17" height="15" fill="rgb(207,98,34)"/><text x="60.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.16%)</title><rect x="72" y="196" width="2" height="15" fill="rgb(225,191,19)"/><text x="75.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (16 samples, 2.56%)</title><rect x="47" y="148" width="30" height="15" fill="rgb(227,20,27)"/><text x="50.00" y="158.50">pr..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (14 samples, 2.24%)</title><rect x="51" y="164" width="26" height="15" fill="rgb(238,28,35)"/><text x="54.00" y="174.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.32%)</title><rect x="74" y="180" width="3" height="15" fill="rgb(237,109,33)"/><text x="77.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.16%)</title><rect x="76" y="196" width="1" height="15" fill="rgb(246,34,35)"/><text x="79.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.16%)</title><rect x="81" y="180" width="2" height="15" fill="rgb(217,73,22)"/><text x="84.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.16%)</title><rect x="81" y="196" width="2" height="15" fill="rgb(236,149,24)"/><text x="84.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 0.32%)</title><rect x="89" y="196" width="4" height="15" fill="rgb(239,125,24)"/><text x="92.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.16%)</title><rect x="93" y="196" width="1" height="15" fill="rgb(239,210,40)"/><text x="96.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.16%)</title><rect x="94" y="196" width="2" height="15" fill="rgb(235,160,33)"/><text x="97.00" y="206.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.16%)</title><rect x="96" y="196" width="2" height="15" fill="rgb(235,129,6)"/><text x="99.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (9 samples, 1.44%)</title><rect x="83" y="180" width="17" height="15" fill="rgb(240,222,21)"/><text x="86.00" y="190.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.16%)</title><rect x="98" y="196" width="2" height="15" fill="rgb(245,3,39)"/><text x="101.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (5 samples, 0.80%)</title><rect x="100" y="212" width="10" height="15" fill="rgb(242,0,16)"/><text x="103.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.16%)</title><rect x="110" y="212" width="1" height="15" fill="rgb(243,86,39)"/><text x="113.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (7 samples, 1.12%)</title><rect x="100" y="180" width="13" height="15" fill="rgb(226,166,7)"/><text x="103.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (7 samples, 1.12%)</title><rect x="100" y="196" width="13" height="15" fill="rgb(233,115,50)"/><text x="103.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.16%)</title><rect x="111" y="212" width="2" height="15" fill="rgb(227,6,36)"/><text x="114.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (2 samples, 0.32%)</title><rect x="113" y="180" width="4" height="15" fill="rgb(207,115,5)"/><text x="116.00" y="190.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1586) (1 samples, 0.16%)</title><rect x="119" y="212" width="2" height="15" fill="rgb(251,194,34)"/><text x="122.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1610) (1 samples, 0.16%)</title><rect x="121" y="212" width="2" height="15" fill="rgb(209,151,15)"/><text x="124.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (4 samples, 0.64%)</title><rect x="117" y="180" width="8" height="15" fill="rgb(230,173,9)"/><text x="120.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (4 samples, 0.64%)</title><rect x="117" y="196" width="8" height="15" fill="rgb(216,29,18)"/><text x="120.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.16%)</title><rect x="123" y="212" width="2" height="15" fill="rgb(232,77,2)"/><text x="126.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.16%)</title><rect x="125" y="180" width="2" height="15" fill="rgb(221,120,39)"/><text x="128.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (2 samples, 0.32%)</title><rect x="128" y="196" width="4" height="15" fill="rgb(219,18,27)"/><text x="131.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (5 samples, 0.80%)</title><rect x="127" y="180" width="9" height="15" fill="rgb(217,26,25)"/><text x="130.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (2 samples, 0.32%)</title><rect x="132" y="196" width="4" height="15" fill="rgb(226,131,18)"/><text x="135.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.32%)</title><rect x="142" y="196" width="3" height="15" fill="rgb(242,160,49)"/><text x="145.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (8 samples, 1.28%)</title><rect x="136" y="180" width="15" height="15" fill="rgb(205,170,13)"/><text x="139.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (3 samples, 0.48%)</title><rect x="145" y="196" width="6" height="15" fill="rgb(248,217,41)"/><text x="148.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.16%)</title><rect x="149" y="212" width="2" height="15" fill="rgb(250,167,13)"/><text x="152.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.16%)</title><rect x="151" y="180" width="2" height="15" fill="rgb(214,123,21)"/><text x="154.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (6 samples, 0.96%)</title><rect x="153" y="196" width="11" height="15" fill="rgb(233,24,45)"/><text x="156.00" y="206.50"></text></g><g><title>0x7fcbfcebde50 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="162" y="212" width="2" height="15" fill="rgb(233,84,18)"/><text x="165.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.16%)</title><rect x="164" y="196" width="2" height="15" fill="rgb(213,22,39)"/><text x="167.00" y="206.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (51 samples, 8.16%)</title><rect x="77" y="164" width="97" height="15" fill="rgb(241,86,8)"/><text x="80.00" y="174.50">_validate_X..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (11 samples, 1.76%)</title><rect x="153" y="180" width="21" height="15" fill="rgb(229,104,48)"/><text x="156.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 0.64%)</title><rect x="166" y="196" width="8" height="15" fill="rgb(252,73,5)"/><text x="169.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.32%)</title><rect x="170" y="212" width="4" height="15" fill="rgb(249,192,28)"/><text x="173.00" y="222.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:381) (1 samples, 0.16%)</title><rect x="174" y="164" width="2" height="15" fill="rgb(215,106,51)"/><text x="177.00" y="174.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.16%)</title><rect x="174" y="180" width="2" height="15" fill="rgb(216,168,25)"/><text x="177.00" y="190.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (53 samples, 8.48%)</title><rect x="77" y="148" width="101" height="15" fill="rgb(244,50,40)"/><text x="80.00" y="158.50">predict (skl..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (1 samples, 0.16%)</title><rect x="176" y="164" width="2" height="15" fill="rgb(234,156,16)"/><text x="179.00" y="174.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.16%)</title><rect x="176" y="180" width="2" height="15" fill="rgb(249,226,7)"/><text x="179.00" y="190.50"></text></g><g><title>0x7fcbd7521225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="178" y="212" width="1" height="15" fill="rgb(223,172,34)"/><text x="181.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.16%)</title><rect x="178" y="228" width="1" height="15" fill="rgb(207,46,50)"/><text x="181.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1399) (1 samples, 0.16%)</title><rect x="178" y="244" width="1" height="15" fill="rgb(221,131,4)"/><text x="181.00" y="254.50"></text></g><g><title>0x7fcbfc0ca0a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="178" y="260" width="1" height="15" fill="rgb(224,229,6)"/><text x="181.00" y="270.50"></text></g><g><title>0x7fcbd74fb0e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="179" y="260" width="2" height="15" fill="rgb(221,95,26)"/><text x="182.00" y="270.50"></text></g><g><title>0x7fcbd74fb10c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="181" y="260" width="2" height="15" fill="rgb(212,89,17)"/><text x="184.00" y="270.50"></text></g><g><title>0x7fcbd75212df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.48%)</title><rect x="179" y="212" width="6" height="15" fill="rgb(233,92,43)"/><text x="182.00" y="222.50"></text></g><g><title>0x7fcbd7505d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.48%)</title><rect x="179" y="228" width="6" height="15" fill="rgb(226,23,12)"/><text x="182.00" y="238.50"></text></g><g><title>0x7fcbd7505666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.48%)</title><rect x="179" y="244" width="6" height="15" fill="rgb(214,211,21)"/><text x="182.00" y="254.50"></text></g><g><title>0x7fcbd74fb2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="183" y="260" width="2" height="15" fill="rgb(213,78,31)"/><text x="186.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.16%)</title><rect x="183" y="276" width="2" height="15" fill="rgb(213,97,15)"/><text x="186.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.16%)</title><rect x="183" y="292" width="2" height="15" fill="rgb(232,66,32)"/><text x="186.00" y="302.50"></text></g><g><title>_buffer_info_cmp (buffer.c:610) (1 samples, 0.16%)</title><rect x="183" y="308" width="2" height="15" fill="rgb(241,221,25)"/><text x="186.00" y="318.50"></text></g><g><title>0x7fcbd75212fb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="185" y="212" width="2" height="15" fill="rgb(210,172,21)"/><text x="188.00" y="222.50"></text></g><g><title>0x7fcbd75214a4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="187" y="212" width="2" height="15" fill="rgb(231,217,30)"/><text x="190.00" y="222.50"></text></g><g><title>0x7fcbfcec8120 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="187" y="228" width="2" height="15" fill="rgb(206,10,33)"/><text x="190.00" y="238.50"></text></g><g><title>0x7fcbd752154f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="189" y="212" width="2" height="15" fill="rgb(223,39,54)"/><text x="192.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.16%)</title><rect x="191" y="228" width="2" height="15" fill="rgb(239,145,24)"/><text x="194.00" y="238.50"></text></g><g><title>0x7fcbfcebd730 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="191" y="244" width="2" height="15" fill="rgb(222,4,25)"/><text x="194.00" y="254.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="193" y="324" width="2" height="15" fill="rgb(240,204,25)"/><text x="196.00" y="334.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:252) (2 samples, 0.32%)</title><rect x="193" y="308" width="3" height="15" fill="rgb(215,50,31)"/><text x="196.00" y="318.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="195" y="324" width="1" height="15" fill="rgb(217,33,23)"/><text x="198.00" y="334.50"></text></g><g><title>0x7fcbd7521592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.64%)</title><rect x="191" y="212" width="7" height="15" fill="rgb(233,167,28)"/><text x="194.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (3 samples, 0.48%)</title><rect x="193" y="228" width="5" height="15" fill="rgb(254,97,52)"/><text x="196.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (3 samples, 0.48%)</title><rect x="193" y="244" width="5" height="15" fill="rgb(232,197,41)"/><text x="196.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (3 samples, 0.48%)</title><rect x="193" y="260" width="5" height="15" fill="rgb(212,222,45)"/><text x="196.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (3 samples, 0.48%)</title><rect x="193" y="276" width="5" height="15" fill="rgb(220,189,48)"/><text x="196.00" y="286.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (3 samples, 0.48%)</title><rect x="193" y="292" width="5" height="15" fill="rgb(215,127,13)"/><text x="196.00" y="302.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (1 samples, 0.16%)</title><rect x="196" y="308" width="2" height="15" fill="rgb(237,120,35)"/><text x="199.00" y="318.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="196" y="324" width="2" height="15" fill="rgb(245,200,32)"/><text x="199.00" y="334.50"></text></g><g><title>0x7fcbd7521644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="198" y="212" width="2" height="15" fill="rgb(222,115,18)"/><text x="201.00" y="222.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="198" y="228" width="2" height="15" fill="rgb(242,155,51)"/><text x="201.00" y="238.50"></text></g><g><title>0x7fcbd752169b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="200" y="212" width="4" height="15" fill="rgb(208,28,35)"/><text x="203.00" y="222.50"></text></g><g><title>0x7fcbd75216aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.80%)</title><rect x="204" y="212" width="9" height="15" fill="rgb(241,219,48)"/><text x="207.00" y="222.50"></text></g><g><title>0x7fcbd75216ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.64%)</title><rect x="213" y="212" width="8" height="15" fill="rgb(229,6,41)"/><text x="216.00" y="222.50"></text></g><g><title>0x7fcbd75216b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="221" y="212" width="2" height="15" fill="rgb(210,217,6)"/><text x="224.00" y="222.50"></text></g><g><title>0x7fcbd75216b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="223" y="212" width="4" height="15" fill="rgb(207,132,9)"/><text x="226.00" y="222.50"></text></g><g><title>0x7fcbd75216c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="227" y="212" width="2" height="15" fill="rgb(254,99,8)"/><text x="230.00" y="222.50"></text></g><g><title>0x7fcbd75216fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="229" y="212" width="1" height="15" fill="rgb(232,81,37)"/><text x="232.00" y="222.50"></text></g><g><title>0x7fcbd7522405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (29 samples, 4.64%)</title><rect x="178" y="196" width="54" height="15" fill="rgb(222,45,35)"/><text x="181.00" y="206.50">0x7fc..</text></g><g><title>0x7fcbd7521c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="230" y="212" width="2" height="15" fill="rgb(211,124,30)"/><text x="233.00" y="222.50"></text></g><g><title>0x7fcbd74f9529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="230" y="228" width="2" height="15" fill="rgb(227,119,51)"/><text x="233.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.16%)</title><rect x="230" y="244" width="2" height="15" fill="rgb(245,101,19)"/><text x="233.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.16%)</title><rect x="230" y="260" width="2" height="15" fill="rgb(249,63,42)"/><text x="233.00" y="270.50"></text></g><g><title>0x7fcbd7512fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (30 samples, 4.80%)</title><rect x="178" y="180" width="56" height="15" fill="rgb(212,222,17)"/><text x="181.00" y="190.50">0x7fc..</text></g><g><title>0x7fcbd7522540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="232" y="196" width="2" height="15" fill="rgb(249,93,36)"/><text x="235.00" y="206.50"></text></g><g><title>0x7fcbd74f72f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="232" y="212" width="2" height="15" fill="rgb(251,177,4)"/><text x="235.00" y="222.50"></text></g><g><title>0x7fcbd74f6530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="232" y="228" width="2" height="15" fill="rgb(250,6,36)"/><text x="235.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.16%)</title><rect x="232" y="244" width="2" height="15" fill="rgb(240,138,27)"/><text x="235.00" y="254.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:225) (1 samples, 0.16%)</title><rect x="236" y="212" width="2" height="15" fill="rgb(227,166,14)"/><text x="239.00" y="222.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:229) (1 samples, 0.16%)</title><rect x="238" y="212" width="2" height="15" fill="rgb(214,72,21)"/><text x="241.00" y="222.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.16%)</title><rect x="238" y="228" width="2" height="15" fill="rgb(239,28,48)"/><text x="241.00" y="238.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.16%)</title><rect x="238" y="244" width="2" height="15" fill="rgb(219,99,49)"/><text x="241.00" y="254.50"></text></g><g><title>array_take (methods.c:138) (4 samples, 0.64%)</title><rect x="234" y="196" width="8" height="15" fill="rgb(211,122,47)"/><text x="237.00" y="206.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.16%)</title><rect x="240" y="212" width="2" height="15" fill="rgb(232,33,41)"/><text x="243.00" y="222.50"></text></g><g><title>0x7fcbfcf85d21 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="240" y="228" width="2" height="15" fill="rgb(224,10,24)"/><text x="243.00" y="238.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3949) (2 samples, 0.32%)</title><rect x="242" y="228" width="4" height="15" fill="rgb(244,46,16)"/><text x="245.00" y="238.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (3 samples, 0.48%)</title><rect x="242" y="212" width="5" height="15" fill="rgb(234,73,22)"/><text x="245.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3956) (1 samples, 0.16%)</title><rect x="246" y="228" width="1" height="15" fill="rgb(231,51,0)"/><text x="249.00" y="238.50"></text></g><g><title>0x7fcbd751305a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.28%)</title><rect x="234" y="180" width="15" height="15" fill="rgb(243,15,0)"/><text x="237.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (4 samples, 0.64%)</title><rect x="242" y="196" width="7" height="15" fill="rgb(246,16,41)"/><text x="245.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.16%)</title><rect x="247" y="212" width="2" height="15" fill="rgb(212,143,11)"/><text x="250.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.16%)</title><rect x="247" y="228" width="2" height="15" fill="rgb(206,117,11)"/><text x="250.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.16%)</title><rect x="247" y="244" width="2" height="15" fill="rgb(228,192,5)"/><text x="250.00" y="254.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.16%)</title><rect x="247" y="260" width="2" height="15" fill="rgb(227,116,18)"/><text x="250.00" y="270.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.16%)</title><rect x="247" y="276" width="2" height="15" fill="rgb(215,93,42)"/><text x="250.00" y="286.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.16%)</title><rect x="247" y="292" width="2" height="15" fill="rgb(239,5,42)"/><text x="250.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="247" y="308" width="2" height="15" fill="rgb(234,185,16)"/><text x="250.00" y="318.50"></text></g><g><title>0x7fcbfcea8b68 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="247" y="324" width="2" height="15" fill="rgb(209,197,40)"/><text x="250.00" y="334.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.16%)</title><rect x="249" y="196" width="2" height="15" fill="rgb(248,59,50)"/><text x="252.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.16%)</title><rect x="249" y="212" width="2" height="15" fill="rgb(232,150,17)"/><text x="252.00" y="222.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:959) (1 samples, 0.16%)</title><rect x="249" y="228" width="2" height="15" fill="rgb(225,184,9)"/><text x="252.00" y="238.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (40 samples, 6.40%)</title><rect x="178" y="148" width="75" height="15" fill="rgb(223,89,0)"/><text x="181.00" y="158.50">predict ..</text></g><g><title>0x7fcbd7513d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (40 samples, 6.40%)</title><rect x="178" y="164" width="75" height="15" fill="rgb(219,26,18)"/><text x="181.00" y="174.50">0x7fcbd7..</text></g><g><title>0x7fcbd7513328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="249" y="180" width="4" height="15" fill="rgb(233,100,0)"/><text x="252.00" y="190.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.16%)</title><rect x="251" y="196" width="2" height="15" fill="rgb(231,57,32)"/><text x="254.00" y="206.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.16%)</title><rect x="251" y="212" width="2" height="15" fill="rgb(210,64,8)"/><text x="254.00" y="222.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.16%)</title><rect x="251" y="228" width="2" height="15" fill="rgb(217,148,48)"/><text x="254.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.16%)</title><rect x="251" y="244" width="2" height="15" fill="rgb(223,161,11)"/><text x="254.00" y="254.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.16%)</title><rect x="251" y="260" width="2" height="15" fill="rgb(233,39,51)"/><text x="254.00" y="270.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:172) (1 samples, 0.16%)</title><rect x="251" y="276" width="2" height="15" fill="rgb(239,160,38)"/><text x="254.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (4 samples, 0.64%)</title><rect x="253" y="148" width="8" height="15" fill="rgb(250,60,9)"/><text x="256.00" y="158.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (3 samples, 0.48%)</title><rect x="255" y="164" width="6" height="15" fill="rgb(252,53,0)"/><text x="258.00" y="174.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (114 samples, 18.24%)</title><rect x="47" y="132" width="215" height="15" fill="rgb(224,226,48)"/><text x="50.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (1 samples, 0.16%)</title><rect x="261" y="148" width="1" height="15" fill="rgb(213,106,10)"/><text x="264.00" y="158.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.16%)</title><rect x="261" y="164" width="1" height="15" fill="rgb(227,84,20)"/><text x="264.00" y="174.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.16%)</title><rect x="261" y="180" width="1" height="15" fill="rgb(212,201,6)"/><text x="264.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1219) (1 samples, 0.16%)</title><rect x="261" y="196" width="1" height="15" fill="rgb(250,79,3)"/><text x="264.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:54) (119 samples, 19.04%)</title><rect x="40" y="52" width="224" height="15" fill="rgb(231,172,30)"/><text x="43.00" y="62.50">&lt;module&gt; (bench_DecisionTreeR..</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:53) (119 samples, 19.04%)</title><rect x="40" y="68" width="224" height="15" fill="rgb(238,117,2)"/><text x="43.00" y="78.50">profile_skl (bench_DecisionTr..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:37) (119 samples, 19.04%)</title><rect x="40" y="84" width="224" height="15" fill="rgb(220,60,41)"/><text x="43.00" y="94.50">setup_profile (bench_Decision..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:31) (119 samples, 19.04%)</title><rect x="40" y="100" width="224" height="15" fill="rgb(248,229,26)"/><text x="43.00" y="110.50">profile (bench_DecisionTreeRe..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (118 samples, 18.88%)</title><rect x="42" y="116" width="222" height="15" fill="rgb(239,157,54)"/><text x="45.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.16%)</title><rect x="262" y="132" width="2" height="15" fill="rgb(222,19,21)"/><text x="265.00" y="142.50"></text></g><g><title>0x7fcbbd9c054f (?) (1 samples, 0.16%)</title><rect x="264" y="244" width="2" height="15" fill="rgb(241,122,28)"/><text x="267.00" y="254.50"></text></g><g><title>0x7fcbbd9c665e (?) (1 samples, 0.16%)</title><rect x="264" y="260" width="2" height="15" fill="rgb(214,226,18)"/><text x="267.00" y="270.50"></text></g><g><title>0x7fcbbd9c650f (?) (1 samples, 0.16%)</title><rect x="264" y="276" width="2" height="15" fill="rgb(239,24,53)"/><text x="267.00" y="286.50"></text></g><g><title>0x7fcbbd9ccd6c (?) (1 samples, 0.16%)</title><rect x="264" y="292" width="2" height="15" fill="rgb(238,202,14)"/><text x="267.00" y="302.50"></text></g><g><title>0x7fcbc6eadab9 (?) (1 samples, 0.16%)</title><rect x="264" y="308" width="2" height="15" fill="rgb(246,46,30)"/><text x="267.00" y="318.50"></text></g><g><title>0x7fcbc6eaeeab (?) (1 samples, 0.16%)</title><rect x="264" y="324" width="2" height="15" fill="rgb(220,126,23)"/><text x="267.00" y="334.50"></text></g><g><title>0x7fcbc6eaeea0 (libgomp.so.1.0.0) (4 samples, 0.64%)</title><rect x="266" y="484" width="8" height="15" fill="rgb(241,139,40)"/><text x="269.00" y="494.50"></text></g><g><title>0x7fcbc6eaeea9 (libgomp.so.1.0.0) (15 samples, 2.40%)</title><rect x="274" y="484" width="28" height="15" fill="rgb(212,203,21)"/><text x="277.00" y="494.50">0..</text></g><g><title>0x7fcbc6eaeeab (libgomp.so.1.0.0) (12 samples, 1.92%)</title><rect x="302" y="484" width="23" height="15" fill="rgb(233,136,9)"/><text x="305.00" y="494.50">0..</text></g><g><title>0x7fcbc6eadab9 (libgomp.so.1.0.0) (43 samples, 6.88%)</title><rect x="266" y="468" width="81" height="15" fill="rgb(237,228,29)"/><text x="269.00" y="478.50">0x7fcbc6e..</text></g><g><title>0x7fcbc6eaeead (libgomp.so.1.0.0) (12 samples, 1.92%)</title><rect x="325" y="484" width="22" height="15" fill="rgb(221,167,7)"/><text x="328.00" y="494.50">0..</text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:61) (45 samples, 7.20%)</title><rect x="264" y="52" width="85" height="15" fill="rgb(223,94,3)"/><text x="267.00" y="62.50">&lt;module&gt; (..</text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:60) (45 samples, 7.20%)</title><rect x="264" y="68" width="85" height="15" fill="rgb(206,100,9)"/><text x="267.00" y="78.50">profile_py..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:37) (45 samples, 7.20%)</title><rect x="264" y="84" width="85" height="15" fill="rgb(240,38,3)"/><text x="267.00" y="94.50">setup_prof..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:31) (45 samples, 7.20%)</title><rect x="264" y="100" width="85" height="15" fill="rgb(244,109,37)"/><text x="267.00" y="110.50">profile (b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (45 samples, 7.20%)</title><rect x="264" y="116" width="85" height="15" fill="rgb(245,44,3)"/><text x="267.00" y="126.50">time_predi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (45 samples, 7.20%)</title><rect x="264" y="132" width="85" height="15" fill="rgb(230,176,26)"/><text x="267.00" y="142.50">&lt;lambda&gt; (..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (45 samples, 7.20%)</title><rect x="264" y="148" width="85" height="15" fill="rgb(239,112,11)"/><text x="267.00" y="158.50">run (mlpro..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (45 samples, 7.20%)</title><rect x="264" y="164" width="85" height="15" fill="rgb(232,132,24)"/><text x="267.00" y="174.50">_run_seque..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (45 samples, 7.20%)</title><rect x="264" y="180" width="85" height="15" fill="rgb(247,106,9)"/><text x="267.00" y="190.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (45 samples, 7.20%)</title><rect x="264" y="196" width="85" height="15" fill="rgb(212,203,9)"/><text x="267.00" y="206.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (45 samples, 7.20%)</title><rect x="264" y="212" width="85" height="15" fill="rgb(221,87,17)"/><text x="267.00" y="222.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (45 samples, 7.20%)</title><rect x="264" y="228" width="85" height="15" fill="rgb(214,86,48)"/><text x="267.00" y="238.50">_run (mlpr..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (44 samples, 7.04%)</title><rect x="266" y="244" width="83" height="15" fill="rgb(243,85,53)"/><text x="269.00" y="254.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (44 samples, 7.04%)</title><rect x="266" y="260" width="83" height="15" fill="rgb(241,86,28)"/><text x="269.00" y="270.50">void pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (44 samples, 7.04%)</title><rect x="266" y="276" width="83" height="15" fill="rgb(252,218,11)"/><text x="269.00" y="286.50">void pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (44 samples, 7.04%)</title><rect x="266" y="292" width="83" height="15" fill="rgb(235,15,41)"/><text x="269.00" y="302.50">pybind11:..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (44 samples, 7.04%)</title><rect x="266" y="308" width="83" height="15" fill="rgb(216,126,25)"/><text x="269.00" y="318.50">pybind11:..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (44 samples, 7.04%)</title><rect x="266" y="324" width="83" height="15" fill="rgb(254,55,5)"/><text x="269.00" y="334.50">pybind11:..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (44 samples, 7.04%)</title><rect x="266" y="340" width="83" height="15" fill="rgb(216,68,24)"/><text x="269.00" y="350.50">pybind11:..</text></g><g><title>pybind11::array::~array (numpy.h:538) (44 samples, 7.04%)</title><rect x="266" y="356" width="83" height="15" fill="rgb(244,43,26)"/><text x="269.00" y="366.50">pybind11:..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (44 samples, 7.04%)</title><rect x="266" y="372" width="83" height="15" fill="rgb(253,132,37)"/><text x="269.00" y="382.50">pybind11:..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (44 samples, 7.04%)</title><rect x="266" y="388" width="83" height="15" fill="rgb(250,157,1)"/><text x="269.00" y="398.50">pybind11:..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (44 samples, 7.04%)</title><rect x="266" y="404" width="83" height="15" fill="rgb(250,199,29)"/><text x="269.00" y="414.50">pybind11:..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (44 samples, 7.04%)</title><rect x="266" y="420" width="83" height="15" fill="rgb(228,15,47)"/><text x="269.00" y="430.50">RuntimeTr..</text></g><g><title>pybind11::array::size (numpy.h:619) (44 samples, 7.04%)</title><rect x="266" y="436" width="83" height="15" fill="rgb(239,39,27)"/><text x="269.00" y="446.50">pybind11:..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (44 samples, 7.04%)</title><rect x="266" y="452" width="83" height="15" fill="rgb(238,162,5)"/><text x="269.00" y="462.50">std::accu..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.16%)</title><rect x="347" y="468" width="2" height="15" fill="rgb(233,40,11)"/><text x="350.00" y="478.50"></text></g><g><title>0x7fcbc6eacdaa (libgomp.so.1.0.0) (1 samples, 0.16%)</title><rect x="347" y="484" width="2" height="15" fill="rgb(244,185,36)"/><text x="350.00" y="494.50"></text></g><g><title>0x7fcbc6eaecfd (libgomp.so.1.0.0) (1 samples, 0.16%)</title><rect x="347" y="500" width="2" height="15" fill="rgb(237,185,27)"/><text x="350.00" y="510.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:932) (1 samples, 0.16%)</title><rect x="355" y="132" width="2" height="15" fill="rgb(251,34,9)"/><text x="358.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:718) (1 samples, 0.16%)</title><rect x="357" y="148" width="2" height="15" fill="rgb(233,51,30)"/><text x="360.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 0.48%)</title><rect x="355" y="116" width="6" height="15" fill="rgb(245,68,14)"/><text x="358.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.32%)</title><rect x="357" y="132" width="4" height="15" fill="rgb(217,41,7)"/><text x="360.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.16%)</title><rect x="359" y="148" width="2" height="15" fill="rgb(252,106,14)"/><text x="362.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:525) (1 samples, 0.16%)</title><rect x="361" y="116" width="2" height="15" fill="rgb(205,11,16)"/><text x="364.00" y="126.50"></text></g><g><title>0x7fcbfcea6b9b (libc-2.29.so) (1 samples, 0.16%)</title><rect x="363" y="196" width="1" height="15" fill="rgb(235,202,8)"/><text x="366.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (2 samples, 0.32%)</title><rect x="363" y="116" width="3" height="15" fill="rgb(226,148,35)"/><text x="366.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c:147) (2 samples, 0.32%)</title><rect x="363" y="132" width="3" height="15" fill="rgb(219,34,43)"/><text x="366.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (2 samples, 0.32%)</title><rect x="363" y="148" width="3" height="15" fill="rgb(254,151,44)"/><text x="366.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (2 samples, 0.32%)</title><rect x="363" y="164" width="3" height="15" fill="rgb(226,139,29)"/><text x="366.00" y="174.50"></text></g><g><title>0x7fcbfcea7eb0 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="363" y="180" width="3" height="15" fill="rgb(251,96,19)"/><text x="366.00" y="190.50"></text></g><g><title>0x7fcbfcea6c20 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="364" y="196" width="2" height="15" fill="rgb(219,172,7)"/><text x="367.00" y="206.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:570) (1 samples, 0.16%)</title><rect x="374" y="164" width="2" height="15" fill="rgb(232,177,41)"/><text x="377.00" y="174.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (2 samples, 0.32%)</title><rect x="385" y="196" width="4" height="15" fill="rgb(210,75,28)"/><text x="388.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.16%)</title><rect x="389" y="196" width="2" height="15" fill="rgb(226,51,15)"/><text x="392.00" y="206.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="397" y="244" width="1" height="15" fill="rgb(233,124,0)"/><text x="400.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="397" y="260" width="1" height="15" fill="rgb(245,189,25)"/><text x="400.00" y="270.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="400" y="260" width="4" height="15" fill="rgb(211,91,45)"/><text x="403.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="400" y="276" width="4" height="15" fill="rgb(243,69,45)"/><text x="403.00" y="286.50"></text></g><g><title>pybind11::detail::instance::get_value_and_holder (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="402" y="292" width="2" height="15" fill="rgb(247,121,17)"/><text x="405.00" y="302.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (8 samples, 1.28%)</title><rect x="391" y="196" width="15" height="15" fill="rgb(221,191,46)"/><text x="394.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (8 samples, 1.28%)</title><rect x="391" y="212" width="15" height="15" fill="rgb(222,61,54)"/><text x="394.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.12%)</title><rect x="393" y="228" width="13" height="15" fill="rgb(227,74,6)"/><text x="396.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.64%)</title><rect x="398" y="244" width="8" height="15" fill="rgb(234,83,29)"/><text x="401.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="404" y="260" width="2" height="15" fill="rgb(238,63,2)"/><text x="407.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="404" y="276" width="2" height="15" fill="rgb(237,201,31)"/><text x="407.00" y="286.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="404" y="292" width="2" height="15" fill="rgb(232,172,46)"/><text x="407.00" y="302.50"></text></g><g><title>0x7fcbbcf65ff9 (?) (1 samples, 0.16%)</title><rect x="412" y="212" width="2" height="15" fill="rgb(244,12,14)"/><text x="415.00" y="222.50"></text></g><g><title>0x7fcbbcf60ef6 (?) (1 samples, 0.16%)</title><rect x="412" y="228" width="2" height="15" fill="rgb(247,99,11)"/><text x="415.00" y="238.50"></text></g><g><title>0x7fcbbcf55962 (?) (1 samples, 0.16%)</title><rect x="412" y="244" width="2" height="15" fill="rgb(240,114,44)"/><text x="415.00" y="254.50"></text></g><g><title>0x7fcbbcf897a7 (?) (1 samples, 0.16%)</title><rect x="412" y="260" width="2" height="15" fill="rgb(245,168,13)"/><text x="415.00" y="270.50"></text></g><g><title>0x7fcbbcf89379 (?) (1 samples, 0.16%)</title><rect x="412" y="276" width="2" height="15" fill="rgb(208,60,1)"/><text x="415.00" y="286.50"></text></g><g><title>0x7fcbbd3e78b8 (?) (1 samples, 0.16%)</title><rect x="412" y="292" width="2" height="15" fill="rgb(209,3,44)"/><text x="415.00" y="302.50"></text></g><g><title>0x7fcbbd3e5c7f (?) (1 samples, 0.16%)</title><rect x="412" y="308" width="2" height="15" fill="rgb(244,178,13)"/><text x="415.00" y="318.50"></text></g><g><title>0x7fcbbd3f899c (?) (1 samples, 0.16%)</title><rect x="412" y="324" width="2" height="15" fill="rgb(241,152,2)"/><text x="415.00" y="334.50"></text></g><g><title>0x7fcbbd120328 (?) (1 samples, 0.16%)</title><rect x="412" y="340" width="2" height="15" fill="rgb(236,5,18)"/><text x="415.00" y="350.50"></text></g><g><title>0x7fcbfcea7982 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="412" y="356" width="2" height="15" fill="rgb(253,91,6)"/><text x="415.00" y="366.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.16%)</title><rect x="414" y="212" width="1" height="15" fill="rgb(238,199,41)"/><text x="417.00" y="222.50"></text></g><g><title>0x7ffc34116b1f ([vdso]) (1 samples, 0.16%)</title><rect x="414" y="228" width="1" height="15" fill="rgb(230,74,36)"/><text x="417.00" y="238.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="417" y="228" width="2" height="15" fill="rgb(249,181,6)"/><text x="420.00" y="238.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="423" y="260" width="2" height="15" fill="rgb(226,94,12)"/><text x="426.00" y="270.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="423" y="276" width="2" height="15" fill="rgb(216,69,40)"/><text x="426.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="423" y="292" width="2" height="15" fill="rgb(240,190,33)"/><text x="426.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="429" y="292" width="3" height="15" fill="rgb(234,20,10)"/><text x="432.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="429" y="308" width="3" height="15" fill="rgb(231,112,5)"/><text x="432.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="429" y="324" width="3" height="15" fill="rgb(213,108,33)"/><text x="432.00" y="334.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="431" y="340" width="1" height="15" fill="rgb(226,223,6)"/><text x="434.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="431" y="356" width="1" height="15" fill="rgb(211,120,48)"/><text x="434.00" y="366.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="432" y="292" width="2" height="15" fill="rgb(210,82,34)"/><text x="435.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="432" y="308" width="2" height="15" fill="rgb(216,11,43)"/><text x="435.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="432" y="324" width="2" height="15" fill="rgb(221,186,22)"/><text x="435.00" y="334.50"></text></g><g><title>0x7fcbfcea8dd6 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="432" y="340" width="2" height="15" fill="rgb(244,97,26)"/><text x="435.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="434" y="292" width="2" height="15" fill="rgb(213,23,52)"/><text x="437.00" y="302.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="438" y="340" width="2" height="15" fill="rgb(208,146,22)"/><text x="441.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="438" y="356" width="2" height="15" fill="rgb(227,80,29)"/><text x="441.00" y="366.50"></text></g><g><title>0x7fcbbcf2cc40 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="531" y="356" width="3" height="15" fill="rgb(231,180,34)"/><text x="534.00" y="366.50"></text></g><g><title>0x7fcbbcf2d0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="534" y="356" width="2" height="15" fill="rgb(208,49,27)"/><text x="537.00" y="366.50"></text></g><g><title>0x7fcbfcea7906 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="536" y="356" width="4" height="15" fill="rgb(228,77,43)"/><text x="539.00" y="366.50"></text></g><g><title>0x7fcbfcea7908 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="540" y="356" width="2" height="15" fill="rgb(224,20,42)"/><text x="543.00" y="366.50"></text></g><g><title>0x7fcbfcea790e (libc-2.29.so) (4 samples, 0.64%)</title><rect x="542" y="356" width="7" height="15" fill="rgb(205,79,9)"/><text x="545.00" y="366.50"></text></g><g><title>0x7fcbfcea791c (libc-2.29.so) (1 samples, 0.16%)</title><rect x="549" y="356" width="2" height="15" fill="rgb(235,93,30)"/><text x="552.00" y="366.50"></text></g><g><title>0x7fcbfcea791e (libc-2.29.so) (3 samples, 0.48%)</title><rect x="551" y="356" width="6" height="15" fill="rgb(215,29,4)"/><text x="554.00" y="366.50"></text></g><g><title>0x7fcbfcea794f (libc-2.29.so) (1 samples, 0.16%)</title><rect x="557" y="356" width="2" height="15" fill="rgb(225,198,22)"/><text x="560.00" y="366.50"></text></g><g><title>0x7fcbfcea7961 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="559" y="356" width="2" height="15" fill="rgb(247,1,39)"/><text x="562.00" y="366.50"></text></g><g><title>0x7fcbfcea7965 (libc-2.29.so) (5 samples, 0.80%)</title><rect x="561" y="356" width="9" height="15" fill="rgb(222,132,46)"/><text x="564.00" y="366.50"></text></g><g><title>0x7fcbfcea796a (libc-2.29.so) (1 samples, 0.16%)</title><rect x="570" y="356" width="2" height="15" fill="rgb(217,51,11)"/><text x="573.00" y="366.50"></text></g><g><title>0x7fcbfcea7991 (libc-2.29.so) (8 samples, 1.28%)</title><rect x="572" y="356" width="15" height="15" fill="rgb(253,46,49)"/><text x="575.00" y="366.50"></text></g><g><title>0x7fcbfcea7998 (libc-2.29.so) (6 samples, 0.96%)</title><rect x="587" y="356" width="12" height="15" fill="rgb(254,149,18)"/><text x="590.00" y="366.50"></text></g><g><title>0x7fcbfcea7a38 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="599" y="356" width="1" height="15" fill="rgb(223,18,50)"/><text x="602.00" y="366.50"></text></g><g><title>0x7fcbfcea7a41 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="600" y="356" width="4" height="15" fill="rgb(244,102,29)"/><text x="603.00" y="366.50"></text></g><g><title>0x7fcbfcea7a4c (libc-2.29.so) (1 samples, 0.16%)</title><rect x="604" y="356" width="2" height="15" fill="rgb(243,53,0)"/><text x="607.00" y="366.50"></text></g><g><title>0x7fcbfcea7a4d (libc-2.29.so) (1 samples, 0.16%)</title><rect x="606" y="356" width="2" height="15" fill="rgb(230,177,49)"/><text x="609.00" y="366.50"></text></g><g><title>0x7fcbfcea7a55 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="608" y="356" width="2" height="15" fill="rgb(219,28,28)"/><text x="611.00" y="366.50"></text></g><g><title>0x7fcbfcea7bc0 (libc-2.29.so) (3 samples, 0.48%)</title><rect x="610" y="356" width="6" height="15" fill="rgb(247,200,35)"/><text x="613.00" y="366.50"></text></g><g><title>0x7fcbfcea7bd8 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="616" y="356" width="3" height="15" fill="rgb(216,217,6)"/><text x="619.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (18 samples, 2.88%)</title><rect x="619" y="356" width="34" height="15" fill="rgb(247,180,40)"/><text x="622.00" y="366.50">fr..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="653" y="356" width="2" height="15" fill="rgb(233,189,27)"/><text x="656.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="653" y="372" width="2" height="15" fill="rgb(223,210,28)"/><text x="656.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="653" y="388" width="2" height="15" fill="rgb(252,201,38)"/><text x="656.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="653" y="404" width="2" height="15" fill="rgb(249,180,26)"/><text x="656.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="653" y="420" width="2" height="15" fill="rgb(229,220,1)"/><text x="656.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="653" y="436" width="2" height="15" fill="rgb(207,189,42)"/><text x="656.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="653" y="452" width="2" height="15" fill="rgb(242,215,44)"/><text x="656.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="653" y="468" width="2" height="15" fill="rgb(206,205,10)"/><text x="656.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="653" y="484" width="2" height="15" fill="rgb(249,120,31)"/><text x="656.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="653" y="500" width="2" height="15" fill="rgb(213,39,48)"/><text x="656.00" y="510.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="653" y="516" width="2" height="15" fill="rgb(218,155,12)"/><text x="656.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (9 samples, 1.44%)</title><rect x="876" y="388" width="17" height="15" fill="rgb(248,66,25)"/><text x="879.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (7 samples, 1.12%)</title><rect x="880" y="404" width="13" height="15" fill="rgb(224,178,3)"/><text x="883.00" y="414.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 2.88%)</title><rect x="918" y="404" width="34" height="15" fill="rgb(248,158,46)"/><text x="921.00" y="414.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 1.28%)</title><rect x="937" y="420" width="15" height="15" fill="rgb(213,221,20)"/><text x="940.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (8 samples, 1.28%)</title><rect x="937" y="436" width="15" height="15" fill="rgb(245,32,3)"/><text x="940.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (213 samples, 34.08%)</title><rect x="655" y="356" width="402" height="15" fill="rgb(244,22,16)"/><text x="658.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Process..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (106 samples, 16.96%)</title><rect x="857" y="372" width="200" height="15" fill="rgb(211,131,22)"/><text x="860.00" y="382.50">std::_Hashtable&lt;long, std:..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (87 samples, 13.92%)</title><rect x="893" y="388" width="164" height="15" fill="rgb(222,165,51)"/><text x="896.00" y="398.50">std::_Hashtable&lt;long,..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (56 samples, 8.96%)</title><rect x="952" y="404" width="105" height="15" fill="rgb(230,91,14)"/><text x="955.00" y="414.50">std::__detai..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (30 samples, 4.80%)</title><rect x="1001" y="420" width="56" height="15" fill="rgb(226,170,33)"/><text x="1004.00" y="430.50">std::..</text></g><g><title>0x7fcbfcec7d50 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1071" y="372" width="1" height="15" fill="rgb(237,82,50)"/><text x="1074.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.60%)</title><rect x="1057" y="356" width="19" height="15" fill="rgb(206,101,4)"/><text x="1060.00" y="366.50"></text></g><g><title>0x7fcbfcec7dc9 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="1072" y="372" width="4" height="15" fill="rgb(251,145,32)"/><text x="1075.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (2 samples, 0.32%)</title><rect x="1076" y="356" width="4" height="15" fill="rgb(251,33,32)"/><text x="1079.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 4.16%)</title><rect x="1080" y="356" width="49" height="15" fill="rgb(206,28,41)"/><text x="1083.00" y="366.50">std:..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (382 samples, 61.12%)</title><rect x="438" y="308" width="721" height="15" fill="rgb(222,171,6)"/><text x="441.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (382 samples, 61.12%)</title><rect x="438" y="324" width="721" height="15" fill="rgb(230,102,50)"/><text x="441.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (381 samples, 60.96%)</title><rect x="440" y="340" width="719" height="15" fill="rgb(225,26,46)"/><text x="443.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 2.56%)</title><rect x="1129" y="356" width="30" height="15" fill="rgb(210,152,10)"/><text x="1132.00" y="366.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 1.28%)</title><rect x="1144" y="372" width="15" height="15" fill="rgb(246,56,43)"/><text x="1147.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.96%)</title><rect x="1148" y="388" width="11" height="15" fill="rgb(243,197,17)"/><text x="1151.00" y="398.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (384 samples, 61.44%)</title><rect x="436" y="292" width="725" height="15" fill="rgb(225,224,34)"/><text x="439.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1159" y="308" width="2" height="15" fill="rgb(242,108,20)"/><text x="1162.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1159" y="324" width="2" height="15" fill="rgb(232,81,1)"/><text x="1162.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="1159" y="340" width="2" height="15" fill="rgb(229,181,5)"/><text x="1162.00" y="350.50"></text></g><g><title>0x7fcbfcf86066 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1159" y="356" width="2" height="15" fill="rgb(242,139,38)"/><text x="1162.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (391 samples, 62.56%)</title><rect x="425" y="260" width="738" height="15" fill="rgb(219,53,7)"/><text x="428.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (391 samples, 62.56%)</title><rect x="425" y="276" width="738" height="15" fill="rgb(238,59,44)"/><text x="428.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="1161" y="292" width="2" height="15" fill="rgb(207,73,19)"/><text x="1164.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1161" y="308" width="2" height="15" fill="rgb(208,135,37)"/><text x="1164.00" y="318.50"></text></g><g><title>onnxruntime::CPUAllocator::Info (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1165" y="292" width="2" height="15" fill="rgb(239,220,4)"/><text x="1168.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.48%)</title><rect x="1163" y="260" width="6" height="15" fill="rgb(242,114,53)"/><text x="1166.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="1165" y="276" width="4" height="15" fill="rgb(214,181,48)"/><text x="1168.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1167" y="292" width="2" height="15" fill="rgb(207,226,40)"/><text x="1170.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1167" y="308" width="2" height="15" fill="rgb(254,81,28)"/><text x="1170.00" y="318.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1167" y="324" width="2" height="15" fill="rgb(215,73,8)"/><text x="1170.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.16%)</title><rect x="1171" y="292" width="2" height="15" fill="rgb(224,15,7)"/><text x="1174.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.16%)</title><rect x="1171" y="308" width="2" height="15" fill="rgb(205,170,48)"/><text x="1174.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.16%)</title><rect x="1171" y="324" width="2" height="15" fill="rgb(237,62,0)"/><text x="1174.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.16%)</title><rect x="1171" y="340" width="2" height="15" fill="rgb(236,171,3)"/><text x="1174.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1171" y="356" width="2" height="15" fill="rgb(241,162,33)"/><text x="1174.00" y="366.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.48%)</title><rect x="1169" y="260" width="5" height="15" fill="rgb(219,104,9)"/><text x="1172.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.32%)</title><rect x="1171" y="276" width="3" height="15" fill="rgb(224,37,28)"/><text x="1174.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:960) (1 samples, 0.16%)</title><rect x="1173" y="292" width="1" height="15" fill="rgb(219,91,43)"/><text x="1176.00" y="302.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="1174" y="260" width="2" height="15" fill="rgb(209,77,17)"/><text x="1177.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (403 samples, 64.48%)</title><rect x="419" y="244" width="761" height="15" fill="rgb(214,56,40)"/><text x="422.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::ve..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="1176" y="260" width="4" height="15" fill="rgb(231,174,26)"/><text x="1179.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="1176" y="276" width="4" height="15" fill="rgb(217,44,43)"/><text x="1179.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="1176" y="292" width="4" height="15" fill="rgb(234,149,7)"/><text x="1179.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::ReleaseBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="1176" y="308" width="4" height="15" fill="rgb(232,129,6)"/><text x="1179.00" y="318.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (429 samples, 68.64%)</title><rect x="376" y="164" width="810" height="15" fill="rgb(246,9,36)"/><text x="379.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (427 samples, 68.32%)</title><rect x="380" y="180" width="806" height="15" fill="rgb(231,164,4)"/><text x="383.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (413 samples, 66.08%)</title><rect x="406" y="196" width="780" height="15" fill="rgb(205,192,50)"/><text x="409.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (408 samples, 65.28%)</title><rect x="415" y="212" width="771" height="15" fill="rgb(244,215,48)"/><text x="418.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (406 samples, 64.96%)</title><rect x="419" y="228" width="767" height="15" fill="rgb(230,87,51)"/><text x="422.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.48%)</title><rect x="1180" y="244" width="6" height="15" fill="rgb(241,85,34)"/><text x="1183.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1184" y="260" width="2" height="15" fill="rgb(238,100,23)"/><text x="1187.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:68) (444 samples, 71.04%)</title><rect x="349" y="52" width="839" height="15" fill="rgb(208,213,24)"/><text x="352.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:68)</text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:67) (444 samples, 71.04%)</title><rect x="349" y="68" width="839" height="15" fill="rgb(253,50,6)"/><text x="352.00" y="78.50">profile_ort (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:67)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:37) (444 samples, 71.04%)</title><rect x="349" y="84" width="839" height="15" fill="rgb(238,224,4)"/><text x="352.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:37)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:31) (444 samples, 71.04%)</title><rect x="349" y="100" width="839" height="15" fill="rgb(226,14,2)"/><text x="352.00" y="110.50">profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (435 samples, 69.60%)</title><rect x="366" y="116" width="822" height="15" fill="rgb(233,175,8)"/><text x="369.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (435 samples, 69.60%)</title><rect x="366" y="132" width="822" height="15" fill="rgb(243,215,5)"/><text x="369.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (434 samples, 69.44%)</title><rect x="368" y="148" width="820" height="15" fill="rgb(218,70,21)"/><text x="371.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.16%)</title><rect x="1186" y="164" width="2" height="15" fill="rgb(240,183,12)"/><text x="1189.00" y="174.50"></text></g><g><title>all (625 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(213,207,43)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.16%)</title><rect x="1188" y="52" width="2" height="15" fill="rgb(213,92,24)"/><text x="1191.00" y="62.50"></text></g></g></svg>