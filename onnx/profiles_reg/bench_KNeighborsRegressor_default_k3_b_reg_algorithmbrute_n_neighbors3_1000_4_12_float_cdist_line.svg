<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2150" onload="init(evt)" viewBox="0 0 1200 2150" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2150" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2133.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2133.00"> </text><g id="frames"><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.20%)</title><rect x="10" y="852" width="2" height="15" fill="rgb(235,87,46)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.20%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(229,79,27)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.20%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(226,191,34)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.20%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(208,58,41)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.20%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(206,225,50)"/><text x="13.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.20%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(221,168,3)"/><text x="13.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.20%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(244,84,33)"/><text x="13.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.20%)</title><rect x="10" y="964" width="2" height="15" fill="rgb(216,18,2)"/><text x="13.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.20%)</title><rect x="10" y="980" width="2" height="15" fill="rgb(208,54,4)"/><text x="13.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:220) (1 samples, 0.20%)</title><rect x="10" y="996" width="2" height="15" fill="rgb(205,155,28)"/><text x="13.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3.py:2) (2 samples, 0.41%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(254,124,5)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(246,65,5)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.41%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(206,113,40)"/><text x="13.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(251,62,32)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(227,8,32)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="10" y="228" width="4" height="15" fill="rgb(229,76,27)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(213,194,39)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="10" y="260" width="4" height="15" fill="rgb(244,132,42)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="10" y="276" width="4" height="15" fill="rgb(232,42,35)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.41%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(214,35,49)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="10" y="308" width="4" height="15" fill="rgb(232,47,25)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="10" y="324" width="4" height="15" fill="rgb(224,179,6)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="10" y="340" width="4" height="15" fill="rgb(217,140,31)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="10" y="356" width="4" height="15" fill="rgb(226,92,48)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="10" y="372" width="4" height="15" fill="rgb(225,174,21)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.41%)</title><rect x="10" y="388" width="4" height="15" fill="rgb(252,55,7)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="10" y="404" width="4" height="15" fill="rgb(216,198,17)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="10" y="420" width="4" height="15" fill="rgb(248,195,18)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="10" y="436" width="4" height="15" fill="rgb(210,45,25)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="10" y="452" width="4" height="15" fill="rgb(213,135,36)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="10" y="468" width="4" height="15" fill="rgb(213,86,25)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.41%)</title><rect x="10" y="484" width="4" height="15" fill="rgb(231,218,32)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="10" y="500" width="4" height="15" fill="rgb(217,181,31)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="10" y="516" width="4" height="15" fill="rgb(221,125,39)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="10" y="532" width="4" height="15" fill="rgb(205,1,11)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="10" y="548" width="4" height="15" fill="rgb(243,229,29)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="10" y="564" width="4" height="15" fill="rgb(230,145,42)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.41%)</title><rect x="10" y="580" width="4" height="15" fill="rgb(208,201,52)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="10" y="596" width="4" height="15" fill="rgb(254,165,49)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.41%)</title><rect x="10" y="612" width="4" height="15" fill="rgb(226,182,22)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="10" y="628" width="4" height="15" fill="rgb(214,48,16)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="10" y="644" width="4" height="15" fill="rgb(247,189,54)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="10" y="660" width="4" height="15" fill="rgb(236,112,28)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="10" y="676" width="4" height="15" fill="rgb(253,114,37)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="10" y="692" width="4" height="15" fill="rgb(210,164,44)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="10" y="708" width="4" height="15" fill="rgb(252,184,44)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.41%)</title><rect x="10" y="724" width="4" height="15" fill="rgb(245,193,21)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="10" y="740" width="4" height="15" fill="rgb(234,126,15)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="10" y="756" width="4" height="15" fill="rgb(221,227,26)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="10" y="772" width="4" height="15" fill="rgb(233,174,28)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="10" y="788" width="4" height="15" fill="rgb(253,158,39)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="10" y="804" width="4" height="15" fill="rgb(253,228,46)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.41%)</title><rect x="10" y="820" width="4" height="15" fill="rgb(217,129,6)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.41%)</title><rect x="10" y="836" width="4" height="15" fill="rgb(246,7,32)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.20%)</title><rect x="12" y="852" width="2" height="15" fill="rgb(222,162,38)"/><text x="15.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.20%)</title><rect x="12" y="868" width="2" height="15" fill="rgb(235,93,28)"/><text x="15.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.20%)</title><rect x="12" y="884" width="2" height="15" fill="rgb(246,170,6)"/><text x="15.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2130) (1 samples, 0.20%)</title><rect x="12" y="900" width="2" height="15" fill="rgb(234,8,4)"/><text x="15.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.20%)</title><rect x="14" y="484" width="3" height="15" fill="rgb(244,158,49)"/><text x="17.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="14" y="500" width="3" height="15" fill="rgb(208,168,22)"/><text x="17.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="14" y="516" width="3" height="15" fill="rgb(231,24,46)"/><text x="17.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="14" y="532" width="3" height="15" fill="rgb(216,218,5)"/><text x="17.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="14" y="548" width="3" height="15" fill="rgb(249,157,1)"/><text x="17.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="14" y="564" width="3" height="15" fill="rgb(236,134,10)"/><text x="17.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.20%)</title><rect x="14" y="580" width="3" height="15" fill="rgb(233,178,26)"/><text x="17.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="14" y="596" width="3" height="15" fill="rgb(228,170,28)"/><text x="17.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="14" y="612" width="3" height="15" fill="rgb(249,4,27)"/><text x="17.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="14" y="628" width="3" height="15" fill="rgb(234,52,35)"/><text x="17.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="14" y="644" width="3" height="15" fill="rgb(219,22,4)"/><text x="17.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="14" y="660" width="3" height="15" fill="rgb(240,143,10)"/><text x="17.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.20%)</title><rect x="14" y="676" width="3" height="15" fill="rgb(231,84,11)"/><text x="17.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="14" y="692" width="3" height="15" fill="rgb(239,217,20)"/><text x="17.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="14" y="708" width="3" height="15" fill="rgb(227,226,35)"/><text x="17.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="14" y="724" width="3" height="15" fill="rgb(206,222,29)"/><text x="17.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="14" y="740" width="3" height="15" fill="rgb(253,154,37)"/><text x="17.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="14" y="756" width="3" height="15" fill="rgb(226,221,10)"/><text x="17.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:112) (1 samples, 0.20%)</title><rect x="14" y="772" width="3" height="15" fill="rgb(207,184,20)"/><text x="17.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="14" y="788" width="3" height="15" fill="rgb(231,115,42)"/><text x="17.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="14" y="804" width="3" height="15" fill="rgb(208,14,54)"/><text x="17.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="14" y="820" width="3" height="15" fill="rgb(249,90,45)"/><text x="17.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="14" y="836" width="3" height="15" fill="rgb(250,64,33)"/><text x="17.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="14" y="852" width="3" height="15" fill="rgb(220,58,34)"/><text x="17.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="14" y="868" width="3" height="15" fill="rgb(254,86,40)"/><text x="17.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="14" y="884" width="3" height="15" fill="rgb(246,9,2)"/><text x="17.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py:26) (1 samples, 0.20%)</title><rect x="14" y="900" width="3" height="15" fill="rgb(241,155,43)"/><text x="17.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="14" y="916" width="3" height="15" fill="rgb(214,218,36)"/><text x="17.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="14" y="932" width="3" height="15" fill="rgb(230,6,19)"/><text x="17.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="14" y="948" width="3" height="15" fill="rgb(217,101,53)"/><text x="17.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="14" y="964" width="3" height="15" fill="rgb(238,206,7)"/><text x="17.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="14" y="980" width="3" height="15" fill="rgb(215,3,13)"/><text x="17.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py:11) (1 samples, 0.20%)</title><rect x="14" y="996" width="3" height="15" fill="rgb(250,74,47)"/><text x="17.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="14" y="1012" width="3" height="15" fill="rgb(251,187,42)"/><text x="17.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="14" y="1028" width="3" height="15" fill="rgb(224,63,16)"/><text x="17.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="14" y="1044" width="3" height="15" fill="rgb(246,14,15)"/><text x="17.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="14" y="1060" width="3" height="15" fill="rgb(231,198,26)"/><text x="17.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="14" y="1076" width="3" height="15" fill="rgb(214,94,32)"/><text x="17.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py:60) (1 samples, 0.20%)</title><rect x="14" y="1092" width="3" height="15" fill="rgb(211,50,36)"/><text x="17.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="14" y="1108" width="3" height="15" fill="rgb(214,32,54)"/><text x="17.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="14" y="1124" width="3" height="15" fill="rgb(209,113,5)"/><text x="17.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="14" y="1140" width="3" height="15" fill="rgb(213,2,1)"/><text x="17.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="14" y="1156" width="3" height="15" fill="rgb(228,131,26)"/><text x="17.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="14" y="1172" width="3" height="15" fill="rgb(212,136,4)"/><text x="17.00" y="1182.50"></text></g><g><title>&lt;module&gt; (http/cookies.py:451) (1 samples, 0.20%)</title><rect x="14" y="1188" width="3" height="15" fill="rgb(248,131,18)"/><text x="17.00" y="1198.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.20%)</title><rect x="14" y="1204" width="3" height="15" fill="rgb(246,153,21)"/><text x="17.00" y="1214.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.20%)</title><rect x="14" y="1220" width="3" height="15" fill="rgb(231,82,54)"/><text x="17.00" y="1230.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.20%)</title><rect x="14" y="1236" width="3" height="15" fill="rgb(246,19,0)"/><text x="17.00" y="1246.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.20%)</title><rect x="14" y="1252" width="3" height="15" fill="rgb(211,173,25)"/><text x="17.00" y="1262.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.20%)</title><rect x="14" y="1268" width="3" height="15" fill="rgb(207,20,22)"/><text x="17.00" y="1278.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.20%)</title><rect x="14" y="1284" width="3" height="15" fill="rgb(224,180,49)"/><text x="17.00" y="1294.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.20%)</title><rect x="14" y="1300" width="3" height="15" fill="rgb(229,190,30)"/><text x="17.00" y="1310.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.20%)</title><rect x="14" y="1316" width="3" height="15" fill="rgb(217,27,29)"/><text x="17.00" y="1326.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.20%)</title><rect x="14" y="1332" width="3" height="15" fill="rgb(211,91,46)"/><text x="17.00" y="1342.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.20%)</title><rect x="14" y="1348" width="3" height="15" fill="rgb(214,215,33)"/><text x="17.00" y="1358.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.20%)</title><rect x="14" y="1364" width="3" height="15" fill="rgb(229,207,44)"/><text x="17.00" y="1374.50"></text></g><g><title>_parse (sre_parse.py:493) (1 samples, 0.20%)</title><rect x="14" y="1380" width="3" height="15" fill="rgb(230,203,0)"/><text x="17.00" y="1390.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.20%)</title><rect x="14" y="1396" width="3" height="15" fill="rgb(230,99,23)"/><text x="17.00" y="1406.50"></text></g><g><title>__next (sre_parse.py:234) (1 samples, 0.20%)</title><rect x="14" y="1412" width="3" height="15" fill="rgb(211,182,50)"/><text x="17.00" y="1422.50"></text></g><g><title>_parse (sre_parse.py:480) (1 samples, 0.20%)</title><rect x="17" y="900" width="2" height="15" fill="rgb(206,196,8)"/><text x="20.00" y="910.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (3 samples, 0.61%)</title><rect x="14" y="244" width="7" height="15" fill="rgb(220,135,37)"/><text x="17.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.61%)</title><rect x="14" y="260" width="7" height="15" fill="rgb(214,102,43)"/><text x="17.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.61%)</title><rect x="14" y="276" width="7" height="15" fill="rgb(250,200,29)"/><text x="17.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.61%)</title><rect x="14" y="292" width="7" height="15" fill="rgb(236,13,54)"/><text x="17.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.61%)</title><rect x="14" y="308" width="7" height="15" fill="rgb(240,99,36)"/><text x="17.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.61%)</title><rect x="14" y="324" width="7" height="15" fill="rgb(237,50,14)"/><text x="17.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (3 samples, 0.61%)</title><rect x="14" y="340" width="7" height="15" fill="rgb(240,28,17)"/><text x="17.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.61%)</title><rect x="14" y="356" width="7" height="15" fill="rgb(248,1,34)"/><text x="17.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.61%)</title><rect x="14" y="372" width="7" height="15" fill="rgb(219,201,51)"/><text x="17.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.61%)</title><rect x="14" y="388" width="7" height="15" fill="rgb(252,11,43)"/><text x="17.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.61%)</title><rect x="14" y="404" width="7" height="15" fill="rgb(241,169,43)"/><text x="17.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.61%)</title><rect x="14" y="420" width="7" height="15" fill="rgb(219,202,8)"/><text x="17.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.61%)</title><rect x="14" y="436" width="7" height="15" fill="rgb(216,166,40)"/><text x="17.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.61%)</title><rect x="14" y="452" width="7" height="15" fill="rgb(253,44,41)"/><text x="17.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.61%)</title><rect x="14" y="468" width="7" height="15" fill="rgb(242,29,12)"/><text x="17.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (2 samples, 0.41%)</title><rect x="17" y="484" width="4" height="15" fill="rgb(230,25,2)"/><text x="20.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="17" y="500" width="4" height="15" fill="rgb(236,200,32)"/><text x="20.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="17" y="516" width="4" height="15" fill="rgb(232,105,29)"/><text x="20.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="17" y="532" width="4" height="15" fill="rgb(249,150,13)"/><text x="20.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="17" y="548" width="4" height="15" fill="rgb(231,87,34)"/><text x="20.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="17" y="564" width="4" height="15" fill="rgb(250,26,37)"/><text x="20.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (2 samples, 0.41%)</title><rect x="17" y="580" width="4" height="15" fill="rgb(219,165,50)"/><text x="20.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="17" y="596" width="4" height="15" fill="rgb(240,228,45)"/><text x="20.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="17" y="612" width="4" height="15" fill="rgb(246,222,2)"/><text x="20.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="17" y="628" width="4" height="15" fill="rgb(237,213,4)"/><text x="20.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="17" y="644" width="4" height="15" fill="rgb(249,222,29)"/><text x="20.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="17" y="660" width="4" height="15" fill="rgb(248,88,36)"/><text x="20.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (2 samples, 0.41%)</title><rect x="17" y="676" width="4" height="15" fill="rgb(235,114,49)"/><text x="20.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="17" y="692" width="4" height="15" fill="rgb(246,185,19)"/><text x="20.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="17" y="708" width="4" height="15" fill="rgb(241,189,4)"/><text x="20.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="17" y="724" width="4" height="15" fill="rgb(249,105,21)"/><text x="20.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="17" y="740" width="4" height="15" fill="rgb(208,85,27)"/><text x="20.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="17" y="756" width="4" height="15" fill="rgb(235,7,33)"/><text x="20.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:148) (2 samples, 0.41%)</title><rect x="17" y="772" width="4" height="15" fill="rgb(214,130,50)"/><text x="20.00" y="782.50"></text></g><g><title>compile (re.py:234) (2 samples, 0.41%)</title><rect x="17" y="788" width="4" height="15" fill="rgb(224,19,7)"/><text x="20.00" y="798.50"></text></g><g><title>_compile (re.py:286) (2 samples, 0.41%)</title><rect x="17" y="804" width="4" height="15" fill="rgb(237,154,24)"/><text x="20.00" y="814.50"></text></g><g><title>compile (sre_compile.py:764) (2 samples, 0.41%)</title><rect x="17" y="820" width="4" height="15" fill="rgb(232,211,15)"/><text x="20.00" y="830.50"></text></g><g><title>parse (sre_parse.py:930) (2 samples, 0.41%)</title><rect x="17" y="836" width="4" height="15" fill="rgb(206,27,1)"/><text x="20.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (2 samples, 0.41%)</title><rect x="17" y="852" width="4" height="15" fill="rgb(207,191,0)"/><text x="20.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:816) (2 samples, 0.41%)</title><rect x="17" y="868" width="4" height="15" fill="rgb(228,136,20)"/><text x="20.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (2 samples, 0.41%)</title><rect x="17" y="884" width="4" height="15" fill="rgb(252,182,41)"/><text x="20.00" y="894.50"></text></g><g><title>_parse (sre_parse.py:835) (1 samples, 0.20%)</title><rect x="19" y="900" width="2" height="15" fill="rgb(224,102,17)"/><text x="22.00" y="910.50"></text></g><g><title>__getitem__ (sre_parse.py:165) (1 samples, 0.20%)</title><rect x="19" y="916" width="2" height="15" fill="rgb(209,11,49)"/><text x="22.00" y="926.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.20%)</title><rect x="21" y="628" width="3" height="15" fill="rgb(219,33,35)"/><text x="24.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="21" y="644" width="3" height="15" fill="rgb(237,224,4)"/><text x="24.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="21" y="660" width="3" height="15" fill="rgb(243,109,6)"/><text x="24.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="21" y="676" width="3" height="15" fill="rgb(241,87,8)"/><text x="24.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="21" y="692" width="3" height="15" fill="rgb(246,199,8)"/><text x="24.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="21" y="708" width="3" height="15" fill="rgb(205,200,39)"/><text x="24.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:8) (1 samples, 0.20%)</title><rect x="21" y="724" width="3" height="15" fill="rgb(206,208,14)"/><text x="24.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="21" y="740" width="3" height="15" fill="rgb(214,159,10)"/><text x="24.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="21" y="756" width="3" height="15" fill="rgb(206,184,49)"/><text x="24.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="21" y="772" width="3" height="15" fill="rgb(229,220,29)"/><text x="24.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="21" y="788" width="3" height="15" fill="rgb(213,147,41)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="21" y="804" width="3" height="15" fill="rgb(229,156,35)"/><text x="24.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/__init__.py:1) (1 samples, 0.20%)</title><rect x="21" y="820" width="3" height="15" fill="rgb(249,171,1)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="21" y="836" width="3" height="15" fill="rgb(237,223,18)"/><text x="24.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="21" y="852" width="3" height="15" fill="rgb(207,175,31)"/><text x="24.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="21" y="868" width="3" height="15" fill="rgb(252,217,18)"/><text x="24.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="21" y="884" width="3" height="15" fill="rgb(237,96,49)"/><text x="24.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="21" y="900" width="3" height="15" fill="rgb(236,207,27)"/><text x="24.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/_base.py:33) (1 samples, 0.20%)</title><rect x="21" y="916" width="3" height="15" fill="rgb(212,16,54)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="21" y="932" width="3" height="15" fill="rgb(235,10,54)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="21" y="948" width="3" height="15" fill="rgb(239,24,2)"/><text x="24.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="21" y="964" width="3" height="15" fill="rgb(225,47,17)"/><text x="24.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="21" y="980" width="3" height="15" fill="rgb(233,81,3)"/><text x="24.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="21" y="996" width="3" height="15" fill="rgb(237,139,18)"/><text x="24.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/io/parsers.py:19) (1 samples, 0.20%)</title><rect x="21" y="1012" width="3" height="15" fill="rgb(210,182,19)"/><text x="24.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="21" y="1028" width="3" height="15" fill="rgb(212,39,20)"/><text x="24.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="21" y="1044" width="3" height="15" fill="rgb(246,67,14)"/><text x="24.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.20%)</title><rect x="21" y="1060" width="3" height="15" fill="rgb(249,30,38)"/><text x="24.00" y="1070.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.20%)</title><rect x="21" y="1076" width="3" height="15" fill="rgb(216,137,14)"/><text x="24.00" y="1086.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.20%)</title><rect x="21" y="1092" width="3" height="15" fill="rgb(239,45,24)"/><text x="24.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="21" y="1108" width="3" height="15" fill="rgb(221,163,31)"/><text x="24.00" y="1118.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="1124" width="3" height="15" fill="rgb(207,87,47)"/><text x="24.00" y="1134.50"></text></g><g><title>0x7f5dbbbdb995 (libdl-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="1140" width="3" height="15" fill="rgb(229,41,43)"/><text x="24.00" y="1150.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="1156" width="3" height="15" fill="rgb(249,74,39)"/><text x="24.00" y="1166.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="1172" width="3" height="15" fill="rgb(236,45,54)"/><text x="24.00" y="1182.50"></text></g><g><title>0x7f5dbbbdb258 (libdl-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="1188" width="3" height="15" fill="rgb(207,71,49)"/><text x="24.00" y="1198.50"></text></g><g><title>0x7f5dbbc28d7a (ld-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="1204" width="3" height="15" fill="rgb(224,138,12)"/><text x="24.00" y="1214.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="1220" width="3" height="15" fill="rgb(214,204,52)"/><text x="24.00" y="1230.50"></text></g><g><title>0x7f5dbbc2918b (ld-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="1236" width="3" height="15" fill="rgb(236,106,7)"/><text x="24.00" y="1246.50"></text></g><g><title>0x7f5dbbc1ebcb (ld-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="1252" width="3" height="15" fill="rgb(250,191,1)"/><text x="24.00" y="1262.50"></text></g><g><title>0x7f5dbbc1d1b6 (ld-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="1268" width="3" height="15" fill="rgb(232,74,37)"/><text x="24.00" y="1278.50"></text></g><g><title>0x7f5dbbc30a04 (ld-2.29.so) (1 samples, 0.20%)</title><rect x="21" y="1284" width="3" height="15" fill="rgb(224,48,32)"/><text x="24.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.20%)</title><rect x="24" y="628" width="2" height="15" fill="rgb(244,133,51)"/><text x="27.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="24" y="644" width="2" height="15" fill="rgb(243,7,42)"/><text x="27.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="24" y="660" width="2" height="15" fill="rgb(230,48,34)"/><text x="27.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="24" y="676" width="2" height="15" fill="rgb(208,38,48)"/><text x="27.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="24" y="692" width="2" height="15" fill="rgb(252,129,25)"/><text x="27.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="24" y="708" width="2" height="15" fill="rgb(225,81,3)"/><text x="27.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.20%)</title><rect x="24" y="724" width="2" height="15" fill="rgb(210,152,36)"/><text x="27.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="24" y="740" width="2" height="15" fill="rgb(213,57,26)"/><text x="27.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="24" y="756" width="2" height="15" fill="rgb(205,147,22)"/><text x="27.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="24" y="772" width="2" height="15" fill="rgb(246,73,22)"/><text x="27.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="24" y="788" width="2" height="15" fill="rgb(241,32,6)"/><text x="27.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="24" y="804" width="2" height="15" fill="rgb(242,106,50)"/><text x="27.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.20%)</title><rect x="24" y="820" width="2" height="15" fill="rgb(230,213,20)"/><text x="27.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="24" y="836" width="2" height="15" fill="rgb(205,215,19)"/><text x="27.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="24" y="852" width="2" height="15" fill="rgb(243,48,51)"/><text x="27.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="24" y="868" width="2" height="15" fill="rgb(225,212,26)"/><text x="27.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.20%)</title><rect x="24" y="884" width="2" height="15" fill="rgb(228,164,50)"/><text x="27.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="24" y="900" width="2" height="15" fill="rgb(241,153,37)"/><text x="27.00" y="910.50"></text></g><g><title>0x7f5d91cd040e (?) (1 samples, 0.20%)</title><rect x="24" y="916" width="2" height="15" fill="rgb(209,196,42)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="24" y="932" width="2" height="15" fill="rgb(235,70,11)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="24" y="948" width="2" height="15" fill="rgb(248,120,50)"/><text x="27.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="24" y="964" width="2" height="15" fill="rgb(218,42,18)"/><text x="27.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.20%)</title><rect x="24" y="980" width="2" height="15" fill="rgb(243,122,32)"/><text x="27.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="24" y="996" width="2" height="15" fill="rgb(232,124,30)"/><text x="27.00" y="1006.50"></text></g><g><title>0x7f5d91a89cd2 (?) (1 samples, 0.20%)</title><rect x="24" y="1012" width="2" height="15" fill="rgb(207,178,26)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="24" y="1028" width="2" height="15" fill="rgb(221,192,25)"/><text x="27.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="24" y="1044" width="2" height="15" fill="rgb(252,174,45)"/><text x="27.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="24" y="1060" width="2" height="15" fill="rgb(207,5,52)"/><text x="27.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.20%)</title><rect x="24" y="1076" width="2" height="15" fill="rgb(228,9,1)"/><text x="27.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="24" y="1092" width="2" height="15" fill="rgb(223,11,53)"/><text x="27.00" y="1102.50"></text></g><g><title>0x7f5d9117f0e5 (?) (1 samples, 0.20%)</title><rect x="24" y="1108" width="2" height="15" fill="rgb(251,80,8)"/><text x="27.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="24" y="1124" width="2" height="15" fill="rgb(232,32,40)"/><text x="27.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="24" y="1140" width="2" height="15" fill="rgb(221,58,37)"/><text x="27.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="24" y="1156" width="2" height="15" fill="rgb(233,9,53)"/><text x="27.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.20%)</title><rect x="24" y="1172" width="2" height="15" fill="rgb(234,221,20)"/><text x="27.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="24" y="1188" width="2" height="15" fill="rgb(226,56,30)"/><text x="27.00" y="1198.50"></text></g><g><title>0x7f5d90f03e68 (?) (1 samples, 0.20%)</title><rect x="24" y="1204" width="2" height="15" fill="rgb(219,47,32)"/><text x="27.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="24" y="1220" width="2" height="15" fill="rgb(238,130,35)"/><text x="27.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="24" y="1236" width="2" height="15" fill="rgb(242,196,27)"/><text x="27.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="24" y="1252" width="2" height="15" fill="rgb(238,65,44)"/><text x="27.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.20%)</title><rect x="24" y="1268" width="2" height="15" fill="rgb(224,103,5)"/><text x="27.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="24" y="1284" width="2" height="15" fill="rgb(205,207,21)"/><text x="27.00" y="1294.50"></text></g><g><title>0x7f5d90c942fb (?) (1 samples, 0.20%)</title><rect x="24" y="1300" width="2" height="15" fill="rgb(222,81,22)"/><text x="27.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="24" y="1316" width="2" height="15" fill="rgb(225,90,31)"/><text x="27.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="24" y="1332" width="2" height="15" fill="rgb(254,10,43)"/><text x="27.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="24" y="1348" width="2" height="15" fill="rgb(220,28,39)"/><text x="27.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.20%)</title><rect x="24" y="1364" width="2" height="15" fill="rgb(254,57,44)"/><text x="27.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="24" y="1380" width="2" height="15" fill="rgb(240,39,13)"/><text x="27.00" y="1390.50"></text></g><g><title>0x7f5d90a78153 (?) (1 samples, 0.20%)</title><rect x="24" y="1396" width="2" height="15" fill="rgb(228,214,51)"/><text x="27.00" y="1406.50"></text></g><g><title>0x7f5d90a76c13 (?) (1 samples, 0.20%)</title><rect x="24" y="1412" width="2" height="15" fill="rgb(205,27,2)"/><text x="27.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="24" y="1428" width="2" height="15" fill="rgb(209,73,47)"/><text x="27.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="24" y="1444" width="2" height="15" fill="rgb(222,142,23)"/><text x="27.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="24" y="1460" width="2" height="15" fill="rgb(241,6,32)"/><text x="27.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.20%)</title><rect x="24" y="1476" width="2" height="15" fill="rgb(236,202,36)"/><text x="27.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="24" y="1492" width="2" height="15" fill="rgb(244,182,52)"/><text x="27.00" y="1502.50"></text></g><g><title>0x7f5d90813181 (?) (1 samples, 0.20%)</title><rect x="24" y="1508" width="2" height="15" fill="rgb(240,177,54)"/><text x="27.00" y="1518.50"></text></g><g><title>0x7f5d908161c9 (?) (1 samples, 0.20%)</title><rect x="24" y="1524" width="2" height="15" fill="rgb(230,199,5)"/><text x="27.00" y="1534.50"></text></g><g><title>0x7f5d90842167 (?) (1 samples, 0.20%)</title><rect x="24" y="1540" width="2" height="15" fill="rgb(242,125,52)"/><text x="27.00" y="1550.50"></text></g><g><title>0x7f5d9083db64 (?) (1 samples, 0.20%)</title><rect x="24" y="1556" width="2" height="15" fill="rgb(229,71,46)"/><text x="27.00" y="1566.50"></text></g><g><title>0x7f5d9082107b (?) (1 samples, 0.20%)</title><rect x="24" y="1572" width="2" height="15" fill="rgb(234,15,39)"/><text x="27.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py:101) (1 samples, 0.20%)</title><rect x="24" y="1588" width="2" height="15" fill="rgb(226,131,42)"/><text x="27.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py:1104) (1 samples, 0.20%)</title><rect x="24" y="1604" width="2" height="15" fill="rgb(242,103,46)"/><text x="27.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py:114) (1 samples, 0.20%)</title><rect x="24" y="1620" width="2" height="15" fill="rgb(231,28,19)"/><text x="27.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py:108) (1 samples, 0.20%)</title><rect x="24" y="1636" width="2" height="15" fill="rgb(215,109,35)"/><text x="27.00" y="1646.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="24" y="1652" width="2" height="15" fill="rgb(221,59,16)"/><text x="27.00" y="1662.50"></text></g><g><title>0x7f5dbb954b12 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="24" y="1668" width="2" height="15" fill="rgb(220,198,1)"/><text x="27.00" y="1678.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.61%)</title><rect x="21" y="436" width="8" height="15" fill="rgb(212,105,11)"/><text x="24.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.61%)</title><rect x="21" y="452" width="8" height="15" fill="rgb(209,120,4)"/><text x="24.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.61%)</title><rect x="21" y="468" width="8" height="15" fill="rgb(214,88,16)"/><text x="24.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.61%)</title><rect x="21" y="484" width="8" height="15" fill="rgb(247,67,44)"/><text x="24.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.61%)</title><rect x="21" y="500" width="8" height="15" fill="rgb(232,174,24)"/><text x="24.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.61%)</title><rect x="21" y="516" width="8" height="15" fill="rgb(228,212,16)"/><text x="24.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.61%)</title><rect x="21" y="532" width="8" height="15" fill="rgb(232,227,29)"/><text x="24.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.61%)</title><rect x="21" y="548" width="8" height="15" fill="rgb(238,28,44)"/><text x="24.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.61%)</title><rect x="21" y="564" width="8" height="15" fill="rgb(245,13,11)"/><text x="24.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.61%)</title><rect x="21" y="580" width="8" height="15" fill="rgb(227,18,13)"/><text x="24.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.61%)</title><rect x="21" y="596" width="8" height="15" fill="rgb(209,75,45)"/><text x="24.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.61%)</title><rect x="21" y="612" width="8" height="15" fill="rgb(237,105,18)"/><text x="24.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.20%)</title><rect x="26" y="628" width="3" height="15" fill="rgb(209,229,8)"/><text x="29.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="26" y="644" width="3" height="15" fill="rgb(240,39,12)"/><text x="29.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="26" y="660" width="3" height="15" fill="rgb(243,19,42)"/><text x="29.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="26" y="676" width="3" height="15" fill="rgb(225,181,2)"/><text x="29.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="26" y="692" width="3" height="15" fill="rgb(214,171,6)"/><text x="29.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="26" y="708" width="3" height="15" fill="rgb(213,21,21)"/><text x="29.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.20%)</title><rect x="26" y="724" width="3" height="15" fill="rgb(243,18,1)"/><text x="29.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="26" y="740" width="3" height="15" fill="rgb(235,105,48)"/><text x="29.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="26" y="756" width="3" height="15" fill="rgb(237,123,31)"/><text x="29.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="26" y="772" width="3" height="15" fill="rgb(223,148,33)"/><text x="29.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="26" y="788" width="3" height="15" fill="rgb(232,79,22)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="26" y="804" width="3" height="15" fill="rgb(219,18,53)"/><text x="29.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.20%)</title><rect x="26" y="820" width="3" height="15" fill="rgb(239,161,18)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="26" y="836" width="3" height="15" fill="rgb(237,61,16)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="26" y="852" width="3" height="15" fill="rgb(227,162,21)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="26" y="868" width="3" height="15" fill="rgb(233,108,17)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="26" y="884" width="3" height="15" fill="rgb(238,107,51)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="26" y="900" width="3" height="15" fill="rgb(238,173,41)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.20%)</title><rect x="26" y="916" width="3" height="15" fill="rgb(223,29,51)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="26" y="932" width="3" height="15" fill="rgb(234,113,45)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="26" y="948" width="3" height="15" fill="rgb(210,86,8)"/><text x="29.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="26" y="964" width="3" height="15" fill="rgb(237,78,46)"/><text x="29.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="26" y="980" width="3" height="15" fill="rgb(250,194,52)"/><text x="29.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="26" y="996" width="3" height="15" fill="rgb(206,9,0)"/><text x="29.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.20%)</title><rect x="26" y="1012" width="3" height="15" fill="rgb(210,64,16)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="26" y="1028" width="3" height="15" fill="rgb(254,90,45)"/><text x="29.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="26" y="1044" width="3" height="15" fill="rgb(222,192,28)"/><text x="29.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="26" y="1060" width="3" height="15" fill="rgb(231,93,28)"/><text x="29.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="26" y="1076" width="3" height="15" fill="rgb(253,96,23)"/><text x="29.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="26" y="1092" width="3" height="15" fill="rgb(219,28,13)"/><text x="29.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.20%)</title><rect x="26" y="1108" width="3" height="15" fill="rgb(212,210,26)"/><text x="29.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="26" y="1124" width="3" height="15" fill="rgb(240,93,6)"/><text x="29.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="26" y="1140" width="3" height="15" fill="rgb(233,21,21)"/><text x="29.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="26" y="1156" width="3" height="15" fill="rgb(243,151,40)"/><text x="29.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="26" y="1172" width="3" height="15" fill="rgb(244,112,46)"/><text x="29.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="26" y="1188" width="3" height="15" fill="rgb(206,77,7)"/><text x="29.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.20%)</title><rect x="26" y="1204" width="3" height="15" fill="rgb(218,58,28)"/><text x="29.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="26" y="1220" width="3" height="15" fill="rgb(230,186,54)"/><text x="29.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="26" y="1236" width="3" height="15" fill="rgb(225,86,42)"/><text x="29.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="26" y="1252" width="3" height="15" fill="rgb(241,65,51)"/><text x="29.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="26" y="1268" width="3" height="15" fill="rgb(235,108,3)"/><text x="29.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="26" y="1284" width="3" height="15" fill="rgb(240,35,30)"/><text x="29.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.20%)</title><rect x="26" y="1300" width="3" height="15" fill="rgb(207,87,5)"/><text x="29.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="26" y="1316" width="3" height="15" fill="rgb(218,176,13)"/><text x="29.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="26" y="1332" width="3" height="15" fill="rgb(231,169,28)"/><text x="29.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="26" y="1348" width="3" height="15" fill="rgb(212,17,41)"/><text x="29.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="26" y="1364" width="3" height="15" fill="rgb(239,63,32)"/><text x="29.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="26" y="1380" width="3" height="15" fill="rgb(249,59,5)"/><text x="29.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.20%)</title><rect x="26" y="1396" width="3" height="15" fill="rgb(227,159,1)"/><text x="29.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="26" y="1412" width="3" height="15" fill="rgb(230,52,19)"/><text x="29.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="26" y="1428" width="3" height="15" fill="rgb(220,23,19)"/><text x="29.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="26" y="1444" width="3" height="15" fill="rgb(214,112,12)"/><text x="29.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="26" y="1460" width="3" height="15" fill="rgb(234,197,25)"/><text x="29.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="26" y="1476" width="3" height="15" fill="rgb(245,136,41)"/><text x="29.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.20%)</title><rect x="26" y="1492" width="3" height="15" fill="rgb(213,211,40)"/><text x="29.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="26" y="1508" width="3" height="15" fill="rgb(215,58,44)"/><text x="29.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.20%)</title><rect x="26" y="1524" width="3" height="15" fill="rgb(234,87,49)"/><text x="29.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="26" y="1540" width="3" height="15" fill="rgb(224,166,31)"/><text x="29.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="26" y="1556" width="3" height="15" fill="rgb(226,86,37)"/><text x="29.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="26" y="1572" width="3" height="15" fill="rgb(227,171,12)"/><text x="29.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="26" y="1588" width="3" height="15" fill="rgb(244,74,6)"/><text x="29.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="26" y="1604" width="3" height="15" fill="rgb(218,116,14)"/><text x="29.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="26" y="1620" width="3" height="15" fill="rgb(221,170,2)"/><text x="29.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.20%)</title><rect x="26" y="1636" width="3" height="15" fill="rgb(220,170,41)"/><text x="29.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="26" y="1652" width="3" height="15" fill="rgb(222,179,46)"/><text x="29.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="26" y="1668" width="3" height="15" fill="rgb(236,81,19)"/><text x="29.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="26" y="1684" width="3" height="15" fill="rgb(248,61,24)"/><text x="29.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="26" y="1700" width="3" height="15" fill="rgb(214,177,24)"/><text x="29.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="26" y="1716" width="3" height="15" fill="rgb(247,128,47)"/><text x="29.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="26" y="1732" width="3" height="15" fill="rgb(210,102,23)"/><text x="29.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="26" y="1748" width="3" height="15" fill="rgb(234,154,53)"/><text x="29.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.20%)</title><rect x="26" y="1764" width="3" height="15" fill="rgb(248,131,10)"/><text x="29.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="26" y="1780" width="3" height="15" fill="rgb(222,54,28)"/><text x="29.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="26" y="1796" width="3" height="15" fill="rgb(207,41,10)"/><text x="29.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="26" y="1812" width="3" height="15" fill="rgb(240,56,28)"/><text x="29.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="26" y="1828" width="3" height="15" fill="rgb(254,142,48)"/><text x="29.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="26" y="1844" width="3" height="15" fill="rgb(231,51,29)"/><text x="29.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (1 samples, 0.20%)</title><rect x="26" y="1860" width="3" height="15" fill="rgb(235,83,12)"/><text x="29.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="26" y="1876" width="3" height="15" fill="rgb(243,70,35)"/><text x="29.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="26" y="1892" width="3" height="15" fill="rgb(239,23,26)"/><text x="29.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="26" y="1908" width="3" height="15" fill="rgb(251,28,21)"/><text x="29.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="26" y="1924" width="3" height="15" fill="rgb(248,3,1)"/><text x="29.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="26" y="1940" width="3" height="15" fill="rgb(240,224,6)"/><text x="29.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py:5653) (1 samples, 0.20%)</title><rect x="26" y="1956" width="3" height="15" fill="rgb(213,163,32)"/><text x="29.00" y="1966.50"></text></g><g><title>setParseAction (pyparsing.py:1555) (1 samples, 0.20%)</title><rect x="26" y="1972" width="3" height="15" fill="rgb(251,35,28)"/><text x="29.00" y="1982.50"></text></g><g><title>_trim_arity (pyparsing.py:1308) (1 samples, 0.20%)</title><rect x="26" y="1988" width="3" height="15" fill="rgb(232,110,45)"/><text x="29.00" y="1998.50"></text></g><g><title>extract_stack (pyparsing.py:1292) (1 samples, 0.20%)</title><rect x="26" y="2004" width="3" height="15" fill="rgb(221,208,19)"/><text x="29.00" y="2014.50"></text></g><g><title>extract_stack (traceback.py:211) (1 samples, 0.20%)</title><rect x="26" y="2020" width="3" height="15" fill="rgb(232,23,4)"/><text x="29.00" y="2030.50"></text></g><g><title>extract (traceback.py:363) (1 samples, 0.20%)</title><rect x="26" y="2036" width="3" height="15" fill="rgb(225,168,43)"/><text x="29.00" y="2046.50"></text></g><g><title>line (traceback.py:285) (1 samples, 0.20%)</title><rect x="26" y="2052" width="3" height="15" fill="rgb(243,157,16)"/><text x="29.00" y="2062.50"></text></g><g><title>getline (linecache.py:16) (1 samples, 0.20%)</title><rect x="26" y="2068" width="3" height="15" fill="rgb(240,28,51)"/><text x="29.00" y="2078.50"></text></g><g><title>getlines (linecache.py:47) (1 samples, 0.20%)</title><rect x="26" y="2084" width="3" height="15" fill="rgb(246,68,49)"/><text x="29.00" y="2094.50"></text></g><g><title>updatecache (linecache.py:137) (1 samples, 0.20%)</title><rect x="26" y="2100" width="3" height="15" fill="rgb(248,65,41)"/><text x="29.00" y="2110.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.20%)</title><rect x="29" y="1108" width="2" height="15" fill="rgb(250,168,32)"/><text x="32.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="29" y="1124" width="2" height="15" fill="rgb(242,176,49)"/><text x="32.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="29" y="1140" width="2" height="15" fill="rgb(226,121,14)"/><text x="32.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="29" y="1156" width="2" height="15" fill="rgb(240,118,19)"/><text x="32.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="29" y="1172" width="2" height="15" fill="rgb(206,173,38)"/><text x="32.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="29" y="1188" width="2" height="15" fill="rgb(254,189,15)"/><text x="32.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.20%)</title><rect x="29" y="1204" width="2" height="15" fill="rgb(247,45,45)"/><text x="32.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="29" y="1220" width="2" height="15" fill="rgb(247,106,54)"/><text x="32.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="29" y="1236" width="2" height="15" fill="rgb(221,119,44)"/><text x="32.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="29" y="1252" width="2" height="15" fill="rgb(229,197,39)"/><text x="32.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="29" y="1268" width="2" height="15" fill="rgb(206,158,2)"/><text x="32.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="29" y="1284" width="2" height="15" fill="rgb(240,163,6)"/><text x="32.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.20%)</title><rect x="29" y="1300" width="2" height="15" fill="rgb(245,122,33)"/><text x="32.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.20%)</title><rect x="29" y="1316" width="2" height="15" fill="rgb(209,117,7)"/><text x="32.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.20%)</title><rect x="29" y="1332" width="2" height="15" fill="rgb(236,136,34)"/><text x="32.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.20%)</title><rect x="29" y="1348" width="2" height="15" fill="rgb(213,219,50)"/><text x="32.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.20%)</title><rect x="29" y="1364" width="2" height="15" fill="rgb(232,47,15)"/><text x="32.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.20%)</title><rect x="29" y="1380" width="2" height="15" fill="rgb(227,228,13)"/><text x="32.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.20%)</title><rect x="29" y="1396" width="2" height="15" fill="rgb(235,90,7)"/><text x="32.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.20%)</title><rect x="29" y="1412" width="2" height="15" fill="rgb(237,139,6)"/><text x="32.00" y="1422.50"></text></g><g><title>_compile (re.py:274) (1 samples, 0.20%)</title><rect x="29" y="1428" width="2" height="15" fill="rgb(208,71,26)"/><text x="32.00" y="1438.50"></text></g><g><title>__get__ (types.py:171) (1 samples, 0.20%)</title><rect x="29" y="1444" width="2" height="15" fill="rgb(239,131,33)"/><text x="32.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.20%)</title><rect x="31" y="1108" width="2" height="15" fill="rgb(250,177,40)"/><text x="34.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="31" y="1124" width="2" height="15" fill="rgb(221,140,22)"/><text x="34.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="31" y="1140" width="2" height="15" fill="rgb(235,19,10)"/><text x="34.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="31" y="1156" width="2" height="15" fill="rgb(210,51,21)"/><text x="34.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="31" y="1172" width="2" height="15" fill="rgb(222,65,45)"/><text x="34.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="31" y="1188" width="2" height="15" fill="rgb(251,169,12)"/><text x="34.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:20) (1 samples, 0.20%)</title><rect x="31" y="1204" width="2" height="15" fill="rgb(205,123,4)"/><text x="34.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="31" y="1220" width="2" height="15" fill="rgb(221,228,41)"/><text x="34.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="31" y="1236" width="2" height="15" fill="rgb(230,43,7)"/><text x="34.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="31" y="1252" width="2" height="15" fill="rgb(213,87,48)"/><text x="34.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="31" y="1268" width="2" height="15" fill="rgb(209,10,22)"/><text x="34.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="31" y="1284" width="2" height="15" fill="rgb(223,147,2)"/><text x="34.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/gaussian_process/__init__.py:14) (1 samples, 0.20%)</title><rect x="31" y="1300" width="2" height="15" fill="rgb(240,98,50)"/><text x="34.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="31" y="1316" width="2" height="15" fill="rgb(215,14,3)"/><text x="34.00" y="1326.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.20%)</title><rect x="33" y="1460" width="3" height="15" fill="rgb(225,206,26)"/><text x="36.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.20%)</title><rect x="33" y="1476" width="3" height="15" fill="rgb(214,102,32)"/><text x="36.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.20%)</title><rect x="33" y="1492" width="3" height="15" fill="rgb(217,126,52)"/><text x="36.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.20%)</title><rect x="33" y="1508" width="3" height="15" fill="rgb(228,165,38)"/><text x="36.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.20%)</title><rect x="33" y="1524" width="3" height="15" fill="rgb(218,71,7)"/><text x="36.00" y="1534.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.20%)</title><rect x="33" y="1540" width="3" height="15" fill="rgb(213,118,7)"/><text x="36.00" y="1550.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.20%)</title><rect x="33" y="1556" width="3" height="15" fill="rgb(208,68,29)"/><text x="36.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:78) (1 samples, 0.20%)</title><rect x="33" y="1572" width="3" height="15" fill="rgb(207,64,24)"/><text x="36.00" y="1582.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:4) (12 samples, 2.44%)</title><rect x="10" y="52" width="28" height="15" fill="rgb(217,33,2)"/><text x="13.00" y="62.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 2.44%)</title><rect x="10" y="68" width="28" height="15" fill="rgb(243,165,11)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 2.44%)</title><rect x="10" y="84" width="28" height="15" fill="rgb(250,46,37)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 2.44%)</title><rect x="10" y="100" width="28" height="15" fill="rgb(214,8,48)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 2.44%)</title><rect x="10" y="116" width="28" height="15" fill="rgb(235,156,24)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 2.44%)</title><rect x="10" y="132" width="28" height="15" fill="rgb(242,65,42)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3.py:7) (10 samples, 2.03%)</title><rect x="14" y="148" width="24" height="15" fill="rgb(248,177,15)"/><text x="17.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 2.03%)</title><rect x="14" y="164" width="24" height="15" fill="rgb(224,153,13)"/><text x="17.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 2.03%)</title><rect x="14" y="180" width="24" height="15" fill="rgb(232,170,25)"/><text x="17.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 2.03%)</title><rect x="14" y="196" width="24" height="15" fill="rgb(232,69,38)"/><text x="17.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 2.03%)</title><rect x="14" y="212" width="24" height="15" fill="rgb(252,69,12)"/><text x="17.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 2.03%)</title><rect x="14" y="228" width="24" height="15" fill="rgb(232,157,34)"/><text x="17.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (7 samples, 1.42%)</title><rect x="21" y="244" width="17" height="15" fill="rgb(244,29,49)"/><text x="24.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.42%)</title><rect x="21" y="260" width="17" height="15" fill="rgb(243,196,20)"/><text x="24.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.42%)</title><rect x="21" y="276" width="17" height="15" fill="rgb(221,228,14)"/><text x="24.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.42%)</title><rect x="21" y="292" width="17" height="15" fill="rgb(222,66,53)"/><text x="24.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.42%)</title><rect x="21" y="308" width="17" height="15" fill="rgb(225,8,36)"/><text x="24.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.42%)</title><rect x="21" y="324" width="17" height="15" fill="rgb(233,78,43)"/><text x="24.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (7 samples, 1.42%)</title><rect x="21" y="340" width="17" height="15" fill="rgb(226,61,33)"/><text x="24.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.42%)</title><rect x="21" y="356" width="17" height="15" fill="rgb(234,47,31)"/><text x="24.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.42%)</title><rect x="21" y="372" width="17" height="15" fill="rgb(214,125,21)"/><text x="24.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.42%)</title><rect x="21" y="388" width="17" height="15" fill="rgb(239,212,5)"/><text x="24.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.42%)</title><rect x="21" y="404" width="17" height="15" fill="rgb(218,75,29)"/><text x="24.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.42%)</title><rect x="21" y="420" width="17" height="15" fill="rgb(232,129,10)"/><text x="24.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 0.81%)</title><rect x="29" y="436" width="9" height="15" fill="rgb(215,188,46)"/><text x="32.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.81%)</title><rect x="29" y="452" width="9" height="15" fill="rgb(239,95,10)"/><text x="32.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.81%)</title><rect x="29" y="468" width="9" height="15" fill="rgb(234,197,21)"/><text x="32.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.81%)</title><rect x="29" y="484" width="9" height="15" fill="rgb(221,223,14)"/><text x="32.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.81%)</title><rect x="29" y="500" width="9" height="15" fill="rgb(208,4,45)"/><text x="32.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.81%)</title><rect x="29" y="516" width="9" height="15" fill="rgb(249,180,27)"/><text x="32.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.81%)</title><rect x="29" y="532" width="9" height="15" fill="rgb(227,53,20)"/><text x="32.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.81%)</title><rect x="29" y="548" width="9" height="15" fill="rgb(218,172,36)"/><text x="32.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.81%)</title><rect x="29" y="564" width="9" height="15" fill="rgb(251,117,40)"/><text x="32.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 0.81%)</title><rect x="29" y="580" width="9" height="15" fill="rgb(206,41,11)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.81%)</title><rect x="29" y="596" width="9" height="15" fill="rgb(227,223,32)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.81%)</title><rect x="29" y="612" width="9" height="15" fill="rgb(216,73,13)"/><text x="32.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.81%)</title><rect x="29" y="628" width="9" height="15" fill="rgb(227,188,33)"/><text x="32.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.81%)</title><rect x="29" y="644" width="9" height="15" fill="rgb(234,186,16)"/><text x="32.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.81%)</title><rect x="29" y="660" width="9" height="15" fill="rgb(236,153,20)"/><text x="32.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 0.81%)</title><rect x="29" y="676" width="9" height="15" fill="rgb(246,203,30)"/><text x="32.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.81%)</title><rect x="29" y="692" width="9" height="15" fill="rgb(248,195,54)"/><text x="32.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.81%)</title><rect x="29" y="708" width="9" height="15" fill="rgb(227,111,19)"/><text x="32.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.81%)</title><rect x="29" y="724" width="9" height="15" fill="rgb(245,151,40)"/><text x="32.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.81%)</title><rect x="29" y="740" width="9" height="15" fill="rgb(208,116,20)"/><text x="32.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.81%)</title><rect x="29" y="756" width="9" height="15" fill="rgb(249,152,21)"/><text x="32.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 0.81%)</title><rect x="29" y="772" width="9" height="15" fill="rgb(233,221,0)"/><text x="32.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.81%)</title><rect x="29" y="788" width="9" height="15" fill="rgb(237,95,2)"/><text x="32.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.81%)</title><rect x="29" y="804" width="9" height="15" fill="rgb(214,200,40)"/><text x="32.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.81%)</title><rect x="29" y="820" width="9" height="15" fill="rgb(235,106,25)"/><text x="32.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.81%)</title><rect x="29" y="836" width="9" height="15" fill="rgb(237,124,53)"/><text x="32.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.81%)</title><rect x="29" y="852" width="9" height="15" fill="rgb(216,225,44)"/><text x="32.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 0.81%)</title><rect x="29" y="868" width="9" height="15" fill="rgb(215,80,8)"/><text x="32.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.81%)</title><rect x="29" y="884" width="9" height="15" fill="rgb(216,180,17)"/><text x="32.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.81%)</title><rect x="29" y="900" width="9" height="15" fill="rgb(229,7,18)"/><text x="32.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.81%)</title><rect x="29" y="916" width="9" height="15" fill="rgb(205,100,3)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.81%)</title><rect x="29" y="932" width="9" height="15" fill="rgb(224,123,45)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.81%)</title><rect x="29" y="948" width="9" height="15" fill="rgb(208,46,38)"/><text x="32.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.81%)</title><rect x="29" y="964" width="9" height="15" fill="rgb(209,110,15)"/><text x="32.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.81%)</title><rect x="29" y="980" width="9" height="15" fill="rgb(217,205,15)"/><text x="32.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.81%)</title><rect x="29" y="996" width="9" height="15" fill="rgb(239,105,52)"/><text x="32.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 0.81%)</title><rect x="29" y="1012" width="9" height="15" fill="rgb(205,35,36)"/><text x="32.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.81%)</title><rect x="29" y="1028" width="9" height="15" fill="rgb(211,184,5)"/><text x="32.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.81%)</title><rect x="29" y="1044" width="9" height="15" fill="rgb(234,186,4)"/><text x="32.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.81%)</title><rect x="29" y="1060" width="9" height="15" fill="rgb(228,112,37)"/><text x="32.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.81%)</title><rect x="29" y="1076" width="9" height="15" fill="rgb(249,150,13)"/><text x="32.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.81%)</title><rect x="29" y="1092" width="9" height="15" fill="rgb(205,0,24)"/><text x="32.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.41%)</title><rect x="33" y="1108" width="5" height="15" fill="rgb(229,53,26)"/><text x="36.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.41%)</title><rect x="33" y="1124" width="5" height="15" fill="rgb(240,120,1)"/><text x="36.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="33" y="1140" width="5" height="15" fill="rgb(215,157,45)"/><text x="36.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="33" y="1156" width="5" height="15" fill="rgb(237,31,13)"/><text x="36.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="33" y="1172" width="5" height="15" fill="rgb(249,174,32)"/><text x="36.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="33" y="1188" width="5" height="15" fill="rgb(218,55,4)"/><text x="36.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="33" y="1204" width="5" height="15" fill="rgb(221,4,2)"/><text x="36.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="33" y="1220" width="5" height="15" fill="rgb(219,183,4)"/><text x="36.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.41%)</title><rect x="33" y="1236" width="5" height="15" fill="rgb(231,169,44)"/><text x="36.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.41%)</title><rect x="33" y="1252" width="5" height="15" fill="rgb(247,61,52)"/><text x="36.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="33" y="1268" width="5" height="15" fill="rgb(233,186,13)"/><text x="36.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="33" y="1284" width="5" height="15" fill="rgb(247,28,14)"/><text x="36.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="33" y="1300" width="5" height="15" fill="rgb(238,168,49)"/><text x="36.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="33" y="1316" width="5" height="15" fill="rgb(251,53,13)"/><text x="36.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="33" y="1332" width="5" height="15" fill="rgb(211,77,26)"/><text x="36.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="33" y="1348" width="5" height="15" fill="rgb(238,28,49)"/><text x="36.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.41%)</title><rect x="33" y="1364" width="5" height="15" fill="rgb(228,184,8)"/><text x="36.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="33" y="1380" width="5" height="15" fill="rgb(229,24,12)"/><text x="36.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="33" y="1396" width="5" height="15" fill="rgb(229,130,22)"/><text x="36.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="33" y="1412" width="5" height="15" fill="rgb(244,195,46)"/><text x="36.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="33" y="1428" width="5" height="15" fill="rgb(238,165,5)"/><text x="36.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="33" y="1444" width="5" height="15" fill="rgb(210,83,22)"/><text x="36.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.20%)</title><rect x="36" y="1460" width="2" height="15" fill="rgb(224,157,18)"/><text x="39.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="36" y="1476" width="2" height="15" fill="rgb(253,177,42)"/><text x="39.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="36" y="1492" width="2" height="15" fill="rgb(214,113,17)"/><text x="39.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="36" y="1508" width="2" height="15" fill="rgb(234,15,18)"/><text x="39.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="36" y="1524" width="2" height="15" fill="rgb(239,202,32)"/><text x="39.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="36" y="1540" width="2" height="15" fill="rgb(219,208,34)"/><text x="39.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.20%)</title><rect x="36" y="1556" width="2" height="15" fill="rgb(227,40,32)"/><text x="39.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.20%)</title><rect x="36" y="1572" width="2" height="15" fill="rgb(252,80,16)"/><text x="39.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.20%)</title><rect x="36" y="1588" width="2" height="15" fill="rgb(254,99,49)"/><text x="39.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.20%)</title><rect x="36" y="1604" width="2" height="15" fill="rgb(211,87,20)"/><text x="39.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.20%)</title><rect x="36" y="1620" width="2" height="15" fill="rgb(209,112,19)"/><text x="39.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.20%)</title><rect x="36" y="1636" width="2" height="15" fill="rgb(242,170,32)"/><text x="39.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py:901) (1 samples, 0.20%)</title><rect x="36" y="1652" width="2" height="15" fill="rgb(232,139,20)"/><text x="39.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.20%)</title><rect x="36" y="1668" width="2" height="15" fill="rgb(253,184,7)"/><text x="39.00" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.20%)</title><rect x="36" y="1684" width="2" height="15" fill="rgb(252,69,46)"/><text x="39.00" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.20%)</title><rect x="36" y="1700" width="2" height="15" fill="rgb(225,154,49)"/><text x="39.00" y="1710.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.20%)</title><rect x="36" y="1716" width="2" height="15" fill="rgb(231,196,28)"/><text x="39.00" y="1726.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.20%)</title><rect x="36" y="1732" width="2" height="15" fill="rgb(211,112,26)"/><text x="39.00" y="1742.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.20%)</title><rect x="36" y="1748" width="2" height="15" fill="rgb(232,92,24)"/><text x="39.00" y="1758.50"></text></g><g><title>parse_if (jinja2/parser.py:212) (1 samples, 0.20%)</title><rect x="36" y="1764" width="2" height="15" fill="rgb(242,111,15)"/><text x="39.00" y="1774.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.20%)</title><rect x="36" y="1780" width="2" height="15" fill="rgb(232,134,44)"/><text x="39.00" y="1790.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.20%)</title><rect x="36" y="1796" width="2" height="15" fill="rgb(247,181,21)"/><text x="39.00" y="1806.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.20%)</title><rect x="36" y="1812" width="2" height="15" fill="rgb(212,197,4)"/><text x="39.00" y="1822.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.20%)</title><rect x="36" y="1828" width="2" height="15" fill="rgb(219,26,18)"/><text x="39.00" y="1838.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.20%)</title><rect x="36" y="1844" width="2" height="15" fill="rgb(206,68,17)"/><text x="39.00" y="1854.50"></text></g><g><title>subparse (jinja2/parser.py:878) (1 samples, 0.20%)</title><rect x="36" y="1860" width="2" height="15" fill="rgb(251,79,21)"/><text x="39.00" y="1870.50"></text></g><g><title>flush_data (jinja2/parser.py:862) (1 samples, 0.20%)</title><rect x="36" y="1876" width="2" height="15" fill="rgb(211,89,16)"/><text x="39.00" y="1886.50"></text></g><g><title>__init__ (jinja2/nodes.py:140) (1 samples, 0.20%)</title><rect x="36" y="1892" width="2" height="15" fill="rgb(224,5,44)"/><text x="39.00" y="1902.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py:40) (1 samples, 0.20%)</title><rect x="38" y="132" width="3" height="15" fill="rgb(253,72,20)"/><text x="41.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="38" y="148" width="3" height="15" fill="rgb(217,136,46)"/><text x="41.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="38" y="164" width="3" height="15" fill="rgb(228,201,14)"/><text x="41.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="38" y="180" width="3" height="15" fill="rgb(240,201,31)"/><text x="41.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="38" y="196" width="3" height="15" fill="rgb(212,14,49)"/><text x="41.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="38" y="212" width="3" height="15" fill="rgb(215,159,48)"/><text x="41.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py:9) (1 samples, 0.20%)</title><rect x="38" y="228" width="3" height="15" fill="rgb(212,138,38)"/><text x="41.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="38" y="244" width="3" height="15" fill="rgb(222,29,35)"/><text x="41.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="38" y="260" width="3" height="15" fill="rgb(237,156,35)"/><text x="41.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="38" y="276" width="3" height="15" fill="rgb(243,117,40)"/><text x="41.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="38" y="292" width="3" height="15" fill="rgb(254,1,41)"/><text x="41.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="38" y="308" width="3" height="15" fill="rgb(252,7,4)"/><text x="41.00" y="318.50"></text></g><g><title>&lt;module&gt; (lightgbm/callback.py:39) (1 samples, 0.20%)</title><rect x="38" y="324" width="3" height="15" fill="rgb(209,166,30)"/><text x="41.00" y="334.50"></text></g><g><title>setup_profile0 (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:25) (2 samples, 0.41%)</title><rect x="38" y="84" width="5" height="15" fill="rgb(254,162,54)"/><text x="41.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (2 samples, 0.41%)</title><rect x="38" y="100" width="5" height="15" fill="rgb(238,64,11)"/><text x="41.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:188) (2 samples, 0.41%)</title><rect x="38" y="116" width="5" height="15" fill="rgb(213,107,51)"/><text x="41.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py:54) (1 samples, 0.20%)</title><rect x="41" y="132" width="2" height="15" fill="rgb(218,111,2)"/><text x="44.00" y="142.50"></text></g><g><title>update_registered_converter (skl2onnx/_supported_operators.py:295) (1 samples, 0.20%)</title><rect x="41" y="148" width="2" height="15" fill="rgb(234,86,41)"/><text x="44.00" y="158.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1592) (1 samples, 0.20%)</title><rect x="43" y="180" width="2" height="15" fill="rgb(239,61,52)"/><text x="46.00" y="190.50"></text></g><g><title>pairwise_distances (sklearn/metrics/pairwise.py:1749) (1 samples, 0.20%)</title><rect x="43" y="196" width="2" height="15" fill="rgb(209,172,6)"/><text x="46.00" y="206.50"></text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py:1348) (1 samples, 0.20%)</title><rect x="43" y="212" width="2" height="15" fill="rgb(228,123,47)"/><text x="46.00" y="222.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:304) (1 samples, 0.20%)</title><rect x="43" y="228" width="2" height="15" fill="rgb(234,212,18)"/><text x="46.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="43" y="244" width="2" height="15" fill="rgb(229,45,20)"/><text x="46.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="43" y="260" width="2" height="15" fill="rgb(227,41,48)"/><text x="46.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.20%)</title><rect x="43" y="276" width="2" height="15" fill="rgb(225,120,39)"/><text x="46.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.20%)</title><rect x="43" y="292" width="2" height="15" fill="rgb(242,142,1)"/><text x="46.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:322) (1 samples, 0.20%)</title><rect x="43" y="308" width="2" height="15" fill="rgb(249,49,1)"/><text x="46.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.20%)</title><rect x="43" y="324" width="2" height="15" fill="rgb(211,47,42)"/><text x="46.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.20%)</title><rect x="43" y="340" width="2" height="15" fill="rgb(223,135,5)"/><text x="46.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.20%)</title><rect x="43" y="356" width="2" height="15" fill="rgb(206,76,46)"/><text x="46.00" y="366.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:47) (6 samples, 1.22%)</title><rect x="38" y="52" width="15" height="15" fill="rgb(246,194,10)"/><text x="41.00" y="62.50"></text></g><g><title>profile0_skl (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:46) (6 samples, 1.22%)</title><rect x="38" y="68" width="15" height="15" fill="rgb(234,141,37)"/><text x="41.00" y="78.50"></text></g><g><title>setup_profile0 (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:26) (4 samples, 0.81%)</title><rect x="43" y="84" width="10" height="15" fill="rgb(250,173,41)"/><text x="46.00" y="94.50"></text></g><g><title>profile0 (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:18) (4 samples, 0.81%)</title><rect x="43" y="100" width="10" height="15" fill="rgb(233,83,30)"/><text x="46.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 0.81%)</title><rect x="43" y="116" width="10" height="15" fill="rgb(226,132,11)"/><text x="46.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (4 samples, 0.81%)</title><rect x="43" y="132" width="10" height="15" fill="rgb(251,198,49)"/><text x="46.00" y="142.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:174) (4 samples, 0.81%)</title><rect x="43" y="148" width="10" height="15" fill="rgb(246,23,47)"/><text x="46.00" y="158.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:642) (4 samples, 0.81%)</title><rect x="43" y="164" width="10" height="15" fill="rgb(245,10,23)"/><text x="46.00" y="174.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1601) (3 samples, 0.61%)</title><rect x="45" y="180" width="8" height="15" fill="rgb(210,176,2)"/><text x="48.00" y="190.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:517) (3 samples, 0.61%)</title><rect x="45" y="196" width="8" height="15" fill="rgb(246,207,6)"/><text x="48.00" y="206.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (3 samples, 0.61%)</title><rect x="45" y="212" width="8" height="15" fill="rgb(233,43,12)"/><text x="48.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.61%)</title><rect x="45" y="228" width="8" height="15" fill="rgb(232,30,39)"/><text x="48.00" y="238.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (3 samples, 0.61%)</title><rect x="45" y="244" width="8" height="15" fill="rgb(246,37,47)"/><text x="48.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.61%)</title><rect x="45" y="260" width="8" height="15" fill="rgb(213,82,40)"/><text x="48.00" y="270.50"></text></g><g><title>array_argpartition (methods.c:1454) (3 samples, 0.61%)</title><rect x="45" y="276" width="8" height="15" fill="rgb(229,126,31)"/><text x="48.00" y="286.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (3 samples, 0.61%)</title><rect x="45" y="292" width="8" height="15" fill="rgb(232,55,46)"/><text x="48.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c:1084) (3 samples, 0.61%)</title><rect x="45" y="308" width="8" height="15" fill="rgb(208,156,18)"/><text x="48.00" y="318.50"></text></g><g><title>aintroselect_double (selection.c.src:322) (3 samples, 0.61%)</title><rect x="45" y="324" width="8" height="15" fill="rgb(240,171,33)"/><text x="48.00" y="334.50"></text></g><g><title>adumb_select_double (selection.c.src:258) (3 samples, 0.61%)</title><rect x="45" y="340" width="8" height="15" fill="rgb(247,171,13)"/><text x="48.00" y="350.50"></text></g><g><title>DOUBLE_LT (npysort_common.h:130) (3 samples, 0.61%)</title><rect x="45" y="356" width="8" height="15" fill="rgb(247,73,27)"/><text x="48.00" y="366.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.20%)</title><rect x="53" y="164" width="2" height="15" fill="rgb(248,96,32)"/><text x="56.00" y="174.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.20%)</title><rect x="53" y="180" width="2" height="15" fill="rgb(209,169,27)"/><text x="56.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.20%)</title><rect x="55" y="164" width="2" height="15" fill="rgb(234,195,11)"/><text x="58.00" y="174.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.20%)</title><rect x="55" y="180" width="2" height="15" fill="rgb(223,165,0)"/><text x="58.00" y="190.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.20%)</title><rect x="55" y="196" width="2" height="15" fill="rgb(238,5,0)"/><text x="58.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.20%)</title><rect x="57" y="164" width="3" height="15" fill="rgb(205,98,6)"/><text x="60.00" y="174.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.20%)</title><rect x="57" y="180" width="3" height="15" fill="rgb(238,53,53)"/><text x="60.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.20%)</title><rect x="57" y="196" width="3" height="15" fill="rgb(225,83,34)"/><text x="60.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.20%)</title><rect x="60" y="164" width="2" height="15" fill="rgb(214,43,27)"/><text x="63.00" y="174.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.20%)</title><rect x="60" y="180" width="2" height="15" fill="rgb(244,204,37)"/><text x="63.00" y="190.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:172) (5 samples, 1.02%)</title><rect x="53" y="148" width="12" height="15" fill="rgb(211,89,3)"/><text x="56.00" y="158.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.20%)</title><rect x="62" y="164" width="3" height="15" fill="rgb(224,4,25)"/><text x="65.00" y="174.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.20%)</title><rect x="62" y="180" width="3" height="15" fill="rgb(208,3,39)"/><text x="65.00" y="190.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:583) (1 samples, 0.20%)</title><rect x="65" y="164" width="2" height="15" fill="rgb(210,60,9)"/><text x="68.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.20%)</title><rect x="65" y="180" width="2" height="15" fill="rgb(247,18,12)"/><text x="68.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.20%)</title><rect x="65" y="196" width="2" height="15" fill="rgb(209,15,15)"/><text x="68.00" y="206.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:604) (1 samples, 0.20%)</title><rect x="67" y="164" width="2" height="15" fill="rgb(241,227,36)"/><text x="70.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.20%)</title><rect x="67" y="180" width="2" height="15" fill="rgb(220,218,34)"/><text x="70.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.20%)</title><rect x="67" y="196" width="2" height="15" fill="rgb(214,193,1)"/><text x="70.00" y="206.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:620) (1 samples, 0.20%)</title><rect x="69" y="164" width="3" height="15" fill="rgb(239,35,16)"/><text x="72.00" y="174.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py:388) (1 samples, 0.20%)</title><rect x="69" y="180" width="3" height="15" fill="rgb(206,49,33)"/><text x="72.00" y="190.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (1 samples, 0.20%)</title><rect x="69" y="196" width="3" height="15" fill="rgb(228,91,24)"/><text x="72.00" y="206.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:634) (1 samples, 0.20%)</title><rect x="72" y="164" width="2" height="15" fill="rgb(223,48,7)"/><text x="75.00" y="174.50"></text></g><g><title>0x7f5dbba31da2 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="72" y="180" width="2" height="15" fill="rgb(247,11,36)"/><text x="75.00" y="190.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1583) (1 samples, 0.20%)</title><rect x="74" y="180" width="3" height="15" fill="rgb(253,145,45)"/><text x="77.00" y="190.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1586) (1 samples, 0.20%)</title><rect x="77" y="180" width="2" height="15" fill="rgb(233,198,32)"/><text x="80.00" y="190.50"></text></g><g><title>gen_batches (sklearn/utils/__init__.py:774) (1 samples, 0.20%)</title><rect x="77" y="196" width="2" height="15" fill="rgb(218,167,24)"/><text x="80.00" y="206.50"></text></g><g><title>0x7f5dbb9741ef (libc-2.29.so) (1 samples, 0.20%)</title><rect x="77" y="212" width="2" height="15" fill="rgb(244,132,23)"/><text x="80.00" y="222.50"></text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py:1347) (1 samples, 0.20%)</title><rect x="79" y="212" width="2" height="15" fill="rgb(221,12,54)"/><text x="82.00" y="222.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py:388) (1 samples, 0.20%)</title><rect x="79" y="228" width="2" height="15" fill="rgb(236,105,45)"/><text x="82.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (1 samples, 0.20%)</title><rect x="79" y="244" width="2" height="15" fill="rgb(210,10,28)"/><text x="82.00" y="254.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (1 samples, 0.20%)</title><rect x="79" y="260" width="2" height="15" fill="rgb(246,70,12)"/><text x="82.00" y="270.50"></text></g><g><title>0x7f5dbb974120 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="79" y="276" width="2" height="15" fill="rgb(207,124,32)"/><text x="82.00" y="286.50"></text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py:128) (1 samples, 0.20%)</title><rect x="81" y="244" width="3" height="15" fill="rgb(216,176,28)"/><text x="84.00" y="254.50"></text></g><g><title>_return_float_dtype (sklearn/metrics/pairwise.py:42) (1 samples, 0.20%)</title><rect x="81" y="260" width="3" height="15" fill="rgb(235,20,2)"/><text x="84.00" y="270.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.20%)</title><rect x="81" y="276" width="3" height="15" fill="rgb(213,211,48)"/><text x="84.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.20%)</title><rect x="84" y="260" width="2" height="15" fill="rgb(243,185,7)"/><text x="87.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.41%)</title><rect x="86" y="260" width="5" height="15" fill="rgb(225,48,15)"/><text x="89.00" y="270.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.20%)</title><rect x="89" y="276" width="2" height="15" fill="rgb(247,110,43)"/><text x="92.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.20%)</title><rect x="91" y="276" width="2" height="15" fill="rgb(254,209,49)"/><text x="94.00" y="286.50"></text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py:141) (5 samples, 1.02%)</title><rect x="84" y="244" width="12" height="15" fill="rgb(238,49,50)"/><text x="87.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.41%)</title><rect x="91" y="260" width="5" height="15" fill="rgb(213,87,29)"/><text x="94.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.20%)</title><rect x="93" y="276" width="3" height="15" fill="rgb(234,151,35)"/><text x="96.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.20%)</title><rect x="96" y="260" width="2" height="15" fill="rgb(226,152,32)"/><text x="99.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.20%)</title><rect x="96" y="276" width="2" height="15" fill="rgb(211,109,27)"/><text x="99.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.20%)</title><rect x="98" y="260" width="3" height="15" fill="rgb(248,186,24)"/><text x="101.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.20%)</title><rect x="98" y="276" width="3" height="15" fill="rgb(253,137,27)"/><text x="101.00" y="286.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:262) (9 samples, 1.83%)</title><rect x="81" y="228" width="22" height="15" fill="rgb(238,21,33)"/><text x="84.00" y="238.50">e..</text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py:144) (3 samples, 0.61%)</title><rect x="96" y="244" width="7" height="15" fill="rgb(211,108,10)"/><text x="99.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:566) (1 samples, 0.20%)</title><rect x="101" y="260" width="2" height="15" fill="rgb(226,197,7)"/><text x="104.00" y="270.50"></text></g><g><title>unbuffered_loop_nop2_ndim2 (einsum.c.src:2392) (1 samples, 0.20%)</title><rect x="103" y="340" width="2" height="15" fill="rgb(207,133,6)"/><text x="106.00" y="350.50"></text></g><g><title>double_sum_of_products_contig_contig_outstride0_two (einsum.c.src:595) (1 samples, 0.20%)</title><rect x="103" y="356" width="2" height="15" fill="rgb(240,145,22)"/><text x="106.00" y="366.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:279) (2 samples, 0.41%)</title><rect x="103" y="228" width="5" height="15" fill="rgb(218,170,39)"/><text x="106.00" y="238.50"></text></g><g><title>row_norms (sklearn/utils/extmath.py:74) (2 samples, 0.41%)</title><rect x="103" y="244" width="5" height="15" fill="rgb(210,14,45)"/><text x="106.00" y="254.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;:6) (2 samples, 0.41%)</title><rect x="103" y="260" width="5" height="15" fill="rgb(224,37,33)"/><text x="106.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.41%)</title><rect x="103" y="276" width="5" height="15" fill="rgb(226,128,1)"/><text x="106.00" y="286.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py:1356) (2 samples, 0.41%)</title><rect x="103" y="292" width="5" height="15" fill="rgb(234,116,46)"/><text x="106.00" y="302.50"></text></g><g><title>array_einsum (multiarraymodule.c:2693) (2 samples, 0.41%)</title><rect x="103" y="308" width="5" height="15" fill="rgb(249,209,46)"/><text x="106.00" y="318.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src:2803) (2 samples, 0.41%)</title><rect x="103" y="324" width="5" height="15" fill="rgb(252,218,42)"/><text x="106.00" y="334.50"></text></g><g><title>unbuffered_loop_nop2_ndim2 (einsum.c.src:2394) (1 samples, 0.20%)</title><rect x="105" y="340" width="3" height="15" fill="rgb(222,163,41)"/><text x="108.00" y="350.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:295) (1 samples, 0.20%)</title><rect x="108" y="228" width="2" height="15" fill="rgb(205,198,31)"/><text x="111.00" y="238.50"></text></g><g><title>row_norms (sklearn/utils/extmath.py:74) (1 samples, 0.20%)</title><rect x="108" y="244" width="2" height="15" fill="rgb(230,216,16)"/><text x="111.00" y="254.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.20%)</title><rect x="108" y="260" width="2" height="15" fill="rgb(233,199,38)"/><text x="111.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.20%)</title><rect x="108" y="276" width="2" height="15" fill="rgb(230,11,33)"/><text x="111.00" y="286.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py:1356) (1 samples, 0.20%)</title><rect x="108" y="292" width="2" height="15" fill="rgb(246,0,19)"/><text x="111.00" y="302.50"></text></g><g><title>array_einsum (multiarraymodule.c:2693) (1 samples, 0.20%)</title><rect x="108" y="308" width="2" height="15" fill="rgb(241,176,41)"/><text x="111.00" y="318.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src:2803) (1 samples, 0.20%)</title><rect x="108" y="324" width="2" height="15" fill="rgb(210,34,34)"/><text x="111.00" y="334.50"></text></g><g><title>unbuffered_loop_nop2_ndim2 (einsum.c.src:2392) (1 samples, 0.20%)</title><rect x="108" y="340" width="2" height="15" fill="rgb(238,53,43)"/><text x="111.00" y="350.50"></text></g><g><title>double_sum_of_products_contig_contig_outstride0_two (einsum.c.src:592) (1 samples, 0.20%)</title><rect x="108" y="356" width="2" height="15" fill="rgb(215,11,7)"/><text x="111.00" y="366.50"></text></g><g><title>try_binary_elide (temp_elide.c:349) (1 samples, 0.20%)</title><rect x="110" y="260" width="3" height="15" fill="rgb(254,176,2)"/><text x="113.00" y="270.50"></text></g><g><title>can_elide_temp (temp_elide.c:303) (1 samples, 0.20%)</title><rect x="110" y="276" width="3" height="15" fill="rgb(244,204,19)"/><text x="113.00" y="286.50"></text></g><g><title>PyArray_EnsureArray (ctors.c:2769) (1 samples, 0.20%)</title><rect x="110" y="292" width="3" height="15" fill="rgb(242,16,9)"/><text x="113.00" y="302.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.20%)</title><rect x="110" y="308" width="3" height="15" fill="rgb(229,61,0)"/><text x="113.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.20%)</title><rect x="110" y="324" width="3" height="15" fill="rgb(246,228,32)"/><text x="113.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.20%)</title><rect x="110" y="340" width="3" height="15" fill="rgb(222,198,39)"/><text x="113.00" y="350.50"></text></g><g><title>sse2_binary_scalar2_multiply_DOUBLE (simd.inc.src:763) (1 samples, 0.20%)</title><rect x="113" y="340" width="2" height="15" fill="rgb(215,87,48)"/><text x="116.00" y="350.50"></text></g><g><title>array_multiply (number.c:350) (5 samples, 1.02%)</title><rect x="110" y="244" width="12" height="15" fill="rgb(239,168,19)"/><text x="113.00" y="254.50"></text></g><g><title>try_binary_elide (temp_elide.c:350) (4 samples, 0.81%)</title><rect x="113" y="260" width="9" height="15" fill="rgb(240,44,20)"/><text x="116.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.81%)</title><rect x="113" y="276" width="9" height="15" fill="rgb(249,162,36)"/><text x="116.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.81%)</title><rect x="113" y="292" width="9" height="15" fill="rgb(243,124,38)"/><text x="116.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (4 samples, 0.81%)</title><rect x="113" y="308" width="9" height="15" fill="rgb(247,15,10)"/><text x="116.00" y="318.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (4 samples, 0.81%)</title><rect x="113" y="324" width="9" height="15" fill="rgb(253,24,43)"/><text x="116.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_multiply_DOUBLE (simd.inc.src:765) (3 samples, 0.61%)</title><rect x="115" y="340" width="7" height="15" fill="rgb(217,122,25)"/><text x="118.00" y="350.50"></text></g><g><title>_mm_mul_pd (emmintrin.h:253) (3 samples, 0.61%)</title><rect x="115" y="356" width="7" height="15" fill="rgb(244,67,11)"/><text x="118.00" y="366.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.20%)</title><rect x="122" y="260" width="3" height="15" fill="rgb(236,136,4)"/><text x="125.00" y="270.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 1.02%)</title><rect x="125" y="260" width="12" height="15" fill="rgb(219,111,7)"/><text x="128.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (1 samples, 0.20%)</title><rect x="137" y="292" width="2" height="15" fill="rgb(250,199,33)"/><text x="140.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.20%)</title><rect x="137" y="308" width="2" height="15" fill="rgb(210,226,14)"/><text x="140.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="139" y="404" width="2" height="15" fill="rgb(230,168,23)"/><text x="142.00" y="414.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:303) (24 samples, 4.88%)</title><rect x="110" y="228" width="58" height="15" fill="rgb(213,116,37)"/><text x="113.00" y="238.50">euclid..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (19 samples, 3.86%)</title><rect x="122" y="244" width="46" height="15" fill="rgb(248,157,11)"/><text x="125.00" y="254.50">safe..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 2.64%)</title><rect x="137" y="260" width="31" height="15" fill="rgb(247,151,35)"/><text x="140.00" y="270.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (13 samples, 2.64%)</title><rect x="137" y="276" width="31" height="15" fill="rgb(227,223,7)"/><text x="140.00" y="286.50">Py..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (12 samples, 2.44%)</title><rect x="139" y="292" width="29" height="15" fill="rgb(229,199,2)"/><text x="142.00" y="302.50">Py..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (12 samples, 2.44%)</title><rect x="139" y="308" width="29" height="15" fill="rgb(245,172,22)"/><text x="142.00" y="318.50">DO..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 2.44%)</title><rect x="139" y="324" width="29" height="15" fill="rgb(211,160,54)"/><text x="142.00" y="334.50">cb..</text></g><g><title>dgemm_thread_tn (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 2.44%)</title><rect x="139" y="340" width="29" height="15" fill="rgb(227,39,29)"/><text x="142.00" y="350.50">dg..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 2.44%)</title><rect x="139" y="356" width="29" height="15" fill="rgb(247,207,25)"/><text x="142.00" y="366.50">ge..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 2.44%)</title><rect x="139" y="372" width="29" height="15" fill="rgb(218,190,18)"/><text x="142.00" y="382.50">ex..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 2.44%)</title><rect x="139" y="388" width="29" height="15" fill="rgb(251,85,38)"/><text x="142.00" y="398.50">ex..</text></g><g><title>sched_yield (libc-2.29.so) (11 samples, 2.24%)</title><rect x="141" y="404" width="27" height="15" fill="rgb(223,18,54)"/><text x="144.00" y="414.50">s..</text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.20%)</title><rect x="168" y="292" width="2" height="15" fill="rgb(224,97,44)"/><text x="171.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.20%)</title><rect x="168" y="308" width="2" height="15" fill="rgb(208,136,15)"/><text x="171.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2790) (1 samples, 0.20%)</title><rect x="168" y="324" width="2" height="15" fill="rgb(226,62,28)"/><text x="171.00" y="334.50"></text></g><g><title>solve_may_have_internal_overlap (mem_overlap.c:853) (1 samples, 0.20%)</title><rect x="168" y="340" width="2" height="15" fill="rgb(235,87,50)"/><text x="171.00" y="350.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.20%)</title><rect x="170" y="340" width="3" height="15" fill="rgb(235,211,5)"/><text x="173.00" y="350.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.20%)</title><rect x="170" y="356" width="3" height="15" fill="rgb(233,21,9)"/><text x="173.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.41%)</title><rect x="170" y="308" width="5" height="15" fill="rgb(244,164,12)"/><text x="173.00" y="318.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.41%)</title><rect x="170" y="324" width="5" height="15" fill="rgb(212,52,21)"/><text x="173.00" y="334.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.20%)</title><rect x="173" y="340" width="2" height="15" fill="rgb(218,106,29)"/><text x="176.00" y="350.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.20%)</title><rect x="173" y="356" width="2" height="15" fill="rgb(236,55,14)"/><text x="176.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (4 samples, 0.81%)</title><rect x="175" y="340" width="10" height="15" fill="rgb(234,19,45)"/><text x="178.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (3 samples, 0.61%)</title><rect x="177" y="356" width="8" height="15" fill="rgb(241,7,39)"/><text x="180.00" y="366.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:304) (8 samples, 1.63%)</title><rect x="168" y="228" width="19" height="15" fill="rgb(246,138,15)"/><text x="171.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.63%)</title><rect x="168" y="244" width="19" height="15" fill="rgb(207,69,11)"/><text x="171.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 1.63%)</title><rect x="168" y="260" width="19" height="15" fill="rgb(216,94,53)"/><text x="171.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 1.63%)</title><rect x="168" y="276" width="19" height="15" fill="rgb(254,209,35)"/><text x="171.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (7 samples, 1.42%)</title><rect x="170" y="292" width="17" height="15" fill="rgb(225,67,34)"/><text x="173.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:322) (5 samples, 1.02%)</title><rect x="175" y="308" width="12" height="15" fill="rgb(246,35,6)"/><text x="178.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 1.02%)</title><rect x="175" y="324" width="12" height="15" fill="rgb(251,78,25)"/><text x="178.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1078) (1 samples, 0.20%)</title><rect x="185" y="340" width="2" height="15" fill="rgb(249,167,1)"/><text x="188.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.20%)</title><rect x="185" y="356" width="2" height="15" fill="rgb(241,126,46)"/><text x="188.00" y="366.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:600) (1 samples, 0.20%)</title><rect x="187" y="340" width="2" height="15" fill="rgb(244,129,26)"/><text x="190.00" y="350.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (5 samples, 1.02%)</title><rect x="189" y="340" width="12" height="15" fill="rgb(248,97,19)"/><text x="192.00" y="350.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (5 samples, 1.02%)</title><rect x="189" y="356" width="12" height="15" fill="rgb(233,172,46)"/><text x="192.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (9 samples, 1.83%)</title><rect x="187" y="308" width="22" height="15" fill="rgb(242,73,48)"/><text x="190.00" y="318.50">D..</text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (9 samples, 1.83%)</title><rect x="187" y="324" width="22" height="15" fill="rgb(207,134,12)"/><text x="190.00" y="334.50">r..</text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (3 samples, 0.61%)</title><rect x="201" y="340" width="8" height="15" fill="rgb(250,75,54)"/><text x="204.00" y="350.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (3 samples, 0.61%)</title><rect x="201" y="356" width="8" height="15" fill="rgb(216,167,54)"/><text x="204.00" y="366.50"></text></g><g><title>0x7f5dbb973f3a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="209" y="356" width="2" height="15" fill="rgb(241,65,41)"/><text x="212.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.41%)</title><rect x="209" y="340" width="4" height="15" fill="rgb(231,76,17)"/><text x="212.00" y="350.50"></text></g><g><title>0x7f5dbb973f4e (libc-2.29.so) (1 samples, 0.20%)</title><rect x="211" y="356" width="2" height="15" fill="rgb(245,165,10)"/><text x="214.00" y="366.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:305) (12 samples, 2.44%)</title><rect x="187" y="228" width="29" height="15" fill="rgb(253,154,44)"/><text x="190.00" y="238.50">eu..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 2.44%)</title><rect x="187" y="244" width="29" height="15" fill="rgb(213,2,9)"/><text x="190.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 2.44%)</title><rect x="187" y="260" width="29" height="15" fill="rgb(235,4,10)"/><text x="190.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (12 samples, 2.44%)</title><rect x="187" y="276" width="29" height="15" fill="rgb(224,50,40)"/><text x="190.00" y="286.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (12 samples, 2.44%)</title><rect x="187" y="292" width="29" height="15" fill="rgb(216,48,14)"/><text x="190.00" y="302.50">it..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:322) (3 samples, 0.61%)</title><rect x="209" y="308" width="7" height="15" fill="rgb(224,218,48)"/><text x="212.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.61%)</title><rect x="209" y="324" width="7" height="15" fill="rgb(238,160,33)"/><text x="212.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1078) (1 samples, 0.20%)</title><rect x="213" y="340" width="3" height="15" fill="rgb(219,1,1)"/><text x="216.00" y="350.50"></text></g><g><title>0x7f5dbb973f5d (libc-2.29.so) (1 samples, 0.20%)</title><rect x="213" y="356" width="3" height="15" fill="rgb(208,130,23)"/><text x="216.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.20%)</title><rect x="216" y="244" width="2" height="15" fill="rgb(234,3,44)"/><text x="219.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="216" y="260" width="2" height="15" fill="rgb(243,18,53)"/><text x="219.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.20%)</title><rect x="216" y="276" width="2" height="15" fill="rgb(229,215,53)"/><text x="219.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.20%)</title><rect x="216" y="292" width="2" height="15" fill="rgb(229,59,49)"/><text x="219.00" y="302.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1867) (5 samples, 1.02%)</title><rect x="218" y="308" width="12" height="15" fill="rgb(237,100,11)"/><text x="221.00" y="318.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (5 samples, 1.02%)</title><rect x="230" y="308" width="12" height="15" fill="rgb(221,212,32)"/><text x="233.00" y="318.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1592) (71 samples, 14.43%)</title><rect x="79" y="180" width="170" height="15" fill="rgb(230,146,54)"/><text x="82.00" y="190.50">pairwise_distances_chu..</text></g><g><title>pairwise_distances (sklearn/metrics/pairwise.py:1749) (71 samples, 14.43%)</title><rect x="79" y="196" width="170" height="15" fill="rgb(248,56,21)"/><text x="82.00" y="206.50">pairwise_distances (sk..</text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py:1348) (70 samples, 14.23%)</title><rect x="81" y="212" width="168" height="15" fill="rgb(245,23,34)"/><text x="84.00" y="222.50">_parallel_pairwise (s..</text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:306) (14 samples, 2.85%)</title><rect x="216" y="228" width="33" height="15" fill="rgb(230,121,15)"/><text x="219.00" y="238.50">eu..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 2.64%)</title><rect x="218" y="244" width="31" height="15" fill="rgb(237,43,7)"/><text x="221.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (13 samples, 2.64%)</title><rect x="218" y="260" width="31" height="15" fill="rgb(236,160,32)"/><text x="221.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (13 samples, 2.64%)</title><rect x="218" y="276" width="31" height="15" fill="rgb(206,53,14)"/><text x="221.00" y="286.50">ex..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (13 samples, 2.64%)</title><rect x="218" y="292" width="31" height="15" fill="rgb(225,224,47)"/><text x="221.00" y="302.50">tr..</text></g><g><title>DOUBLE_maximum (loops.c.src:1872) (3 samples, 0.61%)</title><rect x="242" y="308" width="7" height="15" fill="rgb(215,163,19)"/><text x="245.00" y="318.50"></text></g><g><title>array_argpartition (methods.c:1451) (1 samples, 0.20%)</title><rect x="249" y="276" width="3" height="15" fill="rgb(222,113,43)"/><text x="252.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.20%)</title><rect x="249" y="292" width="3" height="15" fill="rgb(218,158,40)"/><text x="252.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.20%)</title><rect x="249" y="308" width="3" height="15" fill="rgb(235,217,20)"/><text x="252.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.20%)</title><rect x="249" y="324" width="3" height="15" fill="rgb(235,183,3)"/><text x="252.00" y="334.50"></text></g><g><title>adumb_select_double (selection.c.src:257) (9 samples, 1.83%)</title><rect x="252" y="340" width="21" height="15" fill="rgb(240,53,50)"/><text x="255.00" y="350.50"></text></g><g><title>adumb_select_double (selection.c.src:258) (40 samples, 8.13%)</title><rect x="273" y="340" width="96" height="15" fill="rgb(244,112,8)"/><text x="276.00" y="350.50">adumb_selec..</text></g><g><title>DOUBLE_LT (npysort_common.h:130) (37 samples, 7.52%)</title><rect x="281" y="356" width="88" height="15" fill="rgb(225,213,40)"/><text x="284.00" y="366.50">DOUBLE_LT ..</text></g><g><title>aintroselect_double (selection.c.src:322) (50 samples, 10.16%)</title><rect x="252" y="324" width="120" height="15" fill="rgb(211,197,18)"/><text x="255.00" y="334.50">aintroselect_d..</text></g><g><title>adumb_select_double (selection.c.src:260) (1 samples, 0.20%)</title><rect x="369" y="340" width="3" height="15" fill="rgb(228,123,0)"/><text x="372.00" y="350.50"></text></g><g><title>store_pivot (selection.c.src:47) (1 samples, 0.20%)</title><rect x="372" y="340" width="2" height="15" fill="rgb(227,135,1)"/><text x="375.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1084) (52 samples, 10.57%)</title><rect x="252" y="308" width="124" height="15" fill="rgb(244,76,37)"/><text x="255.00" y="318.50">_new_argsortlik..</text></g><g><title>aintroselect_double (selection.c.src:402) (2 samples, 0.41%)</title><rect x="372" y="324" width="4" height="15" fill="rgb(238,164,12)"/><text x="375.00" y="334.50"></text></g><g><title>store_pivot (selection.c.src:54) (1 samples, 0.20%)</title><rect x="374" y="340" width="2" height="15" fill="rgb(213,20,15)"/><text x="377.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1100) (1 samples, 0.20%)</title><rect x="376" y="308" width="3" height="15" fill="rgb(238,149,31)"/><text x="379.00" y="318.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:517) (55 samples, 11.18%)</title><rect x="249" y="196" width="132" height="15" fill="rgb(219,170,54)"/><text x="252.00" y="206.50">_kneighbors_redu..</text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (55 samples, 11.18%)</title><rect x="249" y="212" width="132" height="15" fill="rgb(248,5,40)"/><text x="252.00" y="222.50">argpartition (&lt;_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (55 samples, 11.18%)</title><rect x="249" y="228" width="132" height="15" fill="rgb(238,77,7)"/><text x="252.00" y="238.50">array_implement_..</text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (55 samples, 11.18%)</title><rect x="249" y="244" width="132" height="15" fill="rgb(248,177,6)"/><text x="252.00" y="254.50">argpartition (nu..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (55 samples, 11.18%)</title><rect x="249" y="260" width="132" height="15" fill="rgb(240,202,20)"/><text x="252.00" y="270.50">_wrapfunc (numpy..</text></g><g><title>array_argpartition (methods.c:1454) (54 samples, 10.98%)</title><rect x="252" y="276" width="129" height="15" fill="rgb(233,70,29)"/><text x="255.00" y="286.50">array_argpartiti..</text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (54 samples, 10.98%)</title><rect x="252" y="292" width="129" height="15" fill="rgb(207,13,31)"/><text x="255.00" y="302.50">PyArray_ArgParti..</text></g><g><title>_new_argsortlike (item_selection.c:1105) (1 samples, 0.20%)</title><rect x="379" y="308" width="2" height="15" fill="rgb(238,75,44)"/><text x="382.00" y="318.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:518) (1 samples, 0.20%)</title><rect x="381" y="196" width="3" height="15" fill="rgb(253,195,3)"/><text x="384.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.20%)</title><rect x="381" y="212" width="3" height="15" fill="rgb(233,99,33)"/><text x="384.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.20%)</title><rect x="381" y="228" width="3" height="15" fill="rgb(205,155,35)"/><text x="384.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.20%)</title><rect x="381" y="244" width="3" height="15" fill="rgb(219,163,20)"/><text x="384.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.20%)</title><rect x="381" y="260" width="3" height="15" fill="rgb(245,190,5)"/><text x="384.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.20%)</title><rect x="381" y="276" width="3" height="15" fill="rgb(211,59,7)"/><text x="384.00" y="286.50"></text></g><g><title>aquicksort_double (quicksort.c.src:182) (1 samples, 0.20%)</title><rect x="384" y="324" width="2" height="15" fill="rgb(228,57,30)"/><text x="387.00" y="334.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (2 samples, 0.41%)</title><rect x="384" y="212" width="4" height="15" fill="rgb(242,195,30)"/><text x="387.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.41%)</title><rect x="384" y="228" width="4" height="15" fill="rgb(240,85,37)"/><text x="387.00" y="238.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (2 samples, 0.41%)</title><rect x="384" y="244" width="4" height="15" fill="rgb(236,157,47)"/><text x="387.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.41%)</title><rect x="384" y="260" width="4" height="15" fill="rgb(217,115,10)"/><text x="387.00" y="270.50"></text></g><g><title>array_argsort (methods.c:1395) (2 samples, 0.41%)</title><rect x="384" y="276" width="4" height="15" fill="rgb(206,11,26)"/><text x="387.00" y="286.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (2 samples, 0.41%)</title><rect x="384" y="292" width="4" height="15" fill="rgb(226,214,11)"/><text x="387.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (2 samples, 0.41%)</title><rect x="384" y="308" width="4" height="15" fill="rgb(219,115,54)"/><text x="387.00" y="318.50"></text></g><g><title>aquicksort_double (quicksort.c.src:217) (1 samples, 0.20%)</title><rect x="386" y="324" width="2" height="15" fill="rgb(220,5,32)"/><text x="389.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.20%)</title><rect x="388" y="212" width="3" height="15" fill="rgb(208,136,48)"/><text x="391.00" y="222.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (1 samples, 0.20%)</title><rect x="388" y="228" width="3" height="15" fill="rgb(214,35,53)"/><text x="391.00" y="238.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (1 samples, 0.20%)</title><rect x="388" y="244" width="3" height="15" fill="rgb(212,23,47)"/><text x="391.00" y="254.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (1 samples, 0.20%)</title><rect x="388" y="260" width="3" height="15" fill="rgb(230,105,12)"/><text x="391.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.20%)</title><rect x="388" y="276" width="3" height="15" fill="rgb(225,160,32)"/><text x="391.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.20%)</title><rect x="388" y="292" width="3" height="15" fill="rgb(230,75,26)"/><text x="391.00" y="302.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2521) (1 samples, 0.20%)</title><rect x="391" y="228" width="2" height="15" fill="rgb(205,140,47)"/><text x="394.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1666) (2 samples, 0.41%)</title><rect x="391" y="212" width="5" height="15" fill="rgb(233,65,48)"/><text x="394.00" y="222.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2554) (1 samples, 0.20%)</title><rect x="393" y="228" width="3" height="15" fill="rgb(221,78,47)"/><text x="396.00" y="238.50"></text></g><g><title>check_and_adjust_index (common.h:110) (1 samples, 0.20%)</title><rect x="393" y="244" width="3" height="15" fill="rgb(228,91,26)"/><text x="396.00" y="254.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1564) (2 samples, 0.41%)</title><rect x="396" y="228" width="4" height="15" fill="rgb(234,226,54)"/><text x="399.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1577) (1 samples, 0.20%)</title><rect x="400" y="228" width="3" height="15" fill="rgb(245,23,16)"/><text x="403.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1584) (1 samples, 0.20%)</title><rect x="403" y="228" width="2" height="15" fill="rgb(250,161,34)"/><text x="406.00" y="238.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:521) (10 samples, 2.03%)</title><rect x="384" y="196" width="24" height="15" fill="rgb(212,149,41)"/><text x="387.00" y="206.50">_..</text></g><g><title>array_subscript (mapping.c:1676) (5 samples, 1.02%)</title><rect x="396" y="212" width="12" height="15" fill="rgb(207,120,36)"/><text x="399.00" y="222.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (1 samples, 0.20%)</title><rect x="405" y="228" width="3" height="15" fill="rgb(235,16,53)"/><text x="408.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.20%)</title><rect x="408" y="212" width="2" height="15" fill="rgb(225,67,32)"/><text x="411.00" y="222.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (1 samples, 0.20%)</title><rect x="408" y="228" width="2" height="15" fill="rgb(253,177,25)"/><text x="411.00" y="238.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (1 samples, 0.20%)</title><rect x="408" y="244" width="2" height="15" fill="rgb(213,65,42)"/><text x="411.00" y="254.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (1 samples, 0.20%)</title><rect x="408" y="260" width="2" height="15" fill="rgb(226,30,4)"/><text x="411.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.20%)</title><rect x="408" y="276" width="2" height="15" fill="rgb(219,157,2)"/><text x="411.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.20%)</title><rect x="408" y="292" width="2" height="15" fill="rgb(248,93,32)"/><text x="411.00" y="302.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2493) (1 samples, 0.20%)</title><rect x="410" y="228" width="2" height="15" fill="rgb(212,132,38)"/><text x="413.00" y="238.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="410" y="244" width="2" height="15" fill="rgb(238,224,51)"/><text x="413.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1666) (2 samples, 0.41%)</title><rect x="410" y="212" width="5" height="15" fill="rgb(205,111,19)"/><text x="413.00" y="222.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2521) (1 samples, 0.20%)</title><rect x="412" y="228" width="3" height="15" fill="rgb(222,222,10)"/><text x="415.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1581) (2 samples, 0.41%)</title><rect x="415" y="228" width="5" height="15" fill="rgb(226,108,49)"/><text x="418.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1676) (3 samples, 0.61%)</title><rect x="415" y="212" width="7" height="15" fill="rgb(225,65,20)"/><text x="418.00" y="222.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.20%)</title><rect x="420" y="228" width="2" height="15" fill="rgb(222,97,22)"/><text x="423.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="422" y="228" width="2" height="15" fill="rgb(208,200,53)"/><text x="425.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.20%)</title><rect x="422" y="244" width="2" height="15" fill="rgb(237,19,1)"/><text x="425.00" y="254.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.20%)</title><rect x="422" y="260" width="2" height="15" fill="rgb(219,185,14)"/><text x="425.00" y="270.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1601) (74 samples, 15.04%)</title><rect x="249" y="180" width="178" height="15" fill="rgb(208,188,0)"/><text x="252.00" y="190.50">pairwise_distances_chun..</text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:524) (8 samples, 1.63%)</title><rect x="408" y="196" width="19" height="15" fill="rgb(217,145,46)"/><text x="411.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.41%)</title><rect x="422" y="212" width="5" height="15" fill="rgb(209,65,33)"/><text x="425.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.20%)</title><rect x="424" y="228" width="3" height="15" fill="rgb(220,106,51)"/><text x="427.00" y="238.50"></text></g><g><title>_check_chunk_size (sklearn/metrics/pairwise.py:1415) (1 samples, 0.20%)</title><rect x="427" y="196" width="2" height="15" fill="rgb(215,194,40)"/><text x="430.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/metrics/pairwise.py:1415) (1 samples, 0.20%)</title><rect x="427" y="212" width="2" height="15" fill="rgb(252,156,2)"/><text x="430.00" y="222.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:642) (149 samples, 30.28%)</title><rect x="74" y="164" width="358" height="15" fill="rgb(216,202,12)"/><text x="77.00" y="174.50">kneighbors (sklearn/neighbors/_base.py:642)</text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1602) (2 samples, 0.41%)</title><rect x="427" y="180" width="5" height="15" fill="rgb(227,188,53)"/><text x="430.00" y="190.50"></text></g><g><title>_check_chunk_size (sklearn/metrics/pairwise.py:1419) (1 samples, 0.20%)</title><rect x="429" y="196" width="3" height="15" fill="rgb(242,164,43)"/><text x="432.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/metrics/pairwise.py:1419) (1 samples, 0.20%)</title><rect x="429" y="212" width="3" height="15" fill="rgb(254,54,9)"/><text x="432.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.20%)</title><rect x="429" y="228" width="3" height="15" fill="rgb(223,82,31)"/><text x="432.00" y="238.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:670) (1 samples, 0.20%)</title><rect x="432" y="164" width="2" height="15" fill="rgb(227,67,24)"/><text x="435.00" y="174.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:174) (155 samples, 31.50%)</title><rect x="65" y="148" width="371" height="15" fill="rgb(246,79,19)"/><text x="68.00" y="158.50">predict (sklearn/neighbors/_regression.py:174)</text></g><g><title>kneighbors (sklearn/neighbors/_base.py:671) (1 samples, 0.20%)</title><rect x="434" y="164" width="2" height="15" fill="rgb(214,191,20)"/><text x="437.00" y="174.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:180) (1 samples, 0.20%)</title><rect x="436" y="148" width="3" height="15" fill="rgb(232,27,48)"/><text x="439.00" y="158.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.20%)</title><rect x="436" y="164" width="3" height="15" fill="rgb(227,199,20)"/><text x="439.00" y="174.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.20%)</title><rect x="436" y="180" width="3" height="15" fill="rgb(253,88,46)"/><text x="439.00" y="190.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.20%)</title><rect x="436" y="196" width="3" height="15" fill="rgb(220,227,54)"/><text x="439.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.20%)</title><rect x="439" y="164" width="2" height="15" fill="rgb(225,105,17)"/><text x="442.00" y="174.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2937) (1 samples, 0.20%)</title><rect x="439" y="180" width="2" height="15" fill="rgb(241,102,33)"/><text x="442.00" y="190.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.20%)</title><rect x="439" y="196" width="2" height="15" fill="rgb(209,105,23)"/><text x="442.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.20%)</title><rect x="441" y="164" width="3" height="15" fill="rgb(250,55,37)"/><text x="444.00" y="174.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.20%)</title><rect x="441" y="180" width="3" height="15" fill="rgb(238,179,6)"/><text x="444.00" y="190.50"></text></g><g><title>_mean (numpy/core/_methods.py:138) (1 samples, 0.20%)</title><rect x="444" y="212" width="2" height="15" fill="rgb(206,166,8)"/><text x="447.00" y="222.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.20%)</title><rect x="446" y="276" width="2" height="15" fill="rgb(212,228,40)"/><text x="449.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.20%)</title><rect x="446" y="292" width="2" height="15" fill="rgb(211,143,10)"/><text x="449.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.20%)</title><rect x="446" y="308" width="2" height="15" fill="rgb(234,101,21)"/><text x="449.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.20%)</title><rect x="446" y="324" width="2" height="15" fill="rgb(230,68,4)"/><text x="449.00" y="334.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3869) (1 samples, 0.20%)</title><rect x="446" y="340" width="2" height="15" fill="rgb(238,152,8)"/><text x="449.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.20%)</title><rect x="446" y="356" width="2" height="15" fill="rgb(220,17,43)"/><text x="449.00" y="366.50"></text></g><g><title>0x7f5dbb973d6a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="446" y="372" width="2" height="15" fill="rgb(231,208,14)"/><text x="449.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.20%)</title><rect x="448" y="292" width="3" height="15" fill="rgb(234,202,39)"/><text x="451.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="448" y="308" width="3" height="15" fill="rgb(231,7,44)"/><text x="451.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.41%)</title><rect x="448" y="276" width="5" height="15" fill="rgb(239,190,34)"/><text x="451.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.20%)</title><rect x="451" y="292" width="2" height="15" fill="rgb(231,162,4)"/><text x="454.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.20%)</title><rect x="451" y="308" width="2" height="15" fill="rgb(245,161,41)"/><text x="454.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.20%)</title><rect x="451" y="324" width="2" height="15" fill="rgb(247,46,16)"/><text x="454.00" y="334.50"></text></g><g><title>_mean (numpy/core/_methods.py:151) (4 samples, 0.81%)</title><rect x="446" y="212" width="10" height="15" fill="rgb(252,182,37)"/><text x="449.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 0.81%)</title><rect x="446" y="228" width="10" height="15" fill="rgb(223,46,51)"/><text x="449.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 0.81%)</title><rect x="446" y="244" width="10" height="15" fill="rgb(221,102,19)"/><text x="449.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.81%)</title><rect x="446" y="260" width="10" height="15" fill="rgb(254,175,51)"/><text x="449.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.20%)</title><rect x="453" y="276" width="3" height="15" fill="rgb(243,4,23)"/><text x="456.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.20%)</title><rect x="453" y="292" width="3" height="15" fill="rgb(211,129,39)"/><text x="456.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.20%)</title><rect x="453" y="308" width="3" height="15" fill="rgb(234,136,38)"/><text x="456.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.20%)</title><rect x="453" y="324" width="3" height="15" fill="rgb(228,117,25)"/><text x="456.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1729) (1 samples, 0.20%)</title><rect x="456" y="260" width="2" height="15" fill="rgb(249,71,10)"/><text x="459.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:54) (170 samples, 34.55%)</title><rect x="53" y="52" width="407" height="15" fill="rgb(207,72,33)"/><text x="56.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_al..</text></g><g><title>profile_skl (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:53) (170 samples, 34.55%)</title><rect x="53" y="68" width="407" height="15" fill="rgb(240,82,17)"/><text x="56.00" y="78.50">profile_skl (bench_KNeighborsRegressor_default_k3_b_reg..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:37) (170 samples, 34.55%)</title><rect x="53" y="84" width="407" height="15" fill="rgb(213,214,33)"/><text x="56.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default_k3_b_r..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:31) (170 samples, 34.55%)</title><rect x="53" y="100" width="407" height="15" fill="rgb(241,110,3)"/><text x="56.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_b_reg_alg..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (170 samples, 34.55%)</title><rect x="53" y="116" width="407" height="15" fill="rgb(254,53,0)"/><text x="56.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (170 samples, 34.55%)</title><rect x="53" y="132" width="407" height="15" fill="rgb(206,9,5)"/><text x="56.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/neighbors/_regression.py:183) (9 samples, 1.83%)</title><rect x="439" y="148" width="21" height="15" fill="rgb(212,181,53)"/><text x="442.00" y="158.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:6) (7 samples, 1.42%)</title><rect x="444" y="164" width="16" height="15" fill="rgb(236,96,2)"/><text x="447.00" y="174.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 1.42%)</title><rect x="444" y="180" width="16" height="15" fill="rgb(243,60,23)"/><text x="447.00" y="190.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3257) (7 samples, 1.42%)</title><rect x="444" y="196" width="16" height="15" fill="rgb(243,167,24)"/><text x="447.00" y="206.50"></text></g><g><title>_mean (numpy/core/_methods.py:154) (2 samples, 0.41%)</title><rect x="456" y="212" width="4" height="15" fill="rgb(240,153,20)"/><text x="459.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.41%)</title><rect x="456" y="228" width="4" height="15" fill="rgb(229,209,39)"/><text x="459.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.41%)</title><rect x="456" y="244" width="4" height="15" fill="rgb(208,56,9)"/><text x="459.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.20%)</title><rect x="458" y="260" width="2" height="15" fill="rgb(215,21,8)"/><text x="461.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.20%)</title><rect x="458" y="276" width="2" height="15" fill="rgb(207,102,18)"/><text x="461.00" y="286.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src:766) (1 samples, 0.20%)</title><rect x="458" y="292" width="2" height="15" fill="rgb(238,148,22)"/><text x="461.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.20%)</title><rect x="458" y="308" width="2" height="15" fill="rgb(247,143,53)"/><text x="461.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.20%)</title><rect x="463" y="180" width="2" height="15" fill="rgb(239,176,49)"/><text x="466.00" y="190.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (1 samples, 0.20%)</title><rect x="465" y="212" width="3" height="15" fill="rgb(222,212,28)"/><text x="468.00" y="222.50"></text></g><g><title>PyArray_ToList (convert.c:120) (1 samples, 0.20%)</title><rect x="465" y="228" width="3" height="15" fill="rgb(205,229,2)"/><text x="468.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:96) (1 samples, 0.20%)</title><rect x="465" y="244" width="3" height="15" fill="rgb(245,37,21)"/><text x="468.00" y="254.50"></text></g><g><title>_array_find_python_scalar_type (common.c:41) (1 samples, 0.20%)</title><rect x="468" y="340" width="2" height="15" fill="rgb(233,218,46)"/><text x="471.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:44) (2 samples, 0.41%)</title><rect x="470" y="340" width="5" height="15" fill="rgb(210,126,31)"/><text x="473.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (1 samples, 0.20%)</title><rect x="475" y="340" width="2" height="15" fill="rgb(233,152,16)"/><text x="478.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (5 samples, 1.02%)</title><rect x="468" y="324" width="12" height="15" fill="rgb(226,224,5)"/><text x="471.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:53) (1 samples, 0.20%)</title><rect x="477" y="340" width="3" height="15" fill="rgb(223,37,0)"/><text x="480.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.20%)</title><rect x="477" y="356" width="3" height="15" fill="rgb(250,43,51)"/><text x="480.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.20%)</title><rect x="480" y="340" width="2" height="15" fill="rgb(245,120,42)"/><text x="483.00" y="350.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (7 samples, 1.42%)</title><rect x="468" y="276" width="16" height="15" fill="rgb(230,120,36)"/><text x="471.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (7 samples, 1.42%)</title><rect x="468" y="292" width="16" height="15" fill="rgb(225,70,8)"/><text x="471.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (7 samples, 1.42%)</title><rect x="468" y="308" width="16" height="15" fill="rgb(232,64,14)"/><text x="471.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (2 samples, 0.41%)</title><rect x="480" y="324" width="4" height="15" fill="rgb(223,14,18)"/><text x="483.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1079) (1 samples, 0.20%)</title><rect x="482" y="340" width="2" height="15" fill="rgb(213,41,20)"/><text x="485.00" y="350.50"></text></g><g><title>discover_dimensions (ctors.c:878) (1 samples, 0.20%)</title><rect x="484" y="292" width="3" height="15" fill="rgb(230,63,27)"/><text x="487.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:883) (2 samples, 0.41%)</title><rect x="487" y="292" width="5" height="15" fill="rgb(218,152,1)"/><text x="490.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:699) (1 samples, 0.20%)</title><rect x="492" y="308" width="2" height="15" fill="rgb(213,66,34)"/><text x="495.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (12 samples, 2.44%)</title><rect x="468" y="260" width="28" height="15" fill="rgb(244,192,1)"/><text x="471.00" y="270.50">P..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (5 samples, 1.02%)</title><rect x="484" y="276" width="12" height="15" fill="rgb(251,66,53)"/><text x="487.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:884) (2 samples, 0.41%)</title><rect x="492" y="292" width="4" height="15" fill="rgb(253,13,12)"/><text x="495.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:703) (1 samples, 0.20%)</title><rect x="494" y="308" width="2" height="15" fill="rgb(213,98,4)"/><text x="497.00" y="318.50"></text></g><g><title>setArrayFromSequence (ctors.c:537) (1 samples, 0.20%)</title><rect x="496" y="292" width="3" height="15" fill="rgb(226,209,23)"/><text x="499.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:212) (1 samples, 0.20%)</title><rect x="501" y="324" width="3" height="15" fill="rgb(223,201,34)"/><text x="504.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:119) (1 samples, 0.20%)</title><rect x="504" y="340" width="2" height="15" fill="rgb(252,71,19)"/><text x="507.00" y="350.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (2 samples, 0.41%)</title><rect x="504" y="324" width="4" height="15" fill="rgb(220,46,14)"/><text x="507.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:123) (1 samples, 0.20%)</title><rect x="506" y="340" width="2" height="15" fill="rgb(233,211,0)"/><text x="509.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1539) (18 samples, 3.66%)</title><rect x="468" y="228" width="43" height="15" fill="rgb(215,29,12)"/><text x="471.00" y="238.50">arra..</text></g><g><title>prepare_index (mapping.c:516) (18 samples, 3.66%)</title><rect x="468" y="244" width="43" height="15" fill="rgb(219,12,30)"/><text x="471.00" y="254.50">prep..</text></g><g><title>PyArray_FromAny (ctors.c:1938) (6 samples, 1.22%)</title><rect x="496" y="260" width="15" height="15" fill="rgb(211,83,49)"/><text x="499.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (6 samples, 1.22%)</title><rect x="496" y="276" width="15" height="15" fill="rgb(243,163,33)"/><text x="499.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c:550) (5 samples, 1.02%)</title><rect x="499" y="292" width="12" height="15" fill="rgb(252,110,27)"/><text x="502.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (5 samples, 1.02%)</title><rect x="499" y="308" width="12" height="15" fill="rgb(216,216,3)"/><text x="502.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:218) (1 samples, 0.20%)</title><rect x="508" y="324" width="3" height="15" fill="rgb(252,66,2)"/><text x="511.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (20 samples, 4.07%)</title><rect x="468" y="212" width="48" height="15" fill="rgb(251,206,48)"/><text x="471.00" y="222.50">_run..</text></g><g><title>array_subscript (mapping.c:1676) (2 samples, 0.41%)</title><rect x="511" y="228" width="5" height="15" fill="rgb(239,147,41)"/><text x="514.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (2 samples, 0.41%)</title><rect x="511" y="244" width="5" height="15" fill="rgb(223,31,4)"/><text x="514.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.20%)</title><rect x="516" y="212" width="2" height="15" fill="rgb(219,66,35)"/><text x="519.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.20%)</title><rect x="516" y="228" width="2" height="15" fill="rgb(221,48,37)"/><text x="519.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.20%)</title><rect x="516" y="244" width="2" height="15" fill="rgb(254,133,51)"/><text x="519.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.20%)</title><rect x="516" y="260" width="2" height="15" fill="rgb(253,36,2)"/><text x="519.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.20%)</title><rect x="516" y="276" width="2" height="15" fill="rgb(219,7,39)"/><text x="519.00" y="286.50"></text></g><g><title>_aligned_contig_cast_long_to_float (lowlevel_strided_loops.c.src:855) (1 samples, 0.20%)</title><rect x="516" y="292" width="2" height="15" fill="rgb(231,161,53)"/><text x="519.00" y="302.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:26) (1 samples, 0.20%)</title><rect x="518" y="244" width="2" height="15" fill="rgb(230,199,32)"/><text x="521.00" y="254.50"></text></g><g><title>array_arange (multiarraymodule.c:2754) (1 samples, 0.20%)</title><rect x="518" y="260" width="2" height="15" fill="rgb(209,131,40)"/><text x="521.00" y="270.50"></text></g><g><title>0x7f5dbb969757 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="518" y="276" width="2" height="15" fill="rgb(252,6,18)"/><text x="521.00" y="286.50"></text></g><g><title>_new_argsortlike (item_selection.c:1056) (1 samples, 0.20%)</title><rect x="520" y="356" width="3" height="15" fill="rgb(235,4,17)"/><text x="523.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1057) (3 samples, 0.61%)</title><rect x="523" y="356" width="7" height="15" fill="rgb(247,8,32)"/><text x="526.00" y="366.50"></text></g><g><title>adumb_select_float (selection.c.src:257) (6 samples, 1.22%)</title><rect x="530" y="388" width="14" height="15" fill="rgb(239,187,40)"/><text x="533.00" y="398.50"></text></g><g><title>adumb_select_float (selection.c.src:258) (33 samples, 6.71%)</title><rect x="544" y="388" width="79" height="15" fill="rgb(249,173,49)"/><text x="547.00" y="398.50">adumb_sel..</text></g><g><title>FLOAT_LT (npysort_common.h:123) (31 samples, 6.30%)</title><rect x="549" y="404" width="74" height="15" fill="rgb(211,102,21)"/><text x="552.00" y="414.50">FLOAT_LT..</text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (44 samples, 8.94%)</title><rect x="520" y="260" width="106" height="15" fill="rgb(217,103,5)"/><text x="523.00" y="270.50">argpartition..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (44 samples, 8.94%)</title><rect x="520" y="276" width="106" height="15" fill="rgb(247,187,23)"/><text x="523.00" y="286.50">array_implem..</text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (44 samples, 8.94%)</title><rect x="520" y="292" width="106" height="15" fill="rgb(241,199,38)"/><text x="523.00" y="302.50">argpartition..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (44 samples, 8.94%)</title><rect x="520" y="308" width="106" height="15" fill="rgb(220,183,16)"/><text x="523.00" y="318.50">_wrapfunc (n..</text></g><g><title>array_argpartition (methods.c:1454) (44 samples, 8.94%)</title><rect x="520" y="324" width="106" height="15" fill="rgb(226,48,22)"/><text x="523.00" y="334.50">array_argpar..</text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (44 samples, 8.94%)</title><rect x="520" y="340" width="106" height="15" fill="rgb(218,41,45)"/><text x="523.00" y="350.50">PyArray_ArgP..</text></g><g><title>_new_argsortlike (item_selection.c:1084) (40 samples, 8.13%)</title><rect x="530" y="356" width="96" height="15" fill="rgb(231,89,15)"/><text x="533.00" y="366.50">_new_argsor..</text></g><g><title>aintroselect_float (selection.c.src:322) (40 samples, 8.13%)</title><rect x="530" y="372" width="96" height="15" fill="rgb(214,109,24)"/><text x="533.00" y="382.50">aintroselec..</text></g><g><title>adumb_select_float (selection.c.src:260) (1 samples, 0.20%)</title><rect x="623" y="388" width="3" height="15" fill="rgb(208,214,37)"/><text x="626.00" y="398.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:28) (45 samples, 9.15%)</title><rect x="520" y="244" width="108" height="15" fill="rgb(226,139,40)"/><text x="523.00" y="254.50">topk_sorted_i..</text></g><g><title>long_subtract (scalarmath.c.src:859) (1 samples, 0.20%)</title><rect x="626" y="260" width="2" height="15" fill="rgb(240,5,40)"/><text x="629.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.20%)</title><rect x="626" y="276" width="2" height="15" fill="rgb(247,9,15)"/><text x="629.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.20%)</title><rect x="626" y="292" width="2" height="15" fill="rgb(239,121,28)"/><text x="629.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.20%)</title><rect x="626" y="308" width="2" height="15" fill="rgb(249,90,3)"/><text x="629.00" y="318.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (1 samples, 0.20%)</title><rect x="628" y="260" width="3" height="15" fill="rgb(247,96,34)"/><text x="631.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.20%)</title><rect x="628" y="276" width="3" height="15" fill="rgb(242,192,49)"/><text x="631.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (1 samples, 0.20%)</title><rect x="628" y="292" width="3" height="15" fill="rgb(211,95,6)"/><text x="631.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.20%)</title><rect x="628" y="308" width="3" height="15" fill="rgb(244,30,27)"/><text x="631.00" y="318.50"></text></g><g><title>array_argsort (methods.c:1395) (1 samples, 0.20%)</title><rect x="628" y="324" width="3" height="15" fill="rgb(227,56,51)"/><text x="631.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (1 samples, 0.20%)</title><rect x="628" y="340" width="3" height="15" fill="rgb(225,32,22)"/><text x="631.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (1 samples, 0.20%)</title><rect x="628" y="356" width="3" height="15" fill="rgb(229,138,10)"/><text x="631.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src:222) (1 samples, 0.20%)</title><rect x="628" y="372" width="3" height="15" fill="rgb(235,150,6)"/><text x="631.00" y="382.50"></text></g><g><title>FLOAT_LT (npysort_common.h:123) (1 samples, 0.20%)</title><rect x="628" y="388" width="3" height="15" fill="rgb(211,143,23)"/><text x="631.00" y="398.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.20%)</title><rect x="631" y="260" width="2" height="15" fill="rgb(224,122,17)"/><text x="634.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (1 samples, 0.20%)</title><rect x="631" y="276" width="2" height="15" fill="rgb(209,166,17)"/><text x="634.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (1 samples, 0.20%)</title><rect x="631" y="292" width="2" height="15" fill="rgb(209,132,52)"/><text x="634.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (1 samples, 0.20%)</title><rect x="631" y="308" width="2" height="15" fill="rgb(205,228,16)"/><text x="634.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.20%)</title><rect x="631" y="324" width="2" height="15" fill="rgb(231,102,39)"/><text x="634.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.20%)</title><rect x="631" y="340" width="2" height="15" fill="rgb(239,13,4)"/><text x="634.00" y="350.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2515) (1 samples, 0.20%)</title><rect x="633" y="276" width="2" height="15" fill="rgb(244,124,0)"/><text x="636.00" y="286.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2517) (2 samples, 0.41%)</title><rect x="635" y="276" width="5" height="15" fill="rgb(242,88,23)"/><text x="638.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h:110) (2 samples, 0.41%)</title><rect x="635" y="292" width="5" height="15" fill="rgb(211,107,4)"/><text x="638.00" y="302.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2529) (1 samples, 0.20%)</title><rect x="640" y="276" width="3" height="15" fill="rgb(227,66,12)"/><text x="643.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1666) (5 samples, 1.02%)</title><rect x="633" y="260" width="12" height="15" fill="rgb(218,183,41)"/><text x="636.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2554) (1 samples, 0.20%)</title><rect x="643" y="276" width="2" height="15" fill="rgb(218,79,27)"/><text x="646.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h:110) (1 samples, 0.20%)</title><rect x="643" y="292" width="2" height="15" fill="rgb(236,17,50)"/><text x="646.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.20%)</title><rect x="645" y="260" width="2" height="15" fill="rgb(244,177,32)"/><text x="648.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1584) (1 samples, 0.20%)</title><rect x="645" y="276" width="2" height="15" fill="rgb(216,110,27)"/><text x="648.00" y="286.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:32) (9 samples, 1.83%)</title><rect x="628" y="244" width="22" height="15" fill="rgb(208,74,50)"/><text x="631.00" y="254.50">t..</text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.20%)</title><rect x="647" y="260" width="3" height="15" fill="rgb(225,115,25)"/><text x="650.00" y="270.50"></text></g><g><title>arraymapiter_dealloc (mapping.c:3313) (1 samples, 0.20%)</title><rect x="647" y="276" width="3" height="15" fill="rgb(239,96,18)"/><text x="650.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.20%)</title><rect x="647" y="292" width="3" height="15" fill="rgb(226,176,25)"/><text x="650.00" y="302.50"></text></g><g><title>0x7f5dbb95397c (libc-2.29.so) (1 samples, 0.20%)</title><rect x="647" y="308" width="3" height="15" fill="rgb(239,85,4)"/><text x="650.00" y="318.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.20%)</title><rect x="650" y="260" width="2" height="15" fill="rgb(241,123,37)"/><text x="653.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (1 samples, 0.20%)</title><rect x="650" y="276" width="2" height="15" fill="rgb(238,227,42)"/><text x="653.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="650" y="292" width="2" height="15" fill="rgb(251,51,5)"/><text x="653.00" y="302.50"></text></g><g><title>0x7f5dbb9551c9 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="650" y="308" width="2" height="15" fill="rgb(248,160,49)"/><text x="653.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (79 samples, 16.06%)</title><rect x="465" y="196" width="190" height="15" fill="rgb(236,228,6)"/><text x="468.00" y="206.50">run (mlprodict/onnxrt/op..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py:137) (57 samples, 11.59%)</title><rect x="518" y="212" width="137" height="15" fill="rgb(229,104,43)"/><text x="521.00" y="222.50">_run (mlprodict/o..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:75) (57 samples, 11.59%)</title><rect x="518" y="228" width="137" height="15" fill="rgb(240,157,39)"/><text x="521.00" y="238.50">_common_run (mlpr..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:39) (2 samples, 0.41%)</title><rect x="650" y="244" width="5" height="15" fill="rgb(225,139,35)"/><text x="653.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.20%)</title><rect x="652" y="260" width="3" height="15" fill="rgb(229,129,22)"/><text x="655.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (1 samples, 0.20%)</title><rect x="652" y="276" width="3" height="15" fill="rgb(241,167,52)"/><text x="655.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (3 samples, 0.61%)</title><rect x="655" y="196" width="7" height="15" fill="rgb(230,49,16)"/><text x="658.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_flatten.py:24) (3 samples, 0.61%)</title><rect x="655" y="212" width="7" height="15" fill="rgb(218,222,35)"/><text x="658.00" y="222.50"></text></g><g><title>prod (&lt;__array_function__ internals&gt;:6) (2 samples, 0.41%)</title><rect x="657" y="228" width="5" height="15" fill="rgb(252,170,28)"/><text x="660.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.41%)</title><rect x="657" y="244" width="5" height="15" fill="rgb(228,111,32)"/><text x="660.00" y="254.50"></text></g><g><title>prod (numpy/core/fromnumeric.py:2911) (2 samples, 0.41%)</title><rect x="657" y="260" width="5" height="15" fill="rgb(241,204,12)"/><text x="660.00" y="270.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.20%)</title><rect x="659" y="276" width="3" height="15" fill="rgb(213,118,13)"/><text x="662.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.20%)</title><rect x="662" y="356" width="2" height="15" fill="rgb(226,205,3)"/><text x="665.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.20%)</title><rect x="662" y="372" width="2" height="15" fill="rgb(227,103,25)"/><text x="665.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.20%)</title><rect x="662" y="388" width="2" height="15" fill="rgb(209,217,29)"/><text x="665.00" y="398.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:912) (1 samples, 0.20%)</title><rect x="662" y="404" width="2" height="15" fill="rgb(228,215,51)"/><text x="665.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.20%)</title><rect x="664" y="388" width="3" height="15" fill="rgb(237,227,23)"/><text x="667.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (3 samples, 0.61%)</title><rect x="662" y="196" width="7" height="15" fill="rgb(216,55,41)"/><text x="665.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (3 samples, 0.61%)</title><rect x="662" y="212" width="7" height="15" fill="rgb(228,62,7)"/><text x="665.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_mean.py:29) (3 samples, 0.61%)</title><rect x="662" y="228" width="7" height="15" fill="rgb(228,2,18)"/><text x="665.00" y="238.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:6) (3 samples, 0.61%)</title><rect x="662" y="244" width="7" height="15" fill="rgb(227,55,23)"/><text x="665.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.61%)</title><rect x="662" y="260" width="7" height="15" fill="rgb(208,24,44)"/><text x="665.00" y="270.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3257) (3 samples, 0.61%)</title><rect x="662" y="276" width="7" height="15" fill="rgb(232,176,27)"/><text x="665.00" y="286.50"></text></g><g><title>_mean (numpy/core/_methods.py:151) (3 samples, 0.61%)</title><rect x="662" y="292" width="7" height="15" fill="rgb(245,204,5)"/><text x="665.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.61%)</title><rect x="662" y="308" width="7" height="15" fill="rgb(227,56,15)"/><text x="665.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.61%)</title><rect x="662" y="324" width="7" height="15" fill="rgb(242,172,19)"/><text x="665.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.61%)</title><rect x="662" y="340" width="7" height="15" fill="rgb(235,43,12)"/><text x="665.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.41%)</title><rect x="664" y="356" width="5" height="15" fill="rgb(223,95,23)"/><text x="667.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (2 samples, 0.41%)</title><rect x="664" y="372" width="5" height="15" fill="rgb(236,26,3)"/><text x="667.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.20%)</title><rect x="667" y="388" width="2" height="15" fill="rgb(232,128,30)"/><text x="670.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.20%)</title><rect x="669" y="244" width="2" height="15" fill="rgb(223,167,5)"/><text x="672.00" y="254.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.20%)</title><rect x="669" y="260" width="2" height="15" fill="rgb(218,86,28)"/><text x="672.00" y="270.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.20%)</title><rect x="669" y="276" width="2" height="15" fill="rgb(227,200,14)"/><text x="672.00" y="286.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.20%)</title><rect x="669" y="292" width="2" height="15" fill="rgb(230,68,27)"/><text x="672.00" y="302.50"></text></g><g><title>0x7f5dbb953900 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="669" y="308" width="2" height="15" fill="rgb(222,173,10)"/><text x="672.00" y="318.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2740) (1 samples, 0.20%)</title><rect x="671" y="244" width="3" height="15" fill="rgb(222,211,31)"/><text x="674.00" y="254.50"></text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py:248) (1 samples, 0.20%)</title><rect x="674" y="260" width="2" height="15" fill="rgb(223,199,25)"/><text x="677.00" y="270.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.20%)</title><rect x="674" y="276" width="2" height="15" fill="rgb(230,20,15)"/><text x="677.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1486) (1 samples, 0.20%)</title><rect x="674" y="292" width="2" height="15" fill="rgb(231,83,6)"/><text x="677.00" y="302.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1691) (1 samples, 0.20%)</title><rect x="674" y="308" width="2" height="15" fill="rgb(239,12,4)"/><text x="677.00" y="318.50"></text></g><g><title>0x7f5dbb969e7a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="674" y="324" width="2" height="15" fill="rgb(230,189,8)"/><text x="677.00" y="334.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.20%)</title><rect x="676" y="308" width="3" height="15" fill="rgb(253,151,12)"/><text x="679.00" y="318.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (1 samples, 0.20%)</title><rect x="676" y="324" width="3" height="15" fill="rgb(252,95,33)"/><text x="679.00" y="334.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1486) (1 samples, 0.20%)</title><rect x="676" y="340" width="3" height="15" fill="rgb(205,34,53)"/><text x="679.00" y="350.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1703) (1 samples, 0.20%)</title><rect x="676" y="356" width="3" height="15" fill="rgb(241,156,27)"/><text x="679.00" y="366.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.20%)</title><rect x="676" y="372" width="3" height="15" fill="rgb(231,205,31)"/><text x="679.00" y="382.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.20%)</title><rect x="676" y="388" width="3" height="15" fill="rgb(247,116,49)"/><text x="679.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.20%)</title><rect x="676" y="404" width="3" height="15" fill="rgb(247,90,2)"/><text x="679.00" y="414.50"></text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py:250) (2 samples, 0.41%)</title><rect x="676" y="260" width="5" height="15" fill="rgb(210,173,53)"/><text x="679.00" y="270.50"></text></g><g><title>_convert_to_type (scipy/spatial/distance.py:187) (2 samples, 0.41%)</title><rect x="676" y="276" width="5" height="15" fill="rgb(245,178,18)"/><text x="679.00" y="286.50"></text></g><g><title>ascontiguousarray (numpy/core/_asarray.py:179) (2 samples, 0.41%)</title><rect x="676" y="292" width="5" height="15" fill="rgb(207,161,15)"/><text x="679.00" y="302.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.20%)</title><rect x="679" y="308" width="2" height="15" fill="rgb(228,164,18)"/><text x="682.00" y="318.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.20%)</title><rect x="679" y="324" width="2" height="15" fill="rgb(219,79,52)"/><text x="682.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.20%)</title><rect x="679" y="340" width="2" height="15" fill="rgb(253,216,7)"/><text x="682.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (1 samples, 0.20%)</title><rect x="679" y="356" width="2" height="15" fill="rgb(241,58,53)"/><text x="682.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.20%)</title><rect x="679" y="372" width="2" height="15" fill="rgb(234,100,27)"/><text x="682.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.20%)</title><rect x="679" y="388" width="2" height="15" fill="rgb(224,96,10)"/><text x="682.00" y="398.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.20%)</title><rect x="679" y="404" width="2" height="15" fill="rgb(244,160,37)"/><text x="682.00" y="414.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2776) (4 samples, 0.81%)</title><rect x="674" y="244" width="9" height="15" fill="rgb(253,94,38)"/><text x="677.00" y="254.50"></text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py:251) (1 samples, 0.20%)</title><rect x="681" y="260" width="2" height="15" fill="rgb(245,176,29)"/><text x="684.00" y="270.50"></text></g><g><title>_convert_to_type (scipy/spatial/distance.py:187) (1 samples, 0.20%)</title><rect x="681" y="276" width="2" height="15" fill="rgb(208,48,49)"/><text x="684.00" y="286.50"></text></g><g><title>ascontiguousarray (numpy/core/_asarray.py:179) (1 samples, 0.20%)</title><rect x="681" y="292" width="2" height="15" fill="rgb(214,129,34)"/><text x="684.00" y="302.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.20%)</title><rect x="681" y="308" width="2" height="15" fill="rgb(209,94,31)"/><text x="684.00" y="318.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.20%)</title><rect x="681" y="324" width="2" height="15" fill="rgb(207,223,14)"/><text x="684.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.20%)</title><rect x="681" y="340" width="2" height="15" fill="rgb(233,28,14)"/><text x="684.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (1 samples, 0.20%)</title><rect x="681" y="356" width="2" height="15" fill="rgb(251,62,29)"/><text x="684.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.20%)</title><rect x="681" y="372" width="2" height="15" fill="rgb(241,139,42)"/><text x="684.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:94) (1 samples, 0.20%)</title><rect x="681" y="388" width="2" height="15" fill="rgb(252,56,30)"/><text x="684.00" y="398.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:61) (1 samples, 0.20%)</title><rect x="681" y="404" width="2" height="15" fill="rgb(210,59,44)"/><text x="684.00" y="414.50"></text></g><g><title>0x7f5d98b796cf (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.22%)</title><rect x="683" y="260" width="15" height="15" fill="rgb(249,85,24)"/><text x="686.00" y="270.50"></text></g><g><title>0x7f5d98b796e0 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.63%)</title><rect x="698" y="260" width="19" height="15" fill="rgb(208,197,34)"/><text x="701.00" y="270.50"></text></g><g><title>0x7f5d98b796ef (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.42%)</title><rect x="717" y="260" width="17" height="15" fill="rgb(208,223,45)"/><text x="720.00" y="270.50"></text></g><g><title>0x7f5d98b796fc (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="734" y="260" width="2" height="15" fill="rgb(210,59,1)"/><text x="737.00" y="270.50"></text></g><g><title>0x7f5d98b796fe (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.81%)</title><rect x="736" y="260" width="10" height="15" fill="rgb(237,142,26)"/><text x="739.00" y="270.50"></text></g><g><title>0x7f5d98b79710 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.22%)</title><rect x="746" y="260" width="14" height="15" fill="rgb(211,121,31)"/><text x="749.00" y="270.50"></text></g><g><title>0x7f5d98b79720 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.02%)</title><rect x="760" y="260" width="12" height="15" fill="rgb(236,24,49)"/><text x="763.00" y="270.50"></text></g><g><title>0x7f5d98b79730 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.61%)</title><rect x="772" y="260" width="7" height="15" fill="rgb(206,217,19)"/><text x="775.00" y="270.50"></text></g><g><title>0x7f5d98b799f9 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.22%)</title><rect x="779" y="260" width="15" height="15" fill="rgb(229,166,6)"/><text x="782.00" y="270.50"></text></g><g><title>0x7f5d98b799fd (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (14 samples, 2.85%)</title><rect x="794" y="260" width="33" height="15" fill="rgb(248,17,28)"/><text x="797.00" y="270.50">0x..</text></g><g><title>0x7f5d98b79a03 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.02%)</title><rect x="827" y="260" width="12" height="15" fill="rgb(237,140,18)"/><text x="830.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cdist.py:27) (72 samples, 14.63%)</title><rect x="669" y="228" width="173" height="15" fill="rgb(241,13,5)"/><text x="672.00" y="238.50">_run (mlprodict/onnxrt..</text></g><g><title>cdist (scipy/spatial/distance.py:2780) (66 samples, 13.41%)</title><rect x="683" y="244" width="159" height="15" fill="rgb(238,189,22)"/><text x="686.00" y="254.50">cdist (scipy/spatial..</text></g><g><title>0x7f5d98b79a12 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="839" y="260" width="3" height="15" fill="rgb(248,199,47)"/><text x="842.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (162 samples, 32.93%)</title><rect x="465" y="180" width="389" height="15" fill="rgb(240,114,5)"/><text x="468.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (77 samples, 15.65%)</title><rect x="669" y="196" width="185" height="15" fill="rgb(242,200,6)"/><text x="672.00" y="206.50">run (mlprodict/onnxrt/op..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (77 samples, 15.65%)</title><rect x="669" y="212" width="185" height="15" fill="rgb(226,210,23)"/><text x="672.00" y="222.50">run (mlprodict/onnxrt/op..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cdist.py:29) (5 samples, 1.02%)</title><rect x="842" y="228" width="12" height="15" fill="rgb(233,114,28)"/><text x="845.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (5 samples, 1.02%)</title><rect x="842" y="244" width="12" height="15" fill="rgb(230,81,19)"/><text x="845.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (5 samples, 1.02%)</title><rect x="842" y="260" width="12" height="15" fill="rgb(222,181,4)"/><text x="845.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (5 samples, 1.02%)</title><rect x="842" y="276" width="12" height="15" fill="rgb(212,198,41)"/><text x="845.00" y="286.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src:855) (5 samples, 1.02%)</title><rect x="842" y="292" width="12" height="15" fill="rgb(230,229,49)"/><text x="845.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:61) (165 samples, 33.54%)</title><rect x="460" y="52" width="396" height="15" fill="rgb(240,4,32)"/><text x="463.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_..</text></g><g><title>profile_pyrt (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:60) (165 samples, 33.54%)</title><rect x="460" y="68" width="396" height="15" fill="rgb(220,212,48)"/><text x="463.00" y="78.50">profile_pyrt (bench_KNeighborsRegressor_default_k3_b_..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:37) (165 samples, 33.54%)</title><rect x="460" y="84" width="396" height="15" fill="rgb(249,134,25)"/><text x="463.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default_k3_b..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:31) (165 samples, 33.54%)</title><rect x="460" y="100" width="396" height="15" fill="rgb(211,187,11)"/><text x="463.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_b_reg_a..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (165 samples, 33.54%)</title><rect x="460" y="116" width="396" height="15" fill="rgb(243,156,27)"/><text x="463.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (165 samples, 33.54%)</title><rect x="460" y="132" width="396" height="15" fill="rgb(209,148,27)"/><text x="463.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:3..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (164 samples, 33.33%)</title><rect x="463" y="148" width="393" height="15" fill="rgb(218,100,16)"/><text x="466.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (164 samples, 33.33%)</title><rect x="463" y="164" width="393" height="15" fill="rgb(214,52,26)"/><text x="466.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.20%)</title><rect x="854" y="180" width="2" height="15" fill="rgb(225,206,0)"/><text x="857.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.20%)</title><rect x="856" y="148" width="3" height="15" fill="rgb(252,175,5)"/><text x="859.00" y="158.50"></text></g><g><title>0x7f5d79986ff9 (?) (1 samples, 0.20%)</title><rect x="861" y="212" width="2" height="15" fill="rgb(209,79,6)"/><text x="864.00" y="222.50"></text></g><g><title>0x7f5d79981ef6 (?) (1 samples, 0.20%)</title><rect x="861" y="228" width="2" height="15" fill="rgb(236,76,32)"/><text x="864.00" y="238.50"></text></g><g><title>0x7f5d79976962 (?) (1 samples, 0.20%)</title><rect x="861" y="244" width="2" height="15" fill="rgb(218,142,37)"/><text x="864.00" y="254.50"></text></g><g><title>0x7f5d799aa7a7 (?) (1 samples, 0.20%)</title><rect x="861" y="260" width="2" height="15" fill="rgb(215,37,8)"/><text x="864.00" y="270.50"></text></g><g><title>0x7f5d799aa379 (?) (1 samples, 0.20%)</title><rect x="861" y="276" width="2" height="15" fill="rgb(233,24,40)"/><text x="864.00" y="286.50"></text></g><g><title>0x7f5d79e088b8 (?) (1 samples, 0.20%)</title><rect x="861" y="292" width="2" height="15" fill="rgb(240,188,20)"/><text x="864.00" y="302.50"></text></g><g><title>0x7f5d79e06c7f (?) (1 samples, 0.20%)</title><rect x="861" y="308" width="2" height="15" fill="rgb(216,111,12)"/><text x="864.00" y="318.50"></text></g><g><title>0x7f5d79e1999c (?) (1 samples, 0.20%)</title><rect x="861" y="324" width="2" height="15" fill="rgb(235,104,31)"/><text x="864.00" y="334.50"></text></g><g><title>0x7f5d79ad1e79 (?) (1 samples, 0.20%)</title><rect x="861" y="340" width="2" height="15" fill="rgb(244,11,54)"/><text x="864.00" y="350.50"></text></g><g><title>0x7f5d79ad017d (?) (1 samples, 0.20%)</title><rect x="861" y="356" width="2" height="15" fill="rgb(247,59,44)"/><text x="864.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="866" y="340" width="2" height="15" fill="rgb(236,119,2)"/><text x="869.00" y="350.50"></text></g><g><title>onnxruntime::ReduceMean&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="868" y="340" width="3" height="15" fill="rgb(239,63,47)"/><text x="871.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="868" y="356" width="3" height="15" fill="rgb(250,96,2)"/><text x="871.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="868" y="372" width="3" height="15" fill="rgb(236,127,7)"/><text x="871.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="868" y="388" width="3" height="15" fill="rgb(245,47,32)"/><text x="871.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="868" y="404" width="3" height="15" fill="rgb(220,213,15)"/><text x="871.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="868" y="420" width="3" height="15" fill="rgb(227,118,43)"/><text x="871.00" y="430.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="868" y="436" width="3" height="15" fill="rgb(206,212,51)"/><text x="871.00" y="446.50"></text></g><g><title>0x7f5d7994e0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1142" y="372" width="2" height="15" fill="rgb(229,56,14)"/><text x="1145.00" y="382.50"></text></g><g><title>0x7f5dbb95394f (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1144" y="372" width="2" height="15" fill="rgb(209,183,19)"/><text x="1147.00" y="382.50"></text></g><g><title>0x7f5dbbb25e7e (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1146" y="372" width="3" height="15" fill="rgb(209,155,32)"/><text x="1149.00" y="382.50"></text></g><g><title>0x7f5dbbb25eb6 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1149" y="372" width="2" height="15" fill="rgb(214,206,0)"/><text x="1152.00" y="382.50"></text></g><g><title>0x7f5dbbb25ed2 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1151" y="372" width="3" height="15" fill="rgb(216,214,7)"/><text x="1154.00" y="382.50"></text></g><g><title>0x7f5dbbb25ee6 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1154" y="372" width="2" height="15" fill="rgb(236,14,37)"/><text x="1157.00" y="382.50"></text></g><g><title>0x7f5dbbb25ef6 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1156" y="372" width="2" height="15" fill="rgb(229,224,41)"/><text x="1159.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.61%)</title><rect x="1158" y="372" width="8" height="15" fill="rgb(229,36,6)"/><text x="1161.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.61%)</title><rect x="1158" y="388" width="8" height="15" fill="rgb(232,10,52)"/><text x="1161.00" y="398.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (127 samples, 25.81%)</title><rect x="871" y="340" width="304" height="15" fill="rgb(251,90,11)"/><text x="874.00" y="350.50">onnxruntime::TopK&lt;11, float&gt;::Compute (o..</text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (127 samples, 25.81%)</title><rect x="871" y="356" width="304" height="15" fill="rgb(223,124,28)"/><text x="874.00" y="366.50">onnxruntime::TopKImpl (onnxruntime/capi/..</text></g><g><title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::LesserValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.81%)</title><rect x="1166" y="372" width="9" height="15" fill="rgb(244,184,8)"/><text x="1169.00" y="382.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (137 samples, 27.85%)</title><rect x="859" y="164" width="328" height="15" fill="rgb(248,149,0)"/><text x="862.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_in..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (137 samples, 27.85%)</title><rect x="859" y="180" width="328" height="15" fill="rgb(224,24,10)"/><text x="862.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:6..</text></g><g><title>run (onnxruntime/capi/session.py:136) (137 samples, 27.85%)</title><rect x="859" y="196" width="328" height="15" fill="rgb(210,195,5)"/><text x="862.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (135 samples, 27.44%)</title><rect x="863" y="212" width="324" height="15" fill="rgb(243,8,50)"/><text x="866.00" y="222.50">pybind11::cpp_function::dispatcher (onnxrun..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (135 samples, 27.44%)</title><rect x="863" y="228" width="324" height="15" fill="rgb(239,68,23)"/><text x="866.00" y="238.50">void pybind11::cpp_function::initialize&lt;onn..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 27.24%)</title><rect x="866" y="244" width="321" height="15" fill="rgb(253,204,26)"/><text x="869.00" y="254.50">onnxruntime::python::addObjectMethods(pybin..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 27.24%)</title><rect x="866" y="260" width="321" height="15" fill="rgb(210,50,46)"/><text x="869.00" y="270.50">onnxruntime::InferenceSession::Run (onnxrun..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 27.24%)</title><rect x="866" y="276" width="321" height="15" fill="rgb(211,50,6)"/><text x="869.00" y="286.50">onnxruntime::InferenceSession::Run (onnxrun..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 27.24%)</title><rect x="866" y="292" width="321" height="15" fill="rgb(207,219,36)"/><text x="869.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 27.24%)</title><rect x="866" y="308" width="321" height="15" fill="rgb(238,202,2)"/><text x="869.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxr..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 27.24%)</title><rect x="866" y="324" width="321" height="15" fill="rgb(223,196,24)"/><text x="869.00" y="334.50">onnxruntime::SequentialExecutor::Execute (o..</text></g><g><title>onnxruntime::contrib::CDist&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.02%)</title><rect x="1175" y="340" width="12" height="15" fill="rgb(238,156,22)"/><text x="1178.00" y="350.50"></text></g><g><title>onnxruntime::contrib::cdist&lt;float, onnxruntime::Euclidean&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.02%)</title><rect x="1175" y="356" width="12" height="15" fill="rgb(208,1,36)"/><text x="1178.00" y="366.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.02%)</title><rect x="1175" y="372" width="12" height="15" fill="rgb(240,119,26)"/><text x="1178.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.02%)</title><rect x="1175" y="388" width="12" height="15" fill="rgb(249,197,34)"/><text x="1178.00" y="398.50"></text></g><g><title>std::condition_variable::wait (libstdc++.so.6.0.28) (5 samples, 1.02%)</title><rect x="1175" y="404" width="12" height="15" fill="rgb(238,134,3)"/><text x="1178.00" y="414.50"></text></g><g><title>__pthread_cond_wait (libpthread-2.29.so) (5 samples, 1.02%)</title><rect x="1175" y="420" width="12" height="15" fill="rgb(229,57,2)"/><text x="1178.00" y="430.50"></text></g><g><title>all (492 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(234,221,45)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:68) (139 samples, 28.25%)</title><rect x="856" y="52" width="334" height="15" fill="rgb(221,0,8)"/><text x="859.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_default_k..</text></g><g><title>profile_ort (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:67) (139 samples, 28.25%)</title><rect x="856" y="68" width="334" height="15" fill="rgb(209,190,44)"/><text x="859.00" y="78.50">profile_ort (bench_KNeighborsRegressor_defaul..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:37) (139 samples, 28.25%)</title><rect x="856" y="84" width="334" height="15" fill="rgb(251,196,41)"/><text x="859.00" y="94.50">setup_profile (bench_KNeighborsRegressor_defa..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:31) (139 samples, 28.25%)</title><rect x="856" y="100" width="334" height="15" fill="rgb(216,106,1)"/><text x="859.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (139 samples, 28.25%)</title><rect x="856" y="116" width="334" height="15" fill="rgb(223,118,19)"/><text x="859.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (139 samples, 28.25%)</title><rect x="856" y="132" width="334" height="15" fill="rgb(249,26,53)"/><text x="859.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (138 samples, 28.05%)</title><rect x="859" y="148" width="331" height="15" fill="rgb(225,198,39)"/><text x="862.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.20%)</title><rect x="1187" y="164" width="3" height="15" fill="rgb(252,128,42)"/><text x="1190.00" y="174.50"></text></g></g></svg>