<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1734" onload="init(evt)" viewBox="0 0 1200 1734" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1734" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1717.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1717.00"> </text><g id="frames"><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.28%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(241,73,22)"/><text x="13.00" y="910.50"></text></g><g><title>isdir (genericpath.py:42) (1 samples, 0.28%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(250,46,12)"/><text x="13.00" y="926.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.28%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(216,48,53)"/><text x="13.00" y="942.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.28%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(208,101,46)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_b_reg.py:2) (2 samples, 0.56%)</title><rect x="10" y="148" width="6" height="15" fill="rgb(239,192,5)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="10" y="164" width="6" height="15" fill="rgb(248,155,40)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.56%)</title><rect x="10" y="180" width="6" height="15" fill="rgb(221,84,0)"/><text x="13.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="10" y="196" width="6" height="15" fill="rgb(235,10,32)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="10" y="212" width="6" height="15" fill="rgb(237,182,20)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="10" y="228" width="6" height="15" fill="rgb(214,145,34)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="10" y="244" width="6" height="15" fill="rgb(239,213,37)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="10" y="260" width="6" height="15" fill="rgb(242,227,32)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="10" y="276" width="6" height="15" fill="rgb(216,149,20)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.56%)</title><rect x="10" y="292" width="6" height="15" fill="rgb(241,112,28)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="10" y="308" width="6" height="15" fill="rgb(249,87,4)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="10" y="324" width="6" height="15" fill="rgb(217,7,10)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="10" y="340" width="6" height="15" fill="rgb(230,141,17)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="10" y="356" width="6" height="15" fill="rgb(254,166,30)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="10" y="372" width="6" height="15" fill="rgb(215,222,37)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.56%)</title><rect x="10" y="388" width="6" height="15" fill="rgb(244,187,26)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="10" y="404" width="6" height="15" fill="rgb(228,119,53)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="10" y="420" width="6" height="15" fill="rgb(217,220,47)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="10" y="436" width="6" height="15" fill="rgb(219,211,16)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="10" y="452" width="6" height="15" fill="rgb(252,57,4)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="10" y="468" width="6" height="15" fill="rgb(236,217,15)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.56%)</title><rect x="10" y="484" width="6" height="15" fill="rgb(238,175,45)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="10" y="500" width="6" height="15" fill="rgb(207,191,4)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="10" y="516" width="6" height="15" fill="rgb(206,44,47)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="10" y="532" width="6" height="15" fill="rgb(244,207,38)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="10" y="548" width="6" height="15" fill="rgb(234,74,8)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="10" y="564" width="6" height="15" fill="rgb(242,228,3)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.56%)</title><rect x="10" y="580" width="6" height="15" fill="rgb(241,84,5)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="10" y="596" width="6" height="15" fill="rgb(253,108,10)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.56%)</title><rect x="10" y="612" width="6" height="15" fill="rgb(247,162,10)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="10" y="628" width="6" height="15" fill="rgb(235,12,3)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="10" y="644" width="6" height="15" fill="rgb(205,172,29)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="10" y="660" width="6" height="15" fill="rgb(229,227,45)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="10" y="676" width="6" height="15" fill="rgb(234,41,48)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="10" y="692" width="6" height="15" fill="rgb(245,10,22)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="10" y="708" width="6" height="15" fill="rgb(230,56,25)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.56%)</title><rect x="10" y="724" width="6" height="15" fill="rgb(210,224,32)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="10" y="740" width="6" height="15" fill="rgb(214,173,4)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="10" y="756" width="6" height="15" fill="rgb(212,98,27)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="10" y="772" width="6" height="15" fill="rgb(252,98,50)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="10" y="788" width="6" height="15" fill="rgb(213,196,52)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="10" y="804" width="6" height="15" fill="rgb(207,166,16)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.56%)</title><rect x="10" y="820" width="6" height="15" fill="rgb(234,181,4)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.56%)</title><rect x="10" y="836" width="6" height="15" fill="rgb(205,110,12)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.56%)</title><rect x="10" y="852" width="6" height="15" fill="rgb(226,158,9)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.56%)</title><rect x="10" y="868" width="6" height="15" fill="rgb(209,1,9)"/><text x="13.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.56%)</title><rect x="10" y="884" width="6" height="15" fill="rgb(228,83,46)"/><text x="13.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.28%)</title><rect x="13" y="900" width="3" height="15" fill="rgb(209,193,33)"/><text x="16.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.28%)</title><rect x="13" y="916" width="3" height="15" fill="rgb(222,60,9)"/><text x="16.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.28%)</title><rect x="13" y="932" width="3" height="15" fill="rgb(209,172,31)"/><text x="16.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.28%)</title><rect x="13" y="948" width="3" height="15" fill="rgb(220,195,49)"/><text x="16.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.28%)</title><rect x="13" y="964" width="3" height="15" fill="rgb(247,227,31)"/><text x="16.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:366) (1 samples, 0.28%)</title><rect x="13" y="980" width="3" height="15" fill="rgb(250,103,10)"/><text x="16.00" y="990.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1249) (1 samples, 0.28%)</title><rect x="16" y="1204" width="3" height="15" fill="rgb(223,56,50)"/><text x="19.00" y="1214.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;:1221) (1 samples, 0.28%)</title><rect x="16" y="1220" width="3" height="15" fill="rgb(220,209,3)"/><text x="19.00" y="1230.50"></text></g><g><title>_path_hooks (&lt;frozen importlib._bootstrap_external&gt;:1197) (1 samples, 0.28%)</title><rect x="16" y="1236" width="3" height="15" fill="rgb(235,98,36)"/><text x="19.00" y="1246.50"></text></g><g><title>path_hook_for_FileFinder (&lt;frozen importlib._bootstrap_external&gt;:1449) (1 samples, 0.28%)</title><rect x="16" y="1252" width="3" height="15" fill="rgb(224,186,11)"/><text x="19.00" y="1262.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap_external&gt;:1325) (1 samples, 0.28%)</title><rect x="16" y="1268" width="3" height="15" fill="rgb(250,162,10)"/><text x="19.00" y="1278.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_b_reg.py:4) (2 samples, 0.56%)</title><rect x="16" y="148" width="7" height="15" fill="rgb(212,148,22)"/><text x="19.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="16" y="164" width="7" height="15" fill="rgb(232,210,2)"/><text x="19.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.56%)</title><rect x="16" y="180" width="7" height="15" fill="rgb(250,108,21)"/><text x="19.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="16" y="196" width="7" height="15" fill="rgb(244,109,0)"/><text x="19.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="16" y="212" width="7" height="15" fill="rgb(246,25,28)"/><text x="19.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="16" y="228" width="7" height="15" fill="rgb(218,52,46)"/><text x="19.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="16" y="244" width="7" height="15" fill="rgb(208,55,33)"/><text x="19.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="16" y="260" width="7" height="15" fill="rgb(224,149,26)"/><text x="19.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="16" y="276" width="7" height="15" fill="rgb(236,7,33)"/><text x="19.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.56%)</title><rect x="16" y="292" width="7" height="15" fill="rgb(218,49,51)"/><text x="19.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="16" y="308" width="7" height="15" fill="rgb(223,4,51)"/><text x="19.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="16" y="324" width="7" height="15" fill="rgb(239,97,11)"/><text x="19.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="16" y="340" width="7" height="15" fill="rgb(212,173,46)"/><text x="19.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="16" y="356" width="7" height="15" fill="rgb(240,42,52)"/><text x="19.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="16" y="372" width="7" height="15" fill="rgb(220,48,0)"/><text x="19.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.56%)</title><rect x="16" y="388" width="7" height="15" fill="rgb(206,152,34)"/><text x="19.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="16" y="404" width="7" height="15" fill="rgb(237,83,20)"/><text x="19.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="16" y="420" width="7" height="15" fill="rgb(209,112,13)"/><text x="19.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="16" y="436" width="7" height="15" fill="rgb(208,40,43)"/><text x="19.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="16" y="452" width="7" height="15" fill="rgb(232,115,37)"/><text x="19.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="16" y="468" width="7" height="15" fill="rgb(251,219,21)"/><text x="19.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.56%)</title><rect x="16" y="484" width="7" height="15" fill="rgb(244,190,31)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="16" y="500" width="7" height="15" fill="rgb(211,49,33)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="16" y="516" width="7" height="15" fill="rgb(252,198,49)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="16" y="532" width="7" height="15" fill="rgb(209,198,30)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="16" y="548" width="7" height="15" fill="rgb(254,202,47)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="16" y="564" width="7" height="15" fill="rgb(219,85,5)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.56%)</title><rect x="16" y="580" width="7" height="15" fill="rgb(218,102,0)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="16" y="596" width="7" height="15" fill="rgb(210,26,48)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="16" y="612" width="7" height="15" fill="rgb(230,114,1)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="16" y="628" width="7" height="15" fill="rgb(231,125,22)"/><text x="19.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="16" y="644" width="7" height="15" fill="rgb(210,210,50)"/><text x="19.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="16" y="660" width="7" height="15" fill="rgb(216,85,46)"/><text x="19.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.56%)</title><rect x="16" y="676" width="7" height="15" fill="rgb(228,138,45)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="16" y="692" width="7" height="15" fill="rgb(227,41,52)"/><text x="19.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="16" y="708" width="7" height="15" fill="rgb(244,48,51)"/><text x="19.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="16" y="724" width="7" height="15" fill="rgb(242,17,14)"/><text x="19.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="16" y="740" width="7" height="15" fill="rgb(207,103,2)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="16" y="756" width="7" height="15" fill="rgb(237,129,53)"/><text x="19.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.56%)</title><rect x="16" y="772" width="7" height="15" fill="rgb(253,111,9)"/><text x="19.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.56%)</title><rect x="16" y="788" width="7" height="15" fill="rgb(206,118,52)"/><text x="19.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="16" y="804" width="7" height="15" fill="rgb(254,55,1)"/><text x="19.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="16" y="820" width="7" height="15" fill="rgb(216,220,20)"/><text x="19.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="16" y="836" width="7" height="15" fill="rgb(240,168,16)"/><text x="19.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="16" y="852" width="7" height="15" fill="rgb(227,169,10)"/><text x="19.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="16" y="868" width="7" height="15" fill="rgb(229,127,23)"/><text x="19.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="16" y="884" width="7" height="15" fill="rgb(230,97,32)"/><text x="19.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (2 samples, 0.56%)</title><rect x="16" y="900" width="7" height="15" fill="rgb(232,130,34)"/><text x="19.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="16" y="916" width="7" height="15" fill="rgb(220,195,40)"/><text x="19.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="16" y="932" width="7" height="15" fill="rgb(248,58,54)"/><text x="19.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="16" y="948" width="7" height="15" fill="rgb(231,2,26)"/><text x="19.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="16" y="964" width="7" height="15" fill="rgb(239,53,37)"/><text x="19.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="16" y="980" width="7" height="15" fill="rgb(206,58,51)"/><text x="19.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:30) (2 samples, 0.56%)</title><rect x="16" y="996" width="7" height="15" fill="rgb(213,220,24)"/><text x="19.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="16" y="1012" width="7" height="15" fill="rgb(242,211,37)"/><text x="19.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="16" y="1028" width="7" height="15" fill="rgb(232,78,28)"/><text x="19.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="16" y="1044" width="7" height="15" fill="rgb(242,72,43)"/><text x="19.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="16" y="1060" width="7" height="15" fill="rgb(243,188,19)"/><text x="19.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="16" y="1076" width="7" height="15" fill="rgb(241,41,9)"/><text x="19.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/misc/__init__.py:23) (2 samples, 0.56%)</title><rect x="16" y="1092" width="7" height="15" fill="rgb(217,194,11)"/><text x="19.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.56%)</title><rect x="16" y="1108" width="7" height="15" fill="rgb(234,50,8)"/><text x="19.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="16" y="1124" width="7" height="15" fill="rgb(233,166,16)"/><text x="19.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="16" y="1140" width="7" height="15" fill="rgb(217,182,7)"/><text x="19.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (2 samples, 0.56%)</title><rect x="16" y="1156" width="7" height="15" fill="rgb(253,227,3)"/><text x="19.00" y="1166.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (2 samples, 0.56%)</title><rect x="16" y="1172" width="7" height="15" fill="rgb(218,173,48)"/><text x="19.00" y="1182.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (2 samples, 0.56%)</title><rect x="16" y="1188" width="7" height="15" fill="rgb(240,140,20)"/><text x="19.00" y="1198.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.28%)</title><rect x="19" y="1204" width="4" height="15" fill="rgb(205,0,41)"/><text x="22.00" y="1214.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1368) (1 samples, 0.28%)</title><rect x="19" y="1220" width="4" height="15" fill="rgb(207,32,24)"/><text x="22.00" y="1230.50"></text></g><g><title>_fill_cache (&lt;frozen importlib._bootstrap_external&gt;:1408) (1 samples, 0.28%)</title><rect x="19" y="1236" width="4" height="15" fill="rgb(227,32,49)"/><text x="22.00" y="1246.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.28%)</title><rect x="19" y="1252" width="4" height="15" fill="rgb(253,119,6)"/><text x="22.00" y="1262.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="19" y="1268" width="4" height="15" fill="rgb(233,181,22)"/><text x="22.00" y="1278.50"></text></g><g><title>0x7f4223580237 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="19" y="1284" width="4" height="15" fill="rgb(210,54,9)"/><text x="22.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.28%)</title><rect x="23" y="580" width="3" height="15" fill="rgb(251,111,34)"/><text x="26.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="23" y="596" width="3" height="15" fill="rgb(226,221,0)"/><text x="26.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="23" y="612" width="3" height="15" fill="rgb(250,185,20)"/><text x="26.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="23" y="628" width="3" height="15" fill="rgb(227,50,52)"/><text x="26.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="23" y="644" width="3" height="15" fill="rgb(245,60,15)"/><text x="26.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="23" y="660" width="3" height="15" fill="rgb(247,118,10)"/><text x="26.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.28%)</title><rect x="23" y="676" width="3" height="15" fill="rgb(229,68,45)"/><text x="26.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="23" y="692" width="3" height="15" fill="rgb(213,195,33)"/><text x="26.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="23" y="708" width="3" height="15" fill="rgb(243,166,22)"/><text x="26.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="23" y="724" width="3" height="15" fill="rgb(244,185,0)"/><text x="26.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="23" y="740" width="3" height="15" fill="rgb(246,87,24)"/><text x="26.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="23" y="756" width="3" height="15" fill="rgb(249,171,2)"/><text x="26.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:76) (1 samples, 0.28%)</title><rect x="23" y="772" width="3" height="15" fill="rgb(226,54,13)"/><text x="26.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="23" y="788" width="3" height="15" fill="rgb(216,76,18)"/><text x="26.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.28%)</title><rect x="23" y="804" width="3" height="15" fill="rgb(208,154,0)"/><text x="26.00" y="814.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.28%)</title><rect x="23" y="820" width="3" height="15" fill="rgb(205,91,10)"/><text x="26.00" y="830.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.28%)</title><rect x="23" y="836" width="3" height="15" fill="rgb(206,203,6)"/><text x="26.00" y="846.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1249) (1 samples, 0.28%)</title><rect x="23" y="852" width="3" height="15" fill="rgb(224,96,42)"/><text x="26.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (3 samples, 0.85%)</title><rect x="23" y="244" width="10" height="15" fill="rgb(215,58,17)"/><text x="26.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.85%)</title><rect x="23" y="260" width="10" height="15" fill="rgb(231,148,35)"/><text x="26.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.85%)</title><rect x="23" y="276" width="10" height="15" fill="rgb(226,83,17)"/><text x="26.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.85%)</title><rect x="23" y="292" width="10" height="15" fill="rgb(250,56,3)"/><text x="26.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.85%)</title><rect x="23" y="308" width="10" height="15" fill="rgb(216,139,1)"/><text x="26.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.85%)</title><rect x="23" y="324" width="10" height="15" fill="rgb(237,185,15)"/><text x="26.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (3 samples, 0.85%)</title><rect x="23" y="340" width="10" height="15" fill="rgb(226,59,1)"/><text x="26.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.85%)</title><rect x="23" y="356" width="10" height="15" fill="rgb(217,173,15)"/><text x="26.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.85%)</title><rect x="23" y="372" width="10" height="15" fill="rgb(213,142,51)"/><text x="26.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.85%)</title><rect x="23" y="388" width="10" height="15" fill="rgb(214,227,24)"/><text x="26.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.85%)</title><rect x="23" y="404" width="10" height="15" fill="rgb(228,212,16)"/><text x="26.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.85%)</title><rect x="23" y="420" width="10" height="15" fill="rgb(212,111,37)"/><text x="26.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.85%)</title><rect x="23" y="436" width="10" height="15" fill="rgb(205,38,10)"/><text x="26.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.85%)</title><rect x="23" y="452" width="10" height="15" fill="rgb(218,6,31)"/><text x="26.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.85%)</title><rect x="23" y="468" width="10" height="15" fill="rgb(222,167,20)"/><text x="26.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (3 samples, 0.85%)</title><rect x="23" y="484" width="10" height="15" fill="rgb(221,46,29)"/><text x="26.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.85%)</title><rect x="23" y="500" width="10" height="15" fill="rgb(226,197,51)"/><text x="26.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.85%)</title><rect x="23" y="516" width="10" height="15" fill="rgb(225,165,54)"/><text x="26.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.85%)</title><rect x="23" y="532" width="10" height="15" fill="rgb(206,122,24)"/><text x="26.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.85%)</title><rect x="23" y="548" width="10" height="15" fill="rgb(232,120,5)"/><text x="26.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.85%)</title><rect x="23" y="564" width="10" height="15" fill="rgb(248,78,7)"/><text x="26.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (2 samples, 0.56%)</title><rect x="26" y="580" width="7" height="15" fill="rgb(246,158,14)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="26" y="596" width="7" height="15" fill="rgb(217,53,15)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.56%)</title><rect x="26" y="612" width="7" height="15" fill="rgb(220,171,44)"/><text x="29.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="26" y="628" width="7" height="15" fill="rgb(246,85,53)"/><text x="29.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="26" y="644" width="7" height="15" fill="rgb(232,109,7)"/><text x="29.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="26" y="660" width="7" height="15" fill="rgb(222,193,33)"/><text x="29.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="26" y="676" width="7" height="15" fill="rgb(237,220,32)"/><text x="29.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="26" y="692" width="7" height="15" fill="rgb(211,214,44)"/><text x="29.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="26" y="708" width="7" height="15" fill="rgb(236,75,28)"/><text x="29.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (2 samples, 0.56%)</title><rect x="26" y="724" width="7" height="15" fill="rgb(207,15,22)"/><text x="29.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="26" y="740" width="7" height="15" fill="rgb(225,12,37)"/><text x="29.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="26" y="756" width="7" height="15" fill="rgb(238,80,5)"/><text x="29.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="26" y="772" width="7" height="15" fill="rgb(224,148,30)"/><text x="29.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="26" y="788" width="7" height="15" fill="rgb(239,68,9)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="26" y="804" width="7" height="15" fill="rgb(228,122,32)"/><text x="29.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (2 samples, 0.56%)</title><rect x="26" y="820" width="7" height="15" fill="rgb(216,144,25)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="26" y="836" width="7" height="15" fill="rgb(212,129,3)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="26" y="852" width="7" height="15" fill="rgb(210,147,31)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="26" y="868" width="7" height="15" fill="rgb(219,36,40)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="26" y="884" width="7" height="15" fill="rgb(230,51,47)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="26" y="900" width="7" height="15" fill="rgb(235,30,29)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (2 samples, 0.56%)</title><rect x="26" y="916" width="7" height="15" fill="rgb(242,83,40)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="26" y="932" width="7" height="15" fill="rgb(216,131,22)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.56%)</title><rect x="26" y="948" width="7" height="15" fill="rgb(236,83,22)"/><text x="29.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="26" y="964" width="7" height="15" fill="rgb(245,119,16)"/><text x="29.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="26" y="980" width="7" height="15" fill="rgb(207,48,43)"/><text x="29.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="26" y="996" width="7" height="15" fill="rgb(208,93,26)"/><text x="29.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="26" y="1012" width="7" height="15" fill="rgb(219,80,10)"/><text x="29.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="26" y="1028" width="7" height="15" fill="rgb(245,21,24)"/><text x="29.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="26" y="1044" width="7" height="15" fill="rgb(244,212,34)"/><text x="29.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:11) (2 samples, 0.56%)</title><rect x="26" y="1060" width="7" height="15" fill="rgb(241,53,42)"/><text x="29.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="26" y="1076" width="7" height="15" fill="rgb(245,52,24)"/><text x="29.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="26" y="1092" width="7" height="15" fill="rgb(215,71,50)"/><text x="29.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="26" y="1108" width="7" height="15" fill="rgb(230,224,27)"/><text x="29.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="26" y="1124" width="7" height="15" fill="rgb(253,229,41)"/><text x="29.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="26" y="1140" width="7" height="15" fill="rgb(237,76,1)"/><text x="29.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py:6) (2 samples, 0.56%)</title><rect x="26" y="1156" width="7" height="15" fill="rgb(248,60,22)"/><text x="29.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="26" y="1172" width="7" height="15" fill="rgb(228,87,12)"/><text x="29.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="26" y="1188" width="7" height="15" fill="rgb(232,221,19)"/><text x="29.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="26" y="1204" width="7" height="15" fill="rgb(207,63,43)"/><text x="29.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (2 samples, 0.56%)</title><rect x="26" y="1220" width="7" height="15" fill="rgb(208,9,1)"/><text x="29.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (2 samples, 0.56%)</title><rect x="26" y="1236" width="7" height="15" fill="rgb(254,147,2)"/><text x="29.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (2 samples, 0.56%)</title><rect x="26" y="1252" width="7" height="15" fill="rgb(253,101,23)"/><text x="29.00" y="1262.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.28%)</title><rect x="33" y="340" width="3" height="15" fill="rgb(227,37,22)"/><text x="36.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="33" y="356" width="3" height="15" fill="rgb(218,192,37)"/><text x="36.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="33" y="372" width="3" height="15" fill="rgb(227,49,16)"/><text x="36.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="33" y="388" width="3" height="15" fill="rgb(254,158,14)"/><text x="36.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="33" y="404" width="3" height="15" fill="rgb(251,142,11)"/><text x="36.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="33" y="420" width="3" height="15" fill="rgb(247,108,5)"/><text x="36.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:22) (1 samples, 0.28%)</title><rect x="33" y="436" width="3" height="15" fill="rgb(209,216,2)"/><text x="36.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="33" y="452" width="3" height="15" fill="rgb(230,201,1)"/><text x="36.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="33" y="468" width="3" height="15" fill="rgb(218,224,35)"/><text x="36.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="33" y="484" width="3" height="15" fill="rgb(213,195,30)"/><text x="36.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="33" y="500" width="3" height="15" fill="rgb(234,73,20)"/><text x="36.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="33" y="516" width="3" height="15" fill="rgb(224,39,51)"/><text x="36.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_twenty_newsgroups.py:45) (1 samples, 0.28%)</title><rect x="33" y="532" width="3" height="15" fill="rgb(247,32,22)"/><text x="36.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="33" y="548" width="3" height="15" fill="rgb(224,1,20)"/><text x="36.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.28%)</title><rect x="33" y="564" width="3" height="15" fill="rgb(223,38,23)"/><text x="36.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="33" y="580" width="3" height="15" fill="rgb(245,139,8)"/><text x="36.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="33" y="596" width="3" height="15" fill="rgb(247,175,4)"/><text x="36.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="33" y="612" width="3" height="15" fill="rgb(214,82,34)"/><text x="36.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="33" y="628" width="3" height="15" fill="rgb(222,68,42)"/><text x="36.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="33" y="644" width="3" height="15" fill="rgb(214,45,54)"/><text x="36.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="33" y="660" width="3" height="15" fill="rgb(253,206,47)"/><text x="36.00" y="670.50"></text></g><g><title>&lt;module&gt; (sklearn/feature_extraction/__init__.py:10) (1 samples, 0.28%)</title><rect x="33" y="676" width="3" height="15" fill="rgb(220,118,53)"/><text x="36.00" y="686.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="33" y="692" width="3" height="15" fill="rgb(253,166,46)"/><text x="36.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="33" y="708" width="3" height="15" fill="rgb(222,24,11)"/><text x="36.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="33" y="724" width="3" height="15" fill="rgb(206,9,17)"/><text x="36.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="33" y="740" width="3" height="15" fill="rgb(215,125,27)"/><text x="36.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="33" y="756" width="3" height="15" fill="rgb(239,97,2)"/><text x="36.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="33" y="772" width="3" height="15" fill="rgb(239,3,19)"/><text x="36.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="33" y="788" width="3" height="15" fill="rgb(227,46,21)"/><text x="36.00" y="798.50"></text></g><g><title>&lt;module&gt; (sklearn/feature_extraction/text.py:31) (1 samples, 0.28%)</title><rect x="33" y="804" width="3" height="15" fill="rgb(211,121,36)"/><text x="36.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="33" y="820" width="3" height="15" fill="rgb(251,69,40)"/><text x="36.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.28%)</title><rect x="33" y="836" width="3" height="15" fill="rgb(212,173,19)"/><text x="36.00" y="846.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.28%)</title><rect x="33" y="852" width="3" height="15" fill="rgb(250,203,5)"/><text x="36.00" y="862.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.28%)</title><rect x="33" y="868" width="3" height="15" fill="rgb(206,98,31)"/><text x="36.00" y="878.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.28%)</title><rect x="33" y="884" width="3" height="15" fill="rgb(211,172,14)"/><text x="36.00" y="894.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1396) (1 samples, 0.28%)</title><rect x="33" y="900" width="3" height="15" fill="rgb(244,85,18)"/><text x="36.00" y="910.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1354) (1 samples, 0.28%)</title><rect x="33" y="916" width="3" height="15" fill="rgb(238,205,28)"/><text x="36.00" y="926.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;:606) (1 samples, 0.28%)</title><rect x="33" y="932" width="3" height="15" fill="rgb(245,199,11)"/><text x="36.00" y="942.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap&gt;:373) (1 samples, 0.28%)</title><rect x="33" y="948" width="3" height="15" fill="rgb(249,117,45)"/><text x="36.00" y="958.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:4) (9 samples, 2.54%)</title><rect x="10" y="52" width="29" height="15" fill="rgb(230,7,22)"/><text x="13.00" y="62.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.54%)</title><rect x="10" y="68" width="29" height="15" fill="rgb(228,199,13)"/><text x="13.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.54%)</title><rect x="10" y="84" width="29" height="15" fill="rgb(248,147,0)"/><text x="13.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.54%)</title><rect x="10" y="100" width="29" height="15" fill="rgb(210,69,11)"/><text x="13.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.54%)</title><rect x="10" y="116" width="29" height="15" fill="rgb(244,70,0)"/><text x="13.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.54%)</title><rect x="10" y="132" width="29" height="15" fill="rgb(250,153,16)"/><text x="13.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_b_reg.py:7) (5 samples, 1.41%)</title><rect x="23" y="148" width="16" height="15" fill="rgb(236,71,15)"/><text x="26.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.41%)</title><rect x="23" y="164" width="16" height="15" fill="rgb(217,187,23)"/><text x="26.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.41%)</title><rect x="23" y="180" width="16" height="15" fill="rgb(222,97,16)"/><text x="26.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.41%)</title><rect x="23" y="196" width="16" height="15" fill="rgb(218,27,13)"/><text x="26.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.41%)</title><rect x="23" y="212" width="16" height="15" fill="rgb(210,1,39)"/><text x="26.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.41%)</title><rect x="23" y="228" width="16" height="15" fill="rgb(226,189,20)"/><text x="26.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (2 samples, 0.56%)</title><rect x="33" y="244" width="6" height="15" fill="rgb(212,149,1)"/><text x="36.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="33" y="260" width="6" height="15" fill="rgb(254,100,54)"/><text x="36.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="33" y="276" width="6" height="15" fill="rgb(249,56,52)"/><text x="36.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="33" y="292" width="6" height="15" fill="rgb(222,190,27)"/><text x="36.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="33" y="308" width="6" height="15" fill="rgb(235,199,44)"/><text x="36.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="33" y="324" width="6" height="15" fill="rgb(231,186,18)"/><text x="36.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (1 samples, 0.28%)</title><rect x="36" y="340" width="3" height="15" fill="rgb(230,216,14)"/><text x="39.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="36" y="356" width="3" height="15" fill="rgb(228,174,11)"/><text x="39.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="36" y="372" width="3" height="15" fill="rgb(224,194,36)"/><text x="39.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="36" y="388" width="3" height="15" fill="rgb(206,119,2)"/><text x="39.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="36" y="404" width="3" height="15" fill="rgb(227,220,11)"/><text x="39.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="420" width="3" height="15" fill="rgb(233,21,48)"/><text x="39.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.28%)</title><rect x="36" y="436" width="3" height="15" fill="rgb(213,34,2)"/><text x="39.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="36" y="452" width="3" height="15" fill="rgb(227,72,29)"/><text x="39.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.28%)</title><rect x="36" y="468" width="3" height="15" fill="rgb(221,96,15)"/><text x="39.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="484" width="3" height="15" fill="rgb(213,131,3)"/><text x="39.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="36" y="500" width="3" height="15" fill="rgb(240,62,8)"/><text x="39.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="36" y="516" width="3" height="15" fill="rgb(208,110,26)"/><text x="39.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="36" y="532" width="3" height="15" fill="rgb(227,195,10)"/><text x="39.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="36" y="548" width="3" height="15" fill="rgb(211,8,50)"/><text x="39.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="564" width="3" height="15" fill="rgb(238,162,54)"/><text x="39.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.28%)</title><rect x="36" y="580" width="3" height="15" fill="rgb(215,205,2)"/><text x="39.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="36" y="596" width="3" height="15" fill="rgb(248,135,23)"/><text x="39.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="36" y="612" width="3" height="15" fill="rgb(241,202,29)"/><text x="39.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="36" y="628" width="3" height="15" fill="rgb(228,163,26)"/><text x="39.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="36" y="644" width="3" height="15" fill="rgb(208,51,32)"/><text x="39.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="660" width="3" height="15" fill="rgb(220,23,25)"/><text x="39.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.28%)</title><rect x="36" y="676" width="3" height="15" fill="rgb(250,90,13)"/><text x="39.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="36" y="692" width="3" height="15" fill="rgb(209,150,22)"/><text x="39.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="36" y="708" width="3" height="15" fill="rgb(250,35,32)"/><text x="39.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="36" y="724" width="3" height="15" fill="rgb(231,224,52)"/><text x="39.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="36" y="740" width="3" height="15" fill="rgb(247,85,41)"/><text x="39.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="756" width="3" height="15" fill="rgb(237,43,17)"/><text x="39.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.28%)</title><rect x="36" y="772" width="3" height="15" fill="rgb(252,129,9)"/><text x="39.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="36" y="788" width="3" height="15" fill="rgb(247,192,24)"/><text x="39.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="36" y="804" width="3" height="15" fill="rgb(207,228,40)"/><text x="39.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="36" y="820" width="3" height="15" fill="rgb(254,110,5)"/><text x="39.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="36" y="836" width="3" height="15" fill="rgb(227,162,42)"/><text x="39.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="852" width="3" height="15" fill="rgb(244,216,27)"/><text x="39.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.28%)</title><rect x="36" y="868" width="3" height="15" fill="rgb(206,65,36)"/><text x="39.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="36" y="884" width="3" height="15" fill="rgb(253,226,43)"/><text x="39.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.28%)</title><rect x="36" y="900" width="3" height="15" fill="rgb(220,181,26)"/><text x="39.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="916" width="3" height="15" fill="rgb(237,222,17)"/><text x="39.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="36" y="932" width="3" height="15" fill="rgb(241,203,42)"/><text x="39.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="36" y="948" width="3" height="15" fill="rgb(232,125,0)"/><text x="39.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="36" y="964" width="3" height="15" fill="rgb(238,43,8)"/><text x="39.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="36" y="980" width="3" height="15" fill="rgb(223,223,51)"/><text x="39.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="996" width="3" height="15" fill="rgb(243,151,31)"/><text x="39.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.28%)</title><rect x="36" y="1012" width="3" height="15" fill="rgb(235,70,3)"/><text x="39.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="36" y="1028" width="3" height="15" fill="rgb(229,158,7)"/><text x="39.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="36" y="1044" width="3" height="15" fill="rgb(231,74,27)"/><text x="39.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="36" y="1060" width="3" height="15" fill="rgb(232,70,32)"/><text x="39.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="36" y="1076" width="3" height="15" fill="rgb(251,86,43)"/><text x="39.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="1092" width="3" height="15" fill="rgb(254,175,35)"/><text x="39.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.28%)</title><rect x="36" y="1108" width="3" height="15" fill="rgb(218,107,36)"/><text x="39.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="36" y="1124" width="3" height="15" fill="rgb(248,163,19)"/><text x="39.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="1140" width="3" height="15" fill="rgb(227,201,35)"/><text x="39.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="36" y="1156" width="3" height="15" fill="rgb(210,124,49)"/><text x="39.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="36" y="1172" width="3" height="15" fill="rgb(253,228,12)"/><text x="39.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="36" y="1188" width="3" height="15" fill="rgb(207,154,49)"/><text x="39.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="36" y="1204" width="3" height="15" fill="rgb(245,216,11)"/><text x="39.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="1220" width="3" height="15" fill="rgb(254,37,42)"/><text x="39.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.28%)</title><rect x="36" y="1236" width="3" height="15" fill="rgb(222,208,15)"/><text x="39.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="36" y="1252" width="3" height="15" fill="rgb(218,224,34)"/><text x="39.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="1268" width="3" height="15" fill="rgb(220,221,16)"/><text x="39.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="36" y="1284" width="3" height="15" fill="rgb(250,25,28)"/><text x="39.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="36" y="1300" width="3" height="15" fill="rgb(213,166,0)"/><text x="39.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="36" y="1316" width="3" height="15" fill="rgb(242,186,19)"/><text x="39.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="36" y="1332" width="3" height="15" fill="rgb(247,74,16)"/><text x="39.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="1348" width="3" height="15" fill="rgb(245,141,40)"/><text x="39.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.28%)</title><rect x="36" y="1364" width="3" height="15" fill="rgb(230,95,52)"/><text x="39.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="36" y="1380" width="3" height="15" fill="rgb(244,178,29)"/><text x="39.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="36" y="1396" width="3" height="15" fill="rgb(230,126,38)"/><text x="39.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="36" y="1412" width="3" height="15" fill="rgb(232,154,40)"/><text x="39.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="36" y="1428" width="3" height="15" fill="rgb(230,202,47)"/><text x="39.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="1444" width="3" height="15" fill="rgb(235,216,31)"/><text x="39.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.28%)</title><rect x="36" y="1460" width="3" height="15" fill="rgb(244,185,24)"/><text x="39.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.28%)</title><rect x="36" y="1476" width="3" height="15" fill="rgb(211,123,42)"/><text x="39.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.28%)</title><rect x="36" y="1492" width="3" height="15" fill="rgb(232,18,52)"/><text x="39.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.28%)</title><rect x="36" y="1508" width="3" height="15" fill="rgb(210,164,44)"/><text x="39.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.28%)</title><rect x="36" y="1524" width="3" height="15" fill="rgb(244,56,30)"/><text x="39.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.28%)</title><rect x="36" y="1540" width="3" height="15" fill="rgb(236,160,31)"/><text x="39.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.28%)</title><rect x="36" y="1556" width="3" height="15" fill="rgb(251,3,34)"/><text x="39.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:117) (1 samples, 0.28%)</title><rect x="36" y="1572" width="3" height="15" fill="rgb(223,145,3)"/><text x="39.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.28%)</title><rect x="36" y="1588" width="3" height="15" fill="rgb(220,186,31)"/><text x="39.00" y="1598.50"></text></g><g><title>0x7f42135fc0e9 (?) (1 samples, 0.28%)</title><rect x="36" y="1604" width="3" height="15" fill="rgb(210,197,4)"/><text x="39.00" y="1614.50"></text></g><g><title>0x7f421360022e (?) (1 samples, 0.28%)</title><rect x="36" y="1620" width="3" height="15" fill="rgb(214,13,6)"/><text x="39.00" y="1630.50"></text></g><g><title>0x7f421360017b (?) (1 samples, 0.28%)</title><rect x="36" y="1636" width="3" height="15" fill="rgb(235,81,42)"/><text x="39.00" y="1646.50"></text></g><g><title>0x7f42135ff3bf (?) (1 samples, 0.28%)</title><rect x="36" y="1652" width="3" height="15" fill="rgb(239,191,17)"/><text x="39.00" y="1662.50"></text></g><g><title>0x7f42135ff0b0 (?) (1 samples, 0.28%)</title><rect x="36" y="1668" width="3" height="15" fill="rgb(252,35,34)"/><text x="39.00" y="1678.50"></text></g><g><title>0x7f4223540a55 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="36" y="1684" width="3" height="15" fill="rgb(233,223,26)"/><text x="39.00" y="1694.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py:515) (1 samples, 0.28%)</title><rect x="39" y="148" width="4" height="15" fill="rgb(221,135,15)"/><text x="42.00" y="158.50"></text></g><g><title>shuffle (sklearn/utils/__init__.py:699) (1 samples, 0.28%)</title><rect x="39" y="164" width="4" height="15" fill="rgb(251,127,32)"/><text x="42.00" y="174.50"></text></g><g><title>resample (sklearn/utils/__init__.py:623) (1 samples, 0.28%)</title><rect x="39" y="180" width="4" height="15" fill="rgb(215,153,4)"/><text x="42.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/__init__.py:623) (1 samples, 0.28%)</title><rect x="39" y="196" width="4" height="15" fill="rgb(251,5,4)"/><text x="42.00" y="206.50"></text></g><g><title>_safe_indexing (sklearn/utils/__init__.py:411) (1 samples, 0.28%)</title><rect x="39" y="212" width="4" height="15" fill="rgb(253,130,52)"/><text x="42.00" y="222.50"></text></g><g><title>_array_indexing (sklearn/utils/__init__.py:197) (1 samples, 0.28%)</title><rect x="39" y="228" width="4" height="15" fill="rgb(245,192,2)"/><text x="42.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.28%)</title><rect x="39" y="244" width="4" height="15" fill="rgb(226,163,16)"/><text x="42.00" y="254.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (1 samples, 0.28%)</title><rect x="39" y="260" width="4" height="15" fill="rgb(235,15,19)"/><text x="42.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:40) (2 samples, 0.56%)</title><rect x="39" y="52" width="7" height="15" fill="rgb(232,157,52)"/><text x="42.00" y="62.50"></text></g><g><title>start (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:11) (2 samples, 0.56%)</title><rect x="39" y="68" width="7" height="15" fill="rgb(211,103,51)"/><text x="42.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_b_reg.py:39) (2 samples, 0.56%)</title><rect x="39" y="84" width="7" height="15" fill="rgb(211,165,32)"/><text x="42.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (2 samples, 0.56%)</title><rect x="39" y="100" width="7" height="15" fill="rgb(254,131,52)"/><text x="42.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py:627) (2 samples, 0.56%)</title><rect x="39" y="116" width="7" height="15" fill="rgb(238,37,22)"/><text x="42.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py:370) (2 samples, 0.56%)</title><rect x="39" y="132" width="7" height="15" fill="rgb(243,212,46)"/><text x="42.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py:521) (1 samples, 0.28%)</title><rect x="43" y="148" width="3" height="15" fill="rgb(235,27,42)"/><text x="46.00" y="158.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py:221) (1 samples, 0.28%)</title><rect x="43" y="164" width="3" height="15" fill="rgb(247,14,26)"/><text x="46.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:104) (1 samples, 0.28%)</title><rect x="43" y="180" width="3" height="15" fill="rgb(207,48,54)"/><text x="46.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.28%)</title><rect x="43" y="196" width="3" height="15" fill="rgb(219,100,20)"/><text x="46.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.28%)</title><rect x="43" y="212" width="3" height="15" fill="rgb(218,77,7)"/><text x="46.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (1 samples, 0.28%)</title><rect x="43" y="228" width="3" height="15" fill="rgb(222,229,23)"/><text x="46.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.28%)</title><rect x="43" y="244" width="3" height="15" fill="rgb(223,139,40)"/><text x="46.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:459) (1 samples, 0.28%)</title><rect x="43" y="260" width="3" height="15" fill="rgb(252,3,51)"/><text x="46.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.28%)</title><rect x="43" y="276" width="3" height="15" fill="rgb(250,172,4)"/><text x="46.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="43" y="292" width="3" height="15" fill="rgb(225,186,9)"/><text x="46.00" y="302.50"></text></g><g><title>dgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="43" y="308" width="3" height="15" fill="rgb(244,27,25)"/><text x="46.00" y="318.50"></text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="43" y="324" width="3" height="15" fill="rgb(247,127,10)"/><text x="46.00" y="334.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="43" y="340" width="3" height="15" fill="rgb(242,225,40)"/><text x="46.00" y="350.50"></text></g><g><title>sched_yield (libc-2.29.so) (1 samples, 0.28%)</title><rect x="43" y="356" width="3" height="15" fill="rgb(222,218,39)"/><text x="46.00" y="366.50"></text></g><g><title>setup_profile0 (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:25) (1 samples, 0.28%)</title><rect x="46" y="84" width="3" height="15" fill="rgb(222,10,34)"/><text x="49.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.28%)</title><rect x="46" y="100" width="3" height="15" fill="rgb(233,197,47)"/><text x="49.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:188) (1 samples, 0.28%)</title><rect x="46" y="116" width="3" height="15" fill="rgb(233,126,44)"/><text x="49.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py:40) (1 samples, 0.28%)</title><rect x="46" y="132" width="3" height="15" fill="rgb(210,188,11)"/><text x="49.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="46" y="148" width="3" height="15" fill="rgb(238,105,9)"/><text x="49.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="46" y="164" width="3" height="15" fill="rgb(252,162,48)"/><text x="49.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="46" y="180" width="3" height="15" fill="rgb(234,171,46)"/><text x="49.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="46" y="196" width="3" height="15" fill="rgb(205,24,29)"/><text x="49.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="46" y="212" width="3" height="15" fill="rgb(214,134,52)"/><text x="49.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py:8) (1 samples, 0.28%)</title><rect x="46" y="228" width="3" height="15" fill="rgb(230,34,52)"/><text x="49.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="46" y="244" width="3" height="15" fill="rgb(225,134,53)"/><text x="49.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="46" y="260" width="3" height="15" fill="rgb(234,177,30)"/><text x="49.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="46" y="276" width="3" height="15" fill="rgb(226,0,27)"/><text x="49.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="46" y="292" width="3" height="15" fill="rgb(225,139,18)"/><text x="49.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="46" y="308" width="3" height="15" fill="rgb(249,39,32)"/><text x="49.00" y="318.50"></text></g><g><title>&lt;module&gt; (lightgbm/basic.py:33) (1 samples, 0.28%)</title><rect x="46" y="324" width="3" height="15" fill="rgb(220,219,19)"/><text x="49.00" y="334.50"></text></g><g><title>_load_lib (lightgbm/basic.py:28) (1 samples, 0.28%)</title><rect x="46" y="340" width="3" height="15" fill="rgb(233,134,23)"/><text x="49.00" y="350.50"></text></g><g><title>LoadLibrary (ctypes/__init__.py:434) (1 samples, 0.28%)</title><rect x="46" y="356" width="3" height="15" fill="rgb(226,10,18)"/><text x="49.00" y="366.50"></text></g><g><title>__init__ (ctypes/__init__.py:356) (1 samples, 0.28%)</title><rect x="46" y="372" width="3" height="15" fill="rgb(215,88,39)"/><text x="49.00" y="382.50"></text></g><g><title>py_dl_open (callproc.c:1366) (1 samples, 0.28%)</title><rect x="46" y="388" width="3" height="15" fill="rgb(211,157,2)"/><text x="49.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.28%)</title><rect x="46" y="404" width="3" height="15" fill="rgb(246,191,18)"/><text x="49.00" y="414.50"></text></g><g><title>0x7f42237c8995 (libdl-2.29.so) (1 samples, 0.28%)</title><rect x="46" y="420" width="3" height="15" fill="rgb(211,193,42)"/><text x="49.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.28%)</title><rect x="46" y="436" width="3" height="15" fill="rgb(243,3,16)"/><text x="49.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.28%)</title><rect x="46" y="452" width="3" height="15" fill="rgb(214,16,50)"/><text x="49.00" y="462.50"></text></g><g><title>0x7f42237c8258 (libdl-2.29.so) (1 samples, 0.28%)</title><rect x="46" y="468" width="3" height="15" fill="rgb(222,200,52)"/><text x="49.00" y="478.50"></text></g><g><title>0x7f4223815d7a (ld-2.29.so) (1 samples, 0.28%)</title><rect x="46" y="484" width="3" height="15" fill="rgb(221,110,3)"/><text x="49.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.28%)</title><rect x="46" y="500" width="3" height="15" fill="rgb(251,42,5)"/><text x="49.00" y="510.50"></text></g><g><title>0x7f422381618b (ld-2.29.so) (1 samples, 0.28%)</title><rect x="46" y="516" width="3" height="15" fill="rgb(213,53,10)"/><text x="49.00" y="526.50"></text></g><g><title>0x7f422380bad9 (ld-2.29.so) (1 samples, 0.28%)</title><rect x="46" y="532" width="3" height="15" fill="rgb(252,208,14)"/><text x="49.00" y="542.50"></text></g><g><title>0x7f42238134c0 (ld-2.29.so) (1 samples, 0.28%)</title><rect x="46" y="548" width="3" height="15" fill="rgb(243,80,16)"/><text x="49.00" y="558.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:47) (2 samples, 0.56%)</title><rect x="46" y="52" width="7" height="15" fill="rgb(223,115,26)"/><text x="49.00" y="62.50"></text></g><g><title>profile0_skl (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:46) (2 samples, 0.56%)</title><rect x="46" y="68" width="7" height="15" fill="rgb(252,207,35)"/><text x="49.00" y="78.50"></text></g><g><title>setup_profile0 (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:26) (1 samples, 0.28%)</title><rect x="49" y="84" width="4" height="15" fill="rgb(210,137,18)"/><text x="52.00" y="94.50"></text></g><g><title>profile0 (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:18) (1 samples, 0.28%)</title><rect x="49" y="100" width="4" height="15" fill="rgb(241,121,12)"/><text x="52.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.28%)</title><rect x="49" y="116" width="4" height="15" fill="rgb(250,167,10)"/><text x="52.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (1 samples, 0.28%)</title><rect x="49" y="132" width="4" height="15" fill="rgb(235,35,38)"/><text x="52.00" y="142.50"></text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py:1333) (1 samples, 0.28%)</title><rect x="49" y="148" width="4" height="15" fill="rgb(206,24,44)"/><text x="52.00" y="158.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:685) (1 samples, 0.28%)</title><rect x="49" y="164" width="4" height="15" fill="rgb(244,90,26)"/><text x="52.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:109) (1 samples, 0.28%)</title><rect x="49" y="180" width="4" height="15" fill="rgb(214,144,52)"/><text x="52.00" y="190.50"></text></g><g><title>relu (sklearn/neural_network/_base.py:75) (1 samples, 0.28%)</title><rect x="49" y="196" width="4" height="15" fill="rgb(219,31,45)"/><text x="52.00" y="206.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (1 samples, 0.28%)</title><rect x="49" y="212" width="4" height="15" fill="rgb(223,206,52)"/><text x="52.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.28%)</title><rect x="49" y="228" width="4" height="15" fill="rgb(251,36,17)"/><text x="52.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (1 samples, 0.28%)</title><rect x="49" y="244" width="4" height="15" fill="rgb(247,173,52)"/><text x="52.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.28%)</title><rect x="49" y="260" width="4" height="15" fill="rgb(209,63,24)"/><text x="52.00" y="270.50"></text></g><g><title>array_clip (methods.c:2381) (1 samples, 0.28%)</title><rect x="49" y="276" width="4" height="15" fill="rgb(240,184,19)"/><text x="52.00" y="286.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.28%)</title><rect x="49" y="292" width="4" height="15" fill="rgb(209,107,4)"/><text x="52.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:132) (1 samples, 0.28%)</title><rect x="49" y="308" width="4" height="15" fill="rgb(215,86,35)"/><text x="52.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (1 samples, 0.28%)</title><rect x="49" y="324" width="4" height="15" fill="rgb(218,113,6)"/><text x="52.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.28%)</title><rect x="49" y="340" width="4" height="15" fill="rgb(225,229,39)"/><text x="52.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.28%)</title><rect x="49" y="356" width="4" height="15" fill="rgb(219,150,25)"/><text x="52.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.28%)</title><rect x="49" y="372" width="4" height="15" fill="rgb(211,217,14)"/><text x="52.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.28%)</title><rect x="49" y="388" width="4" height="15" fill="rgb(241,225,22)"/><text x="52.00" y="398.50"></text></g><g><title>DOUBLE_clip (clip.c.src:96) (1 samples, 0.28%)</title><rect x="49" y="404" width="4" height="15" fill="rgb(229,13,19)"/><text x="52.00" y="414.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (9 samples, 2.54%)</title><rect x="53" y="212" width="30" height="15" fill="rgb(225,30,48)"/><text x="56.00" y="222.50">dg..</text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 3.94%)</title><rect x="83" y="212" width="46" height="15" fill="rgb(234,78,45)"/><text x="86.00" y="222.50">dgem..</text></g><g><title>dgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="129" y="212" width="3" height="15" fill="rgb(221,33,40)"/><text x="132.00" y="222.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.28%)</title><rect x="132" y="276" width="4" height="15" fill="rgb(244,132,21)"/><text x="135.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.28%)</title><rect x="132" y="292" width="4" height="15" fill="rgb(244,166,17)"/><text x="135.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.28%)</title><rect x="132" y="308" width="4" height="15" fill="rgb(206,67,21)"/><text x="135.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.28%)</title><rect x="132" y="324" width="4" height="15" fill="rgb(207,0,15)"/><text x="135.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.28%)</title><rect x="132" y="340" width="4" height="15" fill="rgb(237,100,3)"/><text x="135.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.28%)</title><rect x="132" y="356" width="4" height="15" fill="rgb(222,69,16)"/><text x="135.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.28%)</title><rect x="132" y="372" width="4" height="15" fill="rgb(252,83,27)"/><text x="135.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="132" y="388" width="4" height="15" fill="rgb(224,41,24)"/><text x="135.00" y="398.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.28%)</title><rect x="136" y="308" width="3" height="15" fill="rgb(250,10,29)"/><text x="139.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.28%)</title><rect x="136" y="324" width="3" height="15" fill="rgb(205,71,43)"/><text x="139.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (3 samples, 0.85%)</title><rect x="132" y="244" width="10" height="15" fill="rgb(253,57,0)"/><text x="135.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (3 samples, 0.85%)</title><rect x="132" y="260" width="10" height="15" fill="rgb(207,119,39)"/><text x="135.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (2 samples, 0.56%)</title><rect x="136" y="276" width="6" height="15" fill="rgb(218,47,12)"/><text x="139.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.56%)</title><rect x="136" y="292" width="6" height="15" fill="rgb(253,173,49)"/><text x="139.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.28%)</title><rect x="139" y="308" width="3" height="15" fill="rgb(254,29,34)"/><text x="142.00" y="318.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="139" y="324" width="3" height="15" fill="rgb(250,88,45)"/><text x="142.00" y="334.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="142" y="308" width="4" height="15" fill="rgb(207,100,32)"/><text x="145.00" y="318.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:459) (19 samples, 5.35%)</title><rect x="142" y="260" width="64" height="15" fill="rgb(251,94,4)"/><text x="145.00" y="270.50">DOUBLE_..</text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (19 samples, 5.35%)</title><rect x="142" y="276" width="64" height="15" fill="rgb(246,78,6)"/><text x="145.00" y="286.50">DOUBLE_..</text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 5.35%)</title><rect x="142" y="292" width="64" height="15" fill="rgb(227,136,39)"/><text x="145.00" y="302.50">cblas_d..</text></g><g><title>dgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 5.07%)</title><rect x="146" y="308" width="60" height="15" fill="rgb(223,215,0)"/><text x="149.00" y="318.50">dgemv_..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 5.07%)</title><rect x="146" y="324" width="60" height="15" fill="rgb(220,51,41)"/><text x="149.00" y="334.50">exec_b..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 5.07%)</title><rect x="146" y="340" width="60" height="15" fill="rgb(205,204,34)"/><text x="149.00" y="350.50">exec_b..</text></g><g><title>sched_yield (libc-2.29.so) (18 samples, 5.07%)</title><rect x="146" y="356" width="60" height="15" fill="rgb(213,33,6)"/><text x="149.00" y="366.50">sched_..</text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:104) (67 samples, 18.87%)</title><rect x="53" y="180" width="222" height="15" fill="rgb(206,66,23)"/><text x="56.00" y="190.50">_forward_pass (sklearn/neural..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (67 samples, 18.87%)</title><rect x="53" y="196" width="222" height="15" fill="rgb(215,24,15)"/><text x="56.00" y="206.50">safe_sparse_dot (sklearn/util..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (43 samples, 12.11%)</title><rect x="132" y="212" width="143" height="15" fill="rgb(221,128,2)"/><text x="135.00" y="222.50">ufunc_generic_call..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (43 samples, 12.11%)</title><rect x="132" y="228" width="143" height="15" fill="rgb(238,139,24)"/><text x="135.00" y="238.50">PyUFunc_GenericFun..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (40 samples, 11.27%)</title><rect x="142" y="244" width="133" height="15" fill="rgb(205,7,39)"/><text x="145.00" y="254.50">PyUFunc_Generali..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (21 samples, 5.92%)</title><rect x="206" y="260" width="69" height="15" fill="rgb(216,69,15)"/><text x="209.00" y="270.50">DOUBLE_..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (21 samples, 5.92%)</title><rect x="206" y="276" width="69" height="15" fill="rgb(221,93,25)"/><text x="209.00" y="286.50">cblas_d..</text></g><g><title>dgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (21 samples, 5.92%)</title><rect x="206" y="292" width="69" height="15" fill="rgb(252,215,36)"/><text x="209.00" y="302.50">dgemm_t..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (21 samples, 5.92%)</title><rect x="206" y="308" width="69" height="15" fill="rgb(221,107,13)"/><text x="209.00" y="318.50">gemm_dr..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 5.63%)</title><rect x="209" y="324" width="66" height="15" fill="rgb(233,188,14)"/><text x="212.00" y="334.50">exec_bl..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 5.63%)</title><rect x="209" y="340" width="66" height="15" fill="rgb(231,16,53)"/><text x="212.00" y="350.50">exec_bl..</text></g><g><title>sched_yield (libc-2.29.so) (20 samples, 5.63%)</title><rect x="209" y="356" width="66" height="15" fill="rgb(231,16,14)"/><text x="212.00" y="366.50">sched_y..</text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (11 samples, 3.10%)</title><rect x="275" y="292" width="37" height="15" fill="rgb(227,64,53)"/><text x="278.00" y="302.50">sse..</text></g><g><title>_mm_add_pd (emmintrin.h:229) (11 samples, 3.10%)</title><rect x="275" y="308" width="37" height="15" fill="rgb(240,217,6)"/><text x="278.00" y="318.50">_mm..</text></g><g><title>DOUBLE_add (loops.c.src:1755) (19 samples, 5.35%)</title><rect x="275" y="260" width="64" height="15" fill="rgb(223,175,10)"/><text x="278.00" y="270.50">DOUBLE_..</text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (19 samples, 5.35%)</title><rect x="275" y="276" width="64" height="15" fill="rgb(241,78,7)"/><text x="278.00" y="286.50">run_bin..</text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (8 samples, 2.25%)</title><rect x="312" y="292" width="27" height="15" fill="rgb(248,140,32)"/><text x="315.00" y="302.50">s..</text></g><g><title>_mm_store_pd (emmintrin.h:147) (8 samples, 2.25%)</title><rect x="312" y="308" width="27" height="15" fill="rgb(210,189,22)"/><text x="315.00" y="318.50">_..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:319) (1 samples, 0.28%)</title><rect x="339" y="260" width="3" height="15" fill="rgb(243,16,25)"/><text x="342.00" y="270.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c:1800) (1 samples, 0.28%)</title><rect x="339" y="276" width="3" height="15" fill="rgb(240,202,46)"/><text x="342.00" y="286.50"></text></g><g><title>0x7f4223560ddd (libc-2.29.so) (1 samples, 0.28%)</title><rect x="342" y="308" width="3" height="15" fill="rgb(229,151,40)"/><text x="345.00" y="318.50"></text></g><g><title>0x7f4223560f36 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="345" y="308" width="4" height="15" fill="rgb(229,173,4)"/><text x="348.00" y="318.50"></text></g><g><title>0x7f4223560f4a (libc-2.29.so) (1 samples, 0.28%)</title><rect x="349" y="308" width="3" height="15" fill="rgb(234,94,44)"/><text x="352.00" y="318.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:105) (25 samples, 7.04%)</title><rect x="275" y="180" width="84" height="15" fill="rgb(211,222,54)"/><text x="278.00" y="190.50">_forward_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (25 samples, 7.04%)</title><rect x="275" y="196" width="84" height="15" fill="rgb(250,93,5)"/><text x="278.00" y="206.50">ufunc_gen..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (25 samples, 7.04%)</title><rect x="275" y="212" width="84" height="15" fill="rgb(225,105,18)"/><text x="278.00" y="222.50">PyUFunc_G..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (25 samples, 7.04%)</title><rect x="275" y="228" width="84" height="15" fill="rgb(238,24,30)"/><text x="278.00" y="238.50">execute_l..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (25 samples, 7.04%)</title><rect x="275" y="244" width="84" height="15" fill="rgb(227,220,30)"/><text x="278.00" y="254.50">iterator_..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:322) (5 samples, 1.41%)</title><rect x="342" y="260" width="17" height="15" fill="rgb(239,23,25)"/><text x="345.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 1.41%)</title><rect x="342" y="276" width="17" height="15" fill="rgb(238,146,43)"/><text x="345.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (5 samples, 1.41%)</title><rect x="342" y="292" width="17" height="15" fill="rgb(218,93,52)"/><text x="345.00" y="302.50"></text></g><g><title>0x7f4223560f4e (libc-2.29.so) (2 samples, 0.56%)</title><rect x="352" y="308" width="7" height="15" fill="rgb(231,136,5)"/><text x="355.00" y="318.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:372) (1 samples, 0.28%)</title><rect x="359" y="212" width="3" height="15" fill="rgb(244,183,13)"/><text x="362.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.28%)</title><rect x="362" y="212" width="3" height="15" fill="rgb(246,224,54)"/><text x="365.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (1 samples, 0.28%)</title><rect x="362" y="228" width="3" height="15" fill="rgb(218,86,26)"/><text x="365.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (1 samples, 0.28%)</title><rect x="362" y="244" width="3" height="15" fill="rgb(240,202,46)"/><text x="365.00" y="254.50"></text></g><g><title>array_clip (methods.c:2381) (1 samples, 0.28%)</title><rect x="362" y="260" width="3" height="15" fill="rgb(224,24,8)"/><text x="365.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.28%)</title><rect x="362" y="276" width="3" height="15" fill="rgb(219,131,26)"/><text x="365.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.28%)</title><rect x="362" y="292" width="3" height="15" fill="rgb(238,160,54)"/><text x="365.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:132) (1 samples, 0.28%)</title><rect x="362" y="308" width="3" height="15" fill="rgb(209,139,12)"/><text x="365.00" y="318.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.28%)</title><rect x="365" y="228" width="3" height="15" fill="rgb(232,64,0)"/><text x="368.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.28%)</title><rect x="365" y="244" width="3" height="15" fill="rgb(237,198,52)"/><text x="368.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.28%)</title><rect x="365" y="260" width="3" height="15" fill="rgb(236,5,10)"/><text x="368.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.28%)</title><rect x="365" y="276" width="3" height="15" fill="rgb(244,175,6)"/><text x="368.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.28%)</title><rect x="365" y="292" width="3" height="15" fill="rgb(205,166,5)"/><text x="368.00" y="302.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.56%)</title><rect x="375" y="324" width="7" height="15" fill="rgb(211,171,8)"/><text x="378.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.56%)</title><rect x="375" y="340" width="7" height="15" fill="rgb(223,137,14)"/><text x="378.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.56%)</title><rect x="375" y="356" width="7" height="15" fill="rgb(249,187,1)"/><text x="378.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (2 samples, 0.56%)</title><rect x="375" y="372" width="7" height="15" fill="rgb(246,59,39)"/><text x="378.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.28%)</title><rect x="378" y="388" width="4" height="15" fill="rgb(234,15,36)"/><text x="381.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.28%)</title><rect x="378" y="404" width="4" height="15" fill="rgb(252,189,14)"/><text x="381.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.28%)</title><rect x="378" y="420" width="4" height="15" fill="rgb(246,181,18)"/><text x="381.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.28%)</title><rect x="378" y="436" width="4" height="15" fill="rgb(211,109,6)"/><text x="381.00" y="446.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (3 samples, 0.85%)</title><rect x="375" y="308" width="10" height="15" fill="rgb(252,33,10)"/><text x="378.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.28%)</title><rect x="382" y="324" width="3" height="15" fill="rgb(251,70,37)"/><text x="385.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.28%)</title><rect x="382" y="340" width="3" height="15" fill="rgb(244,100,9)"/><text x="385.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.28%)</title><rect x="382" y="356" width="3" height="15" fill="rgb(227,143,20)"/><text x="385.00" y="366.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:367) (1 samples, 0.28%)</title><rect x="382" y="372" width="3" height="15" fill="rgb(223,180,25)"/><text x="385.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (1 samples, 0.28%)</title><rect x="385" y="308" width="3" height="15" fill="rgb(230,13,14)"/><text x="388.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.28%)</title><rect x="385" y="324" width="3" height="15" fill="rgb(206,128,3)"/><text x="388.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.28%)</title><rect x="385" y="340" width="3" height="15" fill="rgb(252,164,11)"/><text x="388.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.28%)</title><rect x="385" y="356" width="3" height="15" fill="rgb(218,74,16)"/><text x="388.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2003) (1 samples, 0.28%)</title><rect x="385" y="372" width="3" height="15" fill="rgb(246,32,0)"/><text x="388.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.28%)</title><rect x="392" y="340" width="3" height="15" fill="rgb(206,16,20)"/><text x="395.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:581) (1 samples, 0.28%)</title><rect x="392" y="356" width="3" height="15" fill="rgb(237,59,2)"/><text x="395.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.28%)</title><rect x="395" y="356" width="3" height="15" fill="rgb(230,185,28)"/><text x="398.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.28%)</title><rect x="395" y="372" width="3" height="15" fill="rgb(246,174,3)"/><text x="398.00" y="382.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.28%)</title><rect x="395" y="388" width="3" height="15" fill="rgb(234,131,6)"/><text x="398.00" y="398.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.28%)</title><rect x="395" y="404" width="3" height="15" fill="rgb(244,192,21)"/><text x="398.00" y="414.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:952) (1 samples, 0.28%)</title><rect x="395" y="420" width="3" height="15" fill="rgb(234,227,2)"/><text x="398.00" y="430.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.28%)</title><rect x="395" y="436" width="3" height="15" fill="rgb(212,151,8)"/><text x="398.00" y="446.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1511) (1 samples, 0.28%)</title><rect x="395" y="452" width="3" height="15" fill="rgb(217,24,37)"/><text x="398.00" y="462.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.28%)</title><rect x="398" y="388" width="4" height="15" fill="rgb(211,153,29)"/><text x="401.00" y="398.50"></text></g><g><title>DOUBLE_clip (clip.c.src:96) (13 samples, 3.66%)</title><rect x="402" y="404" width="43" height="15" fill="rgb(246,136,15)"/><text x="405.00" y="414.50">DOUB..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (48 samples, 13.52%)</title><rect x="395" y="340" width="160" height="15" fill="rgb(250,201,15)"/><text x="398.00" y="350.50">ufunc_generic_call (..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (47 samples, 13.24%)</title><rect x="398" y="356" width="157" height="15" fill="rgb(241,190,38)"/><text x="401.00" y="366.50">PyUFunc_GenericFunct..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (47 samples, 13.24%)</title><rect x="398" y="372" width="157" height="15" fill="rgb(213,192,8)"/><text x="401.00" y="382.50">execute_legacy_ufunc..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (46 samples, 12.96%)</title><rect x="402" y="388" width="153" height="15" fill="rgb(212,223,45)"/><text x="405.00" y="398.50">iterator_loop (ufun..</text></g><g><title>DOUBLE_clip (clip.c.src:97) (33 samples, 9.30%)</title><rect x="445" y="404" width="110" height="15" fill="rgb(232,189,12)"/><text x="448.00" y="414.50">DOUBLE_clip (..</text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:54) (152 samples, 42.82%)</title><rect x="53" y="52" width="505" height="15" fill="rgb(220,123,49)"/><text x="56.00" y="62.50">&lt;module&gt; (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:54)</text></g><g><title>profile_skl (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:53) (152 samples, 42.82%)</title><rect x="53" y="68" width="505" height="15" fill="rgb(218,66,46)"/><text x="56.00" y="78.50">profile_skl (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:53)</text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:37) (152 samples, 42.82%)</title><rect x="53" y="84" width="505" height="15" fill="rgb(249,53,52)"/><text x="56.00" y="94.50">setup_profile (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:3..</text></g><g><title>profile (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:31) (152 samples, 42.82%)</title><rect x="53" y="100" width="505" height="15" fill="rgb(209,228,14)"/><text x="56.00" y="110.50">profile (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (152 samples, 42.82%)</title><rect x="53" y="116" width="505" height="15" fill="rgb(249,164,27)"/><text x="56.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (152 samples, 42.82%)</title><rect x="53" y="132" width="505" height="15" fill="rgb(222,113,44)"/><text x="56.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py:1333) (152 samples, 42.82%)</title><rect x="53" y="148" width="505" height="15" fill="rgb(220,194,51)"/><text x="56.00" y="158.50">predict (sklearn/neural_network/_multilayer_perceptron.py:1333)</text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:685) (152 samples, 42.82%)</title><rect x="53" y="164" width="505" height="15" fill="rgb(239,193,24)"/><text x="56.00" y="174.50">_predict (sklearn/neural_network/_multilayer_perceptron.py:685)</text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:109) (60 samples, 16.90%)</title><rect x="359" y="180" width="199" height="15" fill="rgb(217,149,10)"/><text x="362.00" y="190.50">_forward_pass (sklearn/neu..</text></g><g><title>relu (sklearn/neural_network/_base.py:75) (60 samples, 16.90%)</title><rect x="359" y="196" width="199" height="15" fill="rgb(225,122,24)"/><text x="362.00" y="206.50">relu (sklearn/neural_netwo..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (58 samples, 16.34%)</title><rect x="365" y="212" width="193" height="15" fill="rgb(242,41,12)"/><text x="368.00" y="222.50">clip (&lt;__array_function__..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (57 samples, 16.06%)</title><rect x="368" y="228" width="190" height="15" fill="rgb(240,98,37)"/><text x="371.00" y="238.50">array_implement_array_fu..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (56 samples, 15.77%)</title><rect x="372" y="244" width="186" height="15" fill="rgb(234,170,31)"/><text x="375.00" y="254.50">clip (numpy/core/fromnum..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (55 samples, 15.49%)</title><rect x="375" y="260" width="183" height="15" fill="rgb(221,10,34)"/><text x="378.00" y="270.50">_wrapfunc (numpy/core/f..</text></g><g><title>array_clip (methods.c:2381) (55 samples, 15.49%)</title><rect x="375" y="276" width="183" height="15" fill="rgb(211,101,51)"/><text x="378.00" y="286.50">array_clip (methods.c:2..</text></g><g><title>forward_ndarray_method (methods.c:108) (55 samples, 15.49%)</title><rect x="375" y="292" width="183" height="15" fill="rgb(207,115,38)"/><text x="378.00" y="302.50">forward_ndarray_method ..</text></g><g><title>_clip (numpy/core/_methods.py:132) (51 samples, 14.37%)</title><rect x="388" y="308" width="170" height="15" fill="rgb(234,89,54)"/><text x="391.00" y="318.50">_clip (numpy/core/_met..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (51 samples, 14.37%)</title><rect x="388" y="324" width="170" height="15" fill="rgb(220,148,11)"/><text x="391.00" y="334.50">_clip_dep_invoke_with_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.28%)</title><rect x="555" y="340" width="3" height="15" fill="rgb(245,57,20)"/><text x="558.00" y="350.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.28%)</title><rect x="555" y="356" width="3" height="15" fill="rgb(235,137,7)"/><text x="558.00" y="366.50"></text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:36) (1 samples, 0.28%)</title><rect x="558" y="84" width="3" height="15" fill="rgb(209,206,39)"/><text x="561.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.28%)</title><rect x="558" y="100" width="3" height="15" fill="rgb(247,61,31)"/><text x="561.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.28%)</title><rect x="558" y="116" width="3" height="15" fill="rgb(228,211,15)"/><text x="561.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.28%)</title><rect x="558" y="132" width="3" height="15" fill="rgb(223,76,53)"/><text x="561.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.28%)</title><rect x="558" y="148" width="3" height="15" fill="rgb(233,93,13)"/><text x="561.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.28%)</title><rect x="558" y="164" width="3" height="15" fill="rgb(247,114,35)"/><text x="561.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.28%)</title><rect x="558" y="180" width="3" height="15" fill="rgb(227,94,18)"/><text x="561.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.28%)</title><rect x="558" y="196" width="3" height="15" fill="rgb(242,110,25)"/><text x="561.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="558" y="212" width="3" height="15" fill="rgb(248,82,8)"/><text x="561.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="558" y="228" width="3" height="15" fill="rgb(234,84,0)"/><text x="561.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="558" y="244" width="3" height="15" fill="rgb(234,149,11)"/><text x="561.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="558" y="260" width="3" height="15" fill="rgb(207,34,32)"/><text x="561.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="558" y="276" width="3" height="15" fill="rgb(218,105,41)"/><text x="561.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.28%)</title><rect x="558" y="292" width="3" height="15" fill="rgb(224,216,54)"/><text x="561.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="558" y="308" width="3" height="15" fill="rgb(212,193,20)"/><text x="561.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="558" y="324" width="3" height="15" fill="rgb(239,150,10)"/><text x="561.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="558" y="340" width="3" height="15" fill="rgb(242,223,37)"/><text x="561.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="558" y="356" width="3" height="15" fill="rgb(221,17,11)"/><text x="561.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="558" y="372" width="3" height="15" fill="rgb(227,198,6)"/><text x="561.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:73) (1 samples, 0.28%)</title><rect x="558" y="388" width="3" height="15" fill="rgb(220,40,48)"/><text x="561.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="558" y="404" width="3" height="15" fill="rgb(242,161,48)"/><text x="561.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="558" y="420" width="3" height="15" fill="rgb(251,66,32)"/><text x="561.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="558" y="436" width="3" height="15" fill="rgb(214,201,24)"/><text x="561.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="558" y="452" width="3" height="15" fill="rgb(250,50,51)"/><text x="561.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="558" y="468" width="3" height="15" fill="rgb(248,98,12)"/><text x="561.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:89) (1 samples, 0.28%)</title><rect x="558" y="484" width="3" height="15" fill="rgb(225,132,5)"/><text x="561.00" y="494.50"></text></g><g><title>SVMClassifierDouble (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:102) (1 samples, 0.28%)</title><rect x="558" y="500" width="3" height="15" fill="rgb(212,158,54)"/><text x="561.00" y="510.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.56%)</title><rect x="568" y="180" width="7" height="15" fill="rgb(232,86,9)"/><text x="571.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.28%)</title><rect x="571" y="196" width="4" height="15" fill="rgb(233,100,43)"/><text x="574.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.28%)</title><rect x="575" y="276" width="3" height="15" fill="rgb(210,211,6)"/><text x="578.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.28%)</title><rect x="575" y="292" width="3" height="15" fill="rgb(208,42,25)"/><text x="578.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:767) (1 samples, 0.28%)</title><rect x="575" y="308" width="3" height="15" fill="rgb(233,227,40)"/><text x="578.00" y="318.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:702) (1 samples, 0.28%)</title><rect x="575" y="324" width="3" height="15" fill="rgb(227,202,7)"/><text x="578.00" y="334.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1867) (11 samples, 3.10%)</title><rect x="578" y="308" width="36" height="15" fill="rgb(208,203,34)"/><text x="581.00" y="318.50">FLO..</text></g><g><title>FLOAT_maximum (loops.c.src:1868) (7 samples, 1.97%)</title><rect x="614" y="308" width="24" height="15" fill="rgb(223,181,49)"/><text x="617.00" y="318.50">F..</text></g><g><title>FLOAT_maximum (loops.c.src:1869) (1 samples, 0.28%)</title><rect x="638" y="308" width="3" height="15" fill="rgb(207,62,1)"/><text x="641.00" y="318.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1871) (29 samples, 8.17%)</title><rect x="641" y="308" width="96" height="15" fill="rgb(209,59,19)"/><text x="644.00" y="318.50">FLOAT_maxim..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (51 samples, 14.37%)</title><rect x="575" y="196" width="169" height="15" fill="rgb(237,60,32)"/><text x="578.00" y="206.50">run (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (51 samples, 14.37%)</title><rect x="575" y="212" width="169" height="15" fill="rgb(235,207,39)"/><text x="578.00" y="222.50">run (mlprodict/onnxrt..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py:19) (51 samples, 14.37%)</title><rect x="575" y="228" width="169" height="15" fill="rgb(221,173,22)"/><text x="578.00" y="238.50">_run (mlprodict/onnxr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (51 samples, 14.37%)</title><rect x="575" y="244" width="169" height="15" fill="rgb(250,6,54)"/><text x="578.00" y="254.50">ufunc_generic_call (u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (51 samples, 14.37%)</title><rect x="575" y="260" width="169" height="15" fill="rgb(213,61,13)"/><text x="578.00" y="270.50">PyUFunc_GenericFuncti..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (50 samples, 14.08%)</title><rect x="578" y="276" width="166" height="15" fill="rgb(205,2,38)"/><text x="581.00" y="286.50">execute_legacy_ufunc_..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (50 samples, 14.08%)</title><rect x="578" y="292" width="166" height="15" fill="rgb(227,143,23)"/><text x="581.00" y="302.50">trivial_three_operand..</text></g><g><title>FLOAT_maximum (loops.c.src:1872) (2 samples, 0.56%)</title><rect x="737" y="308" width="7" height="15" fill="rgb(215,173,0)"/><text x="740.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.28%)</title><rect x="744" y="196" width="3" height="15" fill="rgb(218,210,20)"/><text x="747.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.28%)</title><rect x="747" y="212" width="4" height="15" fill="rgb(252,227,33)"/><text x="750.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (2 samples, 0.56%)</title><rect x="751" y="228" width="6" height="15" fill="rgb(253,35,36)"/><text x="754.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.56%)</title><rect x="751" y="244" width="6" height="15" fill="rgb(205,23,33)"/><text x="754.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.56%)</title><rect x="751" y="260" width="6" height="15" fill="rgb(249,164,4)"/><text x="754.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.56%)</title><rect x="751" y="276" width="6" height="15" fill="rgb(237,37,28)"/><text x="754.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.56%)</title><rect x="751" y="292" width="6" height="15" fill="rgb(243,208,12)"/><text x="754.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (2 samples, 0.56%)</title><rect x="751" y="308" width="6" height="15" fill="rgb(238,128,41)"/><text x="754.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (2 samples, 0.56%)</title><rect x="751" y="324" width="6" height="15" fill="rgb(231,138,45)"/><text x="754.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:603) (2 samples, 0.56%)</title><rect x="751" y="340" width="6" height="15" fill="rgb(249,77,7)"/><text x="754.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h:157) (2 samples, 0.56%)</title><rect x="751" y="356" width="6" height="15" fill="rgb(235,161,48)"/><text x="754.00" y="366.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.28%)</title><rect x="757" y="244" width="4" height="15" fill="rgb(227,108,10)"/><text x="760.00" y="254.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:367) (1 samples, 0.28%)</title><rect x="764" y="324" width="3" height="15" fill="rgb(244,194,4)"/><text x="767.00" y="334.50"></text></g><g><title>0x7f4223561103 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="764" y="340" width="3" height="15" fill="rgb(208,1,43)"/><text x="767.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (2 samples, 0.56%)</title><rect x="767" y="420" width="7" height="15" fill="rgb(234,85,47)"/><text x="770.00" y="430.50"></text></g><g><title>__lll_lock_wait (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="771" y="436" width="3" height="15" fill="rgb(230,51,1)"/><text x="774.00" y="446.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.85%)</title><rect x="767" y="404" width="10" height="15" fill="rgb(211,190,50)"/><text x="770.00" y="414.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="774" y="420" width="3" height="15" fill="rgb(236,86,54)"/><text x="777.00" y="430.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (22 samples, 6.20%)</title><rect x="777" y="404" width="73" height="15" fill="rgb(216,123,37)"/><text x="780.00" y="414.50">exec_bla..</text></g><g><title>sched_yield (libc-2.29.so) (22 samples, 6.20%)</title><rect x="777" y="420" width="73" height="15" fill="rgb(227,70,22)"/><text x="780.00" y="430.50">sched_yi..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:562) (26 samples, 7.32%)</title><rect x="767" y="324" width="87" height="15" fill="rgb(254,224,40)"/><text x="770.00" y="334.50">cblas_matr..</text></g><g><title>gemv (cblasfuncs.c:86) (26 samples, 7.32%)</title><rect x="767" y="340" width="87" height="15" fill="rgb(245,197,25)"/><text x="770.00" y="350.50">gemv (cbla..</text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (26 samples, 7.32%)</title><rect x="767" y="356" width="87" height="15" fill="rgb(248,113,47)"/><text x="770.00" y="366.50">cblas_sgem..</text></g><g><title>sgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (26 samples, 7.32%)</title><rect x="767" y="372" width="87" height="15" fill="rgb(217,191,12)"/><text x="770.00" y="382.50">sgemv_thre..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (26 samples, 7.32%)</title><rect x="767" y="388" width="87" height="15" fill="rgb(251,221,45)"/><text x="770.00" y="398.50">exec_blas ..</text></g><g><title>gemv_kernel (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="850" y="404" width="4" height="15" fill="rgb(215,93,48)"/><text x="853.00" y="414.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="850" y="420" width="4" height="15" fill="rgb(223,198,30)"/><text x="853.00" y="430.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="854" y="420" width="3" height="15" fill="rgb(216,107,21)"/><text x="857.00" y="430.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (51 samples, 14.37%)</title><rect x="764" y="276" width="170" height="15" fill="rgb(205,16,32)"/><text x="767.00" y="286.50">array_implement_array_..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (51 samples, 14.37%)</title><rect x="764" y="292" width="170" height="15" fill="rgb(230,42,49)"/><text x="767.00" y="302.50">array_matrixproduct (m..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (51 samples, 14.37%)</title><rect x="764" y="308" width="170" height="15" fill="rgb(250,146,37)"/><text x="767.00" y="318.50">PyArray_MatrixProduct2..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (24 samples, 6.76%)</title><rect x="854" y="324" width="80" height="15" fill="rgb(246,155,30)"/><text x="857.00" y="334.50">cblas_mat..</text></g><g><title>gemm (cblasfuncs.c:40) (24 samples, 6.76%)</title><rect x="854" y="340" width="80" height="15" fill="rgb(243,88,25)"/><text x="857.00" y="350.50">gemm (cbl..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (24 samples, 6.76%)</title><rect x="854" y="356" width="80" height="15" fill="rgb(225,52,4)"/><text x="857.00" y="366.50">cblas_sge..</text></g><g><title>sgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (24 samples, 6.76%)</title><rect x="854" y="372" width="80" height="15" fill="rgb(245,120,22)"/><text x="857.00" y="382.50">sgemm_thr..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (24 samples, 6.76%)</title><rect x="854" y="388" width="80" height="15" fill="rgb(234,223,28)"/><text x="857.00" y="398.50">gemm_driv..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (24 samples, 6.76%)</title><rect x="854" y="404" width="80" height="15" fill="rgb(223,155,41)"/><text x="857.00" y="414.50">exec_blas..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (23 samples, 6.48%)</title><rect x="857" y="420" width="77" height="15" fill="rgb(246,82,43)"/><text x="860.00" y="430.50">exec_bla..</text></g><g><title>sched_yield (libc-2.29.so) (23 samples, 6.48%)</title><rect x="857" y="436" width="77" height="15" fill="rgb(222,158,3)"/><text x="860.00" y="446.50">sched_yi..</text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.13%)</title><rect x="934" y="276" width="13" height="15" fill="rgb(211,140,31)"/><text x="937.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (119 samples, 33.52%)</title><rect x="575" y="180" width="395" height="15" fill="rgb(230,121,25)"/><text x="578.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (67 samples, 18.87%)</title><rect x="747" y="196" width="223" height="15" fill="rgb(241,7,54)"/><text x="750.00" y="206.50">run (mlprodict/onnxrt/ops_cpu..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (66 samples, 18.59%)</title><rect x="751" y="212" width="219" height="15" fill="rgb(249,208,36)"/><text x="754.00" y="222.50">run (mlprodict/onnxrt/ops_cp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (64 samples, 18.03%)</title><rect x="757" y="228" width="213" height="15" fill="rgb(207,8,28)"/><text x="760.00" y="238.50">_run (mlprodict/onnxrt/ops_c..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (63 samples, 17.75%)</title><rect x="761" y="244" width="209" height="15" fill="rgb(247,168,12)"/><text x="764.00" y="254.50">numpy_dot_inplace (mlprodic..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (62 samples, 17.46%)</title><rect x="764" y="260" width="206" height="15" fill="rgb(211,153,54)"/><text x="767.00" y="270.50">dot (&lt;__array_function__ in..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.97%)</title><rect x="947" y="276" width="23" height="15" fill="rgb(241,179,11)"/><text x="950.00" y="286.50">s..</text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:61) (125 samples, 35.21%)</title><rect x="558" y="52" width="415" height="15" fill="rgb(227,144,37)"/><text x="561.00" y="62.50">&lt;module&gt; (bench_MLPRegressor_default_b_reg_1000_4_12_flo..</text></g><g><title>profile_pyrt (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:60) (125 samples, 35.21%)</title><rect x="558" y="68" width="415" height="15" fill="rgb(250,26,9)"/><text x="561.00" y="78.50">profile_pyrt (bench_MLPRegressor_default_b_reg_1000_4_12..</text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:37) (124 samples, 34.93%)</title><rect x="561" y="84" width="412" height="15" fill="rgb(251,221,30)"/><text x="564.00" y="94.50">setup_profile (bench_MLPRegressor_default_b_reg_1000_4_1..</text></g><g><title>profile (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:31) (124 samples, 34.93%)</title><rect x="561" y="100" width="412" height="15" fill="rgb(205,16,10)"/><text x="564.00" y="110.50">profile (bench_MLPRegressor_default_b_reg_1000_4_12_floa..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (124 samples, 34.93%)</title><rect x="561" y="116" width="412" height="15" fill="rgb(251,122,41)"/><text x="564.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (124 samples, 34.93%)</title><rect x="561" y="132" width="412" height="15" fill="rgb(229,95,39)"/><text x="564.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (124 samples, 34.93%)</title><rect x="561" y="148" width="412" height="15" fill="rgb(242,166,43)"/><text x="564.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (124 samples, 34.93%)</title><rect x="561" y="164" width="412" height="15" fill="rgb(254,1,41)"/><text x="564.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.p..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.28%)</title><rect x="970" y="180" width="3" height="15" fill="rgb(241,91,6)"/><text x="973.00" y="190.50"></text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:36) (1 samples, 0.28%)</title><rect x="973" y="84" width="4" height="15" fill="rgb(244,212,35)"/><text x="976.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.28%)</title><rect x="973" y="100" width="4" height="15" fill="rgb(219,202,22)"/><text x="976.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (1 samples, 0.28%)</title><rect x="973" y="116" width="4" height="15" fill="rgb(221,41,23)"/><text x="976.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.28%)</title><rect x="973" y="132" width="4" height="15" fill="rgb(224,148,50)"/><text x="976.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.28%)</title><rect x="973" y="148" width="4" height="15" fill="rgb(249,159,45)"/><text x="976.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.28%)</title><rect x="973" y="164" width="4" height="15" fill="rgb(231,128,2)"/><text x="976.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.28%)</title><rect x="973" y="180" width="4" height="15" fill="rgb(227,135,2)"/><text x="976.00" y="190.50"></text></g><g><title>convert_sklearn_mlp_regressor (skl2onnx/operator_converters/multilayer_perceptron.py:166) (1 samples, 0.28%)</title><rect x="973" y="196" width="4" height="15" fill="rgb(243,40,6)"/><text x="976.00" y="206.50"></text></g><g><title>_predict (skl2onnx/operator_converters/multilayer_perceptron.py:81) (1 samples, 0.28%)</title><rect x="973" y="212" width="4" height="15" fill="rgb(222,84,48)"/><text x="976.00" y="222.50"></text></g><g><title>_forward_pass (skl2onnx/operator_converters/multilayer_perceptron.py:46) (1 samples, 0.28%)</title><rect x="973" y="228" width="4" height="15" fill="rgb(230,218,34)"/><text x="976.00" y="238.50"></text></g><g><title>apply_add (onnxconverter_common/onnx_ops.py:79) (1 samples, 0.28%)</title><rect x="973" y="244" width="4" height="15" fill="rgb(208,194,2)"/><text x="976.00" y="254.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py:55) (1 samples, 0.28%)</title><rect x="973" y="260" width="4" height="15" fill="rgb(230,87,3)"/><text x="976.00" y="270.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.28%)</title><rect x="973" y="276" width="4" height="15" fill="rgb(214,214,23)"/><text x="976.00" y="286.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:58) (1 samples, 0.28%)</title><rect x="973" y="292" width="4" height="15" fill="rgb(213,194,3)"/><text x="976.00" y="302.50"></text></g><g><title>google::protobuf::python::cmessage::SetFieldValue (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="973" y="308" width="4" height="15" fill="rgb(224,200,51)"/><text x="976.00" y="318.50"></text></g><g><title>google::protobuf::python::cmessage::InternalSetScalar (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="973" y="324" width="4" height="15" fill="rgb(222,159,53)"/><text x="976.00" y="334.50"></text></g><g><title>0x7f41e15c3ff9 (?) (1 samples, 0.28%)</title><rect x="980" y="212" width="3" height="15" fill="rgb(207,134,43)"/><text x="983.00" y="222.50"></text></g><g><title>0x7f41e15beef6 (?) (1 samples, 0.28%)</title><rect x="980" y="228" width="3" height="15" fill="rgb(228,54,3)"/><text x="983.00" y="238.50"></text></g><g><title>0x7f41e15b3962 (?) (1 samples, 0.28%)</title><rect x="980" y="244" width="3" height="15" fill="rgb(254,147,40)"/><text x="983.00" y="254.50"></text></g><g><title>0x7f41e15e77a7 (?) (1 samples, 0.28%)</title><rect x="980" y="260" width="3" height="15" fill="rgb(250,181,13)"/><text x="983.00" y="270.50"></text></g><g><title>0x7f41e15e7379 (?) (1 samples, 0.28%)</title><rect x="980" y="276" width="3" height="15" fill="rgb(253,79,46)"/><text x="983.00" y="286.50"></text></g><g><title>0x7f41e1a458b8 (?) (1 samples, 0.28%)</title><rect x="980" y="292" width="3" height="15" fill="rgb(241,200,28)"/><text x="983.00" y="302.50"></text></g><g><title>0x7f41e1a43c7f (?) (1 samples, 0.28%)</title><rect x="980" y="308" width="3" height="15" fill="rgb(253,139,28)"/><text x="983.00" y="318.50"></text></g><g><title>0x7f41e1a5699c (?) (1 samples, 0.28%)</title><rect x="980" y="324" width="3" height="15" fill="rgb(233,22,54)"/><text x="983.00" y="334.50"></text></g><g><title>0x7f41e16db97a (?) (1 samples, 0.28%)</title><rect x="980" y="340" width="3" height="15" fill="rgb(217,22,19)"/><text x="983.00" y="350.50"></text></g><g><title>mkl_blas_avx_sgemm_kernel_0 (onnxruntime/capi/libmklml_intel.so) (11 samples, 3.10%)</title><rect x="983" y="212" width="37" height="15" fill="rgb(220,74,3)"/><text x="986.00" y="222.50">mkl..</text></g><g><title>mkl_blas_xsgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.28%)</title><rect x="1020" y="436" width="3" height="15" fill="rgb(235,155,52)"/><text x="1023.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.28%)</title><rect x="1020" y="452" width="3" height="15" fill="rgb(212,106,15)"/><text x="1023.00" y="462.50"></text></g><g><title>mkl_blas_avx_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.28%)</title><rect x="1020" y="468" width="3" height="15" fill="rgb(208,66,17)"/><text x="1023.00" y="478.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0 (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.28%)</title><rect x="1020" y="484" width="3" height="15" fill="rgb(231,20,27)"/><text x="1023.00" y="494.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0_pst (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.28%)</title><rect x="1020" y="500" width="3" height="15" fill="rgb(246,175,48)"/><text x="1023.00" y="510.50"></text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.56%)</title><rect x="1020" y="420" width="7" height="15" fill="rgb(253,56,43)"/><text x="1023.00" y="430.50"></text></g><g><title>mkl_serv_domain_get_max_threads (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.28%)</title><rect x="1023" y="436" width="4" height="15" fill="rgb(245,138,18)"/><text x="1026.00" y="446.50"></text></g><g><title>omp_in_parallel@@VERSION (libiomp5.so) (1 samples, 0.28%)</title><rect x="1023" y="452" width="4" height="15" fill="rgb(234,202,30)"/><text x="1026.00" y="462.50"></text></g><g><title>__kmp_get_global_thread_id_reg (libiomp5.so) (1 samples, 0.28%)</title><rect x="1023" y="468" width="4" height="15" fill="rgb(226,114,21)"/><text x="1026.00" y="478.50"></text></g><g><title>__tls_get_addr (ld-2.29.so) (1 samples, 0.28%)</title><rect x="1023" y="484" width="4" height="15" fill="rgb(240,199,50)"/><text x="1026.00" y="494.50"></text></g><g><title>__kmp_fork_call (libiomp5.so) (5 samples, 1.41%)</title><rect x="1027" y="468" width="16" height="15" fill="rgb(205,12,49)"/><text x="1030.00" y="478.50"></text></g><g><title>__kmp_invoke_task_func (libiomp5.so) (4 samples, 1.13%)</title><rect x="1030" y="484" width="13" height="15" fill="rgb(221,114,8)"/><text x="1033.00" y="494.50"></text></g><g><title>__kmp_invoke_microtask (libiomp5.so) (4 samples, 1.13%)</title><rect x="1030" y="500" width="13" height="15" fill="rgb(218,178,51)"/><text x="1033.00" y="510.50"></text></g><g><title>mkl_blas_sgemv_omp (onnxruntime/capi/libmklml_intel.so) (4 samples, 1.13%)</title><rect x="1030" y="516" width="13" height="15" fill="rgb(239,193,42)"/><text x="1033.00" y="526.50"></text></g><g><title>mkl_blas_xsgemv (onnxruntime/capi/libmklml_intel.so) (4 samples, 1.13%)</title><rect x="1030" y="532" width="13" height="15" fill="rgb(211,213,16)"/><text x="1033.00" y="542.50"></text></g><g><title>mkl_blas_avx_xsgemv (onnxruntime/capi/libmklml_intel.so) (4 samples, 1.13%)</title><rect x="1030" y="548" width="13" height="15" fill="rgb(246,81,39)"/><text x="1033.00" y="558.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (35 samples, 9.86%)</title><rect x="1020" y="340" width="116" height="15" fill="rgb(233,227,46)"/><text x="1023.00" y="350.50">onnxruntime::G..</text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (35 samples, 9.86%)</title><rect x="1020" y="356" width="116" height="15" fill="rgb(243,64,23)"/><text x="1023.00" y="366.50">onnxruntime::m..</text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (35 samples, 9.86%)</title><rect x="1020" y="372" width="116" height="15" fill="rgb(211,0,18)"/><text x="1023.00" y="382.50">cblas_sgemm (o..</text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (35 samples, 9.86%)</title><rect x="1020" y="388" width="116" height="15" fill="rgb(216,163,7)"/><text x="1023.00" y="398.50">sgemm_ (onnxru..</text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (35 samples, 9.86%)</title><rect x="1020" y="404" width="116" height="15" fill="rgb(236,173,18)"/><text x="1023.00" y="414.50">mkl_blas_sgemm..</text></g><g><title>mkl_blas_sgemv (onnxruntime/capi/libmklml_intel.so) (33 samples, 9.30%)</title><rect x="1027" y="420" width="109" height="15" fill="rgb(230,155,18)"/><text x="1030.00" y="430.50">mkl_blas_sgem..</text></g><g><title>mkl_blas_sgemv_omp (onnxruntime/capi/libmklml_intel.so) (33 samples, 9.30%)</title><rect x="1027" y="436" width="109" height="15" fill="rgb(231,86,44)"/><text x="1030.00" y="446.50">mkl_blas_sgem..</text></g><g><title>__kmpc_fork_call (libiomp5.so) (33 samples, 9.30%)</title><rect x="1027" y="452" width="109" height="15" fill="rgb(239,176,43)"/><text x="1030.00" y="462.50">__kmpc_fork_c..</text></g><g><title>__kmp_join_call (libiomp5.so) (28 samples, 7.89%)</title><rect x="1043" y="468" width="93" height="15" fill="rgb(247,73,38)"/><text x="1046.00" y="478.50">__kmp_join_..</text></g><g><title>__kmp_internal_join (libiomp5.so) (28 samples, 7.89%)</title><rect x="1043" y="484" width="93" height="15" fill="rgb(237,7,24)"/><text x="1046.00" y="494.50">__kmp_inter..</text></g><g><title>__kmp_join_barrier (libiomp5.so) (28 samples, 7.89%)</title><rect x="1043" y="500" width="93" height="15" fill="rgb(244,198,46)"/><text x="1046.00" y="510.50">__kmp_join_..</text></g><g><title>_INTERNAL_25_______src_kmp_barrier_cpp_50ae66a0::__kmp_hyper_barrier_gather (libiomp5.so) (28 samples, 7.89%)</title><rect x="1043" y="516" width="93" height="15" fill="rgb(245,208,12)"/><text x="1046.00" y="526.50">_INTERNAL_2..</text></g><g><title>all (355 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(221,181,13)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:68) (65 samples, 18.31%)</title><rect x="973" y="52" width="217" height="15" fill="rgb(213,97,32)"/><text x="976.00" y="62.50">&lt;module&gt; (bench_MLPRegressor..</text></g><g><title>profile_ort (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:67) (65 samples, 18.31%)</title><rect x="973" y="68" width="217" height="15" fill="rgb(234,196,46)"/><text x="976.00" y="78.50">profile_ort (bench_MLPRegres..</text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:37) (64 samples, 18.03%)</title><rect x="977" y="84" width="213" height="15" fill="rgb(247,45,3)"/><text x="980.00" y="94.50">setup_profile (bench_MLPRegr..</text></g><g><title>profile (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py:31) (64 samples, 18.03%)</title><rect x="977" y="100" width="213" height="15" fill="rgb(245,6,47)"/><text x="980.00" y="110.50">profile (bench_MLPRegressor_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (64 samples, 18.03%)</title><rect x="977" y="116" width="213" height="15" fill="rgb(207,116,30)"/><text x="980.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (64 samples, 18.03%)</title><rect x="977" y="132" width="213" height="15" fill="rgb(218,90,47)"/><text x="980.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (63 samples, 17.75%)</title><rect x="980" y="148" width="210" height="15" fill="rgb(212,25,23)"/><text x="983.00" y="158.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (63 samples, 17.75%)</title><rect x="980" y="164" width="210" height="15" fill="rgb(224,169,2)"/><text x="983.00" y="174.50">_run_whole_runtime (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (63 samples, 17.75%)</title><rect x="980" y="180" width="210" height="15" fill="rgb(239,170,32)"/><text x="983.00" y="190.50">run (mlprodict/onnxrt/ops_w..</text></g><g><title>run (onnxruntime/capi/session.py:136) (63 samples, 17.75%)</title><rect x="980" y="196" width="210" height="15" fill="rgb(238,159,1)"/><text x="983.00" y="206.50">run (onnxruntime/capi/sessi..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 14.37%)</title><rect x="1020" y="212" width="170" height="15" fill="rgb(219,157,19)"/><text x="1023.00" y="222.50">pybind11::cpp_function..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 14.37%)</title><rect x="1020" y="228" width="170" height="15" fill="rgb(224,150,34)"/><text x="1023.00" y="238.50">void pybind11::cpp_fun..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 14.37%)</title><rect x="1020" y="244" width="170" height="15" fill="rgb(205,151,8)"/><text x="1023.00" y="254.50">onnxruntime::python::a..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 14.37%)</title><rect x="1020" y="260" width="170" height="15" fill="rgb(222,170,27)"/><text x="1023.00" y="270.50">onnxruntime::Inference..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 14.37%)</title><rect x="1020" y="276" width="170" height="15" fill="rgb(227,163,44)"/><text x="1023.00" y="286.50">onnxruntime::Inference..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 14.37%)</title><rect x="1020" y="292" width="170" height="15" fill="rgb(227,150,50)"/><text x="1023.00" y="302.50">onnxruntime::utils::Ex..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 14.37%)</title><rect x="1020" y="308" width="170" height="15" fill="rgb(208,218,47)"/><text x="1023.00" y="318.50">onnxruntime::utils::Ex..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 14.37%)</title><rect x="1020" y="324" width="170" height="15" fill="rgb(206,216,40)"/><text x="1023.00" y="334.50">onnxruntime::Sequentia..</text></g><g><title>onnxruntime::Relu&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 4.51%)</title><rect x="1136" y="340" width="54" height="15" fill="rgb(246,9,25)"/><text x="1139.00" y="350.50">onnxr..</text></g></g></svg>