<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2166" onload="init(evt)" viewBox="0 0 1200 2166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2166" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2149.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2149.00"> </text><g id="frames"><g><title>&lt;module&gt; (numpy/__init__.py:150) (1 samples, 0.26%)</title><rect x="10" y="244" width="3" height="15" fill="rgb(215,114,44)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="10" y="260" width="3" height="15" fill="rgb(205,219,4)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="276" width="3" height="15" fill="rgb(220,59,30)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="292" width="3" height="15" fill="rgb(216,26,42)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="308" width="3" height="15" fill="rgb(254,27,38)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="324" width="3" height="15" fill="rgb(217,177,31)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="10" y="340" width="3" height="15" fill="rgb(230,158,26)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="356" width="3" height="15" fill="rgb(251,163,10)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py:181) (1 samples, 0.26%)</title><rect x="10" y="372" width="3" height="15" fill="rgb(244,104,32)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="10" y="388" width="3" height="15" fill="rgb(234,163,50)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="404" width="3" height="15" fill="rgb(211,183,31)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="420" width="3" height="15" fill="rgb(212,226,4)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="436" width="3" height="15" fill="rgb(241,42,36)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="452" width="3" height="15" fill="rgb(240,98,28)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="10" y="468" width="3" height="15" fill="rgb(220,142,4)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="484" width="3" height="15" fill="rgb(254,180,37)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py:1) (1 samples, 0.26%)</title><rect x="10" y="500" width="3" height="15" fill="rgb(251,157,36)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="516" width="3" height="15" fill="rgb(235,168,42)"/><text x="13.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="532" width="3" height="15" fill="rgb(221,125,9)"/><text x="13.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="548" width="3" height="15" fill="rgb(226,190,38)"/><text x="13.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.26%)</title><rect x="10" y="564" width="3" height="15" fill="rgb(239,208,19)"/><text x="13.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="580" width="3" height="15" fill="rgb(231,17,20)"/><text x="13.00" y="590.50"></text></g><g><title>0x7f4a45ff8585 (?) (1 samples, 0.26%)</title><rect x="10" y="596" width="3" height="15" fill="rgb(232,19,9)"/><text x="13.00" y="606.50"></text></g><g><title>0x7f4a45ffe075 (?) (1 samples, 0.26%)</title><rect x="10" y="612" width="3" height="15" fill="rgb(250,100,0)"/><text x="13.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="628" width="3" height="15" fill="rgb(220,93,10)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="644" width="3" height="15" fill="rgb(216,146,47)"/><text x="13.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="660" width="3" height="15" fill="rgb(231,229,49)"/><text x="13.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.26%)</title><rect x="10" y="676" width="3" height="15" fill="rgb(214,169,40)"/><text x="13.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="692" width="3" height="15" fill="rgb(252,175,35)"/><text x="13.00" y="702.50"></text></g><g><title>0x7f4a45935543 (?) (1 samples, 0.26%)</title><rect x="10" y="708" width="3" height="15" fill="rgb(241,119,38)"/><text x="13.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="724" width="3" height="15" fill="rgb(241,149,42)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="740" width="3" height="15" fill="rgb(247,77,3)"/><text x="13.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="756" width="3" height="15" fill="rgb(249,63,44)"/><text x="13.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.26%)</title><rect x="10" y="772" width="3" height="15" fill="rgb(214,153,12)"/><text x="13.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="788" width="3" height="15" fill="rgb(224,130,8)"/><text x="13.00" y="798.50"></text></g><g><title>0x7f4a4570ab9c (?) (1 samples, 0.26%)</title><rect x="10" y="804" width="3" height="15" fill="rgb(218,119,51)"/><text x="13.00" y="814.50"></text></g><g><title>0x7f4a4570e885 (?) (1 samples, 0.26%)</title><rect x="10" y="820" width="3" height="15" fill="rgb(236,15,20)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="836" width="3" height="15" fill="rgb(241,157,29)"/><text x="13.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(218,126,28)"/><text x="13.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(210,228,7)"/><text x="13.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(234,46,34)"/><text x="13.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(233,211,6)"/><text x="13.00" y="910.50"></text></g><g><title>&lt;module&gt; (secrets.py:19) (1 samples, 0.26%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(243,79,41)"/><text x="13.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(216,98,11)"/><text x="13.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(216,109,54)"/><text x="13.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(205,130,50)"/><text x="13.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(224,135,24)"/><text x="13.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(232,70,22)"/><text x="13.00" y="1006.50"></text></g><g><title>&lt;module&gt; (hmac.py:15) (1 samples, 0.26%)</title><rect x="10" y="1012" width="3" height="15" fill="rgb(205,166,48)"/><text x="13.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="1028" width="3" height="15" fill="rgb(248,221,45)"/><text x="13.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="1044" width="3" height="15" fill="rgb(242,145,43)"/><text x="13.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="1060" width="3" height="15" fill="rgb(245,157,29)"/><text x="13.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.26%)</title><rect x="10" y="1076" width="3" height="15" fill="rgb(236,95,34)"/><text x="13.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.26%)</title><rect x="10" y="1092" width="3" height="15" fill="rgb(254,45,50)"/><text x="13.00" y="1102.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.26%)</title><rect x="10" y="1108" width="3" height="15" fill="rgb(240,100,14)"/><text x="13.00" y="1118.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="10" y="1124" width="3" height="15" fill="rgb(248,96,0)"/><text x="13.00" y="1134.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_b_reg.py:1) (2 samples, 0.51%)</title><rect x="10" y="148" width="6" height="15" fill="rgb(223,120,48)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="10" y="164" width="6" height="15" fill="rgb(228,142,3)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="10" y="180" width="6" height="15" fill="rgb(254,79,36)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="10" y="196" width="6" height="15" fill="rgb(253,64,12)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="10" y="212" width="6" height="15" fill="rgb(240,16,51)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="10" y="228" width="6" height="15" fill="rgb(232,55,26)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:152) (1 samples, 0.26%)</title><rect x="13" y="244" width="3" height="15" fill="rgb(219,58,36)"/><text x="16.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="13" y="260" width="3" height="15" fill="rgb(211,171,44)"/><text x="16.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="13" y="276" width="3" height="15" fill="rgb(251,8,21)"/><text x="16.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="13" y="292" width="3" height="15" fill="rgb(252,39,40)"/><text x="16.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="13" y="308" width="3" height="15" fill="rgb(238,20,50)"/><text x="16.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="13" y="324" width="3" height="15" fill="rgb(240,14,27)"/><text x="16.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="13" y="340" width="3" height="15" fill="rgb(225,89,45)"/><text x="16.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="13" y="356" width="3" height="15" fill="rgb(240,16,22)"/><text x="16.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/ma/__init__.py:44) (1 samples, 0.26%)</title><rect x="13" y="372" width="3" height="15" fill="rgb(228,103,46)"/><text x="16.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="13" y="388" width="3" height="15" fill="rgb(253,37,37)"/><text x="16.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="13" y="404" width="3" height="15" fill="rgb(230,188,19)"/><text x="16.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="13" y="420" width="3" height="15" fill="rgb(219,26,41)"/><text x="16.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="13" y="436" width="3" height="15" fill="rgb(229,64,44)"/><text x="16.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="13" y="452" width="3" height="15" fill="rgb(228,67,9)"/><text x="16.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="13" y="468" width="3" height="15" fill="rgb(221,82,26)"/><text x="16.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="13" y="484" width="3" height="15" fill="rgb(221,125,40)"/><text x="16.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/ma/core.py:1216) (1 samples, 0.26%)</title><rect x="13" y="500" width="3" height="15" fill="rgb(252,91,35)"/><text x="16.00" y="510.50"></text></g><g><title>__init__ (numpy/ma/core.py:917) (1 samples, 0.26%)</title><rect x="13" y="516" width="3" height="15" fill="rgb(241,17,34)"/><text x="16.00" y="526.50"></text></g><g><title>__init__ (numpy/ma/core.py:891) (1 samples, 0.26%)</title><rect x="13" y="532" width="3" height="15" fill="rgb(247,207,13)"/><text x="16.00" y="542.50"></text></g><g><title>ufunc_get_doc (ufunc_object.c:5953) (1 samples, 0.26%)</title><rect x="13" y="548" width="3" height="15" fill="rgb(221,224,39)"/><text x="16.00" y="558.50"></text></g><g><title>PyUnicode_ConcatAndDel (npy_3kcompat.h:154) (1 samples, 0.26%)</title><rect x="13" y="564" width="3" height="15" fill="rgb(224,65,2)"/><text x="16.00" y="574.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_b_reg.py:2) (1 samples, 0.26%)</title><rect x="16" y="148" width="3" height="15" fill="rgb(224,211,29)"/><text x="19.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="16" y="164" width="3" height="15" fill="rgb(236,229,32)"/><text x="19.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.26%)</title><rect x="16" y="180" width="3" height="15" fill="rgb(237,87,11)"/><text x="19.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="16" y="196" width="3" height="15" fill="rgb(230,86,9)"/><text x="19.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="16" y="212" width="3" height="15" fill="rgb(223,179,7)"/><text x="19.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="16" y="228" width="3" height="15" fill="rgb(245,80,51)"/><text x="19.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="16" y="244" width="3" height="15" fill="rgb(232,67,25)"/><text x="19.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="16" y="260" width="3" height="15" fill="rgb(237,140,32)"/><text x="19.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="16" y="276" width="3" height="15" fill="rgb(254,106,33)"/><text x="19.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (1 samples, 0.26%)</title><rect x="16" y="292" width="3" height="15" fill="rgb(236,44,6)"/><text x="19.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="16" y="308" width="3" height="15" fill="rgb(244,210,50)"/><text x="19.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="16" y="324" width="3" height="15" fill="rgb(241,209,40)"/><text x="19.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="16" y="340" width="3" height="15" fill="rgb(206,46,42)"/><text x="19.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="16" y="356" width="3" height="15" fill="rgb(222,57,54)"/><text x="19.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="16" y="372" width="3" height="15" fill="rgb(241,74,24)"/><text x="19.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (1 samples, 0.26%)</title><rect x="16" y="388" width="3" height="15" fill="rgb(213,169,50)"/><text x="19.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="16" y="404" width="3" height="15" fill="rgb(249,133,2)"/><text x="19.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="16" y="420" width="3" height="15" fill="rgb(230,171,46)"/><text x="19.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="16" y="436" width="3" height="15" fill="rgb(237,151,8)"/><text x="19.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="16" y="452" width="3" height="15" fill="rgb(252,174,52)"/><text x="19.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="16" y="468" width="3" height="15" fill="rgb(253,77,50)"/><text x="19.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (1 samples, 0.26%)</title><rect x="16" y="484" width="3" height="15" fill="rgb(225,147,31)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="16" y="500" width="3" height="15" fill="rgb(243,133,17)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="16" y="516" width="3" height="15" fill="rgb(254,132,4)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="16" y="532" width="3" height="15" fill="rgb(249,225,8)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="16" y="548" width="3" height="15" fill="rgb(254,1,21)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="16" y="564" width="3" height="15" fill="rgb(253,170,8)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (1 samples, 0.26%)</title><rect x="16" y="580" width="3" height="15" fill="rgb(212,209,23)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="16" y="596" width="3" height="15" fill="rgb(248,31,13)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.26%)</title><rect x="16" y="612" width="3" height="15" fill="rgb(237,208,15)"/><text x="19.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="16" y="628" width="3" height="15" fill="rgb(234,62,26)"/><text x="19.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="16" y="644" width="3" height="15" fill="rgb(243,36,4)"/><text x="19.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="16" y="660" width="3" height="15" fill="rgb(233,61,15)"/><text x="19.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="16" y="676" width="3" height="15" fill="rgb(242,126,40)"/><text x="19.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="16" y="692" width="3" height="15" fill="rgb(235,68,21)"/><text x="19.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="16" y="708" width="3" height="15" fill="rgb(245,5,7)"/><text x="19.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (1 samples, 0.26%)</title><rect x="16" y="724" width="3" height="15" fill="rgb(237,72,43)"/><text x="19.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="16" y="740" width="3" height="15" fill="rgb(214,205,2)"/><text x="19.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="16" y="756" width="3" height="15" fill="rgb(235,154,15)"/><text x="19.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="16" y="772" width="3" height="15" fill="rgb(240,8,44)"/><text x="19.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="16" y="788" width="3" height="15" fill="rgb(238,123,52)"/><text x="19.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="16" y="804" width="3" height="15" fill="rgb(227,67,54)"/><text x="19.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (1 samples, 0.26%)</title><rect x="16" y="820" width="3" height="15" fill="rgb(229,91,23)"/><text x="19.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (1 samples, 0.26%)</title><rect x="16" y="836" width="3" height="15" fill="rgb(208,115,2)"/><text x="19.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.26%)</title><rect x="16" y="852" width="3" height="15" fill="rgb(207,34,17)"/><text x="19.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.26%)</title><rect x="16" y="868" width="3" height="15" fill="rgb(234,112,23)"/><text x="19.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2783) (1 samples, 0.26%)</title><rect x="16" y="884" width="3" height="15" fill="rgb(235,54,11)"/><text x="19.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2766) (1 samples, 0.26%)</title><rect x="16" y="900" width="3" height="15" fill="rgb(246,124,42)"/><text x="19.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py:1413) (1 samples, 0.26%)</title><rect x="16" y="916" width="3" height="15" fill="rgb(231,212,9)"/><text x="19.00" y="926.50"></text></g><g><title>_get_metadata_path (pkg_resources/__init__.py:1407) (1 samples, 0.26%)</title><rect x="16" y="932" width="3" height="15" fill="rgb(215,203,15)"/><text x="19.00" y="942.50"></text></g><g><title>_fn (pkg_resources/__init__.py:1487) (1 samples, 0.26%)</title><rect x="16" y="948" width="3" height="15" fill="rgb(237,193,54)"/><text x="19.00" y="958.50"></text></g><g><title>_validate_resource_path (pkg_resources/__init__.py:1546) (1 samples, 0.26%)</title><rect x="16" y="964" width="3" height="15" fill="rgb(254,219,42)"/><text x="19.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.26%)</title><rect x="19" y="228" width="3" height="15" fill="rgb(226,217,12)"/><text x="22.00" y="238.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.26%)</title><rect x="19" y="244" width="3" height="15" fill="rgb(210,165,10)"/><text x="22.00" y="254.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.26%)</title><rect x="19" y="260" width="3" height="15" fill="rgb(252,88,12)"/><text x="22.00" y="270.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.26%)</title><rect x="19" y="276" width="3" height="15" fill="rgb(212,20,18)"/><text x="22.00" y="286.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.26%)</title><rect x="19" y="292" width="3" height="15" fill="rgb(212,24,15)"/><text x="22.00" y="302.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.26%)</title><rect x="19" y="308" width="3" height="15" fill="rgb(225,105,2)"/><text x="22.00" y="318.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.26%)</title><rect x="19" y="324" width="3" height="15" fill="rgb(245,202,4)"/><text x="22.00" y="334.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.26%)</title><rect x="19" y="340" width="3" height="15" fill="rgb(216,17,46)"/><text x="22.00" y="350.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.26%)</title><rect x="19" y="356" width="3" height="15" fill="rgb(205,29,23)"/><text x="22.00" y="366.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.26%)</title><rect x="19" y="372" width="3" height="15" fill="rgb(230,183,2)"/><text x="22.00" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.26%)</title><rect x="22" y="452" width="3" height="15" fill="rgb(222,216,3)"/><text x="25.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.26%)</title><rect x="22" y="468" width="3" height="15" fill="rgb(215,190,13)"/><text x="25.00" y="478.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.26%)</title><rect x="22" y="484" width="3" height="15" fill="rgb(225,179,17)"/><text x="25.00" y="494.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.26%)</title><rect x="25" y="996" width="3" height="15" fill="rgb(252,59,39)"/><text x="28.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="25" y="1012" width="3" height="15" fill="rgb(221,25,1)"/><text x="28.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="25" y="1028" width="3" height="15" fill="rgb(242,182,36)"/><text x="28.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="25" y="1044" width="3" height="15" fill="rgb(237,207,42)"/><text x="28.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="25" y="1060" width="3" height="15" fill="rgb(234,41,3)"/><text x="28.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="25" y="1076" width="3" height="15" fill="rgb(246,182,2)"/><text x="28.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="25" y="1092" width="3" height="15" fill="rgb(246,188,31)"/><text x="28.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="25" y="1108" width="3" height="15" fill="rgb(214,216,37)"/><text x="28.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:414) (1 samples, 0.26%)</title><rect x="25" y="1124" width="3" height="15" fill="rgb(238,209,28)"/><text x="28.00" y="1134.50"></text></g><g><title>&lt;listcomp&gt; (scipy/optimize/__init__.py:414) (1 samples, 0.26%)</title><rect x="25" y="1140" width="3" height="15" fill="rgb(214,169,20)"/><text x="28.00" y="1150.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.26%)</title><rect x="25" y="1156" width="3" height="15" fill="rgb(235,84,1)"/><text x="28.00" y="1166.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.51%)</title><rect x="25" y="484" width="6" height="15" fill="rgb(224,208,2)"/><text x="28.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="25" y="500" width="6" height="15" fill="rgb(248,78,22)"/><text x="28.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="25" y="516" width="6" height="15" fill="rgb(244,76,11)"/><text x="28.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="25" y="532" width="6" height="15" fill="rgb(237,208,34)"/><text x="28.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="25" y="548" width="6" height="15" fill="rgb(222,88,22)"/><text x="28.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="25" y="564" width="6" height="15" fill="rgb(211,151,52)"/><text x="28.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.51%)</title><rect x="25" y="580" width="6" height="15" fill="rgb(242,174,48)"/><text x="28.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="25" y="596" width="6" height="15" fill="rgb(249,144,52)"/><text x="28.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="25" y="612" width="6" height="15" fill="rgb(246,46,42)"/><text x="28.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="25" y="628" width="6" height="15" fill="rgb(219,141,0)"/><text x="28.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="25" y="644" width="6" height="15" fill="rgb(231,112,15)"/><text x="28.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="25" y="660" width="6" height="15" fill="rgb(223,214,23)"/><text x="28.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.51%)</title><rect x="25" y="676" width="6" height="15" fill="rgb(240,48,2)"/><text x="28.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="25" y="692" width="6" height="15" fill="rgb(213,83,31)"/><text x="28.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="25" y="708" width="6" height="15" fill="rgb(245,90,0)"/><text x="28.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="25" y="724" width="6" height="15" fill="rgb(221,156,22)"/><text x="28.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="25" y="740" width="6" height="15" fill="rgb(230,223,54)"/><text x="28.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="25" y="756" width="6" height="15" fill="rgb(246,91,0)"/><text x="28.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.51%)</title><rect x="25" y="772" width="6" height="15" fill="rgb(214,211,24)"/><text x="28.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.51%)</title><rect x="25" y="788" width="6" height="15" fill="rgb(244,219,0)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="25" y="804" width="6" height="15" fill="rgb(223,51,28)"/><text x="28.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="25" y="820" width="6" height="15" fill="rgb(219,104,47)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="25" y="836" width="6" height="15" fill="rgb(226,214,40)"/><text x="28.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="25" y="852" width="6" height="15" fill="rgb(217,216,6)"/><text x="28.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="25" y="868" width="6" height="15" fill="rgb(219,165,5)"/><text x="28.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="25" y="884" width="6" height="15" fill="rgb(252,31,1)"/><text x="28.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (2 samples, 0.51%)</title><rect x="25" y="900" width="6" height="15" fill="rgb(240,140,31)"/><text x="28.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="25" y="916" width="6" height="15" fill="rgb(254,152,11)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="25" y="932" width="6" height="15" fill="rgb(242,205,28)"/><text x="28.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="25" y="948" width="6" height="15" fill="rgb(230,114,44)"/><text x="28.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="25" y="964" width="6" height="15" fill="rgb(214,180,49)"/><text x="28.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="25" y="980" width="6" height="15" fill="rgb(218,39,51)"/><text x="28.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:27) (1 samples, 0.26%)</title><rect x="28" y="996" width="3" height="15" fill="rgb(213,158,53)"/><text x="31.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="28" y="1012" width="3" height="15" fill="rgb(234,95,42)"/><text x="31.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="28" y="1028" width="3" height="15" fill="rgb(223,121,46)"/><text x="31.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="28" y="1044" width="3" height="15" fill="rgb(205,139,42)"/><text x="31.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="28" y="1060" width="3" height="15" fill="rgb(227,31,46)"/><text x="31.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="28" y="1076" width="3" height="15" fill="rgb(248,12,26)"/><text x="31.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="28" y="1092" width="3" height="15" fill="rgb(240,160,5)"/><text x="31.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="28" y="1108" width="3" height="15" fill="rgb(206,71,17)"/><text x="31.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/__init__.py:90) (1 samples, 0.26%)</title><rect x="28" y="1124" width="3" height="15" fill="rgb(238,191,0)"/><text x="31.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="28" y="1140" width="3" height="15" fill="rgb(236,193,2)"/><text x="31.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.26%)</title><rect x="28" y="1156" width="3" height="15" fill="rgb(240,202,26)"/><text x="31.00" y="1166.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.26%)</title><rect x="28" y="1172" width="3" height="15" fill="rgb(232,184,6)"/><text x="31.00" y="1182.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.26%)</title><rect x="28" y="1188" width="3" height="15" fill="rgb(244,216,5)"/><text x="31.00" y="1198.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.26%)</title><rect x="28" y="1204" width="3" height="15" fill="rgb(217,90,23)"/><text x="31.00" y="1214.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.26%)</title><rect x="28" y="1220" width="3" height="15" fill="rgb(219,3,9)"/><text x="31.00" y="1230.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.26%)</title><rect x="28" y="1236" width="3" height="15" fill="rgb(249,160,15)"/><text x="31.00" y="1246.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.26%)</title><rect x="28" y="1252" width="3" height="15" fill="rgb(216,25,17)"/><text x="31.00" y="1262.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.26%)</title><rect x="28" y="1268" width="3" height="15" fill="rgb(250,95,6)"/><text x="31.00" y="1278.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_b_reg.py:4) (5 samples, 1.28%)</title><rect x="19" y="148" width="15" height="15" fill="rgb(205,185,0)"/><text x="22.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.28%)</title><rect x="19" y="164" width="15" height="15" fill="rgb(232,26,54)"/><text x="22.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.28%)</title><rect x="19" y="180" width="15" height="15" fill="rgb(208,208,37)"/><text x="22.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.28%)</title><rect x="19" y="196" width="15" height="15" fill="rgb(219,5,42)"/><text x="22.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.28%)</title><rect x="19" y="212" width="15" height="15" fill="rgb(239,64,22)"/><text x="22.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.02%)</title><rect x="22" y="228" width="12" height="15" fill="rgb(240,222,40)"/><text x="25.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.02%)</title><rect x="22" y="244" width="12" height="15" fill="rgb(207,199,22)"/><text x="25.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.02%)</title><rect x="22" y="260" width="12" height="15" fill="rgb(239,38,48)"/><text x="25.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="22" y="276" width="12" height="15" fill="rgb(205,201,15)"/><text x="25.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (4 samples, 1.02%)</title><rect x="22" y="292" width="12" height="15" fill="rgb(234,12,53)"/><text x="25.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="22" y="308" width="12" height="15" fill="rgb(238,211,13)"/><text x="25.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.02%)</title><rect x="22" y="324" width="12" height="15" fill="rgb(206,24,15)"/><text x="25.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.02%)</title><rect x="22" y="340" width="12" height="15" fill="rgb(212,48,5)"/><text x="25.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.02%)</title><rect x="22" y="356" width="12" height="15" fill="rgb(225,225,39)"/><text x="25.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="22" y="372" width="12" height="15" fill="rgb(224,45,42)"/><text x="25.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (4 samples, 1.02%)</title><rect x="22" y="388" width="12" height="15" fill="rgb(236,217,23)"/><text x="25.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="22" y="404" width="12" height="15" fill="rgb(226,75,25)"/><text x="25.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.02%)</title><rect x="22" y="420" width="12" height="15" fill="rgb(208,219,39)"/><text x="25.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.02%)</title><rect x="22" y="436" width="12" height="15" fill="rgb(220,3,50)"/><text x="25.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.77%)</title><rect x="25" y="452" width="9" height="15" fill="rgb(224,81,1)"/><text x="28.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.77%)</title><rect x="25" y="468" width="9" height="15" fill="rgb(230,107,43)"/><text x="28.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:50) (1 samples, 0.26%)</title><rect x="31" y="484" width="3" height="15" fill="rgb(234,133,37)"/><text x="34.00" y="494.50"></text></g><g><title>__call__ (sklearn/utils/deprecation.py:57) (1 samples, 0.26%)</title><rect x="31" y="500" width="3" height="15" fill="rgb(238,196,15)"/><text x="34.00" y="510.50"></text></g><g><title>_decorate_fun (sklearn/utils/deprecation.py:85) (1 samples, 0.26%)</title><rect x="31" y="516" width="3" height="15" fill="rgb(243,31,15)"/><text x="34.00" y="526.50"></text></g><g><title>update_wrapper (functools.py:58) (1 samples, 0.26%)</title><rect x="31" y="532" width="3" height="15" fill="rgb(246,8,8)"/><text x="34.00" y="542.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.26%)</title><rect x="34" y="244" width="3" height="15" fill="rgb(229,156,51)"/><text x="37.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="34" y="260" width="3" height="15" fill="rgb(248,221,8)"/><text x="37.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="34" y="276" width="3" height="15" fill="rgb(233,191,35)"/><text x="37.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="34" y="292" width="3" height="15" fill="rgb(208,39,52)"/><text x="37.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="34" y="308" width="3" height="15" fill="rgb(231,198,41)"/><text x="37.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="34" y="324" width="3" height="15" fill="rgb(226,220,43)"/><text x="37.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.26%)</title><rect x="34" y="340" width="3" height="15" fill="rgb(211,157,34)"/><text x="37.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="34" y="356" width="3" height="15" fill="rgb(254,161,28)"/><text x="37.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.26%)</title><rect x="34" y="372" width="3" height="15" fill="rgb(213,118,36)"/><text x="37.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="34" y="388" width="3" height="15" fill="rgb(240,110,35)"/><text x="37.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="34" y="404" width="3" height="15" fill="rgb(212,42,10)"/><text x="37.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="34" y="420" width="3" height="15" fill="rgb(254,42,46)"/><text x="37.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="34" y="436" width="3" height="15" fill="rgb(208,19,4)"/><text x="37.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="34" y="452" width="3" height="15" fill="rgb(243,46,48)"/><text x="37.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="34" y="468" width="3" height="15" fill="rgb(250,147,18)"/><text x="37.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.26%)</title><rect x="34" y="484" width="3" height="15" fill="rgb(242,100,46)"/><text x="37.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="34" y="500" width="3" height="15" fill="rgb(207,229,9)"/><text x="37.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="34" y="516" width="3" height="15" fill="rgb(218,192,51)"/><text x="37.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="34" y="532" width="3" height="15" fill="rgb(216,74,42)"/><text x="37.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="34" y="548" width="3" height="15" fill="rgb(241,32,50)"/><text x="37.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="34" y="564" width="3" height="15" fill="rgb(236,14,30)"/><text x="37.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.26%)</title><rect x="34" y="580" width="3" height="15" fill="rgb(253,83,44)"/><text x="37.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="34" y="596" width="3" height="15" fill="rgb(207,129,12)"/><text x="37.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="34" y="612" width="3" height="15" fill="rgb(234,116,37)"/><text x="37.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="34" y="628" width="3" height="15" fill="rgb(219,17,11)"/><text x="37.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="34" y="644" width="3" height="15" fill="rgb(238,222,3)"/><text x="37.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="34" y="660" width="3" height="15" fill="rgb(205,207,24)"/><text x="37.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.26%)</title><rect x="34" y="676" width="3" height="15" fill="rgb(209,208,52)"/><text x="37.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="34" y="692" width="3" height="15" fill="rgb(235,124,17)"/><text x="37.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="34" y="708" width="3" height="15" fill="rgb(207,74,1)"/><text x="37.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="34" y="724" width="3" height="15" fill="rgb(218,41,22)"/><text x="37.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="34" y="740" width="3" height="15" fill="rgb(213,224,30)"/><text x="37.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="34" y="756" width="3" height="15" fill="rgb(234,219,44)"/><text x="37.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:115) (1 samples, 0.26%)</title><rect x="34" y="772" width="3" height="15" fill="rgb(219,150,2)"/><text x="37.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="34" y="788" width="3" height="15" fill="rgb(227,52,22)"/><text x="37.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="34" y="804" width="3" height="15" fill="rgb(251,40,36)"/><text x="37.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="34" y="820" width="3" height="15" fill="rgb(246,87,36)"/><text x="37.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="34" y="836" width="3" height="15" fill="rgb(231,90,40)"/><text x="37.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="34" y="852" width="3" height="15" fill="rgb(251,94,42)"/><text x="37.00" y="862.50"></text></g><g><title>&lt;module&gt; (requests/api.py:13) (1 samples, 0.26%)</title><rect x="34" y="868" width="3" height="15" fill="rgb(214,200,48)"/><text x="37.00" y="878.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="34" y="884" width="3" height="15" fill="rgb(254,173,24)"/><text x="37.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="34" y="900" width="3" height="15" fill="rgb(207,39,49)"/><text x="37.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="34" y="916" width="3" height="15" fill="rgb(250,153,12)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="34" y="932" width="3" height="15" fill="rgb(224,38,37)"/><text x="37.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="34" y="948" width="3" height="15" fill="rgb(240,208,28)"/><text x="37.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="34" y="964" width="3" height="15" fill="rgb(229,167,25)"/><text x="37.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="34" y="980" width="3" height="15" fill="rgb(222,209,28)"/><text x="37.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/sessions.py:27) (1 samples, 0.26%)</title><rect x="34" y="996" width="3" height="15" fill="rgb(206,77,35)"/><text x="37.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="34" y="1012" width="3" height="15" fill="rgb(235,145,11)"/><text x="37.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="34" y="1028" width="3" height="15" fill="rgb(241,168,32)"/><text x="37.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="34" y="1044" width="3" height="15" fill="rgb(225,90,3)"/><text x="37.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.26%)</title><rect x="34" y="1060" width="3" height="15" fill="rgb(228,100,30)"/><text x="37.00" y="1070.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.26%)</title><rect x="34" y="1076" width="3" height="15" fill="rgb(212,194,3)"/><text x="37.00" y="1086.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.26%)</title><rect x="34" y="1092" width="3" height="15" fill="rgb(216,46,17)"/><text x="37.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.26%)</title><rect x="37" y="628" width="3" height="15" fill="rgb(246,25,6)"/><text x="40.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="37" y="644" width="3" height="15" fill="rgb(248,22,6)"/><text x="40.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="37" y="660" width="3" height="15" fill="rgb(238,218,42)"/><text x="40.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="37" y="676" width="3" height="15" fill="rgb(223,220,2)"/><text x="40.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="37" y="692" width="3" height="15" fill="rgb(242,41,48)"/><text x="40.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="37" y="708" width="3" height="15" fill="rgb(231,119,9)"/><text x="40.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:17) (1 samples, 0.26%)</title><rect x="37" y="724" width="3" height="15" fill="rgb(218,89,24)"/><text x="40.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="37" y="740" width="3" height="15" fill="rgb(219,128,35)"/><text x="40.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="37" y="756" width="3" height="15" fill="rgb(252,28,45)"/><text x="40.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="37" y="772" width="3" height="15" fill="rgb(232,91,13)"/><text x="40.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="37" y="788" width="3" height="15" fill="rgb(211,79,34)"/><text x="40.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="37" y="804" width="3" height="15" fill="rgb(207,195,34)"/><text x="40.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/pytables.py:53) (1 samples, 0.26%)</title><rect x="37" y="820" width="3" height="15" fill="rgb(227,95,19)"/><text x="40.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="37" y="836" width="3" height="15" fill="rgb(238,112,2)"/><text x="40.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="37" y="852" width="3" height="15" fill="rgb(254,114,54)"/><text x="40.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="37" y="868" width="3" height="15" fill="rgb(212,129,2)"/><text x="40.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="37" y="884" width="3" height="15" fill="rgb(233,184,42)"/><text x="40.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="37" y="900" width="3" height="15" fill="rgb(208,54,40)"/><text x="40.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/pytables.py:457) (1 samples, 0.26%)</title><rect x="37" y="916" width="3" height="15" fill="rgb(212,75,25)"/><text x="40.00" y="926.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.26%)</title><rect x="40" y="1492" width="3" height="15" fill="rgb(235,135,44)"/><text x="43.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="40" y="1508" width="3" height="15" fill="rgb(250,38,50)"/><text x="43.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="40" y="1524" width="3" height="15" fill="rgb(230,211,45)"/><text x="43.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="40" y="1540" width="3" height="15" fill="rgb(218,4,43)"/><text x="43.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="40" y="1556" width="3" height="15" fill="rgb(211,65,34)"/><text x="43.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="40" y="1572" width="3" height="15" fill="rgb(241,90,46)"/><text x="43.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.26%)</title><rect x="40" y="1588" width="3" height="15" fill="rgb(234,210,41)"/><text x="43.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="40" y="1604" width="3" height="15" fill="rgb(253,187,4)"/><text x="43.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="40" y="1620" width="3" height="15" fill="rgb(234,9,47)"/><text x="43.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="40" y="1636" width="3" height="15" fill="rgb(209,38,45)"/><text x="43.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="40" y="1652" width="3" height="15" fill="rgb(223,7,24)"/><text x="43.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="40" y="1668" width="3" height="15" fill="rgb(221,49,40)"/><text x="43.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.26%)</title><rect x="40" y="1684" width="3" height="15" fill="rgb(248,26,52)"/><text x="43.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="40" y="1700" width="3" height="15" fill="rgb(251,196,51)"/><text x="43.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="40" y="1716" width="3" height="15" fill="rgb(224,75,13)"/><text x="43.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="40" y="1732" width="3" height="15" fill="rgb(230,193,54)"/><text x="43.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="40" y="1748" width="3" height="15" fill="rgb(247,100,17)"/><text x="43.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="40" y="1764" width="3" height="15" fill="rgb(208,147,14)"/><text x="43.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.26%)</title><rect x="40" y="1780" width="3" height="15" fill="rgb(207,2,11)"/><text x="43.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="40" y="1796" width="3" height="15" fill="rgb(238,224,23)"/><text x="43.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="40" y="1812" width="3" height="15" fill="rgb(210,37,15)"/><text x="43.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="40" y="1828" width="3" height="15" fill="rgb(218,174,54)"/><text x="43.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="40" y="1844" width="3" height="15" fill="rgb(215,152,38)"/><text x="43.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="40" y="1860" width="3" height="15" fill="rgb(242,120,39)"/><text x="43.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:14) (1 samples, 0.26%)</title><rect x="40" y="1876" width="3" height="15" fill="rgb(226,115,41)"/><text x="43.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="40" y="1892" width="3" height="15" fill="rgb(245,174,28)"/><text x="43.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="40" y="1908" width="3" height="15" fill="rgb(247,203,49)"/><text x="43.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="40" y="1924" width="3" height="15" fill="rgb(229,157,54)"/><text x="43.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="40" y="1940" width="3" height="15" fill="rgb(233,37,10)"/><text x="43.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="40" y="1956" width="3" height="15" fill="rgb(239,40,20)"/><text x="43.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py:40) (1 samples, 0.26%)</title><rect x="40" y="1972" width="3" height="15" fill="rgb(247,225,30)"/><text x="43.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="40" y="1988" width="3" height="15" fill="rgb(247,48,15)"/><text x="43.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="40" y="2004" width="3" height="15" fill="rgb(245,209,36)"/><text x="43.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="40" y="2020" width="3" height="15" fill="rgb(206,111,44)"/><text x="43.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="40" y="2036" width="3" height="15" fill="rgb(238,150,52)"/><text x="43.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="40" y="2052" width="3" height="15" fill="rgb(229,161,11)"/><text x="43.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="40" y="2068" width="3" height="15" fill="rgb(252,13,42)"/><text x="43.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="40" y="2084" width="3" height="15" fill="rgb(214,175,52)"/><text x="43.00" y="2094.50"></text></g><g><title>&lt;module&gt; (matplotlib/afm.py:186) (1 samples, 0.26%)</title><rect x="40" y="2100" width="3" height="15" fill="rgb(207,32,34)"/><text x="43.00" y="2110.50"></text></g><g><title>namedtuple (collections/__init__.py:397) (1 samples, 0.26%)</title><rect x="40" y="2116" width="3" height="15" fill="rgb(238,8,36)"/><text x="43.00" y="2126.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.51%)</title><rect x="40" y="1012" width="6" height="15" fill="rgb(234,32,20)"/><text x="43.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="40" y="1028" width="6" height="15" fill="rgb(218,228,39)"/><text x="43.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="40" y="1044" width="6" height="15" fill="rgb(216,45,29)"/><text x="43.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="40" y="1060" width="6" height="15" fill="rgb(227,49,54)"/><text x="43.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="40" y="1076" width="6" height="15" fill="rgb(212,192,35)"/><text x="43.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="40" y="1092" width="6" height="15" fill="rgb(246,157,30)"/><text x="43.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.51%)</title><rect x="40" y="1108" width="6" height="15" fill="rgb(242,64,44)"/><text x="43.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="40" y="1124" width="6" height="15" fill="rgb(228,212,6)"/><text x="43.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="40" y="1140" width="6" height="15" fill="rgb(226,76,54)"/><text x="43.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="40" y="1156" width="6" height="15" fill="rgb(224,69,53)"/><text x="43.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="40" y="1172" width="6" height="15" fill="rgb(236,186,46)"/><text x="43.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="40" y="1188" width="6" height="15" fill="rgb(234,225,25)"/><text x="43.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.51%)</title><rect x="40" y="1204" width="6" height="15" fill="rgb(209,65,7)"/><text x="43.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="40" y="1220" width="6" height="15" fill="rgb(222,148,34)"/><text x="43.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="40" y="1236" width="6" height="15" fill="rgb(225,53,10)"/><text x="43.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="40" y="1252" width="6" height="15" fill="rgb(223,66,45)"/><text x="43.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="40" y="1268" width="6" height="15" fill="rgb(215,112,35)"/><text x="43.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="40" y="1284" width="6" height="15" fill="rgb(212,214,45)"/><text x="43.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.51%)</title><rect x="40" y="1300" width="6" height="15" fill="rgb(208,149,36)"/><text x="43.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="40" y="1316" width="6" height="15" fill="rgb(208,227,48)"/><text x="43.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="40" y="1332" width="6" height="15" fill="rgb(210,174,46)"/><text x="43.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="40" y="1348" width="6" height="15" fill="rgb(236,63,47)"/><text x="43.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="40" y="1364" width="6" height="15" fill="rgb(227,176,51)"/><text x="43.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="40" y="1380" width="6" height="15" fill="rgb(252,197,36)"/><text x="43.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.51%)</title><rect x="40" y="1396" width="6" height="15" fill="rgb(252,40,7)"/><text x="43.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="40" y="1412" width="6" height="15" fill="rgb(228,124,44)"/><text x="43.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="40" y="1428" width="6" height="15" fill="rgb(238,1,14)"/><text x="43.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="40" y="1444" width="6" height="15" fill="rgb(250,205,42)"/><text x="43.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="40" y="1460" width="6" height="15" fill="rgb(232,212,27)"/><text x="43.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="40" y="1476" width="6" height="15" fill="rgb(212,86,19)"/><text x="43.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.26%)</title><rect x="43" y="1492" width="3" height="15" fill="rgb(242,87,14)"/><text x="46.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="1508" width="3" height="15" fill="rgb(240,2,7)"/><text x="46.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.26%)</title><rect x="43" y="1524" width="3" height="15" fill="rgb(206,224,23)"/><text x="46.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="1540" width="3" height="15" fill="rgb(219,26,11)"/><text x="46.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="1556" width="3" height="15" fill="rgb(206,63,25)"/><text x="46.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="1572" width="3" height="15" fill="rgb(219,7,7)"/><text x="46.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="1588" width="3" height="15" fill="rgb(218,145,42)"/><text x="46.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="43" y="1604" width="3" height="15" fill="rgb(219,167,46)"/><text x="46.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="1620" width="3" height="15" fill="rgb(233,219,6)"/><text x="46.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.26%)</title><rect x="43" y="1636" width="3" height="15" fill="rgb(236,201,8)"/><text x="46.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="43" y="1652" width="3" height="15" fill="rgb(245,112,42)"/><text x="46.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="1668" width="3" height="15" fill="rgb(206,12,51)"/><text x="46.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="1684" width="3" height="15" fill="rgb(223,16,14)"/><text x="46.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="1700" width="3" height="15" fill="rgb(246,223,21)"/><text x="46.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="1716" width="3" height="15" fill="rgb(210,72,2)"/><text x="46.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="43" y="1732" width="3" height="15" fill="rgb(226,131,39)"/><text x="46.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="1748" width="3" height="15" fill="rgb(230,80,15)"/><text x="46.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.26%)</title><rect x="43" y="1764" width="3" height="15" fill="rgb(229,88,42)"/><text x="46.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="1780" width="3" height="15" fill="rgb(245,159,4)"/><text x="46.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="1796" width="3" height="15" fill="rgb(212,23,5)"/><text x="46.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="1812" width="3" height="15" fill="rgb(247,53,10)"/><text x="46.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="43" y="1828" width="3" height="15" fill="rgb(243,34,52)"/><text x="46.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="1844" width="3" height="15" fill="rgb(243,50,35)"/><text x="46.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (1 samples, 0.26%)</title><rect x="43" y="1860" width="3" height="15" fill="rgb(211,66,28)"/><text x="46.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="1876" width="3" height="15" fill="rgb(214,39,20)"/><text x="46.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="1892" width="3" height="15" fill="rgb(216,84,37)"/><text x="46.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="1908" width="3" height="15" fill="rgb(206,160,43)"/><text x="46.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.26%)</title><rect x="43" y="1924" width="3" height="15" fill="rgb(250,63,3)"/><text x="46.00" y="1934.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.26%)</title><rect x="43" y="1940" width="3" height="15" fill="rgb(223,42,12)"/><text x="46.00" y="1950.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.26%)</title><rect x="43" y="1956" width="3" height="15" fill="rgb(243,159,34)"/><text x="46.00" y="1966.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 1.02%)</title><rect x="37" y="436" width="12" height="15" fill="rgb(234,104,0)"/><text x="40.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="37" y="452" width="12" height="15" fill="rgb(219,27,32)"/><text x="40.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.02%)</title><rect x="37" y="468" width="12" height="15" fill="rgb(245,20,51)"/><text x="40.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.02%)</title><rect x="37" y="484" width="12" height="15" fill="rgb(238,117,24)"/><text x="40.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.02%)</title><rect x="37" y="500" width="12" height="15" fill="rgb(219,178,23)"/><text x="40.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="37" y="516" width="12" height="15" fill="rgb(215,168,36)"/><text x="40.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 1.02%)</title><rect x="37" y="532" width="12" height="15" fill="rgb(239,101,14)"/><text x="40.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="37" y="548" width="12" height="15" fill="rgb(212,25,32)"/><text x="40.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.02%)</title><rect x="37" y="564" width="12" height="15" fill="rgb(227,123,42)"/><text x="40.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.02%)</title><rect x="37" y="580" width="12" height="15" fill="rgb(215,63,52)"/><text x="40.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.02%)</title><rect x="37" y="596" width="12" height="15" fill="rgb(223,223,27)"/><text x="40.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="37" y="612" width="12" height="15" fill="rgb(227,165,37)"/><text x="40.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 0.77%)</title><rect x="40" y="628" width="9" height="15" fill="rgb(243,224,24)"/><text x="43.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.77%)</title><rect x="40" y="644" width="9" height="15" fill="rgb(224,124,41)"/><text x="43.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.77%)</title><rect x="40" y="660" width="9" height="15" fill="rgb(209,93,43)"/><text x="43.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.77%)</title><rect x="40" y="676" width="9" height="15" fill="rgb(254,47,53)"/><text x="43.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.77%)</title><rect x="40" y="692" width="9" height="15" fill="rgb(231,192,32)"/><text x="43.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.77%)</title><rect x="40" y="708" width="9" height="15" fill="rgb(205,16,41)"/><text x="43.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 0.77%)</title><rect x="40" y="724" width="9" height="15" fill="rgb(241,109,23)"/><text x="43.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.77%)</title><rect x="40" y="740" width="9" height="15" fill="rgb(228,84,33)"/><text x="43.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.77%)</title><rect x="40" y="756" width="9" height="15" fill="rgb(248,4,51)"/><text x="43.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.77%)</title><rect x="40" y="772" width="9" height="15" fill="rgb(209,66,34)"/><text x="43.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.77%)</title><rect x="40" y="788" width="9" height="15" fill="rgb(225,140,27)"/><text x="43.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.77%)</title><rect x="40" y="804" width="9" height="15" fill="rgb(245,49,48)"/><text x="43.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 0.77%)</title><rect x="40" y="820" width="9" height="15" fill="rgb(212,123,51)"/><text x="43.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.77%)</title><rect x="40" y="836" width="9" height="15" fill="rgb(207,128,30)"/><text x="43.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.77%)</title><rect x="40" y="852" width="9" height="15" fill="rgb(244,131,6)"/><text x="43.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.77%)</title><rect x="40" y="868" width="9" height="15" fill="rgb(244,128,36)"/><text x="43.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.77%)</title><rect x="40" y="884" width="9" height="15" fill="rgb(242,91,36)"/><text x="43.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.77%)</title><rect x="40" y="900" width="9" height="15" fill="rgb(233,199,29)"/><text x="43.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 0.77%)</title><rect x="40" y="916" width="9" height="15" fill="rgb(231,212,14)"/><text x="43.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.77%)</title><rect x="40" y="932" width="9" height="15" fill="rgb(232,12,37)"/><text x="43.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.77%)</title><rect x="40" y="948" width="9" height="15" fill="rgb(250,200,23)"/><text x="43.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.77%)</title><rect x="40" y="964" width="9" height="15" fill="rgb(240,186,48)"/><text x="43.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.77%)</title><rect x="40" y="980" width="9" height="15" fill="rgb(230,176,42)"/><text x="43.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.77%)</title><rect x="40" y="996" width="9" height="15" fill="rgb(214,17,32)"/><text x="43.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.26%)</title><rect x="46" y="1012" width="3" height="15" fill="rgb(211,136,36)"/><text x="49.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="46" y="1028" width="3" height="15" fill="rgb(254,206,13)"/><text x="49.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="46" y="1044" width="3" height="15" fill="rgb(206,166,2)"/><text x="49.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="46" y="1060" width="3" height="15" fill="rgb(212,41,10)"/><text x="49.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="46" y="1076" width="3" height="15" fill="rgb(210,62,18)"/><text x="49.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="46" y="1092" width="3" height="15" fill="rgb(231,55,33)"/><text x="49.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:67) (1 samples, 0.26%)</title><rect x="46" y="1108" width="3" height="15" fill="rgb(218,57,18)"/><text x="49.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="46" y="1124" width="3" height="15" fill="rgb(253,71,42)"/><text x="49.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="46" y="1140" width="3" height="15" fill="rgb(242,146,46)"/><text x="49.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="46" y="1156" width="3" height="15" fill="rgb(249,200,19)"/><text x="49.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="46" y="1172" width="3" height="15" fill="rgb(229,22,38)"/><text x="49.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="46" y="1188" width="3" height="15" fill="rgb(222,190,38)"/><text x="49.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/internals/__init__.py:1) (1 samples, 0.26%)</title><rect x="46" y="1204" width="3" height="15" fill="rgb(253,112,28)"/><text x="49.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="46" y="1220" width="3" height="15" fill="rgb(218,193,6)"/><text x="49.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="46" y="1236" width="3" height="15" fill="rgb(214,126,13)"/><text x="49.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="46" y="1252" width="3" height="15" fill="rgb(243,130,32)"/><text x="49.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.26%)</title><rect x="46" y="1268" width="3" height="15" fill="rgb(230,202,44)"/><text x="49.00" y="1278.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.26%)</title><rect x="46" y="1284" width="3" height="15" fill="rgb(210,205,41)"/><text x="49.00" y="1294.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.26%)</title><rect x="46" y="1300" width="3" height="15" fill="rgb(228,3,2)"/><text x="49.00" y="1310.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.26%)</title><rect x="49" y="1492" width="3" height="15" fill="rgb(205,115,6)"/><text x="52.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.26%)</title><rect x="49" y="1508" width="3" height="15" fill="rgb(237,86,15)"/><text x="52.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.26%)</title><rect x="49" y="1524" width="3" height="15" fill="rgb(220,19,50)"/><text x="52.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.26%)</title><rect x="49" y="1540" width="3" height="15" fill="rgb(234,160,50)"/><text x="52.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.26%)</title><rect x="49" y="1556" width="3" height="15" fill="rgb(237,24,22)"/><text x="52.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:101) (1 samples, 0.26%)</title><rect x="49" y="1572" width="3" height="15" fill="rgb(215,93,32)"/><text x="52.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.26%)</title><rect x="49" y="1588" width="3" height="15" fill="rgb(232,162,26)"/><text x="52.00" y="1598.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:4) (15 samples, 3.84%)</title><rect x="10" y="52" width="45" height="15" fill="rgb(240,186,23)"/><text x="13.00" y="62.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 3.84%)</title><rect x="10" y="68" width="45" height="15" fill="rgb(223,112,17)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 3.84%)</title><rect x="10" y="84" width="45" height="15" fill="rgb(225,162,23)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 3.84%)</title><rect x="10" y="100" width="45" height="15" fill="rgb(242,228,6)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 3.84%)</title><rect x="10" y="116" width="45" height="15" fill="rgb(248,167,44)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 3.84%)</title><rect x="10" y="132" width="45" height="15" fill="rgb(208,2,20)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_b_reg.py:7) (7 samples, 1.79%)</title><rect x="34" y="148" width="21" height="15" fill="rgb(219,41,44)"/><text x="37.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.79%)</title><rect x="34" y="164" width="21" height="15" fill="rgb(205,164,40)"/><text x="37.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.79%)</title><rect x="34" y="180" width="21" height="15" fill="rgb(234,67,24)"/><text x="37.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.79%)</title><rect x="34" y="196" width="21" height="15" fill="rgb(248,205,33)"/><text x="37.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.79%)</title><rect x="34" y="212" width="21" height="15" fill="rgb(246,171,47)"/><text x="37.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.79%)</title><rect x="34" y="228" width="21" height="15" fill="rgb(226,133,25)"/><text x="37.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 1.53%)</title><rect x="37" y="244" width="18" height="15" fill="rgb(216,14,0)"/><text x="40.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.53%)</title><rect x="37" y="260" width="18" height="15" fill="rgb(241,97,12)"/><text x="40.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.53%)</title><rect x="37" y="276" width="18" height="15" fill="rgb(238,170,49)"/><text x="40.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.53%)</title><rect x="37" y="292" width="18" height="15" fill="rgb(247,85,26)"/><text x="40.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.53%)</title><rect x="37" y="308" width="18" height="15" fill="rgb(215,174,33)"/><text x="40.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.53%)</title><rect x="37" y="324" width="18" height="15" fill="rgb(227,223,13)"/><text x="40.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 1.53%)</title><rect x="37" y="340" width="18" height="15" fill="rgb(249,171,26)"/><text x="40.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.53%)</title><rect x="37" y="356" width="18" height="15" fill="rgb(220,36,5)"/><text x="40.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.53%)</title><rect x="37" y="372" width="18" height="15" fill="rgb(205,160,34)"/><text x="40.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.53%)</title><rect x="37" y="388" width="18" height="15" fill="rgb(230,200,39)"/><text x="40.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.53%)</title><rect x="37" y="404" width="18" height="15" fill="rgb(205,37,3)"/><text x="40.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.53%)</title><rect x="37" y="420" width="18" height="15" fill="rgb(210,211,21)"/><text x="40.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.51%)</title><rect x="49" y="436" width="6" height="15" fill="rgb(215,95,10)"/><text x="52.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="49" y="452" width="6" height="15" fill="rgb(240,59,18)"/><text x="52.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.51%)</title><rect x="49" y="468" width="6" height="15" fill="rgb(252,109,20)"/><text x="52.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="49" y="484" width="6" height="15" fill="rgb(242,218,44)"/><text x="52.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="49" y="500" width="6" height="15" fill="rgb(214,19,31)"/><text x="52.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="49" y="516" width="6" height="15" fill="rgb(222,98,18)"/><text x="52.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="49" y="532" width="6" height="15" fill="rgb(239,59,27)"/><text x="52.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="49" y="548" width="6" height="15" fill="rgb(243,225,45)"/><text x="52.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="49" y="564" width="6" height="15" fill="rgb(252,176,50)"/><text x="52.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.51%)</title><rect x="49" y="580" width="6" height="15" fill="rgb(228,125,31)"/><text x="52.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="49" y="596" width="6" height="15" fill="rgb(224,183,4)"/><text x="52.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="49" y="612" width="6" height="15" fill="rgb(233,229,5)"/><text x="52.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="49" y="628" width="6" height="15" fill="rgb(251,61,7)"/><text x="52.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="49" y="644" width="6" height="15" fill="rgb(249,69,30)"/><text x="52.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="49" y="660" width="6" height="15" fill="rgb(236,214,9)"/><text x="52.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.51%)</title><rect x="49" y="676" width="6" height="15" fill="rgb(246,3,13)"/><text x="52.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="49" y="692" width="6" height="15" fill="rgb(245,163,2)"/><text x="52.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="49" y="708" width="6" height="15" fill="rgb(207,105,13)"/><text x="52.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="49" y="724" width="6" height="15" fill="rgb(226,113,38)"/><text x="52.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="49" y="740" width="6" height="15" fill="rgb(251,216,51)"/><text x="52.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="49" y="756" width="6" height="15" fill="rgb(228,72,54)"/><text x="52.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.51%)</title><rect x="49" y="772" width="6" height="15" fill="rgb(230,196,26)"/><text x="52.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="49" y="788" width="6" height="15" fill="rgb(253,58,23)"/><text x="52.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="49" y="804" width="6" height="15" fill="rgb(229,2,13)"/><text x="52.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="49" y="820" width="6" height="15" fill="rgb(242,151,22)"/><text x="52.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="49" y="836" width="6" height="15" fill="rgb(227,220,52)"/><text x="52.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="49" y="852" width="6" height="15" fill="rgb(250,1,47)"/><text x="52.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.51%)</title><rect x="49" y="868" width="6" height="15" fill="rgb(207,14,26)"/><text x="52.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="49" y="884" width="6" height="15" fill="rgb(206,16,39)"/><text x="52.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.51%)</title><rect x="49" y="900" width="6" height="15" fill="rgb(209,152,0)"/><text x="52.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="49" y="916" width="6" height="15" fill="rgb(225,24,27)"/><text x="52.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="49" y="932" width="6" height="15" fill="rgb(217,67,11)"/><text x="52.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="49" y="948" width="6" height="15" fill="rgb(221,152,1)"/><text x="52.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="49" y="964" width="6" height="15" fill="rgb(229,43,48)"/><text x="52.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="49" y="980" width="6" height="15" fill="rgb(211,219,37)"/><text x="52.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="49" y="996" width="6" height="15" fill="rgb(247,190,20)"/><text x="52.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.51%)</title><rect x="49" y="1012" width="6" height="15" fill="rgb(244,226,37)"/><text x="52.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="49" y="1028" width="6" height="15" fill="rgb(206,92,2)"/><text x="52.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="49" y="1044" width="6" height="15" fill="rgb(239,136,48)"/><text x="52.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="49" y="1060" width="6" height="15" fill="rgb(246,71,18)"/><text x="52.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="49" y="1076" width="6" height="15" fill="rgb(246,224,29)"/><text x="52.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="49" y="1092" width="6" height="15" fill="rgb(207,158,43)"/><text x="52.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.51%)</title><rect x="49" y="1108" width="6" height="15" fill="rgb(214,202,46)"/><text x="52.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.51%)</title><rect x="49" y="1124" width="6" height="15" fill="rgb(212,23,52)"/><text x="52.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="49" y="1140" width="6" height="15" fill="rgb(223,146,35)"/><text x="52.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="49" y="1156" width="6" height="15" fill="rgb(248,80,39)"/><text x="52.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="49" y="1172" width="6" height="15" fill="rgb(214,125,0)"/><text x="52.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="49" y="1188" width="6" height="15" fill="rgb(219,85,19)"/><text x="52.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="49" y="1204" width="6" height="15" fill="rgb(215,127,45)"/><text x="52.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="49" y="1220" width="6" height="15" fill="rgb(237,114,1)"/><text x="52.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.51%)</title><rect x="49" y="1236" width="6" height="15" fill="rgb(254,40,5)"/><text x="52.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.51%)</title><rect x="49" y="1252" width="6" height="15" fill="rgb(236,92,15)"/><text x="52.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="49" y="1268" width="6" height="15" fill="rgb(213,17,1)"/><text x="52.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="49" y="1284" width="6" height="15" fill="rgb(220,197,13)"/><text x="52.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="49" y="1300" width="6" height="15" fill="rgb(247,221,25)"/><text x="52.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="49" y="1316" width="6" height="15" fill="rgb(238,49,33)"/><text x="52.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="49" y="1332" width="6" height="15" fill="rgb(248,153,15)"/><text x="52.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="49" y="1348" width="6" height="15" fill="rgb(227,152,24)"/><text x="52.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.51%)</title><rect x="49" y="1364" width="6" height="15" fill="rgb(254,222,53)"/><text x="52.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="49" y="1380" width="6" height="15" fill="rgb(251,38,25)"/><text x="52.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="49" y="1396" width="6" height="15" fill="rgb(219,13,51)"/><text x="52.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="49" y="1412" width="6" height="15" fill="rgb(215,224,15)"/><text x="52.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="49" y="1428" width="6" height="15" fill="rgb(209,11,34)"/><text x="52.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="49" y="1444" width="6" height="15" fill="rgb(212,165,33)"/><text x="52.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.51%)</title><rect x="49" y="1460" width="6" height="15" fill="rgb(209,5,49)"/><text x="52.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.51%)</title><rect x="49" y="1476" width="6" height="15" fill="rgb(220,103,42)"/><text x="52.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:97) (1 samples, 0.26%)</title><rect x="52" y="1492" width="3" height="15" fill="rgb(244,167,49)"/><text x="55.00" y="1502.50"></text></g><g><title>0x7f4a437ed0e9 (?) (1 samples, 0.26%)</title><rect x="52" y="1508" width="3" height="15" fill="rgb(239,111,39)"/><text x="55.00" y="1518.50"></text></g><g><title>0x7f4a437d3bc1 (?) (1 samples, 0.26%)</title><rect x="52" y="1524" width="3" height="15" fill="rgb(252,110,47)"/><text x="55.00" y="1534.50"></text></g><g><title>0x7f4a438b1d50 (?) (1 samples, 0.26%)</title><rect x="52" y="1540" width="3" height="15" fill="rgb(237,193,53)"/><text x="55.00" y="1550.50"></text></g><g><title>0x7f4a438b759f (?) (1 samples, 0.26%)</title><rect x="52" y="1556" width="3" height="15" fill="rgb(217,140,54)"/><text x="55.00" y="1566.50"></text></g><g><title>0x7f4a438bbdb2 (?) (1 samples, 0.26%)</title><rect x="52" y="1572" width="3" height="15" fill="rgb(236,127,37)"/><text x="55.00" y="1582.50"></text></g><g><title>0x7f4a438ada38 (?) (1 samples, 0.26%)</title><rect x="52" y="1588" width="3" height="15" fill="rgb(206,169,48)"/><text x="55.00" y="1598.50"></text></g><g><title>0x7f4a43834d27 (?) (1 samples, 0.26%)</title><rect x="52" y="1604" width="3" height="15" fill="rgb(212,119,11)"/><text x="55.00" y="1614.50"></text></g><g><title>0x7f4a43834933 (?) (1 samples, 0.26%)</title><rect x="52" y="1620" width="3" height="15" fill="rgb(216,66,13)"/><text x="55.00" y="1630.50"></text></g><g><title>0x7f4a43833408 (?) (1 samples, 0.26%)</title><rect x="52" y="1636" width="3" height="15" fill="rgb(212,117,51)"/><text x="55.00" y="1646.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:40) (1 samples, 0.26%)</title><rect x="55" y="52" width="3" height="15" fill="rgb(239,54,43)"/><text x="58.00" y="62.50"></text></g><g><title>start (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:11) (1 samples, 0.26%)</title><rect x="55" y="68" width="3" height="15" fill="rgb(242,117,25)"/><text x="58.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_b_reg.py:39) (1 samples, 0.26%)</title><rect x="55" y="84" width="3" height="15" fill="rgb(215,38,17)"/><text x="58.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (1 samples, 0.26%)</title><rect x="55" y="100" width="3" height="15" fill="rgb(205,82,2)"/><text x="58.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py:627) (1 samples, 0.26%)</title><rect x="55" y="116" width="3" height="15" fill="rgb(251,69,41)"/><text x="58.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py:370) (1 samples, 0.26%)</title><rect x="55" y="132" width="3" height="15" fill="rgb(216,104,11)"/><text x="58.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py:521) (1 samples, 0.26%)</title><rect x="55" y="148" width="3" height="15" fill="rgb(224,156,33)"/><text x="58.00" y="158.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py:221) (1 samples, 0.26%)</title><rect x="55" y="164" width="3" height="15" fill="rgb(239,56,53)"/><text x="58.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:104) (1 samples, 0.26%)</title><rect x="55" y="180" width="3" height="15" fill="rgb(236,186,8)"/><text x="58.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.26%)</title><rect x="55" y="196" width="3" height="15" fill="rgb(235,89,50)"/><text x="58.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.26%)</title><rect x="55" y="212" width="3" height="15" fill="rgb(240,40,25)"/><text x="58.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (1 samples, 0.26%)</title><rect x="55" y="228" width="3" height="15" fill="rgb(249,47,17)"/><text x="58.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.26%)</title><rect x="55" y="244" width="3" height="15" fill="rgb(210,118,29)"/><text x="58.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (1 samples, 0.26%)</title><rect x="55" y="260" width="3" height="15" fill="rgb(229,161,6)"/><text x="58.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="55" y="276" width="3" height="15" fill="rgb(232,111,26)"/><text x="58.00" y="286.50"></text></g><g><title>dgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="55" y="292" width="3" height="15" fill="rgb(248,81,46)"/><text x="58.00" y="302.50"></text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="55" y="308" width="3" height="15" fill="rgb(225,149,10)"/><text x="58.00" y="318.50"></text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="55" y="324" width="3" height="15" fill="rgb(250,106,36)"/><text x="58.00" y="334.50"></text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="55" y="340" width="3" height="15" fill="rgb(243,82,4)"/><text x="58.00" y="350.50"></text></g><g><title>sched_yield (libc-2.29.so) (1 samples, 0.26%)</title><rect x="55" y="356" width="3" height="15" fill="rgb(214,10,27)"/><text x="58.00" y="366.50"></text></g><g><title>setup_profile0 (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:25) (1 samples, 0.26%)</title><rect x="58" y="84" width="3" height="15" fill="rgb(249,1,29)"/><text x="61.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.26%)</title><rect x="58" y="100" width="3" height="15" fill="rgb(240,166,10)"/><text x="61.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (1 samples, 0.26%)</title><rect x="58" y="116" width="3" height="15" fill="rgb(240,2,41)"/><text x="61.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.26%)</title><rect x="58" y="132" width="3" height="15" fill="rgb(225,220,48)"/><text x="61.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.26%)</title><rect x="58" y="148" width="3" height="15" fill="rgb(233,100,44)"/><text x="61.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.26%)</title><rect x="58" y="164" width="3" height="15" fill="rgb(247,135,39)"/><text x="61.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.26%)</title><rect x="58" y="180" width="3" height="15" fill="rgb(233,81,3)"/><text x="61.00" y="190.50"></text></g><g><title>convert_sklearn_mlp_regressor (skl2onnx/operator_converters/multilayer_perceptron.py:166) (1 samples, 0.26%)</title><rect x="58" y="196" width="3" height="15" fill="rgb(253,2,24)"/><text x="61.00" y="206.50"></text></g><g><title>_predict (skl2onnx/operator_converters/multilayer_perceptron.py:78) (1 samples, 0.26%)</title><rect x="58" y="212" width="3" height="15" fill="rgb(227,131,43)"/><text x="61.00" y="222.50"></text></g><g><title>apply_cast (onnxconverter_common/onnx_ops.py:169) (1 samples, 0.26%)</title><rect x="58" y="228" width="3" height="15" fill="rgb(218,188,12)"/><text x="61.00" y="238.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.26%)</title><rect x="58" y="244" width="3" height="15" fill="rgb(245,70,1)"/><text x="61.00" y="254.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.26%)</title><rect x="58" y="260" width="3" height="15" fill="rgb(225,204,45)"/><text x="61.00" y="270.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="58" y="276" width="3" height="15" fill="rgb(238,55,8)"/><text x="61.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.26%)</title><rect x="58" y="292" width="3" height="15" fill="rgb(252,192,16)"/><text x="61.00" y="302.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:93) (1 samples, 0.26%)</title><rect x="58" y="308" width="3" height="15" fill="rgb(211,82,9)"/><text x="61.00" y="318.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.26%)</title><rect x="58" y="324" width="3" height="15" fill="rgb(234,50,7)"/><text x="61.00" y="334.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.26%)</title><rect x="58" y="340" width="3" height="15" fill="rgb(240,137,51)"/><text x="61.00" y="350.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.26%)</title><rect x="58" y="356" width="3" height="15" fill="rgb(249,142,44)"/><text x="61.00" y="366.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.26%)</title><rect x="58" y="372" width="3" height="15" fill="rgb(226,38,43)"/><text x="61.00" y="382.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.26%)</title><rect x="58" y="388" width="3" height="15" fill="rgb(229,10,5)"/><text x="61.00" y="398.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:104) (1 samples, 0.26%)</title><rect x="61" y="180" width="3" height="15" fill="rgb(230,217,44)"/><text x="64.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.26%)</title><rect x="61" y="196" width="3" height="15" fill="rgb(213,206,6)"/><text x="64.00" y="206.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="61" y="212" width="3" height="15" fill="rgb(227,156,54)"/><text x="64.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:47) (3 samples, 0.77%)</title><rect x="58" y="52" width="9" height="15" fill="rgb(219,169,29)"/><text x="61.00" y="62.50"></text></g><g><title>profile0_skl (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:46) (3 samples, 0.77%)</title><rect x="58" y="68" width="9" height="15" fill="rgb(243,84,44)"/><text x="61.00" y="78.50"></text></g><g><title>setup_profile0 (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:26) (2 samples, 0.51%)</title><rect x="61" y="84" width="6" height="15" fill="rgb(223,185,18)"/><text x="64.00" y="94.50"></text></g><g><title>profile0 (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:18) (2 samples, 0.51%)</title><rect x="61" y="100" width="6" height="15" fill="rgb(216,84,35)"/><text x="64.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.51%)</title><rect x="61" y="116" width="6" height="15" fill="rgb(229,128,41)"/><text x="64.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (2 samples, 0.51%)</title><rect x="61" y="132" width="6" height="15" fill="rgb(253,168,28)"/><text x="64.00" y="142.50"></text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py:1333) (2 samples, 0.51%)</title><rect x="61" y="148" width="6" height="15" fill="rgb(212,125,21)"/><text x="64.00" y="158.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:685) (2 samples, 0.51%)</title><rect x="61" y="164" width="6" height="15" fill="rgb(251,72,5)"/><text x="64.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:109) (1 samples, 0.26%)</title><rect x="64" y="180" width="3" height="15" fill="rgb(207,0,30)"/><text x="67.00" y="190.50"></text></g><g><title>relu (sklearn/neural_network/_base.py:75) (1 samples, 0.26%)</title><rect x="64" y="196" width="3" height="15" fill="rgb(239,6,4)"/><text x="67.00" y="206.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (1 samples, 0.26%)</title><rect x="64" y="212" width="3" height="15" fill="rgb(231,229,18)"/><text x="67.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.26%)</title><rect x="64" y="228" width="3" height="15" fill="rgb(211,97,35)"/><text x="67.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (1 samples, 0.26%)</title><rect x="64" y="244" width="3" height="15" fill="rgb(215,202,41)"/><text x="67.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.26%)</title><rect x="64" y="260" width="3" height="15" fill="rgb(212,122,7)"/><text x="67.00" y="270.50"></text></g><g><title>array_clip (methods.c:2381) (1 samples, 0.26%)</title><rect x="64" y="276" width="3" height="15" fill="rgb(239,108,44)"/><text x="67.00" y="286.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.26%)</title><rect x="64" y="292" width="3" height="15" fill="rgb(250,178,24)"/><text x="67.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:132) (1 samples, 0.26%)</title><rect x="64" y="308" width="3" height="15" fill="rgb(246,79,34)"/><text x="67.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (1 samples, 0.26%)</title><rect x="64" y="324" width="3" height="15" fill="rgb(227,206,40)"/><text x="67.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.26%)</title><rect x="64" y="340" width="3" height="15" fill="rgb(225,222,54)"/><text x="67.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.26%)</title><rect x="64" y="356" width="3" height="15" fill="rgb(219,40,22)"/><text x="67.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.26%)</title><rect x="64" y="372" width="3" height="15" fill="rgb(215,145,3)"/><text x="67.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.26%)</title><rect x="64" y="388" width="3" height="15" fill="rgb(247,107,52)"/><text x="67.00" y="398.50"></text></g><g><title>DOUBLE_clip (clip.c.src:96) (1 samples, 0.26%)</title><rect x="64" y="404" width="3" height="15" fill="rgb(224,203,42)"/><text x="67.00" y="414.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:667) (1 samples, 0.26%)</title><rect x="67" y="164" width="3" height="15" fill="rgb(232,18,50)"/><text x="70.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.26%)</title><rect x="67" y="180" width="3" height="15" fill="rgb(237,177,42)"/><text x="70.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.26%)</title><rect x="67" y="196" width="3" height="15" fill="rgb(240,12,2)"/><text x="70.00" y="206.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:683) (2 samples, 0.51%)</title><rect x="70" y="164" width="6" height="15" fill="rgb(215,78,41)"/><text x="73.00" y="174.50"></text></g><g><title>array_empty (multiarraymodule.c:1814) (2 samples, 0.51%)</title><rect x="70" y="180" width="6" height="15" fill="rgb(248,202,23)"/><text x="73.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (1 samples, 0.26%)</title><rect x="76" y="196" width="3" height="15" fill="rgb(254,167,28)"/><text x="79.00" y="206.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.77%)</title><rect x="82" y="212" width="9" height="15" fill="rgb(224,146,29)"/><text x="85.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (47 samples, 12.02%)</title><rect x="91" y="212" width="142" height="15" fill="rgb(231,109,40)"/><text x="94.00" y="222.50">dgemm_kernel_SANDY..</text></g><g><title>dgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.02%)</title><rect x="233" y="212" width="12" height="15" fill="rgb(232,86,5)"/><text x="236.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.26%)</title><rect x="245" y="244" width="3" height="15" fill="rgb(240,14,48)"/><text x="248.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.26%)</title><rect x="245" y="260" width="3" height="15" fill="rgb(209,141,53)"/><text x="248.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:237) (1 samples, 0.26%)</title><rect x="245" y="276" width="3" height="15" fill="rgb(217,82,33)"/><text x="248.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.26%)</title><rect x="248" y="276" width="3" height="15" fill="rgb(235,142,4)"/><text x="251.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.26%)</title><rect x="248" y="292" width="3" height="15" fill="rgb(242,146,9)"/><text x="251.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.26%)</title><rect x="248" y="308" width="3" height="15" fill="rgb(206,178,3)"/><text x="251.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.26%)</title><rect x="248" y="324" width="3" height="15" fill="rgb(233,211,16)"/><text x="251.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.26%)</title><rect x="248" y="340" width="3" height="15" fill="rgb(233,12,9)"/><text x="251.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.26%)</title><rect x="248" y="356" width="3" height="15" fill="rgb(214,185,54)"/><text x="251.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.26%)</title><rect x="248" y="372" width="3" height="15" fill="rgb(228,3,17)"/><text x="251.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="248" y="388" width="3" height="15" fill="rgb(216,30,51)"/><text x="251.00" y="398.50"></text></g><g><title>0x7f4a53732db8 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="248" y="404" width="3" height="15" fill="rgb(223,122,11)"/><text x="251.00" y="414.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (7 samples, 1.79%)</title><rect x="251" y="276" width="21" height="15" fill="rgb(220,103,54)"/><text x="254.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (7 samples, 1.79%)</title><rect x="251" y="292" width="21" height="15" fill="rgb(217,102,33)"/><text x="254.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (7 samples, 1.79%)</title><rect x="251" y="308" width="21" height="15" fill="rgb(213,26,51)"/><text x="254.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (7 samples, 1.79%)</title><rect x="251" y="324" width="21" height="15" fill="rgb(236,53,34)"/><text x="254.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (9 samples, 2.30%)</title><rect x="248" y="244" width="27" height="15" fill="rgb(250,170,21)"/><text x="251.00" y="254.50">P..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (9 samples, 2.30%)</title><rect x="248" y="260" width="27" height="15" fill="rgb(249,30,31)"/><text x="251.00" y="270.50">N..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2973) (1 samples, 0.26%)</title><rect x="272" y="276" width="3" height="15" fill="rgb(228,40,2)"/><text x="275.00" y="286.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:459) (12 samples, 3.07%)</title><rect x="275" y="260" width="36" height="15" fill="rgb(212,219,31)"/><text x="278.00" y="270.50">DOU..</text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (12 samples, 3.07%)</title><rect x="275" y="276" width="36" height="15" fill="rgb(216,48,6)"/><text x="278.00" y="286.50">DOU..</text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 3.07%)</title><rect x="275" y="292" width="36" height="15" fill="rgb(237,138,18)"/><text x="278.00" y="302.50">cbl..</text></g><g><title>dgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 3.07%)</title><rect x="275" y="308" width="36" height="15" fill="rgb(217,152,5)"/><text x="278.00" y="318.50">dge..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 3.07%)</title><rect x="275" y="324" width="36" height="15" fill="rgb(253,202,3)"/><text x="278.00" y="334.50">exe..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 3.07%)</title><rect x="275" y="340" width="36" height="15" fill="rgb(245,4,6)"/><text x="278.00" y="350.50">exe..</text></g><g><title>sched_yield (libc-2.29.so) (12 samples, 3.07%)</title><rect x="275" y="356" width="36" height="15" fill="rgb(242,0,37)"/><text x="278.00" y="366.50">sch..</text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (3 samples, 0.77%)</title><rect x="311" y="356" width="9" height="15" fill="rgb(252,132,46)"/><text x="314.00" y="366.50"></text></g><g><title>__lll_lock_wait (libpthread-2.29.so) (2 samples, 0.51%)</title><rect x="314" y="372" width="6" height="15" fill="rgb(215,185,16)"/><text x="317.00" y="382.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.02%)</title><rect x="311" y="340" width="12" height="15" fill="rgb(224,204,13)"/><text x="314.00" y="350.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="320" y="356" width="3" height="15" fill="rgb(223,192,24)"/><text x="323.00" y="366.50"></text></g><g><title>__lll_unlock_wake (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="320" y="372" width="3" height="15" fill="rgb(246,120,34)"/><text x="323.00" y="382.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 2.05%)</title><rect x="323" y="340" width="25" height="15" fill="rgb(253,39,26)"/><text x="326.00" y="350.50">e..</text></g><g><title>sched_yield (libc-2.29.so) (8 samples, 2.05%)</title><rect x="323" y="356" width="25" height="15" fill="rgb(207,36,4)"/><text x="326.00" y="366.50">s..</text></g><g><title>dgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="348" y="356" width="3" height="15" fill="rgb(253,2,45)"/><text x="351.00" y="366.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:104) (93 samples, 23.79%)</title><rect x="76" y="180" width="281" height="15" fill="rgb(217,65,42)"/><text x="79.00" y="190.50">_forward_pass (sklearn/neural_network..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (92 samples, 23.53%)</title><rect x="79" y="196" width="278" height="15" fill="rgb(230,227,34)"/><text x="82.00" y="206.50">safe_sparse_dot (sklearn/utils/extmat..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (37 samples, 9.46%)</title><rect x="245" y="212" width="112" height="15" fill="rgb(236,177,10)"/><text x="248.00" y="222.50">ufunc_generic..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (37 samples, 9.46%)</title><rect x="245" y="228" width="112" height="15" fill="rgb(236,55,44)"/><text x="248.00" y="238.50">PyUFunc_Gener..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (27 samples, 6.91%)</title><rect x="275" y="244" width="82" height="15" fill="rgb(216,202,49)"/><text x="278.00" y="254.50">PyUFunc_G..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (15 samples, 3.84%)</title><rect x="311" y="260" width="46" height="15" fill="rgb(222,180,6)"/><text x="314.00" y="270.50">DOUB..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 3.84%)</title><rect x="311" y="276" width="46" height="15" fill="rgb(245,86,14)"/><text x="314.00" y="286.50">cbla..</text></g><g><title>dgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 3.84%)</title><rect x="311" y="292" width="46" height="15" fill="rgb(207,170,18)"/><text x="314.00" y="302.50">dgem..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 3.84%)</title><rect x="311" y="308" width="46" height="15" fill="rgb(235,32,47)"/><text x="314.00" y="318.50">gemm..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 3.84%)</title><rect x="311" y="324" width="46" height="15" fill="rgb(241,100,26)"/><text x="314.00" y="334.50">exec..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.77%)</title><rect x="348" y="340" width="9" height="15" fill="rgb(232,143,38)"/><text x="351.00" y="350.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.51%)</title><rect x="351" y="356" width="6" height="15" fill="rgb(215,57,42)"/><text x="354.00" y="366.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (7 samples, 1.79%)</title><rect x="357" y="292" width="21" height="15" fill="rgb(214,17,32)"/><text x="360.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (7 samples, 1.79%)</title><rect x="357" y="308" width="21" height="15" fill="rgb(245,164,7)"/><text x="360.00" y="318.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:105) (12 samples, 3.07%)</title><rect x="357" y="180" width="36" height="15" fill="rgb(225,216,12)"/><text x="360.00" y="190.50">_fo..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 3.07%)</title><rect x="357" y="196" width="36" height="15" fill="rgb(221,219,48)"/><text x="360.00" y="206.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 3.07%)</title><rect x="357" y="212" width="36" height="15" fill="rgb(234,112,10)"/><text x="360.00" y="222.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (12 samples, 3.07%)</title><rect x="357" y="228" width="36" height="15" fill="rgb(228,1,21)"/><text x="360.00" y="238.50">exe..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (12 samples, 3.07%)</title><rect x="357" y="244" width="36" height="15" fill="rgb(221,10,53)"/><text x="360.00" y="254.50">ite..</text></g><g><title>DOUBLE_add (loops.c.src:1755) (12 samples, 3.07%)</title><rect x="357" y="260" width="36" height="15" fill="rgb(230,94,51)"/><text x="360.00" y="270.50">DOU..</text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (12 samples, 3.07%)</title><rect x="357" y="276" width="36" height="15" fill="rgb(237,93,19)"/><text x="360.00" y="286.50">run..</text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (5 samples, 1.28%)</title><rect x="378" y="292" width="15" height="15" fill="rgb(221,25,51)"/><text x="381.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (5 samples, 1.28%)</title><rect x="378" y="308" width="15" height="15" fill="rgb(210,75,37)"/><text x="381.00" y="318.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:108) (2 samples, 0.51%)</title><rect x="393" y="180" width="6" height="15" fill="rgb(216,171,40)"/><text x="396.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:212) (1 samples, 0.26%)</title><rect x="402" y="228" width="3" height="15" fill="rgb(249,208,18)"/><text x="405.00" y="238.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:63) (1 samples, 0.26%)</title><rect x="405" y="324" width="3" height="15" fill="rgb(223,46,14)"/><text x="408.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.51%)</title><rect x="408" y="324" width="6" height="15" fill="rgb(212,114,43)"/><text x="411.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.26%)</title><rect x="414" y="324" width="3" height="15" fill="rgb(216,101,2)"/><text x="417.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.26%)</title><rect x="414" y="340" width="3" height="15" fill="rgb(246,136,0)"/><text x="417.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.26%)</title><rect x="414" y="356" width="3" height="15" fill="rgb(253,225,40)"/><text x="417.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.26%)</title><rect x="414" y="372" width="3" height="15" fill="rgb(212,192,14)"/><text x="417.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.26%)</title><rect x="414" y="388" width="3" height="15" fill="rgb(240,187,10)"/><text x="417.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.26%)</title><rect x="414" y="404" width="3" height="15" fill="rgb(240,116,38)"/><text x="417.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.26%)</title><rect x="414" y="420" width="3" height="15" fill="rgb(206,52,1)"/><text x="417.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.26%)</title><rect x="414" y="436" width="3" height="15" fill="rgb(224,26,27)"/><text x="417.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.26%)</title><rect x="414" y="452" width="3" height="15" fill="rgb(218,45,15)"/><text x="417.00" y="462.50"></text></g><g><title>_array_find_python_scalar_type (common.c:53) (1 samples, 0.26%)</title><rect x="414" y="468" width="3" height="15" fill="rgb(249,129,44)"/><text x="417.00" y="478.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.26%)</title><rect x="414" y="484" width="3" height="15" fill="rgb(241,135,41)"/><text x="417.00" y="494.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (5 samples, 1.28%)</title><rect x="405" y="308" width="15" height="15" fill="rgb(238,88,47)"/><text x="408.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.26%)</title><rect x="417" y="324" width="3" height="15" fill="rgb(212,92,21)"/><text x="420.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.26%)</title><rect x="417" y="340" width="3" height="15" fill="rgb(213,149,37)"/><text x="420.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.26%)</title><rect x="417" y="356" width="3" height="15" fill="rgb(225,223,49)"/><text x="420.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.26%)</title><rect x="417" y="372" width="3" height="15" fill="rgb(228,86,2)"/><text x="420.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.26%)</title><rect x="417" y="388" width="3" height="15" fill="rgb(209,136,51)"/><text x="420.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.26%)</title><rect x="417" y="404" width="3" height="15" fill="rgb(218,125,30)"/><text x="420.00" y="414.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.26%)</title><rect x="417" y="420" width="3" height="15" fill="rgb(240,15,20)"/><text x="420.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.26%)</title><rect x="420" y="324" width="3" height="15" fill="rgb(211,131,42)"/><text x="423.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (3 samples, 0.77%)</title><rect x="420" y="308" width="9" height="15" fill="rgb(208,151,17)"/><text x="423.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.51%)</title><rect x="423" y="324" width="6" height="15" fill="rgb(243,139,24)"/><text x="426.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.26%)</title><rect x="426" y="340" width="3" height="15" fill="rgb(227,142,53)"/><text x="429.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.26%)</title><rect x="426" y="356" width="3" height="15" fill="rgb(234,125,48)"/><text x="429.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.26%)</title><rect x="426" y="372" width="3" height="15" fill="rgb(249,61,31)"/><text x="429.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.26%)</title><rect x="426" y="388" width="3" height="15" fill="rgb(211,212,31)"/><text x="429.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.26%)</title><rect x="426" y="404" width="3" height="15" fill="rgb(239,215,38)"/><text x="429.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3155) (1 samples, 0.26%)</title><rect x="432" y="356" width="3" height="15" fill="rgb(223,99,18)"/><text x="435.00" y="366.50"></text></g><g><title>0x7f4a53752120 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="432" y="372" width="3" height="15" fill="rgb(214,102,50)"/><text x="435.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.26%)</title><rect x="435" y="356" width="3" height="15" fill="rgb(206,60,7)"/><text x="438.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.26%)</title><rect x="435" y="372" width="3" height="15" fill="rgb(242,26,8)"/><text x="438.00" y="382.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.26%)</title><rect x="435" y="388" width="3" height="15" fill="rgb(226,67,17)"/><text x="438.00" y="398.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.26%)</title><rect x="435" y="404" width="3" height="15" fill="rgb(222,118,11)"/><text x="438.00" y="414.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c:1557) (1 samples, 0.26%)</title><rect x="435" y="420" width="3" height="15" fill="rgb(208,194,7)"/><text x="438.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.26%)</title><rect x="438" y="356" width="3" height="15" fill="rgb(220,189,37)"/><text x="441.00" y="366.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.26%)</title><rect x="438" y="372" width="3" height="15" fill="rgb(206,212,26)"/><text x="441.00" y="382.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.26%)</title><rect x="438" y="388" width="3" height="15" fill="rgb(237,96,28)"/><text x="441.00" y="398.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.26%)</title><rect x="438" y="404" width="3" height="15" fill="rgb(225,106,35)"/><text x="441.00" y="414.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.26%)</title><rect x="438" y="420" width="3" height="15" fill="rgb(238,60,35)"/><text x="441.00" y="430.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.26%)</title><rect x="438" y="436" width="3" height="15" fill="rgb(225,105,9)"/><text x="441.00" y="446.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.26%)</title><rect x="438" y="452" width="3" height="15" fill="rgb(215,107,37)"/><text x="441.00" y="462.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:917) (1 samples, 0.26%)</title><rect x="438" y="468" width="3" height="15" fill="rgb(235,170,0)"/><text x="441.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.26%)</title><rect x="441" y="388" width="3" height="15" fill="rgb(213,0,46)"/><text x="444.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.26%)</title><rect x="441" y="404" width="3" height="15" fill="rgb(239,133,41)"/><text x="444.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="441" y="420" width="3" height="15" fill="rgb(250,45,25)"/><text x="444.00" y="430.50"></text></g><g><title>DOUBLE_clip (clip.c.src:112) (1 samples, 0.26%)</title><rect x="444" y="404" width="3" height="15" fill="rgb(213,46,45)"/><text x="447.00" y="414.50"></text></g><g><title>DOUBLE_clip (clip.c.src:96) (8 samples, 2.05%)</title><rect x="447" y="404" width="24" height="15" fill="rgb(238,220,49)"/><text x="450.00" y="414.50">D..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (47 samples, 12.02%)</title><rect x="444" y="388" width="142" height="15" fill="rgb(227,11,7)"/><text x="447.00" y="398.50">iterator_loop (ufu..</text></g><g><title>DOUBLE_clip (clip.c.src:97) (38 samples, 9.72%)</title><rect x="471" y="404" width="115" height="15" fill="rgb(238,179,2)"/><text x="474.00" y="414.50">DOUBLE_clip (c..</text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:54) (173 samples, 44.25%)</title><rect x="67" y="52" width="522" height="15" fill="rgb(239,33,31)"/><text x="70.00" y="62.50">&lt;module&gt; (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:53) (173 samples, 44.25%)</title><rect x="67" y="68" width="522" height="15" fill="rgb(219,87,12)"/><text x="70.00" y="78.50">profile_skl (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:37) (173 samples, 44.25%)</title><rect x="67" y="84" width="522" height="15" fill="rgb(228,117,30)"/><text x="70.00" y="94.50">setup_profile (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:37)</text></g><g><title>profile (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:31) (173 samples, 44.25%)</title><rect x="67" y="100" width="522" height="15" fill="rgb(232,203,0)"/><text x="70.00" y="110.50">profile (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (173 samples, 44.25%)</title><rect x="67" y="116" width="522" height="15" fill="rgb(238,158,31)"/><text x="70.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (173 samples, 44.25%)</title><rect x="67" y="132" width="522" height="15" fill="rgb(217,81,24)"/><text x="70.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py:1333) (173 samples, 44.25%)</title><rect x="67" y="148" width="522" height="15" fill="rgb(240,12,38)"/><text x="70.00" y="158.50">predict (sklearn/neural_network/_multilayer_perceptron.py:1333)</text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:685) (170 samples, 43.48%)</title><rect x="76" y="164" width="513" height="15" fill="rgb(238,106,35)"/><text x="79.00" y="174.50">_predict (sklearn/neural_network/_multilayer_perceptron.py:685)</text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:109) (63 samples, 16.11%)</title><rect x="399" y="180" width="190" height="15" fill="rgb(246,220,35)"/><text x="402.00" y="190.50">_forward_pass (sklearn/n..</text></g><g><title>relu (sklearn/neural_network/_base.py:75) (62 samples, 15.86%)</title><rect x="402" y="196" width="187" height="15" fill="rgb(241,139,41)"/><text x="405.00" y="206.50">relu (sklearn/neural_net..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (62 samples, 15.86%)</title><rect x="402" y="212" width="187" height="15" fill="rgb(217,34,9)"/><text x="405.00" y="222.50">clip (&lt;__array_function_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (61 samples, 15.60%)</title><rect x="405" y="228" width="184" height="15" fill="rgb(209,11,52)"/><text x="408.00" y="238.50">array_implement_array_f..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (61 samples, 15.60%)</title><rect x="405" y="244" width="184" height="15" fill="rgb(241,10,18)"/><text x="408.00" y="254.50">clip (numpy/core/fromnu..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (61 samples, 15.60%)</title><rect x="405" y="260" width="184" height="15" fill="rgb(211,148,51)"/><text x="408.00" y="270.50">_wrapfunc (numpy/core/f..</text></g><g><title>array_clip (methods.c:2381) (61 samples, 15.60%)</title><rect x="405" y="276" width="184" height="15" fill="rgb(230,57,19)"/><text x="408.00" y="286.50">array_clip (methods.c:2..</text></g><g><title>forward_ndarray_method (methods.c:108) (61 samples, 15.60%)</title><rect x="405" y="292" width="184" height="15" fill="rgb(234,121,11)"/><text x="408.00" y="302.50">forward_ndarray_method ..</text></g><g><title>_clip (numpy/core/_methods.py:132) (53 samples, 13.55%)</title><rect x="429" y="308" width="160" height="15" fill="rgb(240,99,3)"/><text x="432.00" y="318.50">_clip (numpy/core/_m..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (52 samples, 13.30%)</title><rect x="432" y="324" width="157" height="15" fill="rgb(247,125,52)"/><text x="435.00" y="334.50">_clip_dep_invoke_wit..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (52 samples, 13.30%)</title><rect x="432" y="340" width="157" height="15" fill="rgb(242,85,48)"/><text x="435.00" y="350.50">ufunc_generic_call (..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (49 samples, 12.53%)</title><rect x="441" y="356" width="148" height="15" fill="rgb(227,4,15)"/><text x="444.00" y="366.50">PyUFunc_GenericFun..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (49 samples, 12.53%)</title><rect x="441" y="372" width="148" height="15" fill="rgb(250,73,36)"/><text x="444.00" y="382.50">execute_legacy_ufu..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.26%)</title><rect x="586" y="388" width="3" height="15" fill="rgb(231,211,53)"/><text x="589.00" y="398.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.26%)</title><rect x="586" y="404" width="3" height="15" fill="rgb(213,1,22)"/><text x="589.00" y="414.50"></text></g><g><title>0x7f4a53731904 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="586" y="420" width="3" height="15" fill="rgb(226,132,1)"/><text x="589.00" y="430.50"></text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:36) (1 samples, 0.26%)</title><rect x="589" y="84" width="3" height="15" fill="rgb(211,204,8)"/><text x="592.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.26%)</title><rect x="589" y="100" width="3" height="15" fill="rgb(245,31,39)"/><text x="592.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.26%)</title><rect x="589" y="116" width="3" height="15" fill="rgb(237,204,35)"/><text x="592.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.26%)</title><rect x="589" y="132" width="3" height="15" fill="rgb(247,121,10)"/><text x="592.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.26%)</title><rect x="589" y="148" width="3" height="15" fill="rgb(217,144,25)"/><text x="592.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.26%)</title><rect x="589" y="164" width="3" height="15" fill="rgb(233,166,23)"/><text x="592.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.26%)</title><rect x="589" y="180" width="3" height="15" fill="rgb(230,79,46)"/><text x="592.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.26%)</title><rect x="589" y="196" width="3" height="15" fill="rgb(211,173,47)"/><text x="592.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="589" y="212" width="3" height="15" fill="rgb(220,41,41)"/><text x="592.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="589" y="228" width="3" height="15" fill="rgb(218,116,33)"/><text x="592.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="589" y="244" width="3" height="15" fill="rgb(205,204,9)"/><text x="592.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="589" y="260" width="3" height="15" fill="rgb(228,117,34)"/><text x="592.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="589" y="276" width="3" height="15" fill="rgb(253,40,39)"/><text x="592.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.26%)</title><rect x="589" y="292" width="3" height="15" fill="rgb(238,152,28)"/><text x="592.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="589" y="308" width="3" height="15" fill="rgb(226,68,1)"/><text x="592.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="589" y="324" width="3" height="15" fill="rgb(252,224,25)"/><text x="592.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="589" y="340" width="3" height="15" fill="rgb(251,196,45)"/><text x="592.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="589" y="356" width="3" height="15" fill="rgb(219,212,0)"/><text x="592.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="589" y="372" width="3" height="15" fill="rgb(249,197,42)"/><text x="592.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:40) (1 samples, 0.26%)</title><rect x="589" y="388" width="3" height="15" fill="rgb(207,132,14)"/><text x="592.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="589" y="404" width="3" height="15" fill="rgb(244,32,16)"/><text x="592.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="589" y="420" width="3" height="15" fill="rgb(231,1,19)"/><text x="592.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="589" y="436" width="3" height="15" fill="rgb(209,215,2)"/><text x="592.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.26%)</title><rect x="589" y="452" width="3" height="15" fill="rgb(210,212,8)"/><text x="592.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:812) (1 samples, 0.26%)</title><rect x="589" y="468" width="3" height="15" fill="rgb(227,66,18)"/><text x="592.00" y="478.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;:954) (1 samples, 0.26%)</title><rect x="589" y="484" width="3" height="15" fill="rgb(227,0,1)"/><text x="592.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.77%)</title><rect x="592" y="180" width="9" height="15" fill="rgb(231,113,4)"/><text x="595.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.26%)</title><rect x="613" y="260" width="3" height="15" fill="rgb(239,218,9)"/><text x="616.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (1 samples, 0.26%)</title><rect x="613" y="276" width="3" height="15" fill="rgb(240,18,45)"/><text x="616.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.26%)</title><rect x="613" y="292" width="3" height="15" fill="rgb(224,138,47)"/><text x="616.00" y="302.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1371) (1 samples, 0.26%)</title><rect x="616" y="292" width="3" height="15" fill="rgb(235,79,15)"/><text x="619.00" y="302.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1867) (14 samples, 3.58%)</title><rect x="619" y="308" width="42" height="15" fill="rgb(217,95,32)"/><text x="622.00" y="318.50">FLO..</text></g><g><title>FLOAT_maximum (loops.c.src:1868) (9 samples, 2.30%)</title><rect x="661" y="308" width="28" height="15" fill="rgb(224,199,19)"/><text x="664.00" y="318.50">F..</text></g><g><title>FLOAT_maximum (loops.c.src:1869) (2 samples, 0.51%)</title><rect x="689" y="308" width="6" height="15" fill="rgb(240,144,52)"/><text x="692.00" y="318.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1871) (17 samples, 4.35%)</title><rect x="695" y="308" width="51" height="15" fill="rgb(245,69,49)"/><text x="698.00" y="318.50">FLOAT..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (47 samples, 12.02%)</title><rect x="610" y="196" width="142" height="15" fill="rgb(244,43,31)"/><text x="613.00" y="206.50">run (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (47 samples, 12.02%)</title><rect x="610" y="212" width="142" height="15" fill="rgb(247,116,49)"/><text x="613.00" y="222.50">run (mlprodict/onn..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py:19) (46 samples, 11.76%)</title><rect x="613" y="228" width="139" height="15" fill="rgb(213,153,21)"/><text x="616.00" y="238.50">_run (mlprodict/o..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (46 samples, 11.76%)</title><rect x="613" y="244" width="139" height="15" fill="rgb(214,197,43)"/><text x="616.00" y="254.50">ufunc_generic_cal..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (45 samples, 11.51%)</title><rect x="616" y="260" width="136" height="15" fill="rgb(244,196,29)"/><text x="619.00" y="270.50">PyUFunc_GenericFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (45 samples, 11.51%)</title><rect x="616" y="276" width="136" height="15" fill="rgb(206,185,54)"/><text x="619.00" y="286.50">execute_legacy_uf..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (44 samples, 11.25%)</title><rect x="619" y="292" width="133" height="15" fill="rgb(226,112,31)"/><text x="622.00" y="302.50">trivial_three_op..</text></g><g><title>FLOAT_maximum (loops.c.src:1872) (2 samples, 0.51%)</title><rect x="746" y="308" width="6" height="15" fill="rgb(237,177,41)"/><text x="749.00" y="318.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:603) (3 samples, 0.77%)</title><rect x="752" y="340" width="9" height="15" fill="rgb(230,38,14)"/><text x="755.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h:157) (3 samples, 0.77%)</title><rect x="752" y="356" width="9" height="15" fill="rgb(254,163,17)"/><text x="755.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (4 samples, 1.02%)</title><rect x="752" y="228" width="12" height="15" fill="rgb(238,48,6)"/><text x="755.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.02%)</title><rect x="752" y="244" width="12" height="15" fill="rgb(220,109,36)"/><text x="755.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.02%)</title><rect x="752" y="260" width="12" height="15" fill="rgb(222,53,52)"/><text x="755.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.02%)</title><rect x="752" y="276" width="12" height="15" fill="rgb(224,80,23)"/><text x="755.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 1.02%)</title><rect x="752" y="292" width="12" height="15" fill="rgb(246,201,35)"/><text x="755.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (4 samples, 1.02%)</title><rect x="752" y="308" width="12" height="15" fill="rgb(211,181,12)"/><text x="755.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (4 samples, 1.02%)</title><rect x="752" y="324" width="12" height="15" fill="rgb(213,108,4)"/><text x="755.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:604) (1 samples, 0.26%)</title><rect x="761" y="340" width="3" height="15" fill="rgb(208,16,42)"/><text x="764.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.26%)</title><rect x="761" y="356" width="3" height="15" fill="rgb(240,113,1)"/><text x="764.00" y="366.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:5) (1 samples, 0.26%)</title><rect x="764" y="260" width="3" height="15" fill="rgb(225,84,51)"/><text x="767.00" y="270.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:930) (1 samples, 0.26%)</title><rect x="767" y="308" width="3" height="15" fill="rgb(219,197,27)"/><text x="770.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2095) (1 samples, 0.26%)</title><rect x="767" y="324" width="3" height="15" fill="rgb(211,228,36)"/><text x="770.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.26%)</title><rect x="767" y="340" width="3" height="15" fill="rgb(207,58,33)"/><text x="770.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:367) (4 samples, 1.02%)</title><rect x="770" y="324" width="12" height="15" fill="rgb(236,95,25)"/><text x="773.00" y="334.50"></text></g><g><title>0x7f4a53752103 (libc-2.29.so) (4 samples, 1.02%)</title><rect x="770" y="340" width="12" height="15" fill="rgb(247,167,3)"/><text x="773.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="782" y="420" width="3" height="15" fill="rgb(219,22,37)"/><text x="785.00" y="430.50"></text></g><g><title>__lll_lock_wait (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="782" y="436" width="3" height="15" fill="rgb(246,15,3)"/><text x="785.00" y="446.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.51%)</title><rect x="782" y="404" width="6" height="15" fill="rgb(227,40,5)"/><text x="785.00" y="414.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="785" y="420" width="3" height="15" fill="rgb(228,148,45)"/><text x="788.00" y="430.50"></text></g><g><title>__lll_unlock_wake (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="785" y="436" width="3" height="15" fill="rgb(230,170,5)"/><text x="788.00" y="446.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 4.86%)</title><rect x="788" y="404" width="57" height="15" fill="rgb(251,77,37)"/><text x="791.00" y="414.50">exec_b..</text></g><g><title>sched_yield (libc-2.29.so) (19 samples, 4.86%)</title><rect x="788" y="420" width="57" height="15" fill="rgb(251,108,7)"/><text x="791.00" y="430.50">sched_..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:562) (24 samples, 6.14%)</title><rect x="782" y="324" width="73" height="15" fill="rgb(206,204,4)"/><text x="785.00" y="334.50">cblas_ma..</text></g><g><title>gemv (cblasfuncs.c:86) (24 samples, 6.14%)</title><rect x="782" y="340" width="73" height="15" fill="rgb(235,69,47)"/><text x="785.00" y="350.50">gemv (cb..</text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (24 samples, 6.14%)</title><rect x="782" y="356" width="73" height="15" fill="rgb(217,6,12)"/><text x="785.00" y="366.50">cblas_sg..</text></g><g><title>sgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (24 samples, 6.14%)</title><rect x="782" y="372" width="73" height="15" fill="rgb(238,222,49)"/><text x="785.00" y="382.50">sgemv_th..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (24 samples, 6.14%)</title><rect x="782" y="388" width="73" height="15" fill="rgb(227,172,6)"/><text x="785.00" y="398.50">exec_bla..</text></g><g><title>gemv_kernel (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.77%)</title><rect x="845" y="404" width="10" height="15" fill="rgb(253,162,23)"/><text x="848.00" y="414.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.77%)</title><rect x="845" y="420" width="10" height="15" fill="rgb(248,126,27)"/><text x="848.00" y="430.50"></text></g><g><title>sgemv_kernel_4x4 (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.77%)</title><rect x="845" y="436" width="10" height="15" fill="rgb(219,177,22)"/><text x="848.00" y="446.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.77%)</title><rect x="855" y="420" width="9" height="15" fill="rgb(220,218,6)"/><text x="858.00" y="430.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (3 samples, 0.77%)</title><rect x="855" y="436" width="9" height="15" fill="rgb(225,180,22)"/><text x="858.00" y="446.50"></text></g><g><title>__lll_unlock_wake (libpthread-2.29.so) (2 samples, 0.51%)</title><rect x="858" y="452" width="6" height="15" fill="rgb(232,60,46)"/><text x="861.00" y="462.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (17 samples, 4.35%)</title><rect x="864" y="420" width="51" height="15" fill="rgb(221,191,2)"/><text x="867.00" y="430.50">exec_..</text></g><g><title>sched_yield (libc-2.29.so) (17 samples, 4.35%)</title><rect x="864" y="436" width="51" height="15" fill="rgb(239,210,9)"/><text x="867.00" y="446.50">sched..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (54 samples, 13.81%)</title><rect x="767" y="276" width="163" height="15" fill="rgb(251,12,37)"/><text x="770.00" y="286.50">array_implement_array..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (54 samples, 13.81%)</title><rect x="767" y="292" width="163" height="15" fill="rgb(245,85,11)"/><text x="770.00" y="302.50">array_matrixproduct (..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (53 samples, 13.55%)</title><rect x="770" y="308" width="160" height="15" fill="rgb(246,211,28)"/><text x="773.00" y="318.50">PyArray_MatrixProduc..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (25 samples, 6.39%)</title><rect x="855" y="324" width="75" height="15" fill="rgb(250,30,35)"/><text x="858.00" y="334.50">cblas_ma..</text></g><g><title>gemm (cblasfuncs.c:40) (25 samples, 6.39%)</title><rect x="855" y="340" width="75" height="15" fill="rgb(230,142,9)"/><text x="858.00" y="350.50">gemm (cb..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (25 samples, 6.39%)</title><rect x="855" y="356" width="75" height="15" fill="rgb(251,223,3)"/><text x="858.00" y="366.50">cblas_sg..</text></g><g><title>sgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (25 samples, 6.39%)</title><rect x="855" y="372" width="75" height="15" fill="rgb(228,155,6)"/><text x="858.00" y="382.50">sgemm_th..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (25 samples, 6.39%)</title><rect x="855" y="388" width="75" height="15" fill="rgb(206,135,24)"/><text x="858.00" y="398.50">gemm_dri..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (25 samples, 6.39%)</title><rect x="855" y="404" width="75" height="15" fill="rgb(221,143,53)"/><text x="858.00" y="414.50">exec_bla..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 1.28%)</title><rect x="915" y="420" width="15" height="15" fill="rgb(250,155,46)"/><text x="918.00" y="430.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.02%)</title><rect x="918" y="436" width="12" height="15" fill="rgb(220,73,40)"/><text x="921.00" y="446.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="930" y="276" width="3" height="15" fill="rgb(232,80,21)"/><text x="933.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (136 samples, 34.78%)</title><rect x="601" y="180" width="410" height="15" fill="rgb(248,43,7)"/><text x="604.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (86 samples, 21.99%)</title><rect x="752" y="196" width="259" height="15" fill="rgb(209,134,24)"/><text x="755.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op...</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (86 samples, 21.99%)</title><rect x="752" y="212" width="259" height="15" fill="rgb(214,13,35)"/><text x="755.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op...</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (82 samples, 20.97%)</title><rect x="764" y="228" width="247" height="15" fill="rgb(229,59,35)"/><text x="767.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/o..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (82 samples, 20.97%)</title><rect x="764" y="244" width="247" height="15" fill="rgb(248,218,1)"/><text x="767.00" y="254.50">numpy_dot_inplace (mlprodict/onn..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (81 samples, 20.72%)</title><rect x="767" y="260" width="244" height="15" fill="rgb(206,198,51)"/><text x="770.00" y="270.50">dot (&lt;__array_function__ interna..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (26 samples, 6.65%)</title><rect x="933" y="276" width="78" height="15" fill="rgb(246,190,20)"/><text x="936.00" y="286.50">sgemm_ker..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.26%)</title><rect x="1011" y="180" width="3" height="15" fill="rgb(245,192,17)"/><text x="1014.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:61) (143 samples, 36.57%)</title><rect x="589" y="52" width="431" height="15" fill="rgb(209,179,7)"/><text x="592.00" y="62.50">&lt;module&gt; (bench_MLPRegressor_default_b_reg_1000_50_12_floa..</text></g><g><title>profile_pyrt (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:60) (143 samples, 36.57%)</title><rect x="589" y="68" width="431" height="15" fill="rgb(218,154,14)"/><text x="592.00" y="78.50">profile_pyrt (bench_MLPRegressor_default_b_reg_1000_50_12_..</text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:37) (142 samples, 36.32%)</title><rect x="592" y="84" width="428" height="15" fill="rgb(238,160,50)"/><text x="595.00" y="94.50">setup_profile (bench_MLPRegressor_default_b_reg_1000_50_12..</text></g><g><title>profile (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:31) (142 samples, 36.32%)</title><rect x="592" y="100" width="428" height="15" fill="rgb(248,180,10)"/><text x="595.00" y="110.50">profile (bench_MLPRegressor_default_b_reg_1000_50_12_float..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (142 samples, 36.32%)</title><rect x="592" y="116" width="428" height="15" fill="rgb(205,203,47)"/><text x="595.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:18..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (142 samples, 36.32%)</title><rect x="592" y="132" width="428" height="15" fill="rgb(230,102,1)"/><text x="595.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (142 samples, 36.32%)</title><rect x="592" y="148" width="428" height="15" fill="rgb(207,143,26)"/><text x="595.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (142 samples, 36.32%)</title><rect x="592" y="164" width="428" height="15" fill="rgb(254,39,53)"/><text x="595.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.51%)</title><rect x="1014" y="180" width="6" height="15" fill="rgb(254,196,12)"/><text x="1017.00" y="190.50"></text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:36) (1 samples, 0.26%)</title><rect x="1020" y="84" width="4" height="15" fill="rgb(210,56,35)"/><text x="1023.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.26%)</title><rect x="1020" y="100" width="4" height="15" fill="rgb(212,54,39)"/><text x="1023.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.26%)</title><rect x="1020" y="116" width="4" height="15" fill="rgb(242,100,38)"/><text x="1023.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.26%)</title><rect x="1020" y="132" width="4" height="15" fill="rgb(216,24,34)"/><text x="1023.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.26%)</title><rect x="1020" y="148" width="4" height="15" fill="rgb(219,103,25)"/><text x="1023.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (1 samples, 0.26%)</title><rect x="1020" y="164" width="4" height="15" fill="rgb(241,47,51)"/><text x="1023.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="1020" y="180" width="4" height="15" fill="rgb(240,209,20)"/><text x="1023.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="1020" y="196" width="4" height="15" fill="rgb(217,112,0)"/><text x="1023.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="1020" y="212" width="4" height="15" fill="rgb(246,131,10)"/><text x="1023.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="1020" y="228" width="4" height="15" fill="rgb(209,128,22)"/><text x="1023.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="1020" y="244" width="4" height="15" fill="rgb(222,129,31)"/><text x="1023.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (1 samples, 0.26%)</title><rect x="1020" y="260" width="4" height="15" fill="rgb(235,221,41)"/><text x="1023.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="1020" y="276" width="4" height="15" fill="rgb(216,210,40)"/><text x="1023.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="1020" y="292" width="4" height="15" fill="rgb(248,53,27)"/><text x="1023.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="1020" y="308" width="4" height="15" fill="rgb(209,177,39)"/><text x="1023.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="1020" y="324" width="4" height="15" fill="rgb(246,24,0)"/><text x="1023.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="1020" y="340" width="4" height="15" fill="rgb(233,32,17)"/><text x="1023.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:15) (1 samples, 0.26%)</title><rect x="1020" y="356" width="4" height="15" fill="rgb(217,19,8)"/><text x="1023.00" y="366.50"></text></g><g><title>check_distro_info (onnxruntime/capi/onnxruntime_validation.py:16) (1 samples, 0.26%)</title><rect x="1020" y="372" width="4" height="15" fill="rgb(216,10,33)"/><text x="1023.00" y="382.50"></text></g><g><title>architecture (platform.py:868) (1 samples, 0.26%)</title><rect x="1020" y="388" width="4" height="15" fill="rgb(215,42,18)"/><text x="1023.00" y="398.50"></text></g><g><title>_syscmd_file (platform.py:813) (1 samples, 0.26%)</title><rect x="1020" y="404" width="4" height="15" fill="rgb(210,185,18)"/><text x="1023.00" y="414.50"></text></g><g><title>__init__ (subprocess.py:775) (1 samples, 0.26%)</title><rect x="1020" y="420" width="4" height="15" fill="rgb(238,223,30)"/><text x="1023.00" y="430.50"></text></g><g><title>_execute_child (subprocess.py:1453) (1 samples, 0.26%)</title><rect x="1020" y="436" width="4" height="15" fill="rgb(219,183,22)"/><text x="1023.00" y="446.50"></text></g><g><title>subprocess_fork_exec (_posixsubprocess.c:687) (1 samples, 0.26%)</title><rect x="1020" y="452" width="4" height="15" fill="rgb(228,127,12)"/><text x="1023.00" y="462.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1020" y="468" width="4" height="15" fill="rgb(227,177,31)"/><text x="1023.00" y="478.50"></text></g><g><title>0x7f4a11774ff9 (?) (1 samples, 0.26%)</title><rect x="1024" y="212" width="3" height="15" fill="rgb(227,89,12)"/><text x="1027.00" y="222.50"></text></g><g><title>0x7f4a1176fef6 (?) (1 samples, 0.26%)</title><rect x="1024" y="228" width="3" height="15" fill="rgb(210,48,14)"/><text x="1027.00" y="238.50"></text></g><g><title>0x7f4a11764962 (?) (1 samples, 0.26%)</title><rect x="1024" y="244" width="3" height="15" fill="rgb(231,157,22)"/><text x="1027.00" y="254.50"></text></g><g><title>0x7f4a117987a7 (?) (1 samples, 0.26%)</title><rect x="1024" y="260" width="3" height="15" fill="rgb(208,127,22)"/><text x="1027.00" y="270.50"></text></g><g><title>0x7f4a11798379 (?) (1 samples, 0.26%)</title><rect x="1024" y="276" width="3" height="15" fill="rgb(217,172,46)"/><text x="1027.00" y="286.50"></text></g><g><title>0x7f4a11bf68b8 (?) (1 samples, 0.26%)</title><rect x="1024" y="292" width="3" height="15" fill="rgb(242,120,44)"/><text x="1027.00" y="302.50"></text></g><g><title>0x7f4a11bf4c7f (?) (1 samples, 0.26%)</title><rect x="1024" y="308" width="3" height="15" fill="rgb(225,134,38)"/><text x="1027.00" y="318.50"></text></g><g><title>0x7f4a11c0799c (?) (1 samples, 0.26%)</title><rect x="1024" y="324" width="3" height="15" fill="rgb(250,192,38)"/><text x="1027.00" y="334.50"></text></g><g><title>0x7f4a1188c7c3 (?) (1 samples, 0.26%)</title><rect x="1024" y="340" width="3" height="15" fill="rgb(231,99,18)"/><text x="1027.00" y="350.50"></text></g><g><title>0x7f4a11b75fac (?) (1 samples, 0.26%)</title><rect x="1024" y="356" width="3" height="15" fill="rgb(220,50,35)"/><text x="1027.00" y="366.50"></text></g><g><title>0x7f4a098ed0f1 (?) (1 samples, 0.26%)</title><rect x="1024" y="372" width="3" height="15" fill="rgb(234,61,27)"/><text x="1027.00" y="382.50"></text></g><g><title>0x7f4a099334cf (?) (1 samples, 0.26%)</title><rect x="1024" y="388" width="3" height="15" fill="rgb(207,217,27)"/><text x="1027.00" y="398.50"></text></g><g><title>0x7f4a099c56ad (?) (1 samples, 0.26%)</title><rect x="1024" y="404" width="3" height="15" fill="rgb(227,193,51)"/><text x="1027.00" y="414.50"></text></g><g><title>0x7f4a09b07277 (?) (1 samples, 0.26%)</title><rect x="1024" y="420" width="3" height="15" fill="rgb(230,164,38)"/><text x="1027.00" y="430.50"></text></g><g><title>0x7f4a0939c18e (?) (1 samples, 0.26%)</title><rect x="1024" y="436" width="3" height="15" fill="rgb(208,83,3)"/><text x="1027.00" y="446.50"></text></g><g><title>0x7f4a093e1129 (?) (1 samples, 0.26%)</title><rect x="1024" y="452" width="3" height="15" fill="rgb(228,182,48)"/><text x="1027.00" y="462.50"></text></g><g><title>0x7f4a093e1b49 (?) (1 samples, 0.26%)</title><rect x="1024" y="468" width="3" height="15" fill="rgb(215,140,17)"/><text x="1027.00" y="478.50"></text></g><g><title>0x7f4a09398bf8 (?) (1 samples, 0.26%)</title><rect x="1024" y="484" width="3" height="15" fill="rgb(233,58,19)"/><text x="1027.00" y="494.50"></text></g><g><title>0x7f4a0939506d (?) (1 samples, 0.26%)</title><rect x="1024" y="500" width="3" height="15" fill="rgb(209,87,3)"/><text x="1027.00" y="510.50"></text></g><g><title>mkl_blas_avx_sgemm_kernel_0 (onnxruntime/capi/libmklml_intel.so) (21 samples, 5.37%)</title><rect x="1027" y="212" width="63" height="15" fill="rgb(207,97,19)"/><text x="1030.00" y="222.50">mkl_bl..</text></g><g><title>mkl_blas_avx_sgemm_copyan (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.26%)</title><rect x="1093" y="564" width="3" height="15" fill="rgb(220,103,43)"/><text x="1096.00" y="574.50"></text></g><g><title>__kmp_fork_call (libiomp5.so) (2 samples, 0.51%)</title><rect x="1093" y="452" width="6" height="15" fill="rgb(232,174,41)"/><text x="1096.00" y="462.50"></text></g><g><title>__kmp_invoke_task_func (libiomp5.so) (2 samples, 0.51%)</title><rect x="1093" y="468" width="6" height="15" fill="rgb(233,168,10)"/><text x="1096.00" y="478.50"></text></g><g><title>__kmp_invoke_microtask (libiomp5.so) (2 samples, 0.51%)</title><rect x="1093" y="484" width="6" height="15" fill="rgb(243,150,32)"/><text x="1096.00" y="494.50"></text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.51%)</title><rect x="1093" y="500" width="6" height="15" fill="rgb(244,52,16)"/><text x="1096.00" y="510.50"></text></g><g><title>mkl_blas_sgemm_2D_bsrc (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.51%)</title><rect x="1093" y="516" width="6" height="15" fill="rgb(249,145,26)"/><text x="1096.00" y="526.50"></text></g><g><title>mkl_blas_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.51%)</title><rect x="1093" y="532" width="6" height="15" fill="rgb(247,109,16)"/><text x="1096.00" y="542.50"></text></g><g><title>mkl_blas_avx_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.51%)</title><rect x="1093" y="548" width="6" height="15" fill="rgb(250,214,25)"/><text x="1096.00" y="558.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0 (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.26%)</title><rect x="1096" y="564" width="3" height="15" fill="rgb(217,215,11)"/><text x="1099.00" y="574.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0_pst (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.26%)</title><rect x="1096" y="580" width="3" height="15" fill="rgb(218,188,50)"/><text x="1099.00" y="590.50"></text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (21 samples, 5.37%)</title><rect x="1093" y="420" width="63" height="15" fill="rgb(232,97,44)"/><text x="1096.00" y="430.50">mkl_bl..</text></g><g><title>__kmpc_fork_call (libiomp5.so) (21 samples, 5.37%)</title><rect x="1093" y="436" width="63" height="15" fill="rgb(209,29,54)"/><text x="1096.00" y="446.50">__kmpc..</text></g><g><title>__kmp_join_call (libiomp5.so) (19 samples, 4.86%)</title><rect x="1099" y="452" width="57" height="15" fill="rgb(244,104,40)"/><text x="1102.00" y="462.50">__kmp_..</text></g><g><title>__kmp_internal_join (libiomp5.so) (19 samples, 4.86%)</title><rect x="1099" y="468" width="57" height="15" fill="rgb(243,60,38)"/><text x="1102.00" y="478.50">__kmp_..</text></g><g><title>__kmp_join_barrier (libiomp5.so) (19 samples, 4.86%)</title><rect x="1099" y="484" width="57" height="15" fill="rgb(221,24,52)"/><text x="1102.00" y="494.50">__kmp_..</text></g><g><title>_INTERNAL_25_______src_kmp_barrier_cpp_50ae66a0::__kmp_hyper_barrier_gather (libiomp5.so) (19 samples, 4.86%)</title><rect x="1099" y="500" width="57" height="15" fill="rgb(216,35,2)"/><text x="1102.00" y="510.50">_INTER..</text></g><g><title>sched_yield (libc-2.29.so) (4 samples, 1.02%)</title><rect x="1144" y="516" width="12" height="15" fill="rgb(225,30,52)"/><text x="1147.00" y="526.50"></text></g><g><title>all (391 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(246,219,12)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:68) (56 samples, 14.32%)</title><rect x="1020" y="52" width="170" height="15" fill="rgb(250,74,34)"/><text x="1023.00" y="62.50">&lt;module&gt; (bench_MLPReg..</text></g><g><title>profile_ort (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:67) (56 samples, 14.32%)</title><rect x="1020" y="68" width="170" height="15" fill="rgb(246,131,45)"/><text x="1023.00" y="78.50">profile_ort (bench_MLP..</text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:37) (55 samples, 14.07%)</title><rect x="1024" y="84" width="166" height="15" fill="rgb(241,93,13)"/><text x="1027.00" y="94.50">setup_profile (bench_..</text></g><g><title>profile (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py:31) (55 samples, 14.07%)</title><rect x="1024" y="100" width="166" height="15" fill="rgb(206,67,11)"/><text x="1027.00" y="110.50">profile (bench_MLPReg..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (55 samples, 14.07%)</title><rect x="1024" y="116" width="166" height="15" fill="rgb(254,82,18)"/><text x="1027.00" y="126.50">time_predict (mlprodi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (55 samples, 14.07%)</title><rect x="1024" y="132" width="166" height="15" fill="rgb(230,181,27)"/><text x="1027.00" y="142.50">&lt;lambda&gt; (mlprodict/a..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (55 samples, 14.07%)</title><rect x="1024" y="148" width="166" height="15" fill="rgb(213,186,2)"/><text x="1027.00" y="158.50">run (mlprodict/onnxrt..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (55 samples, 14.07%)</title><rect x="1024" y="164" width="166" height="15" fill="rgb(235,207,42)"/><text x="1027.00" y="174.50">_run_whole_runtime (m..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (55 samples, 14.07%)</title><rect x="1024" y="180" width="166" height="15" fill="rgb(250,50,8)"/><text x="1027.00" y="190.50">run (mlprodict/onnxrt..</text></g><g><title>run (onnxruntime/capi/session.py:136) (55 samples, 14.07%)</title><rect x="1024" y="196" width="166" height="15" fill="rgb(243,94,39)"/><text x="1027.00" y="206.50">run (onnxruntime/capi..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 8.44%)</title><rect x="1090" y="212" width="100" height="15" fill="rgb(242,45,43)"/><text x="1093.00" y="222.50">pybind11::cp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 8.44%)</title><rect x="1090" y="228" width="100" height="15" fill="rgb(221,40,21)"/><text x="1093.00" y="238.50">void pybind1..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 8.44%)</title><rect x="1090" y="244" width="100" height="15" fill="rgb(252,158,19)"/><text x="1093.00" y="254.50">onnxruntime:..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 8.44%)</title><rect x="1090" y="260" width="100" height="15" fill="rgb(252,203,31)"/><text x="1093.00" y="270.50">onnxruntime:..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 8.44%)</title><rect x="1090" y="276" width="100" height="15" fill="rgb(236,207,10)"/><text x="1093.00" y="286.50">onnxruntime:..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 8.44%)</title><rect x="1090" y="292" width="100" height="15" fill="rgb(213,162,52)"/><text x="1093.00" y="302.50">onnxruntime:..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 8.44%)</title><rect x="1090" y="308" width="100" height="15" fill="rgb(213,152,11)"/><text x="1093.00" y="318.50">onnxruntime:..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 8.44%)</title><rect x="1090" y="324" width="100" height="15" fill="rgb(230,221,29)"/><text x="1093.00" y="334.50">onnxruntime:..</text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 8.44%)</title><rect x="1090" y="340" width="100" height="15" fill="rgb(234,205,0)"/><text x="1093.00" y="350.50">onnxruntime:..</text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 8.18%)</title><rect x="1093" y="356" width="97" height="15" fill="rgb(250,12,12)"/><text x="1096.00" y="366.50">onnxruntime..</text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (32 samples, 8.18%)</title><rect x="1093" y="372" width="97" height="15" fill="rgb(210,23,40)"/><text x="1096.00" y="382.50">cblas_sgemm..</text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (32 samples, 8.18%)</title><rect x="1093" y="388" width="97" height="15" fill="rgb(209,102,35)"/><text x="1096.00" y="398.50">sgemm_ (onn..</text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (32 samples, 8.18%)</title><rect x="1093" y="404" width="97" height="15" fill="rgb(221,132,3)"/><text x="1096.00" y="414.50">mkl_blas_sg..</text></g><g><title>mkl_blas_sgemv (onnxruntime/capi/libmklml_intel.so) (11 samples, 2.81%)</title><rect x="1156" y="420" width="34" height="15" fill="rgb(252,155,28)"/><text x="1159.00" y="430.50">mk..</text></g><g><title>mkl_blas_sgemv_omp (onnxruntime/capi/libmklml_intel.so) (11 samples, 2.81%)</title><rect x="1156" y="436" width="34" height="15" fill="rgb(228,99,34)"/><text x="1159.00" y="446.50">mk..</text></g><g><title>__kmpc_fork_call (libiomp5.so) (11 samples, 2.81%)</title><rect x="1156" y="452" width="34" height="15" fill="rgb(226,184,9)"/><text x="1159.00" y="462.50">__..</text></g><g><title>__kmp_join_call (libiomp5.so) (11 samples, 2.81%)</title><rect x="1156" y="468" width="34" height="15" fill="rgb(205,66,33)"/><text x="1159.00" y="478.50">__..</text></g><g><title>__kmp_internal_join (libiomp5.so) (11 samples, 2.81%)</title><rect x="1156" y="484" width="34" height="15" fill="rgb(249,117,40)"/><text x="1159.00" y="494.50">__..</text></g><g><title>__kmp_join_barrier (libiomp5.so) (11 samples, 2.81%)</title><rect x="1156" y="500" width="34" height="15" fill="rgb(224,121,38)"/><text x="1159.00" y="510.50">__..</text></g><g><title>_INTERNAL_25_______src_kmp_barrier_cpp_50ae66a0::__kmp_hyper_barrier_gather (libiomp5.so) (11 samples, 2.81%)</title><rect x="1156" y="516" width="34" height="15" fill="rgb(212,135,35)"/><text x="1159.00" y="526.50">_I..</text></g><g><title>sched_yield (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1186" y="532" width="4" height="15" fill="rgb(231,126,46)"/><text x="1189.00" y="542.50"></text></g></g></svg>