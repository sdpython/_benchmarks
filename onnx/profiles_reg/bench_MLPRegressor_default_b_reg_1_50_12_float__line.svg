<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1990" onload="init(evt)" viewBox="0 0 1200 1990" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1990" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1973.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1973.00"> </text><g id="frames"><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.23%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(231,20,25)"/><text x="13.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.23%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(224,41,16)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.23%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(213,199,14)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.23%)</title><rect x="10" y="964" width="2" height="15" fill="rgb(214,30,49)"/><text x="13.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.23%)</title><rect x="10" y="980" width="2" height="15" fill="rgb(242,202,13)"/><text x="13.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.23%)</title><rect x="10" y="996" width="2" height="15" fill="rgb(227,62,23)"/><text x="13.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:353) (1 samples, 0.23%)</title><rect x="10" y="1012" width="2" height="15" fill="rgb(251,225,28)"/><text x="13.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.46%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(208,184,25)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.46%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(208,204,26)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.46%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(242,179,6)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.46%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(211,73,40)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.23%)</title><rect x="12" y="916" width="3" height="15" fill="rgb(241,196,51)"/><text x="15.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.23%)</title><rect x="12" y="932" width="3" height="15" fill="rgb(242,58,20)"/><text x="15.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.23%)</title><rect x="12" y="948" width="3" height="15" fill="rgb(248,196,39)"/><text x="15.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.23%)</title><rect x="12" y="964" width="3" height="15" fill="rgb(252,55,38)"/><text x="15.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.23%)</title><rect x="12" y="980" width="3" height="15" fill="rgb(239,118,47)"/><text x="15.00" y="990.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.23%)</title><rect x="12" y="996" width="3" height="15" fill="rgb(226,159,44)"/><text x="15.00" y="1006.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py:259) (1 samples, 0.23%)</title><rect x="12" y="1012" width="3" height="15" fill="rgb(219,173,11)"/><text x="15.00" y="1022.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2194) (1 samples, 0.23%)</title><rect x="15" y="916" width="3" height="15" fill="rgb(211,34,28)"/><text x="18.00" y="926.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.46%)</title><rect x="15" y="852" width="5" height="15" fill="rgb(219,126,7)"/><text x="18.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.46%)</title><rect x="15" y="868" width="5" height="15" fill="rgb(209,79,43)"/><text x="18.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.46%)</title><rect x="15" y="884" width="5" height="15" fill="rgb(210,150,43)"/><text x="18.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.46%)</title><rect x="15" y="900" width="5" height="15" fill="rgb(212,146,12)"/><text x="18.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.23%)</title><rect x="18" y="916" width="2" height="15" fill="rgb(240,71,41)"/><text x="21.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.23%)</title><rect x="18" y="932" width="2" height="15" fill="rgb(243,156,12)"/><text x="21.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.23%)</title><rect x="18" y="948" width="2" height="15" fill="rgb(226,215,0)"/><text x="21.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.23%)</title><rect x="18" y="964" width="2" height="15" fill="rgb(207,87,22)"/><text x="21.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.23%)</title><rect x="18" y="980" width="2" height="15" fill="rgb(216,145,1)"/><text x="21.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.23%)</title><rect x="18" y="996" width="2" height="15" fill="rgb(230,207,44)"/><text x="21.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.23%)</title><rect x="18" y="1012" width="2" height="15" fill="rgb(225,108,2)"/><text x="21.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 1.16%)</title><rect x="10" y="820" width="13" height="15" fill="rgb(206,212,15)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 1.16%)</title><rect x="10" y="836" width="13" height="15" fill="rgb(221,46,9)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.23%)</title><rect x="20" y="852" width="3" height="15" fill="rgb(211,128,11)"/><text x="23.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.23%)</title><rect x="20" y="868" width="3" height="15" fill="rgb(216,59,28)"/><text x="23.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.23%)</title><rect x="20" y="884" width="3" height="15" fill="rgb(235,76,31)"/><text x="23.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.23%)</title><rect x="20" y="900" width="3" height="15" fill="rgb(234,206,16)"/><text x="23.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.23%)</title><rect x="20" y="916" width="3" height="15" fill="rgb(224,219,8)"/><text x="23.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.23%)</title><rect x="20" y="932" width="3" height="15" fill="rgb(231,1,54)"/><text x="23.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.23%)</title><rect x="20" y="948" width="3" height="15" fill="rgb(245,68,53)"/><text x="23.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.23%)</title><rect x="20" y="964" width="3" height="15" fill="rgb(226,35,52)"/><text x="23.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:353) (1 samples, 0.23%)</title><rect x="20" y="980" width="3" height="15" fill="rgb(251,4,31)"/><text x="23.00" y="990.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:82) (1 samples, 0.23%)</title><rect x="23" y="820" width="3" height="15" fill="rgb(248,22,7)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="23" y="836" width="3" height="15" fill="rgb(209,132,4)"/><text x="26.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="23" y="852" width="3" height="15" fill="rgb(216,45,0)"/><text x="26.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="23" y="868" width="3" height="15" fill="rgb(205,4,16)"/><text x="26.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="23" y="884" width="3" height="15" fill="rgb(207,83,19)"/><text x="26.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="23" y="900" width="3" height="15" fill="rgb(228,221,49)"/><text x="26.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/version.py:191) (1 samples, 0.23%)</title><rect x="23" y="916" width="3" height="15" fill="rgb(210,116,51)"/><text x="26.00" y="926.50"></text></g><g><title>Version (pkg_resources/_vendor/packaging/version.py:195) (1 samples, 0.23%)</title><rect x="23" y="932" width="3" height="15" fill="rgb(234,99,18)"/><text x="26.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.23%)</title><rect x="23" y="948" width="3" height="15" fill="rgb(241,169,10)"/><text x="26.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.23%)</title><rect x="23" y="964" width="3" height="15" fill="rgb(253,164,48)"/><text x="26.00" y="974.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.23%)</title><rect x="23" y="980" width="3" height="15" fill="rgb(210,56,34)"/><text x="26.00" y="990.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.23%)</title><rect x="23" y="996" width="3" height="15" fill="rgb(216,127,3)"/><text x="26.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.23%)</title><rect x="23" y="1012" width="3" height="15" fill="rgb(212,138,28)"/><text x="26.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.23%)</title><rect x="23" y="1028" width="3" height="15" fill="rgb(235,53,16)"/><text x="26.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.23%)</title><rect x="23" y="1044" width="3" height="15" fill="rgb(222,48,40)"/><text x="26.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.23%)</title><rect x="23" y="1060" width="3" height="15" fill="rgb(232,219,37)"/><text x="26.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.23%)</title><rect x="23" y="1076" width="3" height="15" fill="rgb(208,7,23)"/><text x="26.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py:821) (1 samples, 0.23%)</title><rect x="23" y="1092" width="3" height="15" fill="rgb(223,178,26)"/><text x="26.00" y="1102.50"></text></g><g><title>closegroup (sre_parse.py:97) (1 samples, 0.23%)</title><rect x="23" y="1108" width="3" height="15" fill="rgb(207,123,53)"/><text x="26.00" y="1118.50"></text></g><g><title>getwidth (sre_parse.py:198) (1 samples, 0.23%)</title><rect x="23" y="1124" width="3" height="15" fill="rgb(206,213,15)"/><text x="26.00" y="1134.50"></text></g><g><title>getwidth (sre_parse.py:220) (1 samples, 0.23%)</title><rect x="23" y="1140" width="3" height="15" fill="rgb(238,182,11)"/><text x="26.00" y="1150.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_b_reg.py:2) (7 samples, 1.62%)</title><rect x="10" y="148" width="19" height="15" fill="rgb(238,219,14)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.62%)</title><rect x="10" y="164" width="19" height="15" fill="rgb(234,69,40)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 1.62%)</title><rect x="10" y="180" width="19" height="15" fill="rgb(209,109,27)"/><text x="13.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.62%)</title><rect x="10" y="196" width="19" height="15" fill="rgb(220,29,5)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.62%)</title><rect x="10" y="212" width="19" height="15" fill="rgb(210,206,25)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.62%)</title><rect x="10" y="228" width="19" height="15" fill="rgb(229,225,23)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.62%)</title><rect x="10" y="244" width="19" height="15" fill="rgb(251,11,21)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.62%)</title><rect x="10" y="260" width="19" height="15" fill="rgb(251,45,9)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.62%)</title><rect x="10" y="276" width="19" height="15" fill="rgb(220,138,41)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (7 samples, 1.62%)</title><rect x="10" y="292" width="19" height="15" fill="rgb(218,16,12)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.62%)</title><rect x="10" y="308" width="19" height="15" fill="rgb(209,148,6)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.62%)</title><rect x="10" y="324" width="19" height="15" fill="rgb(251,223,19)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.62%)</title><rect x="10" y="340" width="19" height="15" fill="rgb(213,200,8)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.62%)</title><rect x="10" y="356" width="19" height="15" fill="rgb(231,204,27)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.62%)</title><rect x="10" y="372" width="19" height="15" fill="rgb(209,96,12)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (7 samples, 1.62%)</title><rect x="10" y="388" width="19" height="15" fill="rgb(214,104,37)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.62%)</title><rect x="10" y="404" width="19" height="15" fill="rgb(221,72,21)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.62%)</title><rect x="10" y="420" width="19" height="15" fill="rgb(239,118,10)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.62%)</title><rect x="10" y="436" width="19" height="15" fill="rgb(223,93,4)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.62%)</title><rect x="10" y="452" width="19" height="15" fill="rgb(240,130,24)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.62%)</title><rect x="10" y="468" width="19" height="15" fill="rgb(252,0,1)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (7 samples, 1.62%)</title><rect x="10" y="484" width="19" height="15" fill="rgb(240,71,6)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.62%)</title><rect x="10" y="500" width="19" height="15" fill="rgb(208,189,33)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.62%)</title><rect x="10" y="516" width="19" height="15" fill="rgb(218,163,14)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.62%)</title><rect x="10" y="532" width="19" height="15" fill="rgb(245,68,0)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.62%)</title><rect x="10" y="548" width="19" height="15" fill="rgb(236,195,8)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.62%)</title><rect x="10" y="564" width="19" height="15" fill="rgb(206,35,45)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (7 samples, 1.62%)</title><rect x="10" y="580" width="19" height="15" fill="rgb(205,18,19)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.62%)</title><rect x="10" y="596" width="19" height="15" fill="rgb(206,225,18)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 1.62%)</title><rect x="10" y="612" width="19" height="15" fill="rgb(236,67,41)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.62%)</title><rect x="10" y="628" width="19" height="15" fill="rgb(231,111,53)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.62%)</title><rect x="10" y="644" width="19" height="15" fill="rgb(246,8,49)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.62%)</title><rect x="10" y="660" width="19" height="15" fill="rgb(214,206,7)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.62%)</title><rect x="10" y="676" width="19" height="15" fill="rgb(219,75,24)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.62%)</title><rect x="10" y="692" width="19" height="15" fill="rgb(238,31,48)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.62%)</title><rect x="10" y="708" width="19" height="15" fill="rgb(215,88,36)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (7 samples, 1.62%)</title><rect x="10" y="724" width="19" height="15" fill="rgb(223,79,28)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.62%)</title><rect x="10" y="740" width="19" height="15" fill="rgb(235,5,37)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.62%)</title><rect x="10" y="756" width="19" height="15" fill="rgb(209,4,10)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.62%)</title><rect x="10" y="772" width="19" height="15" fill="rgb(228,188,11)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.62%)</title><rect x="10" y="788" width="19" height="15" fill="rgb(245,200,37)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.62%)</title><rect x="10" y="804" width="19" height="15" fill="rgb(230,79,7)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:83) (1 samples, 0.23%)</title><rect x="26" y="820" width="3" height="15" fill="rgb(246,18,28)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="26" y="836" width="3" height="15" fill="rgb(250,146,2)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="26" y="852" width="3" height="15" fill="rgb(241,178,36)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="26" y="868" width="3" height="15" fill="rgb(235,225,29)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="26" y="884" width="3" height="15" fill="rgb(211,104,3)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="26" y="900" width="3" height="15" fill="rgb(233,127,28)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py:275) (1 samples, 0.23%)</title><rect x="26" y="916" width="3" height="15" fill="rgb(250,194,38)"/><text x="29.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py:373) (1 samples, 0.23%)</title><rect x="26" y="932" width="3" height="15" fill="rgb(225,64,43)"/><text x="29.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.23%)</title><rect x="26" y="948" width="3" height="15" fill="rgb(249,100,45)"/><text x="29.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.23%)</title><rect x="26" y="964" width="3" height="15" fill="rgb(206,81,26)"/><text x="29.00" y="974.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.23%)</title><rect x="26" y="980" width="3" height="15" fill="rgb(240,100,38)"/><text x="29.00" y="990.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.23%)</title><rect x="26" y="996" width="3" height="15" fill="rgb(248,118,13)"/><text x="29.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.23%)</title><rect x="26" y="1012" width="3" height="15" fill="rgb(223,65,27)"/><text x="29.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.23%)</title><rect x="26" y="1028" width="3" height="15" fill="rgb(242,55,20)"/><text x="29.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.23%)</title><rect x="26" y="1044" width="3" height="15" fill="rgb(207,50,21)"/><text x="29.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.23%)</title><rect x="26" y="1060" width="3" height="15" fill="rgb(224,137,25)"/><text x="29.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.23%)</title><rect x="26" y="1076" width="3" height="15" fill="rgb(238,32,40)"/><text x="29.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.23%)</title><rect x="26" y="1092" width="3" height="15" fill="rgb(234,133,53)"/><text x="29.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.23%)</title><rect x="26" y="1108" width="3" height="15" fill="rgb(253,200,39)"/><text x="29.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.23%)</title><rect x="26" y="1124" width="3" height="15" fill="rgb(243,50,30)"/><text x="29.00" y="1134.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.23%)</title><rect x="26" y="1140" width="3" height="15" fill="rgb(253,112,7)"/><text x="29.00" y="1150.50"></text></g><g><title>_parse (sre_parse.py:834) (1 samples, 0.23%)</title><rect x="26" y="1156" width="3" height="15" fill="rgb(215,202,11)"/><text x="29.00" y="1166.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.23%)</title><rect x="29" y="484" width="2" height="15" fill="rgb(233,155,6)"/><text x="32.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="29" y="500" width="2" height="15" fill="rgb(240,207,18)"/><text x="32.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="29" y="516" width="2" height="15" fill="rgb(227,2,12)"/><text x="32.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="29" y="532" width="2" height="15" fill="rgb(227,107,52)"/><text x="32.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="29" y="548" width="2" height="15" fill="rgb(243,115,4)"/><text x="32.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="29" y="564" width="2" height="15" fill="rgb(232,56,25)"/><text x="32.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="29" y="580" width="2" height="15" fill="rgb(212,16,39)"/><text x="32.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="29" y="596" width="2" height="15" fill="rgb(217,169,50)"/><text x="32.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.23%)</title><rect x="29" y="612" width="2" height="15" fill="rgb(230,135,28)"/><text x="32.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="29" y="628" width="2" height="15" fill="rgb(211,154,31)"/><text x="32.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="29" y="644" width="2" height="15" fill="rgb(210,181,51)"/><text x="32.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="29" y="660" width="2" height="15" fill="rgb(251,15,35)"/><text x="32.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="29" y="676" width="2" height="15" fill="rgb(240,70,21)"/><text x="32.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="29" y="692" width="2" height="15" fill="rgb(226,5,12)"/><text x="32.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.23%)</title><rect x="29" y="708" width="2" height="15" fill="rgb(209,147,36)"/><text x="32.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="29" y="724" width="2" height="15" fill="rgb(214,186,26)"/><text x="32.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="29" y="740" width="2" height="15" fill="rgb(211,105,49)"/><text x="32.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="29" y="756" width="2" height="15" fill="rgb(211,150,33)"/><text x="32.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="29" y="772" width="2" height="15" fill="rgb(241,103,20)"/><text x="32.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="29" y="788" width="2" height="15" fill="rgb(251,105,9)"/><text x="32.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:24) (1 samples, 0.23%)</title><rect x="29" y="804" width="2" height="15" fill="rgb(221,137,36)"/><text x="32.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="29" y="820" width="2" height="15" fill="rgb(230,40,38)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="29" y="836" width="2" height="15" fill="rgb(229,45,31)"/><text x="32.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="29" y="852" width="2" height="15" fill="rgb(243,80,25)"/><text x="32.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="29" y="868" width="2" height="15" fill="rgb(231,189,0)"/><text x="32.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="29" y="884" width="2" height="15" fill="rgb(217,221,7)"/><text x="32.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/my_exceptions.py:125) (1 samples, 0.23%)</title><rect x="29" y="900" width="2" height="15" fill="rgb(219,198,15)"/><text x="32.00" y="910.50"></text></g><g><title>_mk_common_exceptions (joblib/my_exceptions.py:118) (1 samples, 0.23%)</title><rect x="29" y="916" width="2" height="15" fill="rgb(212,7,26)"/><text x="32.00" y="926.50"></text></g><g><title>_mk_exception (joblib/my_exceptions.py:92) (1 samples, 0.23%)</title><rect x="29" y="932" width="2" height="15" fill="rgb(241,39,17)"/><text x="32.00" y="942.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_b_reg.py:4) (2 samples, 0.46%)</title><rect x="29" y="148" width="5" height="15" fill="rgb(231,189,10)"/><text x="32.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="29" y="164" width="5" height="15" fill="rgb(222,203,16)"/><text x="32.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.46%)</title><rect x="29" y="180" width="5" height="15" fill="rgb(229,166,6)"/><text x="32.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="29" y="196" width="5" height="15" fill="rgb(243,165,12)"/><text x="32.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="29" y="212" width="5" height="15" fill="rgb(211,51,2)"/><text x="32.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="29" y="228" width="5" height="15" fill="rgb(209,172,15)"/><text x="32.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="29" y="244" width="5" height="15" fill="rgb(223,69,54)"/><text x="32.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="29" y="260" width="5" height="15" fill="rgb(243,197,54)"/><text x="32.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="29" y="276" width="5" height="15" fill="rgb(220,43,44)"/><text x="32.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.46%)</title><rect x="29" y="292" width="5" height="15" fill="rgb(244,169,30)"/><text x="32.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="29" y="308" width="5" height="15" fill="rgb(252,74,32)"/><text x="32.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="29" y="324" width="5" height="15" fill="rgb(234,199,53)"/><text x="32.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="29" y="340" width="5" height="15" fill="rgb(247,85,27)"/><text x="32.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="29" y="356" width="5" height="15" fill="rgb(248,46,4)"/><text x="32.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="29" y="372" width="5" height="15" fill="rgb(208,166,48)"/><text x="32.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.46%)</title><rect x="29" y="388" width="5" height="15" fill="rgb(252,40,26)"/><text x="32.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="29" y="404" width="5" height="15" fill="rgb(232,98,50)"/><text x="32.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="29" y="420" width="5" height="15" fill="rgb(234,0,51)"/><text x="32.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="29" y="436" width="5" height="15" fill="rgb(240,192,51)"/><text x="32.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="29" y="452" width="5" height="15" fill="rgb(248,141,30)"/><text x="32.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="29" y="468" width="5" height="15" fill="rgb(220,218,4)"/><text x="32.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.23%)</title><rect x="31" y="484" width="3" height="15" fill="rgb(230,83,41)"/><text x="34.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="31" y="500" width="3" height="15" fill="rgb(229,177,11)"/><text x="34.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="31" y="516" width="3" height="15" fill="rgb(234,47,21)"/><text x="34.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="31" y="532" width="3" height="15" fill="rgb(248,193,45)"/><text x="34.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="31" y="548" width="3" height="15" fill="rgb(241,128,15)"/><text x="34.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="31" y="564" width="3" height="15" fill="rgb(223,61,14)"/><text x="34.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.23%)</title><rect x="31" y="580" width="3" height="15" fill="rgb(226,202,14)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="31" y="596" width="3" height="15" fill="rgb(251,210,14)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="31" y="612" width="3" height="15" fill="rgb(222,55,23)"/><text x="34.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="31" y="628" width="3" height="15" fill="rgb(236,220,9)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="31" y="644" width="3" height="15" fill="rgb(231,106,39)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="31" y="660" width="3" height="15" fill="rgb(210,223,10)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.23%)</title><rect x="31" y="676" width="3" height="15" fill="rgb(230,22,42)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="31" y="692" width="3" height="15" fill="rgb(223,76,43)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="31" y="708" width="3" height="15" fill="rgb(235,134,53)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="31" y="724" width="3" height="15" fill="rgb(215,40,50)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="31" y="740" width="3" height="15" fill="rgb(213,124,7)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="31" y="756" width="3" height="15" fill="rgb(217,199,47)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.23%)</title><rect x="31" y="772" width="3" height="15" fill="rgb(225,154,38)"/><text x="34.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="31" y="788" width="3" height="15" fill="rgb(252,81,7)"/><text x="34.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="31" y="804" width="3" height="15" fill="rgb(248,169,11)"/><text x="34.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="31" y="820" width="3" height="15" fill="rgb(213,125,21)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="31" y="836" width="3" height="15" fill="rgb(219,205,48)"/><text x="34.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="31" y="852" width="3" height="15" fill="rgb(219,19,26)"/><text x="34.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="31" y="868" width="3" height="15" fill="rgb(228,31,44)"/><text x="34.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="31" y="884" width="3" height="15" fill="rgb(251,213,0)"/><text x="34.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.23%)</title><rect x="31" y="900" width="3" height="15" fill="rgb(235,82,10)"/><text x="34.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="31" y="916" width="3" height="15" fill="rgb(214,107,22)"/><text x="34.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="31" y="932" width="3" height="15" fill="rgb(240,212,3)"/><text x="34.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="31" y="948" width="3" height="15" fill="rgb(205,176,6)"/><text x="34.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="31" y="964" width="3" height="15" fill="rgb(244,168,50)"/><text x="34.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="31" y="980" width="3" height="15" fill="rgb(228,166,11)"/><text x="34.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="31" y="996" width="3" height="15" fill="rgb(239,91,18)"/><text x="34.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="31" y="1012" width="3" height="15" fill="rgb(219,131,36)"/><text x="34.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:5134) (1 samples, 0.23%)</title><rect x="31" y="1028" width="3" height="15" fill="rgb(226,85,45)"/><text x="34.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.23%)</title><rect x="31" y="1044" width="3" height="15" fill="rgb(213,45,4)"/><text x="34.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.23%)</title><rect x="31" y="1060" width="3" height="15" fill="rgb(205,159,3)"/><text x="34.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:65) (1 samples, 0.23%)</title><rect x="31" y="1076" width="3" height="15" fill="rgb(217,201,40)"/><text x="34.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py:59) (1 samples, 0.23%)</title><rect x="34" y="1092" width="3" height="15" fill="rgb(247,4,14)"/><text x="37.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="34" y="1108" width="3" height="15" fill="rgb(228,73,35)"/><text x="37.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="34" y="1124" width="3" height="15" fill="rgb(235,120,25)"/><text x="37.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="34" y="1140" width="3" height="15" fill="rgb(215,171,50)"/><text x="37.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="34" y="1156" width="3" height="15" fill="rgb(251,162,18)"/><text x="37.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="34" y="1172" width="3" height="15" fill="rgb(212,143,31)"/><text x="37.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="34" y="1188" width="3" height="15" fill="rgb(249,60,19)"/><text x="37.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="34" y="1204" width="3" height="15" fill="rgb(247,116,18)"/><text x="37.00" y="1214.50"></text></g><g><title>&lt;module&gt; (http/cookiejar.py:219) (1 samples, 0.23%)</title><rect x="34" y="1220" width="3" height="15" fill="rgb(235,42,30)"/><text x="37.00" y="1230.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.23%)</title><rect x="34" y="1236" width="3" height="15" fill="rgb(212,94,11)"/><text x="37.00" y="1246.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.23%)</title><rect x="34" y="1252" width="3" height="15" fill="rgb(239,145,32)"/><text x="37.00" y="1262.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.23%)</title><rect x="34" y="1268" width="3" height="15" fill="rgb(234,197,15)"/><text x="37.00" y="1278.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.23%)</title><rect x="34" y="1284" width="3" height="15" fill="rgb(246,149,48)"/><text x="37.00" y="1294.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.23%)</title><rect x="34" y="1300" width="3" height="15" fill="rgb(210,73,9)"/><text x="37.00" y="1310.50"></text></g><g><title>_parse (sre_parse.py:502) (1 samples, 0.23%)</title><rect x="34" y="1316" width="3" height="15" fill="rgb(249,184,17)"/><text x="37.00" y="1326.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:112) (2 samples, 0.46%)</title><rect x="34" y="772" width="6" height="15" fill="rgb(245,191,44)"/><text x="37.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.46%)</title><rect x="34" y="788" width="6" height="15" fill="rgb(232,136,12)"/><text x="37.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="34" y="804" width="6" height="15" fill="rgb(230,119,11)"/><text x="37.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="34" y="820" width="6" height="15" fill="rgb(249,56,19)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="34" y="836" width="6" height="15" fill="rgb(230,13,12)"/><text x="37.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="34" y="852" width="6" height="15" fill="rgb(218,228,16)"/><text x="37.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="34" y="868" width="6" height="15" fill="rgb(247,184,2)"/><text x="37.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="34" y="884" width="6" height="15" fill="rgb(254,97,25)"/><text x="37.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py:26) (2 samples, 0.46%)</title><rect x="34" y="900" width="6" height="15" fill="rgb(209,156,48)"/><text x="37.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="34" y="916" width="6" height="15" fill="rgb(213,137,48)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="34" y="932" width="6" height="15" fill="rgb(221,185,18)"/><text x="37.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="34" y="948" width="6" height="15" fill="rgb(222,182,23)"/><text x="37.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="34" y="964" width="6" height="15" fill="rgb(229,127,9)"/><text x="37.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="34" y="980" width="6" height="15" fill="rgb(226,220,53)"/><text x="37.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py:11) (2 samples, 0.46%)</title><rect x="34" y="996" width="6" height="15" fill="rgb(236,109,27)"/><text x="37.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="34" y="1012" width="6" height="15" fill="rgb(227,32,32)"/><text x="37.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="34" y="1028" width="6" height="15" fill="rgb(211,9,52)"/><text x="37.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="34" y="1044" width="6" height="15" fill="rgb(223,123,54)"/><text x="37.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="34" y="1060" width="6" height="15" fill="rgb(225,42,28)"/><text x="37.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="34" y="1076" width="6" height="15" fill="rgb(228,133,16)"/><text x="37.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py:60) (1 samples, 0.23%)</title><rect x="37" y="1092" width="3" height="15" fill="rgb(253,79,53)"/><text x="40.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="37" y="1108" width="3" height="15" fill="rgb(239,83,4)"/><text x="40.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="37" y="1124" width="3" height="15" fill="rgb(212,135,5)"/><text x="40.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="37" y="1140" width="3" height="15" fill="rgb(223,227,13)"/><text x="40.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="37" y="1156" width="3" height="15" fill="rgb(212,152,27)"/><text x="40.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="37" y="1172" width="3" height="15" fill="rgb(210,216,47)"/><text x="40.00" y="1182.50"></text></g><g><title>&lt;module&gt; (http/cookies.py:451) (1 samples, 0.23%)</title><rect x="37" y="1188" width="3" height="15" fill="rgb(212,41,2)"/><text x="40.00" y="1198.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.23%)</title><rect x="37" y="1204" width="3" height="15" fill="rgb(232,129,15)"/><text x="40.00" y="1214.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.23%)</title><rect x="37" y="1220" width="3" height="15" fill="rgb(206,30,12)"/><text x="40.00" y="1230.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.23%)</title><rect x="37" y="1236" width="3" height="15" fill="rgb(226,120,12)"/><text x="40.00" y="1246.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.23%)</title><rect x="37" y="1252" width="3" height="15" fill="rgb(239,218,0)"/><text x="40.00" y="1262.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.23%)</title><rect x="37" y="1268" width="3" height="15" fill="rgb(205,78,14)"/><text x="40.00" y="1278.50"></text></g><g><title>_parse (sre_parse.py:493) (1 samples, 0.23%)</title><rect x="37" y="1284" width="3" height="15" fill="rgb(222,85,42)"/><text x="40.00" y="1294.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.23%)</title><rect x="37" y="1300" width="3" height="15" fill="rgb(225,163,22)"/><text x="40.00" y="1310.50"></text></g><g><title>__next (sre_parse.py:248) (1 samples, 0.23%)</title><rect x="37" y="1316" width="3" height="15" fill="rgb(213,54,0)"/><text x="40.00" y="1326.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (3 samples, 0.69%)</title><rect x="34" y="484" width="8" height="15" fill="rgb(236,120,31)"/><text x="37.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.69%)</title><rect x="34" y="500" width="8" height="15" fill="rgb(213,68,38)"/><text x="37.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.69%)</title><rect x="34" y="516" width="8" height="15" fill="rgb(213,126,46)"/><text x="37.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.69%)</title><rect x="34" y="532" width="8" height="15" fill="rgb(234,94,25)"/><text x="37.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.69%)</title><rect x="34" y="548" width="8" height="15" fill="rgb(220,118,6)"/><text x="37.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.69%)</title><rect x="34" y="564" width="8" height="15" fill="rgb(253,91,27)"/><text x="37.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (3 samples, 0.69%)</title><rect x="34" y="580" width="8" height="15" fill="rgb(213,110,30)"/><text x="37.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.69%)</title><rect x="34" y="596" width="8" height="15" fill="rgb(230,111,17)"/><text x="37.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.69%)</title><rect x="34" y="612" width="8" height="15" fill="rgb(236,138,15)"/><text x="37.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.69%)</title><rect x="34" y="628" width="8" height="15" fill="rgb(243,224,9)"/><text x="37.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.69%)</title><rect x="34" y="644" width="8" height="15" fill="rgb(225,217,8)"/><text x="37.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.69%)</title><rect x="34" y="660" width="8" height="15" fill="rgb(237,224,17)"/><text x="37.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (3 samples, 0.69%)</title><rect x="34" y="676" width="8" height="15" fill="rgb(207,11,21)"/><text x="37.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.69%)</title><rect x="34" y="692" width="8" height="15" fill="rgb(245,119,40)"/><text x="37.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.69%)</title><rect x="34" y="708" width="8" height="15" fill="rgb(253,178,3)"/><text x="37.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.69%)</title><rect x="34" y="724" width="8" height="15" fill="rgb(207,181,2)"/><text x="37.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.69%)</title><rect x="34" y="740" width="8" height="15" fill="rgb(212,6,12)"/><text x="37.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.69%)</title><rect x="34" y="756" width="8" height="15" fill="rgb(215,141,24)"/><text x="37.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.23%)</title><rect x="40" y="772" width="2" height="15" fill="rgb(236,5,7)"/><text x="43.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="40" y="788" width="2" height="15" fill="rgb(219,17,49)"/><text x="43.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="40" y="804" width="2" height="15" fill="rgb(231,164,5)"/><text x="43.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="40" y="820" width="2" height="15" fill="rgb(254,189,40)"/><text x="43.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="40" y="836" width="2" height="15" fill="rgb(217,134,30)"/><text x="43.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="40" y="852" width="2" height="15" fill="rgb(239,228,7)"/><text x="43.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.23%)</title><rect x="40" y="868" width="2" height="15" fill="rgb(239,200,21)"/><text x="43.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="40" y="884" width="2" height="15" fill="rgb(228,136,54)"/><text x="43.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="40" y="900" width="2" height="15" fill="rgb(224,124,12)"/><text x="43.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="40" y="916" width="2" height="15" fill="rgb(245,189,27)"/><text x="43.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="40" y="932" width="2" height="15" fill="rgb(240,223,53)"/><text x="43.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="40" y="948" width="2" height="15" fill="rgb(222,39,47)"/><text x="43.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.23%)</title><rect x="40" y="964" width="2" height="15" fill="rgb(248,139,23)"/><text x="43.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="40" y="980" width="2" height="15" fill="rgb(239,154,16)"/><text x="43.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="40" y="996" width="2" height="15" fill="rgb(215,114,47)"/><text x="43.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="40" y="1012" width="2" height="15" fill="rgb(236,150,40)"/><text x="43.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="40" y="1028" width="2" height="15" fill="rgb(238,28,9)"/><text x="43.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="40" y="1044" width="2" height="15" fill="rgb(211,191,51)"/><text x="43.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.23%)</title><rect x="40" y="1060" width="2" height="15" fill="rgb(225,123,24)"/><text x="43.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="40" y="1076" width="2" height="15" fill="rgb(218,191,29)"/><text x="43.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.23%)</title><rect x="40" y="1092" width="2" height="15" fill="rgb(251,191,33)"/><text x="43.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="40" y="1108" width="2" height="15" fill="rgb(209,134,50)"/><text x="43.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="40" y="1124" width="2" height="15" fill="rgb(232,151,36)"/><text x="43.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="40" y="1140" width="2" height="15" fill="rgb(242,149,38)"/><text x="43.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="40" y="1156" width="2" height="15" fill="rgb(206,28,26)"/><text x="43.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="40" y="1172" width="2" height="15" fill="rgb(218,152,10)"/><text x="43.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="40" y="1188" width="2" height="15" fill="rgb(208,203,30)"/><text x="43.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:20) (1 samples, 0.23%)</title><rect x="40" y="1204" width="2" height="15" fill="rgb(212,63,7)"/><text x="43.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="40" y="1220" width="2" height="15" fill="rgb(244,229,7)"/><text x="43.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="40" y="1236" width="2" height="15" fill="rgb(225,90,6)"/><text x="43.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="40" y="1252" width="2" height="15" fill="rgb(228,90,39)"/><text x="43.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="40" y="1268" width="2" height="15" fill="rgb(208,59,31)"/><text x="43.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="40" y="1284" width="2" height="15" fill="rgb(251,58,23)"/><text x="43.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/retry.py:450) (1 samples, 0.23%)</title><rect x="40" y="1300" width="2" height="15" fill="rgb(213,183,15)"/><text x="43.00" y="1310.50"></text></g><g><title>__init__ (urllib3/util/retry.py:196) (1 samples, 0.23%)</title><rect x="40" y="1316" width="2" height="15" fill="rgb(224,58,18)"/><text x="43.00" y="1326.50"></text></g><g><title>&lt;listcomp&gt; (urllib3/util/retry.py:196) (1 samples, 0.23%)</title><rect x="40" y="1332" width="2" height="15" fill="rgb(221,161,35)"/><text x="43.00" y="1342.50"></text></g><g><title>unicode_lower (python3.7) (1 samples, 0.23%)</title><rect x="40" y="1348" width="2" height="15" fill="rgb(241,81,52)"/><text x="43.00" y="1358.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (4 samples, 0.93%)</title><rect x="34" y="244" width="11" height="15" fill="rgb(242,126,15)"/><text x="37.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.93%)</title><rect x="34" y="260" width="11" height="15" fill="rgb(235,12,31)"/><text x="37.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.93%)</title><rect x="34" y="276" width="11" height="15" fill="rgb(213,136,54)"/><text x="37.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.93%)</title><rect x="34" y="292" width="11" height="15" fill="rgb(209,147,48)"/><text x="37.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.93%)</title><rect x="34" y="308" width="11" height="15" fill="rgb(212,43,9)"/><text x="37.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.93%)</title><rect x="34" y="324" width="11" height="15" fill="rgb(224,227,35)"/><text x="37.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (4 samples, 0.93%)</title><rect x="34" y="340" width="11" height="15" fill="rgb(241,97,40)"/><text x="37.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.93%)</title><rect x="34" y="356" width="11" height="15" fill="rgb(249,142,14)"/><text x="37.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.93%)</title><rect x="34" y="372" width="11" height="15" fill="rgb(222,89,20)"/><text x="37.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.93%)</title><rect x="34" y="388" width="11" height="15" fill="rgb(246,213,9)"/><text x="37.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.93%)</title><rect x="34" y="404" width="11" height="15" fill="rgb(240,23,28)"/><text x="37.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.93%)</title><rect x="34" y="420" width="11" height="15" fill="rgb(236,146,52)"/><text x="37.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.93%)</title><rect x="34" y="436" width="11" height="15" fill="rgb(247,59,31)"/><text x="37.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.93%)</title><rect x="34" y="452" width="11" height="15" fill="rgb(245,146,52)"/><text x="37.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.93%)</title><rect x="34" y="468" width="11" height="15" fill="rgb(221,116,6)"/><text x="37.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.23%)</title><rect x="42" y="484" width="3" height="15" fill="rgb(223,104,42)"/><text x="45.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="42" y="500" width="3" height="15" fill="rgb(251,171,53)"/><text x="45.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="42" y="516" width="3" height="15" fill="rgb(254,111,28)"/><text x="45.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="42" y="532" width="3" height="15" fill="rgb(212,76,28)"/><text x="45.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="42" y="548" width="3" height="15" fill="rgb(232,85,29)"/><text x="45.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="42" y="564" width="3" height="15" fill="rgb(236,117,17)"/><text x="45.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.23%)</title><rect x="42" y="580" width="3" height="15" fill="rgb(211,215,49)"/><text x="45.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="42" y="596" width="3" height="15" fill="rgb(250,37,54)"/><text x="45.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="42" y="612" width="3" height="15" fill="rgb(243,65,22)"/><text x="45.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="42" y="628" width="3" height="15" fill="rgb(237,68,10)"/><text x="45.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="42" y="644" width="3" height="15" fill="rgb(237,195,9)"/><text x="45.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="42" y="660" width="3" height="15" fill="rgb(248,223,49)"/><text x="45.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:79) (1 samples, 0.23%)</title><rect x="42" y="676" width="3" height="15" fill="rgb(245,122,31)"/><text x="45.00" y="686.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.23%)</title><rect x="42" y="692" width="3" height="15" fill="rgb(222,59,22)"/><text x="45.00" y="702.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.23%)</title><rect x="42" y="708" width="3" height="15" fill="rgb(230,19,52)"/><text x="45.00" y="718.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.23%)</title><rect x="42" y="724" width="3" height="15" fill="rgb(217,165,14)"/><text x="45.00" y="734.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.23%)</title><rect x="42" y="740" width="3" height="15" fill="rgb(230,89,18)"/><text x="45.00" y="750.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.23%)</title><rect x="42" y="756" width="3" height="15" fill="rgb(210,225,0)"/><text x="45.00" y="766.50"></text></g><g><title>_compile (sre_compile.py:120) (1 samples, 0.23%)</title><rect x="42" y="772" width="3" height="15" fill="rgb(219,26,26)"/><text x="45.00" y="782.50"></text></g><g><title>_optimize_charset (sre_compile.py:337) (1 samples, 0.23%)</title><rect x="42" y="788" width="3" height="15" fill="rgb(210,130,46)"/><text x="45.00" y="798.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/categorical.py:54) (1 samples, 0.23%)</title><rect x="45" y="964" width="3" height="15" fill="rgb(232,7,45)"/><text x="48.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="45" y="980" width="3" height="15" fill="rgb(235,174,50)"/><text x="48.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="45" y="996" width="3" height="15" fill="rgb(216,143,53)"/><text x="48.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="45" y="1012" width="3" height="15" fill="rgb(209,115,49)"/><text x="48.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="45" y="1028" width="3" height="15" fill="rgb(231,89,3)"/><text x="48.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="45" y="1044" width="3" height="15" fill="rgb(238,85,44)"/><text x="48.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/base.py:36) (1 samples, 0.23%)</title><rect x="45" y="1060" width="3" height="15" fill="rgb(213,15,29)"/><text x="48.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="45" y="1076" width="3" height="15" fill="rgb(254,196,25)"/><text x="48.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="45" y="1092" width="3" height="15" fill="rgb(236,213,8)"/><text x="48.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="45" y="1108" width="3" height="15" fill="rgb(226,59,54)"/><text x="48.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.23%)</title><rect x="45" y="1124" width="3" height="15" fill="rgb(239,61,15)"/><text x="48.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.23%)</title><rect x="45" y="1140" width="3" height="15" fill="rgb(223,112,15)"/><text x="48.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.23%)</title><rect x="45" y="1156" width="3" height="15" fill="rgb(233,25,19)"/><text x="48.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.46%)</title><rect x="45" y="436" width="5" height="15" fill="rgb(253,190,10)"/><text x="48.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="45" y="452" width="5" height="15" fill="rgb(219,58,22)"/><text x="48.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="45" y="468" width="5" height="15" fill="rgb(227,17,47)"/><text x="48.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="45" y="484" width="5" height="15" fill="rgb(220,35,7)"/><text x="48.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="45" y="500" width="5" height="15" fill="rgb(224,121,42)"/><text x="48.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="45" y="516" width="5" height="15" fill="rgb(241,57,33)"/><text x="48.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.46%)</title><rect x="45" y="532" width="5" height="15" fill="rgb(220,47,8)"/><text x="48.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="45" y="548" width="5" height="15" fill="rgb(216,29,8)"/><text x="48.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="45" y="564" width="5" height="15" fill="rgb(242,154,10)"/><text x="48.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="45" y="580" width="5" height="15" fill="rgb(233,205,24)"/><text x="48.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="45" y="596" width="5" height="15" fill="rgb(214,187,21)"/><text x="48.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="45" y="612" width="5" height="15" fill="rgb(250,3,39)"/><text x="48.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.46%)</title><rect x="45" y="628" width="5" height="15" fill="rgb(234,209,45)"/><text x="48.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="45" y="644" width="5" height="15" fill="rgb(240,165,53)"/><text x="48.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="45" y="660" width="5" height="15" fill="rgb(205,177,54)"/><text x="48.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="45" y="676" width="5" height="15" fill="rgb(227,76,54)"/><text x="48.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="45" y="692" width="5" height="15" fill="rgb(241,52,12)"/><text x="48.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="45" y="708" width="5" height="15" fill="rgb(236,32,43)"/><text x="48.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (2 samples, 0.46%)</title><rect x="45" y="724" width="5" height="15" fill="rgb(251,155,43)"/><text x="48.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="45" y="740" width="5" height="15" fill="rgb(241,60,45)"/><text x="48.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.46%)</title><rect x="45" y="756" width="5" height="15" fill="rgb(253,156,20)"/><text x="48.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="45" y="772" width="5" height="15" fill="rgb(232,2,24)"/><text x="48.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="45" y="788" width="5" height="15" fill="rgb(219,194,33)"/><text x="48.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="45" y="804" width="5" height="15" fill="rgb(228,174,15)"/><text x="48.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="45" y="820" width="5" height="15" fill="rgb(253,229,46)"/><text x="48.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="45" y="836" width="5" height="15" fill="rgb(235,0,48)"/><text x="48.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="45" y="852" width="5" height="15" fill="rgb(225,11,37)"/><text x="48.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:7) (2 samples, 0.46%)</title><rect x="45" y="868" width="5" height="15" fill="rgb(234,70,10)"/><text x="48.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.46%)</title><rect x="45" y="884" width="5" height="15" fill="rgb(213,56,43)"/><text x="48.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.46%)</title><rect x="45" y="900" width="5" height="15" fill="rgb(223,172,25)"/><text x="48.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.46%)</title><rect x="45" y="916" width="5" height="15" fill="rgb(206,119,37)"/><text x="48.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.46%)</title><rect x="45" y="932" width="5" height="15" fill="rgb(252,20,28)"/><text x="48.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.46%)</title><rect x="45" y="948" width="5" height="15" fill="rgb(221,14,12)"/><text x="48.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/categorical.py:59) (1 samples, 0.23%)</title><rect x="48" y="964" width="2" height="15" fill="rgb(216,192,25)"/><text x="51.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="48" y="980" width="2" height="15" fill="rgb(251,228,28)"/><text x="51.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="48" y="996" width="2" height="15" fill="rgb(207,128,45)"/><text x="51.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="48" y="1012" width="2" height="15" fill="rgb(242,11,4)"/><text x="51.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:971) (1 samples, 0.23%)</title><rect x="48" y="1028" width="2" height="15" fill="rgb(219,113,30)"/><text x="51.00" y="1038.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.23%)</title><rect x="50" y="1108" width="3" height="15" fill="rgb(252,186,31)"/><text x="53.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="50" y="1124" width="3" height="15" fill="rgb(221,184,46)"/><text x="53.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="50" y="1140" width="3" height="15" fill="rgb(215,174,6)"/><text x="53.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="50" y="1156" width="3" height="15" fill="rgb(222,190,2)"/><text x="53.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="50" y="1172" width="3" height="15" fill="rgb(228,182,45)"/><text x="53.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="50" y="1188" width="3" height="15" fill="rgb(245,136,51)"/><text x="53.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:43) (1 samples, 0.23%)</title><rect x="50" y="1204" width="3" height="15" fill="rgb(228,162,47)"/><text x="53.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="50" y="1220" width="3" height="15" fill="rgb(233,144,4)"/><text x="53.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="50" y="1236" width="3" height="15" fill="rgb(248,190,10)"/><text x="53.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="50" y="1252" width="3" height="15" fill="rgb(245,67,30)"/><text x="53.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.23%)</title><rect x="50" y="1268" width="3" height="15" fill="rgb(209,54,22)"/><text x="53.00" y="1278.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.23%)</title><rect x="50" y="1284" width="3" height="15" fill="rgb(232,44,29)"/><text x="53.00" y="1294.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:529) (1 samples, 0.23%)</title><rect x="50" y="1300" width="3" height="15" fill="rgb(236,128,21)"/><text x="53.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:14) (1 samples, 0.23%)</title><rect x="53" y="1108" width="3" height="15" fill="rgb(213,85,47)"/><text x="56.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="53" y="1124" width="3" height="15" fill="rgb(212,81,34)"/><text x="56.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="53" y="1140" width="3" height="15" fill="rgb(227,161,4)"/><text x="56.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="53" y="1156" width="3" height="15" fill="rgb(225,208,50)"/><text x="56.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="53" y="1172" width="3" height="15" fill="rgb(249,216,16)"/><text x="56.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="53" y="1188" width="3" height="15" fill="rgb(233,204,24)"/><text x="56.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="53" y="1204" width="3" height="15" fill="rgb(240,77,36)"/><text x="56.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="53" y="1220" width="3" height="15" fill="rgb(224,221,27)"/><text x="56.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py:24) (1 samples, 0.23%)</title><rect x="53" y="1236" width="3" height="15" fill="rgb(214,161,32)"/><text x="56.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="53" y="1252" width="3" height="15" fill="rgb(229,7,5)"/><text x="56.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="53" y="1268" width="3" height="15" fill="rgb(254,119,43)"/><text x="56.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="53" y="1284" width="3" height="15" fill="rgb(228,54,3)"/><text x="56.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="53" y="1300" width="3" height="15" fill="rgb(232,227,51)"/><text x="56.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="53" y="1316" width="3" height="15" fill="rgb(228,93,39)"/><text x="56.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.23%)</title><rect x="53" y="1332" width="3" height="15" fill="rgb(221,167,44)"/><text x="56.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.23%)</title><rect x="53" y="1348" width="3" height="15" fill="rgb(213,164,18)"/><text x="56.00" y="1358.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.23%)</title><rect x="53" y="1364" width="3" height="15" fill="rgb(223,110,40)"/><text x="56.00" y="1374.50"></text></g><g><title>root (&lt;template&gt;:100) (1 samples, 0.23%)</title><rect x="56" y="1572" width="3" height="15" fill="rgb(213,76,27)"/><text x="59.00" y="1582.50"></text></g><g><title>root (&lt;template&gt;:122) (1 samples, 0.23%)</title><rect x="59" y="1572" width="2" height="15" fill="rgb(254,177,8)"/><text x="62.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.23%)</title><rect x="59" y="1588" width="2" height="15" fill="rgb(250,119,40)"/><text x="62.00" y="1598.50"></text></g><g><title>getname (skl2onnx/algebra/automation.py:174) (1 samples, 0.23%)</title><rect x="59" y="1604" width="2" height="15" fill="rgb(236,43,4)"/><text x="62.00" y="1614.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (3 samples, 0.69%)</title><rect x="56" y="1460" width="8" height="15" fill="rgb(248,151,13)"/><text x="59.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (3 samples, 0.69%)</title><rect x="56" y="1476" width="8" height="15" fill="rgb(253,184,23)"/><text x="59.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (3 samples, 0.69%)</title><rect x="56" y="1492" width="8" height="15" fill="rgb(242,131,40)"/><text x="59.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (3 samples, 0.69%)</title><rect x="56" y="1508" width="8" height="15" fill="rgb(241,32,16)"/><text x="59.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (3 samples, 0.69%)</title><rect x="56" y="1524" width="8" height="15" fill="rgb(250,168,49)"/><text x="59.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (3 samples, 0.69%)</title><rect x="56" y="1540" width="8" height="15" fill="rgb(241,155,1)"/><text x="59.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.69%)</title><rect x="56" y="1556" width="8" height="15" fill="rgb(220,223,32)"/><text x="59.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:123) (1 samples, 0.23%)</title><rect x="61" y="1572" width="3" height="15" fill="rgb(233,36,23)"/><text x="64.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.23%)</title><rect x="61" y="1588" width="3" height="15" fill="rgb(205,114,45)"/><text x="64.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:152) (1 samples, 0.23%)</title><rect x="61" y="1604" width="3" height="15" fill="rgb(231,111,36)"/><text x="64.00" y="1614.50"></text></g><g><title>0x7f80e99296fc (?) (1 samples, 0.23%)</title><rect x="61" y="1620" width="3" height="15" fill="rgb(253,36,0)"/><text x="64.00" y="1630.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:4) (21 samples, 4.86%)</title><rect x="10" y="52" width="57" height="15" fill="rgb(229,206,41)"/><text x="13.00" y="62.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (21 samples, 4.86%)</title><rect x="10" y="68" width="57" height="15" fill="rgb(250,227,17)"/><text x="13.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (21 samples, 4.86%)</title><rect x="10" y="84" width="57" height="15" fill="rgb(229,47,12)"/><text x="13.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (21 samples, 4.86%)</title><rect x="10" y="100" width="57" height="15" fill="rgb(249,20,29)"/><text x="13.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (21 samples, 4.86%)</title><rect x="10" y="116" width="57" height="15" fill="rgb(205,95,13)"/><text x="13.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (21 samples, 4.86%)</title><rect x="10" y="132" width="57" height="15" fill="rgb(243,40,11)"/><text x="13.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_b_reg.py:7) (12 samples, 2.78%)</title><rect x="34" y="148" width="33" height="15" fill="rgb(218,190,43)"/><text x="37.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 2.78%)</title><rect x="34" y="164" width="33" height="15" fill="rgb(230,131,5)"/><text x="37.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 2.78%)</title><rect x="34" y="180" width="33" height="15" fill="rgb(246,45,46)"/><text x="37.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 2.78%)</title><rect x="34" y="196" width="33" height="15" fill="rgb(216,220,12)"/><text x="37.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 2.78%)</title><rect x="34" y="212" width="33" height="15" fill="rgb(224,151,31)"/><text x="37.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 2.78%)</title><rect x="34" y="228" width="33" height="15" fill="rgb(254,140,46)"/><text x="37.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (8 samples, 1.85%)</title><rect x="45" y="244" width="22" height="15" fill="rgb(226,229,31)"/><text x="48.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.85%)</title><rect x="45" y="260" width="22" height="15" fill="rgb(208,141,50)"/><text x="48.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.85%)</title><rect x="45" y="276" width="22" height="15" fill="rgb(208,54,18)"/><text x="48.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.85%)</title><rect x="45" y="292" width="22" height="15" fill="rgb(254,119,26)"/><text x="48.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.85%)</title><rect x="45" y="308" width="22" height="15" fill="rgb(230,194,26)"/><text x="48.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.85%)</title><rect x="45" y="324" width="22" height="15" fill="rgb(206,7,27)"/><text x="48.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (8 samples, 1.85%)</title><rect x="45" y="340" width="22" height="15" fill="rgb(205,58,47)"/><text x="48.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.85%)</title><rect x="45" y="356" width="22" height="15" fill="rgb(233,19,47)"/><text x="48.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.85%)</title><rect x="45" y="372" width="22" height="15" fill="rgb(232,157,54)"/><text x="48.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.85%)</title><rect x="45" y="388" width="22" height="15" fill="rgb(244,148,22)"/><text x="48.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.85%)</title><rect x="45" y="404" width="22" height="15" fill="rgb(249,189,36)"/><text x="48.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.85%)</title><rect x="45" y="420" width="22" height="15" fill="rgb(236,42,52)"/><text x="48.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (6 samples, 1.39%)</title><rect x="50" y="436" width="17" height="15" fill="rgb(231,169,41)"/><text x="53.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.39%)</title><rect x="50" y="452" width="17" height="15" fill="rgb(231,63,20)"/><text x="53.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.39%)</title><rect x="50" y="468" width="17" height="15" fill="rgb(205,209,34)"/><text x="53.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.39%)</title><rect x="50" y="484" width="17" height="15" fill="rgb(249,137,16)"/><text x="53.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.39%)</title><rect x="50" y="500" width="17" height="15" fill="rgb(228,137,3)"/><text x="53.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.39%)</title><rect x="50" y="516" width="17" height="15" fill="rgb(254,192,54)"/><text x="53.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.39%)</title><rect x="50" y="532" width="17" height="15" fill="rgb(231,135,48)"/><text x="53.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.39%)</title><rect x="50" y="548" width="17" height="15" fill="rgb(247,188,31)"/><text x="53.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.39%)</title><rect x="50" y="564" width="17" height="15" fill="rgb(253,6,49)"/><text x="53.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (6 samples, 1.39%)</title><rect x="50" y="580" width="17" height="15" fill="rgb(214,170,3)"/><text x="53.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.39%)</title><rect x="50" y="596" width="17" height="15" fill="rgb(212,196,33)"/><text x="53.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.39%)</title><rect x="50" y="612" width="17" height="15" fill="rgb(249,137,5)"/><text x="53.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.39%)</title><rect x="50" y="628" width="17" height="15" fill="rgb(222,225,37)"/><text x="53.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.39%)</title><rect x="50" y="644" width="17" height="15" fill="rgb(217,119,37)"/><text x="53.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.39%)</title><rect x="50" y="660" width="17" height="15" fill="rgb(252,118,7)"/><text x="53.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (6 samples, 1.39%)</title><rect x="50" y="676" width="17" height="15" fill="rgb(231,203,45)"/><text x="53.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.39%)</title><rect x="50" y="692" width="17" height="15" fill="rgb(234,10,20)"/><text x="53.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.39%)</title><rect x="50" y="708" width="17" height="15" fill="rgb(246,68,3)"/><text x="53.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.39%)</title><rect x="50" y="724" width="17" height="15" fill="rgb(217,137,14)"/><text x="53.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.39%)</title><rect x="50" y="740" width="17" height="15" fill="rgb(245,123,27)"/><text x="53.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.39%)</title><rect x="50" y="756" width="17" height="15" fill="rgb(221,8,9)"/><text x="53.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (6 samples, 1.39%)</title><rect x="50" y="772" width="17" height="15" fill="rgb(232,113,31)"/><text x="53.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.39%)</title><rect x="50" y="788" width="17" height="15" fill="rgb(238,225,29)"/><text x="53.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.39%)</title><rect x="50" y="804" width="17" height="15" fill="rgb(219,223,15)"/><text x="53.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.39%)</title><rect x="50" y="820" width="17" height="15" fill="rgb(219,158,19)"/><text x="53.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.39%)</title><rect x="50" y="836" width="17" height="15" fill="rgb(240,30,22)"/><text x="53.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.39%)</title><rect x="50" y="852" width="17" height="15" fill="rgb(217,95,27)"/><text x="53.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (6 samples, 1.39%)</title><rect x="50" y="868" width="17" height="15" fill="rgb(231,86,5)"/><text x="53.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.39%)</title><rect x="50" y="884" width="17" height="15" fill="rgb(235,137,17)"/><text x="53.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.39%)</title><rect x="50" y="900" width="17" height="15" fill="rgb(226,219,39)"/><text x="53.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.39%)</title><rect x="50" y="916" width="17" height="15" fill="rgb(227,107,21)"/><text x="53.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.39%)</title><rect x="50" y="932" width="17" height="15" fill="rgb(232,205,13)"/><text x="53.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.39%)</title><rect x="50" y="948" width="17" height="15" fill="rgb(233,1,38)"/><text x="53.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.39%)</title><rect x="50" y="964" width="17" height="15" fill="rgb(222,34,6)"/><text x="53.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.39%)</title><rect x="50" y="980" width="17" height="15" fill="rgb(229,148,0)"/><text x="53.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.39%)</title><rect x="50" y="996" width="17" height="15" fill="rgb(211,143,50)"/><text x="53.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (6 samples, 1.39%)</title><rect x="50" y="1012" width="17" height="15" fill="rgb(214,199,45)"/><text x="53.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.39%)</title><rect x="50" y="1028" width="17" height="15" fill="rgb(247,220,48)"/><text x="53.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.39%)</title><rect x="50" y="1044" width="17" height="15" fill="rgb(209,60,15)"/><text x="53.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.39%)</title><rect x="50" y="1060" width="17" height="15" fill="rgb(238,3,18)"/><text x="53.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.39%)</title><rect x="50" y="1076" width="17" height="15" fill="rgb(226,121,10)"/><text x="53.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.39%)</title><rect x="50" y="1092" width="17" height="15" fill="rgb(209,72,33)"/><text x="53.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (4 samples, 0.93%)</title><rect x="56" y="1108" width="11" height="15" fill="rgb(246,136,43)"/><text x="59.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.93%)</title><rect x="56" y="1124" width="11" height="15" fill="rgb(232,116,34)"/><text x="59.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.93%)</title><rect x="56" y="1140" width="11" height="15" fill="rgb(248,72,29)"/><text x="59.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.93%)</title><rect x="56" y="1156" width="11" height="15" fill="rgb(223,72,9)"/><text x="59.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.93%)</title><rect x="56" y="1172" width="11" height="15" fill="rgb(244,175,1)"/><text x="59.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.93%)</title><rect x="56" y="1188" width="11" height="15" fill="rgb(225,145,34)"/><text x="59.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.93%)</title><rect x="56" y="1204" width="11" height="15" fill="rgb(231,163,18)"/><text x="59.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.93%)</title><rect x="56" y="1220" width="11" height="15" fill="rgb(244,27,38)"/><text x="59.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (4 samples, 0.93%)</title><rect x="56" y="1236" width="11" height="15" fill="rgb(245,93,10)"/><text x="59.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.93%)</title><rect x="56" y="1252" width="11" height="15" fill="rgb(238,144,9)"/><text x="59.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.93%)</title><rect x="56" y="1268" width="11" height="15" fill="rgb(217,169,32)"/><text x="59.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.93%)</title><rect x="56" y="1284" width="11" height="15" fill="rgb(217,167,52)"/><text x="59.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.93%)</title><rect x="56" y="1300" width="11" height="15" fill="rgb(215,179,26)"/><text x="59.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.93%)</title><rect x="56" y="1316" width="11" height="15" fill="rgb(231,162,41)"/><text x="59.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.93%)</title><rect x="56" y="1332" width="11" height="15" fill="rgb(230,62,11)"/><text x="59.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.93%)</title><rect x="56" y="1348" width="11" height="15" fill="rgb(219,140,9)"/><text x="59.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (4 samples, 0.93%)</title><rect x="56" y="1364" width="11" height="15" fill="rgb(239,130,27)"/><text x="59.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.93%)</title><rect x="56" y="1380" width="11" height="15" fill="rgb(253,4,3)"/><text x="59.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.93%)</title><rect x="56" y="1396" width="11" height="15" fill="rgb(254,76,23)"/><text x="59.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.93%)</title><rect x="56" y="1412" width="11" height="15" fill="rgb(238,42,38)"/><text x="59.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.93%)</title><rect x="56" y="1428" width="11" height="15" fill="rgb(206,181,43)"/><text x="59.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.93%)</title><rect x="56" y="1444" width="11" height="15" fill="rgb(246,59,27)"/><text x="59.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.23%)</title><rect x="64" y="1460" width="3" height="15" fill="rgb(244,56,32)"/><text x="67.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="64" y="1476" width="3" height="15" fill="rgb(235,107,23)"/><text x="67.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="64" y="1492" width="3" height="15" fill="rgb(224,41,34)"/><text x="67.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="64" y="1508" width="3" height="15" fill="rgb(209,196,15)"/><text x="67.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="64" y="1524" width="3" height="15" fill="rgb(222,112,9)"/><text x="67.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="64" y="1540" width="3" height="15" fill="rgb(222,43,19)"/><text x="67.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.23%)</title><rect x="64" y="1556" width="3" height="15" fill="rgb(231,211,43)"/><text x="67.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.23%)</title><rect x="64" y="1572" width="3" height="15" fill="rgb(250,189,31)"/><text x="67.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.23%)</title><rect x="64" y="1588" width="3" height="15" fill="rgb(227,45,54)"/><text x="67.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.23%)</title><rect x="64" y="1604" width="3" height="15" fill="rgb(212,161,32)"/><text x="67.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.23%)</title><rect x="64" y="1620" width="3" height="15" fill="rgb(222,121,6)"/><text x="67.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.23%)</title><rect x="64" y="1636" width="3" height="15" fill="rgb(244,68,48)"/><text x="67.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.23%)</title><rect x="64" y="1652" width="3" height="15" fill="rgb(238,207,23)"/><text x="67.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.23%)</title><rect x="64" y="1668" width="3" height="15" fill="rgb(244,147,14)"/><text x="67.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.23%)</title><rect x="64" y="1684" width="3" height="15" fill="rgb(250,185,32)"/><text x="67.00" y="1694.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.23%)</title><rect x="64" y="1700" width="3" height="15" fill="rgb(213,5,42)"/><text x="67.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.23%)</title><rect x="64" y="1716" width="3" height="15" fill="rgb(249,20,0)"/><text x="67.00" y="1726.50"></text></g><g><title>visit_For (jinja2/compiler.py:1034) (1 samples, 0.23%)</title><rect x="64" y="1732" width="3" height="15" fill="rgb(236,74,47)"/><text x="67.00" y="1742.50"></text></g><g><title>find_undeclared (jinja2/compiler.py:115) (1 samples, 0.23%)</title><rect x="64" y="1748" width="3" height="15" fill="rgb(234,227,53)"/><text x="67.00" y="1758.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.23%)</title><rect x="64" y="1764" width="3" height="15" fill="rgb(207,126,5)"/><text x="67.00" y="1774.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.23%)</title><rect x="64" y="1780" width="3" height="15" fill="rgb(245,130,7)"/><text x="67.00" y="1790.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.23%)</title><rect x="64" y="1796" width="3" height="15" fill="rgb(214,98,16)"/><text x="67.00" y="1806.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.23%)</title><rect x="64" y="1812" width="3" height="15" fill="rgb(210,80,15)"/><text x="67.00" y="1822.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.23%)</title><rect x="64" y="1828" width="3" height="15" fill="rgb(213,199,30)"/><text x="67.00" y="1838.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.23%)</title><rect x="64" y="1844" width="3" height="15" fill="rgb(238,172,53)"/><text x="67.00" y="1854.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.23%)</title><rect x="64" y="1860" width="3" height="15" fill="rgb(213,227,32)"/><text x="67.00" y="1870.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.23%)</title><rect x="64" y="1876" width="3" height="15" fill="rgb(217,209,20)"/><text x="67.00" y="1886.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.23%)</title><rect x="64" y="1892" width="3" height="15" fill="rgb(223,8,52)"/><text x="67.00" y="1902.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.23%)</title><rect x="64" y="1908" width="3" height="15" fill="rgb(211,78,39)"/><text x="67.00" y="1918.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.23%)</title><rect x="64" y="1924" width="3" height="15" fill="rgb(224,147,52)"/><text x="67.00" y="1934.50"></text></g><g><title>visit_Name (jinja2/compiler.py:226) (1 samples, 0.23%)</title><rect x="64" y="1940" width="3" height="15" fill="rgb(244,12,23)"/><text x="67.00" y="1950.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.23%)</title><rect x="67" y="100" width="3" height="15" fill="rgb(237,42,26)"/><text x="70.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:88) (1 samples, 0.23%)</title><rect x="67" y="116" width="3" height="15" fill="rgb(247,38,26)"/><text x="70.00" y="126.50"></text></g><g><title>_modify_dimension (mlprodict/onnxrt/validate/validate_problems.py:89) (1 samples, 0.23%)</title><rect x="67" y="132" width="3" height="15" fill="rgb(235,132,30)"/><text x="70.00" y="142.50"></text></g><g><title>var (&lt;__array_function__ internals&gt;:6) (1 samples, 0.23%)</title><rect x="67" y="148" width="3" height="15" fill="rgb(253,32,17)"/><text x="70.00" y="158.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.23%)</title><rect x="67" y="164" width="3" height="15" fill="rgb(212,26,43)"/><text x="70.00" y="174.50"></text></g><g><title>var (numpy/core/fromnumeric.py:3506) (1 samples, 0.23%)</title><rect x="67" y="180" width="3" height="15" fill="rgb(225,151,45)"/><text x="70.00" y="190.50"></text></g><g><title>_var (numpy/core/_methods.py:209) (1 samples, 0.23%)</title><rect x="67" y="196" width="3" height="15" fill="rgb(221,138,19)"/><text x="70.00" y="206.50"></text></g><g><title>double_true_divide (scalarmath.c.src:825) (1 samples, 0.23%)</title><rect x="67" y="212" width="3" height="15" fill="rgb(251,104,24)"/><text x="70.00" y="222.50"></text></g><g><title>binop_should_defer (binop_override.h:123) (1 samples, 0.23%)</title><rect x="67" y="228" width="3" height="15" fill="rgb(232,198,12)"/><text x="70.00" y="238.50"></text></g><g><title>is_anyscalar_exact (scalartypes.c.src:4574) (1 samples, 0.23%)</title><rect x="67" y="244" width="3" height="15" fill="rgb(244,0,10)"/><text x="70.00" y="254.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4560) (1 samples, 0.23%)</title><rect x="67" y="260" width="3" height="15" fill="rgb(246,53,16)"/><text x="70.00" y="270.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py:221) (1 samples, 0.23%)</title><rect x="70" y="164" width="2" height="15" fill="rgb(231,160,16)"/><text x="73.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:104) (1 samples, 0.23%)</title><rect x="70" y="180" width="2" height="15" fill="rgb(226,22,34)"/><text x="73.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.23%)</title><rect x="70" y="196" width="2" height="15" fill="rgb(247,18,10)"/><text x="73.00" y="206.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.23%)</title><rect x="70" y="212" width="2" height="15" fill="rgb(252,227,17)"/><text x="73.00" y="222.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.23%)</title><rect x="70" y="228" width="2" height="15" fill="rgb(205,109,28)"/><text x="73.00" y="238.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.23%)</title><rect x="70" y="244" width="2" height="15" fill="rgb(239,7,7)"/><text x="73.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.23%)</title><rect x="70" y="260" width="2" height="15" fill="rgb(227,46,54)"/><text x="73.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:40) (3 samples, 0.69%)</title><rect x="67" y="52" width="8" height="15" fill="rgb(230,66,34)"/><text x="70.00" y="62.50"></text></g><g><title>start (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:11) (3 samples, 0.69%)</title><rect x="67" y="68" width="8" height="15" fill="rgb(217,67,27)"/><text x="70.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_b_reg.py:39) (3 samples, 0.69%)</title><rect x="67" y="84" width="8" height="15" fill="rgb(241,86,7)"/><text x="70.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (2 samples, 0.46%)</title><rect x="70" y="100" width="5" height="15" fill="rgb(251,9,36)"/><text x="73.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py:627) (2 samples, 0.46%)</title><rect x="70" y="116" width="5" height="15" fill="rgb(214,83,19)"/><text x="73.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py:370) (2 samples, 0.46%)</title><rect x="70" y="132" width="5" height="15" fill="rgb(225,210,12)"/><text x="73.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py:521) (2 samples, 0.46%)</title><rect x="70" y="148" width="5" height="15" fill="rgb(226,175,13)"/><text x="73.00" y="158.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py:254) (1 samples, 0.23%)</title><rect x="72" y="164" width="3" height="15" fill="rgb(239,114,33)"/><text x="75.00" y="174.50"></text></g><g><title>_compute_loss_grad (sklearn/neural_network/_multilayer_perceptron.py:129) (1 samples, 0.23%)</title><rect x="72" y="180" width="3" height="15" fill="rgb(234,210,26)"/><text x="75.00" y="190.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:6) (1 samples, 0.23%)</title><rect x="72" y="196" width="3" height="15" fill="rgb(214,213,0)"/><text x="75.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.23%)</title><rect x="72" y="212" width="3" height="15" fill="rgb(243,39,7)"/><text x="75.00" y="222.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3257) (1 samples, 0.23%)</title><rect x="72" y="228" width="3" height="15" fill="rgb(205,195,42)"/><text x="75.00" y="238.50"></text></g><g><title>_mean (numpy/core/_methods.py:151) (1 samples, 0.23%)</title><rect x="72" y="244" width="3" height="15" fill="rgb(216,99,11)"/><text x="75.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.23%)</title><rect x="72" y="260" width="3" height="15" fill="rgb(242,83,10)"/><text x="75.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.23%)</title><rect x="72" y="276" width="3" height="15" fill="rgb(251,209,13)"/><text x="75.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.23%)</title><rect x="72" y="292" width="3" height="15" fill="rgb(224,108,41)"/><text x="75.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.23%)</title><rect x="72" y="308" width="3" height="15" fill="rgb(253,215,26)"/><text x="75.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.23%)</title><rect x="72" y="324" width="3" height="15" fill="rgb(207,76,44)"/><text x="75.00" y="334.50"></text></g><g><title>0x7f80f986e9a8 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="72" y="340" width="3" height="15" fill="rgb(220,131,53)"/><text x="75.00" y="350.50"></text></g><g><title>profile (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:30) (1 samples, 0.23%)</title><rect x="75" y="100" width="3" height="15" fill="rgb(207,160,8)"/><text x="78.00" y="110.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.23%)</title><rect x="81" y="116" width="2" height="15" fill="rgb(229,60,46)"/><text x="84.00" y="126.50"></text></g><g><title>npy_free_cache_dim (alloc.c:175) (1 samples, 0.23%)</title><rect x="81" y="132" width="2" height="15" fill="rgb(230,190,40)"/><text x="84.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.23%)</title><rect x="81" y="148" width="2" height="15" fill="rgb(223,97,12)"/><text x="84.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.23%)</title><rect x="86" y="164" width="3" height="15" fill="rgb(235,160,39)"/><text x="89.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.46%)</title><rect x="89" y="180" width="5" height="15" fill="rgb(237,118,50)"/><text x="92.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (15 samples, 3.47%)</title><rect x="94" y="180" width="41" height="15" fill="rgb(241,89,28)"/><text x="97.00" y="190.50">&lt;li..</text></g><g><title>unicode_endswith (python3.7) (5 samples, 1.16%)</title><rect x="121" y="196" width="14" height="15" fill="rgb(206,25,38)"/><text x="124.00" y="206.50"></text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py:1332) (21 samples, 4.86%)</title><rect x="86" y="148" width="57" height="15" fill="rgb(254,201,33)"/><text x="89.00" y="158.50">predic..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (20 samples, 4.63%)</title><rect x="89" y="164" width="54" height="15" fill="rgb(218,69,43)"/><text x="92.00" y="174.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (3 samples, 0.69%)</title><rect x="135" y="180" width="8" height="15" fill="rgb(244,89,40)"/><text x="138.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.46%)</title><rect x="138" y="196" width="5" height="15" fill="rgb(243,115,48)"/><text x="141.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.23%)</title><rect x="152" y="180" width="2" height="15" fill="rgb(222,199,29)"/><text x="155.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (2 samples, 0.46%)</title><rect x="154" y="180" width="6" height="15" fill="rgb(235,94,45)"/><text x="157.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.23%)</title><rect x="160" y="180" width="2" height="15" fill="rgb(229,111,53)"/><text x="163.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:478) (2 samples, 0.46%)</title><rect x="173" y="196" width="6" height="15" fill="rgb(225,104,34)"/><text x="176.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.23%)</title><rect x="179" y="196" width="3" height="15" fill="rgb(228,76,39)"/><text x="182.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.23%)</title><rect x="182" y="196" width="2" height="15" fill="rgb(211,106,38)"/><text x="185.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (9 samples, 2.08%)</title><rect x="162" y="180" width="25" height="15" fill="rgb(220,22,42)"/><text x="165.00" y="190.50">c..</text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.23%)</title><rect x="184" y="196" width="3" height="15" fill="rgb(210,68,3)"/><text x="187.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (6 samples, 1.39%)</title><rect x="187" y="212" width="16" height="15" fill="rgb(216,188,14)"/><text x="190.00" y="222.50"></text></g><g><title>0x7f80f9884e50 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="201" y="228" width="2" height="15" fill="rgb(238,139,19)"/><text x="204.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.23%)</title><rect x="203" y="212" width="3" height="15" fill="rgb(227,190,21)"/><text x="206.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (8 samples, 1.85%)</title><rect x="187" y="180" width="22" height="15" fill="rgb(220,4,7)"/><text x="190.00" y="190.50">c..</text></g><g><title>simplefilter (warnings.py:179) (8 samples, 1.85%)</title><rect x="187" y="196" width="22" height="15" fill="rgb(254,152,7)"/><text x="190.00" y="206.50">s..</text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.23%)</title><rect x="206" y="212" width="3" height="15" fill="rgb(233,17,44)"/><text x="209.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.23%)</title><rect x="209" y="180" width="3" height="15" fill="rgb(242,158,1)"/><text x="212.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.23%)</title><rect x="209" y="196" width="3" height="15" fill="rgb(232,215,18)"/><text x="212.00" y="206.50"></text></g><g><title>0x7f80f988f120 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="217" y="196" width="3" height="15" fill="rgb(224,24,29)"/><text x="220.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (5 samples, 1.16%)</title><rect x="212" y="180" width="13" height="15" fill="rgb(233,81,51)"/><text x="215.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:496) (2 samples, 0.46%)</title><rect x="220" y="196" width="5" height="15" fill="rgb(247,76,46)"/><text x="223.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.23%)</title><rect x="225" y="180" width="3" height="15" fill="rgb(215,8,14)"/><text x="228.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.23%)</title><rect x="225" y="196" width="3" height="15" fill="rgb(252,101,53)"/><text x="228.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (3 samples, 0.69%)</title><rect x="231" y="212" width="8" height="15" fill="rgb(254,183,0)"/><text x="234.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (5 samples, 1.16%)</title><rect x="228" y="180" width="14" height="15" fill="rgb(242,137,36)"/><text x="231.00" y="190.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (4 samples, 0.93%)</title><rect x="231" y="196" width="11" height="15" fill="rgb(221,27,3)"/><text x="234.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (1 samples, 0.23%)</title><rect x="239" y="212" width="3" height="15" fill="rgb(246,29,54)"/><text x="242.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.23%)</title><rect x="255" y="212" width="3" height="15" fill="rgb(237,26,37)"/><text x="258.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (7 samples, 1.62%)</title><rect x="242" y="180" width="19" height="15" fill="rgb(214,16,4)"/><text x="245.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (5 samples, 1.16%)</title><rect x="247" y="196" width="14" height="15" fill="rgb(206,149,13)"/><text x="250.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.23%)</title><rect x="258" y="212" width="3" height="15" fill="rgb(223,222,33)"/><text x="261.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (2 samples, 0.46%)</title><rect x="261" y="180" width="5" height="15" fill="rgb(214,206,54)"/><text x="264.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.46%)</title><rect x="266" y="196" width="6" height="15" fill="rgb(219,7,7)"/><text x="269.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 0.93%)</title><rect x="272" y="196" width="11" height="15" fill="rgb(218,82,53)"/><text x="275.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (4 samples, 0.93%)</title><rect x="272" y="212" width="11" height="15" fill="rgb(239,170,14)"/><text x="275.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.46%)</title><rect x="277" y="228" width="6" height="15" fill="rgb(219,187,26)"/><text x="280.00" y="238.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:667) (51 samples, 11.81%)</title><rect x="146" y="164" width="139" height="15" fill="rgb(224,53,39)"/><text x="149.00" y="174.50">_predict (sklearn..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (7 samples, 1.62%)</title><rect x="266" y="180" width="19" height="15" fill="rgb(250,197,21)"/><text x="269.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.23%)</title><rect x="283" y="196" width="2" height="15" fill="rgb(245,145,25)"/><text x="286.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.23%)</title><rect x="283" y="212" width="2" height="15" fill="rgb(232,121,1)"/><text x="286.00" y="222.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:671) (1 samples, 0.23%)</title><rect x="285" y="164" width="3" height="15" fill="rgb(211,142,10)"/><text x="288.00" y="174.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:673) (1 samples, 0.23%)</title><rect x="288" y="164" width="3" height="15" fill="rgb(244,186,49)"/><text x="291.00" y="174.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:675) (1 samples, 0.23%)</title><rect x="291" y="164" width="3" height="15" fill="rgb(205,200,53)"/><text x="294.00" y="174.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1178) (1 samples, 0.23%)</title><rect x="291" y="180" width="3" height="15" fill="rgb(239,46,43)"/><text x="294.00" y="190.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:681) (5 samples, 1.16%)</title><rect x="294" y="164" width="13" height="15" fill="rgb(244,72,43)"/><text x="297.00" y="174.50"></text></g><g><title>array_empty (multiarraymodule.c:1814) (1 samples, 0.23%)</title><rect x="307" y="180" width="3" height="15" fill="rgb(233,198,17)"/><text x="310.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:96) (1 samples, 0.23%)</title><rect x="307" y="196" width="3" height="15" fill="rgb(238,171,16)"/><text x="310.00" y="206.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:683) (2 samples, 0.46%)</title><rect x="307" y="164" width="6" height="15" fill="rgb(250,43,15)"/><text x="310.00" y="174.50"></text></g><g><title>array_empty (multiarraymodule.c:1837) (1 samples, 0.23%)</title><rect x="310" y="180" width="3" height="15" fill="rgb(226,162,0)"/><text x="313.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.23%)</title><rect x="310" y="196" width="3" height="15" fill="rgb(227,159,50)"/><text x="313.00" y="206.50"></text></g><g><title>PyArray_Empty (ctors.c:3111) (1 samples, 0.23%)</title><rect x="310" y="212" width="3" height="15" fill="rgb(227,100,11)"/><text x="313.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.23%)</title><rect x="310" y="228" width="3" height="15" fill="rgb(224,15,28)"/><text x="313.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.23%)</title><rect x="310" y="244" width="3" height="15" fill="rgb(244,134,2)"/><text x="313.00" y="254.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:102) (2 samples, 0.46%)</title><rect x="313" y="180" width="5" height="15" fill="rgb(225,103,18)"/><text x="316.00" y="190.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:103) (1 samples, 0.23%)</title><rect x="318" y="180" width="3" height="15" fill="rgb(238,157,23)"/><text x="321.00" y="190.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.93%)</title><rect x="329" y="212" width="11" height="15" fill="rgb(208,56,39)"/><text x="332.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2645) (1 samples, 0.23%)</title><rect x="340" y="244" width="3" height="15" fill="rgb(221,229,17)"/><text x="343.00" y="254.50"></text></g><g><title>_validate_num_dims (ufunc_object.c:2080) (1 samples, 0.23%)</title><rect x="340" y="260" width="3" height="15" fill="rgb(215,94,11)"/><text x="343.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2838) (2 samples, 0.46%)</title><rect x="343" y="244" width="5" height="15" fill="rgb(217,116,11)"/><text x="346.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1948) (2 samples, 0.46%)</title><rect x="343" y="260" width="5" height="15" fill="rgb(251,46,23)"/><text x="346.00" y="270.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.23%)</title><rect x="348" y="308" width="3" height="15" fill="rgb(241,108,25)"/><text x="351.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (2 samples, 0.46%)</title><rect x="348" y="260" width="6" height="15" fill="rgb(245,21,21)"/><text x="351.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (2 samples, 0.46%)</title><rect x="348" y="276" width="6" height="15" fill="rgb(207,79,9)"/><text x="351.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1106) (2 samples, 0.46%)</title><rect x="348" y="292" width="6" height="15" fill="rgb(230,42,23)"/><text x="351.00" y="302.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:363) (1 samples, 0.23%)</title><rect x="351" y="308" width="3" height="15" fill="rgb(245,147,48)"/><text x="354.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.23%)</title><rect x="354" y="260" width="2" height="15" fill="rgb(251,33,12)"/><text x="357.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1547) (1 samples, 0.23%)</title><rect x="354" y="276" width="2" height="15" fill="rgb(252,189,39)"/><text x="357.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.23%)</title><rect x="356" y="260" width="3" height="15" fill="rgb(231,180,21)"/><text x="359.00" y="270.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2288) (1 samples, 0.23%)</title><rect x="356" y="276" width="3" height="15" fill="rgb(252,53,45)"/><text x="359.00" y="286.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1285) (1 samples, 0.23%)</title><rect x="359" y="276" width="3" height="15" fill="rgb(242,130,45)"/><text x="362.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (2 samples, 0.46%)</title><rect x="359" y="260" width="6" height="15" fill="rgb(229,46,3)"/><text x="362.00" y="270.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.23%)</title><rect x="362" y="276" width="3" height="15" fill="rgb(207,58,26)"/><text x="365.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1495) (1 samples, 0.23%)</title><rect x="362" y="292" width="3" height="15" fill="rgb(214,121,50)"/><text x="365.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.23%)</title><rect x="365" y="276" width="2" height="15" fill="rgb(229,114,42)"/><text x="368.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.23%)</title><rect x="365" y="292" width="2" height="15" fill="rgb(228,3,45)"/><text x="368.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.23%)</title><rect x="365" y="308" width="2" height="15" fill="rgb(221,51,31)"/><text x="368.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1024) (1 samples, 0.23%)</title><rect x="365" y="324" width="2" height="15" fill="rgb(207,58,32)"/><text x="368.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2918) (1 samples, 0.23%)</title><rect x="367" y="276" width="3" height="15" fill="rgb(206,146,26)"/><text x="370.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.23%)</title><rect x="370" y="308" width="3" height="15" fill="rgb(243,207,27)"/><text x="373.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.23%)</title><rect x="373" y="308" width="3" height="15" fill="rgb(248,73,21)"/><text x="376.00" y="318.50"></text></g><g><title>0x7f80f8a90b20 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="373" y="324" width="3" height="15" fill="rgb(228,103,43)"/><text x="376.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:94) (1 samples, 0.23%)</title><rect x="376" y="308" width="2" height="15" fill="rgb(226,28,53)"/><text x="379.00" y="318.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:39) (1 samples, 0.23%)</title><rect x="376" y="324" width="2" height="15" fill="rgb(220,85,13)"/><text x="379.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (4 samples, 0.93%)</title><rect x="370" y="276" width="11" height="15" fill="rgb(242,195,44)"/><text x="373.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (4 samples, 0.93%)</title><rect x="370" y="292" width="11" height="15" fill="rgb(229,223,35)"/><text x="373.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.23%)</title><rect x="378" y="308" width="3" height="15" fill="rgb(243,83,2)"/><text x="381.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3962) (1 samples, 0.23%)</title><rect x="378" y="324" width="3" height="15" fill="rgb(228,65,30)"/><text x="381.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (13 samples, 3.01%)</title><rect x="348" y="244" width="36" height="15" fill="rgb(226,221,39)"/><text x="351.00" y="254.50">PyU..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (7 samples, 1.62%)</title><rect x="365" y="260" width="19" height="15" fill="rgb(244,219,46)"/><text x="368.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2972) (1 samples, 0.23%)</title><rect x="381" y="276" width="3" height="15" fill="rgb(206,155,20)"/><text x="384.00" y="286.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.23%)</title><rect x="381" y="292" width="3" height="15" fill="rgb(245,186,47)"/><text x="384.00" y="302.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.23%)</title><rect x="381" y="308" width="3" height="15" fill="rgb(253,168,4)"/><text x="384.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.23%)</title><rect x="384" y="244" width="2" height="15" fill="rgb(243,34,47)"/><text x="387.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:42) (1 samples, 0.23%)</title><rect x="384" y="260" width="2" height="15" fill="rgb(229,19,4)"/><text x="387.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.23%)</title><rect x="386" y="244" width="3" height="15" fill="rgb(217,224,18)"/><text x="389.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:443) (1 samples, 0.23%)</title><rect x="386" y="260" width="3" height="15" fill="rgb(215,20,16)"/><text x="389.00" y="270.50"></text></g><g><title>DOUBLE_dot (arraytypes.c.src:3439) (1 samples, 0.23%)</title><rect x="386" y="276" width="3" height="15" fill="rgb(217,229,19)"/><text x="389.00" y="286.50"></text></g><g><title>ddot_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="386" y="292" width="3" height="15" fill="rgb(247,109,11)"/><text x="389.00" y="302.50"></text></g><g><title>dot_compute (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="386" y="308" width="3" height="15" fill="rgb(221,7,51)"/><text x="389.00" y="318.50"></text></g><g><title>ddot_kernel_8 (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="386" y="324" width="3" height="15" fill="rgb(248,122,34)"/><text x="389.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3051) (1 samples, 0.23%)</title><rect x="389" y="244" width="3" height="15" fill="rgb(228,71,39)"/><text x="392.00" y="254.50"></text></g><g><title>0x7f80f986e904 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="389" y="260" width="3" height="15" fill="rgb(227,8,35)"/><text x="392.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (25 samples, 5.79%)</title><rect x="326" y="196" width="69" height="15" fill="rgb(237,146,20)"/><text x="329.00" y="206.50">safe_sp..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (20 samples, 4.63%)</title><rect x="340" y="212" width="55" height="15" fill="rgb(245,199,12)"/><text x="343.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (20 samples, 4.63%)</title><rect x="340" y="228" width="55" height="15" fill="rgb(247,109,31)"/><text x="343.00" y="238.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (1 samples, 0.23%)</title><rect x="392" y="244" width="3" height="15" fill="rgb(207,47,52)"/><text x="395.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (1 samples, 0.23%)</title><rect x="392" y="260" width="3" height="15" fill="rgb(240,228,52)"/><text x="395.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.23%)</title><rect x="392" y="276" width="3" height="15" fill="rgb(226,84,49)"/><text x="395.00" y="286.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.23%)</title><rect x="392" y="292" width="3" height="15" fill="rgb(241,204,12)"/><text x="395.00" y="302.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:104) (33 samples, 7.64%)</title><rect x="321" y="180" width="90" height="15" fill="rgb(205,128,34)"/><text x="324.00" y="190.50">_forward_p..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (6 samples, 1.39%)</title><rect x="395" y="196" width="16" height="15" fill="rgb(206,57,17)"/><text x="398.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (5 samples, 1.16%)</title><rect x="397" y="212" width="14" height="15" fill="rgb(249,143,24)"/><text x="400.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.23%)</title><rect x="419" y="196" width="3" height="15" fill="rgb(211,22,17)"/><text x="422.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.23%)</title><rect x="419" y="212" width="3" height="15" fill="rgb(206,48,47)"/><text x="422.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.23%)</title><rect x="419" y="228" width="3" height="15" fill="rgb(244,91,11)"/><text x="422.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.23%)</title><rect x="419" y="244" width="3" height="15" fill="rgb(239,58,0)"/><text x="422.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.23%)</title><rect x="422" y="212" width="3" height="15" fill="rgb(248,36,36)"/><text x="425.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1054) (1 samples, 0.23%)</title><rect x="422" y="228" width="3" height="15" fill="rgb(229,223,27)"/><text x="425.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.23%)</title><rect x="425" y="212" width="2" height="15" fill="rgb(242,182,43)"/><text x="428.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.23%)</title><rect x="425" y="228" width="2" height="15" fill="rgb(239,218,50)"/><text x="428.00" y="238.50"></text></g><g><title>0x7f80f988f12f (libc-2.29.so) (1 samples, 0.23%)</title><rect x="425" y="244" width="2" height="15" fill="rgb(213,129,7)"/><text x="428.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1500) (1 samples, 0.23%)</title><rect x="427" y="244" width="3" height="15" fill="rgb(205,14,6)"/><text x="430.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.23%)</title><rect x="430" y="244" width="3" height="15" fill="rgb(237,148,26)"/><text x="433.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.23%)</title><rect x="430" y="260" width="3" height="15" fill="rgb(250,105,32)"/><text x="433.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1466) (1 samples, 0.23%)</title><rect x="430" y="276" width="3" height="15" fill="rgb(220,9,22)"/><text x="433.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.23%)</title><rect x="433" y="260" width="3" height="15" fill="rgb(235,31,35)"/><text x="436.00" y="270.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.23%)</title><rect x="433" y="276" width="3" height="15" fill="rgb(234,136,31)"/><text x="436.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="433" y="292" width="3" height="15" fill="rgb(249,133,20)"/><text x="436.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.46%)</title><rect x="433" y="244" width="5" height="15" fill="rgb(237,137,54)"/><text x="436.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.23%)</title><rect x="436" y="260" width="2" height="15" fill="rgb(246,117,5)"/><text x="439.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2037) (1 samples, 0.23%)</title><rect x="436" y="276" width="2" height="15" fill="rgb(244,40,49)"/><text x="439.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.16%)</title><rect x="427" y="212" width="14" height="15" fill="rgb(211,188,10)"/><text x="430.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.16%)</title><rect x="427" y="228" width="14" height="15" fill="rgb(217,74,16)"/><text x="430.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.23%)</title><rect x="438" y="244" width="3" height="15" fill="rgb(243,140,17)"/><text x="441.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.23%)</title><rect x="438" y="260" width="3" height="15" fill="rgb(240,69,49)"/><text x="441.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.23%)</title><rect x="441" y="212" width="3" height="15" fill="rgb(244,8,42)"/><text x="444.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 2.08%)</title><rect x="422" y="196" width="25" height="15" fill="rgb(212,166,10)"/><text x="425.00" y="206.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3280) (1 samples, 0.23%)</title><rect x="444" y="212" width="3" height="15" fill="rgb(235,33,1)"/><text x="447.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.23%)</title><rect x="447" y="196" width="2" height="15" fill="rgb(205,123,41)"/><text x="450.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.23%)</title><rect x="447" y="212" width="2" height="15" fill="rgb(217,35,51)"/><text x="450.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.23%)</title><rect x="449" y="196" width="3" height="15" fill="rgb(233,63,50)"/><text x="452.00" y="206.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:446) (1 samples, 0.23%)</title><rect x="449" y="212" width="3" height="15" fill="rgb(235,50,12)"/><text x="452.00" y="222.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:105) (17 samples, 3.94%)</title><rect x="411" y="180" width="46" height="15" fill="rgb(249,69,5)"/><text x="414.00" y="190.50">_for..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (2 samples, 0.46%)</title><rect x="452" y="196" width="5" height="15" fill="rgb(227,87,42)"/><text x="455.00" y="206.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:108) (1 samples, 0.23%)</title><rect x="457" y="180" width="3" height="15" fill="rgb(205,15,8)"/><text x="460.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.23%)</title><rect x="471" y="212" width="3" height="15" fill="rgb(223,9,7)"/><text x="474.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (1 samples, 0.23%)</title><rect x="471" y="228" width="3" height="15" fill="rgb(243,226,8)"/><text x="474.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (1 samples, 0.23%)</title><rect x="471" y="244" width="3" height="15" fill="rgb(243,170,51)"/><text x="474.00" y="254.50"></text></g><g><title>array_clip (methods.c:2381) (1 samples, 0.23%)</title><rect x="471" y="260" width="3" height="15" fill="rgb(248,136,51)"/><text x="474.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.23%)</title><rect x="471" y="276" width="3" height="15" fill="rgb(242,62,11)"/><text x="474.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.23%)</title><rect x="471" y="292" width="3" height="15" fill="rgb(239,198,34)"/><text x="474.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (1 samples, 0.23%)</title><rect x="471" y="308" width="3" height="15" fill="rgb(245,113,36)"/><text x="474.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.23%)</title><rect x="471" y="324" width="3" height="15" fill="rgb(225,177,35)"/><text x="474.00" y="334.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.23%)</title><rect x="474" y="212" width="3" height="15" fill="rgb(234,101,29)"/><text x="477.00" y="222.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.23%)</title><rect x="477" y="292" width="2" height="15" fill="rgb(229,187,0)"/><text x="480.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.23%)</title><rect x="479" y="292" width="3" height="15" fill="rgb(227,74,51)"/><text x="482.00" y="302.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (3 samples, 0.69%)</title><rect x="477" y="228" width="8" height="15" fill="rgb(230,229,50)"/><text x="480.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (3 samples, 0.69%)</title><rect x="477" y="244" width="8" height="15" fill="rgb(224,16,47)"/><text x="480.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (3 samples, 0.69%)</title><rect x="477" y="260" width="8" height="15" fill="rgb(251,70,31)"/><text x="480.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.69%)</title><rect x="477" y="276" width="8" height="15" fill="rgb(232,172,6)"/><text x="480.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:82) (1 samples, 0.23%)</title><rect x="482" y="292" width="3" height="15" fill="rgb(241,81,6)"/><text x="485.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.23%)</title><rect x="490" y="308" width="3" height="15" fill="rgb(231,138,18)"/><text x="493.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:105) (1 samples, 0.23%)</title><rect x="493" y="308" width="3" height="15" fill="rgb(220,30,3)"/><text x="496.00" y="318.50"></text></g><g><title>0x7f80f994d161 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="504" y="340" width="3" height="15" fill="rgb(252,204,39)"/><text x="507.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (4 samples, 0.93%)</title><rect x="498" y="324" width="11" height="15" fill="rgb(250,119,20)"/><text x="501.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.23%)</title><rect x="507" y="340" width="2" height="15" fill="rgb(219,222,6)"/><text x="510.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.23%)</title><rect x="509" y="356" width="3" height="15" fill="rgb(238,17,30)"/><text x="512.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:69) (1 samples, 0.23%)</title><rect x="509" y="372" width="3" height="15" fill="rgb(219,219,30)"/><text x="512.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.23%)</title><rect x="518" y="388" width="2" height="15" fill="rgb(246,99,10)"/><text x="521.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1579) (1 samples, 0.23%)</title><rect x="520" y="404" width="3" height="15" fill="rgb(241,158,49)"/><text x="523.00" y="414.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (1 samples, 0.23%)</title><rect x="523" y="468" width="3" height="15" fill="rgb(206,178,39)"/><text x="526.00" y="478.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.46%)</title><rect x="523" y="436" width="5" height="15" fill="rgb(236,142,33)"/><text x="526.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (2 samples, 0.46%)</title><rect x="523" y="452" width="5" height="15" fill="rgb(212,149,15)"/><text x="526.00" y="462.50"></text></g><g><title>_array_find_python_scalar_type (common.c:53) (1 samples, 0.23%)</title><rect x="526" y="468" width="2" height="15" fill="rgb(245,220,0)"/><text x="529.00" y="478.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.23%)</title><rect x="526" y="484" width="2" height="15" fill="rgb(224,179,33)"/><text x="529.00" y="494.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (3 samples, 0.69%)</title><rect x="523" y="404" width="8" height="15" fill="rgb(234,128,50)"/><text x="526.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (3 samples, 0.69%)</title><rect x="523" y="420" width="8" height="15" fill="rgb(219,51,13)"/><text x="526.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.23%)</title><rect x="528" y="436" width="3" height="15" fill="rgb(206,176,49)"/><text x="531.00" y="446.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.23%)</title><rect x="528" y="452" width="3" height="15" fill="rgb(246,21,23)"/><text x="531.00" y="462.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (9 samples, 2.08%)</title><rect x="509" y="324" width="25" height="15" fill="rgb(222,166,39)"/><text x="512.00" y="334.50">_..</text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (9 samples, 2.08%)</title><rect x="509" y="340" width="25" height="15" fill="rgb(219,33,46)"/><text x="512.00" y="350.50">n..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 1.85%)</title><rect x="512" y="356" width="22" height="15" fill="rgb(219,171,21)"/><text x="515.00" y="366.50">a..</text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (8 samples, 1.85%)</title><rect x="512" y="372" width="22" height="15" fill="rgb(238,107,8)"/><text x="515.00" y="382.50">n..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (5 samples, 1.16%)</title><rect x="520" y="388" width="14" height="15" fill="rgb(211,74,33)"/><text x="523.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1756) (1 samples, 0.23%)</title><rect x="531" y="404" width="3" height="15" fill="rgb(251,203,17)"/><text x="534.00" y="414.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (2 samples, 0.46%)</title><rect x="534" y="372" width="5" height="15" fill="rgb(213,130,0)"/><text x="537.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.69%)</title><rect x="534" y="356" width="8" height="15" fill="rgb(220,156,51)"/><text x="537.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1108) (1 samples, 0.23%)</title><rect x="539" y="372" width="3" height="15" fill="rgb(211,172,10)"/><text x="542.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.93%)</title><rect x="534" y="340" width="11" height="15" fill="rgb(253,227,7)"/><text x="537.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.23%)</title><rect x="542" y="356" width="3" height="15" fill="rgb(234,175,24)"/><text x="545.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.23%)</title><rect x="542" y="372" width="3" height="15" fill="rgb(220,142,3)"/><text x="545.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.23%)</title><rect x="542" y="388" width="3" height="15" fill="rgb(254,158,4)"/><text x="545.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.23%)</title><rect x="542" y="404" width="3" height="15" fill="rgb(207,191,39)"/><text x="545.00" y="414.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1511) (1 samples, 0.23%)</title><rect x="542" y="420" width="3" height="15" fill="rgb(252,133,34)"/><text x="545.00" y="430.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (19 samples, 4.40%)</title><rect x="496" y="308" width="52" height="15" fill="rgb(232,84,25)"/><text x="499.00" y="318.50">_clip..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (5 samples, 1.16%)</title><rect x="534" y="324" width="14" height="15" fill="rgb(241,166,6)"/><text x="537.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.23%)</title><rect x="545" y="340" width="3" height="15" fill="rgb(245,46,37)"/><text x="548.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.23%)</title><rect x="545" y="356" width="3" height="15" fill="rgb(223,159,4)"/><text x="548.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.23%)</title><rect x="545" y="372" width="3" height="15" fill="rgb(249,112,54)"/><text x="548.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.23%)</title><rect x="545" y="388" width="3" height="15" fill="rgb(252,174,15)"/><text x="548.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (4 samples, 0.93%)</title><rect x="548" y="324" width="11" height="15" fill="rgb(213,3,38)"/><text x="551.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.46%)</title><rect x="553" y="340" width="6" height="15" fill="rgb(206,157,3)"/><text x="556.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.46%)</title><rect x="559" y="324" width="5" height="15" fill="rgb(221,205,21)"/><text x="562.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.23%)</title><rect x="561" y="340" width="3" height="15" fill="rgb(213,78,31)"/><text x="564.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.23%)</title><rect x="561" y="356" width="3" height="15" fill="rgb(241,50,32)"/><text x="564.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.23%)</title><rect x="561" y="372" width="3" height="15" fill="rgb(234,73,20)"/><text x="564.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.23%)</title><rect x="561" y="388" width="3" height="15" fill="rgb(241,171,25)"/><text x="564.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.23%)</title><rect x="561" y="404" width="3" height="15" fill="rgb(225,157,34)"/><text x="564.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.23%)</title><rect x="561" y="420" width="3" height="15" fill="rgb(246,33,42)"/><text x="564.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.23%)</title><rect x="564" y="340" width="3" height="15" fill="rgb(244,99,45)"/><text x="567.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.23%)</title><rect x="564" y="356" width="3" height="15" fill="rgb(220,180,29)"/><text x="567.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.23%)</title><rect x="564" y="372" width="3" height="15" fill="rgb(239,93,1)"/><text x="567.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.23%)</title><rect x="564" y="388" width="3" height="15" fill="rgb(229,213,37)"/><text x="567.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.23%)</title><rect x="564" y="404" width="3" height="15" fill="rgb(251,129,36)"/><text x="567.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.23%)</title><rect x="564" y="420" width="3" height="15" fill="rgb(252,118,24)"/><text x="567.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.23%)</title><rect x="567" y="356" width="2" height="15" fill="rgb(217,167,48)"/><text x="570.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.23%)</title><rect x="567" y="372" width="2" height="15" fill="rgb(218,178,4)"/><text x="570.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.23%)</title><rect x="567" y="388" width="2" height="15" fill="rgb(251,189,21)"/><text x="570.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1618) (1 samples, 0.23%)</title><rect x="567" y="404" width="2" height="15" fill="rgb(209,228,36)"/><text x="570.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:566) (1 samples, 0.23%)</title><rect x="567" y="420" width="2" height="15" fill="rgb(228,20,44)"/><text x="570.00" y="430.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.23%)</title><rect x="567" y="436" width="2" height="15" fill="rgb(232,150,38)"/><text x="570.00" y="446.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.23%)</title><rect x="567" y="452" width="2" height="15" fill="rgb(251,3,18)"/><text x="570.00" y="462.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4553) (1 samples, 0.23%)</title><rect x="567" y="468" width="2" height="15" fill="rgb(231,224,26)"/><text x="570.00" y="478.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.46%)</title><rect x="567" y="340" width="5" height="15" fill="rgb(214,151,22)"/><text x="570.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.23%)</title><rect x="569" y="356" width="3" height="15" fill="rgb(210,6,13)"/><text x="572.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1970) (1 samples, 0.23%)</title><rect x="569" y="372" width="3" height="15" fill="rgb(248,53,11)"/><text x="572.00" y="382.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1795) (1 samples, 0.23%)</title><rect x="569" y="388" width="3" height="15" fill="rgb(240,58,17)"/><text x="572.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (10 samples, 2.31%)</title><rect x="548" y="308" width="27" height="15" fill="rgb(227,131,53)"/><text x="551.00" y="318.50">_..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (4 samples, 0.93%)</title><rect x="564" y="324" width="11" height="15" fill="rgb(210,77,53)"/><text x="567.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.23%)</title><rect x="572" y="340" width="3" height="15" fill="rgb(252,15,54)"/><text x="575.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.23%)</title><rect x="572" y="356" width="3" height="15" fill="rgb(253,166,26)"/><text x="575.00" y="366.50"></text></g><g><title>npy_free_cache_dim (alloc.c:175) (1 samples, 0.23%)</title><rect x="572" y="372" width="3" height="15" fill="rgb(234,37,30)"/><text x="575.00" y="382.50"></text></g><g><title>_npy_free_cache (alloc.c:106) (1 samples, 0.23%)</title><rect x="572" y="388" width="3" height="15" fill="rgb(226,95,10)"/><text x="575.00" y="398.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.23%)</title><rect x="583" y="372" width="3" height="15" fill="rgb(213,163,32)"/><text x="586.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.23%)</title><rect x="583" y="388" width="3" height="15" fill="rgb(253,151,36)"/><text x="586.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:333) (1 samples, 0.23%)</title><rect x="583" y="404" width="3" height="15" fill="rgb(254,25,21)"/><text x="586.00" y="414.50"></text></g><g><title>0x7f80f988edbb (libc-2.29.so) (1 samples, 0.23%)</title><rect x="583" y="420" width="3" height="15" fill="rgb(237,48,46)"/><text x="586.00" y="430.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.23%)</title><rect x="586" y="372" width="3" height="15" fill="rgb(226,103,45)"/><text x="589.00" y="382.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:927) (1 samples, 0.23%)</title><rect x="586" y="388" width="3" height="15" fill="rgb(242,117,27)"/><text x="589.00" y="398.50"></text></g><g><title>_borrowed_reference (ufunc_object.c:1022) (1 samples, 0.23%)</title><rect x="586" y="404" width="3" height="15" fill="rgb(246,91,38)"/><text x="589.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.69%)</title><rect x="583" y="356" width="8" height="15" fill="rgb(216,160,51)"/><text x="586.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1236) (1 samples, 0.23%)</title><rect x="589" y="372" width="2" height="15" fill="rgb(243,92,31)"/><text x="592.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.23%)</title><rect x="591" y="356" width="3" height="15" fill="rgb(243,228,25)"/><text x="594.00" y="366.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.23%)</title><rect x="591" y="372" width="3" height="15" fill="rgb(251,72,34)"/><text x="594.00" y="382.50"></text></g><g><title>0x7f80f988f120 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="591" y="388" width="3" height="15" fill="rgb(242,57,4)"/><text x="594.00" y="398.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.23%)</title><rect x="594" y="372" width="3" height="15" fill="rgb(247,151,38)"/><text x="597.00" y="382.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.23%)</title><rect x="594" y="388" width="3" height="15" fill="rgb(234,8,33)"/><text x="597.00" y="398.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.23%)</title><rect x="594" y="404" width="3" height="15" fill="rgb(208,202,33)"/><text x="597.00" y="414.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:228) (1 samples, 0.23%)</title><rect x="594" y="420" width="3" height="15" fill="rgb(236,53,18)"/><text x="597.00" y="430.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1505) (1 samples, 0.23%)</title><rect x="594" y="436" width="3" height="15" fill="rgb(223,202,10)"/><text x="597.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (2 samples, 0.46%)</title><rect x="594" y="356" width="6" height="15" fill="rgb(228,24,29)"/><text x="597.00" y="366.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (1 samples, 0.23%)</title><rect x="597" y="372" width="3" height="15" fill="rgb(253,116,5)"/><text x="600.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.23%)</title><rect x="597" y="388" width="3" height="15" fill="rgb(210,228,53)"/><text x="600.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.23%)</title><rect x="597" y="404" width="3" height="15" fill="rgb(210,88,46)"/><text x="600.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.23%)</title><rect x="600" y="372" width="2" height="15" fill="rgb(252,159,4)"/><text x="603.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.23%)</title><rect x="600" y="388" width="2" height="15" fill="rgb(217,1,16)"/><text x="603.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.23%)</title><rect x="602" y="404" width="3" height="15" fill="rgb(227,134,54)"/><text x="605.00" y="414.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.23%)</title><rect x="602" y="420" width="3" height="15" fill="rgb(207,9,45)"/><text x="605.00" y="430.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1111) (1 samples, 0.23%)</title><rect x="602" y="436" width="3" height="15" fill="rgb(239,191,33)"/><text x="605.00" y="446.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:109) (54 samples, 12.50%)</title><rect x="460" y="180" width="148" height="15" fill="rgb(248,113,1)"/><text x="463.00" y="190.50">_forward_pass (skl..</text></g><g><title>relu (sklearn/neural_network/_base.py:75) (53 samples, 12.27%)</title><rect x="463" y="196" width="145" height="15" fill="rgb(225,45,1)"/><text x="466.00" y="206.50">relu (sklearn/neur..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (48 samples, 11.11%)</title><rect x="477" y="212" width="131" height="15" fill="rgb(247,123,28)"/><text x="480.00" y="222.50">clip (&lt;__array_f..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (45 samples, 10.42%)</title><rect x="485" y="228" width="123" height="15" fill="rgb(230,50,46)"/><text x="488.00" y="238.50">array_implement..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (45 samples, 10.42%)</title><rect x="485" y="244" width="123" height="15" fill="rgb(216,167,32)"/><text x="488.00" y="254.50">clip (numpy/cor..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (43 samples, 9.95%)</title><rect x="490" y="260" width="118" height="15" fill="rgb(230,12,22)"/><text x="493.00" y="270.50">_wrapfunc (num..</text></g><g><title>array_clip (methods.c:2381) (43 samples, 9.95%)</title><rect x="490" y="276" width="118" height="15" fill="rgb(222,166,10)"/><text x="493.00" y="286.50">array_clip (me..</text></g><g><title>forward_ndarray_method (methods.c:108) (43 samples, 9.95%)</title><rect x="490" y="292" width="118" height="15" fill="rgb(242,11,54)"/><text x="493.00" y="302.50">forward_ndarra..</text></g><g><title>_clip (numpy/core/_methods.py:132) (12 samples, 2.78%)</title><rect x="575" y="308" width="33" height="15" fill="rgb(243,7,52)"/><text x="578.00" y="318.50">_c..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (9 samples, 2.08%)</title><rect x="583" y="324" width="25" height="15" fill="rgb(237,179,38)"/><text x="586.00" y="334.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 2.08%)</title><rect x="583" y="340" width="25" height="15" fill="rgb(242,51,47)"/><text x="586.00" y="350.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.69%)</title><rect x="600" y="356" width="8" height="15" fill="rgb(236,155,11)"/><text x="603.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.46%)</title><rect x="602" y="372" width="6" height="15" fill="rgb(215,215,28)"/><text x="605.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.46%)</title><rect x="602" y="388" width="6" height="15" fill="rgb(206,22,23)"/><text x="605.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.23%)</title><rect x="605" y="404" width="3" height="15" fill="rgb(208,122,37)"/><text x="608.00" y="414.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1485) (1 samples, 0.23%)</title><rect x="605" y="420" width="3" height="15" fill="rgb(251,4,31)"/><text x="608.00" y="430.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:112) (1 samples, 0.23%)</title><rect x="608" y="180" width="2" height="15" fill="rgb(249,215,44)"/><text x="611.00" y="190.50"></text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py:1333) (173 samples, 40.05%)</title><rect x="143" y="148" width="473" height="15" fill="rgb(205,195,47)"/><text x="146.00" y="158.50">predict (sklearn/neural_network/_multilayer_perceptron.py:1333)</text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:685) (111 samples, 25.69%)</title><rect x="313" y="164" width="303" height="15" fill="rgb(254,90,39)"/><text x="316.00" y="174.50">_predict (sklearn/neural_network/_multil..</text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:113) (2 samples, 0.46%)</title><rect x="610" y="180" width="6" height="15" fill="rgb(213,87,25)"/><text x="613.00" y="190.50"></text></g><g><title>identity (sklearn/neural_network/_base.py:13) (1 samples, 0.23%)</title><rect x="613" y="196" width="3" height="15" fill="rgb(225,127,26)"/><text x="616.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:54) (200 samples, 46.30%)</title><rect x="75" y="52" width="546" height="15" fill="rgb(251,196,8)"/><text x="78.00" y="62.50">&lt;module&gt; (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:53) (200 samples, 46.30%)</title><rect x="75" y="68" width="546" height="15" fill="rgb(237,95,7)"/><text x="78.00" y="78.50">profile_skl (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:37) (200 samples, 46.30%)</title><rect x="75" y="84" width="546" height="15" fill="rgb(251,8,43)"/><text x="78.00" y="94.50">setup_profile (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:37)</text></g><g><title>profile (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:31) (199 samples, 46.06%)</title><rect x="78" y="100" width="543" height="15" fill="rgb(250,148,52)"/><text x="81.00" y="110.50">profile (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (197 samples, 45.60%)</title><rect x="83" y="116" width="538" height="15" fill="rgb(254,126,15)"/><text x="86.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (196 samples, 45.37%)</title><rect x="86" y="132" width="535" height="15" fill="rgb(232,56,35)"/><text x="89.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py:1335) (2 samples, 0.46%)</title><rect x="616" y="148" width="5" height="15" fill="rgb(220,20,30)"/><text x="619.00" y="158.50"></text></g><g><title>array_ravel (methods.c:2438) (1 samples, 0.23%)</title><rect x="619" y="164" width="2" height="15" fill="rgb(245,142,35)"/><text x="622.00" y="174.50"></text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:36) (1 samples, 0.23%)</title><rect x="621" y="84" width="3" height="15" fill="rgb(235,8,8)"/><text x="624.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.23%)</title><rect x="621" y="100" width="3" height="15" fill="rgb(227,0,8)"/><text x="624.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (1 samples, 0.23%)</title><rect x="621" y="116" width="3" height="15" fill="rgb(247,118,42)"/><text x="624.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.23%)</title><rect x="621" y="132" width="3" height="15" fill="rgb(213,186,38)"/><text x="624.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.23%)</title><rect x="621" y="148" width="3" height="15" fill="rgb(210,149,53)"/><text x="624.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.23%)</title><rect x="621" y="164" width="3" height="15" fill="rgb(251,195,20)"/><text x="624.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.23%)</title><rect x="621" y="180" width="3" height="15" fill="rgb(224,159,33)"/><text x="624.00" y="190.50"></text></g><g><title>convert_sklearn_mlp_regressor (skl2onnx/operator_converters/multilayer_perceptron.py:166) (1 samples, 0.23%)</title><rect x="621" y="196" width="3" height="15" fill="rgb(215,12,53)"/><text x="624.00" y="206.50"></text></g><g><title>_predict (skl2onnx/operator_converters/multilayer_perceptron.py:81) (1 samples, 0.23%)</title><rect x="621" y="212" width="3" height="15" fill="rgb(254,59,2)"/><text x="624.00" y="222.50"></text></g><g><title>_forward_pass (skl2onnx/operator_converters/multilayer_perceptron.py:37) (1 samples, 0.23%)</title><rect x="621" y="228" width="3" height="15" fill="rgb(245,38,14)"/><text x="624.00" y="238.50"></text></g><g><title>add_initializer (skl2onnx/common/_container.py:339) (1 samples, 0.23%)</title><rect x="621" y="244" width="3" height="15" fill="rgb(231,150,41)"/><text x="624.00" y="254.50"></text></g><g><title>make_tensor (onnx/helper.py:173) (1 samples, 0.23%)</title><rect x="621" y="260" width="3" height="15" fill="rgb(240,41,28)"/><text x="624.00" y="270.50"></text></g><g><title>google::protobuf::python::repeated_scalar_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="621" y="276" width="3" height="15" fill="rgb(217,83,21)"/><text x="624.00" y="286.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.23%)</title><rect x="621" y="292" width="3" height="15" fill="rgb(230,76,13)"/><text x="624.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.23%)</title><rect x="621" y="308" width="3" height="15" fill="rgb(239,121,49)"/><text x="624.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.23%)</title><rect x="621" y="324" width="3" height="15" fill="rgb(223,20,24)"/><text x="624.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.23%)</title><rect x="630" y="148" width="2" height="15" fill="rgb(244,97,40)"/><text x="633.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.23%)</title><rect x="635" y="164" width="3" height="15" fill="rgb(207,11,38)"/><text x="638.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (2 samples, 0.46%)</title><rect x="638" y="164" width="5" height="15" fill="rgb(246,52,24)"/><text x="641.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (1 samples, 0.23%)</title><rect x="643" y="164" width="3" height="15" fill="rgb(252,200,33)"/><text x="646.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.23%)</title><rect x="646" y="164" width="3" height="15" fill="rgb(210,157,44)"/><text x="649.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (19 samples, 4.40%)</title><rect x="668" y="180" width="52" height="15" fill="rgb(254,30,33)"/><text x="671.00" y="190.50">run (..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 0.93%)</title><rect x="709" y="196" width="11" height="15" fill="rgb(239,93,39)"/><text x="712.00" y="206.50"></text></g><g><title>0x7f80f9884757 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="739" y="260" width="3" height="15" fill="rgb(219,160,14)"/><text x="742.00" y="270.50"></text></g><g><title>array_astype (methods.c:799) (2 samples, 0.46%)</title><rect x="739" y="244" width="5" height="15" fill="rgb(223,50,18)"/><text x="742.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1391) (1 samples, 0.23%)</title><rect x="742" y="260" width="2" height="15" fill="rgb(251,225,41)"/><text x="745.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:370) (1 samples, 0.23%)</title><rect x="744" y="260" width="3" height="15" fill="rgb(240,187,47)"/><text x="747.00" y="270.50"></text></g><g><title>broadcast_strides (array_assign.c:49) (1 samples, 0.23%)</title><rect x="744" y="276" width="3" height="15" fill="rgb(246,27,36)"/><text x="747.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (8 samples, 1.85%)</title><rect x="728" y="212" width="22" height="15" fill="rgb(232,90,10)"/><text x="731.00" y="222.50">_..</text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (6 samples, 1.39%)</title><rect x="733" y="228" width="17" height="15" fill="rgb(237,144,41)"/><text x="736.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.46%)</title><rect x="744" y="244" width="6" height="15" fill="rgb(207,192,1)"/><text x="747.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.23%)</title><rect x="747" y="260" width="3" height="15" fill="rgb(228,82,18)"/><text x="750.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.23%)</title><rect x="747" y="276" width="3" height="15" fill="rgb(236,87,7)"/><text x="750.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.23%)</title><rect x="747" y="292" width="3" height="15" fill="rgb(205,174,4)"/><text x="750.00" y="302.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.23%)</title><rect x="747" y="308" width="3" height="15" fill="rgb(247,93,54)"/><text x="750.00" y="318.50"></text></g><g><title>0x7f80f9826a19 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="747" y="324" width="3" height="15" fill="rgb(230,112,48)"/><text x="750.00" y="334.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c:736) (1 samples, 0.23%)</title><rect x="747" y="340" width="3" height="15" fill="rgb(254,71,42)"/><text x="750.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (9 samples, 2.08%)</title><rect x="728" y="196" width="24" height="15" fill="rgb(247,197,8)"/><text x="731.00" y="206.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (1 samples, 0.23%)</title><rect x="750" y="212" width="2" height="15" fill="rgb(239,32,34)"/><text x="753.00" y="222.50"></text></g><g><title>array_reshape (methods.c:179) (1 samples, 0.23%)</title><rect x="750" y="228" width="2" height="15" fill="rgb(236,120,0)"/><text x="753.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_identity.py:17) (1 samples, 0.23%)</title><rect x="752" y="228" width="3" height="15" fill="rgb(209,111,32)"/><text x="755.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py:18) (2 samples, 0.46%)</title><rect x="755" y="228" width="6" height="15" fill="rgb(248,139,6)"/><text x="758.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.23%)</title><rect x="761" y="260" width="2" height="15" fill="rgb(232,71,19)"/><text x="764.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.23%)</title><rect x="761" y="276" width="2" height="15" fill="rgb(253,204,40)"/><text x="764.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.23%)</title><rect x="763" y="260" width="3" height="15" fill="rgb(220,12,49)"/><text x="766.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.23%)</title><rect x="763" y="276" width="3" height="15" fill="rgb(240,17,15)"/><text x="766.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.23%)</title><rect x="763" y="292" width="3" height="15" fill="rgb(237,206,27)"/><text x="766.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.23%)</title><rect x="766" y="260" width="3" height="15" fill="rgb(230,142,13)"/><text x="769.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.23%)</title><rect x="766" y="276" width="3" height="15" fill="rgb(239,116,29)"/><text x="769.00" y="286.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.23%)</title><rect x="766" y="292" width="3" height="15" fill="rgb(221,37,25)"/><text x="769.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.23%)</title><rect x="766" y="308" width="3" height="15" fill="rgb(231,83,24)"/><text x="769.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.23%)</title><rect x="766" y="324" width="3" height="15" fill="rgb(246,101,24)"/><text x="769.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.23%)</title><rect x="766" y="340" width="3" height="15" fill="rgb(213,101,42)"/><text x="769.00" y="350.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.23%)</title><rect x="766" y="356" width="3" height="15" fill="rgb(226,100,44)"/><text x="769.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.23%)</title><rect x="769" y="276" width="3" height="15" fill="rgb(208,12,12)"/><text x="772.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.23%)</title><rect x="769" y="292" width="3" height="15" fill="rgb(207,56,32)"/><text x="772.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:767) (1 samples, 0.23%)</title><rect x="769" y="308" width="3" height="15" fill="rgb(236,185,36)"/><text x="772.00" y="318.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:702) (1 samples, 0.23%)</title><rect x="769" y="324" width="3" height="15" fill="rgb(223,10,7)"/><text x="772.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (8 samples, 1.85%)</title><rect x="752" y="196" width="22" height="15" fill="rgb(213,168,32)"/><text x="755.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (8 samples, 1.85%)</title><rect x="752" y="212" width="22" height="15" fill="rgb(233,109,43)"/><text x="755.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py:19) (5 samples, 1.16%)</title><rect x="761" y="228" width="13" height="15" fill="rgb(254,141,6)"/><text x="764.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.16%)</title><rect x="761" y="244" width="13" height="15" fill="rgb(219,143,17)"/><text x="764.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.46%)</title><rect x="769" y="260" width="5" height="15" fill="rgb(214,153,44)"/><text x="772.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.23%)</title><rect x="772" y="276" width="2" height="15" fill="rgb(226,71,2)"/><text x="775.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.23%)</title><rect x="772" y="292" width="2" height="15" fill="rgb(231,154,44)"/><text x="775.00" y="302.50"></text></g><g><title>0x7f80f8a90e80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="772" y="308" width="2" height="15" fill="rgb(238,153,16)"/><text x="775.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:422) (1 samples, 0.23%)</title><rect x="783" y="212" width="2" height="15" fill="rgb(249,0,41)"/><text x="786.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (3 samples, 0.69%)</title><rect x="791" y="228" width="8" height="15" fill="rgb(211,13,26)"/><text x="794.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (1 samples, 0.23%)</title><rect x="799" y="228" width="3" height="15" fill="rgb(219,34,23)"/><text x="802.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.23%)</title><rect x="807" y="260" width="3" height="15" fill="rgb(207,30,34)"/><text x="810.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.23%)</title><rect x="807" y="276" width="3" height="15" fill="rgb(224,62,37)"/><text x="810.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.23%)</title><rect x="807" y="292" width="3" height="15" fill="rgb(248,88,34)"/><text x="810.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.23%)</title><rect x="807" y="308" width="3" height="15" fill="rgb(231,179,29)"/><text x="810.00" y="318.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.23%)</title><rect x="807" y="324" width="3" height="15" fill="rgb(253,149,47)"/><text x="810.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.23%)</title><rect x="810" y="260" width="3" height="15" fill="rgb(239,65,53)"/><text x="813.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1948) (1 samples, 0.23%)</title><rect x="810" y="276" width="3" height="15" fill="rgb(236,92,7)"/><text x="813.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.23%)</title><rect x="813" y="260" width="2" height="15" fill="rgb(249,210,36)"/><text x="816.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1292) (1 samples, 0.23%)</title><rect x="813" y="276" width="2" height="15" fill="rgb(238,103,41)"/><text x="816.00" y="286.50"></text></g><g><title>PyArray_CHKFLAGS (ndarraytypes.h:1552) (1 samples, 0.23%)</title><rect x="815" y="292" width="3" height="15" fill="rgb(231,57,28)"/><text x="818.00" y="302.50"></text></g><g><title>PyArray_FLAGS (ndarraytypes.h:1534) (1 samples, 0.23%)</title><rect x="815" y="308" width="3" height="15" fill="rgb(242,0,31)"/><text x="818.00" y="318.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.23%)</title><rect x="818" y="308" width="3" height="15" fill="rgb(252,57,43)"/><text x="821.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:596) (1 samples, 0.23%)</title><rect x="818" y="324" width="3" height="15" fill="rgb(217,5,16)"/><text x="821.00" y="334.50"></text></g><g><title>solve_diophantine (mem_overlap.c:528) (1 samples, 0.23%)</title><rect x="821" y="324" width="2" height="15" fill="rgb(248,208,15)"/><text x="824.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (4 samples, 0.93%)</title><rect x="815" y="276" width="11" height="15" fill="rgb(216,219,29)"/><text x="818.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (3 samples, 0.69%)</title><rect x="818" y="292" width="8" height="15" fill="rgb(208,33,44)"/><text x="821.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.46%)</title><rect x="821" y="308" width="5" height="15" fill="rgb(218,17,44)"/><text x="824.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.23%)</title><rect x="823" y="324" width="3" height="15" fill="rgb(233,100,30)"/><text x="826.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:351) (1 samples, 0.23%)</title><rect x="823" y="340" width="3" height="15" fill="rgb(228,22,28)"/><text x="826.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1500) (1 samples, 0.23%)</title><rect x="826" y="292" width="3" height="15" fill="rgb(229,61,37)"/><text x="829.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.23%)</title><rect x="829" y="308" width="3" height="15" fill="rgb(217,200,13)"/><text x="832.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="829" y="324" width="3" height="15" fill="rgb(251,49,39)"/><text x="832.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (2 samples, 0.46%)</title><rect x="832" y="324" width="5" height="15" fill="rgb(243,14,10)"/><text x="835.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (3 samples, 0.69%)</title><rect x="832" y="308" width="8" height="15" fill="rgb(254,9,5)"/><text x="835.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1544) (1 samples, 0.23%)</title><rect x="837" y="324" width="3" height="15" fill="rgb(252,180,24)"/><text x="840.00" y="334.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.23%)</title><rect x="837" y="340" width="3" height="15" fill="rgb(254,139,22)"/><text x="840.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:295) (1 samples, 0.23%)</title><rect x="840" y="308" width="3" height="15" fill="rgb(224,6,52)"/><text x="843.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.23%)</title><rect x="843" y="324" width="2" height="15" fill="rgb(210,77,37)"/><text x="846.00" y="334.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.23%)</title><rect x="843" y="340" width="2" height="15" fill="rgb(245,171,44)"/><text x="846.00" y="350.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:110) (1 samples, 0.23%)</title><rect x="843" y="356" width="2" height="15" fill="rgb(238,128,3)"/><text x="846.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.46%)</title><rect x="843" y="308" width="5" height="15" fill="rgb(212,184,9)"/><text x="846.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3002) (1 samples, 0.23%)</title><rect x="845" y="324" width="3" height="15" fill="rgb(246,20,49)"/><text x="848.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (8 samples, 1.85%)</title><rect x="829" y="292" width="22" height="15" fill="rgb(230,73,10)"/><text x="832.00" y="302.50">i..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.23%)</title><rect x="848" y="308" width="3" height="15" fill="rgb(214,51,42)"/><text x="851.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.23%)</title><rect x="848" y="324" width="3" height="15" fill="rgb(216,188,5)"/><text x="851.00" y="334.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (1 samples, 0.23%)</title><rect x="848" y="340" width="3" height="15" fill="rgb(245,60,23)"/><text x="851.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.23%)</title><rect x="851" y="292" width="3" height="15" fill="rgb(228,32,49)"/><text x="854.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (1 samples, 0.23%)</title><rect x="851" y="308" width="3" height="15" fill="rgb(238,40,40)"/><text x="854.00" y="318.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.23%)</title><rect x="851" y="324" width="3" height="15" fill="rgb(206,180,47)"/><text x="854.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (15 samples, 3.47%)</title><rect x="815" y="260" width="41" height="15" fill="rgb(252,82,46)"/><text x="818.00" y="270.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (11 samples, 2.55%)</title><rect x="826" y="276" width="30" height="15" fill="rgb(214,205,28)"/><text x="829.00" y="286.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.23%)</title><rect x="854" y="292" width="2" height="15" fill="rgb(234,190,31)"/><text x="857.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.23%)</title><rect x="854" y="308" width="2" height="15" fill="rgb(239,144,18)"/><text x="857.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.23%)</title><rect x="854" y="324" width="2" height="15" fill="rgb(222,139,15)"/><text x="857.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (20 samples, 4.63%)</title><rect x="807" y="244" width="55" height="15" fill="rgb(215,151,45)"/><text x="810.00" y="254.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3280) (2 samples, 0.46%)</title><rect x="856" y="260" width="6" height="15" fill="rgb(238,197,25)"/><text x="859.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (23 samples, 5.32%)</title><rect x="802" y="228" width="62" height="15" fill="rgb(209,66,32)"/><text x="805.00" y="238.50">_run (..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.23%)</title><rect x="862" y="244" width="2" height="15" fill="rgb(244,25,0)"/><text x="865.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.23%)</title><rect x="862" y="260" width="2" height="15" fill="rgb(224,62,27)"/><text x="865.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:524) (1 samples, 0.23%)</title><rect x="864" y="228" width="3" height="15" fill="rgb(222,1,3)"/><text x="867.00" y="238.50"></text></g><g><title>arrayflags_dealloc (flagsobject.c:196) (1 samples, 0.23%)</title><rect x="873" y="260" width="2" height="15" fill="rgb(250,51,41)"/><text x="876.00" y="270.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:13) (2 samples, 0.46%)</title><rect x="873" y="244" width="5" height="15" fill="rgb(241,171,19)"/><text x="876.00" y="254.50"></text></g><g><title>arrayflags_getitem (flagsobject.c:526) (1 samples, 0.23%)</title><rect x="875" y="260" width="3" height="15" fill="rgb(228,62,48)"/><text x="878.00" y="270.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:14) (3 samples, 0.69%)</title><rect x="878" y="244" width="8" height="15" fill="rgb(242,109,25)"/><text x="881.00" y="254.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:15) (1 samples, 0.23%)</title><rect x="886" y="244" width="3" height="15" fill="rgb(210,83,14)"/><text x="889.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.23%)</title><rect x="895" y="260" width="2" height="15" fill="rgb(225,7,29)"/><text x="898.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.23%)</title><rect x="895" y="276" width="2" height="15" fill="rgb(211,20,26)"/><text x="898.00" y="286.50"></text></g><g><title>0x7f80f8a907c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="895" y="292" width="2" height="15" fill="rgb(217,102,35)"/><text x="898.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.23%)</title><rect x="897" y="260" width="3" height="15" fill="rgb(227,74,19)"/><text x="900.00" y="270.50"></text></g><g><title>get_view_from_index (mapping.c:965) (1 samples, 0.23%)</title><rect x="897" y="276" width="3" height="15" fill="rgb(240,197,13)"/><text x="900.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (1 samples, 0.23%)</title><rect x="900" y="292" width="3" height="15" fill="rgb(243,145,32)"/><text x="903.00" y="302.50"></text></g><g><title>new_array_for_sum (common.c:875) (2 samples, 0.46%)</title><rect x="903" y="340" width="5" height="15" fill="rgb(234,33,31)"/><text x="906.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (2 samples, 0.46%)</title><rect x="903" y="356" width="5" height="15" fill="rgb(216,190,44)"/><text x="906.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (2 samples, 0.46%)</title><rect x="903" y="372" width="5" height="15" fill="rgb(241,149,44)"/><text x="906.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.46%)</title><rect x="903" y="388" width="5" height="15" fill="rgb(230,56,31)"/><text x="906.00" y="398.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (3 samples, 0.69%)</title><rect x="903" y="324" width="8" height="15" fill="rgb(249,194,33)"/><text x="906.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:880) (1 samples, 0.23%)</title><rect x="908" y="340" width="3" height="15" fill="rgb(224,113,7)"/><text x="911.00" y="350.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1250) (1 samples, 0.23%)</title><rect x="908" y="356" width="3" height="15" fill="rgb(246,97,1)"/><text x="911.00" y="366.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.23%)</title><rect x="908" y="372" width="3" height="15" fill="rgb(225,40,2)"/><text x="911.00" y="382.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:685) (1 samples, 0.23%)</title><rect x="911" y="324" width="3" height="15" fill="rgb(240,23,18)"/><text x="914.00" y="334.50"></text></g><g><title>PyArray_ResolveWritebackIfCopy (arrayobject.c:430) (1 samples, 0.23%)</title><rect x="911" y="340" width="3" height="15" fill="rgb(237,4,19)"/><text x="914.00" y="350.50"></text></g><g><title>PyArray_CopyAsFlat (ctors.c:2819) (1 samples, 0.23%)</title><rect x="911" y="356" width="3" height="15" fill="rgb(218,144,29)"/><text x="914.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.23%)</title><rect x="911" y="372" width="3" height="15" fill="rgb(239,49,42)"/><text x="914.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.23%)</title><rect x="911" y="388" width="3" height="15" fill="rgb(227,194,14)"/><text x="914.00" y="398.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="911" y="404" width="3" height="15" fill="rgb(237,229,38)"/><text x="914.00" y="414.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.39%)</title><rect x="900" y="276" width="16" height="15" fill="rgb(224,71,38)"/><text x="903.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (5 samples, 1.16%)</title><rect x="903" y="292" width="13" height="15" fill="rgb(222,195,31)"/><text x="906.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (5 samples, 1.16%)</title><rect x="903" y="308" width="13" height="15" fill="rgb(248,33,37)"/><text x="906.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:688) (1 samples, 0.23%)</title><rect x="914" y="324" width="2" height="15" fill="rgb(215,160,13)"/><text x="917.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.23%)</title><rect x="914" y="340" width="2" height="15" fill="rgb(236,174,23)"/><text x="917.00" y="350.50"></text></g><g><title>npy_free_cache_dim (alloc.c:175) (1 samples, 0.23%)</title><rect x="914" y="356" width="2" height="15" fill="rgb(224,140,42)"/><text x="917.00" y="366.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.23%)</title><rect x="914" y="372" width="2" height="15" fill="rgb(205,14,51)"/><text x="917.00" y="382.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:16) (11 samples, 2.55%)</title><rect x="889" y="244" width="30" height="15" fill="rgb(236,16,3)"/><text x="892.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (7 samples, 1.62%)</title><rect x="900" y="260" width="19" height="15" fill="rgb(239,168,39)"/><text x="903.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:323) (1 samples, 0.23%)</title><rect x="916" y="276" width="3" height="15" fill="rgb(218,44,51)"/><text x="919.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:17) (1 samples, 0.23%)</title><rect x="919" y="244" width="3" height="15" fill="rgb(238,177,1)"/><text x="922.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.23%)</title><rect x="919" y="260" width="3" height="15" fill="rgb(244,64,15)"/><text x="922.00" y="270.50"></text></g><g><title>get_view_from_index (mapping.c:966) (1 samples, 0.23%)</title><rect x="919" y="276" width="3" height="15" fill="rgb(226,126,19)"/><text x="922.00" y="286.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:360) (1 samples, 0.23%)</title><rect x="922" y="324" width="3" height="15" fill="rgb(240,176,19)"/><text x="925.00" y="334.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.23%)</title><rect x="925" y="324" width="2" height="15" fill="rgb(228,27,31)"/><text x="928.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.23%)</title><rect x="925" y="340" width="2" height="15" fill="rgb(244,161,52)"/><text x="928.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.23%)</title><rect x="925" y="356" width="2" height="15" fill="rgb(210,63,7)"/><text x="928.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.23%)</title><rect x="925" y="372" width="2" height="15" fill="rgb(207,228,29)"/><text x="928.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.23%)</title><rect x="925" y="388" width="2" height="15" fill="rgb(213,152,43)"/><text x="928.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (58 samples, 13.43%)</title><rect x="774" y="196" width="159" height="15" fill="rgb(223,185,44)"/><text x="777.00" y="206.50">run (mlprodict/onnxr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (54 samples, 12.50%)</title><rect x="785" y="212" width="148" height="15" fill="rgb(227,137,44)"/><text x="788.00" y="222.50">run (mlprodict/onn..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (24 samples, 5.56%)</title><rect x="867" y="228" width="66" height="15" fill="rgb(240,207,1)"/><text x="870.00" y="238.50">_run (m..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (4 samples, 0.93%)</title><rect x="922" y="244" width="11" height="15" fill="rgb(226,213,17)"/><text x="925.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (4 samples, 0.93%)</title><rect x="922" y="260" width="11" height="15" fill="rgb(244,99,53)"/><text x="925.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.93%)</title><rect x="922" y="276" width="11" height="15" fill="rgb(221,135,36)"/><text x="925.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (4 samples, 0.93%)</title><rect x="922" y="292" width="11" height="15" fill="rgb(236,228,40)"/><text x="925.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (4 samples, 0.93%)</title><rect x="922" y="308" width="11" height="15" fill="rgb(247,1,33)"/><text x="925.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (2 samples, 0.46%)</title><rect x="927" y="324" width="6" height="15" fill="rgb(233,40,16)"/><text x="930.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (2 samples, 0.46%)</title><rect x="927" y="340" width="6" height="15" fill="rgb(210,91,18)"/><text x="930.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.46%)</title><rect x="927" y="356" width="6" height="15" fill="rgb(245,72,8)"/><text x="930.00" y="366.50"></text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.46%)</title><rect x="927" y="372" width="6" height="15" fill="rgb(249,12,35)"/><text x="930.00" y="382.50"></text></g><g><title>sgemv_kernel_4x8 (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.46%)</title><rect x="927" y="388" width="6" height="15" fill="rgb(221,122,16)"/><text x="930.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (84 samples, 19.44%)</title><rect x="720" y="180" width="229" height="15" fill="rgb(238,172,4)"/><text x="723.00" y="190.50">run (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (6 samples, 1.39%)</title><rect x="933" y="196" width="16" height="15" fill="rgb(251,83,31)"/><text x="936.00" y="206.50"></text></g><g><title>array_descr_get (getset.c:207) (2 samples, 0.46%)</title><rect x="944" y="212" width="5" height="15" fill="rgb(225,62,40)"/><text x="947.00" y="222.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (2 samples, 0.46%)</title><rect x="944" y="228" width="5" height="15" fill="rgb(237,87,6)"/><text x="947.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.46%)</title><rect x="949" y="180" width="6" height="15" fill="rgb(212,162,18)"/><text x="952.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (5 samples, 1.16%)</title><rect x="955" y="180" width="13" height="15" fill="rgb(205,91,9)"/><text x="958.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (3 samples, 0.69%)</title><rect x="968" y="180" width="8" height="15" fill="rgb(238,168,45)"/><text x="971.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (5 samples, 1.16%)</title><rect x="976" y="180" width="14" height="15" fill="rgb(217,8,27)"/><text x="979.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (130 samples, 30.09%)</title><rect x="649" y="164" width="355" height="15" fill="rgb(218,185,46)"/><text x="652.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (5 samples, 1.16%)</title><rect x="990" y="180" width="14" height="15" fill="rgb(244,38,14)"/><text x="993.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (138 samples, 31.94%)</title><rect x="630" y="132" width="376" height="15" fill="rgb(215,19,26)"/><text x="633.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (137 samples, 31.71%)</title><rect x="632" y="148" width="374" height="15" fill="rgb(219,176,30)"/><text x="635.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.23%)</title><rect x="1004" y="164" width="2" height="15" fill="rgb(226,183,47)"/><text x="1007.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:61) (142 samples, 32.87%)</title><rect x="621" y="52" width="388" height="15" fill="rgb(217,88,20)"/><text x="624.00" y="62.50">&lt;module&gt; (bench_MLPRegressor_default_b_reg_1_50_12_f..</text></g><g><title>profile_pyrt (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:60) (142 samples, 32.87%)</title><rect x="621" y="68" width="388" height="15" fill="rgb(212,127,35)"/><text x="624.00" y="78.50">profile_pyrt (bench_MLPRegressor_default_b_reg_1_50_..</text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:37) (141 samples, 32.64%)</title><rect x="624" y="84" width="385" height="15" fill="rgb(234,43,32)"/><text x="627.00" y="94.50">setup_profile (bench_MLPRegressor_default_b_reg_1_50..</text></g><g><title>profile (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:31) (141 samples, 32.64%)</title><rect x="624" y="100" width="385" height="15" fill="rgb(213,123,6)"/><text x="627.00" y="110.50">profile (bench_MLPRegressor_default_b_reg_1_50_12_fl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (141 samples, 32.64%)</title><rect x="624" y="116" width="385" height="15" fill="rgb(218,0,46)"/><text x="627.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.23%)</title><rect x="1006" y="132" width="3" height="15" fill="rgb(236,166,39)"/><text x="1009.00" y="142.50"></text></g><g><title>profile (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:30) (1 samples, 0.23%)</title><rect x="1009" y="100" width="3" height="15" fill="rgb(229,90,2)"/><text x="1012.00" y="110.50"></text></g><g><title>0x7f80f8a919c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="1015" y="116" width="2" height="15" fill="rgb(211,183,36)"/><text x="1018.00" y="126.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.23%)</title><rect x="1034" y="148" width="3" height="15" fill="rgb(225,118,35)"/><text x="1037.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.23%)</title><rect x="1045" y="196" width="2" height="15" fill="rgb(235,8,13)"/><text x="1048.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (8 samples, 1.85%)</title><rect x="1047" y="196" width="22" height="15" fill="rgb(249,56,50)"/><text x="1050.00" y="206.50">r..</text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (5 samples, 1.16%)</title><rect x="1056" y="212" width="13" height="15" fill="rgb(216,129,31)"/><text x="1059.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1064" y="228" width="5" height="15" fill="rgb(218,204,49)"/><text x="1067.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1064" y="244" width="5" height="15" fill="rgb(235,211,23)"/><text x="1067.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1064" y="260" width="5" height="15" fill="rgb(242,182,54)"/><text x="1067.00" y="270.50"></text></g><g><title>0x7f80b78b1ff9 (?) (1 samples, 0.23%)</title><rect x="1072" y="212" width="3" height="15" fill="rgb(243,85,24)"/><text x="1075.00" y="222.50"></text></g><g><title>0x7f80b78acef6 (?) (1 samples, 0.23%)</title><rect x="1072" y="228" width="3" height="15" fill="rgb(215,190,51)"/><text x="1075.00" y="238.50"></text></g><g><title>0x7f80b78a1d49 (?) (1 samples, 0.23%)</title><rect x="1072" y="244" width="3" height="15" fill="rgb(232,167,5)"/><text x="1075.00" y="254.50"></text></g><g><title>0x7f80b78afc1a (?) (1 samples, 0.23%)</title><rect x="1072" y="260" width="3" height="15" fill="rgb(222,167,6)"/><text x="1075.00" y="270.50"></text></g><g><title>0x7f80b7cd4e0e (?) (1 samples, 0.23%)</title><rect x="1072" y="276" width="3" height="15" fill="rgb(214,13,39)"/><text x="1075.00" y="286.50"></text></g><g><title>0x7f80b7d17f6e (?) (1 samples, 0.23%)</title><rect x="1072" y="292" width="3" height="15" fill="rgb(252,208,7)"/><text x="1075.00" y="302.50"></text></g><g><title>0x7f80b7ccbd3d (?) (1 samples, 0.23%)</title><rect x="1072" y="308" width="3" height="15" fill="rgb(215,94,48)"/><text x="1075.00" y="318.50"></text></g><g><title>0x7f80b7ccb860 (?) (1 samples, 0.23%)</title><rect x="1072" y="324" width="3" height="15" fill="rgb(240,144,33)"/><text x="1075.00" y="334.50"></text></g><g><title>0x7f80b7ccb757 (?) (1 samples, 0.23%)</title><rect x="1072" y="340" width="3" height="15" fill="rgb(230,78,31)"/><text x="1075.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1078" y="260" width="5" height="15" fill="rgb(222,92,20)"/><text x="1081.00" y="270.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1080" y="276" width="3" height="15" fill="rgb(225,155,7)"/><text x="1083.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="1080" y="292" width="3" height="15" fill="rgb(225,104,21)"/><text x="1083.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1083" y="308" width="3" height="15" fill="rgb(213,66,17)"/><text x="1086.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1083" y="324" width="3" height="15" fill="rgb(225,112,1)"/><text x="1086.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1083" y="292" width="5" height="15" fill="rgb(221,171,41)"/><text x="1086.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1086" y="308" width="2" height="15" fill="rgb(234,124,25)"/><text x="1089.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1088" y="292" width="3" height="15" fill="rgb(235,130,3)"/><text x="1091.00" y="302.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="1088" y="308" width="3" height="15" fill="rgb(219,32,53)"/><text x="1091.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.69%)</title><rect x="1091" y="292" width="8" height="15" fill="rgb(209,47,42)"/><text x="1094.00" y="302.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="1097" y="308" width="2" height="15" fill="rgb(211,215,43)"/><text x="1100.00" y="318.50"></text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.69%)</title><rect x="1102" y="340" width="8" height="15" fill="rgb(239,180,32)"/><text x="1105.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1105" y="356" width="5" height="15" fill="rgb(225,64,11)"/><text x="1108.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1105" y="372" width="5" height="15" fill="rgb(210,123,32)"/><text x="1108.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1105" y="388" width="5" height="15" fill="rgb(250,217,17)"/><text x="1108.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1108" y="404" width="2" height="15" fill="rgb(252,105,2)"/><text x="1111.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1108" y="420" width="2" height="15" fill="rgb(229,204,47)"/><text x="1111.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1108" y="436" width="2" height="15" fill="rgb(219,72,54)"/><text x="1111.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1108" y="452" width="2" height="15" fill="rgb(235,117,42)"/><text x="1111.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.93%)</title><rect x="1110" y="340" width="11" height="15" fill="rgb(215,35,38)"/><text x="1113.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1121" y="340" width="6" height="15" fill="rgb(234,116,19)"/><text x="1124.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1121" y="356" width="6" height="15" fill="rgb(229,67,2)"/><text x="1124.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1121" y="372" width="6" height="15" fill="rgb(237,86,33)"/><text x="1124.00" y="382.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1124" y="388" width="3" height="15" fill="rgb(230,110,10)"/><text x="1127.00" y="398.50"></text></g><g><title>mkl_blas_errchk_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.23%)</title><rect x="1132" y="404" width="3" height="15" fill="rgb(215,39,1)"/><text x="1135.00" y="414.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.16%)</title><rect x="1127" y="340" width="13" height="15" fill="rgb(230,84,53)"/><text x="1130.00" y="350.50"></text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.69%)</title><rect x="1132" y="356" width="8" height="15" fill="rgb(247,202,12)"/><text x="1135.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.69%)</title><rect x="1132" y="372" width="8" height="15" fill="rgb(234,147,5)"/><text x="1135.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.69%)</title><rect x="1132" y="388" width="8" height="15" fill="rgb(230,90,35)"/><text x="1135.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.46%)</title><rect x="1135" y="404" width="5" height="15" fill="rgb(218,50,7)"/><text x="1138.00" y="414.50"></text></g><g><title>mkl_blas_sgemv (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.46%)</title><rect x="1135" y="420" width="5" height="15" fill="rgb(226,195,3)"/><text x="1138.00" y="430.50"></text></g><g><title>mkl_blas_xsgemv (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.46%)</title><rect x="1135" y="436" width="5" height="15" fill="rgb(235,9,15)"/><text x="1138.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemv (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.46%)</title><rect x="1135" y="452" width="5" height="15" fill="rgb(206,219,19)"/><text x="1138.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1140" y="340" width="3" height="15" fill="rgb(205,193,27)"/><text x="1143.00" y="350.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1140" y="356" width="3" height="15" fill="rgb(236,77,38)"/><text x="1143.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1143" y="340" width="3" height="15" fill="rgb(208,28,7)"/><text x="1146.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1143" y="356" width="3" height="15" fill="rgb(245,43,27)"/><text x="1146.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1143" y="372" width="3" height="15" fill="rgb(215,161,32)"/><text x="1146.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1143" y="388" width="3" height="15" fill="rgb(251,31,36)"/><text x="1146.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1143" y="404" width="3" height="15" fill="rgb(209,157,32)"/><text x="1146.00" y="414.50"></text></g><g><title>0x7f80f986e991 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1143" y="420" width="3" height="15" fill="rgb(233,109,19)"/><text x="1146.00" y="430.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1146" y="340" width="3" height="15" fill="rgb(251,205,24)"/><text x="1149.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 6.02%)</title><rect x="1083" y="260" width="71" height="15" fill="rgb(237,93,5)"/><text x="1086.00" y="270.50">onnxrunt..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 6.02%)</title><rect x="1083" y="276" width="71" height="15" fill="rgb(236,31,12)"/><text x="1086.00" y="286.50">onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 4.63%)</title><rect x="1099" y="292" width="55" height="15" fill="rgb(236,168,44)"/><text x="1102.00" y="302.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 4.63%)</title><rect x="1099" y="308" width="55" height="15" fill="rgb(208,8,7)"/><text x="1102.00" y="318.50">onnxr..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 4.63%)</title><rect x="1099" y="324" width="55" height="15" fill="rgb(244,55,22)"/><text x="1102.00" y="334.50">onnxr..</text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1149" y="340" width="5" height="15" fill="rgb(239,84,11)"/><text x="1152.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1149" y="356" width="5" height="15" fill="rgb(207,138,39)"/><text x="1152.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1149" y="372" width="5" height="15" fill="rgb(247,61,40)"/><text x="1152.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1149" y="388" width="5" height="15" fill="rgb(226,121,42)"/><text x="1152.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1149" y="404" width="5" height="15" fill="rgb(240,227,50)"/><text x="1152.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1149" y="420" width="5" height="15" fill="rgb(216,177,38)"/><text x="1152.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1149" y="436" width="5" height="15" fill="rgb(241,130,16)"/><text x="1152.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1149" y="452" width="5" height="15" fill="rgb(228,96,12)"/><text x="1152.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1149" y="468" width="5" height="15" fill="rgb(249,182,21)"/><text x="1152.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1149" y="484" width="5" height="15" fill="rgb(206,226,21)"/><text x="1152.00" y="494.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1154" y="260" width="5" height="15" fill="rgb(228,168,18)"/><text x="1157.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1362) (1 samples, 0.23%)</title><rect x="1159" y="276" width="3" height="15" fill="rgb(214,128,29)"/><text x="1162.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.23%)</title><rect x="1159" y="292" width="3" height="15" fill="rgb(226,223,31)"/><text x="1162.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.23%)</title><rect x="1162" y="292" width="3" height="15" fill="rgb(247,166,51)"/><text x="1165.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.23%)</title><rect x="1162" y="308" width="3" height="15" fill="rgb(217,187,36)"/><text x="1165.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 7.64%)</title><rect x="1078" y="244" width="90" height="15" fill="rgb(213,134,7)"/><text x="1081.00" y="254.50">onnxruntim..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.69%)</title><rect x="1159" y="260" width="9" height="15" fill="rgb(226,45,42)"/><text x="1162.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.46%)</title><rect x="1162" y="276" width="6" height="15" fill="rgb(248,164,42)"/><text x="1165.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.23%)</title><rect x="1165" y="292" width="3" height="15" fill="rgb(217,165,2)"/><text x="1168.00" y="302.50"></text></g><g><title>_array_fill_strides (ctors.c:4084) (1 samples, 0.23%)</title><rect x="1165" y="308" width="3" height="15" fill="rgb(235,90,35)"/><text x="1168.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1168" y="244" width="5" height="15" fill="rgb(208,118,46)"/><text x="1171.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="1168" y="260" width="5" height="15" fill="rgb(211,75,26)"/><text x="1171.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (50 samples, 11.57%)</title><rect x="1039" y="164" width="137" height="15" fill="rgb(208,151,43)"/><text x="1042.00" y="174.50">_run_whole_runtim..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (50 samples, 11.57%)</title><rect x="1039" y="180" width="137" height="15" fill="rgb(213,148,17)"/><text x="1042.00" y="190.50">run (mlprodict/on..</text></g><g><title>run (onnxruntime/capi/session.py:136) (39 samples, 9.03%)</title><rect x="1069" y="196" width="107" height="15" fill="rgb(241,49,24)"/><text x="1072.00" y="206.50">run (onnxrunt..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (37 samples, 8.56%)</title><rect x="1075" y="212" width="101" height="15" fill="rgb(219,152,42)"/><text x="1078.00" y="222.50">pybind11::cp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (36 samples, 8.33%)</title><rect x="1078" y="228" width="98" height="15" fill="rgb(239,217,2)"/><text x="1081.00" y="238.50">void pybind..</text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1173" y="244" width="3" height="15" fill="rgb(252,17,10)"/><text x="1176.00" y="254.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1173" y="260" width="3" height="15" fill="rgb(242,202,5)"/><text x="1176.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (59 samples, 13.66%)</title><rect x="1026" y="132" width="161" height="15" fill="rgb(207,193,45)"/><text x="1029.00" y="142.50">&lt;lambda&gt; (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (55 samples, 12.73%)</title><rect x="1037" y="148" width="150" height="15" fill="rgb(236,208,43)"/><text x="1040.00" y="158.50">run (mlprodict/onnx..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (4 samples, 0.93%)</title><rect x="1176" y="164" width="11" height="15" fill="rgb(214,30,40)"/><text x="1179.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.23%)</title><rect x="1184" y="180" width="3" height="15" fill="rgb(249,200,10)"/><text x="1187.00" y="190.50"></text></g><g><title>all (432 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(214,207,2)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:68) (66 samples, 15.28%)</title><rect x="1009" y="52" width="181" height="15" fill="rgb(236,138,45)"/><text x="1012.00" y="62.50">&lt;module&gt; (bench_MLPRegr..</text></g><g><title>profile_ort (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:67) (66 samples, 15.28%)</title><rect x="1009" y="68" width="181" height="15" fill="rgb(206,81,7)"/><text x="1012.00" y="78.50">profile_ort (bench_MLPR..</text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:37) (66 samples, 15.28%)</title><rect x="1009" y="84" width="181" height="15" fill="rgb(251,144,32)"/><text x="1012.00" y="94.50">setup_profile (bench_ML..</text></g><g><title>profile (bench_MLPRegressor_default_b_reg_1_50_12_float_.py:31) (65 samples, 15.05%)</title><rect x="1012" y="100" width="178" height="15" fill="rgb(228,16,24)"/><text x="1015.00" y="110.50">profile (bench_MLPRegre..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (63 samples, 14.58%)</title><rect x="1017" y="116" width="173" height="15" fill="rgb(248,111,20)"/><text x="1020.00" y="126.50">time_predict (mlprodic..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.23%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(237,79,20)"/><text x="1190.00" y="142.50"></text></g><g><title>0x7f80f994c140 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1187" y="148" width="3" height="15" fill="rgb(206,13,32)"/><text x="1190.00" y="158.50"></text></g></g></svg>