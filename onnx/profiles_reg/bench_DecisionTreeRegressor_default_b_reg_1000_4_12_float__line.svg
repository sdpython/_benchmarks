<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:1) (1 samples, 0.16%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(234,204,38)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(240,137,6)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(254,169,23)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(215,180,0)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(228,139,51)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(246,50,17)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.16%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(209,48,3)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="10" y="260" width="1" height="15" fill="rgb(240,131,26)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="10" y="276" width="1" height="15" fill="rgb(240,176,10)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="10" y="292" width="1" height="15" fill="rgb(217,148,37)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="10" y="308" width="1" height="15" fill="rgb(216,54,15)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="10" y="324" width="1" height="15" fill="rgb(236,76,19)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="10" y="340" width="1" height="15" fill="rgb(229,18,33)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="10" y="356" width="1" height="15" fill="rgb(239,91,34)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.16%)</title><rect x="10" y="372" width="1" height="15" fill="rgb(252,101,26)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="10" y="388" width="1" height="15" fill="rgb(250,137,10)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="10" y="404" width="1" height="15" fill="rgb(234,214,27)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="10" y="420" width="1" height="15" fill="rgb(247,63,10)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="10" y="436" width="1" height="15" fill="rgb(213,173,13)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="10" y="452" width="1" height="15" fill="rgb(231,111,16)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="10" y="468" width="1" height="15" fill="rgb(239,160,10)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="10" y="484" width="1" height="15" fill="rgb(215,102,6)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:14) (1 samples, 0.16%)</title><rect x="10" y="500" width="1" height="15" fill="rgb(224,21,7)"/><text x="13.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="10" y="516" width="1" height="15" fill="rgb(242,112,44)"/><text x="13.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="10" y="532" width="1" height="15" fill="rgb(241,42,31)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="10" y="548" width="1" height="15" fill="rgb(239,48,28)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="10" y="564" width="1" height="15" fill="rgb(207,189,17)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="10" y="580" width="1" height="15" fill="rgb(226,92,26)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="10" y="596" width="1" height="15" fill="rgb(238,70,54)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="10" y="612" width="1" height="15" fill="rgb(209,96,29)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:9) (1 samples, 0.16%)</title><rect x="10" y="628" width="1" height="15" fill="rgb(223,75,51)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="10" y="644" width="1" height="15" fill="rgb(245,3,30)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="10" y="660" width="1" height="15" fill="rgb(250,183,18)"/><text x="13.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="10" y="676" width="1" height="15" fill="rgb(230,76,41)"/><text x="13.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="10" y="692" width="1" height="15" fill="rgb(228,2,8)"/><text x="13.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="10" y="708" width="1" height="15" fill="rgb(252,205,40)"/><text x="13.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="10" y="724" width="1" height="15" fill="rgb(217,122,11)"/><text x="13.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="10" y="740" width="1" height="15" fill="rgb(213,127,49)"/><text x="13.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="10" y="756" width="1" height="15" fill="rgb(229,130,33)"/><text x="13.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py:14) (1 samples, 0.16%)</title><rect x="10" y="772" width="1" height="15" fill="rgb(227,50,23)"/><text x="13.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="10" y="788" width="1" height="15" fill="rgb(235,54,46)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="10" y="804" width="1" height="15" fill="rgb(248,213,47)"/><text x="13.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="10" y="820" width="1" height="15" fill="rgb(211,160,42)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="10" y="836" width="1" height="15" fill="rgb(243,198,10)"/><text x="13.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="10" y="852" width="1" height="15" fill="rgb(225,188,48)"/><text x="13.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(238,101,5)"/><text x="13.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(212,69,19)"/><text x="13.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py:24) (1 samples, 0.16%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(211,98,26)"/><text x="13.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.16%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(227,33,9)"/><text x="13.00" y="926.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:149) (1 samples, 0.16%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(233,37,51)"/><text x="13.00" y="942.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;:88) (1 samples, 0.16%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(209,177,12)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (1 samples, 0.16%)</title><rect x="11" y="820" width="2" height="15" fill="rgb(215,161,36)"/><text x="14.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (1 samples, 0.16%)</title><rect x="11" y="836" width="2" height="15" fill="rgb(211,63,3)"/><text x="14.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.16%)</title><rect x="11" y="852" width="2" height="15" fill="rgb(244,229,10)"/><text x="14.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.16%)</title><rect x="11" y="868" width="2" height="15" fill="rgb(233,23,29)"/><text x="14.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2780) (1 samples, 0.16%)</title><rect x="11" y="884" width="2" height="15" fill="rgb(222,195,5)"/><text x="14.00" y="894.50"></text></g><g><title>insert_on (pkg_resources/__init__.py:2895) (1 samples, 0.16%)</title><rect x="11" y="900" width="2" height="15" fill="rgb(251,216,50)"/><text x="14.00" y="910.50"></text></g><g><title>dirname (posixpath.py:156) (1 samples, 0.16%)</title><rect x="11" y="916" width="2" height="15" fill="rgb(244,40,37)"/><text x="14.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:2) (2 samples, 0.32%)</title><rect x="11" y="148" width="4" height="15" fill="rgb(238,223,33)"/><text x="14.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="11" y="164" width="4" height="15" fill="rgb(234,30,36)"/><text x="14.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.32%)</title><rect x="11" y="180" width="4" height="15" fill="rgb(212,178,50)"/><text x="14.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="11" y="196" width="4" height="15" fill="rgb(214,157,22)"/><text x="14.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="11" y="212" width="4" height="15" fill="rgb(232,67,30)"/><text x="14.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="11" y="228" width="4" height="15" fill="rgb(254,204,41)"/><text x="14.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="11" y="244" width="4" height="15" fill="rgb(231,63,30)"/><text x="14.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="11" y="260" width="4" height="15" fill="rgb(233,74,0)"/><text x="14.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="11" y="276" width="4" height="15" fill="rgb(233,6,39)"/><text x="14.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.32%)</title><rect x="11" y="292" width="4" height="15" fill="rgb(211,157,39)"/><text x="14.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="11" y="308" width="4" height="15" fill="rgb(251,28,52)"/><text x="14.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="11" y="324" width="4" height="15" fill="rgb(218,209,39)"/><text x="14.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="11" y="340" width="4" height="15" fill="rgb(229,157,7)"/><text x="14.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="11" y="356" width="4" height="15" fill="rgb(234,4,18)"/><text x="14.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="11" y="372" width="4" height="15" fill="rgb(226,20,40)"/><text x="14.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.32%)</title><rect x="11" y="388" width="4" height="15" fill="rgb(235,175,49)"/><text x="14.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="11" y="404" width="4" height="15" fill="rgb(239,184,17)"/><text x="14.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="11" y="420" width="4" height="15" fill="rgb(225,1,13)"/><text x="14.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="11" y="436" width="4" height="15" fill="rgb(212,152,24)"/><text x="14.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="11" y="452" width="4" height="15" fill="rgb(223,137,13)"/><text x="14.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="11" y="468" width="4" height="15" fill="rgb(254,165,15)"/><text x="14.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.32%)</title><rect x="11" y="484" width="4" height="15" fill="rgb(229,195,44)"/><text x="14.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="11" y="500" width="4" height="15" fill="rgb(213,203,39)"/><text x="14.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="11" y="516" width="4" height="15" fill="rgb(227,137,10)"/><text x="14.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="11" y="532" width="4" height="15" fill="rgb(208,173,53)"/><text x="14.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="11" y="548" width="4" height="15" fill="rgb(242,32,12)"/><text x="14.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="11" y="564" width="4" height="15" fill="rgb(246,129,4)"/><text x="14.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.32%)</title><rect x="11" y="580" width="4" height="15" fill="rgb(243,86,6)"/><text x="14.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="11" y="596" width="4" height="15" fill="rgb(254,79,39)"/><text x="14.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.32%)</title><rect x="11" y="612" width="4" height="15" fill="rgb(239,80,41)"/><text x="14.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="11" y="628" width="4" height="15" fill="rgb(228,153,7)"/><text x="14.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="11" y="644" width="4" height="15" fill="rgb(226,117,30)"/><text x="14.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="11" y="660" width="4" height="15" fill="rgb(246,229,5)"/><text x="14.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="11" y="676" width="4" height="15" fill="rgb(206,27,38)"/><text x="14.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="11" y="692" width="4" height="15" fill="rgb(248,92,18)"/><text x="14.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="11" y="708" width="4" height="15" fill="rgb(245,188,34)"/><text x="14.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.32%)</title><rect x="11" y="724" width="4" height="15" fill="rgb(231,130,25)"/><text x="14.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="11" y="740" width="4" height="15" fill="rgb(235,76,9)"/><text x="14.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="11" y="756" width="4" height="15" fill="rgb(246,101,3)"/><text x="14.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="11" y="772" width="4" height="15" fill="rgb(249,154,39)"/><text x="14.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="11" y="788" width="4" height="15" fill="rgb(248,169,24)"/><text x="14.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="11" y="804" width="4" height="15" fill="rgb(213,49,18)"/><text x="14.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:83) (1 samples, 0.16%)</title><rect x="13" y="820" width="2" height="15" fill="rgb(205,120,36)"/><text x="16.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="13" y="836" width="2" height="15" fill="rgb(223,74,17)"/><text x="16.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="13" y="852" width="2" height="15" fill="rgb(248,61,6)"/><text x="16.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="13" y="868" width="2" height="15" fill="rgb(234,166,19)"/><text x="16.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="13" y="884" width="2" height="15" fill="rgb(212,183,10)"/><text x="16.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="13" y="900" width="2" height="15" fill="rgb(233,121,11)"/><text x="16.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py:275) (1 samples, 0.16%)</title><rect x="13" y="916" width="2" height="15" fill="rgb(225,108,16)"/><text x="16.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py:373) (1 samples, 0.16%)</title><rect x="13" y="932" width="2" height="15" fill="rgb(208,198,33)"/><text x="16.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.16%)</title><rect x="13" y="948" width="2" height="15" fill="rgb(241,78,18)"/><text x="16.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.16%)</title><rect x="13" y="964" width="2" height="15" fill="rgb(245,94,54)"/><text x="16.00" y="974.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.16%)</title><rect x="13" y="980" width="2" height="15" fill="rgb(214,33,45)"/><text x="16.00" y="990.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.16%)</title><rect x="13" y="996" width="2" height="15" fill="rgb(238,178,28)"/><text x="16.00" y="1006.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.16%)</title><rect x="13" y="1012" width="2" height="15" fill="rgb(230,111,29)"/><text x="16.00" y="1022.50"></text></g><g><title>_compile (sre_compile.py:90) (1 samples, 0.16%)</title><rect x="13" y="1028" width="2" height="15" fill="rgb(210,104,48)"/><text x="16.00" y="1038.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:4) (1 samples, 0.16%)</title><rect x="15" y="148" width="2" height="15" fill="rgb(216,142,39)"/><text x="18.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="15" y="164" width="2" height="15" fill="rgb(228,156,52)"/><text x="18.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="15" y="180" width="2" height="15" fill="rgb(217,200,48)"/><text x="18.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="15" y="196" width="2" height="15" fill="rgb(239,55,7)"/><text x="18.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="15" y="212" width="2" height="15" fill="rgb(249,9,47)"/><text x="18.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="15" y="228" width="2" height="15" fill="rgb(230,3,12)"/><text x="18.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="15" y="244" width="2" height="15" fill="rgb(218,122,2)"/><text x="18.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="15" y="260" width="2" height="15" fill="rgb(244,90,8)"/><text x="18.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="15" y="276" width="2" height="15" fill="rgb(233,118,46)"/><text x="18.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.16%)</title><rect x="15" y="292" width="2" height="15" fill="rgb(229,213,41)"/><text x="18.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="15" y="308" width="2" height="15" fill="rgb(212,98,39)"/><text x="18.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="15" y="324" width="2" height="15" fill="rgb(210,80,7)"/><text x="18.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="15" y="340" width="2" height="15" fill="rgb(213,26,2)"/><text x="18.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="15" y="356" width="2" height="15" fill="rgb(239,134,21)"/><text x="18.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="15" y="372" width="2" height="15" fill="rgb(242,67,23)"/><text x="18.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.16%)</title><rect x="15" y="388" width="2" height="15" fill="rgb(252,89,5)"/><text x="18.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="15" y="404" width="2" height="15" fill="rgb(233,104,48)"/><text x="18.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="15" y="420" width="2" height="15" fill="rgb(226,111,31)"/><text x="18.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="15" y="436" width="2" height="15" fill="rgb(250,166,32)"/><text x="18.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="15" y="452" width="2" height="15" fill="rgb(244,70,51)"/><text x="18.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="15" y="468" width="2" height="15" fill="rgb(225,101,42)"/><text x="18.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.16%)</title><rect x="15" y="484" width="2" height="15" fill="rgb(225,57,38)"/><text x="18.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="15" y="500" width="2" height="15" fill="rgb(244,13,45)"/><text x="18.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="15" y="516" width="2" height="15" fill="rgb(230,0,15)"/><text x="18.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="15" y="532" width="2" height="15" fill="rgb(225,199,19)"/><text x="18.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="15" y="548" width="2" height="15" fill="rgb(236,138,28)"/><text x="18.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="15" y="564" width="2" height="15" fill="rgb(207,180,23)"/><text x="18.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="15" y="580" width="2" height="15" fill="rgb(222,59,28)"/><text x="18.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="15" y="596" width="2" height="15" fill="rgb(241,130,27)"/><text x="18.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.16%)</title><rect x="15" y="612" width="2" height="15" fill="rgb(219,48,8)"/><text x="18.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="15" y="628" width="2" height="15" fill="rgb(233,18,7)"/><text x="18.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="15" y="644" width="2" height="15" fill="rgb(222,218,50)"/><text x="18.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="15" y="660" width="2" height="15" fill="rgb(222,18,4)"/><text x="18.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="15" y="676" width="2" height="15" fill="rgb(236,48,30)"/><text x="18.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="15" y="692" width="2" height="15" fill="rgb(251,29,0)"/><text x="18.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.16%)</title><rect x="15" y="708" width="2" height="15" fill="rgb(227,41,37)"/><text x="18.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="15" y="724" width="2" height="15" fill="rgb(237,39,26)"/><text x="18.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="15" y="740" width="2" height="15" fill="rgb(254,161,21)"/><text x="18.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="15" y="756" width="2" height="15" fill="rgb(209,134,15)"/><text x="18.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="15" y="772" width="2" height="15" fill="rgb(241,114,43)"/><text x="18.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="15" y="788" width="2" height="15" fill="rgb(216,138,10)"/><text x="18.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (1 samples, 0.16%)</title><rect x="15" y="804" width="2" height="15" fill="rgb(214,118,49)"/><text x="18.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="15" y="820" width="2" height="15" fill="rgb(227,203,6)"/><text x="18.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="15" y="836" width="2" height="15" fill="rgb(225,225,35)"/><text x="18.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="15" y="852" width="2" height="15" fill="rgb(249,136,16)"/><text x="18.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="15" y="868" width="2" height="15" fill="rgb(249,114,24)"/><text x="18.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="15" y="884" width="2" height="15" fill="rgb(227,154,16)"/><text x="18.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (1 samples, 0.16%)</title><rect x="15" y="900" width="2" height="15" fill="rgb(234,229,16)"/><text x="18.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="15" y="916" width="2" height="15" fill="rgb(251,198,47)"/><text x="18.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="15" y="932" width="2" height="15" fill="rgb(253,203,15)"/><text x="18.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="15" y="948" width="2" height="15" fill="rgb(231,140,29)"/><text x="18.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="15" y="964" width="2" height="15" fill="rgb(219,229,41)"/><text x="18.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="15" y="980" width="2" height="15" fill="rgb(228,154,38)"/><text x="18.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (1 samples, 0.16%)</title><rect x="15" y="996" width="2" height="15" fill="rgb(231,166,31)"/><text x="18.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="15" y="1012" width="2" height="15" fill="rgb(241,207,44)"/><text x="18.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="15" y="1028" width="2" height="15" fill="rgb(219,186,22)"/><text x="18.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="15" y="1044" width="2" height="15" fill="rgb(241,159,45)"/><text x="18.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="15" y="1060" width="2" height="15" fill="rgb(244,156,17)"/><text x="18.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="15" y="1076" width="2" height="15" fill="rgb(217,109,46)"/><text x="18.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="15" y="1092" width="2" height="15" fill="rgb(248,191,0)"/><text x="18.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="15" y="1108" width="2" height="15" fill="rgb(248,30,13)"/><text x="18.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="15" y="1124" width="2" height="15" fill="rgb(209,116,14)"/><text x="18.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:13) (1 samples, 0.16%)</title><rect x="15" y="1140" width="2" height="15" fill="rgb(225,157,51)"/><text x="18.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="15" y="1156" width="2" height="15" fill="rgb(215,71,53)"/><text x="18.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="15" y="1172" width="2" height="15" fill="rgb(219,97,41)"/><text x="18.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="15" y="1188" width="2" height="15" fill="rgb(211,95,29)"/><text x="18.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="15" y="1204" width="2" height="15" fill="rgb(223,145,40)"/><text x="18.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="15" y="1220" width="2" height="15" fill="rgb(214,89,7)"/><text x="18.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py:11) (1 samples, 0.16%)</title><rect x="15" y="1236" width="2" height="15" fill="rgb(226,74,11)"/><text x="18.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="15" y="1252" width="2" height="15" fill="rgb(230,175,12)"/><text x="18.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="15" y="1268" width="2" height="15" fill="rgb(205,182,40)"/><text x="18.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="15" y="1284" width="2" height="15" fill="rgb(214,220,41)"/><text x="18.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="15" y="1300" width="2" height="15" fill="rgb(210,220,3)"/><text x="18.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="15" y="1316" width="2" height="15" fill="rgb(214,151,31)"/><text x="18.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py:84) (1 samples, 0.16%)</title><rect x="15" y="1332" width="2" height="15" fill="rgb(235,177,14)"/><text x="18.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="15" y="1348" width="2" height="15" fill="rgb(251,183,53)"/><text x="18.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="15" y="1364" width="2" height="15" fill="rgb(250,196,31)"/><text x="18.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="15" y="1380" width="2" height="15" fill="rgb(218,222,43)"/><text x="18.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="15" y="1396" width="2" height="15" fill="rgb(254,49,33)"/><text x="18.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="15" y="1412" width="2" height="15" fill="rgb(225,82,53)"/><text x="18.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py:10) (1 samples, 0.16%)</title><rect x="15" y="1428" width="2" height="15" fill="rgb(210,9,53)"/><text x="18.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="15" y="1444" width="2" height="15" fill="rgb(240,225,13)"/><text x="18.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="15" y="1460" width="2" height="15" fill="rgb(250,229,18)"/><text x="18.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="15" y="1476" width="2" height="15" fill="rgb(242,76,4)"/><text x="18.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.16%)</title><rect x="15" y="1492" width="2" height="15" fill="rgb(243,59,51)"/><text x="18.00" y="1502.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.16%)</title><rect x="15" y="1508" width="2" height="15" fill="rgb(212,29,33)"/><text x="18.00" y="1518.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.16%)</title><rect x="15" y="1524" width="2" height="15" fill="rgb(232,101,5)"/><text x="18.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:11) (2 samples, 0.32%)</title><rect x="17" y="1060" width="4" height="15" fill="rgb(212,154,33)"/><text x="20.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="17" y="1076" width="4" height="15" fill="rgb(218,205,2)"/><text x="20.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="17" y="1092" width="4" height="15" fill="rgb(220,183,12)"/><text x="20.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="17" y="1108" width="4" height="15" fill="rgb(212,172,43)"/><text x="20.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="17" y="1124" width="4" height="15" fill="rgb(253,17,48)"/><text x="20.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="17" y="1140" width="4" height="15" fill="rgb(238,110,45)"/><text x="20.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py:6) (2 samples, 0.32%)</title><rect x="17" y="1156" width="4" height="15" fill="rgb(232,45,13)"/><text x="20.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="17" y="1172" width="4" height="15" fill="rgb(224,152,23)"/><text x="20.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="17" y="1188" width="4" height="15" fill="rgb(242,69,21)"/><text x="20.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="17" y="1204" width="4" height="15" fill="rgb(208,215,37)"/><text x="20.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (2 samples, 0.32%)</title><rect x="17" y="1220" width="4" height="15" fill="rgb(247,142,9)"/><text x="20.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (2 samples, 0.32%)</title><rect x="17" y="1236" width="4" height="15" fill="rgb(220,188,7)"/><text x="20.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (2 samples, 0.32%)</title><rect x="17" y="1252" width="4" height="15" fill="rgb(232,67,23)"/><text x="20.00" y="1262.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (3 samples, 0.49%)</title><rect x="17" y="244" width="6" height="15" fill="rgb(215,129,29)"/><text x="20.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="17" y="260" width="6" height="15" fill="rgb(249,4,52)"/><text x="20.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.49%)</title><rect x="17" y="276" width="6" height="15" fill="rgb(220,96,54)"/><text x="20.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.49%)</title><rect x="17" y="292" width="6" height="15" fill="rgb(227,164,13)"/><text x="20.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.49%)</title><rect x="17" y="308" width="6" height="15" fill="rgb(234,39,39)"/><text x="20.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="17" y="324" width="6" height="15" fill="rgb(232,225,44)"/><text x="20.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (3 samples, 0.49%)</title><rect x="17" y="340" width="6" height="15" fill="rgb(223,74,20)"/><text x="20.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="17" y="356" width="6" height="15" fill="rgb(244,19,25)"/><text x="20.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.49%)</title><rect x="17" y="372" width="6" height="15" fill="rgb(224,7,40)"/><text x="20.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="17" y="388" width="6" height="15" fill="rgb(230,165,4)"/><text x="20.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="17" y="404" width="6" height="15" fill="rgb(217,63,46)"/><text x="20.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.49%)</title><rect x="17" y="420" width="6" height="15" fill="rgb(238,50,7)"/><text x="20.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.49%)</title><rect x="17" y="436" width="6" height="15" fill="rgb(226,62,52)"/><text x="20.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.49%)</title><rect x="17" y="452" width="6" height="15" fill="rgb(220,172,33)"/><text x="20.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="17" y="468" width="6" height="15" fill="rgb(206,184,51)"/><text x="20.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (3 samples, 0.49%)</title><rect x="17" y="484" width="6" height="15" fill="rgb(220,169,14)"/><text x="20.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="17" y="500" width="6" height="15" fill="rgb(240,29,27)"/><text x="20.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.49%)</title><rect x="17" y="516" width="6" height="15" fill="rgb(231,4,17)"/><text x="20.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.49%)</title><rect x="17" y="532" width="6" height="15" fill="rgb(237,115,9)"/><text x="20.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.49%)</title><rect x="17" y="548" width="6" height="15" fill="rgb(248,28,25)"/><text x="20.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="17" y="564" width="6" height="15" fill="rgb(225,120,52)"/><text x="20.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (3 samples, 0.49%)</title><rect x="17" y="580" width="6" height="15" fill="rgb(221,100,37)"/><text x="20.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="17" y="596" width="6" height="15" fill="rgb(251,154,28)"/><text x="20.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.49%)</title><rect x="17" y="612" width="6" height="15" fill="rgb(221,90,18)"/><text x="20.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="17" y="628" width="6" height="15" fill="rgb(215,37,9)"/><text x="20.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="17" y="644" width="6" height="15" fill="rgb(232,164,54)"/><text x="20.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.49%)</title><rect x="17" y="660" width="6" height="15" fill="rgb(254,129,42)"/><text x="20.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.49%)</title><rect x="17" y="676" width="6" height="15" fill="rgb(219,151,52)"/><text x="20.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.49%)</title><rect x="17" y="692" width="6" height="15" fill="rgb(205,149,6)"/><text x="20.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="17" y="708" width="6" height="15" fill="rgb(246,172,36)"/><text x="20.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (3 samples, 0.49%)</title><rect x="17" y="724" width="6" height="15" fill="rgb(214,29,24)"/><text x="20.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="17" y="740" width="6" height="15" fill="rgb(210,205,46)"/><text x="20.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.49%)</title><rect x="17" y="756" width="6" height="15" fill="rgb(215,102,33)"/><text x="20.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.49%)</title><rect x="17" y="772" width="6" height="15" fill="rgb(221,200,11)"/><text x="20.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.49%)</title><rect x="17" y="788" width="6" height="15" fill="rgb(206,131,32)"/><text x="20.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="17" y="804" width="6" height="15" fill="rgb(213,191,34)"/><text x="20.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (3 samples, 0.49%)</title><rect x="17" y="820" width="6" height="15" fill="rgb(222,39,40)"/><text x="20.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="17" y="836" width="6" height="15" fill="rgb(252,124,42)"/><text x="20.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.49%)</title><rect x="17" y="852" width="6" height="15" fill="rgb(240,55,45)"/><text x="20.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.49%)</title><rect x="17" y="868" width="6" height="15" fill="rgb(249,229,34)"/><text x="20.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.49%)</title><rect x="17" y="884" width="6" height="15" fill="rgb(227,124,36)"/><text x="20.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="17" y="900" width="6" height="15" fill="rgb(213,176,45)"/><text x="20.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (3 samples, 0.49%)</title><rect x="17" y="916" width="6" height="15" fill="rgb(210,212,18)"/><text x="20.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="17" y="932" width="6" height="15" fill="rgb(248,18,41)"/><text x="20.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.49%)</title><rect x="17" y="948" width="6" height="15" fill="rgb(246,129,11)"/><text x="20.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="17" y="964" width="6" height="15" fill="rgb(220,173,16)"/><text x="20.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="17" y="980" width="6" height="15" fill="rgb(229,117,12)"/><text x="20.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.49%)</title><rect x="17" y="996" width="6" height="15" fill="rgb(253,187,20)"/><text x="20.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.49%)</title><rect x="17" y="1012" width="6" height="15" fill="rgb(241,80,0)"/><text x="20.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.49%)</title><rect x="17" y="1028" width="6" height="15" fill="rgb(244,118,28)"/><text x="20.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="17" y="1044" width="6" height="15" fill="rgb(234,221,5)"/><text x="20.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:15) (1 samples, 0.16%)</title><rect x="21" y="1060" width="2" height="15" fill="rgb(213,174,38)"/><text x="24.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="21" y="1076" width="2" height="15" fill="rgb(247,178,5)"/><text x="24.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.16%)</title><rect x="21" y="1092" width="2" height="15" fill="rgb(215,192,52)"/><text x="24.00" y="1102.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.16%)</title><rect x="21" y="1108" width="2" height="15" fill="rgb(227,166,41)"/><text x="24.00" y="1118.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.16%)</title><rect x="21" y="1124" width="2" height="15" fill="rgb(248,131,4)"/><text x="24.00" y="1134.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.16%)</title><rect x="21" y="1140" width="2" height="15" fill="rgb(210,78,34)"/><text x="24.00" y="1150.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.16%)</title><rect x="21" y="1156" width="2" height="15" fill="rgb(254,139,0)"/><text x="24.00" y="1166.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.16%)</title><rect x="21" y="1172" width="2" height="15" fill="rgb(207,28,54)"/><text x="24.00" y="1182.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.16%)</title><rect x="21" y="1188" width="2" height="15" fill="rgb(251,158,23)"/><text x="24.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.16%)</title><rect x="23" y="628" width="2" height="15" fill="rgb(221,80,0)"/><text x="26.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="23" y="644" width="2" height="15" fill="rgb(219,36,0)"/><text x="26.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="23" y="660" width="2" height="15" fill="rgb(229,210,50)"/><text x="26.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="23" y="676" width="2" height="15" fill="rgb(236,119,31)"/><text x="26.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="23" y="692" width="2" height="15" fill="rgb(207,27,28)"/><text x="26.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="23" y="708" width="2" height="15" fill="rgb(215,112,1)"/><text x="26.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.16%)</title><rect x="23" y="724" width="2" height="15" fill="rgb(205,95,27)"/><text x="26.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="23" y="740" width="2" height="15" fill="rgb(241,119,30)"/><text x="26.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="23" y="756" width="2" height="15" fill="rgb(205,153,30)"/><text x="26.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="23" y="772" width="2" height="15" fill="rgb(213,71,51)"/><text x="26.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="23" y="788" width="2" height="15" fill="rgb(246,139,20)"/><text x="26.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="23" y="804" width="2" height="15" fill="rgb(232,117,51)"/><text x="26.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.16%)</title><rect x="23" y="820" width="2" height="15" fill="rgb(228,207,2)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="23" y="836" width="2" height="15" fill="rgb(238,175,16)"/><text x="26.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="23" y="852" width="2" height="15" fill="rgb(241,74,4)"/><text x="26.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="23" y="868" width="2" height="15" fill="rgb(232,90,51)"/><text x="26.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="23" y="884" width="2" height="15" fill="rgb(241,20,10)"/><text x="26.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="23" y="900" width="2" height="15" fill="rgb(211,136,2)"/><text x="26.00" y="910.50"></text></g><g><title>0x7efd662f640e (?) (1 samples, 0.16%)</title><rect x="23" y="916" width="2" height="15" fill="rgb(242,10,6)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="23" y="932" width="2" height="15" fill="rgb(237,37,16)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="23" y="948" width="2" height="15" fill="rgb(223,122,13)"/><text x="26.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="23" y="964" width="2" height="15" fill="rgb(251,142,43)"/><text x="26.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="23" y="980" width="2" height="15" fill="rgb(220,3,48)"/><text x="26.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="23" y="996" width="2" height="15" fill="rgb(245,146,53)"/><text x="26.00" y="1006.50"></text></g><g><title>0x7efd660afbb0 (?) (1 samples, 0.16%)</title><rect x="23" y="1012" width="2" height="15" fill="rgb(224,79,19)"/><text x="26.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="23" y="1028" width="2" height="15" fill="rgb(221,163,13)"/><text x="26.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="23" y="1044" width="2" height="15" fill="rgb(214,218,31)"/><text x="26.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.16%)</title><rect x="23" y="1060" width="2" height="15" fill="rgb(254,76,34)"/><text x="26.00" y="1070.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.16%)</title><rect x="23" y="1076" width="2" height="15" fill="rgb(254,107,43)"/><text x="26.00" y="1086.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.16%)</title><rect x="23" y="1092" width="2" height="15" fill="rgb(247,110,0)"/><text x="26.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="23" y="1108" width="2" height="15" fill="rgb(254,14,26)"/><text x="26.00" y="1118.50"></text></g><g><title>0x7efd65a35007 (?) (1 samples, 0.16%)</title><rect x="23" y="1124" width="2" height="15" fill="rgb(206,189,51)"/><text x="26.00" y="1134.50"></text></g><g><title>0x7efd90b24e76 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="23" y="1140" width="2" height="15" fill="rgb(244,2,21)"/><text x="26.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.16%)</title><rect x="25" y="724" width="2" height="15" fill="rgb(236,57,14)"/><text x="28.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="25" y="740" width="2" height="15" fill="rgb(209,139,0)"/><text x="28.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="25" y="756" width="2" height="15" fill="rgb(214,211,10)"/><text x="28.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="25" y="772" width="2" height="15" fill="rgb(243,112,22)"/><text x="28.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="25" y="788" width="2" height="15" fill="rgb(254,198,10)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="25" y="804" width="2" height="15" fill="rgb(209,185,19)"/><text x="28.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.16%)</title><rect x="25" y="820" width="2" height="15" fill="rgb(210,125,3)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="25" y="836" width="2" height="15" fill="rgb(240,27,15)"/><text x="28.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="25" y="852" width="2" height="15" fill="rgb(242,85,34)"/><text x="28.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="25" y="868" width="2" height="15" fill="rgb(240,17,47)"/><text x="28.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="25" y="884" width="2" height="15" fill="rgb(209,74,11)"/><text x="28.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="25" y="900" width="2" height="15" fill="rgb(231,95,26)"/><text x="28.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.16%)</title><rect x="25" y="916" width="2" height="15" fill="rgb(242,189,54)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="25" y="932" width="2" height="15" fill="rgb(223,1,26)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="25" y="948" width="2" height="15" fill="rgb(207,136,14)"/><text x="28.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="25" y="964" width="2" height="15" fill="rgb(234,36,29)"/><text x="28.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="25" y="980" width="2" height="15" fill="rgb(210,181,49)"/><text x="28.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="25" y="996" width="2" height="15" fill="rgb(252,157,34)"/><text x="28.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.16%)</title><rect x="25" y="1012" width="2" height="15" fill="rgb(226,194,23)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="25" y="1028" width="2" height="15" fill="rgb(238,42,29)"/><text x="28.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="25" y="1044" width="2" height="15" fill="rgb(224,27,47)"/><text x="28.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="25" y="1060" width="2" height="15" fill="rgb(226,105,26)"/><text x="28.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="25" y="1076" width="2" height="15" fill="rgb(234,25,30)"/><text x="28.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="25" y="1092" width="2" height="15" fill="rgb(210,2,42)"/><text x="28.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.16%)</title><rect x="25" y="1108" width="2" height="15" fill="rgb(230,42,18)"/><text x="28.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="25" y="1124" width="2" height="15" fill="rgb(230,79,33)"/><text x="28.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="25" y="1140" width="2" height="15" fill="rgb(240,206,4)"/><text x="28.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="25" y="1156" width="2" height="15" fill="rgb(217,143,18)"/><text x="28.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="25" y="1172" width="2" height="15" fill="rgb(205,91,41)"/><text x="28.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="25" y="1188" width="2" height="15" fill="rgb(241,184,11)"/><text x="28.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.16%)</title><rect x="25" y="1204" width="2" height="15" fill="rgb(245,29,20)"/><text x="28.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="25" y="1220" width="2" height="15" fill="rgb(221,113,9)"/><text x="28.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="25" y="1236" width="2" height="15" fill="rgb(230,7,30)"/><text x="28.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="25" y="1252" width="2" height="15" fill="rgb(241,82,46)"/><text x="28.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="25" y="1268" width="2" height="15" fill="rgb(214,32,2)"/><text x="28.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="25" y="1284" width="2" height="15" fill="rgb(217,4,9)"/><text x="28.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.16%)</title><rect x="25" y="1300" width="2" height="15" fill="rgb(219,136,16)"/><text x="28.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="25" y="1316" width="2" height="15" fill="rgb(218,165,16)"/><text x="28.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="25" y="1332" width="2" height="15" fill="rgb(240,20,40)"/><text x="28.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="25" y="1348" width="2" height="15" fill="rgb(230,75,30)"/><text x="28.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="25" y="1364" width="2" height="15" fill="rgb(214,227,52)"/><text x="28.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="25" y="1380" width="2" height="15" fill="rgb(207,141,6)"/><text x="28.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.16%)</title><rect x="25" y="1396" width="2" height="15" fill="rgb(239,8,51)"/><text x="28.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="25" y="1412" width="2" height="15" fill="rgb(218,47,31)"/><text x="28.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="25" y="1428" width="2" height="15" fill="rgb(232,147,4)"/><text x="28.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="25" y="1444" width="2" height="15" fill="rgb(243,52,42)"/><text x="28.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="25" y="1460" width="2" height="15" fill="rgb(245,100,42)"/><text x="28.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="25" y="1476" width="2" height="15" fill="rgb(212,165,26)"/><text x="28.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.16%)</title><rect x="25" y="1492" width="2" height="15" fill="rgb(244,162,28)"/><text x="28.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="25" y="1508" width="2" height="15" fill="rgb(221,4,48)"/><text x="28.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="25" y="1524" width="2" height="15" fill="rgb(244,93,10)"/><text x="28.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="25" y="1540" width="2" height="15" fill="rgb(242,25,4)"/><text x="28.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="25" y="1556" width="2" height="15" fill="rgb(245,177,26)"/><text x="28.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="25" y="1572" width="2" height="15" fill="rgb(209,67,24)"/><text x="28.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="25" y="1588" width="2" height="15" fill="rgb(251,69,17)"/><text x="28.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="25" y="1604" width="2" height="15" fill="rgb(241,161,51)"/><text x="28.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="25" y="1620" width="2" height="15" fill="rgb(210,137,43)"/><text x="28.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.16%)</title><rect x="25" y="1636" width="2" height="15" fill="rgb(242,126,22)"/><text x="28.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="25" y="1652" width="2" height="15" fill="rgb(232,107,13)"/><text x="28.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="25" y="1668" width="2" height="15" fill="rgb(219,222,32)"/><text x="28.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="25" y="1684" width="2" height="15" fill="rgb(254,11,2)"/><text x="28.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="25" y="1700" width="2" height="15" fill="rgb(240,177,35)"/><text x="28.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="25" y="1716" width="2" height="15" fill="rgb(208,162,32)"/><text x="28.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="25" y="1732" width="2" height="15" fill="rgb(230,179,21)"/><text x="28.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="25" y="1748" width="2" height="15" fill="rgb(226,106,34)"/><text x="28.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.16%)</title><rect x="25" y="1764" width="2" height="15" fill="rgb(226,162,53)"/><text x="28.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="25" y="1780" width="2" height="15" fill="rgb(241,24,49)"/><text x="28.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="25" y="1796" width="2" height="15" fill="rgb(215,196,32)"/><text x="28.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="25" y="1812" width="2" height="15" fill="rgb(227,118,21)"/><text x="28.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="25" y="1828" width="2" height="15" fill="rgb(231,209,8)"/><text x="28.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="25" y="1844" width="2" height="15" fill="rgb(213,109,1)"/><text x="28.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (1 samples, 0.16%)</title><rect x="25" y="1860" width="2" height="15" fill="rgb(253,41,35)"/><text x="28.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="25" y="1876" width="2" height="15" fill="rgb(206,108,28)"/><text x="28.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="25" y="1892" width="2" height="15" fill="rgb(244,109,22)"/><text x="28.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="25" y="1908" width="2" height="15" fill="rgb(249,142,35)"/><text x="28.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.16%)</title><rect x="25" y="1924" width="2" height="15" fill="rgb(212,57,42)"/><text x="28.00" y="1934.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.16%)</title><rect x="25" y="1940" width="2" height="15" fill="rgb(228,89,14)"/><text x="28.00" y="1950.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.16%)</title><rect x="25" y="1956" width="2" height="15" fill="rgb(239,112,3)"/><text x="28.00" y="1966.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.49%)</title><rect x="23" y="532" width="6" height="15" fill="rgb(226,120,39)"/><text x="26.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="23" y="548" width="6" height="15" fill="rgb(227,158,34)"/><text x="26.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.49%)</title><rect x="23" y="564" width="6" height="15" fill="rgb(231,175,38)"/><text x="26.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.49%)</title><rect x="23" y="580" width="6" height="15" fill="rgb(249,39,23)"/><text x="26.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.49%)</title><rect x="23" y="596" width="6" height="15" fill="rgb(235,220,23)"/><text x="26.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="23" y="612" width="6" height="15" fill="rgb(237,73,3)"/><text x="26.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.32%)</title><rect x="25" y="628" width="4" height="15" fill="rgb(213,100,50)"/><text x="28.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="25" y="644" width="4" height="15" fill="rgb(216,49,1)"/><text x="28.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="25" y="660" width="4" height="15" fill="rgb(234,212,35)"/><text x="28.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="25" y="676" width="4" height="15" fill="rgb(249,48,26)"/><text x="28.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="25" y="692" width="4" height="15" fill="rgb(218,143,2)"/><text x="28.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="25" y="708" width="4" height="15" fill="rgb(240,121,30)"/><text x="28.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.16%)</title><rect x="27" y="724" width="2" height="15" fill="rgb(235,171,54)"/><text x="30.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="27" y="740" width="2" height="15" fill="rgb(215,44,50)"/><text x="30.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="27" y="756" width="2" height="15" fill="rgb(247,225,39)"/><text x="30.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="27" y="772" width="2" height="15" fill="rgb(228,64,5)"/><text x="30.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="27" y="788" width="2" height="15" fill="rgb(239,76,9)"/><text x="30.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="27" y="804" width="2" height="15" fill="rgb(244,114,34)"/><text x="30.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="27" y="820" width="2" height="15" fill="rgb(245,12,47)"/><text x="30.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="27" y="836" width="2" height="15" fill="rgb(253,10,35)"/><text x="30.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="27" y="852" width="2" height="15" fill="rgb(254,44,15)"/><text x="30.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:10) (1 samples, 0.16%)</title><rect x="27" y="868" width="2" height="15" fill="rgb(252,38,54)"/><text x="30.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="27" y="884" width="2" height="15" fill="rgb(245,134,46)"/><text x="30.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="27" y="900" width="2" height="15" fill="rgb(246,162,13)"/><text x="30.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="27" y="916" width="2" height="15" fill="rgb(223,114,52)"/><text x="30.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.16%)</title><rect x="27" y="932" width="2" height="15" fill="rgb(245,118,36)"/><text x="30.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:812) (1 samples, 0.16%)</title><rect x="27" y="948" width="2" height="15" fill="rgb(244,105,53)"/><text x="30.00" y="958.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;:953) (1 samples, 0.16%)</title><rect x="27" y="964" width="2" height="15" fill="rgb(217,157,25)"/><text x="30.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.16%)</title><rect x="27" y="980" width="2" height="15" fill="rgb(235,4,45)"/><text x="30.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.16%)</title><rect x="27" y="996" width="2" height="15" fill="rgb(206,65,27)"/><text x="30.00" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 0.65%)</title><rect x="23" y="436" width="8" height="15" fill="rgb(238,47,35)"/><text x="26.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.65%)</title><rect x="23" y="452" width="8" height="15" fill="rgb(218,19,14)"/><text x="26.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.65%)</title><rect x="23" y="468" width="8" height="15" fill="rgb(207,227,7)"/><text x="26.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.65%)</title><rect x="23" y="484" width="8" height="15" fill="rgb(248,132,41)"/><text x="26.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.65%)</title><rect x="23" y="500" width="8" height="15" fill="rgb(218,169,8)"/><text x="26.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.65%)</title><rect x="23" y="516" width="8" height="15" fill="rgb(250,71,30)"/><text x="26.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:20) (1 samples, 0.16%)</title><rect x="29" y="532" width="2" height="15" fill="rgb(220,134,39)"/><text x="32.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="29" y="548" width="2" height="15" fill="rgb(237,51,8)"/><text x="32.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="29" y="564" width="2" height="15" fill="rgb(241,79,16)"/><text x="32.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="29" y="580" width="2" height="15" fill="rgb(238,86,17)"/><text x="32.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="29" y="596" width="2" height="15" fill="rgb(235,31,1)"/><text x="32.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="29" y="612" width="2" height="15" fill="rgb(242,103,54)"/><text x="32.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py:10) (1 samples, 0.16%)</title><rect x="29" y="628" width="2" height="15" fill="rgb(238,170,48)"/><text x="32.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="29" y="644" width="2" height="15" fill="rgb(228,192,35)"/><text x="32.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="29" y="660" width="2" height="15" fill="rgb(217,131,42)"/><text x="32.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="29" y="676" width="2" height="15" fill="rgb(247,148,24)"/><text x="32.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="29" y="692" width="2" height="15" fill="rgb(215,19,42)"/><text x="32.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="29" y="708" width="2" height="15" fill="rgb(208,57,30)"/><text x="32.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="29" y="724" width="2" height="15" fill="rgb(214,174,31)"/><text x="32.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="29" y="740" width="2" height="15" fill="rgb(214,85,39)"/><text x="32.00" y="750.50"></text></g><g><title>&lt;module&gt; (onnx/numpy_helper.py:15) (1 samples, 0.16%)</title><rect x="29" y="756" width="2" height="15" fill="rgb(211,28,12)"/><text x="32.00" y="766.50"></text></g><g><title>system (platform.py:1068) (1 samples, 0.16%)</title><rect x="29" y="772" width="2" height="15" fill="rgb(208,27,54)"/><text x="32.00" y="782.50"></text></g><g><title>uname (platform.py:1034) (1 samples, 0.16%)</title><rect x="29" y="788" width="2" height="15" fill="rgb(217,158,37)"/><text x="32.00" y="798.50"></text></g><g><title>_syscmd_uname (platform.py:788) (1 samples, 0.16%)</title><rect x="29" y="804" width="2" height="15" fill="rgb(227,190,1)"/><text x="32.00" y="814.50"></text></g><g><title>popen (os.py:989) (1 samples, 0.16%)</title><rect x="29" y="820" width="2" height="15" fill="rgb(236,39,7)"/><text x="32.00" y="830.50"></text></g><g><title>__init__ (subprocess.py:775) (1 samples, 0.16%)</title><rect x="29" y="836" width="2" height="15" fill="rgb(212,194,17)"/><text x="32.00" y="846.50"></text></g><g><title>_execute_child (subprocess.py:1453) (1 samples, 0.16%)</title><rect x="29" y="852" width="2" height="15" fill="rgb(236,47,21)"/><text x="32.00" y="862.50"></text></g><g><title>subprocess_fork_exec (_posixsubprocess.c:687) (1 samples, 0.16%)</title><rect x="29" y="868" width="2" height="15" fill="rgb(238,138,22)"/><text x="32.00" y="878.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.16%)</title><rect x="29" y="884" width="2" height="15" fill="rgb(207,6,54)"/><text x="32.00" y="894.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:4) (12 samples, 1.95%)</title><rect x="10" y="52" width="22" height="15" fill="rgb(212,31,4)"/><text x="13.00" y="62.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 1.95%)</title><rect x="10" y="68" width="22" height="15" fill="rgb(222,86,50)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 1.95%)</title><rect x="10" y="84" width="22" height="15" fill="rgb(250,91,33)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 1.95%)</title><rect x="10" y="100" width="22" height="15" fill="rgb(241,169,16)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 1.95%)</title><rect x="10" y="116" width="22" height="15" fill="rgb(232,127,22)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 1.95%)</title><rect x="10" y="132" width="22" height="15" fill="rgb(210,180,35)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:7) (8 samples, 1.30%)</title><rect x="17" y="148" width="15" height="15" fill="rgb(216,85,18)"/><text x="20.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.30%)</title><rect x="17" y="164" width="15" height="15" fill="rgb(224,227,13)"/><text x="20.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.30%)</title><rect x="17" y="180" width="15" height="15" fill="rgb(234,58,41)"/><text x="20.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.30%)</title><rect x="17" y="196" width="15" height="15" fill="rgb(211,153,38)"/><text x="20.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.30%)</title><rect x="17" y="212" width="15" height="15" fill="rgb(246,55,21)"/><text x="20.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.30%)</title><rect x="17" y="228" width="15" height="15" fill="rgb(221,9,11)"/><text x="20.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 0.81%)</title><rect x="23" y="244" width="9" height="15" fill="rgb(249,184,34)"/><text x="26.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.81%)</title><rect x="23" y="260" width="9" height="15" fill="rgb(228,75,39)"/><text x="26.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.81%)</title><rect x="23" y="276" width="9" height="15" fill="rgb(221,80,53)"/><text x="26.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.81%)</title><rect x="23" y="292" width="9" height="15" fill="rgb(244,175,37)"/><text x="26.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.81%)</title><rect x="23" y="308" width="9" height="15" fill="rgb(212,183,23)"/><text x="26.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.81%)</title><rect x="23" y="324" width="9" height="15" fill="rgb(241,8,36)"/><text x="26.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 0.81%)</title><rect x="23" y="340" width="9" height="15" fill="rgb(253,187,21)"/><text x="26.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.81%)</title><rect x="23" y="356" width="9" height="15" fill="rgb(232,13,30)"/><text x="26.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.81%)</title><rect x="23" y="372" width="9" height="15" fill="rgb(238,207,34)"/><text x="26.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.81%)</title><rect x="23" y="388" width="9" height="15" fill="rgb(248,101,34)"/><text x="26.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.81%)</title><rect x="23" y="404" width="9" height="15" fill="rgb(208,101,7)"/><text x="26.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.81%)</title><rect x="23" y="420" width="9" height="15" fill="rgb(231,147,41)"/><text x="26.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.16%)</title><rect x="31" y="436" width="1" height="15" fill="rgb(236,130,42)"/><text x="34.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="31" y="452" width="1" height="15" fill="rgb(226,137,11)"/><text x="34.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="31" y="468" width="1" height="15" fill="rgb(231,29,53)"/><text x="34.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="31" y="484" width="1" height="15" fill="rgb(237,84,20)"/><text x="34.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="31" y="500" width="1" height="15" fill="rgb(217,193,13)"/><text x="34.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="31" y="516" width="1" height="15" fill="rgb(253,93,28)"/><text x="34.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="31" y="532" width="1" height="15" fill="rgb(216,169,20)"/><text x="34.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="31" y="548" width="1" height="15" fill="rgb(253,82,31)"/><text x="34.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="31" y="564" width="1" height="15" fill="rgb(212,166,24)"/><text x="34.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.16%)</title><rect x="31" y="580" width="1" height="15" fill="rgb(242,54,49)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="31" y="596" width="1" height="15" fill="rgb(240,164,0)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="31" y="612" width="1" height="15" fill="rgb(215,103,11)"/><text x="34.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="31" y="628" width="1" height="15" fill="rgb(227,57,16)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="31" y="644" width="1" height="15" fill="rgb(241,190,5)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="31" y="660" width="1" height="15" fill="rgb(205,3,40)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.16%)</title><rect x="31" y="676" width="1" height="15" fill="rgb(253,161,13)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="31" y="692" width="1" height="15" fill="rgb(226,138,34)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="31" y="708" width="1" height="15" fill="rgb(213,53,25)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="31" y="724" width="1" height="15" fill="rgb(225,106,19)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="31" y="740" width="1" height="15" fill="rgb(251,37,5)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="31" y="756" width="1" height="15" fill="rgb(214,204,6)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.16%)</title><rect x="31" y="772" width="1" height="15" fill="rgb(226,100,20)"/><text x="34.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="31" y="788" width="1" height="15" fill="rgb(240,76,34)"/><text x="34.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="31" y="804" width="1" height="15" fill="rgb(214,191,3)"/><text x="34.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="31" y="820" width="1" height="15" fill="rgb(209,1,1)"/><text x="34.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="31" y="836" width="1" height="15" fill="rgb(225,178,10)"/><text x="34.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="31" y="852" width="1" height="15" fill="rgb(244,182,50)"/><text x="34.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.16%)</title><rect x="31" y="868" width="1" height="15" fill="rgb(219,211,47)"/><text x="34.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="31" y="884" width="1" height="15" fill="rgb(254,160,46)"/><text x="34.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="31" y="900" width="1" height="15" fill="rgb(252,192,2)"/><text x="34.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="31" y="916" width="1" height="15" fill="rgb(243,26,24)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="31" y="932" width="1" height="15" fill="rgb(206,121,11)"/><text x="34.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="31" y="948" width="1" height="15" fill="rgb(230,113,18)"/><text x="34.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="31" y="964" width="1" height="15" fill="rgb(208,28,34)"/><text x="34.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="31" y="980" width="1" height="15" fill="rgb(231,52,10)"/><text x="34.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="31" y="996" width="1" height="15" fill="rgb(215,35,49)"/><text x="34.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.16%)</title><rect x="31" y="1012" width="1" height="15" fill="rgb(251,6,1)"/><text x="34.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="31" y="1028" width="1" height="15" fill="rgb(226,55,27)"/><text x="34.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="31" y="1044" width="1" height="15" fill="rgb(237,143,41)"/><text x="34.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="31" y="1060" width="1" height="15" fill="rgb(249,195,50)"/><text x="34.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="31" y="1076" width="1" height="15" fill="rgb(205,45,13)"/><text x="34.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="31" y="1092" width="1" height="15" fill="rgb(248,139,30)"/><text x="34.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.16%)</title><rect x="31" y="1108" width="1" height="15" fill="rgb(233,229,45)"/><text x="34.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="31" y="1124" width="1" height="15" fill="rgb(222,71,30)"/><text x="34.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="31" y="1140" width="1" height="15" fill="rgb(205,200,15)"/><text x="34.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="31" y="1156" width="1" height="15" fill="rgb(234,59,0)"/><text x="34.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="31" y="1172" width="1" height="15" fill="rgb(229,201,7)"/><text x="34.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="31" y="1188" width="1" height="15" fill="rgb(249,83,7)"/><text x="34.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="31" y="1204" width="1" height="15" fill="rgb(210,149,51)"/><text x="34.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="31" y="1220" width="1" height="15" fill="rgb(214,199,52)"/><text x="34.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.16%)</title><rect x="31" y="1236" width="1" height="15" fill="rgb(247,190,51)"/><text x="34.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="31" y="1252" width="1" height="15" fill="rgb(206,195,12)"/><text x="34.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="31" y="1268" width="1" height="15" fill="rgb(225,98,40)"/><text x="34.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="31" y="1284" width="1" height="15" fill="rgb(207,213,9)"/><text x="34.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="31" y="1300" width="1" height="15" fill="rgb(236,4,32)"/><text x="34.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="31" y="1316" width="1" height="15" fill="rgb(209,119,36)"/><text x="34.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="31" y="1332" width="1" height="15" fill="rgb(218,0,16)"/><text x="34.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="31" y="1348" width="1" height="15" fill="rgb(249,143,8)"/><text x="34.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.16%)</title><rect x="31" y="1364" width="1" height="15" fill="rgb(223,148,36)"/><text x="34.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="31" y="1380" width="1" height="15" fill="rgb(217,38,45)"/><text x="34.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="31" y="1396" width="1" height="15" fill="rgb(238,206,1)"/><text x="34.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="31" y="1412" width="1" height="15" fill="rgb(238,119,0)"/><text x="34.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="31" y="1428" width="1" height="15" fill="rgb(233,141,18)"/><text x="34.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="31" y="1444" width="1" height="15" fill="rgb(207,173,30)"/><text x="34.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.16%)</title><rect x="31" y="1460" width="1" height="15" fill="rgb(207,150,26)"/><text x="34.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="31" y="1476" width="1" height="15" fill="rgb(248,139,22)"/><text x="34.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="31" y="1492" width="1" height="15" fill="rgb(216,189,30)"/><text x="34.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="31" y="1508" width="1" height="15" fill="rgb(252,187,6)"/><text x="34.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="31" y="1524" width="1" height="15" fill="rgb(251,39,5)"/><text x="34.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="31" y="1540" width="1" height="15" fill="rgb(232,225,51)"/><text x="34.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.16%)</title><rect x="31" y="1556" width="1" height="15" fill="rgb(227,214,53)"/><text x="34.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.16%)</title><rect x="31" y="1572" width="1" height="15" fill="rgb(227,47,52)"/><text x="34.00" y="1582.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.16%)</title><rect x="31" y="1588" width="1" height="15" fill="rgb(210,33,39)"/><text x="34.00" y="1598.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.16%)</title><rect x="31" y="1604" width="1" height="15" fill="rgb(215,150,37)"/><text x="34.00" y="1614.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.16%)</title><rect x="31" y="1620" width="1" height="15" fill="rgb(214,171,10)"/><text x="34.00" y="1630.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.16%)</title><rect x="31" y="1636" width="1" height="15" fill="rgb(233,180,3)"/><text x="34.00" y="1646.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.16%)</title><rect x="34" y="116" width="2" height="15" fill="rgb(212,193,41)"/><text x="37.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.16%)</title><rect x="34" y="132" width="2" height="15" fill="rgb(230,181,25)"/><text x="37.00" y="142.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.16%)</title><rect x="34" y="148" width="2" height="15" fill="rgb(253,56,18)"/><text x="37.00" y="158.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.16%)</title><rect x="34" y="164" width="2" height="15" fill="rgb(211,99,51)"/><text x="37.00" y="174.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.16%)</title><rect x="34" y="180" width="2" height="15" fill="rgb(230,222,33)"/><text x="37.00" y="190.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.16%)</title><rect x="34" y="196" width="2" height="15" fill="rgb(240,83,21)"/><text x="37.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.16%)</title><rect x="42" y="164" width="2" height="15" fill="rgb(254,122,9)"/><text x="45.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.16%)</title><rect x="42" y="180" width="2" height="15" fill="rgb(224,229,30)"/><text x="45.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.32%)</title><rect x="48" y="180" width="4" height="15" fill="rgb(225,127,28)"/><text x="51.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.16%)</title><rect x="54" y="196" width="1" height="15" fill="rgb(254,194,30)"/><text x="57.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.49%)</title><rect x="52" y="180" width="5" height="15" fill="rgb(242,47,39)"/><text x="55.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.16%)</title><rect x="55" y="196" width="2" height="15" fill="rgb(243,20,15)"/><text x="58.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (10 samples, 1.62%)</title><rect x="40" y="148" width="19" height="15" fill="rgb(212,105,2)"/><text x="43.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (8 samples, 1.30%)</title><rect x="44" y="164" width="15" height="15" fill="rgb(213,80,50)"/><text x="47.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.16%)</title><rect x="57" y="180" width="2" height="15" fill="rgb(218,99,23)"/><text x="60.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.16%)</title><rect x="57" y="196" width="2" height="15" fill="rgb(251,40,19)"/><text x="60.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.16%)</title><rect x="59" y="180" width="2" height="15" fill="rgb(222,223,21)"/><text x="62.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (3 samples, 0.49%)</title><rect x="61" y="180" width="6" height="15" fill="rgb(232,70,11)"/><text x="64.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (2 samples, 0.32%)</title><rect x="63" y="196" width="4" height="15" fill="rgb(216,154,48)"/><text x="66.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:477) (1 samples, 0.16%)</title><rect x="69" y="196" width="2" height="15" fill="rgb(250,111,46)"/><text x="72.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 0.49%)</title><rect x="67" y="180" width="6" height="15" fill="rgb(251,222,50)"/><text x="70.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.16%)</title><rect x="71" y="196" width="2" height="15" fill="rgb(220,22,1)"/><text x="74.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (6 samples, 0.97%)</title><rect x="77" y="212" width="11" height="15" fill="rgb(224,79,46)"/><text x="80.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (11 samples, 1.79%)</title><rect x="73" y="180" width="21" height="15" fill="rgb(245,158,17)"/><text x="76.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (9 samples, 1.46%)</title><rect x="77" y="196" width="17" height="15" fill="rgb(218,54,40)"/><text x="80.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:189) (3 samples, 0.49%)</title><rect x="88" y="212" width="6" height="15" fill="rgb(208,190,36)"/><text x="91.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (4 samples, 0.65%)</title><rect x="94" y="180" width="7" height="15" fill="rgb(229,108,2)"/><text x="97.00" y="190.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.16%)</title><rect x="100" y="196" width="1" height="15" fill="rgb(226,179,3)"/><text x="103.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.16%)</title><rect x="103" y="212" width="2" height="15" fill="rgb(219,119,1)"/><text x="106.00" y="222.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c:326) (1 samples, 0.16%)</title><rect x="103" y="228" width="2" height="15" fill="rgb(215,151,19)"/><text x="106.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 0.49%)</title><rect x="101" y="180" width="6" height="15" fill="rgb(228,42,3)"/><text x="104.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.32%)</title><rect x="103" y="196" width="4" height="15" fill="rgb(228,85,31)"/><text x="106.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1697) (1 samples, 0.16%)</title><rect x="105" y="212" width="2" height="15" fill="rgb(245,87,18)"/><text x="108.00" y="222.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1473) (1 samples, 0.16%)</title><rect x="105" y="228" width="2" height="15" fill="rgb(249,208,25)"/><text x="108.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.16%)</title><rect x="107" y="180" width="2" height="15" fill="rgb(253,97,1)"/><text x="110.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.16%)</title><rect x="107" y="196" width="2" height="15" fill="rgb(251,193,12)"/><text x="110.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.16%)</title><rect x="109" y="180" width="2" height="15" fill="rgb(232,3,33)"/><text x="112.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.16%)</title><rect x="109" y="196" width="2" height="15" fill="rgb(210,95,32)"/><text x="112.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.16%)</title><rect x="111" y="180" width="2" height="15" fill="rgb(235,120,13)"/><text x="114.00" y="190.50"></text></g><g><title>array_ndim_get (getset.c:30) (1 samples, 0.16%)</title><rect x="111" y="196" width="2" height="15" fill="rgb(223,223,41)"/><text x="114.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (6 samples, 0.97%)</title><rect x="130" y="212" width="12" height="15" fill="rgb(220,158,46)"/><text x="133.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (17 samples, 2.76%)</title><rect x="113" y="180" width="33" height="15" fill="rgb(231,159,35)"/><text x="116.00" y="190.50">ch..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (15 samples, 2.44%)</title><rect x="117" y="196" width="29" height="15" fill="rgb(252,74,19)"/><text x="120.00" y="206.50">_a..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.32%)</title><rect x="142" y="212" width="4" height="15" fill="rgb(226,162,16)"/><text x="145.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (5 samples, 0.81%)</title><rect x="147" y="196" width="10" height="15" fill="rgb(223,173,41)"/><text x="150.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.16%)</title><rect x="157" y="196" width="2" height="15" fill="rgb(223,166,27)"/><text x="160.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.16%)</title><rect x="159" y="196" width="2" height="15" fill="rgb(245,149,23)"/><text x="162.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.16%)</title><rect x="159" y="212" width="2" height="15" fill="rgb(212,96,11)"/><text x="162.00" y="222.50"></text></g><g><title>0x7efd90b2f12f (libc-2.29.so) (1 samples, 0.16%)</title><rect x="159" y="228" width="2" height="15" fill="rgb(206,64,50)"/><text x="162.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (15 samples, 2.44%)</title><rect x="146" y="180" width="28" height="15" fill="rgb(209,113,38)"/><text x="149.00" y="190.50">c..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (7 samples, 1.14%)</title><rect x="161" y="196" width="13" height="15" fill="rgb(252,146,41)"/><text x="164.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 0.49%)</title><rect x="168" y="212" width="6" height="15" fill="rgb(240,158,52)"/><text x="171.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.32%)</title><rect x="170" y="228" width="4" height="15" fill="rgb(230,213,5)"/><text x="173.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.16%)</title><rect x="174" y="180" width="2" height="15" fill="rgb(206,223,21)"/><text x="177.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:574) (1 samples, 0.16%)</title><rect x="176" y="180" width="2" height="15" fill="rgb(238,180,49)"/><text x="179.00" y="190.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (63 samples, 10.23%)</title><rect x="59" y="164" width="121" height="15" fill="rgb(246,7,50)"/><text x="62.00" y="174.50">_validate_X_pre..</text></g><g><title>check_array (sklearn/utils/validation.py:585) (1 samples, 0.16%)</title><rect x="178" y="180" width="2" height="15" fill="rgb(245,69,2)"/><text x="181.00" y="190.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (1 samples, 0.16%)</title><rect x="180" y="164" width="2" height="15" fill="rgb(219,224,23)"/><text x="183.00" y="174.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (65 samples, 10.55%)</title><rect x="59" y="148" width="125" height="15" fill="rgb(206,123,22)"/><text x="62.00" y="158.50">predict (sklear..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (1 samples, 0.16%)</title><rect x="182" y="164" width="2" height="15" fill="rgb(207,110,37)"/><text x="185.00" y="174.50"></text></g><g><title>0x7efd6b1881dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="184" y="212" width="4" height="15" fill="rgb(207,225,4)"/><text x="187.00" y="222.50"></text></g><g><title>array_descr_get (getset.c:207) (1 samples, 0.16%)</title><rect x="186" y="228" width="2" height="15" fill="rgb(206,120,23)"/><text x="189.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c:753) (1 samples, 0.16%)</title><rect x="188" y="276" width="2" height="15" fill="rgb(245,101,17)"/><text x="191.00" y="286.50"></text></g><g><title>0x7efd6b16c666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.49%)</title><rect x="188" y="244" width="5" height="15" fill="rgb(240,43,18)"/><text x="191.00" y="254.50"></text></g><g><title>0x7efd6b1622fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.49%)</title><rect x="188" y="260" width="5" height="15" fill="rgb(216,165,47)"/><text x="191.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.32%)</title><rect x="190" y="276" width="3" height="15" fill="rgb(254,57,36)"/><text x="193.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (2 samples, 0.32%)</title><rect x="190" y="292" width="3" height="15" fill="rgb(252,128,18)"/><text x="193.00" y="302.50"></text></g><g><title>0x7efd6b1882df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.65%)</title><rect x="188" y="212" width="7" height="15" fill="rgb(221,38,11)"/><text x="191.00" y="222.50"></text></g><g><title>0x7efd6b16cd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.65%)</title><rect x="188" y="228" width="7" height="15" fill="rgb(231,110,27)"/><text x="191.00" y="238.50"></text></g><g><title>0x7efd6b16c6cf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="193" y="244" width="2" height="15" fill="rgb(210,95,3)"/><text x="196.00" y="254.50"></text></g><g><title>0x7efd6b188364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="195" y="212" width="2" height="15" fill="rgb(249,54,12)"/><text x="198.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.16%)</title><rect x="195" y="228" width="2" height="15" fill="rgb(252,127,52)"/><text x="198.00" y="238.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (3 samples, 0.49%)</title><rect x="197" y="228" width="6" height="15" fill="rgb(225,195,6)"/><text x="200.00" y="238.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.16%)</title><rect x="201" y="244" width="2" height="15" fill="rgb(226,84,45)"/><text x="204.00" y="254.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:252) (1 samples, 0.16%)</title><rect x="203" y="308" width="2" height="15" fill="rgb(225,85,10)"/><text x="206.00" y="318.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (3 samples, 0.49%)</title><rect x="203" y="292" width="6" height="15" fill="rgb(224,79,10)"/><text x="206.00" y="302.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (2 samples, 0.32%)</title><rect x="205" y="308" width="4" height="15" fill="rgb(235,72,10)"/><text x="208.00" y="318.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (2 samples, 0.32%)</title><rect x="205" y="324" width="4" height="15" fill="rgb(242,147,25)"/><text x="208.00" y="334.50"></text></g><g><title>0x7efd90b2f103 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="205" y="340" width="4" height="15" fill="rgb(230,73,23)"/><text x="208.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:140) (1 samples, 0.16%)</title><rect x="209" y="292" width="2" height="15" fill="rgb(207,54,29)"/><text x="212.00" y="302.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (2 samples, 0.32%)</title><rect x="211" y="308" width="3" height="15" fill="rgb(242,145,27)"/><text x="214.00" y="318.50"></text></g><g><title>0x7efd6b188592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.62%)</title><rect x="197" y="212" width="19" height="15" fill="rgb(249,64,17)"/><text x="200.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (7 samples, 1.14%)</title><rect x="203" y="228" width="13" height="15" fill="rgb(209,154,2)"/><text x="206.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (7 samples, 1.14%)</title><rect x="203" y="244" width="13" height="15" fill="rgb(242,42,54)"/><text x="206.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (7 samples, 1.14%)</title><rect x="203" y="260" width="13" height="15" fill="rgb(210,61,10)"/><text x="206.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (7 samples, 1.14%)</title><rect x="203" y="276" width="13" height="15" fill="rgb(211,165,12)"/><text x="206.00" y="286.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:142) (3 samples, 0.49%)</title><rect x="211" y="292" width="5" height="15" fill="rgb(252,189,2)"/><text x="214.00" y="302.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="214" y="308" width="2" height="15" fill="rgb(238,130,6)"/><text x="217.00" y="318.50"></text></g><g><title>0x7efd6b188698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="216" y="212" width="4" height="15" fill="rgb(233,177,50)"/><text x="219.00" y="222.50"></text></g><g><title>0x7efd6b18869b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="220" y="212" width="4" height="15" fill="rgb(205,166,3)"/><text x="223.00" y="222.50"></text></g><g><title>0x7efd6b1886aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.81%)</title><rect x="224" y="212" width="10" height="15" fill="rgb(250,29,32)"/><text x="227.00" y="222.50"></text></g><g><title>0x7efd6b1886ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.49%)</title><rect x="234" y="212" width="5" height="15" fill="rgb(227,216,7)"/><text x="237.00" y="222.50"></text></g><g><title>0x7efd6b1886b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="239" y="212" width="4" height="15" fill="rgb(218,129,15)"/><text x="242.00" y="222.50"></text></g><g><title>0x7efd6b1886c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.49%)</title><rect x="243" y="212" width="6" height="15" fill="rgb(213,83,42)"/><text x="246.00" y="222.50"></text></g><g><title>0x7efd6b1886d7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="249" y="212" width="4" height="15" fill="rgb(241,45,37)"/><text x="252.00" y="222.50"></text></g><g><title>0x7efd6b1886e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="253" y="212" width="2" height="15" fill="rgb(234,36,10)"/><text x="256.00" y="222.50"></text></g><g><title>0x7efd6b1886fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="255" y="212" width="2" height="15" fill="rgb(206,214,37)"/><text x="258.00" y="222.50"></text></g><g><title>0x7efd6b1887a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="257" y="212" width="2" height="15" fill="rgb(251,208,5)"/><text x="260.00" y="222.50"></text></g><g><title>0x7efd6b179fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (41 samples, 6.66%)</title><rect x="184" y="180" width="78" height="15" fill="rgb(213,14,13)"/><text x="187.00" y="190.50">0x7efd6b1..</text></g><g><title>0x7efd6b189405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (41 samples, 6.66%)</title><rect x="184" y="196" width="78" height="15" fill="rgb(235,36,42)"/><text x="187.00" y="206.50">0x7efd6b1..</text></g><g><title>0x7efd6b188c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="259" y="212" width="3" height="15" fill="rgb(249,182,52)"/><text x="262.00" y="222.50"></text></g><g><title>0x7efd6b160529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="259" y="228" width="3" height="15" fill="rgb(223,45,9)"/><text x="262.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.32%)</title><rect x="259" y="244" width="3" height="15" fill="rgb(219,64,31)"/><text x="262.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c:690) (2 samples, 0.32%)</title><rect x="259" y="260" width="3" height="15" fill="rgb(254,132,37)"/><text x="262.00" y="270.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:224) (1 samples, 0.16%)</title><rect x="270" y="212" width="2" height="15" fill="rgb(216,168,25)"/><text x="273.00" y="222.50"></text></g><g><title>array_take (methods.c:138) (6 samples, 0.97%)</title><rect x="262" y="196" width="12" height="15" fill="rgb(254,8,42)"/><text x="265.00" y="206.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.16%)</title><rect x="272" y="212" width="2" height="15" fill="rgb(241,158,40)"/><text x="275.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3949) (1 samples, 0.16%)</title><rect x="274" y="228" width="2" height="15" fill="rgb(247,109,44)"/><text x="277.00" y="238.50"></text></g><g><title>0x7efd6b17a05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.30%)</title><rect x="262" y="180" width="16" height="15" fill="rgb(254,31,53)"/><text x="265.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.32%)</title><rect x="274" y="196" width="4" height="15" fill="rgb(233,107,46)"/><text x="277.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.32%)</title><rect x="274" y="212" width="4" height="15" fill="rgb(229,26,49)"/><text x="277.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3954) (1 samples, 0.16%)</title><rect x="276" y="228" width="2" height="15" fill="rgb(217,61,44)"/><text x="279.00" y="238.50"></text></g><g><title>0x7efd6b17a14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="278" y="180" width="2" height="15" fill="rgb(244,125,52)"/><text x="281.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.16%)</title><rect x="278" y="196" width="2" height="15" fill="rgb(208,189,23)"/><text x="281.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.16%)</title><rect x="278" y="212" width="2" height="15" fill="rgb(214,5,41)"/><text x="281.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.16%)</title><rect x="278" y="228" width="2" height="15" fill="rgb(245,44,50)"/><text x="281.00" y="238.50"></text></g><g><title>0x7efd6b17a18f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="280" y="180" width="2" height="15" fill="rgb(216,94,53)"/><text x="283.00" y="190.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.16%)</title><rect x="282" y="244" width="1" height="15" fill="rgb(241,49,51)"/><text x="285.00" y="254.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.16%)</title><rect x="282" y="260" width="1" height="15" fill="rgb(230,140,48)"/><text x="285.00" y="270.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (53 samples, 8.60%)</title><rect x="184" y="148" width="101" height="15" fill="rgb(240,225,50)"/><text x="187.00" y="158.50">predict (skl..</text></g><g><title>0x7efd6b17ad2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (53 samples, 8.60%)</title><rect x="184" y="164" width="101" height="15" fill="rgb(220,168,28)"/><text x="187.00" y="174.50">0x7efd6b17ad..</text></g><g><title>0x7efd6b17a328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="282" y="180" width="3" height="15" fill="rgb(245,1,28)"/><text x="285.00" y="190.50"></text></g><g><title>array_reshape (methods.c:210) (2 samples, 0.32%)</title><rect x="282" y="196" width="3" height="15" fill="rgb(230,210,39)"/><text x="285.00" y="206.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.32%)</title><rect x="282" y="212" width="3" height="15" fill="rgb(229,88,44)"/><text x="285.00" y="222.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (2 samples, 0.32%)</title><rect x="282" y="228" width="3" height="15" fill="rgb(231,174,34)"/><text x="285.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.16%)</title><rect x="283" y="244" width="2" height="15" fill="rgb(234,162,13)"/><text x="286.00" y="254.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.16%)</title><rect x="283" y="260" width="2" height="15" fill="rgb(247,86,4)"/><text x="286.00" y="270.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (3 samples, 0.49%)</title><rect x="285" y="148" width="6" height="15" fill="rgb(212,93,39)"/><text x="288.00" y="158.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (2 samples, 0.32%)</title><rect x="287" y="164" width="4" height="15" fill="rgb(252,181,46)"/><text x="290.00" y="174.50"></text></g><g><title>predict (sklearn/tree/_classes.py:441) (1 samples, 0.16%)</title><rect x="291" y="148" width="2" height="15" fill="rgb(219,70,54)"/><text x="294.00" y="158.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.16%)</title><rect x="295" y="164" width="2" height="15" fill="rgb(245,227,8)"/><text x="298.00" y="174.50"></text></g><g><title>prepare_index (mapping.c:398) (1 samples, 0.16%)</title><rect x="295" y="180" width="2" height="15" fill="rgb(230,53,41)"/><text x="298.00" y="190.50"></text></g><g><title>unpack_indices (mapping.c:225) (1 samples, 0.16%)</title><rect x="295" y="196" width="2" height="15" fill="rgb(221,188,7)"/><text x="298.00" y="206.50"></text></g><g><title>unpack_tuple (mapping.c:170) (1 samples, 0.16%)</title><rect x="295" y="212" width="2" height="15" fill="rgb(229,222,40)"/><text x="298.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (135 samples, 21.92%)</title><rect x="40" y="132" width="259" height="15" fill="rgb(249,84,47)"/><text x="43.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (3 samples, 0.49%)</title><rect x="293" y="148" width="6" height="15" fill="rgb(246,52,24)"/><text x="296.00" y="158.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.16%)</title><rect x="297" y="164" width="2" height="15" fill="rgb(220,89,42)"/><text x="300.00" y="174.50"></text></g><g><title>get_view_from_index (ndarraytypes.h:1528) (1 samples, 0.16%)</title><rect x="297" y="180" width="2" height="15" fill="rgb(214,129,30)"/><text x="300.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:54) (140 samples, 22.73%)</title><rect x="32" y="52" width="269" height="15" fill="rgb(229,133,51)"/><text x="35.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegress..</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:53) (140 samples, 22.73%)</title><rect x="32" y="68" width="269" height="15" fill="rgb(223,17,40)"/><text x="35.00" y="78.50">profile_skl (bench_DecisionTreeRegr..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:37) (140 samples, 22.73%)</title><rect x="32" y="84" width="269" height="15" fill="rgb(217,57,30)"/><text x="35.00" y="94.50">setup_profile (bench_DecisionTreeRe..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:31) (140 samples, 22.73%)</title><rect x="32" y="100" width="269" height="15" fill="rgb(224,35,18)"/><text x="35.00" y="110.50">profile (bench_DecisionTreeRegresso..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (138 samples, 22.40%)</title><rect x="36" y="116" width="265" height="15" fill="rgb(221,121,41)"/><text x="39.00" y="126.50">time_predict (mlprodict/asv_benchma..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.16%)</title><rect x="299" y="132" width="2" height="15" fill="rgb(247,110,47)"/><text x="302.00" y="142.50"></text></g><g><title>0x7efd515e754f (?) (1 samples, 0.16%)</title><rect x="301" y="244" width="2" height="15" fill="rgb(245,148,16)"/><text x="304.00" y="254.50"></text></g><g><title>0x7efd515ed65e (?) (1 samples, 0.16%)</title><rect x="301" y="260" width="2" height="15" fill="rgb(207,75,47)"/><text x="304.00" y="270.50"></text></g><g><title>0x7efd515ed50f (?) (1 samples, 0.16%)</title><rect x="301" y="276" width="2" height="15" fill="rgb(252,109,2)"/><text x="304.00" y="286.50"></text></g><g><title>0x7efd515f3d6c (?) (1 samples, 0.16%)</title><rect x="301" y="292" width="2" height="15" fill="rgb(211,7,2)"/><text x="304.00" y="302.50"></text></g><g><title>0x7efd5ab14ab9 (?) (1 samples, 0.16%)</title><rect x="301" y="308" width="2" height="15" fill="rgb(234,136,15)"/><text x="304.00" y="318.50"></text></g><g><title>0x7efd5ab15eab (?) (1 samples, 0.16%)</title><rect x="301" y="324" width="2" height="15" fill="rgb(251,20,4)"/><text x="304.00" y="334.50"></text></g><g><title>0x7efd5ab15ea0 (libgomp.so.1.0.0) (5 samples, 0.81%)</title><rect x="303" y="484" width="9" height="15" fill="rgb(208,42,4)"/><text x="306.00" y="494.50"></text></g><g><title>0x7efd5ab15ea9 (libgomp.so.1.0.0) (19 samples, 3.08%)</title><rect x="312" y="484" width="37" height="15" fill="rgb(245,189,13)"/><text x="315.00" y="494.50">0x7..</text></g><g><title>0x7efd5ab15eab (libgomp.so.1.0.0) (12 samples, 1.95%)</title><rect x="349" y="484" width="23" height="15" fill="rgb(206,62,15)"/><text x="352.00" y="494.50">0..</text></g><g><title>0x7efd5ab14ab9 (libgomp.so.1.0.0) (47 samples, 7.63%)</title><rect x="303" y="468" width="90" height="15" fill="rgb(216,226,18)"/><text x="306.00" y="478.50">0x7efd5ab1..</text></g><g><title>0x7efd5ab15ead (libgomp.so.1.0.0) (11 samples, 1.79%)</title><rect x="372" y="484" width="21" height="15" fill="rgb(251,8,1)"/><text x="375.00" y="494.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:61) (50 samples, 8.12%)</title><rect x="301" y="52" width="95" height="15" fill="rgb(214,188,44)"/><text x="304.00" y="62.50">&lt;module&gt; (b..</text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:60) (50 samples, 8.12%)</title><rect x="301" y="68" width="95" height="15" fill="rgb(216,224,31)"/><text x="304.00" y="78.50">profile_pyr..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:37) (50 samples, 8.12%)</title><rect x="301" y="84" width="95" height="15" fill="rgb(249,32,2)"/><text x="304.00" y="94.50">setup_profi..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:31) (50 samples, 8.12%)</title><rect x="301" y="100" width="95" height="15" fill="rgb(242,225,34)"/><text x="304.00" y="110.50">profile (be..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (50 samples, 8.12%)</title><rect x="301" y="116" width="95" height="15" fill="rgb(225,87,36)"/><text x="304.00" y="126.50">time_predic..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (50 samples, 8.12%)</title><rect x="301" y="132" width="95" height="15" fill="rgb(217,68,49)"/><text x="304.00" y="142.50">&lt;lambda&gt; (m..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (50 samples, 8.12%)</title><rect x="301" y="148" width="95" height="15" fill="rgb(225,135,33)"/><text x="304.00" y="158.50">run (mlprod..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (50 samples, 8.12%)</title><rect x="301" y="164" width="95" height="15" fill="rgb(250,102,46)"/><text x="304.00" y="174.50">_run_sequen..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (50 samples, 8.12%)</title><rect x="301" y="180" width="95" height="15" fill="rgb(230,114,2)"/><text x="304.00" y="190.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (50 samples, 8.12%)</title><rect x="301" y="196" width="95" height="15" fill="rgb(224,186,52)"/><text x="304.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (50 samples, 8.12%)</title><rect x="301" y="212" width="95" height="15" fill="rgb(233,33,10)"/><text x="304.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (50 samples, 8.12%)</title><rect x="301" y="228" width="95" height="15" fill="rgb(243,81,46)"/><text x="304.00" y="238.50">_run (mlpro..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (49 samples, 7.95%)</title><rect x="303" y="244" width="93" height="15" fill="rgb(205,146,39)"/><text x="306.00" y="254.50">pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (49 samples, 7.95%)</title><rect x="303" y="260" width="93" height="15" fill="rgb(242,39,44)"/><text x="306.00" y="270.50">void pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (49 samples, 7.95%)</title><rect x="303" y="276" width="93" height="15" fill="rgb(208,114,8)"/><text x="306.00" y="286.50">void pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (49 samples, 7.95%)</title><rect x="303" y="292" width="93" height="15" fill="rgb(212,78,7)"/><text x="306.00" y="302.50">pybind11::d..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (49 samples, 7.95%)</title><rect x="303" y="308" width="93" height="15" fill="rgb(230,98,28)"/><text x="306.00" y="318.50">pybind11::d..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (49 samples, 7.95%)</title><rect x="303" y="324" width="93" height="15" fill="rgb(227,91,42)"/><text x="306.00" y="334.50">pybind11::c..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (49 samples, 7.95%)</title><rect x="303" y="340" width="93" height="15" fill="rgb(206,22,10)"/><text x="306.00" y="350.50">pybind11::a..</text></g><g><title>pybind11::array::~array (numpy.h:538) (49 samples, 7.95%)</title><rect x="303" y="356" width="93" height="15" fill="rgb(240,149,3)"/><text x="306.00" y="366.50">pybind11::a..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (49 samples, 7.95%)</title><rect x="303" y="372" width="93" height="15" fill="rgb(212,73,42)"/><text x="306.00" y="382.50">pybind11::b..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (49 samples, 7.95%)</title><rect x="303" y="388" width="93" height="15" fill="rgb(236,44,35)"/><text x="306.00" y="398.50">pybind11::o..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (49 samples, 7.95%)</title><rect x="303" y="404" width="93" height="15" fill="rgb(210,39,20)"/><text x="306.00" y="414.50">pybind11::h..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (49 samples, 7.95%)</title><rect x="303" y="420" width="93" height="15" fill="rgb(207,68,20)"/><text x="306.00" y="430.50">RuntimeTree..</text></g><g><title>pybind11::array::size (numpy.h:619) (49 samples, 7.95%)</title><rect x="303" y="436" width="93" height="15" fill="rgb(247,114,6)"/><text x="306.00" y="446.50">pybind11::a..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (49 samples, 7.95%)</title><rect x="303" y="452" width="93" height="15" fill="rgb(216,16,39)"/><text x="306.00" y="462.50">std::accumu..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.32%)</title><rect x="393" y="468" width="3" height="15" fill="rgb(231,214,14)"/><text x="396.00" y="478.50"></text></g><g><title>0x7efd5ab13daa (libgomp.so.1.0.0) (2 samples, 0.32%)</title><rect x="393" y="484" width="3" height="15" fill="rgb(226,111,27)"/><text x="396.00" y="494.50"></text></g><g><title>0x7efd5ab15cfb (libgomp.so.1.0.0) (2 samples, 0.32%)</title><rect x="393" y="500" width="3" height="15" fill="rgb(239,18,42)"/><text x="396.00" y="510.50"></text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:36) (1 samples, 0.16%)</title><rect x="396" y="84" width="2" height="15" fill="rgb(235,179,2)"/><text x="399.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.16%)</title><rect x="396" y="100" width="2" height="15" fill="rgb(223,131,26)"/><text x="399.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.16%)</title><rect x="396" y="116" width="2" height="15" fill="rgb(247,174,4)"/><text x="399.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.16%)</title><rect x="396" y="132" width="2" height="15" fill="rgb(221,110,20)"/><text x="399.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.16%)</title><rect x="396" y="148" width="2" height="15" fill="rgb(233,135,39)"/><text x="399.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (1 samples, 0.16%)</title><rect x="396" y="164" width="2" height="15" fill="rgb(248,93,12)"/><text x="399.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="396" y="180" width="2" height="15" fill="rgb(220,40,30)"/><text x="399.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="396" y="196" width="2" height="15" fill="rgb(242,44,18)"/><text x="399.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="396" y="212" width="2" height="15" fill="rgb(227,28,41)"/><text x="399.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="396" y="228" width="2" height="15" fill="rgb(217,204,15)"/><text x="399.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="396" y="244" width="2" height="15" fill="rgb(230,92,38)"/><text x="399.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (1 samples, 0.16%)</title><rect x="396" y="260" width="2" height="15" fill="rgb(215,226,36)"/><text x="399.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="396" y="276" width="2" height="15" fill="rgb(252,121,35)"/><text x="399.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="396" y="292" width="2" height="15" fill="rgb(251,7,43)"/><text x="399.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="396" y="308" width="2" height="15" fill="rgb(206,120,1)"/><text x="399.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="396" y="324" width="2" height="15" fill="rgb(212,56,46)"/><text x="399.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="396" y="340" width="2" height="15" fill="rgb(243,62,32)"/><text x="399.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (1 samples, 0.16%)</title><rect x="396" y="356" width="2" height="15" fill="rgb(228,37,0)"/><text x="399.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="396" y="372" width="2" height="15" fill="rgb(232,75,33)"/><text x="399.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="396" y="388" width="2" height="15" fill="rgb(214,12,39)"/><text x="399.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="396" y="404" width="2" height="15" fill="rgb(217,190,15)"/><text x="399.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="396" y="420" width="2" height="15" fill="rgb(206,35,24)"/><text x="399.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="396" y="436" width="2" height="15" fill="rgb(237,147,44)"/><text x="399.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (1 samples, 0.16%)</title><rect x="396" y="452" width="2" height="15" fill="rgb(235,80,20)"/><text x="399.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="396" y="468" width="2" height="15" fill="rgb(240,126,13)"/><text x="399.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="396" y="484" width="2" height="15" fill="rgb(208,153,27)"/><text x="399.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.16%)</title><rect x="396" y="500" width="2" height="15" fill="rgb(235,202,5)"/><text x="399.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.16%)</title><rect x="396" y="516" width="2" height="15" fill="rgb(205,153,54)"/><text x="399.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.16%)</title><rect x="396" y="532" width="2" height="15" fill="rgb(218,130,13)"/><text x="399.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="396" y="548" width="2" height="15" fill="rgb(214,19,31)"/><text x="399.00" y="558.50"></text></g><g><title>0x7efd50bd4af0 (?) (1 samples, 0.16%)</title><rect x="396" y="564" width="2" height="15" fill="rgb(220,215,52)"/><text x="399.00" y="574.50"></text></g><g><title>0x7efd50be71d2 (?) (1 samples, 0.16%)</title><rect x="396" y="580" width="2" height="15" fill="rgb(236,178,26)"/><text x="399.00" y="590.50"></text></g><g><title>0x7efd50be67b8 (?) (1 samples, 0.16%)</title><rect x="396" y="596" width="2" height="15" fill="rgb(220,120,39)"/><text x="399.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="396" y="612" width="2" height="15" fill="rgb(239,219,35)"/><text x="399.00" y="622.50"></text></g><g><title>0x7efd50be472a (?) (1 samples, 0.16%)</title><rect x="396" y="628" width="2" height="15" fill="rgb(210,167,1)"/><text x="399.00" y="638.50"></text></g><g><title>0x7efd50be10a3 (?) (1 samples, 0.16%)</title><rect x="396" y="644" width="2" height="15" fill="rgb(246,185,40)"/><text x="399.00" y="654.50"></text></g><g><title>0x7efd51182c21 (?) (1 samples, 0.16%)</title><rect x="396" y="660" width="2" height="15" fill="rgb(208,70,30)"/><text x="399.00" y="670.50"></text></g><g><title>0x7efd5118ba7d (?) (1 samples, 0.16%)</title><rect x="396" y="676" width="2" height="15" fill="rgb(207,119,26)"/><text x="399.00" y="686.50"></text></g><g><title>0x7efd5118b914 (?) (1 samples, 0.16%)</title><rect x="396" y="692" width="2" height="15" fill="rgb(243,75,33)"/><text x="399.00" y="702.50"></text></g><g><title>0x7efd5118b6de (?) (1 samples, 0.16%)</title><rect x="396" y="708" width="2" height="15" fill="rgb(217,41,48)"/><text x="399.00" y="718.50"></text></g><g><title>0x7efd5118e1b9 (?) (1 samples, 0.16%)</title><rect x="396" y="724" width="2" height="15" fill="rgb(224,90,18)"/><text x="399.00" y="734.50"></text></g><g><title>0x7efd511da7e6 (?) (1 samples, 0.16%)</title><rect x="396" y="740" width="2" height="15" fill="rgb(243,90,16)"/><text x="399.00" y="750.50"></text></g><g><title>0x7efd511d0065 (?) (1 samples, 0.16%)</title><rect x="396" y="756" width="2" height="15" fill="rgb(254,122,24)"/><text x="399.00" y="766.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.16%)</title><rect x="402" y="116" width="2" height="15" fill="rgb(233,160,32)"/><text x="405.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.16%)</title><rect x="402" y="132" width="2" height="15" fill="rgb(208,161,53)"/><text x="405.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.16%)</title><rect x="402" y="148" width="2" height="15" fill="rgb(214,16,22)"/><text x="405.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.16%)</title><rect x="404" y="116" width="2" height="15" fill="rgb(209,42,24)"/><text x="407.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c:146) (1 samples, 0.16%)</title><rect x="404" y="132" width="2" height="15" fill="rgb(224,176,33)"/><text x="407.00" y="142.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (3 samples, 0.49%)</title><rect x="414" y="196" width="5" height="15" fill="rgb(253,95,30)"/><text x="417.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (2 samples, 0.32%)</title><rect x="416" y="212" width="3" height="15" fill="rgb(236,59,28)"/><text x="419.00" y="222.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="429" y="260" width="2" height="15" fill="rgb(226,15,51)"/><text x="432.00" y="270.50"></text></g><g><title>onnxruntime::Model::MainGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="429" y="276" width="2" height="15" fill="rgb(237,8,5)"/><text x="432.00" y="286.50"></text></g><g><title>0x7efd90b0e98c (libc-2.29.so) (1 samples, 0.16%)</title><rect x="433" y="292" width="2" height="15" fill="rgb(228,142,5)"/><text x="436.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="435" y="292" width="2" height="15" fill="rgb(229,69,23)"/><text x="438.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="435" y="308" width="2" height="15" fill="rgb(207,37,35)"/><text x="438.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="435" y="324" width="2" height="15" fill="rgb(244,67,16)"/><text x="438.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="435" y="340" width="2" height="15" fill="rgb(230,141,49)"/><text x="438.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="437" y="292" width="4" height="15" fill="rgb(249,124,2)"/><text x="440.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::CheckShapes (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="437" y="308" width="4" height="15" fill="rgb(219,161,53)"/><text x="440.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="441" y="292" width="1" height="15" fill="rgb(227,117,0)"/><text x="444.00" y="302.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="441" y="308" width="1" height="15" fill="rgb(208,151,43)"/><text x="444.00" y="318.50"></text></g><g><title>0x7efd50b940f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="511" y="356" width="4" height="15" fill="rgb(219,13,14)"/><text x="514.00" y="366.50"></text></g><g><title>0x7efd90b0e908 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="515" y="356" width="2" height="15" fill="rgb(218,111,40)"/><text x="518.00" y="366.50"></text></g><g><title>0x7efd90b0e90e (libc-2.29.so) (1 samples, 0.16%)</title><rect x="517" y="356" width="2" height="15" fill="rgb(253,148,10)"/><text x="520.00" y="366.50"></text></g><g><title>0x7efd90b0e91e (libc-2.29.so) (1 samples, 0.16%)</title><rect x="519" y="356" width="2" height="15" fill="rgb(252,198,3)"/><text x="522.00" y="366.50"></text></g><g><title>0x7efd90b0e929 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="521" y="356" width="4" height="15" fill="rgb(213,180,25)"/><text x="524.00" y="366.50"></text></g><g><title>0x7efd90b0e92f (libc-2.29.so) (2 samples, 0.32%)</title><rect x="525" y="356" width="4" height="15" fill="rgb(220,91,41)"/><text x="528.00" y="366.50"></text></g><g><title>0x7efd90b0e95e (libc-2.29.so) (1 samples, 0.16%)</title><rect x="529" y="356" width="2" height="15" fill="rgb(231,87,53)"/><text x="532.00" y="366.50"></text></g><g><title>0x7efd90b0e96a (libc-2.29.so) (3 samples, 0.49%)</title><rect x="531" y="356" width="5" height="15" fill="rgb(243,145,9)"/><text x="534.00" y="366.50"></text></g><g><title>0x7efd90b0e97c (libc-2.29.so) (1 samples, 0.16%)</title><rect x="536" y="356" width="2" height="15" fill="rgb(242,72,16)"/><text x="539.00" y="366.50"></text></g><g><title>0x7efd90b0e991 (libc-2.29.so) (7 samples, 1.14%)</title><rect x="538" y="356" width="14" height="15" fill="rgb(213,51,11)"/><text x="541.00" y="366.50"></text></g><g><title>0x7efd90b0e998 (libc-2.29.so) (4 samples, 0.65%)</title><rect x="552" y="356" width="7" height="15" fill="rgb(245,32,26)"/><text x="555.00" y="366.50"></text></g><g><title>0x7efd90b0e99b (libc-2.29.so) (1 samples, 0.16%)</title><rect x="559" y="356" width="2" height="15" fill="rgb(219,53,22)"/><text x="562.00" y="366.50"></text></g><g><title>0x7efd90b0ea4c (libc-2.29.so) (2 samples, 0.32%)</title><rect x="561" y="356" width="4" height="15" fill="rgb(206,26,28)"/><text x="564.00" y="366.50"></text></g><g><title>0x7efd90b0ea4d (libc-2.29.so) (1 samples, 0.16%)</title><rect x="565" y="356" width="2" height="15" fill="rgb(231,210,26)"/><text x="568.00" y="366.50"></text></g><g><title>0x7efd90b0ea53 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="567" y="356" width="2" height="15" fill="rgb(253,216,17)"/><text x="570.00" y="366.50"></text></g><g><title>0x7efd90b0ebc0 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="569" y="356" width="2" height="15" fill="rgb(247,192,19)"/><text x="572.00" y="366.50"></text></g><g><title>0x7efd90b0ebd8 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="571" y="356" width="4" height="15" fill="rgb(214,164,43)"/><text x="574.00" y="366.50"></text></g><g><title>0x7efd90b0ebe8 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="575" y="356" width="2" height="15" fill="rgb(233,37,19)"/><text x="578.00" y="366.50"></text></g><g><title>0x7efd90b2f120 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="577" y="356" width="1" height="15" fill="rgb(232,71,1)"/><text x="580.00" y="366.50"></text></g><g><title>0x7efd90b2f12b (libc-2.29.so) (2 samples, 0.32%)</title><rect x="578" y="356" width="4" height="15" fill="rgb(229,44,19)"/><text x="581.00" y="366.50"></text></g><g><title>0x7efd90b2f14a (libc-2.29.so) (4 samples, 0.65%)</title><rect x="582" y="356" width="8" height="15" fill="rgb(246,145,19)"/><text x="585.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (15 samples, 2.44%)</title><rect x="590" y="356" width="29" height="15" fill="rgb(240,1,18)"/><text x="593.00" y="366.50">fr..</text></g><g><title>0x7efd50b93930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="622" y="452" width="2" height="15" fill="rgb(250,130,40)"/><text x="625.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="624" y="468" width="4" height="15" fill="rgb(245,71,18)"/><text x="627.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="624" y="484" width="4" height="15" fill="rgb(234,205,50)"/><text x="627.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="626" y="500" width="2" height="15" fill="rgb(212,192,23)"/><text x="629.00" y="510.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.97%)</title><rect x="619" y="356" width="11" height="15" fill="rgb(242,94,30)"/><text x="622.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.97%)</title><rect x="619" y="372" width="11" height="15" fill="rgb(245,24,24)"/><text x="622.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.97%)</title><rect x="619" y="388" width="11" height="15" fill="rgb(208,83,54)"/><text x="622.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.81%)</title><rect x="621" y="404" width="9" height="15" fill="rgb(229,67,16)"/><text x="624.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.81%)</title><rect x="621" y="420" width="9" height="15" fill="rgb(239,165,52)"/><text x="624.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.81%)</title><rect x="621" y="436" width="9" height="15" fill="rgb(252,227,36)"/><text x="624.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="624" y="452" width="6" height="15" fill="rgb(209,15,13)"/><text x="627.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="628" y="468" width="2" height="15" fill="rgb(211,218,19)"/><text x="631.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="628" y="484" width="2" height="15" fill="rgb(215,228,50)"/><text x="631.00" y="494.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="628" y="500" width="2" height="15" fill="rgb(215,34,9)"/><text x="631.00" y="510.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="628" y="516" width="2" height="15" fill="rgb(246,169,27)"/><text x="631.00" y="526.50"></text></g><g><title>0x7efd90b106db (libc-2.29.so) (1 samples, 0.16%)</title><rect x="628" y="532" width="2" height="15" fill="rgb(214,116,43)"/><text x="631.00" y="542.50"></text></g><g><title>0x7efd805dad50 (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="885" y="404" width="2" height="15" fill="rgb(207,87,15)"/><text x="888.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (12 samples, 1.95%)</title><rect x="883" y="388" width="23" height="15" fill="rgb(252,3,52)"/><text x="886.00" y="398.50">o..</text></g><g><title>malloc (libc-2.29.so) (10 samples, 1.62%)</title><rect x="887" y="404" width="19" height="15" fill="rgb(220,178,37)"/><text x="890.00" y="414.50"></text></g><g><title>0x7efd50b94a40 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="929" y="404" width="2" height="15" fill="rgb(216,207,20)"/><text x="932.00" y="414.50"></text></g><g><title>0x7efd90b2f120 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="933" y="420" width="4" height="15" fill="rgb(205,137,47)"/><text x="936.00" y="430.50"></text></g><g><title>0x7efd90b2f12f (libc-2.29.so) (1 samples, 0.16%)</title><rect x="937" y="420" width="2" height="15" fill="rgb(217,12,6)"/><text x="940.00" y="430.50"></text></g><g><title>0x7efd90b2f14a (libc-2.29.so) (2 samples, 0.32%)</title><rect x="939" y="420" width="3" height="15" fill="rgb(250,139,40)"/><text x="942.00" y="430.50"></text></g><g><title>0x7efd805dad50 (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="942" y="436" width="2" height="15" fill="rgb(240,134,37)"/><text x="945.00" y="446.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.62%)</title><rect x="931" y="404" width="19" height="15" fill="rgb(219,199,51)"/><text x="934.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.65%)</title><rect x="942" y="420" width="8" height="15" fill="rgb(227,39,1)"/><text x="945.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.49%)</title><rect x="944" y="436" width="6" height="15" fill="rgb(221,110,14)"/><text x="947.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (231 samples, 37.50%)</title><rect x="630" y="356" width="443" height="15" fill="rgb(244,86,13)"/><text x="633.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNo..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (105 samples, 17.05%)</title><rect x="872" y="372" width="201" height="15" fill="rgb(247,79,7)"/><text x="875.00" y="382.50">std::_Hashtable&lt;long, std:..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (87 samples, 14.12%)</title><rect x="906" y="388" width="167" height="15" fill="rgb(242,35,31)"/><text x="909.00" y="398.50">std::_Hashtable&lt;long,..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (64 samples, 10.39%)</title><rect x="950" y="404" width="123" height="15" fill="rgb(211,100,14)"/><text x="953.00" y="414.50">std::__detail::..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (34 samples, 5.52%)</title><rect x="1008" y="420" width="65" height="15" fill="rgb(214,142,51)"/><text x="1011.00" y="430.50">std::__..</text></g><g><title>0x7efd50b93850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1078" y="372" width="2" height="15" fill="rgb(225,171,51)"/><text x="1081.00" y="382.50"></text></g><g><title>0x7efd90b2ed50 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1080" y="372" width="2" height="15" fill="rgb(236,79,17)"/><text x="1083.00" y="382.50"></text></g><g><title>0x7efd90b2ed97 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="1082" y="372" width="4" height="15" fill="rgb(247,86,18)"/><text x="1085.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.30%)</title><rect x="1073" y="356" width="15" height="15" fill="rgb(246,18,13)"/><text x="1076.00" y="366.50"></text></g><g><title>0x7efd90b2edc9 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1086" y="372" width="2" height="15" fill="rgb(245,54,35)"/><text x="1089.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (2 samples, 0.32%)</title><rect x="1088" y="356" width="4" height="15" fill="rgb(216,229,12)"/><text x="1091.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 2.60%)</title><rect x="1092" y="356" width="30" height="15" fill="rgb(214,186,50)"/><text x="1095.00" y="366.50">st..</text></g><g><title>0x7efd805dad50 (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="1138" y="388" width="2" height="15" fill="rgb(247,10,32)"/><text x="1141.00" y="398.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (374 samples, 60.71%)</title><rect x="442" y="292" width="717" height="15" fill="rgb(214,226,28)"/><text x="445.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (374 samples, 60.71%)</title><rect x="442" y="308" width="717" height="15" fill="rgb(243,209,32)"/><text x="445.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (374 samples, 60.71%)</title><rect x="442" y="324" width="717" height="15" fill="rgb(211,151,23)"/><text x="445.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (374 samples, 60.71%)</title><rect x="442" y="340" width="717" height="15" fill="rgb(231,26,25)"/><text x="445.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 3.08%)</title><rect x="1122" y="356" width="37" height="15" fill="rgb(209,169,3)"/><text x="1125.00" y="366.50">std..</text></g><g><title>operator new (libstdc++.so.6.0.28) (14 samples, 2.27%)</title><rect x="1132" y="372" width="27" height="15" fill="rgb(242,116,17)"/><text x="1135.00" y="382.50">o..</text></g><g><title>malloc (libc-2.29.so) (10 samples, 1.62%)</title><rect x="1140" y="388" width="19" height="15" fill="rgb(214,162,49)"/><text x="1143.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (381 samples, 61.85%)</title><rect x="431" y="260" width="730" height="15" fill="rgb(224,110,26)"/><text x="434.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (380 samples, 61.69%)</title><rect x="433" y="276" width="728" height="15" fill="rgb(223,205,5)"/><text x="436.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="1159" y="292" width="2" height="15" fill="rgb(206,211,18)"/><text x="1162.00" y="302.50"></text></g><g><title>0x7efd805da7d0 (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="1159" y="308" width="2" height="15" fill="rgb(218,122,26)"/><text x="1162.00" y="318.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="1161" y="292" width="4" height="15" fill="rgb(233,161,46)"/><text x="1164.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1163" y="308" width="2" height="15" fill="rgb(234,202,42)"/><text x="1166.00" y="318.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="1161" y="260" width="6" height="15" fill="rgb(240,196,45)"/><text x="1164.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="1161" y="276" width="6" height="15" fill="rgb(247,33,37)"/><text x="1164.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="1165" y="292" width="2" height="15" fill="rgb(253,37,43)"/><text x="1168.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1165" y="308" width="2" height="15" fill="rgb(230,26,34)"/><text x="1168.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="1167" y="260" width="3" height="15" fill="rgb(254,25,52)"/><text x="1170.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.16%)</title><rect x="1168" y="276" width="2" height="15" fill="rgb(209,180,41)"/><text x="1171.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:951) (1 samples, 0.16%)</title><rect x="1168" y="292" width="2" height="15" fill="rgb(237,50,49)"/><text x="1171.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="1170" y="260" width="2" height="15" fill="rgb(246,182,18)"/><text x="1173.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (390 samples, 63.31%)</title><rect x="427" y="244" width="747" height="15" fill="rgb(227,169,11)"/><text x="430.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::..</text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1172" y="260" width="2" height="15" fill="rgb(223,54,11)"/><text x="1175.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1174" y="244" width="2" height="15" fill="rgb(234,9,5)"/><text x="1177.00" y="254.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1174" y="260" width="2" height="15" fill="rgb(211,66,46)"/><text x="1177.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (401 samples, 65.10%)</title><rect x="410" y="164" width="768" height="15" fill="rgb(237,190,31)"/><text x="413.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (401 samples, 65.10%)</title><rect x="410" y="180" width="768" height="15" fill="rgb(254,214,34)"/><text x="413.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (396 samples, 64.29%)</title><rect x="419" y="196" width="759" height="15" fill="rgb(210,61,23)"/><text x="422.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (395 samples, 64.12%)</title><rect x="421" y="212" width="757" height="15" fill="rgb(236,40,29)"/><text x="424.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (395 samples, 64.12%)</title><rect x="421" y="228" width="757" height="15" fill="rgb(225,83,6)"/><text x="424.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambd..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1176" y="244" width="2" height="15" fill="rgb(232,34,6)"/><text x="1179.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1176" y="260" width="2" height="15" fill="rgb(245,169,42)"/><text x="1179.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (406 samples, 65.91%)</title><rect x="406" y="132" width="778" height="15" fill="rgb(247,155,3)"/><text x="409.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (404 samples, 65.58%)</title><rect x="410" y="148" width="774" height="15" fill="rgb(209,164,0)"/><text x="413.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 0.49%)</title><rect x="1178" y="164" width="6" height="15" fill="rgb(247,169,39)"/><text x="1181.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:68) (413 samples, 67.05%)</title><rect x="396" y="52" width="792" height="15" fill="rgb(216,21,6)"/><text x="399.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:68)</text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:67) (413 samples, 67.05%)</title><rect x="396" y="68" width="792" height="15" fill="rgb(248,211,53)"/><text x="399.00" y="78.50">profile_ort (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:67)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:37) (412 samples, 66.88%)</title><rect x="398" y="84" width="790" height="15" fill="rgb(252,105,25)"/><text x="401.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:37)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:31) (412 samples, 66.88%)</title><rect x="398" y="100" width="790" height="15" fill="rgb(212,187,22)"/><text x="401.00" y="110.50">profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (408 samples, 66.23%)</title><rect x="406" y="116" width="782" height="15" fill="rgb(254,137,3)"/><text x="409.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (2 samples, 0.32%)</title><rect x="1184" y="132" width="4" height="15" fill="rgb(206,210,40)"/><text x="1187.00" y="142.50"></text></g><g><title>all (616 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(231,69,12)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.16%)</title><rect x="1188" y="52" width="2" height="15" fill="rgb(220,127,12)"/><text x="1191.00" y="62.50"></text></g></g></svg>