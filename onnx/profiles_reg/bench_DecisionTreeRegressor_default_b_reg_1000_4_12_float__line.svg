<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2086" onload="init(evt)" viewBox="0 0 1200 2086" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2086" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2069.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2069.00"> </text><g id="frames"><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.15%)</title><rect x="10" y="852" width="1" height="15" fill="rgb(237,72,29)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.15%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(232,168,53)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.15%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(252,52,22)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.15%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(238,110,53)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.15%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(236,203,6)"/><text x="13.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.15%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(219,13,27)"/><text x="13.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.15%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(219,131,42)"/><text x="13.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.15%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(207,218,30)"/><text x="13.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.15%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(230,209,6)"/><text x="13.00" y="990.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.15%)</title><rect x="11" y="884" width="2" height="15" fill="rgb(246,3,51)"/><text x="14.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.15%)</title><rect x="11" y="900" width="2" height="15" fill="rgb(254,107,17)"/><text x="14.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.15%)</title><rect x="11" y="916" width="2" height="15" fill="rgb(251,149,44)"/><text x="14.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.15%)</title><rect x="11" y="932" width="2" height="15" fill="rgb(211,114,23)"/><text x="14.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.15%)</title><rect x="11" y="948" width="2" height="15" fill="rgb(228,151,24)"/><text x="14.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.15%)</title><rect x="11" y="964" width="2" height="15" fill="rgb(222,135,16)"/><text x="14.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.15%)</title><rect x="11" y="980" width="2" height="15" fill="rgb(205,214,35)"/><text x="14.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.15%)</title><rect x="11" y="996" width="2" height="15" fill="rgb(235,224,21)"/><text x="14.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.15%)</title><rect x="11" y="1012" width="2" height="15" fill="rgb(213,32,4)"/><text x="14.00" y="1022.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="11" y="1028" width="2" height="15" fill="rgb(254,166,43)"/><text x="14.00" y="1038.50"></text></g><g><title>0x7fa562d2cc75 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="11" y="1044" width="2" height="15" fill="rgb(243,54,28)"/><text x="14.00" y="1054.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:2) (3 samples, 0.46%)</title><rect x="10" y="148" width="5" height="15" fill="rgb(210,170,16)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="10" y="164" width="5" height="15" fill="rgb(239,205,48)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.46%)</title><rect x="10" y="180" width="5" height="15" fill="rgb(207,143,20)"/><text x="13.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="10" y="196" width="5" height="15" fill="rgb(223,173,26)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="10" y="212" width="5" height="15" fill="rgb(235,134,3)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="10" y="228" width="5" height="15" fill="rgb(222,103,4)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="10" y="244" width="5" height="15" fill="rgb(227,119,40)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="10" y="260" width="5" height="15" fill="rgb(215,209,48)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="10" y="276" width="5" height="15" fill="rgb(233,83,9)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 0.46%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(240,143,31)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(230,92,26)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(216,9,52)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(242,119,19)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(228,44,1)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(227,65,24)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 0.46%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(216,18,25)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(229,197,42)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(222,116,43)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(254,93,32)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(223,92,27)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(233,166,37)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 0.46%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(243,112,45)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(254,40,22)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(220,155,53)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(225,17,25)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="10" y="548" width="5" height="15" fill="rgb(253,54,41)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="10" y="564" width="5" height="15" fill="rgb(253,95,48)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 0.46%)</title><rect x="10" y="580" width="5" height="15" fill="rgb(254,130,27)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="10" y="596" width="5" height="15" fill="rgb(241,10,17)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.46%)</title><rect x="10" y="612" width="5" height="15" fill="rgb(226,0,5)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(209,55,34)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(229,153,1)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(248,36,54)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(246,99,19)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(250,107,15)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(230,17,40)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 0.46%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(242,107,14)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(210,227,5)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(219,45,5)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(242,106,16)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(229,61,1)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(244,22,34)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 0.46%)</title><rect x="10" y="820" width="5" height="15" fill="rgb(234,76,22)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 0.46%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(246,152,20)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.31%)</title><rect x="11" y="852" width="4" height="15" fill="rgb(248,108,1)"/><text x="14.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.31%)</title><rect x="11" y="868" width="4" height="15" fill="rgb(210,4,45)"/><text x="14.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.15%)</title><rect x="13" y="884" width="2" height="15" fill="rgb(247,99,26)"/><text x="16.00" y="894.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.15%)</title><rect x="15" y="340" width="2" height="15" fill="rgb(227,214,44)"/><text x="18.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="15" y="356" width="2" height="15" fill="rgb(232,73,15)"/><text x="18.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="15" y="372" width="2" height="15" fill="rgb(224,220,5)"/><text x="18.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="15" y="388" width="2" height="15" fill="rgb(241,9,9)"/><text x="18.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="15" y="404" width="2" height="15" fill="rgb(234,172,10)"/><text x="18.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="15" y="420" width="2" height="15" fill="rgb(225,22,8)"/><text x="18.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:48) (1 samples, 0.15%)</title><rect x="15" y="436" width="2" height="15" fill="rgb(240,130,3)"/><text x="18.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="15" y="452" width="2" height="15" fill="rgb(238,194,21)"/><text x="18.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="15" y="468" width="2" height="15" fill="rgb(235,69,49)"/><text x="18.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="15" y="484" width="2" height="15" fill="rgb(225,18,3)"/><text x="18.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="15" y="500" width="2" height="15" fill="rgb(223,134,18)"/><text x="18.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="15" y="516" width="2" height="15" fill="rgb(227,62,39)"/><text x="18.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py:20) (1 samples, 0.15%)</title><rect x="15" y="532" width="2" height="15" fill="rgb(221,13,53)"/><text x="18.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="15" y="548" width="2" height="15" fill="rgb(229,83,51)"/><text x="18.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.15%)</title><rect x="15" y="564" width="2" height="15" fill="rgb(231,141,37)"/><text x="18.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="15" y="580" width="2" height="15" fill="rgb(228,135,50)"/><text x="18.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="15" y="596" width="2" height="15" fill="rgb(222,33,11)"/><text x="18.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="15" y="612" width="2" height="15" fill="rgb(205,159,0)"/><text x="18.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="15" y="628" width="2" height="15" fill="rgb(234,139,30)"/><text x="18.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="15" y="644" width="2" height="15" fill="rgb(230,53,1)"/><text x="18.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="15" y="660" width="2" height="15" fill="rgb(240,183,6)"/><text x="18.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py:107) (1 samples, 0.15%)</title><rect x="15" y="676" width="2" height="15" fill="rgb(232,112,16)"/><text x="18.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="15" y="692" width="2" height="15" fill="rgb(252,107,37)"/><text x="18.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="15" y="708" width="2" height="15" fill="rgb(220,162,9)"/><text x="18.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="15" y="724" width="2" height="15" fill="rgb(222,186,32)"/><text x="18.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="15" y="740" width="2" height="15" fill="rgb(248,94,24)"/><text x="18.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="15" y="756" width="2" height="15" fill="rgb(212,11,37)"/><text x="18.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/io/harwell_boeing/__init__.py:3) (1 samples, 0.15%)</title><rect x="15" y="772" width="2" height="15" fill="rgb(216,12,8)"/><text x="18.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="15" y="788" width="2" height="15" fill="rgb(236,179,38)"/><text x="18.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="15" y="804" width="2" height="15" fill="rgb(252,41,53)"/><text x="18.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="15" y="820" width="2" height="15" fill="rgb(236,196,22)"/><text x="18.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="15" y="836" width="2" height="15" fill="rgb(250,7,52)"/><text x="18.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="15" y="852" width="2" height="15" fill="rgb(245,19,6)"/><text x="18.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/io/harwell_boeing/hb.py:27) (1 samples, 0.15%)</title><rect x="15" y="868" width="2" height="15" fill="rgb(217,21,38)"/><text x="18.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="15" y="884" width="2" height="15" fill="rgb(228,157,7)"/><text x="18.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="15" y="900" width="2" height="15" fill="rgb(211,214,40)"/><text x="18.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="15" y="916" width="2" height="15" fill="rgb(249,86,28)"/><text x="18.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.15%)</title><rect x="15" y="932" width="2" height="15" fill="rgb(236,120,44)"/><text x="18.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.15%)</title><rect x="15" y="948" width="2" height="15" fill="rgb(233,121,38)"/><text x="18.00" y="958.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.15%)</title><rect x="15" y="964" width="2" height="15" fill="rgb(251,87,5)"/><text x="18.00" y="974.50"></text></g><g><title>__close (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="15" y="980" width="2" height="15" fill="rgb(230,38,27)"/><text x="18.00" y="990.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.15%)</title><rect x="17" y="628" width="2" height="15" fill="rgb(224,190,53)"/><text x="20.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="17" y="644" width="2" height="15" fill="rgb(244,66,41)"/><text x="20.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="17" y="660" width="2" height="15" fill="rgb(234,107,46)"/><text x="20.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="17" y="676" width="2" height="15" fill="rgb(243,33,9)"/><text x="20.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="17" y="692" width="2" height="15" fill="rgb(231,73,22)"/><text x="20.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="17" y="708" width="2" height="15" fill="rgb(220,84,10)"/><text x="20.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:12) (1 samples, 0.15%)</title><rect x="17" y="724" width="2" height="15" fill="rgb(206,17,8)"/><text x="20.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="17" y="740" width="2" height="15" fill="rgb(244,215,14)"/><text x="20.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="17" y="756" width="2" height="15" fill="rgb(236,141,51)"/><text x="20.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="17" y="772" width="2" height="15" fill="rgb(251,189,42)"/><text x="20.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="17" y="788" width="2" height="15" fill="rgb(216,205,34)"/><text x="20.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="17" y="804" width="2" height="15" fill="rgb(212,153,49)"/><text x="20.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/json/__init__.py:1) (1 samples, 0.15%)</title><rect x="17" y="820" width="2" height="15" fill="rgb(206,45,21)"/><text x="20.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="17" y="836" width="2" height="15" fill="rgb(206,58,36)"/><text x="20.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="17" y="852" width="2" height="15" fill="rgb(228,130,16)"/><text x="20.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="17" y="868" width="2" height="15" fill="rgb(238,2,5)"/><text x="20.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="17" y="884" width="2" height="15" fill="rgb(227,118,19)"/><text x="20.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="17" y="900" width="2" height="15" fill="rgb(239,28,17)"/><text x="20.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/json/_json.py:26) (1 samples, 0.15%)</title><rect x="17" y="916" width="2" height="15" fill="rgb(238,174,19)"/><text x="20.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="17" y="932" width="2" height="15" fill="rgb(238,136,33)"/><text x="20.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="17" y="948" width="2" height="15" fill="rgb(247,226,3)"/><text x="20.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="17" y="964" width="2" height="15" fill="rgb(206,114,43)"/><text x="20.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.15%)</title><rect x="17" y="980" width="2" height="15" fill="rgb(214,189,49)"/><text x="20.00" y="990.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.15%)</title><rect x="17" y="996" width="2" height="15" fill="rgb(248,225,24)"/><text x="20.00" y="1006.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.15%)</title><rect x="17" y="1012" width="2" height="15" fill="rgb(235,4,30)"/><text x="20.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.15%)</title><rect x="19" y="1492" width="1" height="15" fill="rgb(224,206,12)"/><text x="22.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="19" y="1508" width="1" height="15" fill="rgb(228,63,36)"/><text x="22.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="19" y="1524" width="1" height="15" fill="rgb(248,83,10)"/><text x="22.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="19" y="1540" width="1" height="15" fill="rgb(237,25,24)"/><text x="22.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="19" y="1556" width="1" height="15" fill="rgb(242,183,15)"/><text x="22.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="19" y="1572" width="1" height="15" fill="rgb(242,75,39)"/><text x="22.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.15%)</title><rect x="19" y="1588" width="1" height="15" fill="rgb(244,226,5)"/><text x="22.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="19" y="1604" width="1" height="15" fill="rgb(234,78,42)"/><text x="22.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="19" y="1620" width="1" height="15" fill="rgb(251,70,20)"/><text x="22.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="19" y="1636" width="1" height="15" fill="rgb(244,207,13)"/><text x="22.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="19" y="1652" width="1" height="15" fill="rgb(229,112,1)"/><text x="22.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="19" y="1668" width="1" height="15" fill="rgb(232,197,49)"/><text x="22.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.15%)</title><rect x="19" y="1684" width="1" height="15" fill="rgb(240,15,48)"/><text x="22.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="19" y="1700" width="1" height="15" fill="rgb(243,30,2)"/><text x="22.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="19" y="1716" width="1" height="15" fill="rgb(227,215,44)"/><text x="22.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="19" y="1732" width="1" height="15" fill="rgb(224,187,11)"/><text x="22.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="19" y="1748" width="1" height="15" fill="rgb(222,63,45)"/><text x="22.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="19" y="1764" width="1" height="15" fill="rgb(213,116,0)"/><text x="22.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.15%)</title><rect x="19" y="1780" width="1" height="15" fill="rgb(229,136,21)"/><text x="22.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="19" y="1796" width="1" height="15" fill="rgb(210,36,18)"/><text x="22.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="19" y="1812" width="1" height="15" fill="rgb(212,75,23)"/><text x="22.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="19" y="1828" width="1" height="15" fill="rgb(245,216,17)"/><text x="22.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="19" y="1844" width="1" height="15" fill="rgb(220,12,52)"/><text x="22.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="19" y="1860" width="1" height="15" fill="rgb(208,68,15)"/><text x="22.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:1249) (1 samples, 0.15%)</title><rect x="19" y="1876" width="1" height="15" fill="rgb(233,149,6)"/><text x="22.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.15%)</title><rect x="19" y="1892" width="1" height="15" fill="rgb(226,38,11)"/><text x="22.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.15%)</title><rect x="19" y="1908" width="1" height="15" fill="rgb(235,107,14)"/><text x="22.00" y="1918.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1271) (1 samples, 0.15%)</title><rect x="19" y="1924" width="1" height="15" fill="rgb(248,112,51)"/><text x="22.00" y="1934.50"></text></g><g><title>search (re.py:183) (1 samples, 0.15%)</title><rect x="19" y="1940" width="1" height="15" fill="rgb(242,67,35)"/><text x="22.00" y="1950.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.15%)</title><rect x="19" y="1956" width="1" height="15" fill="rgb(212,195,49)"/><text x="22.00" y="1966.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.15%)</title><rect x="19" y="1972" width="1" height="15" fill="rgb(232,130,54)"/><text x="22.00" y="1982.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.15%)</title><rect x="19" y="1988" width="1" height="15" fill="rgb(213,48,17)"/><text x="22.00" y="1998.50"></text></g><g><title>_parse_sub (sre_parse.py:423) (1 samples, 0.15%)</title><rect x="19" y="2004" width="1" height="15" fill="rgb(237,224,9)"/><text x="22.00" y="2014.50"></text></g><g><title>tell (sre_parse.py:287) (1 samples, 0.15%)</title><rect x="19" y="2020" width="1" height="15" fill="rgb(226,117,46)"/><text x="22.00" y="2030.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.46%)</title><rect x="17" y="436" width="5" height="15" fill="rgb(252,166,5)"/><text x="20.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="17" y="452" width="5" height="15" fill="rgb(220,226,31)"/><text x="20.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="17" y="468" width="5" height="15" fill="rgb(224,40,25)"/><text x="20.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="17" y="484" width="5" height="15" fill="rgb(247,21,7)"/><text x="20.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="17" y="500" width="5" height="15" fill="rgb(223,69,16)"/><text x="20.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="17" y="516" width="5" height="15" fill="rgb(229,146,53)"/><text x="20.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.46%)</title><rect x="17" y="532" width="5" height="15" fill="rgb(249,33,31)"/><text x="20.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="17" y="548" width="5" height="15" fill="rgb(251,211,22)"/><text x="20.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="17" y="564" width="5" height="15" fill="rgb(231,42,0)"/><text x="20.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="17" y="580" width="5" height="15" fill="rgb(252,221,33)"/><text x="20.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="17" y="596" width="5" height="15" fill="rgb(240,171,50)"/><text x="20.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="17" y="612" width="5" height="15" fill="rgb(226,162,30)"/><text x="20.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.31%)</title><rect x="19" y="628" width="3" height="15" fill="rgb(223,139,28)"/><text x="22.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="19" y="644" width="3" height="15" fill="rgb(216,188,3)"/><text x="22.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="19" y="660" width="3" height="15" fill="rgb(240,77,42)"/><text x="22.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="19" y="676" width="3" height="15" fill="rgb(237,127,9)"/><text x="22.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="19" y="692" width="3" height="15" fill="rgb(211,171,15)"/><text x="22.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="19" y="708" width="3" height="15" fill="rgb(213,227,7)"/><text x="22.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.31%)</title><rect x="19" y="724" width="3" height="15" fill="rgb(226,50,11)"/><text x="22.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="19" y="740" width="3" height="15" fill="rgb(249,141,22)"/><text x="22.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="19" y="756" width="3" height="15" fill="rgb(234,147,21)"/><text x="22.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="19" y="772" width="3" height="15" fill="rgb(217,138,0)"/><text x="22.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="19" y="788" width="3" height="15" fill="rgb(212,203,24)"/><text x="22.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="19" y="804" width="3" height="15" fill="rgb(214,153,19)"/><text x="22.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.31%)</title><rect x="19" y="820" width="3" height="15" fill="rgb(216,66,42)"/><text x="22.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="19" y="836" width="3" height="15" fill="rgb(207,159,13)"/><text x="22.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="19" y="852" width="3" height="15" fill="rgb(233,217,32)"/><text x="22.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="19" y="868" width="3" height="15" fill="rgb(243,21,6)"/><text x="22.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="19" y="884" width="3" height="15" fill="rgb(226,6,44)"/><text x="22.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="19" y="900" width="3" height="15" fill="rgb(211,13,15)"/><text x="22.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.31%)</title><rect x="19" y="916" width="3" height="15" fill="rgb(249,151,19)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="19" y="932" width="3" height="15" fill="rgb(249,42,36)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="19" y="948" width="3" height="15" fill="rgb(218,103,37)"/><text x="22.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="19" y="964" width="3" height="15" fill="rgb(239,75,23)"/><text x="22.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="19" y="980" width="3" height="15" fill="rgb(253,130,8)"/><text x="22.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="19" y="996" width="3" height="15" fill="rgb(246,82,12)"/><text x="22.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.31%)</title><rect x="19" y="1012" width="3" height="15" fill="rgb(218,226,22)"/><text x="22.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="19" y="1028" width="3" height="15" fill="rgb(224,151,47)"/><text x="22.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="19" y="1044" width="3" height="15" fill="rgb(212,5,32)"/><text x="22.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="19" y="1060" width="3" height="15" fill="rgb(244,59,52)"/><text x="22.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="19" y="1076" width="3" height="15" fill="rgb(254,150,28)"/><text x="22.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="19" y="1092" width="3" height="15" fill="rgb(253,30,34)"/><text x="22.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.31%)</title><rect x="19" y="1108" width="3" height="15" fill="rgb(227,57,50)"/><text x="22.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="19" y="1124" width="3" height="15" fill="rgb(253,188,20)"/><text x="22.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="19" y="1140" width="3" height="15" fill="rgb(238,39,41)"/><text x="22.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="19" y="1156" width="3" height="15" fill="rgb(206,63,0)"/><text x="22.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="19" y="1172" width="3" height="15" fill="rgb(230,169,26)"/><text x="22.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="19" y="1188" width="3" height="15" fill="rgb(247,131,53)"/><text x="22.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.31%)</title><rect x="19" y="1204" width="3" height="15" fill="rgb(235,109,6)"/><text x="22.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="19" y="1220" width="3" height="15" fill="rgb(250,168,15)"/><text x="22.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="19" y="1236" width="3" height="15" fill="rgb(207,207,24)"/><text x="22.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="19" y="1252" width="3" height="15" fill="rgb(240,116,3)"/><text x="22.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="19" y="1268" width="3" height="15" fill="rgb(238,206,33)"/><text x="22.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="19" y="1284" width="3" height="15" fill="rgb(219,208,20)"/><text x="22.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.31%)</title><rect x="19" y="1300" width="3" height="15" fill="rgb(209,58,51)"/><text x="22.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="19" y="1316" width="3" height="15" fill="rgb(227,146,35)"/><text x="22.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="19" y="1332" width="3" height="15" fill="rgb(242,100,38)"/><text x="22.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="19" y="1348" width="3" height="15" fill="rgb(244,132,8)"/><text x="22.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="19" y="1364" width="3" height="15" fill="rgb(213,168,43)"/><text x="22.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="19" y="1380" width="3" height="15" fill="rgb(240,215,32)"/><text x="22.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.31%)</title><rect x="19" y="1396" width="3" height="15" fill="rgb(251,215,12)"/><text x="22.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="19" y="1412" width="3" height="15" fill="rgb(250,32,0)"/><text x="22.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="19" y="1428" width="3" height="15" fill="rgb(238,96,37)"/><text x="22.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="19" y="1444" width="3" height="15" fill="rgb(239,218,49)"/><text x="22.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="19" y="1460" width="3" height="15" fill="rgb(207,165,8)"/><text x="22.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="19" y="1476" width="3" height="15" fill="rgb(223,86,46)"/><text x="22.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.15%)</title><rect x="20" y="1492" width="2" height="15" fill="rgb(210,194,24)"/><text x="23.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="20" y="1508" width="2" height="15" fill="rgb(246,119,51)"/><text x="23.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.15%)</title><rect x="20" y="1524" width="2" height="15" fill="rgb(243,148,40)"/><text x="23.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="20" y="1540" width="2" height="15" fill="rgb(213,90,26)"/><text x="23.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="20" y="1556" width="2" height="15" fill="rgb(252,106,44)"/><text x="23.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="20" y="1572" width="2" height="15" fill="rgb(207,127,21)"/><text x="23.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="20" y="1588" width="2" height="15" fill="rgb(210,91,13)"/><text x="23.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="20" y="1604" width="2" height="15" fill="rgb(223,102,52)"/><text x="23.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="20" y="1620" width="2" height="15" fill="rgb(237,0,33)"/><text x="23.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.15%)</title><rect x="20" y="1636" width="2" height="15" fill="rgb(242,183,27)"/><text x="23.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="20" y="1652" width="2" height="15" fill="rgb(226,219,51)"/><text x="23.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="20" y="1668" width="2" height="15" fill="rgb(237,31,13)"/><text x="23.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="20" y="1684" width="2" height="15" fill="rgb(253,34,53)"/><text x="23.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="20" y="1700" width="2" height="15" fill="rgb(244,148,16)"/><text x="23.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="20" y="1716" width="2" height="15" fill="rgb(209,200,50)"/><text x="23.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="20" y="1732" width="2" height="15" fill="rgb(215,119,33)"/><text x="23.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="20" y="1748" width="2" height="15" fill="rgb(237,89,41)"/><text x="23.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.15%)</title><rect x="20" y="1764" width="2" height="15" fill="rgb(236,150,37)"/><text x="23.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="20" y="1780" width="2" height="15" fill="rgb(236,5,20)"/><text x="23.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="20" y="1796" width="2" height="15" fill="rgb(219,17,8)"/><text x="23.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="20" y="1812" width="2" height="15" fill="rgb(242,107,4)"/><text x="23.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="20" y="1828" width="2" height="15" fill="rgb(219,116,3)"/><text x="23.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="20" y="1844" width="2" height="15" fill="rgb(244,227,5)"/><text x="23.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:168) (1 samples, 0.15%)</title><rect x="20" y="1860" width="2" height="15" fill="rgb(222,71,25)"/><text x="23.00" y="1870.50"></text></g><g><title>__init__ (matplotlib/fontconfig_pattern.py:67) (1 samples, 0.15%)</title><rect x="20" y="1876" width="2" height="15" fill="rgb(220,101,43)"/><text x="23.00" y="1886.50"></text></g><g><title>__init__ (pyparsing.py:3293) (1 samples, 0.15%)</title><rect x="20" y="1892" width="2" height="15" fill="rgb(231,181,49)"/><text x="23.00" y="1902.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.15%)</title><rect x="20" y="1908" width="2" height="15" fill="rgb(249,227,9)"/><text x="23.00" y="1918.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.15%)</title><rect x="20" y="1924" width="2" height="15" fill="rgb(249,51,47)"/><text x="23.00" y="1934.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.15%)</title><rect x="20" y="1940" width="2" height="15" fill="rgb(226,193,35)"/><text x="23.00" y="1950.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.15%)</title><rect x="20" y="1956" width="2" height="15" fill="rgb(226,62,31)"/><text x="23.00" y="1966.50"></text></g><g><title>_compile (sre_compile.py:156) (1 samples, 0.15%)</title><rect x="20" y="1972" width="2" height="15" fill="rgb(231,79,19)"/><text x="23.00" y="1982.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.15%)</title><rect x="20" y="1988" width="2" height="15" fill="rgb(238,16,51)"/><text x="23.00" y="1998.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.15%)</title><rect x="20" y="2004" width="2" height="15" fill="rgb(242,211,24)"/><text x="23.00" y="2014.50"></text></g><g><title>_compile (sre_compile.py:120) (1 samples, 0.15%)</title><rect x="20" y="2020" width="2" height="15" fill="rgb(213,168,22)"/><text x="23.00" y="2030.50"></text></g><g><title>_optimize_charset (sre_compile.py:340) (1 samples, 0.15%)</title><rect x="20" y="2036" width="2" height="15" fill="rgb(253,213,43)"/><text x="23.00" y="2046.50"></text></g><g><title>root (&lt;template&gt;:100) (1 samples, 0.15%)</title><rect x="22" y="1572" width="2" height="15" fill="rgb(215,17,41)"/><text x="25.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.15%)</title><rect x="22" y="1588" width="2" height="15" fill="rgb(207,125,23)"/><text x="25.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:159) (1 samples, 0.15%)</title><rect x="22" y="1604" width="2" height="15" fill="rgb(211,21,51)"/><text x="25.00" y="1614.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.15%)</title><rect x="24" y="1604" width="2" height="15" fill="rgb(215,133,54)"/><text x="27.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.15%)</title><rect x="24" y="1620" width="2" height="15" fill="rgb(251,89,18)"/><text x="27.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.15%)</title><rect x="24" y="1636" width="2" height="15" fill="rgb(218,58,12)"/><text x="27.00" y="1646.50"></text></g><g><title>root (&lt;template&gt;:59) (2 samples, 0.31%)</title><rect x="24" y="1572" width="4" height="15" fill="rgb(233,51,53)"/><text x="27.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (2 samples, 0.31%)</title><rect x="24" y="1588" width="4" height="15" fill="rgb(248,1,11)"/><text x="27.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:199) (1 samples, 0.15%)</title><rect x="26" y="1604" width="2" height="15" fill="rgb(227,23,19)"/><text x="29.00" y="1614.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:4) (11 samples, 1.68%)</title><rect x="10" y="52" width="19" height="15" fill="rgb(230,59,47)"/><text x="13.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 1.68%)</title><rect x="10" y="68" width="19" height="15" fill="rgb(247,83,53)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 1.68%)</title><rect x="10" y="84" width="19" height="15" fill="rgb(213,218,41)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 1.68%)</title><rect x="10" y="100" width="19" height="15" fill="rgb(216,210,0)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 1.68%)</title><rect x="10" y="116" width="19" height="15" fill="rgb(221,84,53)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 1.68%)</title><rect x="10" y="132" width="19" height="15" fill="rgb(214,225,22)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:7) (8 samples, 1.22%)</title><rect x="15" y="148" width="14" height="15" fill="rgb(210,5,0)"/><text x="18.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.22%)</title><rect x="15" y="164" width="14" height="15" fill="rgb(209,62,37)"/><text x="18.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.22%)</title><rect x="15" y="180" width="14" height="15" fill="rgb(248,218,21)"/><text x="18.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.22%)</title><rect x="15" y="196" width="14" height="15" fill="rgb(236,87,21)"/><text x="18.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.22%)</title><rect x="15" y="212" width="14" height="15" fill="rgb(224,136,17)"/><text x="18.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.22%)</title><rect x="15" y="228" width="14" height="15" fill="rgb(249,229,35)"/><text x="18.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (8 samples, 1.22%)</title><rect x="15" y="244" width="14" height="15" fill="rgb(241,227,22)"/><text x="18.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.22%)</title><rect x="15" y="260" width="14" height="15" fill="rgb(216,158,21)"/><text x="18.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.22%)</title><rect x="15" y="276" width="14" height="15" fill="rgb(254,45,17)"/><text x="18.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.22%)</title><rect x="15" y="292" width="14" height="15" fill="rgb(250,174,11)"/><text x="18.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.22%)</title><rect x="15" y="308" width="14" height="15" fill="rgb(241,93,38)"/><text x="18.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.22%)</title><rect x="15" y="324" width="14" height="15" fill="rgb(252,73,37)"/><text x="18.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (7 samples, 1.07%)</title><rect x="17" y="340" width="12" height="15" fill="rgb(224,172,51)"/><text x="20.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.07%)</title><rect x="17" y="356" width="12" height="15" fill="rgb(209,55,11)"/><text x="20.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.07%)</title><rect x="17" y="372" width="12" height="15" fill="rgb(249,226,2)"/><text x="20.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.07%)</title><rect x="17" y="388" width="12" height="15" fill="rgb(222,210,15)"/><text x="20.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.07%)</title><rect x="17" y="404" width="12" height="15" fill="rgb(237,89,8)"/><text x="20.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.07%)</title><rect x="17" y="420" width="12" height="15" fill="rgb(236,8,34)"/><text x="20.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 0.61%)</title><rect x="22" y="436" width="7" height="15" fill="rgb(237,148,38)"/><text x="25.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.61%)</title><rect x="22" y="452" width="7" height="15" fill="rgb(221,106,12)"/><text x="25.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.61%)</title><rect x="22" y="468" width="7" height="15" fill="rgb(229,127,42)"/><text x="25.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.61%)</title><rect x="22" y="484" width="7" height="15" fill="rgb(248,100,35)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.61%)</title><rect x="22" y="500" width="7" height="15" fill="rgb(216,80,35)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.61%)</title><rect x="22" y="516" width="7" height="15" fill="rgb(215,92,50)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.61%)</title><rect x="22" y="532" width="7" height="15" fill="rgb(222,57,21)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.61%)</title><rect x="22" y="548" width="7" height="15" fill="rgb(243,178,1)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.61%)</title><rect x="22" y="564" width="7" height="15" fill="rgb(213,54,3)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 0.61%)</title><rect x="22" y="580" width="7" height="15" fill="rgb(223,25,22)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.61%)</title><rect x="22" y="596" width="7" height="15" fill="rgb(246,3,11)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.61%)</title><rect x="22" y="612" width="7" height="15" fill="rgb(206,157,0)"/><text x="25.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.61%)</title><rect x="22" y="628" width="7" height="15" fill="rgb(212,81,28)"/><text x="25.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.61%)</title><rect x="22" y="644" width="7" height="15" fill="rgb(240,86,11)"/><text x="25.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.61%)</title><rect x="22" y="660" width="7" height="15" fill="rgb(243,75,54)"/><text x="25.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 0.61%)</title><rect x="22" y="676" width="7" height="15" fill="rgb(234,87,40)"/><text x="25.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.61%)</title><rect x="22" y="692" width="7" height="15" fill="rgb(254,221,22)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.61%)</title><rect x="22" y="708" width="7" height="15" fill="rgb(220,221,0)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.61%)</title><rect x="22" y="724" width="7" height="15" fill="rgb(220,43,45)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.61%)</title><rect x="22" y="740" width="7" height="15" fill="rgb(244,15,17)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.61%)</title><rect x="22" y="756" width="7" height="15" fill="rgb(228,81,26)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 0.61%)</title><rect x="22" y="772" width="7" height="15" fill="rgb(240,52,11)"/><text x="25.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.61%)</title><rect x="22" y="788" width="7" height="15" fill="rgb(230,51,39)"/><text x="25.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.61%)</title><rect x="22" y="804" width="7" height="15" fill="rgb(233,90,21)"/><text x="25.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.61%)</title><rect x="22" y="820" width="7" height="15" fill="rgb(239,11,4)"/><text x="25.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.61%)</title><rect x="22" y="836" width="7" height="15" fill="rgb(246,201,18)"/><text x="25.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.61%)</title><rect x="22" y="852" width="7" height="15" fill="rgb(245,172,41)"/><text x="25.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 0.61%)</title><rect x="22" y="868" width="7" height="15" fill="rgb(210,145,6)"/><text x="25.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.61%)</title><rect x="22" y="884" width="7" height="15" fill="rgb(227,217,24)"/><text x="25.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.61%)</title><rect x="22" y="900" width="7" height="15" fill="rgb(236,186,41)"/><text x="25.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.61%)</title><rect x="22" y="916" width="7" height="15" fill="rgb(211,33,19)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.61%)</title><rect x="22" y="932" width="7" height="15" fill="rgb(254,117,26)"/><text x="25.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.61%)</title><rect x="22" y="948" width="7" height="15" fill="rgb(222,185,18)"/><text x="25.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.61%)</title><rect x="22" y="964" width="7" height="15" fill="rgb(213,119,36)"/><text x="25.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.61%)</title><rect x="22" y="980" width="7" height="15" fill="rgb(235,75,20)"/><text x="25.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.61%)</title><rect x="22" y="996" width="7" height="15" fill="rgb(247,185,42)"/><text x="25.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 0.61%)</title><rect x="22" y="1012" width="7" height="15" fill="rgb(216,198,38)"/><text x="25.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.61%)</title><rect x="22" y="1028" width="7" height="15" fill="rgb(236,55,31)"/><text x="25.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.61%)</title><rect x="22" y="1044" width="7" height="15" fill="rgb(237,46,52)"/><text x="25.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.61%)</title><rect x="22" y="1060" width="7" height="15" fill="rgb(227,2,22)"/><text x="25.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.61%)</title><rect x="22" y="1076" width="7" height="15" fill="rgb(250,38,1)"/><text x="25.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.61%)</title><rect x="22" y="1092" width="7" height="15" fill="rgb(221,128,40)"/><text x="25.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (4 samples, 0.61%)</title><rect x="22" y="1108" width="7" height="15" fill="rgb(207,92,3)"/><text x="25.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.61%)</title><rect x="22" y="1124" width="7" height="15" fill="rgb(228,224,48)"/><text x="25.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.61%)</title><rect x="22" y="1140" width="7" height="15" fill="rgb(208,74,5)"/><text x="25.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.61%)</title><rect x="22" y="1156" width="7" height="15" fill="rgb(209,197,43)"/><text x="25.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.61%)</title><rect x="22" y="1172" width="7" height="15" fill="rgb(242,46,18)"/><text x="25.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.61%)</title><rect x="22" y="1188" width="7" height="15" fill="rgb(250,211,24)"/><text x="25.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.61%)</title><rect x="22" y="1204" width="7" height="15" fill="rgb(219,54,35)"/><text x="25.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.61%)</title><rect x="22" y="1220" width="7" height="15" fill="rgb(236,135,32)"/><text x="25.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (4 samples, 0.61%)</title><rect x="22" y="1236" width="7" height="15" fill="rgb(224,196,4)"/><text x="25.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.61%)</title><rect x="22" y="1252" width="7" height="15" fill="rgb(218,227,45)"/><text x="25.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.61%)</title><rect x="22" y="1268" width="7" height="15" fill="rgb(241,100,25)"/><text x="25.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.61%)</title><rect x="22" y="1284" width="7" height="15" fill="rgb(206,212,8)"/><text x="25.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.61%)</title><rect x="22" y="1300" width="7" height="15" fill="rgb(239,91,43)"/><text x="25.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.61%)</title><rect x="22" y="1316" width="7" height="15" fill="rgb(253,71,42)"/><text x="25.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.61%)</title><rect x="22" y="1332" width="7" height="15" fill="rgb(213,127,26)"/><text x="25.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.61%)</title><rect x="22" y="1348" width="7" height="15" fill="rgb(226,29,47)"/><text x="25.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (4 samples, 0.61%)</title><rect x="22" y="1364" width="7" height="15" fill="rgb(226,143,20)"/><text x="25.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.61%)</title><rect x="22" y="1380" width="7" height="15" fill="rgb(211,103,28)"/><text x="25.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.61%)</title><rect x="22" y="1396" width="7" height="15" fill="rgb(229,38,35)"/><text x="25.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.61%)</title><rect x="22" y="1412" width="7" height="15" fill="rgb(236,10,8)"/><text x="25.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.61%)</title><rect x="22" y="1428" width="7" height="15" fill="rgb(248,181,26)"/><text x="25.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.61%)</title><rect x="22" y="1444" width="7" height="15" fill="rgb(213,222,9)"/><text x="25.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (4 samples, 0.61%)</title><rect x="22" y="1460" width="7" height="15" fill="rgb(233,129,42)"/><text x="25.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (4 samples, 0.61%)</title><rect x="22" y="1476" width="7" height="15" fill="rgb(228,106,36)"/><text x="25.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (4 samples, 0.61%)</title><rect x="22" y="1492" width="7" height="15" fill="rgb(249,53,20)"/><text x="25.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (4 samples, 0.61%)</title><rect x="22" y="1508" width="7" height="15" fill="rgb(210,115,50)"/><text x="25.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (4 samples, 0.61%)</title><rect x="22" y="1524" width="7" height="15" fill="rgb(233,209,38)"/><text x="25.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (4 samples, 0.61%)</title><rect x="22" y="1540" width="7" height="15" fill="rgb(227,154,3)"/><text x="25.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (4 samples, 0.61%)</title><rect x="22" y="1556" width="7" height="15" fill="rgb(220,86,5)"/><text x="25.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:78) (1 samples, 0.15%)</title><rect x="28" y="1572" width="1" height="15" fill="rgb(225,224,48)"/><text x="31.00" y="1582.50"></text></g><g><title>0x7fa55107ccb2 (?) (1 samples, 0.15%)</title><rect x="28" y="1588" width="1" height="15" fill="rgb(221,193,27)"/><text x="31.00" y="1598.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.15%)</title><rect x="28" y="1604" width="1" height="15" fill="rgb(216,75,24)"/><text x="31.00" y="1614.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.15%)</title><rect x="29" y="100" width="2" height="15" fill="rgb(234,221,34)"/><text x="32.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:88) (1 samples, 0.15%)</title><rect x="29" y="116" width="2" height="15" fill="rgb(205,2,46)"/><text x="32.00" y="126.50"></text></g><g><title>_modify_dimension (mlprodict/onnxrt/validate/validate_problems.py:89) (1 samples, 0.15%)</title><rect x="29" y="132" width="2" height="15" fill="rgb(209,39,9)"/><text x="32.00" y="142.50"></text></g><g><title>var (&lt;__array_function__ internals&gt;:6) (1 samples, 0.15%)</title><rect x="29" y="148" width="2" height="15" fill="rgb(238,104,17)"/><text x="32.00" y="158.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.15%)</title><rect x="29" y="164" width="2" height="15" fill="rgb(235,77,4)"/><text x="32.00" y="174.50"></text></g><g><title>var (numpy/core/fromnumeric.py:3506) (1 samples, 0.15%)</title><rect x="29" y="180" width="2" height="15" fill="rgb(211,70,34)"/><text x="32.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.15%)</title><rect x="29" y="196" width="2" height="15" fill="rgb(207,140,32)"/><text x="32.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.15%)</title><rect x="29" y="212" width="2" height="15" fill="rgb(210,130,24)"/><text x="32.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.15%)</title><rect x="29" y="228" width="2" height="15" fill="rgb(236,82,13)"/><text x="32.00" y="238.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:40) (3 samples, 0.46%)</title><rect x="29" y="52" width="6" height="15" fill="rgb(235,126,49)"/><text x="32.00" y="62.50"></text></g><g><title>start (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:11) (3 samples, 0.46%)</title><rect x="29" y="68" width="6" height="15" fill="rgb(207,17,15)"/><text x="32.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:39) (3 samples, 0.46%)</title><rect x="29" y="84" width="6" height="15" fill="rgb(234,89,5)"/><text x="32.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:155) (2 samples, 0.31%)</title><rect x="31" y="100" width="4" height="15" fill="rgb(210,43,15)"/><text x="34.00" y="110.50"></text></g><g><title>__close (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="33" y="116" width="2" height="15" fill="rgb(240,34,34)"/><text x="36.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.15%)</title><rect x="38" y="116" width="2" height="15" fill="rgb(250,101,24)"/><text x="41.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.15%)</title><rect x="38" y="132" width="2" height="15" fill="rgb(211,67,37)"/><text x="41.00" y="142.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.15%)</title><rect x="38" y="148" width="2" height="15" fill="rgb(217,81,42)"/><text x="41.00" y="158.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.15%)</title><rect x="38" y="164" width="2" height="15" fill="rgb(246,180,20)"/><text x="41.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.15%)</title><rect x="46" y="148" width="1" height="15" fill="rgb(223,143,49)"/><text x="49.00" y="158.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.15%)</title><rect x="46" y="164" width="1" height="15" fill="rgb(246,201,10)"/><text x="49.00" y="174.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.15%)</title><rect x="46" y="180" width="1" height="15" fill="rgb(240,77,19)"/><text x="49.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:888) (1 samples, 0.15%)</title><rect x="47" y="164" width="2" height="15" fill="rgb(223,146,18)"/><text x="50.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.15%)</title><rect x="49" y="164" width="2" height="15" fill="rgb(223,48,37)"/><text x="52.00" y="174.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.15%)</title><rect x="58" y="196" width="2" height="15" fill="rgb(252,159,22)"/><text x="61.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (9 samples, 1.37%)</title><rect x="47" y="148" width="17" height="15" fill="rgb(228,19,22)"/><text x="50.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (7 samples, 1.07%)</title><rect x="51" y="164" width="13" height="15" fill="rgb(205,172,41)"/><text x="54.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 0.76%)</title><rect x="55" y="180" width="9" height="15" fill="rgb(237,49,39)"/><text x="58.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.31%)</title><rect x="60" y="196" width="4" height="15" fill="rgb(236,59,25)"/><text x="63.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:461) (1 samples, 0.15%)</title><rect x="64" y="180" width="1" height="15" fill="rgb(234,99,49)"/><text x="67.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.15%)</title><rect x="65" y="180" width="2" height="15" fill="rgb(251,114,7)"/><text x="68.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.15%)</title><rect x="67" y="180" width="2" height="15" fill="rgb(243,93,34)"/><text x="70.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 0.61%)</title><rect x="69" y="180" width="7" height="15" fill="rgb(212,146,12)"/><text x="72.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:479) (3 samples, 0.46%)</title><rect x="71" y="196" width="5" height="15" fill="rgb(210,83,44)"/><text x="74.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (5 samples, 0.76%)</title><rect x="76" y="212" width="9" height="15" fill="rgb(249,22,39)"/><text x="79.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (6 samples, 0.92%)</title><rect x="76" y="180" width="11" height="15" fill="rgb(220,103,40)"/><text x="79.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (6 samples, 0.92%)</title><rect x="76" y="196" width="11" height="15" fill="rgb(237,18,40)"/><text x="79.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.15%)</title><rect x="85" y="212" width="2" height="15" fill="rgb(247,83,39)"/><text x="88.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (2 samples, 0.31%)</title><rect x="87" y="180" width="4" height="15" fill="rgb(240,156,43)"/><text x="90.00" y="190.50"></text></g><g><title>arraydescr_new (descriptor.c:2261) (1 samples, 0.15%)</title><rect x="89" y="196" width="2" height="15" fill="rgb(207,1,6)"/><text x="92.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 0.46%)</title><rect x="91" y="180" width="5" height="15" fill="rgb(248,64,10)"/><text x="94.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.46%)</title><rect x="91" y="196" width="5" height="15" fill="rgb(217,223,16)"/><text x="94.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.31%)</title><rect x="92" y="212" width="4" height="15" fill="rgb(245,102,6)"/><text x="95.00" y="222.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c:326) (1 samples, 0.15%)</title><rect x="94" y="228" width="2" height="15" fill="rgb(231,179,6)"/><text x="97.00" y="238.50"></text></g><g><title>0x7fa561f4d7c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="94" y="244" width="2" height="15" fill="rgb(232,175,42)"/><text x="97.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.15%)</title><rect x="100" y="196" width="1" height="15" fill="rgb(233,92,24)"/><text x="103.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.15%)</title><rect x="101" y="196" width="2" height="15" fill="rgb(210,139,44)"/><text x="104.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.15%)</title><rect x="103" y="196" width="2" height="15" fill="rgb(248,117,24)"/><text x="106.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (6 samples, 0.92%)</title><rect x="96" y="180" width="11" height="15" fill="rgb(208,101,17)"/><text x="99.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.15%)</title><rect x="105" y="196" width="2" height="15" fill="rgb(222,206,20)"/><text x="108.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.15%)</title><rect x="109" y="196" width="1" height="15" fill="rgb(227,12,6)"/><text x="112.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (3 samples, 0.46%)</title><rect x="107" y="180" width="5" height="15" fill="rgb(254,138,52)"/><text x="110.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.15%)</title><rect x="110" y="196" width="2" height="15" fill="rgb(237,176,52)"/><text x="113.00" y="206.50"></text></g><g><title>0x7fa562d41e7a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="121" y="212" width="2" height="15" fill="rgb(245,152,15)"/><text x="124.00" y="222.50"></text></g><g><title>0x7fa562e0a0e6 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="123" y="212" width="2" height="15" fill="rgb(246,78,16)"/><text x="126.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (5 samples, 0.76%)</title><rect x="125" y="212" width="9" height="15" fill="rgb(245,227,53)"/><text x="128.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (12 samples, 1.83%)</title><rect x="114" y="196" width="22" height="15" fill="rgb(238,175,2)"/><text x="117.00" y="206.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.15%)</title><rect x="134" y="212" width="2" height="15" fill="rgb(236,210,32)"/><text x="137.00" y="222.50"></text></g><g><title>0x7fa562d3c6d0 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="134" y="228" width="2" height="15" fill="rgb(219,99,18)"/><text x="137.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (14 samples, 2.14%)</title><rect x="112" y="180" width="25" height="15" fill="rgb(248,159,13)"/><text x="115.00" y="190.50">c..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.15%)</title><rect x="136" y="196" width="1" height="15" fill="rgb(234,147,20)"/><text x="139.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.15%)</title><rect x="136" y="212" width="1" height="15" fill="rgb(212,88,45)"/><text x="139.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (7 samples, 1.07%)</title><rect x="141" y="196" width="13" height="15" fill="rgb(251,109,42)"/><text x="144.00" y="206.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.15%)</title><rect x="152" y="212" width="2" height="15" fill="rgb(251,165,52)"/><text x="155.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.15%)</title><rect x="154" y="196" width="1" height="15" fill="rgb(218,173,39)"/><text x="157.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (15 samples, 2.29%)</title><rect x="137" y="180" width="27" height="15" fill="rgb(249,51,41)"/><text x="140.00" y="190.50">c..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (5 samples, 0.76%)</title><rect x="155" y="196" width="9" height="15" fill="rgb(226,81,43)"/><text x="158.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 0.46%)</title><rect x="159" y="212" width="5" height="15" fill="rgb(230,126,6)"/><text x="162.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.15%)</title><rect x="163" y="228" width="1" height="15" fill="rgb(224,74,5)"/><text x="166.00" y="238.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (58 samples, 8.85%)</title><rect x="64" y="164" width="104" height="15" fill="rgb(218,124,17)"/><text x="67.00" y="174.50">_validate_X_..</text></g><g><title>check_array (sklearn/utils/validation.py:572) (2 samples, 0.31%)</title><rect x="164" y="180" width="4" height="15" fill="rgb(253,95,36)"/><text x="167.00" y="190.50"></text></g><g><title>array_ndim_get (getset.c:30) (1 samples, 0.15%)</title><rect x="166" y="196" width="2" height="15" fill="rgb(211,39,35)"/><text x="169.00" y="206.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:381) (1 samples, 0.15%)</title><rect x="168" y="164" width="2" height="15" fill="rgb(246,178,42)"/><text x="171.00" y="174.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.15%)</title><rect x="168" y="180" width="2" height="15" fill="rgb(227,190,29)"/><text x="171.00" y="190.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (60 samples, 9.16%)</title><rect x="64" y="148" width="108" height="15" fill="rgb(219,191,8)"/><text x="67.00" y="158.50">predict (skle..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (1 samples, 0.15%)</title><rect x="170" y="164" width="2" height="15" fill="rgb(248,187,43)"/><text x="173.00" y="174.50"></text></g><g><title>0x7fa53d386cd1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="172" y="196" width="1" height="15" fill="rgb(238,109,50)"/><text x="175.00" y="206.50"></text></g><g><title>0x7fa53d396f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="172" y="180" width="3" height="15" fill="rgb(227,104,2)"/><text x="175.00" y="190.50"></text></g><g><title>0x7fa53d386d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="173" y="196" width="2" height="15" fill="rgb(241,228,48)"/><text x="176.00" y="206.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.15%)</title><rect x="173" y="212" width="2" height="15" fill="rgb(252,65,28)"/><text x="176.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.15%)</title><rect x="173" y="228" width="2" height="15" fill="rgb(252,39,28)"/><text x="176.00" y="238.50"></text></g><g><title>_array_fill_strides (ctors.c:4084) (1 samples, 0.15%)</title><rect x="173" y="244" width="2" height="15" fill="rgb(228,141,51)"/><text x="176.00" y="254.50"></text></g><g><title>0x7fa53d396f58 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="175" y="180" width="2" height="15" fill="rgb(224,125,52)"/><text x="178.00" y="190.50"></text></g><g><title>0x7fa53d396f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="177" y="180" width="2" height="15" fill="rgb(228,97,22)"/><text x="180.00" y="190.50"></text></g><g><title>0x7fa53d3a5225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="179" y="212" width="2" height="15" fill="rgb(220,178,42)"/><text x="182.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.15%)</title><rect x="179" y="228" width="2" height="15" fill="rgb(232,60,12)"/><text x="182.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.15%)</title><rect x="179" y="244" width="2" height="15" fill="rgb(242,38,13)"/><text x="182.00" y="254.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.15%)</title><rect x="179" y="260" width="2" height="15" fill="rgb(236,172,17)"/><text x="182.00" y="270.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.15%)</title><rect x="179" y="276" width="2" height="15" fill="rgb(206,191,5)"/><text x="182.00" y="286.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4556) (1 samples, 0.15%)</title><rect x="179" y="292" width="2" height="15" fill="rgb(230,166,2)"/><text x="182.00" y="302.50"></text></g><g><title>0x7fa53d37f0e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="181" y="260" width="1" height="15" fill="rgb(208,222,10)"/><text x="184.00" y="270.50"></text></g><g><title>0x7fa53d3a52df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="181" y="212" width="3" height="15" fill="rgb(213,38,40)"/><text x="184.00" y="222.50"></text></g><g><title>0x7fa53d389d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="181" y="228" width="3" height="15" fill="rgb(246,193,38)"/><text x="184.00" y="238.50"></text></g><g><title>0x7fa53d389666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="181" y="244" width="3" height="15" fill="rgb(206,156,1)"/><text x="184.00" y="254.50"></text></g><g><title>0x7fa53d37f2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="182" y="260" width="2" height="15" fill="rgb(253,162,5)"/><text x="185.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.15%)</title><rect x="182" y="276" width="2" height="15" fill="rgb(249,201,24)"/><text x="185.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.15%)</title><rect x="182" y="292" width="2" height="15" fill="rgb(249,19,47)"/><text x="185.00" y="302.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.15%)</title><rect x="182" y="308" width="2" height="15" fill="rgb(220,106,19)"/><text x="185.00" y="318.50"></text></g><g><title>_buffer_format_string (buffer.c:237) (1 samples, 0.15%)</title><rect x="182" y="324" width="2" height="15" fill="rgb(248,121,51)"/><text x="185.00" y="334.50"></text></g><g><title>0x7fa53d3a553e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="184" y="212" width="2" height="15" fill="rgb(239,191,38)"/><text x="187.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (2 samples, 0.31%)</title><rect x="186" y="228" width="4" height="15" fill="rgb(240,103,46)"/><text x="189.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (2 samples, 0.31%)</title><rect x="186" y="244" width="4" height="15" fill="rgb(230,228,1)"/><text x="189.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (2 samples, 0.31%)</title><rect x="186" y="260" width="4" height="15" fill="rgb(219,189,1)"/><text x="189.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (2 samples, 0.31%)</title><rect x="186" y="276" width="4" height="15" fill="rgb(243,54,5)"/><text x="189.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (2 samples, 0.31%)</title><rect x="186" y="292" width="4" height="15" fill="rgb(223,173,49)"/><text x="189.00" y="302.50"></text></g><g><title>0x7fa561f4d600 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="188" y="308" width="2" height="15" fill="rgb(222,66,1)"/><text x="191.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.15%)</title><rect x="190" y="276" width="1" height="15" fill="rgb(240,226,6)"/><text x="193.00" y="286.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (1 samples, 0.15%)</title><rect x="190" y="292" width="1" height="15" fill="rgb(238,36,30)"/><text x="193.00" y="302.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:252) (1 samples, 0.15%)</title><rect x="190" y="308" width="1" height="15" fill="rgb(225,183,9)"/><text x="193.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="190" y="324" width="1" height="15" fill="rgb(208,181,16)"/><text x="193.00" y="334.50"></text></g><g><title>0x7fa53d3a5592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.61%)</title><rect x="186" y="212" width="7" height="15" fill="rgb(218,78,48)"/><text x="189.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (2 samples, 0.31%)</title><rect x="190" y="228" width="3" height="15" fill="rgb(243,224,19)"/><text x="193.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.31%)</title><rect x="190" y="244" width="3" height="15" fill="rgb(254,146,19)"/><text x="193.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (2 samples, 0.31%)</title><rect x="190" y="260" width="3" height="15" fill="rgb(214,142,43)"/><text x="193.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.15%)</title><rect x="191" y="276" width="2" height="15" fill="rgb(206,148,6)"/><text x="194.00" y="286.50"></text></g><g><title>0x7fa53d3a5687 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="193" y="212" width="2" height="15" fill="rgb(219,67,44)"/><text x="196.00" y="222.50"></text></g><g><title>0x7fa53d3a5698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="195" y="212" width="2" height="15" fill="rgb(215,25,18)"/><text x="198.00" y="222.50"></text></g><g><title>0x7fa53d3a56a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="197" y="212" width="2" height="15" fill="rgb(239,20,27)"/><text x="200.00" y="222.50"></text></g><g><title>0x7fa53d3a56aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="199" y="212" width="1" height="15" fill="rgb(222,132,25)"/><text x="202.00" y="222.50"></text></g><g><title>0x7fa53d3a56ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.76%)</title><rect x="200" y="212" width="9" height="15" fill="rgb(213,214,23)"/><text x="203.00" y="222.50"></text></g><g><title>0x7fa53d3a56b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="209" y="212" width="2" height="15" fill="rgb(222,166,3)"/><text x="212.00" y="222.50"></text></g><g><title>0x7fa53d3a56c6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="211" y="212" width="2" height="15" fill="rgb(232,76,34)"/><text x="214.00" y="222.50"></text></g><g><title>0x7fa53d3a56c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="213" y="212" width="2" height="15" fill="rgb(220,120,1)"/><text x="216.00" y="222.50"></text></g><g><title>0x7fa53d3a56cf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="215" y="212" width="2" height="15" fill="rgb(211,121,5)"/><text x="218.00" y="222.50"></text></g><g><title>0x7fa53d3a57a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="217" y="212" width="1" height="15" fill="rgb(248,202,31)"/><text x="220.00" y="222.50"></text></g><g><title>0x7fa53d3a57b0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="218" y="212" width="2" height="15" fill="rgb(215,93,48)"/><text x="221.00" y="222.50"></text></g><g><title>0x7fa53d3a592f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="220" y="212" width="2" height="15" fill="rgb(232,10,21)"/><text x="223.00" y="222.50"></text></g><g><title>0x7fa53d37aa05 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="220" y="228" width="2" height="15" fill="rgb(240,65,0)"/><text x="223.00" y="238.50"></text></g><g><title>0x7fa53d37d529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="222" y="228" width="2" height="15" fill="rgb(219,118,46)"/><text x="225.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.15%)</title><rect x="222" y="244" width="2" height="15" fill="rgb(215,111,21)"/><text x="225.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.15%)</title><rect x="222" y="260" width="2" height="15" fill="rgb(219,3,35)"/><text x="225.00" y="270.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.15%)</title><rect x="222" y="276" width="2" height="15" fill="rgb(248,96,18)"/><text x="225.00" y="286.50"></text></g><g><title>_buffer_format_string (buffer.c:365) (1 samples, 0.15%)</title><rect x="222" y="292" width="2" height="15" fill="rgb(207,190,47)"/><text x="225.00" y="302.50"></text></g><g><title>_is_natively_aligned_at (buffer.c:216) (1 samples, 0.15%)</title><rect x="222" y="308" width="2" height="15" fill="rgb(250,52,37)"/><text x="225.00" y="318.50"></text></g><g><title>0x7fa53d396fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (26 samples, 3.97%)</title><rect x="179" y="180" width="47" height="15" fill="rgb(212,132,26)"/><text x="182.00" y="190.50">0x7f..</text></g><g><title>0x7fa53d3a6405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (26 samples, 3.97%)</title><rect x="179" y="196" width="47" height="15" fill="rgb(215,147,42)"/><text x="182.00" y="206.50">0x7f..</text></g><g><title>0x7fa53d3a5c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="222" y="212" width="4" height="15" fill="rgb(208,89,17)"/><text x="225.00" y="222.50"></text></g><g><title>0x7fa53d37d5f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="224" y="228" width="2" height="15" fill="rgb(216,30,21)"/><text x="227.00" y="238.50"></text></g><g><title>0x7fa53d37cfda (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="224" y="244" width="2" height="15" fill="rgb(207,112,5)"/><text x="227.00" y="254.50"></text></g><g><title>0x7fa53d37c900 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="224" y="260" width="2" height="15" fill="rgb(237,112,51)"/><text x="227.00" y="270.50"></text></g><g><title>array_take (methods.c:138) (2 samples, 0.31%)</title><rect x="226" y="196" width="3" height="15" fill="rgb(210,200,4)"/><text x="229.00" y="206.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.15%)</title><rect x="227" y="212" width="2" height="15" fill="rgb(217,183,35)"/><text x="230.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3957) (2 samples, 0.31%)</title><rect x="229" y="228" width="4" height="15" fill="rgb(220,115,32)"/><text x="232.00" y="238.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (4 samples, 0.61%)</title><rect x="229" y="212" width="7" height="15" fill="rgb(209,136,39)"/><text x="232.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3972) (2 samples, 0.31%)</title><rect x="233" y="228" width="3" height="15" fill="rgb(227,45,46)"/><text x="236.00" y="238.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="235" y="244" width="1" height="15" fill="rgb(209,139,1)"/><text x="238.00" y="254.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3002) (1 samples, 0.15%)</title><rect x="236" y="228" width="2" height="15" fill="rgb(242,118,39)"/><text x="239.00" y="238.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (2 samples, 0.31%)</title><rect x="236" y="212" width="4" height="15" fill="rgb(219,179,15)"/><text x="239.00" y="222.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.15%)</title><rect x="238" y="228" width="2" height="15" fill="rgb(209,29,40)"/><text x="241.00" y="238.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.15%)</title><rect x="238" y="244" width="2" height="15" fill="rgb(212,78,44)"/><text x="241.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.15%)</title><rect x="238" y="260" width="2" height="15" fill="rgb(230,121,40)"/><text x="241.00" y="270.50"></text></g><g><title>0x7fa53d39705a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.37%)</title><rect x="226" y="180" width="16" height="15" fill="rgb(221,175,34)"/><text x="229.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (7 samples, 1.07%)</title><rect x="229" y="196" width="13" height="15" fill="rgb(237,204,32)"/><text x="232.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:72) (1 samples, 0.15%)</title><rect x="240" y="212" width="2" height="15" fill="rgb(216,110,39)"/><text x="243.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.15%)</title><rect x="242" y="196" width="2" height="15" fill="rgb(208,155,10)"/><text x="245.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.15%)</title><rect x="242" y="212" width="2" height="15" fill="rgb(242,75,33)"/><text x="245.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:728) (1 samples, 0.15%)</title><rect x="242" y="228" width="2" height="15" fill="rgb(240,95,45)"/><text x="245.00" y="238.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.15%)</title><rect x="242" y="244" width="2" height="15" fill="rgb(240,203,38)"/><text x="245.00" y="254.50"></text></g><g><title>0x7fa562d2b902 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="242" y="260" width="2" height="15" fill="rgb(232,91,32)"/><text x="245.00" y="270.50"></text></g><g><title>0x7fa53d39714f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="242" y="180" width="4" height="15" fill="rgb(210,182,11)"/><text x="245.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.15%)</title><rect x="244" y="196" width="2" height="15" fill="rgb(243,88,32)"/><text x="247.00" y="206.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.15%)</title><rect x="244" y="212" width="2" height="15" fill="rgb(239,17,47)"/><text x="247.00" y="222.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.15%)</title><rect x="244" y="228" width="2" height="15" fill="rgb(252,13,2)"/><text x="247.00" y="238.50"></text></g><g><title>PyDataMem_FREE (alloc.c:273) (1 samples, 0.15%)</title><rect x="244" y="244" width="2" height="15" fill="rgb(248,126,42)"/><text x="247.00" y="254.50"></text></g><g><title>0x7fa53d397163 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="246" y="180" width="1" height="15" fill="rgb(233,134,1)"/><text x="249.00" y="190.50"></text></g><g><title>0x7fa53d3971bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="247" y="180" width="2" height="15" fill="rgb(231,203,17)"/><text x="250.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.15%)</title><rect x="247" y="196" width="2" height="15" fill="rgb(214,2,7)"/><text x="250.00" y="206.50"></text></g><g><title>0x7fa562d4173b (libc-2.29.so) (1 samples, 0.15%)</title><rect x="249" y="228" width="2" height="15" fill="rgb(254,193,42)"/><text x="252.00" y="238.50"></text></g><g><title>array_reshape (methods.c:186) (2 samples, 0.31%)</title><rect x="249" y="196" width="4" height="15" fill="rgb(244,165,1)"/><text x="252.00" y="206.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (2 samples, 0.31%)</title><rect x="249" y="212" width="4" height="15" fill="rgb(239,80,2)"/><text x="252.00" y="222.50"></text></g><g><title>0x7fa562d41744 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="251" y="228" width="2" height="15" fill="rgb(207,45,14)"/><text x="254.00" y="238.50"></text></g><g><title>0x7fa53d397328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.46%)</title><rect x="249" y="180" width="6" height="15" fill="rgb(213,74,24)"/><text x="252.00" y="190.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.15%)</title><rect x="253" y="196" width="2" height="15" fill="rgb(227,33,49)"/><text x="256.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.15%)</title><rect x="253" y="212" width="2" height="15" fill="rgb(209,191,32)"/><text x="256.00" y="222.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.15%)</title><rect x="253" y="228" width="2" height="15" fill="rgb(228,58,26)"/><text x="256.00" y="238.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.15%)</title><rect x="253" y="244" width="2" height="15" fill="rgb(229,125,2)"/><text x="256.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.15%)</title><rect x="253" y="260" width="2" height="15" fill="rgb(234,185,25)"/><text x="256.00" y="270.50"></text></g><g><title>0x7fa561f4d600 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="253" y="276" width="2" height="15" fill="rgb(253,176,22)"/><text x="256.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (47 samples, 7.18%)</title><rect x="172" y="148" width="84" height="15" fill="rgb(220,49,24)"/><text x="175.00" y="158.50">predict (..</text></g><g><title>0x7fa53d397d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (47 samples, 7.18%)</title><rect x="172" y="164" width="84" height="15" fill="rgb(254,87,39)"/><text x="175.00" y="174.50">0x7fa53d3..</text></g><g><title>0x7fa53d397330 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="255" y="180" width="1" height="15" fill="rgb(206,43,44)"/><text x="258.00" y="190.50"></text></g><g><title>predict (sklearn/tree/_classes.py:421) (2 samples, 0.31%)</title><rect x="256" y="148" width="4" height="15" fill="rgb(246,128,35)"/><text x="259.00" y="158.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:54) (126 samples, 19.24%)</title><rect x="35" y="52" width="227" height="15" fill="rgb(254,30,48)"/><text x="38.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRe..</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:53) (126 samples, 19.24%)</title><rect x="35" y="68" width="227" height="15" fill="rgb(249,133,2)"/><text x="38.00" y="78.50">profile_skl (bench_DecisionTre..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:37) (126 samples, 19.24%)</title><rect x="35" y="84" width="227" height="15" fill="rgb(225,121,43)"/><text x="38.00" y="94.50">setup_profile (bench_DecisionT..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:31) (126 samples, 19.24%)</title><rect x="35" y="100" width="227" height="15" fill="rgb(230,223,32)"/><text x="38.00" y="110.50">profile (bench_DecisionTreeReg..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (123 samples, 18.78%)</title><rect x="40" y="116" width="222" height="15" fill="rgb(234,73,37)"/><text x="43.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (121 samples, 18.47%)</title><rect x="44" y="132" width="218" height="15" fill="rgb(225,174,30)"/><text x="47.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (1 samples, 0.15%)</title><rect x="260" y="148" width="2" height="15" fill="rgb(226,225,30)"/><text x="263.00" y="158.50"></text></g><g><title>0x7fa52384454f (?) (1 samples, 0.15%)</title><rect x="262" y="244" width="2" height="15" fill="rgb(219,35,9)"/><text x="265.00" y="254.50"></text></g><g><title>0x7fa52384a65e (?) (1 samples, 0.15%)</title><rect x="262" y="260" width="2" height="15" fill="rgb(240,2,6)"/><text x="265.00" y="270.50"></text></g><g><title>0x7fa52384a50f (?) (1 samples, 0.15%)</title><rect x="262" y="276" width="2" height="15" fill="rgb(231,149,5)"/><text x="265.00" y="286.50"></text></g><g><title>0x7fa523850d6c (?) (1 samples, 0.15%)</title><rect x="262" y="292" width="2" height="15" fill="rgb(244,92,17)"/><text x="265.00" y="302.50"></text></g><g><title>0x7fa52cd31ab9 (?) (1 samples, 0.15%)</title><rect x="262" y="308" width="2" height="15" fill="rgb(214,3,25)"/><text x="265.00" y="318.50"></text></g><g><title>0x7fa52cd32ea9 (?) (1 samples, 0.15%)</title><rect x="262" y="324" width="2" height="15" fill="rgb(234,209,37)"/><text x="265.00" y="334.50"></text></g><g><title>0x7fa52cd32ea0 (libgomp.so.1.0.0) (4 samples, 0.61%)</title><rect x="264" y="484" width="7" height="15" fill="rgb(211,43,48)"/><text x="267.00" y="494.50"></text></g><g><title>0x7fa52cd32ea9 (libgomp.so.1.0.0) (15 samples, 2.29%)</title><rect x="271" y="484" width="27" height="15" fill="rgb(246,124,2)"/><text x="274.00" y="494.50">0..</text></g><g><title>0x7fa52cd32eab (libgomp.so.1.0.0) (12 samples, 1.83%)</title><rect x="298" y="484" width="21" height="15" fill="rgb(205,228,20)"/><text x="301.00" y="494.50"></text></g><g><title>0x7fa52cd31ab9 (libgomp.so.1.0.0) (49 samples, 7.48%)</title><rect x="264" y="468" width="88" height="15" fill="rgb(229,68,11)"/><text x="267.00" y="478.50">0x7fa52cd3..</text></g><g><title>0x7fa52cd32ead (libgomp.so.1.0.0) (18 samples, 2.75%)</title><rect x="319" y="484" width="33" height="15" fill="rgb(238,18,49)"/><text x="322.00" y="494.50">0x..</text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:61) (51 samples, 7.79%)</title><rect x="262" y="52" width="92" height="15" fill="rgb(239,220,48)"/><text x="265.00" y="62.50">&lt;module&gt; (..</text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:60) (51 samples, 7.79%)</title><rect x="262" y="68" width="92" height="15" fill="rgb(235,169,12)"/><text x="265.00" y="78.50">profile_py..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:37) (51 samples, 7.79%)</title><rect x="262" y="84" width="92" height="15" fill="rgb(228,121,5)"/><text x="265.00" y="94.50">setup_prof..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:31) (51 samples, 7.79%)</title><rect x="262" y="100" width="92" height="15" fill="rgb(237,129,33)"/><text x="265.00" y="110.50">profile (b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (51 samples, 7.79%)</title><rect x="262" y="116" width="92" height="15" fill="rgb(215,39,46)"/><text x="265.00" y="126.50">time_predi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (51 samples, 7.79%)</title><rect x="262" y="132" width="92" height="15" fill="rgb(239,169,4)"/><text x="265.00" y="142.50">&lt;lambda&gt; (..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (51 samples, 7.79%)</title><rect x="262" y="148" width="92" height="15" fill="rgb(244,156,17)"/><text x="265.00" y="158.50">run (mlpro..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (51 samples, 7.79%)</title><rect x="262" y="164" width="92" height="15" fill="rgb(215,154,48)"/><text x="265.00" y="174.50">_run_seque..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (51 samples, 7.79%)</title><rect x="262" y="180" width="92" height="15" fill="rgb(210,166,2)"/><text x="265.00" y="190.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (51 samples, 7.79%)</title><rect x="262" y="196" width="92" height="15" fill="rgb(244,220,9)"/><text x="265.00" y="206.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (51 samples, 7.79%)</title><rect x="262" y="212" width="92" height="15" fill="rgb(216,115,17)"/><text x="265.00" y="222.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (51 samples, 7.79%)</title><rect x="262" y="228" width="92" height="15" fill="rgb(237,42,46)"/><text x="265.00" y="238.50">_run (mlpr..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (50 samples, 7.63%)</title><rect x="264" y="244" width="90" height="15" fill="rgb(243,45,46)"/><text x="267.00" y="254.50">pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (50 samples, 7.63%)</title><rect x="264" y="260" width="90" height="15" fill="rgb(253,196,11)"/><text x="267.00" y="270.50">void pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (50 samples, 7.63%)</title><rect x="264" y="276" width="90" height="15" fill="rgb(212,229,50)"/><text x="267.00" y="286.50">void pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (50 samples, 7.63%)</title><rect x="264" y="292" width="90" height="15" fill="rgb(243,2,21)"/><text x="267.00" y="302.50">pybind11::..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (50 samples, 7.63%)</title><rect x="264" y="308" width="90" height="15" fill="rgb(253,30,30)"/><text x="267.00" y="318.50">pybind11::..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (50 samples, 7.63%)</title><rect x="264" y="324" width="90" height="15" fill="rgb(205,193,10)"/><text x="267.00" y="334.50">pybind11::..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (50 samples, 7.63%)</title><rect x="264" y="340" width="90" height="15" fill="rgb(241,129,5)"/><text x="267.00" y="350.50">pybind11::..</text></g><g><title>pybind11::array::~array (numpy.h:538) (50 samples, 7.63%)</title><rect x="264" y="356" width="90" height="15" fill="rgb(212,52,51)"/><text x="267.00" y="366.50">pybind11::..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (50 samples, 7.63%)</title><rect x="264" y="372" width="90" height="15" fill="rgb(222,186,49)"/><text x="267.00" y="382.50">pybind11::..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (50 samples, 7.63%)</title><rect x="264" y="388" width="90" height="15" fill="rgb(226,68,32)"/><text x="267.00" y="398.50">pybind11::..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (50 samples, 7.63%)</title><rect x="264" y="404" width="90" height="15" fill="rgb(236,141,44)"/><text x="267.00" y="414.50">pybind11::..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (50 samples, 7.63%)</title><rect x="264" y="420" width="90" height="15" fill="rgb(208,34,2)"/><text x="267.00" y="430.50">RuntimeTre..</text></g><g><title>pybind11::array::size (numpy.h:619) (50 samples, 7.63%)</title><rect x="264" y="436" width="90" height="15" fill="rgb(223,164,43)"/><text x="267.00" y="446.50">pybind11::..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (50 samples, 7.63%)</title><rect x="264" y="452" width="90" height="15" fill="rgb(249,25,37)"/><text x="267.00" y="462.50">std::accum..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.15%)</title><rect x="352" y="468" width="2" height="15" fill="rgb(217,44,36)"/><text x="355.00" y="478.50"></text></g><g><title>0x7fa52cd30daa (libgomp.so.1.0.0) (1 samples, 0.15%)</title><rect x="352" y="484" width="2" height="15" fill="rgb(226,139,49)"/><text x="355.00" y="494.50"></text></g><g><title>0x7fa52cd32cf9 (libgomp.so.1.0.0) (1 samples, 0.15%)</title><rect x="352" y="500" width="2" height="15" fill="rgb(224,153,7)"/><text x="355.00" y="510.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.15%)</title><rect x="355" y="132" width="2" height="15" fill="rgb(222,144,46)"/><text x="358.00" y="142.50"></text></g><g><title>0x7fa561f4d7c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="355" y="148" width="2" height="15" fill="rgb(231,137,23)"/><text x="358.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.31%)</title><rect x="355" y="116" width="4" height="15" fill="rgb(220,26,0)"/><text x="358.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.15%)</title><rect x="357" y="132" width="2" height="15" fill="rgb(224,63,10)"/><text x="360.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.15%)</title><rect x="357" y="148" width="2" height="15" fill="rgb(207,183,21)"/><text x="360.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.31%)</title><rect x="361" y="148" width="3" height="15" fill="rgb(227,225,41)"/><text x="364.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:607) (1 samples, 0.15%)</title><rect x="366" y="164" width="2" height="15" fill="rgb(234,111,53)"/><text x="369.00" y="174.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (3 samples, 0.46%)</title><rect x="372" y="196" width="5" height="15" fill="rgb(209,144,22)"/><text x="375.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (3 samples, 0.46%)</title><rect x="372" y="212" width="5" height="15" fill="rgb(245,187,45)"/><text x="375.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="375" y="228" width="2" height="15" fill="rgb(209,198,13)"/><text x="378.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="375" y="244" width="2" height="15" fill="rgb(215,0,10)"/><text x="378.00" y="254.50"></text></g><g><title>onnxruntime::NodeArg::Name[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="375" y="260" width="2" height="15" fill="rgb(219,220,40)"/><text x="378.00" y="270.50"></text></g><g><title>0x7fa522de9ff9 (?) (1 samples, 0.15%)</title><rect x="379" y="212" width="2" height="15" fill="rgb(217,123,8)"/><text x="382.00" y="222.50"></text></g><g><title>0x7fa522de4ef6 (?) (1 samples, 0.15%)</title><rect x="379" y="228" width="2" height="15" fill="rgb(210,21,13)"/><text x="382.00" y="238.50"></text></g><g><title>0x7fa522dd9962 (?) (1 samples, 0.15%)</title><rect x="379" y="244" width="2" height="15" fill="rgb(218,165,43)"/><text x="382.00" y="254.50"></text></g><g><title>0x7fa522e0d7a7 (?) (1 samples, 0.15%)</title><rect x="379" y="260" width="2" height="15" fill="rgb(249,169,12)"/><text x="382.00" y="270.50"></text></g><g><title>0x7fa522e0d379 (?) (1 samples, 0.15%)</title><rect x="379" y="276" width="2" height="15" fill="rgb(216,57,12)"/><text x="382.00" y="286.50"></text></g><g><title>0x7fa52326b8b8 (?) (1 samples, 0.15%)</title><rect x="379" y="292" width="2" height="15" fill="rgb(248,193,50)"/><text x="382.00" y="302.50"></text></g><g><title>0x7fa523269c7f (?) (1 samples, 0.15%)</title><rect x="379" y="308" width="2" height="15" fill="rgb(253,173,0)"/><text x="382.00" y="318.50"></text></g><g><title>0x7fa52327c99c (?) (1 samples, 0.15%)</title><rect x="379" y="324" width="2" height="15" fill="rgb(250,32,18)"/><text x="382.00" y="334.50"></text></g><g><title>0x7fa522fa4235 (?) (1 samples, 0.15%)</title><rect x="379" y="340" width="2" height="15" fill="rgb(239,34,44)"/><text x="382.00" y="350.50"></text></g><g><title>0x7fa522fa3ba2 (?) (1 samples, 0.15%)</title><rect x="379" y="356" width="2" height="15" fill="rgb(240,25,35)"/><text x="382.00" y="366.50"></text></g><g><title>0x7fa562d2b9ed (libc-2.29.so) (1 samples, 0.15%)</title><rect x="381" y="228" width="1" height="15" fill="rgb(237,9,47)"/><text x="384.00" y="238.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="382" y="292" width="6" height="15" fill="rgb(245,42,13)"/><text x="385.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.31%)</title><rect x="384" y="308" width="4" height="15" fill="rgb(245,88,53)"/><text x="387.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.31%)</title><rect x="384" y="324" width="4" height="15" fill="rgb(228,167,49)"/><text x="387.00" y="334.50"></text></g><g><title>0x7fa562d2cdc9 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="386" y="340" width="2" height="15" fill="rgb(212,216,25)"/><text x="389.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="388" y="292" width="2" height="15" fill="rgb(235,116,28)"/><text x="391.00" y="302.50"></text></g><g><title>0x7fa562d2b90e (libc-2.29.so) (1 samples, 0.15%)</title><rect x="388" y="308" width="2" height="15" fill="rgb(210,75,4)"/><text x="391.00" y="318.50"></text></g><g><title>0x7fa522db10f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="465" y="356" width="2" height="15" fill="rgb(250,199,41)"/><text x="468.00" y="366.50"></text></g><g><title>0x7fa5527f87a0 (libstdc++.so.6.0.28) (3 samples, 0.46%)</title><rect x="467" y="356" width="5" height="15" fill="rgb(223,227,38)"/><text x="470.00" y="366.50"></text></g><g><title>0x7fa562d2b906 (libc-2.29.so) (4 samples, 0.61%)</title><rect x="472" y="356" width="8" height="15" fill="rgb(230,58,33)"/><text x="475.00" y="366.50"></text></g><g><title>0x7fa562d2b91c (libc-2.29.so) (1 samples, 0.15%)</title><rect x="480" y="356" width="2" height="15" fill="rgb(206,123,53)"/><text x="483.00" y="366.50"></text></g><g><title>0x7fa562d2b91e (libc-2.29.so) (1 samples, 0.15%)</title><rect x="482" y="356" width="1" height="15" fill="rgb(230,95,22)"/><text x="485.00" y="366.50"></text></g><g><title>0x7fa562d2b92c (libc-2.29.so) (1 samples, 0.15%)</title><rect x="483" y="356" width="2" height="15" fill="rgb(215,25,2)"/><text x="486.00" y="366.50"></text></g><g><title>0x7fa562d2b93b (libc-2.29.so) (1 samples, 0.15%)</title><rect x="485" y="356" width="2" height="15" fill="rgb(212,222,26)"/><text x="488.00" y="366.50"></text></g><g><title>0x7fa562d2b95e (libc-2.29.so) (1 samples, 0.15%)</title><rect x="487" y="356" width="2" height="15" fill="rgb(244,115,8)"/><text x="490.00" y="366.50"></text></g><g><title>0x7fa562d2b965 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="489" y="356" width="2" height="15" fill="rgb(232,175,40)"/><text x="492.00" y="366.50"></text></g><g><title>0x7fa562d2b96a (libc-2.29.so) (2 samples, 0.31%)</title><rect x="491" y="356" width="3" height="15" fill="rgb(209,91,37)"/><text x="494.00" y="366.50"></text></g><g><title>0x7fa562d2b971 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="494" y="356" width="2" height="15" fill="rgb(215,49,19)"/><text x="497.00" y="366.50"></text></g><g><title>0x7fa562d2b982 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="496" y="356" width="4" height="15" fill="rgb(253,118,15)"/><text x="499.00" y="366.50"></text></g><g><title>0x7fa562d2b98c (libc-2.29.so) (1 samples, 0.15%)</title><rect x="500" y="356" width="1" height="15" fill="rgb(223,118,39)"/><text x="503.00" y="366.50"></text></g><g><title>0x7fa562d2b991 (libc-2.29.so) (8 samples, 1.22%)</title><rect x="501" y="356" width="15" height="15" fill="rgb(233,138,32)"/><text x="504.00" y="366.50"></text></g><g><title>0x7fa562d2b998 (libc-2.29.so) (3 samples, 0.46%)</title><rect x="516" y="356" width="5" height="15" fill="rgb(246,74,10)"/><text x="519.00" y="366.50"></text></g><g><title>0x7fa562d2ba41 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="521" y="356" width="4" height="15" fill="rgb(245,144,53)"/><text x="524.00" y="366.50"></text></g><g><title>0x7fa562d2ba4d (libc-2.29.so) (1 samples, 0.15%)</title><rect x="525" y="356" width="2" height="15" fill="rgb(253,179,43)"/><text x="528.00" y="366.50"></text></g><g><title>0x7fa562d2ba4f (libc-2.29.so) (1 samples, 0.15%)</title><rect x="527" y="356" width="1" height="15" fill="rgb(209,201,24)"/><text x="530.00" y="366.50"></text></g><g><title>0x7fa562d2ba53 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="528" y="356" width="2" height="15" fill="rgb(250,71,8)"/><text x="531.00" y="366.50"></text></g><g><title>0x7fa562d2ba55 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="530" y="356" width="4" height="15" fill="rgb(216,122,45)"/><text x="533.00" y="366.50"></text></g><g><title>0x7fa562d2bbc0 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="534" y="356" width="2" height="15" fill="rgb(240,52,53)"/><text x="537.00" y="366.50"></text></g><g><title>0x7fa562d2bbd8 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="536" y="356" width="1" height="15" fill="rgb(229,52,15)"/><text x="539.00" y="366.50"></text></g><g><title>0x7fa562d2bbe4 (libc-2.29.so) (3 samples, 0.46%)</title><rect x="537" y="356" width="6" height="15" fill="rgb(212,118,2)"/><text x="540.00" y="366.50"></text></g><g><title>0x7fa562d4c120 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="543" y="356" width="2" height="15" fill="rgb(222,108,6)"/><text x="546.00" y="366.50"></text></g><g><title>0x7fa562d4c12b (libc-2.29.so) (2 samples, 0.31%)</title><rect x="545" y="356" width="3" height="15" fill="rgb(243,226,9)"/><text x="548.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (17 samples, 2.60%)</title><rect x="548" y="356" width="31" height="15" fill="rgb(232,100,4)"/><text x="551.00" y="366.50">fr..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="579" y="356" width="3" height="15" fill="rgb(212,51,8)"/><text x="582.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="579" y="372" width="3" height="15" fill="rgb(209,13,34)"/><text x="582.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="579" y="388" width="3" height="15" fill="rgb(224,24,33)"/><text x="582.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="579" y="404" width="3" height="15" fill="rgb(245,52,37)"/><text x="582.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="579" y="420" width="3" height="15" fill="rgb(235,50,6)"/><text x="582.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="579" y="436" width="3" height="15" fill="rgb(230,162,7)"/><text x="582.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="579" y="452" width="3" height="15" fill="rgb(213,202,27)"/><text x="582.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="579" y="468" width="3" height="15" fill="rgb(210,94,7)"/><text x="582.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="579" y="484" width="3" height="15" fill="rgb(236,22,42)"/><text x="582.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="581" y="500" width="1" height="15" fill="rgb(236,95,51)"/><text x="584.00" y="510.50"></text></g><g><title>0x7fa522db0930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="847" y="388" width="2" height="15" fill="rgb(233,206,8)"/><text x="850.00" y="398.50"></text></g><g><title>0x7fa5527f7d50 (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="856" y="404" width="2" height="15" fill="rgb(250,43,18)"/><text x="859.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (10 samples, 1.53%)</title><rect x="849" y="388" width="18" height="15" fill="rgb(235,51,44)"/><text x="852.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.76%)</title><rect x="858" y="404" width="9" height="15" fill="rgb(211,140,27)"/><text x="861.00" y="414.50"></text></g><g><title>0x7fa562d4c120 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="907" y="420" width="1" height="15" fill="rgb(211,131,20)"/><text x="910.00" y="430.50"></text></g><g><title>0x7fa562d4c12f (libc-2.29.so) (1 samples, 0.15%)</title><rect x="908" y="420" width="2" height="15" fill="rgb(240,58,39)"/><text x="911.00" y="430.50"></text></g><g><title>0x7fa562d4c14a (libc-2.29.so) (2 samples, 0.31%)</title><rect x="910" y="420" width="4" height="15" fill="rgb(210,83,21)"/><text x="913.00" y="430.50"></text></g><g><title>0x7fa5527f7d50 (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="919" y="436" width="2" height="15" fill="rgb(247,0,54)"/><text x="922.00" y="446.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 3.51%)</title><rect x="894" y="404" width="41" height="15" fill="rgb(218,117,42)"/><text x="897.00" y="414.50">std..</text></g><g><title>operator new (libstdc++.so.6.0.28) (12 samples, 1.83%)</title><rect x="914" y="420" width="21" height="15" fill="rgb(252,202,19)"/><text x="917.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (8 samples, 1.22%)</title><rect x="921" y="436" width="14" height="15" fill="rgb(233,140,14)"/><text x="924.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (266 samples, 40.61%)</title><rect x="582" y="356" width="480" height="15" fill="rgb(254,190,40)"/><text x="585.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (o..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 20.46%)</title><rect x="820" y="372" width="242" height="15" fill="rgb(214,175,9)"/><text x="823.00" y="382.50">std::_Hashtable&lt;long, std::pair&lt;..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (108 samples, 16.49%)</title><rect x="867" y="388" width="195" height="15" fill="rgb(249,85,2)"/><text x="870.00" y="398.50">std::_Hashtable&lt;long, std..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (70 samples, 10.69%)</title><rect x="935" y="404" width="127" height="15" fill="rgb(210,60,46)"/><text x="938.00" y="414.50">std::__detail::..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (30 samples, 4.58%)</title><rect x="1008" y="420" width="54" height="15" fill="rgb(249,37,5)"/><text x="1011.00" y="430.50">std::..</text></g><g><title>0x7fa522db0850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="1074" y="372" width="4" height="15" fill="rgb(228,4,28)"/><text x="1077.00" y="382.50"></text></g><g><title>0x7fa562d4bdc9 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1078" y="372" width="2" height="15" fill="rgb(247,139,39)"/><text x="1081.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.68%)</title><rect x="1062" y="356" width="19" height="15" fill="rgb(219,55,54)"/><text x="1065.00" y="366.50"></text></g><g><title>0x7fa562d4bdcb (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1080" y="372" width="1" height="15" fill="rgb(221,6,42)"/><text x="1083.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="1081" y="356" width="2" height="15" fill="rgb(252,131,32)"/><text x="1084.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 3.21%)</title><rect x="1083" y="356" width="38" height="15" fill="rgb(221,195,7)"/><text x="1086.00" y="366.50">std..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (420 samples, 64.12%)</title><rect x="390" y="308" width="756" height="15" fill="rgb(225,194,51)"/><text x="393.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (420 samples, 64.12%)</title><rect x="390" y="324" width="756" height="15" fill="rgb(252,15,49)"/><text x="393.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (420 samples, 64.12%)</title><rect x="390" y="340" width="756" height="15" fill="rgb(232,138,19)"/><text x="393.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.14%)</title><rect x="1121" y="356" width="25" height="15" fill="rgb(225,172,35)"/><text x="1124.00" y="366.50">s..</text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 1.22%)</title><rect x="1132" y="372" width="14" height="15" fill="rgb(231,115,13)"/><text x="1135.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.92%)</title><rect x="1135" y="388" width="11" height="15" fill="rgb(252,16,22)"/><text x="1138.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (425 samples, 64.89%)</title><rect x="382" y="276" width="766" height="15" fill="rgb(243,55,11)"/><text x="385.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (421 samples, 64.27%)</title><rect x="390" y="292" width="758" height="15" fill="rgb(213,109,0)"/><text x="393.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1146" y="308" width="2" height="15" fill="rgb(222,155,34)"/><text x="1149.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1146" y="324" width="2" height="15" fill="rgb(208,113,29)"/><text x="1149.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (426 samples, 65.04%)</title><rect x="382" y="260" width="768" height="15" fill="rgb(238,216,36)"/><text x="385.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1148" y="276" width="2" height="15" fill="rgb(210,196,29)"/><text x="1151.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="1148" y="292" width="2" height="15" fill="rgb(246,101,36)"/><text x="1151.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1153" y="276" width="2" height="15" fill="rgb(253,78,30)"/><text x="1156.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.61%)</title><rect x="1150" y="260" width="7" height="15" fill="rgb(241,100,30)"/><text x="1153.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.15%)</title><rect x="1155" y="276" width="2" height="15" fill="rgb(235,164,23)"/><text x="1158.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.15%)</title><rect x="1159" y="292" width="2" height="15" fill="rgb(211,162,6)"/><text x="1162.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.15%)</title><rect x="1159" y="308" width="2" height="15" fill="rgb(253,17,28)"/><text x="1162.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.15%)</title><rect x="1161" y="292" width="1" height="15" fill="rgb(210,212,22)"/><text x="1164.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.15%)</title><rect x="1161" y="308" width="1" height="15" fill="rgb(218,152,43)"/><text x="1164.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.15%)</title><rect x="1162" y="292" width="2" height="15" fill="rgb(229,59,16)"/><text x="1165.00" y="302.50"></text></g><g><title>_array_fill_strides (ctors.c:4131) (1 samples, 0.15%)</title><rect x="1162" y="308" width="2" height="15" fill="rgb(253,187,23)"/><text x="1165.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.76%)</title><rect x="1157" y="260" width="9" height="15" fill="rgb(254,125,5)"/><text x="1160.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (4 samples, 0.61%)</title><rect x="1159" y="276" width="7" height="15" fill="rgb(230,215,51)"/><text x="1162.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.15%)</title><rect x="1164" y="292" width="2" height="15" fill="rgb(250,135,51)"/><text x="1167.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.15%)</title><rect x="1164" y="308" width="2" height="15" fill="rgb(249,143,14)"/><text x="1167.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.15%)</title><rect x="1164" y="324" width="2" height="15" fill="rgb(216,105,32)"/><text x="1167.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.15%)</title><rect x="1164" y="340" width="2" height="15" fill="rgb(211,30,18)"/><text x="1167.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1164" y="356" width="2" height="15" fill="rgb(240,224,15)"/><text x="1167.00" y="366.50"></text></g><g><title>0x7fa562d2d028 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1164" y="372" width="2" height="15" fill="rgb(213,6,42)"/><text x="1167.00" y="382.50"></text></g><g><title>0x7fa562d2ab9b (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1164" y="388" width="2" height="15" fill="rgb(211,141,5)"/><text x="1167.00" y="398.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (436 samples, 66.56%)</title><rect x="382" y="244" width="786" height="15" fill="rgb(238,105,10)"/><text x="385.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1166" y="260" width="2" height="15" fill="rgb(214,155,43)"/><text x="1169.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1166" y="276" width="2" height="15" fill="rgb(228,27,10)"/><text x="1169.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1166" y="292" width="2" height="15" fill="rgb(239,161,48)"/><text x="1169.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::ReleaseBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1166" y="308" width="2" height="15" fill="rgb(240,107,41)"/><text x="1169.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="1168" y="244" width="3" height="15" fill="rgb(225,123,21)"/><text x="1171.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1170" y="260" width="1" height="15" fill="rgb(215,89,13)"/><text x="1173.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="1170" y="276" width="1" height="15" fill="rgb(231,172,44)"/><text x="1173.00" y="286.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (448 samples, 68.40%)</title><rect x="368" y="164" width="807" height="15" fill="rgb(211,96,44)"/><text x="371.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (448 samples, 68.40%)</title><rect x="368" y="180" width="807" height="15" fill="rgb(211,84,3)"/><text x="371.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (443 samples, 67.63%)</title><rect x="377" y="196" width="798" height="15" fill="rgb(236,94,46)"/><text x="380.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (441 samples, 67.33%)</title><rect x="381" y="212" width="794" height="15" fill="rgb(211,14,30)"/><text x="384.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (440 samples, 67.18%)</title><rect x="382" y="228" width="793" height="15" fill="rgb(220,143,49)"/><text x="385.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnx..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="1171" y="244" width="4" height="15" fill="rgb(228,101,51)"/><text x="1174.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (458 samples, 69.92%)</title><rect x="361" y="132" width="825" height="15" fill="rgb(223,41,48)"/><text x="364.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (456 samples, 69.62%)</title><rect x="364" y="148" width="822" height="15" fill="rgb(228,142,1)"/><text x="367.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (6 samples, 0.92%)</title><rect x="1175" y="164" width="11" height="15" fill="rgb(229,125,35)"/><text x="1178.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.15%)</title><rect x="1184" y="180" width="2" height="15" fill="rgb(246,106,29)"/><text x="1187.00" y="190.50"></text></g><g><title>all (655 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(239,129,21)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:68) (464 samples, 70.84%)</title><rect x="354" y="52" width="836" height="15" fill="rgb(230,105,44)"/><text x="357.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:68)</text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:67) (464 samples, 70.84%)</title><rect x="354" y="68" width="836" height="15" fill="rgb(233,111,33)"/><text x="357.00" y="78.50">profile_ort (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:67)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:37) (464 samples, 70.84%)</title><rect x="354" y="84" width="836" height="15" fill="rgb(229,158,43)"/><text x="357.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:37)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:31) (464 samples, 70.84%)</title><rect x="354" y="100" width="836" height="15" fill="rgb(244,121,17)"/><text x="357.00" y="110.50">profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (461 samples, 70.38%)</title><rect x="359" y="116" width="831" height="15" fill="rgb(207,186,33)"/><text x="362.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (2 samples, 0.31%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(221,90,54)"/><text x="1189.00" y="142.50"></text></g></g></svg>