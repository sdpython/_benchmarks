<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2022" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2005.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2005.00"> </text><g id="frames"><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.47%)</title><rect x="10" y="244" width="5" height="15" fill="rgb(231,32,30)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="10" y="260" width="5" height="15" fill="rgb(251,120,31)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="276" width="5" height="15" fill="rgb(214,152,1)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(210,213,44)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(213,112,28)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(234,221,18)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(252,220,22)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(222,192,14)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.47%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(231,59,10)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(237,8,46)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(240,115,43)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(206,143,22)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(215,200,11)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(213,109,26)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(241,162,14)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(241,4,23)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:14) (1 samples, 0.47%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(227,103,0)"/><text x="13.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(225,87,50)"/><text x="13.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(243,8,53)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="10" y="548" width="5" height="15" fill="rgb(242,65,48)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="10" y="564" width="5" height="15" fill="rgb(239,111,22)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="10" y="580" width="5" height="15" fill="rgb(237,155,24)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="10" y="596" width="5" height="15" fill="rgb(251,125,44)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="612" width="5" height="15" fill="rgb(209,98,26)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:9) (1 samples, 0.47%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(220,19,33)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(214,41,54)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.47%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(215,84,26)"/><text x="13.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(207,222,25)"/><text x="13.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(216,133,48)"/><text x="13.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(250,129,22)"/><text x="13.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(206,5,48)"/><text x="13.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(251,193,18)"/><text x="13.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(215,199,9)"/><text x="13.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py:14) (1 samples, 0.47%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(244,228,4)"/><text x="13.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(205,19,18)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(221,21,12)"/><text x="13.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="10" y="820" width="5" height="15" fill="rgb(222,95,6)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(224,35,4)"/><text x="13.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(240,9,27)"/><text x="13.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(228,145,47)"/><text x="13.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(247,183,25)"/><text x="13.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py:16) (1 samples, 0.47%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(205,168,16)"/><text x="13.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(211,36,37)"/><text x="13.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="10" y="932" width="5" height="15" fill="rgb(230,154,24)"/><text x="13.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="10" y="948" width="5" height="15" fill="rgb(244,138,19)"/><text x="13.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="10" y="964" width="5" height="15" fill="rgb(214,193,51)"/><text x="13.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="980" width="5" height="15" fill="rgb(233,222,37)"/><text x="13.00" y="990.50"></text></g><g><title>&lt;module&gt; (pathlib.py:595) (1 samples, 0.47%)</title><rect x="10" y="996" width="5" height="15" fill="rgb(240,100,25)"/><text x="13.00" y="1006.50"></text></g><g><title>PurePath (pathlib.py:678) (1 samples, 0.47%)</title><rect x="10" y="1012" width="5" height="15" fill="rgb(249,118,43)"/><text x="13.00" y="1022.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVR/bench_SVR_poly_b_reg_kernelpoly.py:1) (2 samples, 0.94%)</title><rect x="10" y="148" width="11" height="15" fill="rgb(207,19,2)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.94%)</title><rect x="10" y="164" width="11" height="15" fill="rgb(241,94,2)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.94%)</title><rect x="10" y="180" width="11" height="15" fill="rgb(224,170,53)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.94%)</title><rect x="10" y="196" width="11" height="15" fill="rgb(236,7,27)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.94%)</title><rect x="10" y="212" width="11" height="15" fill="rgb(238,94,40)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.94%)</title><rect x="10" y="228" width="11" height="15" fill="rgb(244,141,20)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.47%)</title><rect x="15" y="244" width="6" height="15" fill="rgb(222,130,18)"/><text x="18.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="15" y="260" width="6" height="15" fill="rgb(242,122,45)"/><text x="18.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="15" y="276" width="6" height="15" fill="rgb(217,199,1)"/><text x="18.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="15" y="292" width="6" height="15" fill="rgb(229,159,0)"/><text x="18.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="15" y="308" width="6" height="15" fill="rgb(228,37,8)"/><text x="18.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="15" y="324" width="6" height="15" fill="rgb(216,14,23)"/><text x="18.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="15" y="340" width="6" height="15" fill="rgb(244,57,43)"/><text x="18.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="15" y="356" width="6" height="15" fill="rgb(216,112,22)"/><text x="18.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:24) (1 samples, 0.47%)</title><rect x="15" y="372" width="6" height="15" fill="rgb(254,130,3)"/><text x="18.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="15" y="388" width="6" height="15" fill="rgb(237,125,51)"/><text x="18.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="15" y="404" width="6" height="15" fill="rgb(244,225,8)"/><text x="18.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="15" y="420" width="6" height="15" fill="rgb(227,195,10)"/><text x="18.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="15" y="436" width="6" height="15" fill="rgb(254,14,3)"/><text x="18.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="15" y="452" width="6" height="15" fill="rgb(227,34,11)"/><text x="18.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py:15) (1 samples, 0.47%)</title><rect x="15" y="468" width="6" height="15" fill="rgb(205,201,32)"/><text x="18.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="15" y="484" width="6" height="15" fill="rgb(216,197,32)"/><text x="18.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="15" y="500" width="6" height="15" fill="rgb(210,55,26)"/><text x="18.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="15" y="516" width="6" height="15" fill="rgb(226,66,34)"/><text x="18.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="15" y="532" width="6" height="15" fill="rgb(210,116,49)"/><text x="18.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="15" y="548" width="6" height="15" fill="rgb(212,42,23)"/><text x="18.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/_datasource.py:42) (1 samples, 0.47%)</title><rect x="15" y="564" width="6" height="15" fill="rgb(239,31,28)"/><text x="18.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="15" y="580" width="6" height="15" fill="rgb(221,123,8)"/><text x="18.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="15" y="596" width="6" height="15" fill="rgb(218,225,30)"/><text x="18.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="15" y="612" width="6" height="15" fill="rgb(247,176,20)"/><text x="18.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="15" y="628" width="6" height="15" fill="rgb(209,79,49)"/><text x="18.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="15" y="644" width="6" height="15" fill="rgb(235,224,39)"/><text x="18.00" y="654.50"></text></g><g><title>&lt;module&gt; (shutil.py:22) (1 samples, 0.47%)</title><rect x="15" y="660" width="6" height="15" fill="rgb(249,71,0)"/><text x="18.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="15" y="676" width="6" height="15" fill="rgb(239,135,24)"/><text x="18.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.47%)</title><rect x="15" y="692" width="6" height="15" fill="rgb(211,83,18)"/><text x="18.00" y="702.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.47%)</title><rect x="15" y="708" width="6" height="15" fill="rgb(208,66,37)"/><text x="18.00" y="718.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.47%)</title><rect x="15" y="724" width="6" height="15" fill="rgb(208,168,30)"/><text x="18.00" y="734.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.47%)</title><rect x="15" y="740" width="6" height="15" fill="rgb(240,177,40)"/><text x="18.00" y="750.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1393) (1 samples, 0.47%)</title><rect x="15" y="756" width="6" height="15" fill="rgb(234,73,16)"/><text x="18.00" y="766.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.47%)</title><rect x="15" y="772" width="6" height="15" fill="rgb(209,27,22)"/><text x="18.00" y="782.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.47%)</title><rect x="21" y="916" width="5" height="15" fill="rgb(233,84,20)"/><text x="24.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.47%)</title><rect x="21" y="932" width="5" height="15" fill="rgb(237,52,30)"/><text x="24.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.47%)</title><rect x="21" y="948" width="5" height="15" fill="rgb(212,229,35)"/><text x="24.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.47%)</title><rect x="21" y="964" width="5" height="15" fill="rgb(233,110,8)"/><text x="24.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.47%)</title><rect x="21" y="980" width="5" height="15" fill="rgb(245,48,7)"/><text x="24.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.47%)</title><rect x="21" y="996" width="5" height="15" fill="rgb(252,216,53)"/><text x="24.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:353) (1 samples, 0.47%)</title><rect x="21" y="1012" width="5" height="15" fill="rgb(247,66,45)"/><text x="24.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.94%)</title><rect x="21" y="852" width="11" height="15" fill="rgb(238,225,21)"/><text x="24.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.94%)</title><rect x="21" y="868" width="11" height="15" fill="rgb(222,209,35)"/><text x="24.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.94%)</title><rect x="21" y="884" width="11" height="15" fill="rgb(234,194,7)"/><text x="24.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.94%)</title><rect x="21" y="900" width="11" height="15" fill="rgb(221,86,0)"/><text x="24.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.47%)</title><rect x="26" y="916" width="6" height="15" fill="rgb(251,9,36)"/><text x="29.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.47%)</title><rect x="26" y="932" width="6" height="15" fill="rgb(209,98,24)"/><text x="29.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.47%)</title><rect x="26" y="948" width="6" height="15" fill="rgb(230,48,17)"/><text x="29.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.47%)</title><rect x="26" y="964" width="6" height="15" fill="rgb(246,197,54)"/><text x="29.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.47%)</title><rect x="26" y="980" width="6" height="15" fill="rgb(215,126,12)"/><text x="29.00" y="990.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1379) (1 samples, 0.47%)</title><rect x="32" y="964" width="5" height="15" fill="rgb(207,70,6)"/><text x="35.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:58) (1 samples, 0.47%)</title><rect x="32" y="980" width="5" height="15" fill="rgb(225,55,12)"/><text x="35.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.94%)</title><rect x="32" y="852" width="11" height="15" fill="rgb(237,132,5)"/><text x="35.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.94%)</title><rect x="32" y="868" width="11" height="15" fill="rgb(216,49,51)"/><text x="35.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.94%)</title><rect x="32" y="884" width="11" height="15" fill="rgb(245,37,48)"/><text x="35.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.94%)</title><rect x="32" y="900" width="11" height="15" fill="rgb(216,86,14)"/><text x="35.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.94%)</title><rect x="32" y="916" width="11" height="15" fill="rgb(246,212,18)"/><text x="35.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.94%)</title><rect x="32" y="932" width="11" height="15" fill="rgb(247,199,35)"/><text x="35.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.94%)</title><rect x="32" y="948" width="11" height="15" fill="rgb(233,69,11)"/><text x="35.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.47%)</title><rect x="37" y="964" width="6" height="15" fill="rgb(230,168,52)"/><text x="40.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.47%)</title><rect x="37" y="980" width="6" height="15" fill="rgb(252,137,7)"/><text x="40.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.47%)</title><rect x="37" y="996" width="6" height="15" fill="rgb(243,226,52)"/><text x="40.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.47%)</title><rect x="37" y="1012" width="6" height="15" fill="rgb(217,169,40)"/><text x="40.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.47%)</title><rect x="37" y="1028" width="6" height="15" fill="rgb(209,196,10)"/><text x="40.00" y="1038.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.47%)</title><rect x="37" y="1044" width="6" height="15" fill="rgb(245,2,41)"/><text x="40.00" y="1054.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.47%)</title><rect x="43" y="900" width="5" height="15" fill="rgb(229,57,54)"/><text x="46.00" y="910.50"></text></g><g><title>isdir (genericpath.py:42) (1 samples, 0.47%)</title><rect x="43" y="916" width="5" height="15" fill="rgb(243,197,25)"/><text x="46.00" y="926.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.47%)</title><rect x="43" y="932" width="5" height="15" fill="rgb(206,213,44)"/><text x="46.00" y="942.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.47%)</title><rect x="43" y="948" width="5" height="15" fill="rgb(214,205,3)"/><text x="46.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVR/bench_SVR_poly_b_reg_kernelpoly.py:2) (6 samples, 2.83%)</title><rect x="21" y="148" width="33" height="15" fill="rgb(210,52,34)"/><text x="24.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.83%)</title><rect x="21" y="164" width="33" height="15" fill="rgb(217,170,18)"/><text x="24.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.83%)</title><rect x="21" y="180" width="33" height="15" fill="rgb(232,77,50)"/><text x="24.00" y="190.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.83%)</title><rect x="21" y="196" width="33" height="15" fill="rgb(219,63,2)"/><text x="24.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.83%)</title><rect x="21" y="212" width="33" height="15" fill="rgb(209,149,30)"/><text x="24.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.83%)</title><rect x="21" y="228" width="33" height="15" fill="rgb(213,216,36)"/><text x="24.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.83%)</title><rect x="21" y="244" width="33" height="15" fill="rgb(244,53,20)"/><text x="24.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.83%)</title><rect x="21" y="260" width="33" height="15" fill="rgb(228,161,13)"/><text x="24.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.83%)</title><rect x="21" y="276" width="33" height="15" fill="rgb(218,221,38)"/><text x="24.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 2.83%)</title><rect x="21" y="292" width="33" height="15" fill="rgb(226,11,43)"/><text x="24.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.83%)</title><rect x="21" y="308" width="33" height="15" fill="rgb(208,71,23)"/><text x="24.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.83%)</title><rect x="21" y="324" width="33" height="15" fill="rgb(238,214,15)"/><text x="24.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.83%)</title><rect x="21" y="340" width="33" height="15" fill="rgb(205,139,17)"/><text x="24.00" y="350.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.83%)</title><rect x="21" y="356" width="33" height="15" fill="rgb(238,172,13)"/><text x="24.00" y="366.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.83%)</title><rect x="21" y="372" width="33" height="15" fill="rgb(234,131,22)"/><text x="24.00" y="382.50">_c..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 2.83%)</title><rect x="21" y="388" width="33" height="15" fill="rgb(234,210,38)"/><text x="24.00" y="398.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.83%)</title><rect x="21" y="404" width="33" height="15" fill="rgb(209,117,26)"/><text x="24.00" y="414.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.83%)</title><rect x="21" y="420" width="33" height="15" fill="rgb(238,54,43)"/><text x="24.00" y="430.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.83%)</title><rect x="21" y="436" width="33" height="15" fill="rgb(211,92,52)"/><text x="24.00" y="446.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.83%)</title><rect x="21" y="452" width="33" height="15" fill="rgb(230,1,15)"/><text x="24.00" y="462.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.83%)</title><rect x="21" y="468" width="33" height="15" fill="rgb(211,165,11)"/><text x="24.00" y="478.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 2.83%)</title><rect x="21" y="484" width="33" height="15" fill="rgb(253,118,25)"/><text x="24.00" y="494.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.83%)</title><rect x="21" y="500" width="33" height="15" fill="rgb(249,35,16)"/><text x="24.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.83%)</title><rect x="21" y="516" width="33" height="15" fill="rgb(205,100,47)"/><text x="24.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.83%)</title><rect x="21" y="532" width="33" height="15" fill="rgb(217,4,14)"/><text x="24.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.83%)</title><rect x="21" y="548" width="33" height="15" fill="rgb(223,153,8)"/><text x="24.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.83%)</title><rect x="21" y="564" width="33" height="15" fill="rgb(235,27,8)"/><text x="24.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 2.83%)</title><rect x="21" y="580" width="33" height="15" fill="rgb(225,153,28)"/><text x="24.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.83%)</title><rect x="21" y="596" width="33" height="15" fill="rgb(214,4,45)"/><text x="24.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.83%)</title><rect x="21" y="612" width="33" height="15" fill="rgb(249,153,22)"/><text x="24.00" y="622.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.83%)</title><rect x="21" y="628" width="33" height="15" fill="rgb(229,187,22)"/><text x="24.00" y="638.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.83%)</title><rect x="21" y="644" width="33" height="15" fill="rgb(235,208,27)"/><text x="24.00" y="654.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.83%)</title><rect x="21" y="660" width="33" height="15" fill="rgb(211,94,40)"/><text x="24.00" y="670.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.83%)</title><rect x="21" y="676" width="33" height="15" fill="rgb(221,195,32)"/><text x="24.00" y="686.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.83%)</title><rect x="21" y="692" width="33" height="15" fill="rgb(214,163,38)"/><text x="24.00" y="702.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.83%)</title><rect x="21" y="708" width="33" height="15" fill="rgb(237,144,39)"/><text x="24.00" y="718.50">_c..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 2.83%)</title><rect x="21" y="724" width="33" height="15" fill="rgb(237,216,13)"/><text x="24.00" y="734.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.83%)</title><rect x="21" y="740" width="33" height="15" fill="rgb(205,22,18)"/><text x="24.00" y="750.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.83%)</title><rect x="21" y="756" width="33" height="15" fill="rgb(209,68,18)"/><text x="24.00" y="766.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.83%)</title><rect x="21" y="772" width="33" height="15" fill="rgb(211,146,7)"/><text x="24.00" y="782.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.83%)</title><rect x="21" y="788" width="33" height="15" fill="rgb(227,80,11)"/><text x="24.00" y="798.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.83%)</title><rect x="21" y="804" width="33" height="15" fill="rgb(233,22,51)"/><text x="24.00" y="814.50">_c..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (6 samples, 2.83%)</title><rect x="21" y="820" width="33" height="15" fill="rgb(234,132,30)"/><text x="24.00" y="830.50">&lt;m..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (6 samples, 2.83%)</title><rect x="21" y="836" width="33" height="15" fill="rgb(205,144,5)"/><text x="24.00" y="846.50">_c..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.94%)</title><rect x="43" y="852" width="11" height="15" fill="rgb(224,82,46)"/><text x="46.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.94%)</title><rect x="43" y="868" width="11" height="15" fill="rgb(237,70,46)"/><text x="46.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.94%)</title><rect x="43" y="884" width="11" height="15" fill="rgb(225,66,4)"/><text x="46.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.47%)</title><rect x="48" y="900" width="6" height="15" fill="rgb(225,72,12)"/><text x="51.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.47%)</title><rect x="48" y="916" width="6" height="15" fill="rgb(206,222,1)"/><text x="51.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.47%)</title><rect x="48" y="932" width="6" height="15" fill="rgb(234,142,23)"/><text x="51.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.47%)</title><rect x="48" y="948" width="6" height="15" fill="rgb(251,161,38)"/><text x="51.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.47%)</title><rect x="48" y="964" width="6" height="15" fill="rgb(238,182,3)"/><text x="51.00" y="974.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.47%)</title><rect x="54" y="244" width="6" height="15" fill="rgb(233,93,20)"/><text x="57.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="54" y="260" width="6" height="15" fill="rgb(238,111,54)"/><text x="57.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="54" y="276" width="6" height="15" fill="rgb(213,136,7)"/><text x="57.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="54" y="292" width="6" height="15" fill="rgb(238,131,5)"/><text x="57.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="54" y="308" width="6" height="15" fill="rgb(249,81,46)"/><text x="57.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="54" y="324" width="6" height="15" fill="rgb(226,2,6)"/><text x="57.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.47%)</title><rect x="54" y="340" width="6" height="15" fill="rgb(237,155,23)"/><text x="57.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="54" y="356" width="6" height="15" fill="rgb(207,104,38)"/><text x="57.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.47%)</title><rect x="54" y="372" width="6" height="15" fill="rgb(250,47,27)"/><text x="57.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="54" y="388" width="6" height="15" fill="rgb(209,46,40)"/><text x="57.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="54" y="404" width="6" height="15" fill="rgb(208,96,8)"/><text x="57.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="54" y="420" width="6" height="15" fill="rgb(205,60,21)"/><text x="57.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="54" y="436" width="6" height="15" fill="rgb(242,91,8)"/><text x="57.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="54" y="452" width="6" height="15" fill="rgb(237,197,50)"/><text x="57.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="54" y="468" width="6" height="15" fill="rgb(249,133,45)"/><text x="57.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.47%)</title><rect x="54" y="484" width="6" height="15" fill="rgb(237,12,25)"/><text x="57.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="54" y="500" width="6" height="15" fill="rgb(223,109,9)"/><text x="57.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="54" y="516" width="6" height="15" fill="rgb(248,13,29)"/><text x="57.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="54" y="532" width="6" height="15" fill="rgb(221,218,37)"/><text x="57.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="54" y="548" width="6" height="15" fill="rgb(205,87,34)"/><text x="57.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="54" y="564" width="6" height="15" fill="rgb(207,9,23)"/><text x="57.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.47%)</title><rect x="54" y="580" width="6" height="15" fill="rgb(215,93,53)"/><text x="57.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="54" y="596" width="6" height="15" fill="rgb(252,22,23)"/><text x="57.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="54" y="612" width="6" height="15" fill="rgb(249,46,17)"/><text x="57.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="54" y="628" width="6" height="15" fill="rgb(209,181,41)"/><text x="57.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="54" y="644" width="6" height="15" fill="rgb(229,129,46)"/><text x="57.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="54" y="660" width="6" height="15" fill="rgb(211,190,24)"/><text x="57.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.47%)</title><rect x="54" y="676" width="6" height="15" fill="rgb(239,218,16)"/><text x="57.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="54" y="692" width="6" height="15" fill="rgb(215,158,48)"/><text x="57.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="54" y="708" width="6" height="15" fill="rgb(237,45,22)"/><text x="57.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="54" y="724" width="6" height="15" fill="rgb(251,8,25)"/><text x="57.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="54" y="740" width="6" height="15" fill="rgb(240,82,29)"/><text x="57.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="54" y="756" width="6" height="15" fill="rgb(233,208,44)"/><text x="57.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.47%)</title><rect x="54" y="772" width="6" height="15" fill="rgb(211,74,1)"/><text x="57.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="54" y="788" width="6" height="15" fill="rgb(213,157,32)"/><text x="57.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="54" y="804" width="6" height="15" fill="rgb(254,74,33)"/><text x="57.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="54" y="820" width="6" height="15" fill="rgb(221,201,47)"/><text x="57.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="54" y="836" width="6" height="15" fill="rgb(252,227,31)"/><text x="57.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="54" y="852" width="6" height="15" fill="rgb(208,54,54)"/><text x="57.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="54" y="868" width="6" height="15" fill="rgb(246,124,19)"/><text x="57.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="54" y="884" width="6" height="15" fill="rgb(235,116,9)"/><text x="57.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (1 samples, 0.47%)</title><rect x="54" y="900" width="6" height="15" fill="rgb(206,155,21)"/><text x="57.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="54" y="916" width="6" height="15" fill="rgb(206,108,20)"/><text x="57.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.47%)</title><rect x="54" y="932" width="6" height="15" fill="rgb(234,225,30)"/><text x="57.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="54" y="948" width="6" height="15" fill="rgb(231,194,31)"/><text x="57.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="54" y="964" width="6" height="15" fill="rgb(251,154,11)"/><text x="57.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="54" y="980" width="6" height="15" fill="rgb(211,177,51)"/><text x="57.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="54" y="996" width="6" height="15" fill="rgb(242,4,32)"/><text x="57.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="54" y="1012" width="6" height="15" fill="rgb(243,223,43)"/><text x="57.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="54" y="1028" width="6" height="15" fill="rgb(229,47,52)"/><text x="57.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (1 samples, 0.47%)</title><rect x="54" y="1044" width="6" height="15" fill="rgb(230,227,26)"/><text x="57.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="54" y="1060" width="6" height="15" fill="rgb(238,218,10)"/><text x="57.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="54" y="1076" width="6" height="15" fill="rgb(252,69,50)"/><text x="57.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="54" y="1092" width="6" height="15" fill="rgb(250,124,52)"/><text x="57.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="54" y="1108" width="6" height="15" fill="rgb(223,161,48)"/><text x="57.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="54" y="1124" width="6" height="15" fill="rgb(233,191,39)"/><text x="57.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="54" y="1140" width="6" height="15" fill="rgb(206,25,26)"/><text x="57.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="54" y="1156" width="6" height="15" fill="rgb(205,80,45)"/><text x="57.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:15) (1 samples, 0.47%)</title><rect x="54" y="1172" width="6" height="15" fill="rgb(229,86,52)"/><text x="57.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="54" y="1188" width="6" height="15" fill="rgb(206,186,24)"/><text x="57.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="54" y="1204" width="6" height="15" fill="rgb(229,154,2)"/><text x="57.00" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="54" y="1220" width="6" height="15" fill="rgb(214,147,15)"/><text x="57.00" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="54" y="1236" width="6" height="15" fill="rgb(207,167,31)"/><text x="57.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="54" y="1252" width="6" height="15" fill="rgb(247,60,11)"/><text x="57.00" y="1262.50"></text></g><g><title>&lt;module&gt; (OpenSSL/_util.py:6) (1 samples, 0.47%)</title><rect x="54" y="1268" width="6" height="15" fill="rgb(242,25,9)"/><text x="57.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="54" y="1284" width="6" height="15" fill="rgb(205,28,7)"/><text x="57.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="54" y="1300" width="6" height="15" fill="rgb(225,66,41)"/><text x="57.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="54" y="1316" width="6" height="15" fill="rgb(231,83,45)"/><text x="57.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="54" y="1332" width="6" height="15" fill="rgb(245,135,36)"/><text x="57.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="54" y="1348" width="6" height="15" fill="rgb(244,15,40)"/><text x="57.00" y="1358.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/bindings/openssl/binding.py:195) (1 samples, 0.47%)</title><rect x="54" y="1364" width="6" height="15" fill="rgb(240,63,41)"/><text x="57.00" y="1374.50"></text></g><g><title>init_static_locks (cryptography/hazmat/bindings/openssl/binding.py:139) (1 samples, 0.47%)</title><rect x="54" y="1380" width="6" height="15" fill="rgb(212,85,13)"/><text x="57.00" y="1390.50"></text></g><g><title>_ensure_ffi_initialized (cryptography/hazmat/bindings/openssl/binding.py:126) (1 samples, 0.47%)</title><rect x="54" y="1396" width="6" height="15" fill="rgb(241,72,16)"/><text x="57.00" y="1406.50"></text></g><g><title>build_conditional_library (cryptography/hazmat/bindings/openssl/binding.py:92) (1 samples, 0.47%)</title><rect x="54" y="1412" width="6" height="15" fill="rgb(239,91,0)"/><text x="57.00" y="1422.50"></text></g><g><title>0x7f3bbf93debd (?) (1 samples, 0.47%)</title><rect x="54" y="1428" width="6" height="15" fill="rgb(254,204,38)"/><text x="57.00" y="1438.50"></text></g><g><title>0x7f3bbf93dc48 (?) (1 samples, 0.47%)</title><rect x="54" y="1444" width="6" height="15" fill="rgb(254,34,37)"/><text x="57.00" y="1454.50"></text></g><g><title>0x7f3bbf93d129 (?) (1 samples, 0.47%)</title><rect x="54" y="1460" width="6" height="15" fill="rgb(239,109,4)"/><text x="57.00" y="1470.50"></text></g><g><title>0x7f3bbf938b27 (?) (1 samples, 0.47%)</title><rect x="54" y="1476" width="6" height="15" fill="rgb(247,199,4)"/><text x="57.00" y="1486.50"></text></g><g><title>0x7f3bbf938def (?) (1 samples, 0.47%)</title><rect x="54" y="1492" width="6" height="15" fill="rgb(245,209,29)"/><text x="57.00" y="1502.50"></text></g><g><title>0x7f3bbf938a1d (?) (1 samples, 0.47%)</title><rect x="54" y="1508" width="6" height="15" fill="rgb(230,80,25)"/><text x="57.00" y="1518.50"></text></g><g><title>0x7f3bbf93a87c (?) (1 samples, 0.47%)</title><rect x="54" y="1524" width="6" height="15" fill="rgb(207,197,23)"/><text x="57.00" y="1534.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.47%)</title><rect x="60" y="340" width="5" height="15" fill="rgb(242,9,22)"/><text x="63.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="60" y="356" width="5" height="15" fill="rgb(228,39,19)"/><text x="63.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="60" y="372" width="5" height="15" fill="rgb(253,206,30)"/><text x="63.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="60" y="388" width="5" height="15" fill="rgb(222,68,49)"/><text x="63.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="60" y="404" width="5" height="15" fill="rgb(207,196,28)"/><text x="63.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="60" y="420" width="5" height="15" fill="rgb(253,108,22)"/><text x="63.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:48) (1 samples, 0.47%)</title><rect x="60" y="436" width="5" height="15" fill="rgb(235,70,12)"/><text x="63.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="60" y="452" width="5" height="15" fill="rgb(205,13,22)"/><text x="63.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="60" y="468" width="5" height="15" fill="rgb(252,3,10)"/><text x="63.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="60" y="484" width="5" height="15" fill="rgb(208,38,53)"/><text x="63.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="60" y="500" width="5" height="15" fill="rgb(227,149,6)"/><text x="63.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="60" y="516" width="5" height="15" fill="rgb(228,163,44)"/><text x="63.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py:20) (1 samples, 0.47%)</title><rect x="60" y="532" width="5" height="15" fill="rgb(251,96,27)"/><text x="63.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="60" y="548" width="5" height="15" fill="rgb(235,21,39)"/><text x="63.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.47%)</title><rect x="60" y="564" width="5" height="15" fill="rgb(234,203,45)"/><text x="63.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="60" y="580" width="5" height="15" fill="rgb(232,22,38)"/><text x="63.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="60" y="596" width="5" height="15" fill="rgb(244,120,32)"/><text x="63.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="60" y="612" width="5" height="15" fill="rgb(210,195,37)"/><text x="63.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="60" y="628" width="5" height="15" fill="rgb(250,181,11)"/><text x="63.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="60" y="644" width="5" height="15" fill="rgb(218,101,35)"/><text x="63.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="60" y="660" width="5" height="15" fill="rgb(224,223,51)"/><text x="63.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py:97) (1 samples, 0.47%)</title><rect x="60" y="676" width="5" height="15" fill="rgb(215,152,8)"/><text x="63.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="60" y="692" width="5" height="15" fill="rgb(243,10,5)"/><text x="63.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="60" y="708" width="5" height="15" fill="rgb(241,65,29)"/><text x="63.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="60" y="724" width="5" height="15" fill="rgb(249,72,48)"/><text x="63.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="60" y="740" width="5" height="15" fill="rgb(212,156,51)"/><text x="63.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="60" y="756" width="5" height="15" fill="rgb(233,57,17)"/><text x="63.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/__init__.py:13) (1 samples, 0.47%)</title><rect x="60" y="772" width="5" height="15" fill="rgb(211,23,33)"/><text x="63.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="60" y="788" width="5" height="15" fill="rgb(206,47,24)"/><text x="63.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="60" y="804" width="5" height="15" fill="rgb(242,191,1)"/><text x="63.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="60" y="820" width="5" height="15" fill="rgb(229,176,48)"/><text x="63.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="60" y="836" width="5" height="15" fill="rgb(238,122,41)"/><text x="63.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="60" y="852" width="5" height="15" fill="rgb(224,99,8)"/><text x="63.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/mio.py:11) (1 samples, 0.47%)</title><rect x="60" y="868" width="5" height="15" fill="rgb(207,171,31)"/><text x="63.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="60" y="884" width="5" height="15" fill="rgb(220,187,54)"/><text x="63.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="60" y="900" width="5" height="15" fill="rgb(245,133,4)"/><text x="63.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="60" y="916" width="5" height="15" fill="rgb(217,226,50)"/><text x="63.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="60" y="932" width="5" height="15" fill="rgb(231,26,53)"/><text x="63.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="60" y="948" width="5" height="15" fill="rgb(228,219,23)"/><text x="63.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/mio4.py:304) (1 samples, 0.47%)</title><rect x="60" y="964" width="5" height="15" fill="rgb(248,5,21)"/><text x="63.00" y="974.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.47%)</title><rect x="65" y="1780" width="6" height="15" fill="rgb(222,155,2)"/><text x="68.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="65" y="1796" width="6" height="15" fill="rgb(219,53,13)"/><text x="68.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="65" y="1812" width="6" height="15" fill="rgb(234,224,26)"/><text x="68.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="65" y="1828" width="6" height="15" fill="rgb(243,171,25)"/><text x="68.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="65" y="1844" width="6" height="15" fill="rgb(215,142,19)"/><text x="68.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="65" y="1860" width="6" height="15" fill="rgb(249,199,18)"/><text x="68.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py:1445) (1 samples, 0.47%)</title><rect x="65" y="1876" width="6" height="15" fill="rgb(249,101,15)"/><text x="68.00" y="1886.50"></text></g><g><title>Ellipse (matplotlib/patches.py:1456) (1 samples, 0.47%)</title><rect x="65" y="1892" width="6" height="15" fill="rgb(206,42,30)"/><text x="68.00" y="1902.50"></text></g><g><title>dedent_interpd (matplotlib/docstring.py:115) (1 samples, 0.47%)</title><rect x="65" y="1908" width="6" height="15" fill="rgb(237,46,24)"/><text x="68.00" y="1918.50"></text></g><g><title>getdoc (inspect.py:611) (1 samples, 0.47%)</title><rect x="65" y="1924" width="6" height="15" fill="rgb(250,3,47)"/><text x="68.00" y="1934.50"></text></g><g><title>cleandoc (inspect.py:626) (1 samples, 0.47%)</title><rect x="65" y="1940" width="6" height="15" fill="rgb(229,39,28)"/><text x="68.00" y="1950.50"></text></g><g><title>unicode_lstrip (python3.7) (1 samples, 0.47%)</title><rect x="65" y="1956" width="6" height="15" fill="rgb(205,144,39)"/><text x="68.00" y="1966.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1599) (1 samples, 0.47%)</title><rect x="71" y="1892" width="5" height="15" fill="rgb(225,93,51)"/><text x="74.00" y="1902.50"></text></g><g><title>__init__ (matplotlib/artist.py:1211) (1 samples, 0.47%)</title><rect x="71" y="1908" width="5" height="15" fill="rgb(207,66,29)"/><text x="74.00" y="1918.50"></text></g><g><title>get_aliases (matplotlib/artist.py:1224) (1 samples, 0.47%)</title><rect x="71" y="1924" width="5" height="15" fill="rgb(231,195,21)"/><text x="74.00" y="1934.50"></text></g><g><title>&lt;listcomp&gt; (matplotlib/artist.py:1226) (1 samples, 0.47%)</title><rect x="71" y="1940" width="5" height="15" fill="rgb(235,84,37)"/><text x="74.00" y="1950.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 1.42%)</title><rect x="65" y="436" width="17" height="15" fill="rgb(218,216,34)"/><text x="68.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.42%)</title><rect x="65" y="452" width="17" height="15" fill="rgb(233,25,26)"/><text x="68.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.42%)</title><rect x="65" y="468" width="17" height="15" fill="rgb(219,172,7)"/><text x="68.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.42%)</title><rect x="65" y="484" width="17" height="15" fill="rgb(238,107,12)"/><text x="68.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.42%)</title><rect x="65" y="500" width="17" height="15" fill="rgb(208,138,16)"/><text x="68.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.42%)</title><rect x="65" y="516" width="17" height="15" fill="rgb(236,212,12)"/><text x="68.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 1.42%)</title><rect x="65" y="532" width="17" height="15" fill="rgb(251,123,5)"/><text x="68.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.42%)</title><rect x="65" y="548" width="17" height="15" fill="rgb(224,164,17)"/><text x="68.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.42%)</title><rect x="65" y="564" width="17" height="15" fill="rgb(252,106,16)"/><text x="68.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.42%)</title><rect x="65" y="580" width="17" height="15" fill="rgb(250,96,44)"/><text x="68.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.42%)</title><rect x="65" y="596" width="17" height="15" fill="rgb(238,142,42)"/><text x="68.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.42%)</title><rect x="65" y="612" width="17" height="15" fill="rgb(226,110,46)"/><text x="68.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 1.42%)</title><rect x="65" y="628" width="17" height="15" fill="rgb(231,6,11)"/><text x="68.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.42%)</title><rect x="65" y="644" width="17" height="15" fill="rgb(227,117,15)"/><text x="68.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.42%)</title><rect x="65" y="660" width="17" height="15" fill="rgb(232,198,31)"/><text x="68.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.42%)</title><rect x="65" y="676" width="17" height="15" fill="rgb(217,39,7)"/><text x="68.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.42%)</title><rect x="65" y="692" width="17" height="15" fill="rgb(250,213,19)"/><text x="68.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.42%)</title><rect x="65" y="708" width="17" height="15" fill="rgb(248,12,42)"/><text x="68.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 1.42%)</title><rect x="65" y="724" width="17" height="15" fill="rgb(248,182,47)"/><text x="68.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.42%)</title><rect x="65" y="740" width="17" height="15" fill="rgb(250,219,16)"/><text x="68.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.42%)</title><rect x="65" y="756" width="17" height="15" fill="rgb(251,138,9)"/><text x="68.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.42%)</title><rect x="65" y="772" width="17" height="15" fill="rgb(223,127,42)"/><text x="68.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.42%)</title><rect x="65" y="788" width="17" height="15" fill="rgb(235,41,50)"/><text x="68.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.42%)</title><rect x="65" y="804" width="17" height="15" fill="rgb(253,199,18)"/><text x="68.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 1.42%)</title><rect x="65" y="820" width="17" height="15" fill="rgb(238,22,38)"/><text x="68.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.42%)</title><rect x="65" y="836" width="17" height="15" fill="rgb(215,4,30)"/><text x="68.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.42%)</title><rect x="65" y="852" width="17" height="15" fill="rgb(216,57,37)"/><text x="68.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.42%)</title><rect x="65" y="868" width="17" height="15" fill="rgb(218,181,4)"/><text x="68.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.42%)</title><rect x="65" y="884" width="17" height="15" fill="rgb(248,48,21)"/><text x="68.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.42%)</title><rect x="65" y="900" width="17" height="15" fill="rgb(236,62,53)"/><text x="68.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 1.42%)</title><rect x="65" y="916" width="17" height="15" fill="rgb(231,159,8)"/><text x="68.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.42%)</title><rect x="65" y="932" width="17" height="15" fill="rgb(227,220,49)"/><text x="68.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.42%)</title><rect x="65" y="948" width="17" height="15" fill="rgb(213,142,45)"/><text x="68.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.42%)</title><rect x="65" y="964" width="17" height="15" fill="rgb(206,49,5)"/><text x="68.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.42%)</title><rect x="65" y="980" width="17" height="15" fill="rgb(229,95,21)"/><text x="68.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.42%)</title><rect x="65" y="996" width="17" height="15" fill="rgb(245,21,41)"/><text x="68.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (3 samples, 1.42%)</title><rect x="65" y="1012" width="17" height="15" fill="rgb(242,67,43)"/><text x="68.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.42%)</title><rect x="65" y="1028" width="17" height="15" fill="rgb(220,207,1)"/><text x="68.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.42%)</title><rect x="65" y="1044" width="17" height="15" fill="rgb(219,211,47)"/><text x="68.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.42%)</title><rect x="65" y="1060" width="17" height="15" fill="rgb(207,50,27)"/><text x="68.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.42%)</title><rect x="65" y="1076" width="17" height="15" fill="rgb(224,140,32)"/><text x="68.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.42%)</title><rect x="65" y="1092" width="17" height="15" fill="rgb(221,131,7)"/><text x="68.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (3 samples, 1.42%)</title><rect x="65" y="1108" width="17" height="15" fill="rgb(244,160,8)"/><text x="68.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.42%)</title><rect x="65" y="1124" width="17" height="15" fill="rgb(226,180,36)"/><text x="68.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.42%)</title><rect x="65" y="1140" width="17" height="15" fill="rgb(215,111,37)"/><text x="68.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.42%)</title><rect x="65" y="1156" width="17" height="15" fill="rgb(212,17,9)"/><text x="68.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.42%)</title><rect x="65" y="1172" width="17" height="15" fill="rgb(231,125,7)"/><text x="68.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.42%)</title><rect x="65" y="1188" width="17" height="15" fill="rgb(231,198,26)"/><text x="68.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (3 samples, 1.42%)</title><rect x="65" y="1204" width="17" height="15" fill="rgb(238,50,41)"/><text x="68.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.42%)</title><rect x="65" y="1220" width="17" height="15" fill="rgb(219,109,9)"/><text x="68.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.42%)</title><rect x="65" y="1236" width="17" height="15" fill="rgb(249,199,40)"/><text x="68.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.42%)</title><rect x="65" y="1252" width="17" height="15" fill="rgb(217,20,47)"/><text x="68.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.42%)</title><rect x="65" y="1268" width="17" height="15" fill="rgb(236,161,24)"/><text x="68.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.42%)</title><rect x="65" y="1284" width="17" height="15" fill="rgb(252,98,54)"/><text x="68.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (3 samples, 1.42%)</title><rect x="65" y="1300" width="17" height="15" fill="rgb(214,146,46)"/><text x="68.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.42%)</title><rect x="65" y="1316" width="17" height="15" fill="rgb(214,0,27)"/><text x="68.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.42%)</title><rect x="65" y="1332" width="17" height="15" fill="rgb(253,27,26)"/><text x="68.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.42%)</title><rect x="65" y="1348" width="17" height="15" fill="rgb(215,127,51)"/><text x="68.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.42%)</title><rect x="65" y="1364" width="17" height="15" fill="rgb(227,205,46)"/><text x="68.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.42%)</title><rect x="65" y="1380" width="17" height="15" fill="rgb(218,157,51)"/><text x="68.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (3 samples, 1.42%)</title><rect x="65" y="1396" width="17" height="15" fill="rgb(252,17,44)"/><text x="68.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.42%)</title><rect x="65" y="1412" width="17" height="15" fill="rgb(241,43,49)"/><text x="68.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.42%)</title><rect x="65" y="1428" width="17" height="15" fill="rgb(228,112,2)"/><text x="68.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.42%)</title><rect x="65" y="1444" width="17" height="15" fill="rgb(227,166,41)"/><text x="68.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.42%)</title><rect x="65" y="1460" width="17" height="15" fill="rgb(209,198,3)"/><text x="68.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.42%)</title><rect x="65" y="1476" width="17" height="15" fill="rgb(229,169,18)"/><text x="68.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (3 samples, 1.42%)</title><rect x="65" y="1492" width="17" height="15" fill="rgb(219,0,26)"/><text x="68.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.42%)</title><rect x="65" y="1508" width="17" height="15" fill="rgb(206,189,41)"/><text x="68.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.42%)</title><rect x="65" y="1524" width="17" height="15" fill="rgb(250,117,4)"/><text x="68.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.42%)</title><rect x="65" y="1540" width="17" height="15" fill="rgb(227,194,44)"/><text x="68.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.42%)</title><rect x="65" y="1556" width="17" height="15" fill="rgb(250,60,54)"/><text x="68.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.42%)</title><rect x="65" y="1572" width="17" height="15" fill="rgb(244,2,2)"/><text x="68.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (3 samples, 1.42%)</title><rect x="65" y="1588" width="17" height="15" fill="rgb(217,63,42)"/><text x="68.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.42%)</title><rect x="65" y="1604" width="17" height="15" fill="rgb(246,89,54)"/><text x="68.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.42%)</title><rect x="65" y="1620" width="17" height="15" fill="rgb(253,123,13)"/><text x="68.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.42%)</title><rect x="65" y="1636" width="17" height="15" fill="rgb(239,186,44)"/><text x="68.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.42%)</title><rect x="65" y="1652" width="17" height="15" fill="rgb(239,144,37)"/><text x="68.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.42%)</title><rect x="65" y="1668" width="17" height="15" fill="rgb(220,67,46)"/><text x="68.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (3 samples, 1.42%)</title><rect x="65" y="1684" width="17" height="15" fill="rgb(225,52,53)"/><text x="68.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.42%)</title><rect x="65" y="1700" width="17" height="15" fill="rgb(223,214,16)"/><text x="68.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.42%)</title><rect x="65" y="1716" width="17" height="15" fill="rgb(206,114,12)"/><text x="68.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.42%)</title><rect x="65" y="1732" width="17" height="15" fill="rgb(206,201,52)"/><text x="68.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.42%)</title><rect x="65" y="1748" width="17" height="15" fill="rgb(241,40,47)"/><text x="68.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.42%)</title><rect x="65" y="1764" width="17" height="15" fill="rgb(241,196,11)"/><text x="68.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (2 samples, 0.94%)</title><rect x="71" y="1780" width="11" height="15" fill="rgb(205,228,7)"/><text x="74.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.94%)</title><rect x="71" y="1796" width="11" height="15" fill="rgb(241,91,31)"/><text x="74.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.94%)</title><rect x="71" y="1812" width="11" height="15" fill="rgb(211,114,1)"/><text x="74.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.94%)</title><rect x="71" y="1828" width="11" height="15" fill="rgb(245,175,34)"/><text x="74.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.94%)</title><rect x="71" y="1844" width="11" height="15" fill="rgb(225,117,18)"/><text x="74.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.94%)</title><rect x="71" y="1860" width="11" height="15" fill="rgb(246,103,39)"/><text x="74.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:1654) (2 samples, 0.94%)</title><rect x="71" y="1876" width="11" height="15" fill="rgb(214,77,13)"/><text x="74.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.47%)</title><rect x="76" y="1892" width="6" height="15" fill="rgb(232,198,49)"/><text x="79.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1366) (1 samples, 0.47%)</title><rect x="76" y="1908" width="6" height="15" fill="rgb(239,12,32)"/><text x="79.00" y="1918.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py:1290) (1 samples, 0.47%)</title><rect x="76" y="1924" width="6" height="15" fill="rgb(236,89,13)"/><text x="79.00" y="1934.50"></text></g><g><title>is_alias (matplotlib/artist.py:1321) (1 samples, 0.47%)</title><rect x="76" y="1940" width="6" height="15" fill="rgb(224,170,13)"/><text x="79.00" y="1950.50"></text></g><g><title>getdoc (inspect.py:611) (1 samples, 0.47%)</title><rect x="76" y="1956" width="6" height="15" fill="rgb(248,105,49)"/><text x="79.00" y="1966.50"></text></g><g><title>cleandoc (inspect.py:633) (1 samples, 0.47%)</title><rect x="76" y="1972" width="6" height="15" fill="rgb(214,127,3)"/><text x="79.00" y="1982.50"></text></g><g><title>root (&lt;template&gt;:100) (1 samples, 0.47%)</title><rect x="82" y="1572" width="5" height="15" fill="rgb(214,153,25)"/><text x="85.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.47%)</title><rect x="82" y="1588" width="5" height="15" fill="rgb(253,184,16)"/><text x="85.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:152) (1 samples, 0.47%)</title><rect x="82" y="1604" width="5" height="15" fill="rgb(231,76,3)"/><text x="85.00" y="1614.50"></text></g><g><title>root (&lt;template&gt;:25) (1 samples, 0.47%)</title><rect x="87" y="1572" width="6" height="15" fill="rgb(219,109,54)"/><text x="90.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:250) (1 samples, 0.47%)</title><rect x="87" y="1588" width="6" height="15" fill="rgb(247,156,3)"/><text x="90.00" y="1598.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (3 samples, 1.42%)</title><rect x="82" y="1492" width="17" height="15" fill="rgb(243,200,13)"/><text x="85.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (3 samples, 1.42%)</title><rect x="82" y="1508" width="17" height="15" fill="rgb(243,17,23)"/><text x="85.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (3 samples, 1.42%)</title><rect x="82" y="1524" width="17" height="15" fill="rgb(216,93,50)"/><text x="85.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (3 samples, 1.42%)</title><rect x="82" y="1540" width="17" height="15" fill="rgb(252,90,18)"/><text x="85.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 1.42%)</title><rect x="82" y="1556" width="17" height="15" fill="rgb(231,24,0)"/><text x="85.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:99) (1 samples, 0.47%)</title><rect x="93" y="1572" width="6" height="15" fill="rgb(244,149,4)"/><text x="96.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:250) (1 samples, 0.47%)</title><rect x="93" y="1588" width="6" height="15" fill="rgb(251,60,41)"/><text x="96.00" y="1598.50"></text></g><g><title>&lt;module&gt; (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:4) (17 samples, 8.02%)</title><rect x="10" y="52" width="94" height="15" fill="rgb(233,204,48)"/><text x="13.00" y="62.50">&lt;module&gt; (b..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (17 samples, 8.02%)</title><rect x="10" y="68" width="94" height="15" fill="rgb(242,26,0)"/><text x="13.00" y="78.50">_find_and_l..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (17 samples, 8.02%)</title><rect x="10" y="84" width="94" height="15" fill="rgb(205,201,8)"/><text x="13.00" y="94.50">_find_and_l..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (17 samples, 8.02%)</title><rect x="10" y="100" width="94" height="15" fill="rgb(247,4,35)"/><text x="13.00" y="110.50">_load_unloc..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (17 samples, 8.02%)</title><rect x="10" y="116" width="94" height="15" fill="rgb(247,66,6)"/><text x="13.00" y="126.50">exec_module..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (17 samples, 8.02%)</title><rect x="10" y="132" width="94" height="15" fill="rgb(222,79,9)"/><text x="13.00" y="142.50">_call_with_..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVR/bench_SVR_poly_b_reg_kernelpoly.py:7) (9 samples, 4.25%)</title><rect x="54" y="148" width="50" height="15" fill="rgb(224,18,21)"/><text x="57.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 4.25%)</title><rect x="54" y="164" width="50" height="15" fill="rgb(243,113,25)"/><text x="57.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 4.25%)</title><rect x="54" y="180" width="50" height="15" fill="rgb(212,218,49)"/><text x="57.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 4.25%)</title><rect x="54" y="196" width="50" height="15" fill="rgb(216,129,25)"/><text x="57.00" y="206.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 4.25%)</title><rect x="54" y="212" width="50" height="15" fill="rgb(236,124,2)"/><text x="57.00" y="222.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 4.25%)</title><rect x="54" y="228" width="50" height="15" fill="rgb(219,106,26)"/><text x="57.00" y="238.50">_call..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (8 samples, 3.77%)</title><rect x="60" y="244" width="44" height="15" fill="rgb(246,40,44)"/><text x="63.00" y="254.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.77%)</title><rect x="60" y="260" width="44" height="15" fill="rgb(237,205,8)"/><text x="63.00" y="270.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.77%)</title><rect x="60" y="276" width="44" height="15" fill="rgb(209,145,35)"/><text x="63.00" y="286.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.77%)</title><rect x="60" y="292" width="44" height="15" fill="rgb(228,61,6)"/><text x="63.00" y="302.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.77%)</title><rect x="60" y="308" width="44" height="15" fill="rgb(223,187,53)"/><text x="63.00" y="318.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.77%)</title><rect x="60" y="324" width="44" height="15" fill="rgb(250,8,47)"/><text x="63.00" y="334.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (7 samples, 3.30%)</title><rect x="65" y="340" width="39" height="15" fill="rgb(246,205,46)"/><text x="68.00" y="350.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 3.30%)</title><rect x="65" y="356" width="39" height="15" fill="rgb(232,80,24)"/><text x="68.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 3.30%)</title><rect x="65" y="372" width="39" height="15" fill="rgb(215,57,2)"/><text x="68.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 3.30%)</title><rect x="65" y="388" width="39" height="15" fill="rgb(219,152,34)"/><text x="68.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 3.30%)</title><rect x="65" y="404" width="39" height="15" fill="rgb(223,24,4)"/><text x="68.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 3.30%)</title><rect x="65" y="420" width="39" height="15" fill="rgb(243,182,3)"/><text x="68.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 1.89%)</title><rect x="82" y="436" width="22" height="15" fill="rgb(249,6,48)"/><text x="85.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.89%)</title><rect x="82" y="452" width="22" height="15" fill="rgb(238,21,23)"/><text x="85.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.89%)</title><rect x="82" y="468" width="22" height="15" fill="rgb(244,90,15)"/><text x="85.00" y="478.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.89%)</title><rect x="82" y="484" width="22" height="15" fill="rgb(217,11,53)"/><text x="85.00" y="494.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.89%)</title><rect x="82" y="500" width="22" height="15" fill="rgb(226,172,29)"/><text x="85.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.89%)</title><rect x="82" y="516" width="22" height="15" fill="rgb(223,113,36)"/><text x="85.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.89%)</title><rect x="82" y="532" width="22" height="15" fill="rgb(226,41,44)"/><text x="85.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.89%)</title><rect x="82" y="548" width="22" height="15" fill="rgb(254,120,50)"/><text x="85.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.89%)</title><rect x="82" y="564" width="22" height="15" fill="rgb(217,228,21)"/><text x="85.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 1.89%)</title><rect x="82" y="580" width="22" height="15" fill="rgb(230,87,9)"/><text x="85.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.89%)</title><rect x="82" y="596" width="22" height="15" fill="rgb(253,190,39)"/><text x="85.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.89%)</title><rect x="82" y="612" width="22" height="15" fill="rgb(237,190,39)"/><text x="85.00" y="622.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.89%)</title><rect x="82" y="628" width="22" height="15" fill="rgb(240,52,16)"/><text x="85.00" y="638.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.89%)</title><rect x="82" y="644" width="22" height="15" fill="rgb(238,142,18)"/><text x="85.00" y="654.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.89%)</title><rect x="82" y="660" width="22" height="15" fill="rgb(245,212,4)"/><text x="85.00" y="670.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 1.89%)</title><rect x="82" y="676" width="22" height="15" fill="rgb(242,223,16)"/><text x="85.00" y="686.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.89%)</title><rect x="82" y="692" width="22" height="15" fill="rgb(206,113,10)"/><text x="85.00" y="702.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.89%)</title><rect x="82" y="708" width="22" height="15" fill="rgb(230,83,9)"/><text x="85.00" y="718.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.89%)</title><rect x="82" y="724" width="22" height="15" fill="rgb(241,132,13)"/><text x="85.00" y="734.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.89%)</title><rect x="82" y="740" width="22" height="15" fill="rgb(212,26,39)"/><text x="85.00" y="750.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.89%)</title><rect x="82" y="756" width="22" height="15" fill="rgb(240,84,33)"/><text x="85.00" y="766.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 1.89%)</title><rect x="82" y="772" width="22" height="15" fill="rgb(218,136,25)"/><text x="85.00" y="782.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.89%)</title><rect x="82" y="788" width="22" height="15" fill="rgb(208,21,19)"/><text x="85.00" y="798.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.89%)</title><rect x="82" y="804" width="22" height="15" fill="rgb(210,168,20)"/><text x="85.00" y="814.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.89%)</title><rect x="82" y="820" width="22" height="15" fill="rgb(248,205,7)"/><text x="85.00" y="830.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.89%)</title><rect x="82" y="836" width="22" height="15" fill="rgb(220,218,17)"/><text x="85.00" y="846.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.89%)</title><rect x="82" y="852" width="22" height="15" fill="rgb(216,96,33)"/><text x="85.00" y="862.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 1.89%)</title><rect x="82" y="868" width="22" height="15" fill="rgb(238,21,31)"/><text x="85.00" y="878.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.89%)</title><rect x="82" y="884" width="22" height="15" fill="rgb(207,160,26)"/><text x="85.00" y="894.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.89%)</title><rect x="82" y="900" width="22" height="15" fill="rgb(223,138,4)"/><text x="85.00" y="910.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.89%)</title><rect x="82" y="916" width="22" height="15" fill="rgb(234,190,37)"/><text x="85.00" y="926.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.89%)</title><rect x="82" y="932" width="22" height="15" fill="rgb(230,12,9)"/><text x="85.00" y="942.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.89%)</title><rect x="82" y="948" width="22" height="15" fill="rgb(215,105,31)"/><text x="85.00" y="958.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.89%)</title><rect x="82" y="964" width="22" height="15" fill="rgb(241,146,38)"/><text x="85.00" y="974.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.89%)</title><rect x="82" y="980" width="22" height="15" fill="rgb(248,200,15)"/><text x="85.00" y="990.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.89%)</title><rect x="82" y="996" width="22" height="15" fill="rgb(223,46,17)"/><text x="85.00" y="1006.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 1.89%)</title><rect x="82" y="1012" width="22" height="15" fill="rgb(242,108,4)"/><text x="85.00" y="1022.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.89%)</title><rect x="82" y="1028" width="22" height="15" fill="rgb(214,215,5)"/><text x="85.00" y="1038.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.89%)</title><rect x="82" y="1044" width="22" height="15" fill="rgb(211,218,44)"/><text x="85.00" y="1054.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.89%)</title><rect x="82" y="1060" width="22" height="15" fill="rgb(216,195,27)"/><text x="85.00" y="1070.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.89%)</title><rect x="82" y="1076" width="22" height="15" fill="rgb(210,107,34)"/><text x="85.00" y="1086.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.89%)</title><rect x="82" y="1092" width="22" height="15" fill="rgb(247,114,52)"/><text x="85.00" y="1102.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (4 samples, 1.89%)</title><rect x="82" y="1108" width="22" height="15" fill="rgb(222,27,6)"/><text x="85.00" y="1118.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.89%)</title><rect x="82" y="1124" width="22" height="15" fill="rgb(247,9,38)"/><text x="85.00" y="1134.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.89%)</title><rect x="82" y="1140" width="22" height="15" fill="rgb(216,159,51)"/><text x="85.00" y="1150.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.89%)</title><rect x="82" y="1156" width="22" height="15" fill="rgb(208,83,53)"/><text x="85.00" y="1166.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.89%)</title><rect x="82" y="1172" width="22" height="15" fill="rgb(243,135,43)"/><text x="85.00" y="1182.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.89%)</title><rect x="82" y="1188" width="22" height="15" fill="rgb(241,228,23)"/><text x="85.00" y="1198.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.89%)</title><rect x="82" y="1204" width="22" height="15" fill="rgb(246,110,22)"/><text x="85.00" y="1214.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.89%)</title><rect x="82" y="1220" width="22" height="15" fill="rgb(250,26,52)"/><text x="85.00" y="1230.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (4 samples, 1.89%)</title><rect x="82" y="1236" width="22" height="15" fill="rgb(229,165,37)"/><text x="85.00" y="1246.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.89%)</title><rect x="82" y="1252" width="22" height="15" fill="rgb(210,91,48)"/><text x="85.00" y="1262.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.89%)</title><rect x="82" y="1268" width="22" height="15" fill="rgb(247,171,12)"/><text x="85.00" y="1278.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.89%)</title><rect x="82" y="1284" width="22" height="15" fill="rgb(205,192,2)"/><text x="85.00" y="1294.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.89%)</title><rect x="82" y="1300" width="22" height="15" fill="rgb(253,80,27)"/><text x="85.00" y="1310.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.89%)</title><rect x="82" y="1316" width="22" height="15" fill="rgb(226,26,9)"/><text x="85.00" y="1326.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.89%)</title><rect x="82" y="1332" width="22" height="15" fill="rgb(207,173,18)"/><text x="85.00" y="1342.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.89%)</title><rect x="82" y="1348" width="22" height="15" fill="rgb(216,92,9)"/><text x="85.00" y="1358.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (4 samples, 1.89%)</title><rect x="82" y="1364" width="22" height="15" fill="rgb(225,85,54)"/><text x="85.00" y="1374.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.89%)</title><rect x="82" y="1380" width="22" height="15" fill="rgb(213,112,28)"/><text x="85.00" y="1390.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.89%)</title><rect x="82" y="1396" width="22" height="15" fill="rgb(205,153,30)"/><text x="85.00" y="1406.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.89%)</title><rect x="82" y="1412" width="22" height="15" fill="rgb(214,45,15)"/><text x="85.00" y="1422.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.89%)</title><rect x="82" y="1428" width="22" height="15" fill="rgb(223,105,38)"/><text x="85.00" y="1438.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.89%)</title><rect x="82" y="1444" width="22" height="15" fill="rgb(240,172,40)"/><text x="85.00" y="1454.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (4 samples, 1.89%)</title><rect x="82" y="1460" width="22" height="15" fill="rgb(242,208,35)"/><text x="85.00" y="1470.50">&lt;..</text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (4 samples, 1.89%)</title><rect x="82" y="1476" width="22" height="15" fill="rgb(222,195,22)"/><text x="85.00" y="1486.50">_..</text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (1 samples, 0.47%)</title><rect x="99" y="1492" width="5" height="15" fill="rgb(229,147,49)"/><text x="102.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:14) (1 samples, 0.47%)</title><rect x="99" y="1508" width="5" height="15" fill="rgb(241,29,42)"/><text x="102.00" y="1518.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.47%)</title><rect x="99" y="1524" width="5" height="15" fill="rgb(232,0,31)"/><text x="102.00" y="1534.50"></text></g><g><title>&lt;module&gt; (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:40) (1 samples, 0.47%)</title><rect x="104" y="52" width="6" height="15" fill="rgb(227,171,17)"/><text x="107.00" y="62.50"></text></g><g><title>start (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:11) (1 samples, 0.47%)</title><rect x="104" y="68" width="6" height="15" fill="rgb(213,110,14)"/><text x="107.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/svm/SVR/bench_SVR_poly_b_reg_kernelpoly.py:39) (1 samples, 0.47%)</title><rect x="104" y="84" width="6" height="15" fill="rgb(243,159,50)"/><text x="107.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:156) (1 samples, 0.47%)</title><rect x="104" y="100" width="6" height="15" fill="rgb(244,212,21)"/><text x="107.00" y="110.50"></text></g><g><title>exists (genericpath.py:19) (1 samples, 0.47%)</title><rect x="104" y="116" width="6" height="15" fill="rgb(213,46,38)"/><text x="107.00" y="126.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.47%)</title><rect x="104" y="132" width="6" height="15" fill="rgb(219,6,38)"/><text x="107.00" y="142.50"></text></g><g><title>&lt;module&gt; (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:47) (1 samples, 0.47%)</title><rect x="110" y="52" width="5" height="15" fill="rgb(215,158,12)"/><text x="113.00" y="62.50"></text></g><g><title>profile0_skl (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:46) (1 samples, 0.47%)</title><rect x="110" y="68" width="5" height="15" fill="rgb(240,18,46)"/><text x="113.00" y="78.50"></text></g><g><title>setup_profile0 (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:25) (1 samples, 0.47%)</title><rect x="110" y="84" width="5" height="15" fill="rgb(226,150,31)"/><text x="113.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.47%)</title><rect x="110" y="100" width="5" height="15" fill="rgb(213,44,27)"/><text x="113.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:188) (1 samples, 0.47%)</title><rect x="110" y="116" width="5" height="15" fill="rgb(238,7,50)"/><text x="113.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py:49) (1 samples, 0.47%)</title><rect x="110" y="132" width="5" height="15" fill="rgb(244,169,6)"/><text x="113.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="110" y="148" width="5" height="15" fill="rgb(245,209,49)"/><text x="113.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.47%)</title><rect x="110" y="164" width="5" height="15" fill="rgb(238,44,27)"/><text x="113.00" y="174.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.47%)</title><rect x="110" y="180" width="5" height="15" fill="rgb(223,225,7)"/><text x="113.00" y="190.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.47%)</title><rect x="110" y="196" width="5" height="15" fill="rgb(248,185,45)"/><text x="113.00" y="206.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1249) (1 samples, 0.47%)</title><rect x="110" y="212" width="5" height="15" fill="rgb(221,6,5)"/><text x="113.00" y="222.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;:1221) (1 samples, 0.47%)</title><rect x="110" y="228" width="5" height="15" fill="rgb(210,181,7)"/><text x="113.00" y="238.50"></text></g><g><title>_path_hooks (&lt;frozen importlib._bootstrap_external&gt;:1197) (1 samples, 0.47%)</title><rect x="110" y="244" width="5" height="15" fill="rgb(227,205,44)"/><text x="113.00" y="254.50"></text></g><g><title>path_hook_for_FileFinder (&lt;frozen importlib._bootstrap_external&gt;:1449) (1 samples, 0.47%)</title><rect x="110" y="260" width="5" height="15" fill="rgb(220,139,39)"/><text x="113.00" y="270.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap_external&gt;:1325) (1 samples, 0.47%)</title><rect x="110" y="276" width="5" height="15" fill="rgb(232,126,49)"/><text x="113.00" y="286.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (3 samples, 1.42%)</title><rect x="154" y="180" width="17" height="15" fill="rgb(248,20,28)"/><text x="157.00" y="190.50"></text></g><g><title>isclass (inspect.py:78) (2 samples, 0.94%)</title><rect x="160" y="196" width="11" height="15" fill="rgb(217,52,3)"/><text x="163.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 1.42%)</title><rect x="215" y="212" width="17" height="15" fill="rgb(247,57,49)"/><text x="218.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (11 samples, 5.19%)</title><rect x="188" y="196" width="61" height="15" fill="rgb(247,7,11)"/><text x="191.00" y="206.50">&lt;listc..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 1.42%)</title><rect x="232" y="212" width="17" height="15" fill="rgb(209,207,46)"/><text x="235.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (20 samples, 9.43%)</title><rect x="171" y="180" width="111" height="15" fill="rgb(210,59,39)"/><text x="174.00" y="190.50">check_is_fitt..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (6 samples, 2.83%)</title><rect x="249" y="196" width="33" height="15" fill="rgb(226,145,19)"/><text x="252.00" y="206.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 1.42%)</title><rect x="266" y="212" width="16" height="15" fill="rgb(236,6,35)"/><text x="269.00" y="222.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (25 samples, 11.79%)</title><rect x="149" y="164" width="139" height="15" fill="rgb(254,214,24)"/><text x="152.00" y="174.50">_validate_for_pre..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:951) (1 samples, 0.47%)</title><rect x="282" y="180" width="6" height="15" fill="rgb(213,194,34)"/><text x="285.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.47%)</title><rect x="293" y="180" width="6" height="15" fill="rgb(235,118,47)"/><text x="296.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (1 samples, 0.47%)</title><rect x="299" y="180" width="6" height="15" fill="rgb(229,133,46)"/><text x="302.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (2 samples, 0.94%)</title><rect x="305" y="180" width="11" height="15" fill="rgb(234,144,38)"/><text x="308.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.47%)</title><rect x="316" y="180" width="5" height="15" fill="rgb(239,165,25)"/><text x="319.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.47%)</title><rect x="327" y="196" width="5" height="15" fill="rgb(224,55,53)"/><text x="330.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 1.42%)</title><rect x="321" y="180" width="17" height="15" fill="rgb(250,123,49)"/><text x="324.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.47%)</title><rect x="332" y="196" width="6" height="15" fill="rgb(209,36,45)"/><text x="335.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.94%)</title><rect x="349" y="212" width="11" height="15" fill="rgb(224,43,4)"/><text x="352.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (7 samples, 3.30%)</title><rect x="338" y="180" width="39" height="15" fill="rgb(215,119,47)"/><text x="341.00" y="190.50">che..</text></g><g><title>simplefilter (warnings.py:179) (7 samples, 3.30%)</title><rect x="338" y="196" width="39" height="15" fill="rgb(244,191,38)"/><text x="341.00" y="206.50">sim..</text></g><g><title>_add_filter (warnings.py:188) (3 samples, 1.42%)</title><rect x="360" y="212" width="17" height="15" fill="rgb(214,94,27)"/><text x="363.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (3 samples, 1.42%)</title><rect x="377" y="180" width="17" height="15" fill="rgb(232,152,47)"/><text x="380.00" y="190.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.47%)</title><rect x="388" y="196" width="6" height="15" fill="rgb(227,107,42)"/><text x="391.00" y="206.50"></text></g><g><title>0x7f3bf437b730 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="388" y="212" width="6" height="15" fill="rgb(240,119,26)"/><text x="391.00" y="222.50"></text></g><g><title>0x7f3bf437b757 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="399" y="228" width="6" height="15" fill="rgb(244,174,15)"/><text x="402.00" y="238.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c:320) (1 samples, 0.47%)</title><rect x="405" y="228" width="5" height="15" fill="rgb(223,184,18)"/><text x="408.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (4 samples, 1.89%)</title><rect x="394" y="212" width="22" height="15" fill="rgb(233,5,20)"/><text x="397.00" y="222.50">_..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.47%)</title><rect x="410" y="228" width="6" height="15" fill="rgb(207,196,46)"/><text x="413.00" y="238.50"></text></g><g><title>PyArray_FromArray (ctors.c:2168) (1 samples, 0.47%)</title><rect x="416" y="260" width="5" height="15" fill="rgb(242,225,4)"/><text x="419.00" y="270.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.47%)</title><rect x="416" y="276" width="5" height="15" fill="rgb(205,103,21)"/><text x="419.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.47%)</title><rect x="416" y="292" width="5" height="15" fill="rgb(249,90,17)"/><text x="419.00" y="302.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.47%)</title><rect x="416" y="308" width="5" height="15" fill="rgb(217,102,38)"/><text x="419.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.47%)</title><rect x="416" y="324" width="5" height="15" fill="rgb(218,172,47)"/><text x="419.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:123) (1 samples, 0.47%)</title><rect x="416" y="340" width="5" height="15" fill="rgb(213,209,44)"/><text x="419.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.47%)</title><rect x="421" y="292" width="6" height="15" fill="rgb(227,197,28)"/><text x="424.00" y="302.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:38) (1 samples, 0.47%)</title><rect x="421" y="308" width="6" height="15" fill="rgb(253,10,46)"/><text x="424.00" y="318.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.47%)</title><rect x="421" y="324" width="6" height="15" fill="rgb(248,39,24)"/><text x="424.00" y="334.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c:777) (1 samples, 0.47%)</title><rect x="427" y="324" width="6" height="15" fill="rgb(216,61,9)"/><text x="430.00" y="334.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (8 samples, 3.77%)</title><rect x="394" y="180" width="44" height="15" fill="rgb(247,49,25)"/><text x="397.00" y="190.50">chec..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (8 samples, 3.77%)</title><rect x="394" y="196" width="44" height="15" fill="rgb(248,115,39)"/><text x="397.00" y="206.50">asar..</text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (4 samples, 1.89%)</title><rect x="416" y="212" width="22" height="15" fill="rgb(243,81,49)"/><text x="419.00" y="222.50">_..</text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (4 samples, 1.89%)</title><rect x="416" y="228" width="22" height="15" fill="rgb(211,119,45)"/><text x="419.00" y="238.50">P..</text></g><g><title>PyArray_FromAny (ctors.c:1966) (4 samples, 1.89%)</title><rect x="416" y="244" width="22" height="15" fill="rgb(218,36,24)"/><text x="419.00" y="254.50">P..</text></g><g><title>PyArray_FromArray (ctors.c:2172) (3 samples, 1.42%)</title><rect x="421" y="260" width="17" height="15" fill="rgb(217,113,3)"/><text x="424.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 1.42%)</title><rect x="421" y="276" width="17" height="15" fill="rgb(220,77,2)"/><text x="424.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (2 samples, 0.94%)</title><rect x="427" y="292" width="11" height="15" fill="rgb(224,75,32)"/><text x="430.00" y="302.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (2 samples, 0.94%)</title><rect x="427" y="308" width="11" height="15" fill="rgb(222,229,39)"/><text x="430.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.47%)</title><rect x="433" y="324" width="5" height="15" fill="rgb(247,58,53)"/><text x="436.00" y="334.50"></text></g><g><title>0x7f3bf431da19 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="433" y="340" width="5" height="15" fill="rgb(251,140,35)"/><text x="436.00" y="350.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c:736) (1 samples, 0.47%)</title><rect x="433" y="356" width="5" height="15" fill="rgb(246,2,33)"/><text x="436.00" y="366.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.47%)</title><rect x="438" y="180" width="6" height="15" fill="rgb(226,132,44)"/><text x="441.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.47%)</title><rect x="438" y="196" width="6" height="15" fill="rgb(234,132,0)"/><text x="441.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.47%)</title><rect x="449" y="196" width="6" height="15" fill="rgb(226,132,43)"/><text x="452.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (3 samples, 1.42%)</title><rect x="444" y="180" width="16" height="15" fill="rgb(254,63,17)"/><text x="447.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:336) (1 samples, 0.47%)</title><rect x="455" y="196" width="5" height="15" fill="rgb(240,63,41)"/><text x="458.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.47%)</title><rect x="460" y="180" width="6" height="15" fill="rgb(241,0,9)"/><text x="463.00" y="190.50"></text></g><g><title>0x7f3bf44440e6 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="477" y="212" width="6" height="15" fill="rgb(209,101,9)"/><text x="480.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.47%)</title><rect x="483" y="212" width="5" height="15" fill="rgb(244,187,16)"/><text x="486.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (6 samples, 2.83%)</title><rect x="466" y="196" width="33" height="15" fill="rgb(221,28,5)"/><text x="469.00" y="206.50">_a..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.94%)</title><rect x="488" y="212" width="11" height="15" fill="rgb(226,210,1)"/><text x="491.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (7 samples, 3.30%)</title><rect x="466" y="180" width="39" height="15" fill="rgb(250,172,42)"/><text x="469.00" y="190.50">che..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.47%)</title><rect x="499" y="196" width="6" height="15" fill="rgb(253,157,51)"/><text x="502.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.47%)</title><rect x="505" y="180" width="5" height="15" fill="rgb(227,147,27)"/><text x="508.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (7 samples, 3.30%)</title><rect x="516" y="196" width="39" height="15" fill="rgb(209,115,6)"/><text x="519.00" y="206.50">_nu..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.47%)</title><rect x="549" y="212" width="6" height="15" fill="rgb(228,126,1)"/><text x="552.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.47%)</title><rect x="555" y="196" width="6" height="15" fill="rgb(216,106,32)"/><text x="558.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:137) (1 samples, 0.47%)</title><rect x="566" y="212" width="6" height="15" fill="rgb(252,49,40)"/><text x="569.00" y="222.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (54 samples, 25.47%)</title><rect x="288" y="164" width="300" height="15" fill="rgb(228,179,34)"/><text x="291.00" y="174.50">_validate_for_predict (sklearn/svm/_base..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (14 samples, 6.60%)</title><rect x="510" y="180" width="78" height="15" fill="rgb(215,165,17)"/><text x="513.00" y="190.50">check_arr..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (5 samples, 2.36%)</title><rect x="561" y="196" width="27" height="15" fill="rgb(250,160,25)"/><text x="564.00" y="206.50">_..</text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 1.42%)</title><rect x="572" y="212" width="16" height="15" fill="rgb(238,211,19)"/><text x="575.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.47%)</title><rect x="583" y="228" width="5" height="15" fill="rgb(211,96,15)"/><text x="586.00" y="238.50"></text></g><g><title>predict (sklearn/svm/_base.py:315) (81 samples, 38.21%)</title><rect x="149" y="148" width="451" height="15" fill="rgb(212,197,34)"/><text x="152.00" y="158.50">predict (sklearn/svm/_base.py:315)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:453) (2 samples, 0.94%)</title><rect x="588" y="164" width="12" height="15" fill="rgb(231,218,1)"/><text x="591.00" y="174.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.47%)</title><rect x="594" y="180" width="6" height="15" fill="rgb(220,17,21)"/><text x="597.00" y="190.50"></text></g><g><title>_dense_predict (sklearn/svm/_base.py:320) (1 samples, 0.47%)</title><rect x="600" y="164" width="5" height="15" fill="rgb(210,78,18)"/><text x="603.00" y="174.50"></text></g><g><title>_dense_predict (sklearn/svm/_base.py:325) (1 samples, 0.47%)</title><rect x="605" y="164" width="6" height="15" fill="rgb(216,28,34)"/><text x="608.00" y="174.50"></text></g><g><title>_dense_predict (sklearn/svm/_base.py:332) (1 samples, 0.47%)</title><rect x="611" y="164" width="5" height="15" fill="rgb(228,5,29)"/><text x="614.00" y="174.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.47%)</title><rect x="616" y="244" width="6" height="15" fill="rgb(205,16,26)"/><text x="619.00" y="254.50"></text></g><g><title>0x7f3bcee57d86 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.94%)</title><rect x="616" y="196" width="11" height="15" fill="rgb(236,101,42)"/><text x="619.00" y="206.50"></text></g><g><title>0x7f3bcee3de39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.94%)</title><rect x="616" y="212" width="11" height="15" fill="rgb(233,86,25)"/><text x="619.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.94%)</title><rect x="616" y="228" width="11" height="15" fill="rgb(245,106,29)"/><text x="619.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:690) (1 samples, 0.47%)</title><rect x="622" y="244" width="5" height="15" fill="rgb(230,97,21)"/><text x="625.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.47%)</title><rect x="627" y="244" width="6" height="15" fill="rgb(216,54,52)"/><text x="630.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.47%)</title><rect x="627" y="260" width="6" height="15" fill="rgb(249,174,42)"/><text x="630.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c:412) (1 samples, 0.47%)</title><rect x="627" y="276" width="6" height="15" fill="rgb(238,223,37)"/><text x="630.00" y="286.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.47%)</title><rect x="627" y="292" width="6" height="15" fill="rgb(253,200,30)"/><text x="630.00" y="302.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.47%)</title><rect x="627" y="308" width="6" height="15" fill="rgb(238,196,18)"/><text x="630.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.47%)</title><rect x="633" y="244" width="5" height="15" fill="rgb(216,95,23)"/><text x="636.00" y="254.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.47%)</title><rect x="633" y="260" width="5" height="15" fill="rgb(250,0,21)"/><text x="636.00" y="270.50"></text></g><g><title>0x7f3bf4365902 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="633" y="276" width="5" height="15" fill="rgb(231,99,6)"/><text x="636.00" y="286.50"></text></g><g><title>0x7f3bcee57dcc (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.42%)</title><rect x="627" y="196" width="17" height="15" fill="rgb(212,177,14)"/><text x="630.00" y="206.50"></text></g><g><title>0x7f3bcee3d5ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.42%)</title><rect x="627" y="212" width="17" height="15" fill="rgb(223,3,45)"/><text x="630.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 1.42%)</title><rect x="627" y="228" width="17" height="15" fill="rgb(232,135,15)"/><text x="630.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:698) (1 samples, 0.47%)</title><rect x="638" y="244" width="6" height="15" fill="rgb(247,93,39)"/><text x="641.00" y="254.50"></text></g><g><title>0x7f3bcee57e0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="644" y="196" width="6" height="15" fill="rgb(234,93,36)"/><text x="647.00" y="206.50"></text></g><g><title>0x7f3bcee3de39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="644" y="212" width="6" height="15" fill="rgb(216,229,4)"/><text x="647.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.47%)</title><rect x="644" y="228" width="6" height="15" fill="rgb(234,81,22)"/><text x="647.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.47%)</title><rect x="644" y="244" width="6" height="15" fill="rgb(230,2,53)"/><text x="647.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.47%)</title><rect x="644" y="260" width="6" height="15" fill="rgb(205,40,42)"/><text x="647.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c:434) (1 samples, 0.47%)</title><rect x="644" y="276" width="6" height="15" fill="rgb(230,95,48)"/><text x="647.00" y="286.50"></text></g><g><title>_append_char (buffer.c:115) (1 samples, 0.47%)</title><rect x="644" y="292" width="6" height="15" fill="rgb(232,9,25)"/><text x="647.00" y="302.50"></text></g><g><title>0x7f3bcee57fb2 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="650" y="196" width="5" height="15" fill="rgb(213,117,33)"/><text x="653.00" y="206.50"></text></g><g><title>0x7f3bcee3df13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="650" y="212" width="5" height="15" fill="rgb(234,57,50)"/><text x="653.00" y="222.50"></text></g><g><title>0x7f3bcee3d33c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="650" y="228" width="5" height="15" fill="rgb(237,117,5)"/><text x="653.00" y="238.50"></text></g><g><title>0x7f3bcee3c98a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="650" y="244" width="5" height="15" fill="rgb(240,103,41)"/><text x="653.00" y="254.50"></text></g><g><title>0x7f3bcee57fed (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="655" y="196" width="6" height="15" fill="rgb(207,201,40)"/><text x="658.00" y="206.50"></text></g><g><title>0x7f3bcee3de39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="655" y="212" width="6" height="15" fill="rgb(207,174,36)"/><text x="658.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.47%)</title><rect x="655" y="228" width="6" height="15" fill="rgb(246,178,26)"/><text x="658.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.47%)</title><rect x="655" y="244" width="6" height="15" fill="rgb(208,130,0)"/><text x="658.00" y="254.50"></text></g><g><title>_buffer_info_free (buffer.c:635) (1 samples, 0.47%)</title><rect x="655" y="260" width="6" height="15" fill="rgb(254,100,14)"/><text x="658.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.47%)</title><rect x="655" y="276" width="6" height="15" fill="rgb(212,49,54)"/><text x="658.00" y="286.50"></text></g><g><title>0x7f3bcee5815d (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="661" y="196" width="5" height="15" fill="rgb(236,36,49)"/><text x="664.00" y="206.50"></text></g><g><title>0x7f3bf437be7e (libc-2.29.so) (1 samples, 0.47%)</title><rect x="677" y="228" width="6" height="15" fill="rgb(240,155,4)"/><text x="680.00" y="238.50"></text></g><g><title>array_arange (multiarraymodule.c:2754) (4 samples, 1.89%)</title><rect x="666" y="212" width="23" height="15" fill="rgb(227,175,8)"/><text x="669.00" y="222.50">a..</text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (1 samples, 0.47%)</title><rect x="683" y="228" width="6" height="15" fill="rgb(252,192,51)"/><text x="686.00" y="238.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3419) (1 samples, 0.47%)</title><rect x="689" y="228" width="5" height="15" fill="rgb(228,88,13)"/><text x="692.00" y="238.50"></text></g><g><title>_calc_length (ctors.c:3330) (1 samples, 0.47%)</title><rect x="689" y="244" width="5" height="15" fill="rgb(248,221,20)"/><text x="692.00" y="254.50"></text></g><g><title>_arange_safe_ceil_to_intp (ctors.c:3137) (1 samples, 0.47%)</title><rect x="689" y="260" width="5" height="15" fill="rgb(218,9,51)"/><text x="692.00" y="270.50"></text></g><g><title>0x7f3bf451ad86 (libm-2.29.so) (1 samples, 0.47%)</title><rect x="689" y="276" width="5" height="15" fill="rgb(226,92,5)"/><text x="692.00" y="286.50"></text></g><g><title>0x7f3bcee5817f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.83%)</title><rect x="666" y="196" width="34" height="15" fill="rgb(213,197,9)"/><text x="669.00" y="206.50">0x..</text></g><g><title>array_arange (multiarraymodule.c:2763) (2 samples, 0.94%)</title><rect x="689" y="212" width="11" height="15" fill="rgb(248,217,22)"/><text x="692.00" y="222.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3432) (1 samples, 0.47%)</title><rect x="694" y="228" width="6" height="15" fill="rgb(227,161,2)"/><text x="697.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.47%)</title><rect x="694" y="244" width="6" height="15" fill="rgb(207,200,51)"/><text x="697.00" y="254.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.47%)</title><rect x="694" y="260" width="6" height="15" fill="rgb(233,34,53)"/><text x="697.00" y="270.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.47%)</title><rect x="694" y="276" width="6" height="15" fill="rgb(210,11,2)"/><text x="697.00" y="286.50"></text></g><g><title>dense_to_libsvm (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.94%)</title><rect x="700" y="228" width="11" height="15" fill="rgb(217,109,18)"/><text x="703.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.47%)</title><rect x="705" y="244" width="6" height="15" fill="rgb(241,32,21)"/><text x="708.00" y="254.50"></text></g><g><title>0x7f3bf4367028 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="705" y="260" width="6" height="15" fill="rgb(221,42,10)"/><text x="708.00" y="270.50"></text></g><g><title>0x7f3bf4364b9b (libc-2.29.so) (1 samples, 0.47%)</title><rect x="705" y="276" width="6" height="15" fill="rgb(254,125,35)"/><text x="708.00" y="286.50"></text></g><g><title>0x7f3bcee58307 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.89%)</title><rect x="700" y="196" width="22" height="15" fill="rgb(222,93,35)"/><text x="703.00" y="206.50">0..</text></g><g><title>set_model (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.89%)</title><rect x="700" y="212" width="22" height="15" fill="rgb(249,179,8)"/><text x="703.00" y="222.50">s..</text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.94%)</title><rect x="711" y="228" width="11" height="15" fill="rgb(230,127,16)"/><text x="714.00" y="238.50"></text></g><g><title>0x7f3bf4366e80 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="716" y="244" width="6" height="15" fill="rgb(212,114,14)"/><text x="719.00" y="254.50"></text></g><g><title>0x7f3bcee58357 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="722" y="196" width="6" height="15" fill="rgb(240,69,6)"/><text x="725.00" y="206.50"></text></g><g><title>0x7f3bcee3de39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="728" y="212" width="5" height="15" fill="rgb(231,120,11)"/><text x="731.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.47%)</title><rect x="728" y="228" width="5" height="15" fill="rgb(211,69,27)"/><text x="731.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.47%)</title><rect x="728" y="244" width="5" height="15" fill="rgb(250,0,17)"/><text x="731.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:569) (1 samples, 0.47%)</title><rect x="728" y="260" width="5" height="15" fill="rgb(251,199,4)"/><text x="731.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.47%)</title><rect x="728" y="276" width="5" height="15" fill="rgb(209,71,10)"/><text x="731.00" y="286.50"></text></g><g><title>0x7f3bcee584c8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.94%)</title><rect x="728" y="196" width="11" height="15" fill="rgb(230,176,27)"/><text x="731.00" y="206.50"></text></g><g><title>0x7f3bcee3df13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="733" y="212" width="6" height="15" fill="rgb(254,167,36)"/><text x="736.00" y="222.50"></text></g><g><title>0x7f3bcee3d33c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="733" y="228" width="6" height="15" fill="rgb(210,66,37)"/><text x="736.00" y="238.50"></text></g><g><title>0x7f3bcee3cb63 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="733" y="244" width="6" height="15" fill="rgb(228,85,11)"/><text x="736.00" y="254.50"></text></g><g><title>0x7f3bcee584f1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.94%)</title><rect x="739" y="196" width="11" height="15" fill="rgb(229,132,50)"/><text x="742.00" y="206.50"></text></g><g><title>copy_predict (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.94%)</title><rect x="739" y="212" width="11" height="15" fill="rgb(223,119,31)"/><text x="742.00" y="222.50"></text></g><g><title>svm_predict (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="744" y="228" width="6" height="15" fill="rgb(249,207,29)"/><text x="747.00" y="238.50"></text></g><g><title>0x7f3bf4365965 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="744" y="244" width="6" height="15" fill="rgb(242,42,12)"/><text x="747.00" y="254.50"></text></g><g><title>0x7f3bcee584fc (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="750" y="196" width="5" height="15" fill="rgb(248,227,15)"/><text x="753.00" y="206.50"></text></g><g><title>0x7f3bcee58752 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="755" y="196" width="6" height="15" fill="rgb(208,164,32)"/><text x="758.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.47%)</title><rect x="755" y="212" width="6" height="15" fill="rgb(243,171,14)"/><text x="758.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.47%)</title><rect x="755" y="228" width="6" height="15" fill="rgb(217,159,47)"/><text x="758.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:725) (1 samples, 0.47%)</title><rect x="755" y="244" width="6" height="15" fill="rgb(212,52,26)"/><text x="758.00" y="254.50"></text></g><g><title>array_empty (multiarraymodule.c:1814) (1 samples, 0.47%)</title><rect x="761" y="244" width="5" height="15" fill="rgb(233,224,39)"/><text x="764.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.47%)</title><rect x="761" y="260" width="5" height="15" fill="rgb(217,197,5)"/><text x="764.00" y="270.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:932) (1 samples, 0.47%)</title><rect x="761" y="276" width="5" height="15" fill="rgb(206,144,11)"/><text x="764.00" y="286.50"></text></g><g><title>array_empty (multiarraymodule.c:1834) (1 samples, 0.47%)</title><rect x="766" y="244" width="6" height="15" fill="rgb(228,91,3)"/><text x="769.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:54) (119 samples, 56.13%)</title><rect x="115" y="52" width="663" height="15" fill="rgb(208,101,43)"/><text x="118.00" y="62.50">&lt;module&gt; (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:54)</text></g><g><title>profile_skl (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:53) (119 samples, 56.13%)</title><rect x="115" y="68" width="663" height="15" fill="rgb(253,150,14)"/><text x="118.00" y="78.50">profile_skl (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:53)</text></g><g><title>setup_profile (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:37) (119 samples, 56.13%)</title><rect x="115" y="84" width="663" height="15" fill="rgb(226,153,31)"/><text x="118.00" y="94.50">setup_profile (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:37)</text></g><g><title>profile (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:31) (119 samples, 56.13%)</title><rect x="115" y="100" width="663" height="15" fill="rgb(234,142,1)"/><text x="118.00" y="110.50">profile (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (118 samples, 55.66%)</title><rect x="121" y="116" width="657" height="15" fill="rgb(243,98,43)"/><text x="124.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (116 samples, 54.72%)</title><rect x="132" y="132" width="646" height="15" fill="rgb(237,35,47)"/><text x="135.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/svm/_base.py:317) (32 samples, 15.09%)</title><rect x="600" y="148" width="178" height="15" fill="rgb(217,51,0)"/><text x="603.00" y="158.50">predict (sklearn/svm/_b..</text></g><g><title>_dense_predict (sklearn/svm/_base.py:339) (29 samples, 13.68%)</title><rect x="616" y="164" width="162" height="15" fill="rgb(215,95,48)"/><text x="619.00" y="174.50">_dense_predict (skle..</text></g><g><title>0x7f3bcee5a1dd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (29 samples, 13.68%)</title><rect x="616" y="180" width="162" height="15" fill="rgb(239,47,15)"/><text x="619.00" y="190.50">0x7f3bcee5a1dd (skle..</text></g><g><title>0x7f3bcee58cec (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.42%)</title><rect x="761" y="196" width="17" height="15" fill="rgb(249,186,42)"/><text x="764.00" y="206.50"></text></g><g><title>0x7f3bcee379a1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.42%)</title><rect x="761" y="212" width="17" height="15" fill="rgb(230,113,14)"/><text x="764.00" y="222.50"></text></g><g><title>0x7f3bcee3bfdf (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.42%)</title><rect x="761" y="228" width="17" height="15" fill="rgb(215,129,15)"/><text x="764.00" y="238.50"></text></g><g><title>array_empty (multiarraymodule.c:1837) (1 samples, 0.47%)</title><rect x="772" y="244" width="6" height="15" fill="rgb(206,19,8)"/><text x="775.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.47%)</title><rect x="772" y="260" width="6" height="15" fill="rgb(236,170,52)"/><text x="775.00" y="270.50"></text></g><g><title>PyArray_Empty (ctors.c:3111) (1 samples, 0.47%)</title><rect x="772" y="276" width="6" height="15" fill="rgb(210,102,40)"/><text x="775.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.47%)</title><rect x="772" y="292" width="6" height="15" fill="rgb(206,71,31)"/><text x="775.00" y="302.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.47%)</title><rect x="772" y="308" width="6" height="15" fill="rgb(205,166,18)"/><text x="775.00" y="318.50"></text></g><g><title>setup_profile (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:36) (1 samples, 0.47%)</title><rect x="778" y="84" width="5" height="15" fill="rgb(246,174,37)"/><text x="781.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.47%)</title><rect x="778" y="100" width="5" height="15" fill="rgb(222,65,37)"/><text x="781.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.47%)</title><rect x="778" y="116" width="5" height="15" fill="rgb(230,103,6)"/><text x="781.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.47%)</title><rect x="778" y="132" width="5" height="15" fill="rgb(248,147,10)"/><text x="781.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.47%)</title><rect x="778" y="148" width="5" height="15" fill="rgb(228,176,22)"/><text x="781.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.47%)</title><rect x="778" y="164" width="5" height="15" fill="rgb(254,221,4)"/><text x="781.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.47%)</title><rect x="778" y="180" width="5" height="15" fill="rgb(218,126,16)"/><text x="781.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.47%)</title><rect x="778" y="196" width="5" height="15" fill="rgb(215,78,7)"/><text x="781.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="778" y="212" width="5" height="15" fill="rgb(228,93,2)"/><text x="781.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="778" y="228" width="5" height="15" fill="rgb(244,182,37)"/><text x="781.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="778" y="244" width="5" height="15" fill="rgb(232,7,3)"/><text x="781.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="778" y="260" width="5" height="15" fill="rgb(252,48,52)"/><text x="781.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="778" y="276" width="5" height="15" fill="rgb(216,77,7)"/><text x="781.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.47%)</title><rect x="778" y="292" width="5" height="15" fill="rgb(224,117,18)"/><text x="781.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="778" y="308" width="5" height="15" fill="rgb(211,83,51)"/><text x="781.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="778" y="324" width="5" height="15" fill="rgb(243,1,39)"/><text x="781.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="778" y="340" width="5" height="15" fill="rgb(241,112,23)"/><text x="781.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="778" y="356" width="5" height="15" fill="rgb(238,133,34)"/><text x="781.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="778" y="372" width="5" height="15" fill="rgb(212,133,0)"/><text x="781.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:8) (1 samples, 0.47%)</title><rect x="778" y="388" width="5" height="15" fill="rgb(236,68,51)"/><text x="781.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="778" y="404" width="5" height="15" fill="rgb(251,90,51)"/><text x="781.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="778" y="420" width="5" height="15" fill="rgb(224,205,53)"/><text x="781.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="778" y="436" width="5" height="15" fill="rgb(254,49,30)"/><text x="781.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="778" y="452" width="5" height="15" fill="rgb(238,161,11)"/><text x="781.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="778" y="468" width="5" height="15" fill="rgb(234,69,26)"/><text x="781.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op.py:25) (1 samples, 0.47%)</title><rect x="778" y="484" width="5" height="15" fill="rgb(224,157,42)"/><text x="781.00" y="494.50"></text></g><g><title>_build_schemas (mlprodict/onnxrt/ops_cpu/_op.py:13) (1 samples, 0.47%)</title><rect x="778" y="500" width="5" height="15" fill="rgb(236,144,29)"/><text x="781.00" y="510.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="778" y="516" width="5" height="15" fill="rgb(246,138,52)"/><text x="781.00" y="526.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="778" y="532" width="5" height="15" fill="rgb(244,219,29)"/><text x="781.00" y="542.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="778" y="548" width="5" height="15" fill="rgb(236,195,5)"/><text x="781.00" y="558.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, true&gt; const*)#1}&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="778" y="564" width="5" height="15" fill="rgb(231,10,24)"/><text x="781.00" y="574.50"></text></g><g><title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;_typeobject* const, std::vector&lt;pybind11::detail::type_info*, std::allocator&lt;pybind11::detail::type_info*&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_buckets [clone .isra.776] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="778" y="580" width="5" height="15" fill="rgb(254,134,25)"/><text x="781.00" y="590.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.47%)</title><rect x="778" y="596" width="5" height="15" fill="rgb(207,121,49)"/><text x="781.00" y="606.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.47%)</title><rect x="778" y="612" width="5" height="15" fill="rgb(211,188,17)"/><text x="781.00" y="622.50"></text></g><g><title>0x7f3bb52ef8f0 (?) (1 samples, 0.47%)</title><rect x="783" y="244" width="6" height="15" fill="rgb(232,58,24)"/><text x="786.00" y="254.50"></text></g><g><title>0x7f3bb52f364e (?) (1 samples, 0.47%)</title><rect x="783" y="260" width="6" height="15" fill="rgb(234,90,47)"/><text x="786.00" y="270.50"></text></g><g><title>0x7f3bb52f3506 (?) (1 samples, 0.47%)</title><rect x="783" y="276" width="6" height="15" fill="rgb(212,162,48)"/><text x="786.00" y="286.50"></text></g><g><title>0x7f3bb52eab9b (?) (1 samples, 0.47%)</title><rect x="783" y="292" width="6" height="15" fill="rgb(237,63,26)"/><text x="786.00" y="302.50"></text></g><g><title>0x7f3bbe35dab9 (?) (1 samples, 0.47%)</title><rect x="783" y="308" width="6" height="15" fill="rgb(241,168,15)"/><text x="786.00" y="318.50"></text></g><g><title>0x7f3bbe35eeab (?) (1 samples, 0.47%)</title><rect x="783" y="324" width="6" height="15" fill="rgb(242,155,36)"/><text x="786.00" y="334.50"></text></g><g><title>0x7f3bbe35eea0 (libgomp.so.1.0.0) (1 samples, 0.47%)</title><rect x="789" y="468" width="5" height="15" fill="rgb(231,14,10)"/><text x="792.00" y="478.50"></text></g><g><title>0x7f3bbe35eea9 (libgomp.so.1.0.0) (4 samples, 1.89%)</title><rect x="794" y="468" width="23" height="15" fill="rgb(245,166,31)"/><text x="797.00" y="478.50">0..</text></g><g><title>0x7f3bbe35eeab (libgomp.so.1.0.0) (11 samples, 5.19%)</title><rect x="817" y="468" width="61" height="15" fill="rgb(237,147,54)"/><text x="820.00" y="478.50">0x7f3b..</text></g><g><title>0x7f3bbe35dab9 (libgomp.so.1.0.0) (26 samples, 12.26%)</title><rect x="789" y="452" width="144" height="15" fill="rgb(205,220,20)"/><text x="792.00" y="462.50">0x7f3bbe35dab9 (li..</text></g><g><title>0x7f3bbe35eead (libgomp.so.1.0.0) (10 samples, 4.72%)</title><rect x="878" y="468" width="55" height="15" fill="rgb(211,87,20)"/><text x="881.00" y="478.50">0x7f3..</text></g><g><title>0x7f3bbe35ecf9 (libgomp.so.1.0.0) (1 samples, 0.47%)</title><rect x="933" y="484" width="6" height="15" fill="rgb(234,50,16)"/><text x="936.00" y="494.50"></text></g><g><title>&lt;module&gt; (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:61) (31 samples, 14.62%)</title><rect x="778" y="52" width="172" height="15" fill="rgb(212,167,13)"/><text x="781.00" y="62.50">&lt;module&gt; (bench_SVR_po..</text></g><g><title>profile_pyrt (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:60) (31 samples, 14.62%)</title><rect x="778" y="68" width="172" height="15" fill="rgb(210,1,33)"/><text x="781.00" y="78.50">profile_pyrt (bench_SV..</text></g><g><title>setup_profile (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:37) (30 samples, 14.15%)</title><rect x="783" y="84" width="167" height="15" fill="rgb(207,182,22)"/><text x="786.00" y="94.50">setup_profile (bench_..</text></g><g><title>profile (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:31) (30 samples, 14.15%)</title><rect x="783" y="100" width="167" height="15" fill="rgb(220,220,43)"/><text x="786.00" y="110.50">profile (bench_SVR_po..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (30 samples, 14.15%)</title><rect x="783" y="116" width="167" height="15" fill="rgb(251,74,15)"/><text x="786.00" y="126.50">time_predict (mlprodi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (30 samples, 14.15%)</title><rect x="783" y="132" width="167" height="15" fill="rgb(236,135,7)"/><text x="786.00" y="142.50">&lt;lambda&gt; (mlprodict/a..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (30 samples, 14.15%)</title><rect x="783" y="148" width="167" height="15" fill="rgb(230,153,19)"/><text x="786.00" y="158.50">run (mlprodict/onnxrt..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (30 samples, 14.15%)</title><rect x="783" y="164" width="167" height="15" fill="rgb(239,51,23)"/><text x="786.00" y="174.50">_run_sequence_runtime..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (30 samples, 14.15%)</title><rect x="783" y="180" width="167" height="15" fill="rgb(205,69,33)"/><text x="786.00" y="190.50">run (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (30 samples, 14.15%)</title><rect x="783" y="196" width="167" height="15" fill="rgb(214,113,40)"/><text x="786.00" y="206.50">run (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (30 samples, 14.15%)</title><rect x="783" y="212" width="167" height="15" fill="rgb(248,166,45)"/><text x="786.00" y="222.50">run (mlprodict/onnxrt..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_regressor.py:59) (30 samples, 14.15%)</title><rect x="783" y="228" width="167" height="15" fill="rgb(243,7,28)"/><text x="786.00" y="238.50">_run (mlprodict/onnxr..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (29 samples, 13.68%)</title><rect x="789" y="244" width="161" height="15" fill="rgb(246,181,22)"/><text x="792.00" y="254.50">pybind11::cpp_functi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (29 samples, 13.68%)</title><rect x="789" y="260" width="161" height="15" fill="rgb(212,97,35)"/><text x="792.00" y="270.50">void pybind11::cpp_f..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (29 samples, 13.68%)</title><rect x="789" y="276" width="161" height="15" fill="rgb(254,193,41)"/><text x="792.00" y="286.50">void pybind11::cpp_f..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (29 samples, 13.68%)</title><rect x="789" y="292" width="161" height="15" fill="rgb(250,59,35)"/><text x="792.00" y="302.50">pybind11::detail::ar..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (29 samples, 13.68%)</title><rect x="789" y="308" width="161" height="15" fill="rgb(225,40,34)"/><text x="792.00" y="318.50">pybind11::detail::ar..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (29 samples, 13.68%)</title><rect x="789" y="324" width="161" height="15" fill="rgb(235,93,49)"/><text x="792.00" y="334.50">pybind11::cpp_functi..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (29 samples, 13.68%)</title><rect x="789" y="340" width="161" height="15" fill="rgb(219,212,30)"/><text x="792.00" y="350.50">pybind11::array_t&lt;fl..</text></g><g><title>pybind11::array::~array (numpy.h:538) (29 samples, 13.68%)</title><rect x="789" y="356" width="161" height="15" fill="rgb(226,124,7)"/><text x="792.00" y="366.50">pybind11::array::~ar..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (29 samples, 13.68%)</title><rect x="789" y="372" width="161" height="15" fill="rgb(237,166,19)"/><text x="792.00" y="382.50">pybind11::buffer::~b..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (29 samples, 13.68%)</title><rect x="789" y="388" width="161" height="15" fill="rgb(243,196,30)"/><text x="792.00" y="398.50">pybind11::object::~o..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (29 samples, 13.68%)</title><rect x="789" y="404" width="161" height="15" fill="rgb(230,198,30)"/><text x="792.00" y="414.50">pybind11::handle::de..</text></g><g><title>RuntimeSVMRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_regressor_.cpp:179) (29 samples, 13.68%)</title><rect x="789" y="420" width="161" height="15" fill="rgb(224,181,4)"/><text x="792.00" y="430.50">RuntimeSVMRegressor&lt;..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (29 samples, 13.68%)</title><rect x="789" y="436" width="161" height="15" fill="rgb(221,40,21)"/><text x="792.00" y="446.50">pybind11::gil_scoped..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (3 samples, 1.42%)</title><rect x="933" y="452" width="17" height="15" fill="rgb(215,76,19)"/><text x="936.00" y="462.50"></text></g><g><title>0x7f3bbe35cdaa (libgomp.so.1.0.0) (3 samples, 1.42%)</title><rect x="933" y="468" width="17" height="15" fill="rgb(208,122,45)"/><text x="936.00" y="478.50"></text></g><g><title>0x7f3bbe35ecfd (libgomp.so.1.0.0) (2 samples, 0.94%)</title><rect x="939" y="484" width="11" height="15" fill="rgb(234,218,21)"/><text x="942.00" y="494.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.47%)</title><rect x="950" y="116" width="6" height="15" fill="rgb(207,229,38)"/><text x="953.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.47%)</title><rect x="956" y="116" width="5" height="15" fill="rgb(227,187,42)"/><text x="959.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.47%)</title><rect x="956" y="132" width="5" height="15" fill="rgb(247,92,4)"/><text x="959.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.47%)</title><rect x="956" y="148" width="5" height="15" fill="rgb(218,72,5)"/><text x="959.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (4 samples, 1.89%)</title><rect x="972" y="148" width="23" height="15" fill="rgb(222,39,30)"/><text x="975.00" y="158.50">r..</text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.47%)</title><rect x="1000" y="196" width="6" height="15" fill="rgb(229,163,51)"/><text x="1003.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (3 samples, 1.42%)</title><rect x="1006" y="196" width="17" height="15" fill="rgb(247,168,3)"/><text x="1009.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.47%)</title><rect x="1017" y="212" width="6" height="15" fill="rgb(230,193,45)"/><text x="1020.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1017" y="228" width="6" height="15" fill="rgb(239,109,5)"/><text x="1020.00" y="238.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1017" y="244" width="6" height="15" fill="rgb(221,13,40)"/><text x="1020.00" y="254.50"></text></g><g><title>0x7f3bf436593b (libc-2.29.so) (1 samples, 0.47%)</title><rect x="1017" y="260" width="6" height="15" fill="rgb(227,30,42)"/><text x="1020.00" y="270.50"></text></g><g><title>0x7f3bb4415ff9 (?) (1 samples, 0.47%)</title><rect x="1023" y="212" width="5" height="15" fill="rgb(217,141,47)"/><text x="1026.00" y="222.50"></text></g><g><title>0x7f3bb4410ef6 (?) (1 samples, 0.47%)</title><rect x="1023" y="228" width="5" height="15" fill="rgb(214,45,41)"/><text x="1026.00" y="238.50"></text></g><g><title>0x7f3bb44062cc (?) (1 samples, 0.47%)</title><rect x="1023" y="244" width="5" height="15" fill="rgb(254,143,22)"/><text x="1026.00" y="254.50"></text></g><g><title>0x7f3bb4423274 (?) (1 samples, 0.47%)</title><rect x="1023" y="260" width="5" height="15" fill="rgb(211,206,14)"/><text x="1026.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1357) (1 samples, 0.47%)</title><rect x="1023" y="276" width="5" height="15" fill="rgb(215,105,16)"/><text x="1026.00" y="286.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.47%)</title><rect x="1028" y="212" width="6" height="15" fill="rgb(231,194,31)"/><text x="1031.00" y="222.50"></text></g><g><title>0x7fffcd367b28 ([vdso]) (1 samples, 0.47%)</title><rect x="1028" y="228" width="6" height="15" fill="rgb(227,21,41)"/><text x="1031.00" y="238.50"></text></g><g><title>0x7f3bf4365d07 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="1034" y="260" width="5" height="15" fill="rgb(220,160,34)"/><text x="1037.00" y="270.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1045" y="356" width="5" height="15" fill="rgb(239,185,5)"/><text x="1048.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1045" y="372" width="5" height="15" fill="rgb(251,213,16)"/><text x="1048.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1045" y="388" width="5" height="15" fill="rgb(233,82,47)"/><text x="1048.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.47%)</title><rect x="1045" y="404" width="5" height="15" fill="rgb(224,10,24)"/><text x="1048.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.47%)</title><rect x="1045" y="420" width="5" height="15" fill="rgb(234,111,0)"/><text x="1048.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.94%)</title><rect x="1045" y="340" width="11" height="15" fill="rgb(214,146,34)"/><text x="1048.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1050" y="356" width="6" height="15" fill="rgb(250,81,54)"/><text x="1053.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1084" y="356" width="5" height="15" fill="rgb(221,182,9)"/><text x="1087.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1084" y="372" width="5" height="15" fill="rgb(224,211,52)"/><text x="1087.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1084" y="388" width="5" height="15" fill="rgb(215,36,36)"/><text x="1087.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1084" y="404" width="5" height="15" fill="rgb(242,67,48)"/><text x="1087.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1084" y="420" width="5" height="15" fill="rgb(246,56,29)"/><text x="1087.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1084" y="436" width="5" height="15" fill="rgb(254,218,0)"/><text x="1087.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1084" y="452" width="5" height="15" fill="rgb(213,5,49)"/><text x="1087.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1084" y="468" width="5" height="15" fill="rgb(249,18,35)"/><text x="1087.00" y="478.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1084" y="484" width="5" height="15" fill="rgb(212,60,3)"/><text x="1087.00" y="494.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.47%)</title><rect x="1084" y="500" width="5" height="15" fill="rgb(246,99,25)"/><text x="1087.00" y="510.50"></text></g><g><title>0x7f3bf44cfc2d (libm-2.29.so) (1 samples, 0.47%)</title><rect x="1089" y="372" width="6" height="15" fill="rgb(229,213,28)"/><text x="1092.00" y="382.50"></text></g><g><title>0x7f3bf44cfcf0 (libm-2.29.so) (1 samples, 0.47%)</title><rect x="1095" y="372" width="5" height="15" fill="rgb(236,212,11)"/><text x="1098.00" y="382.50"></text></g><g><title>0x7f3bf44cfcf4 (libm-2.29.so) (1 samples, 0.47%)</title><rect x="1100" y="372" width="6" height="15" fill="rgb(238,106,48)"/><text x="1103.00" y="382.50"></text></g><g><title>0x7f3bf44cfdc4 (libm-2.29.so) (1 samples, 0.47%)</title><rect x="1106" y="372" width="6" height="15" fill="rgb(207,209,38)"/><text x="1109.00" y="382.50"></text></g><g><title>0x7f3bf44cfdd4 (libm-2.29.so) (1 samples, 0.47%)</title><rect x="1112" y="372" width="5" height="15" fill="rgb(245,22,53)"/><text x="1115.00" y="382.50"></text></g><g><title>0x7f3bf44cfdf8 (libm-2.29.so) (1 samples, 0.47%)</title><rect x="1117" y="372" width="6" height="15" fill="rgb(209,21,0)"/><text x="1120.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 7.55%)</title><rect x="1039" y="260" width="89" height="15" fill="rgb(216,149,19)"/><text x="1042.00" y="270.50">onnxruntim..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 7.55%)</title><rect x="1039" y="276" width="89" height="15" fill="rgb(212,40,28)"/><text x="1042.00" y="286.50">onnxruntim..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 7.55%)</title><rect x="1039" y="292" width="89" height="15" fill="rgb(207,35,48)"/><text x="1042.00" y="302.50">onnxruntim..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 7.55%)</title><rect x="1039" y="308" width="89" height="15" fill="rgb(248,190,26)"/><text x="1042.00" y="318.50">onnxruntim..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 7.55%)</title><rect x="1039" y="324" width="89" height="15" fill="rgb(224,68,14)"/><text x="1042.00" y="334.50">onnxruntim..</text></g><g><title>onnxruntime::ml::SVMRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 6.13%)</title><rect x="1056" y="340" width="72" height="15" fill="rgb(252,37,17)"/><text x="1059.00" y="350.50">onnxrunt..</text></g><g><title>powf32x (libm-2.29.so) (7 samples, 3.30%)</title><rect x="1089" y="356" width="39" height="15" fill="rgb(246,200,13)"/><text x="1092.00" y="366.50">pow..</text></g><g><title>0x7f3bf44cfe09 (libm-2.29.so) (1 samples, 0.47%)</title><rect x="1123" y="372" width="5" height="15" fill="rgb(215,97,14)"/><text x="1126.00" y="382.50"></text></g><g><title>0x7f3bf437be76 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="1128" y="276" width="6" height="15" fill="rgb(207,135,51)"/><text x="1131.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.94%)</title><rect x="1128" y="260" width="11" height="15" fill="rgb(231,215,21)"/><text x="1131.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.47%)</title><rect x="1134" y="276" width="5" height="15" fill="rgb(252,110,12)"/><text x="1137.00" y="286.50"></text></g><g><title>onnxruntime::python::OrtPybindThrowIfError (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1139" y="260" width="6" height="15" fill="rgb(241,33,41)"/><text x="1142.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.47%)</title><rect x="1145" y="260" width="6" height="15" fill="rgb(240,159,33)"/><text x="1148.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 10.38%)</title><rect x="1034" y="244" width="122" height="15" fill="rgb(217,52,48)"/><text x="1037.00" y="254.50">onnxruntime::py..</text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1151" y="260" width="5" height="15" fill="rgb(222,78,31)"/><text x="1154.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1151" y="276" width="5" height="15" fill="rgb(245,75,44)"/><text x="1154.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1151" y="292" width="5" height="15" fill="rgb(211,33,21)"/><text x="1154.00" y="302.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (31 samples, 14.62%)</title><rect x="995" y="164" width="172" height="15" fill="rgb(205,84,2)"/><text x="998.00" y="174.50">_run_whole_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (31 samples, 14.62%)</title><rect x="995" y="180" width="172" height="15" fill="rgb(235,130,43)"/><text x="998.00" y="190.50">run (mlprodict/onnxrt/..</text></g><g><title>run (onnxruntime/capi/session.py:136) (26 samples, 12.26%)</title><rect x="1023" y="196" width="144" height="15" fill="rgb(231,67,18)"/><text x="1026.00" y="206.50">run (onnxruntime/c..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 11.32%)</title><rect x="1034" y="212" width="133" height="15" fill="rgb(222,149,53)"/><text x="1037.00" y="222.50">pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 11.32%)</title><rect x="1034" y="228" width="133" height="15" fill="rgb(250,19,33)"/><text x="1037.00" y="238.50">void pybind11::c..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.94%)</title><rect x="1156" y="244" width="11" height="15" fill="rgb(209,132,26)"/><text x="1159.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (39 samples, 18.40%)</title><rect x="967" y="132" width="217" height="15" fill="rgb(248,119,0)"/><text x="970.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (34 samples, 16.04%)</title><rect x="995" y="148" width="189" height="15" fill="rgb(211,51,9)"/><text x="998.00" y="158.50">run (mlprodict/onnxrt/on..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 1.42%)</title><rect x="1167" y="164" width="17" height="15" fill="rgb(214,220,24)"/><text x="1170.00" y="174.50"></text></g><g><title>all (212 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(246,95,32)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:68) (43 samples, 20.28%)</title><rect x="950" y="52" width="240" height="15" fill="rgb(244,64,34)"/><text x="953.00" y="62.50">&lt;module&gt; (bench_SVR_poly_b_reg_..</text></g><g><title>profile_ort (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:67) (43 samples, 20.28%)</title><rect x="950" y="68" width="240" height="15" fill="rgb(234,8,49)"/><text x="953.00" y="78.50">profile_ort (bench_SVR_poly_b_r..</text></g><g><title>setup_profile (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:37) (43 samples, 20.28%)</title><rect x="950" y="84" width="240" height="15" fill="rgb(241,222,41)"/><text x="953.00" y="94.50">setup_profile (bench_SVR_poly_b..</text></g><g><title>profile (bench_SVR_poly_b_reg_kernelpoly_1_4_12_float_.py:31) (43 samples, 20.28%)</title><rect x="950" y="100" width="240" height="15" fill="rgb(246,156,5)"/><text x="953.00" y="110.50">profile (bench_SVR_poly_b_reg_k..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (41 samples, 19.34%)</title><rect x="961" y="116" width="229" height="15" fill="rgb(235,179,23)"/><text x="964.00" y="126.50">time_predict (mlprodict/asv_be..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.47%)</title><rect x="1184" y="132" width="6" height="15" fill="rgb(212,142,9)"/><text x="1187.00" y="142.50"></text></g></g></svg>