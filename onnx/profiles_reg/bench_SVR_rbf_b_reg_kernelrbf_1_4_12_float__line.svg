<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1766" onload="init(evt)" viewBox="0 0 1200 1766" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1766" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy</text><text id="details" x="10" y="1749.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1749.00"> </text><svg id="frames" x="10" width="1180"><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 1.01%)</title><rect x="0.5025%" y="852" width="1.0050%" height="15" fill="rgb(227,0,7)"/><text x="0.7525%" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 1.01%)</title><rect x="0.5025%" y="868" width="1.0050%" height="15" fill="rgb(217,0,24)"/><text x="0.7525%" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 1.01%)</title><rect x="0.5025%" y="884" width="1.0050%" height="15" fill="rgb(221,193,54)"/><text x="0.7525%" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 1.01%)</title><rect x="0.5025%" y="900" width="1.0050%" height="15" fill="rgb(248,212,6)"/><text x="0.7525%" y="910.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVR/bench_SVR_rbf_b_reg_kernelrbf.py:2) (4 samples, 2.01%)</title><rect x="0.0000%" y="148" width="2.0101%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.01%)</title><rect x="0.0000%" y="164" width="2.0101%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 2.01%)</title><rect x="0.0000%" y="180" width="2.0101%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.01%)</title><rect x="0.0000%" y="196" width="2.0101%" height="15" fill="rgb(228,23,34)"/><text x="0.2500%" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.01%)</title><rect x="0.0000%" y="212" width="2.0101%" height="15" fill="rgb(218,30,26)"/><text x="0.2500%" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.01%)</title><rect x="0.0000%" y="228" width="2.0101%" height="15" fill="rgb(220,122,19)"/><text x="0.2500%" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.01%)</title><rect x="0.0000%" y="244" width="2.0101%" height="15" fill="rgb(250,228,42)"/><text x="0.2500%" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.01%)</title><rect x="0.0000%" y="260" width="2.0101%" height="15" fill="rgb(240,193,28)"/><text x="0.2500%" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.01%)</title><rect x="0.0000%" y="276" width="2.0101%" height="15" fill="rgb(216,20,37)"/><text x="0.2500%" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 2.01%)</title><rect x="0.0000%" y="292" width="2.0101%" height="15" fill="rgb(206,188,39)"/><text x="0.2500%" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.01%)</title><rect x="0.0000%" y="308" width="2.0101%" height="15" fill="rgb(217,207,13)"/><text x="0.2500%" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.01%)</title><rect x="0.0000%" y="324" width="2.0101%" height="15" fill="rgb(231,73,38)"/><text x="0.2500%" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.01%)</title><rect x="0.0000%" y="340" width="2.0101%" height="15" fill="rgb(225,20,46)"/><text x="0.2500%" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.01%)</title><rect x="0.0000%" y="356" width="2.0101%" height="15" fill="rgb(210,31,41)"/><text x="0.2500%" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.01%)</title><rect x="0.0000%" y="372" width="2.0101%" height="15" fill="rgb(221,200,47)"/><text x="0.2500%" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 2.01%)</title><rect x="0.0000%" y="388" width="2.0101%" height="15" fill="rgb(226,26,5)"/><text x="0.2500%" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.01%)</title><rect x="0.0000%" y="404" width="2.0101%" height="15" fill="rgb(249,33,26)"/><text x="0.2500%" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.01%)</title><rect x="0.0000%" y="420" width="2.0101%" height="15" fill="rgb(235,183,28)"/><text x="0.2500%" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.01%)</title><rect x="0.0000%" y="436" width="2.0101%" height="15" fill="rgb(221,5,38)"/><text x="0.2500%" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.01%)</title><rect x="0.0000%" y="452" width="2.0101%" height="15" fill="rgb(247,18,42)"/><text x="0.2500%" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.01%)</title><rect x="0.0000%" y="468" width="2.0101%" height="15" fill="rgb(241,131,45)"/><text x="0.2500%" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 2.01%)</title><rect x="0.0000%" y="484" width="2.0101%" height="15" fill="rgb(249,31,29)"/><text x="0.2500%" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.01%)</title><rect x="0.0000%" y="500" width="2.0101%" height="15" fill="rgb(225,111,53)"/><text x="0.2500%" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.01%)</title><rect x="0.0000%" y="516" width="2.0101%" height="15" fill="rgb(238,160,17)"/><text x="0.2500%" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.01%)</title><rect x="0.0000%" y="532" width="2.0101%" height="15" fill="rgb(214,148,48)"/><text x="0.2500%" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.01%)</title><rect x="0.0000%" y="548" width="2.0101%" height="15" fill="rgb(232,36,49)"/><text x="0.2500%" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.01%)</title><rect x="0.0000%" y="564" width="2.0101%" height="15" fill="rgb(209,103,24)"/><text x="0.2500%" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 2.01%)</title><rect x="0.0000%" y="580" width="2.0101%" height="15" fill="rgb(229,88,8)"/><text x="0.2500%" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.01%)</title><rect x="0.0000%" y="596" width="2.0101%" height="15" fill="rgb(213,181,19)"/><text x="0.2500%" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 2.01%)</title><rect x="0.0000%" y="612" width="2.0101%" height="15" fill="rgb(254,191,54)"/><text x="0.2500%" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.01%)</title><rect x="0.0000%" y="628" width="2.0101%" height="15" fill="rgb(241,83,37)"/><text x="0.2500%" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.01%)</title><rect x="0.0000%" y="644" width="2.0101%" height="15" fill="rgb(233,36,39)"/><text x="0.2500%" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.01%)</title><rect x="0.0000%" y="660" width="2.0101%" height="15" fill="rgb(226,3,54)"/><text x="0.2500%" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.01%)</title><rect x="0.0000%" y="676" width="2.0101%" height="15" fill="rgb(245,192,40)"/><text x="0.2500%" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.01%)</title><rect x="0.0000%" y="692" width="2.0101%" height="15" fill="rgb(238,167,29)"/><text x="0.2500%" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.01%)</title><rect x="0.0000%" y="708" width="2.0101%" height="15" fill="rgb(232,182,51)"/><text x="0.2500%" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 2.01%)</title><rect x="0.0000%" y="724" width="2.0101%" height="15" fill="rgb(231,60,39)"/><text x="0.2500%" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.01%)</title><rect x="0.0000%" y="740" width="2.0101%" height="15" fill="rgb(208,69,12)"/><text x="0.2500%" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.01%)</title><rect x="0.0000%" y="756" width="2.0101%" height="15" fill="rgb(235,93,37)"/><text x="0.2500%" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.01%)</title><rect x="0.0000%" y="772" width="2.0101%" height="15" fill="rgb(213,116,39)"/><text x="0.2500%" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.01%)</title><rect x="0.0000%" y="788" width="2.0101%" height="15" fill="rgb(222,207,29)"/><text x="0.2500%" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.01%)</title><rect x="0.0000%" y="804" width="2.0101%" height="15" fill="rgb(206,96,30)"/><text x="0.2500%" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 2.01%)</title><rect x="0.0000%" y="820" width="2.0101%" height="15" fill="rgb(218,138,4)"/><text x="0.2500%" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 2.01%)</title><rect x="0.0000%" y="836" width="2.0101%" height="15" fill="rgb(250,191,14)"/><text x="0.2500%" y="846.50">_..</text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:25) (2 samples, 1.01%)</title><rect x="2.0101%" y="996" width="1.0050%" height="15" fill="rgb(239,60,40)"/><text x="2.2601%" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 1.01%)</title><rect x="2.0101%" y="1012" width="1.0050%" height="15" fill="rgb(206,27,48)"/><text x="2.2601%" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.01%)</title><rect x="2.0101%" y="1028" width="1.0050%" height="15" fill="rgb(225,35,8)"/><text x="2.2601%" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.01%)</title><rect x="2.0101%" y="1044" width="1.0050%" height="15" fill="rgb(250,213,24)"/><text x="2.2601%" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.01%)</title><rect x="2.0101%" y="1060" width="1.0050%" height="15" fill="rgb(247,123,22)"/><text x="2.2601%" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.01%)</title><rect x="2.0101%" y="1076" width="1.0050%" height="15" fill="rgb(231,138,38)"/><text x="2.2601%" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.01%)</title><rect x="2.0101%" y="1092" width="1.0050%" height="15" fill="rgb(231,145,46)"/><text x="2.2601%" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.01%)</title><rect x="2.0101%" y="1108" width="1.0050%" height="15" fill="rgb(251,118,11)"/><text x="2.2601%" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (3 samples, 1.51%)</title><rect x="2.0101%" y="900" width="1.5075%" height="15" fill="rgb(217,147,25)"/><text x="2.2601%" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.51%)</title><rect x="2.0101%" y="916" width="1.5075%" height="15" fill="rgb(247,81,37)"/><text x="2.2601%" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.51%)</title><rect x="2.0101%" y="932" width="1.5075%" height="15" fill="rgb(209,12,38)"/><text x="2.2601%" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.51%)</title><rect x="2.0101%" y="948" width="1.5075%" height="15" fill="rgb(227,1,9)"/><text x="2.2601%" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.51%)</title><rect x="2.0101%" y="964" width="1.5075%" height="15" fill="rgb(248,47,43)"/><text x="2.2601%" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.51%)</title><rect x="2.0101%" y="980" width="1.5075%" height="15" fill="rgb(221,10,30)"/><text x="2.2601%" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVR/bench_SVR_rbf_b_reg_kernelrbf.py:4) (4 samples, 2.01%)</title><rect x="2.0101%" y="148" width="2.0101%" height="15" fill="rgb(210,229,1)"/><text x="2.2601%" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.01%)</title><rect x="2.0101%" y="164" width="2.0101%" height="15" fill="rgb(222,148,37)"/><text x="2.2601%" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 2.01%)</title><rect x="2.0101%" y="180" width="2.0101%" height="15" fill="rgb(234,67,33)"/><text x="2.2601%" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.01%)</title><rect x="2.0101%" y="196" width="2.0101%" height="15" fill="rgb(247,98,35)"/><text x="2.2601%" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.01%)</title><rect x="2.0101%" y="212" width="2.0101%" height="15" fill="rgb(247,138,52)"/><text x="2.2601%" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.01%)</title><rect x="2.0101%" y="228" width="2.0101%" height="15" fill="rgb(213,79,30)"/><text x="2.2601%" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.01%)</title><rect x="2.0101%" y="244" width="2.0101%" height="15" fill="rgb(246,177,23)"/><text x="2.2601%" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.01%)</title><rect x="2.0101%" y="260" width="2.0101%" height="15" fill="rgb(230,62,27)"/><text x="2.2601%" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.01%)</title><rect x="2.0101%" y="276" width="2.0101%" height="15" fill="rgb(216,154,8)"/><text x="2.2601%" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py:82) (4 samples, 2.01%)</title><rect x="2.0101%" y="292" width="2.0101%" height="15" fill="rgb(244,35,45)"/><text x="2.2601%" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.01%)</title><rect x="2.0101%" y="308" width="2.0101%" height="15" fill="rgb(251,115,12)"/><text x="2.2601%" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.01%)</title><rect x="2.0101%" y="324" width="2.0101%" height="15" fill="rgb(240,54,50)"/><text x="2.2601%" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.01%)</title><rect x="2.0101%" y="340" width="2.0101%" height="15" fill="rgb(233,84,52)"/><text x="2.2601%" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.01%)</title><rect x="2.0101%" y="356" width="2.0101%" height="15" fill="rgb(207,117,47)"/><text x="2.2601%" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.01%)</title><rect x="2.0101%" y="372" width="2.0101%" height="15" fill="rgb(249,43,39)"/><text x="2.2601%" y="382.50">_..</text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (4 samples, 2.01%)</title><rect x="2.0101%" y="388" width="2.0101%" height="15" fill="rgb(209,38,44)"/><text x="2.2601%" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.01%)</title><rect x="2.0101%" y="404" width="2.0101%" height="15" fill="rgb(236,212,23)"/><text x="2.2601%" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.01%)</title><rect x="2.0101%" y="420" width="2.0101%" height="15" fill="rgb(242,79,21)"/><text x="2.2601%" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.01%)</title><rect x="2.0101%" y="436" width="2.0101%" height="15" fill="rgb(211,96,35)"/><text x="2.2601%" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.01%)</title><rect x="2.0101%" y="452" width="2.0101%" height="15" fill="rgb(253,215,40)"/><text x="2.2601%" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.01%)</title><rect x="2.0101%" y="468" width="2.0101%" height="15" fill="rgb(211,81,21)"/><text x="2.2601%" y="478.50">_..</text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:27) (4 samples, 2.01%)</title><rect x="2.0101%" y="484" width="2.0101%" height="15" fill="rgb(208,190,38)"/><text x="2.2601%" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.01%)</title><rect x="2.0101%" y="500" width="2.0101%" height="15" fill="rgb(235,213,38)"/><text x="2.2601%" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.01%)</title><rect x="2.0101%" y="516" width="2.0101%" height="15" fill="rgb(237,122,38)"/><text x="2.2601%" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.01%)</title><rect x="2.0101%" y="532" width="2.0101%" height="15" fill="rgb(244,218,35)"/><text x="2.2601%" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.01%)</title><rect x="2.0101%" y="548" width="2.0101%" height="15" fill="rgb(240,68,47)"/><text x="2.2601%" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.01%)</title><rect x="2.0101%" y="564" width="2.0101%" height="15" fill="rgb(210,16,53)"/><text x="2.2601%" y="574.50">_..</text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (4 samples, 2.01%)</title><rect x="2.0101%" y="580" width="2.0101%" height="15" fill="rgb(235,124,12)"/><text x="2.2601%" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.01%)</title><rect x="2.0101%" y="596" width="2.0101%" height="15" fill="rgb(224,169,11)"/><text x="2.2601%" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.01%)</title><rect x="2.0101%" y="612" width="2.0101%" height="15" fill="rgb(250,166,2)"/><text x="2.2601%" y="622.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.01%)</title><rect x="2.0101%" y="628" width="2.0101%" height="15" fill="rgb(242,216,29)"/><text x="2.2601%" y="638.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.01%)</title><rect x="2.0101%" y="644" width="2.0101%" height="15" fill="rgb(230,116,27)"/><text x="2.2601%" y="654.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.01%)</title><rect x="2.0101%" y="660" width="2.0101%" height="15" fill="rgb(228,99,48)"/><text x="2.2601%" y="670.50">_..</text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:384) (4 samples, 2.01%)</title><rect x="2.0101%" y="676" width="2.0101%" height="15" fill="rgb(253,11,6)"/><text x="2.2601%" y="686.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.01%)</title><rect x="2.0101%" y="692" width="2.0101%" height="15" fill="rgb(247,143,39)"/><text x="2.2601%" y="702.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.01%)</title><rect x="2.0101%" y="708" width="2.0101%" height="15" fill="rgb(236,97,10)"/><text x="2.2601%" y="718.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.01%)</title><rect x="2.0101%" y="724" width="2.0101%" height="15" fill="rgb(233,208,19)"/><text x="2.2601%" y="734.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.01%)</title><rect x="2.0101%" y="740" width="2.0101%" height="15" fill="rgb(216,164,2)"/><text x="2.2601%" y="750.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.01%)</title><rect x="2.0101%" y="756" width="2.0101%" height="15" fill="rgb(220,129,5)"/><text x="2.2601%" y="766.50">_..</text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:185) (4 samples, 2.01%)</title><rect x="2.0101%" y="772" width="2.0101%" height="15" fill="rgb(242,17,10)"/><text x="2.2601%" y="782.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 2.01%)</title><rect x="2.0101%" y="788" width="2.0101%" height="15" fill="rgb(242,107,0)"/><text x="2.2601%" y="798.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.01%)</title><rect x="2.0101%" y="804" width="2.0101%" height="15" fill="rgb(251,28,31)"/><text x="2.2601%" y="814.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.01%)</title><rect x="2.0101%" y="820" width="2.0101%" height="15" fill="rgb(233,223,10)"/><text x="2.2601%" y="830.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.01%)</title><rect x="2.0101%" y="836" width="2.0101%" height="15" fill="rgb(215,21,27)"/><text x="2.2601%" y="846.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.01%)</title><rect x="2.0101%" y="852" width="2.0101%" height="15" fill="rgb(232,23,21)"/><text x="2.2601%" y="862.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.01%)</title><rect x="2.0101%" y="868" width="2.0101%" height="15" fill="rgb(244,5,23)"/><text x="2.2601%" y="878.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.01%)</title><rect x="2.0101%" y="884" width="2.0101%" height="15" fill="rgb(226,81,46)"/><text x="2.2601%" y="894.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 1.01%)</title><rect x="4.0201%" y="244" width="1.0050%" height="15" fill="rgb(247,70,30)"/><text x="4.2701%" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.01%)</title><rect x="4.0201%" y="260" width="1.0050%" height="15" fill="rgb(212,68,19)"/><text x="4.2701%" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.01%)</title><rect x="4.0201%" y="276" width="1.0050%" height="15" fill="rgb(240,187,13)"/><text x="4.2701%" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.01%)</title><rect x="4.0201%" y="292" width="1.0050%" height="15" fill="rgb(223,113,26)"/><text x="4.2701%" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.01%)</title><rect x="4.0201%" y="308" width="1.0050%" height="15" fill="rgb(206,192,2)"/><text x="4.2701%" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.01%)</title><rect x="4.0201%" y="324" width="1.0050%" height="15" fill="rgb(241,108,4)"/><text x="4.2701%" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 1.01%)</title><rect x="4.0201%" y="340" width="1.0050%" height="15" fill="rgb(247,173,49)"/><text x="4.2701%" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.01%)</title><rect x="4.0201%" y="356" width="1.0050%" height="15" fill="rgb(224,114,35)"/><text x="4.2701%" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 1.01%)</title><rect x="4.0201%" y="372" width="1.0050%" height="15" fill="rgb(245,159,27)"/><text x="4.2701%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.01%)</title><rect x="4.0201%" y="388" width="1.0050%" height="15" fill="rgb(245,172,44)"/><text x="4.2701%" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.01%)</title><rect x="4.0201%" y="404" width="1.0050%" height="15" fill="rgb(236,23,11)"/><text x="4.2701%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.01%)</title><rect x="4.0201%" y="420" width="1.0050%" height="15" fill="rgb(205,117,38)"/><text x="4.2701%" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.01%)</title><rect x="4.0201%" y="436" width="1.0050%" height="15" fill="rgb(237,72,25)"/><text x="4.2701%" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.01%)</title><rect x="4.0201%" y="452" width="1.0050%" height="15" fill="rgb(244,70,9)"/><text x="4.2701%" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.01%)</title><rect x="4.0201%" y="468" width="1.0050%" height="15" fill="rgb(217,125,39)"/><text x="4.2701%" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (2 samples, 1.01%)</title><rect x="4.0201%" y="484" width="1.0050%" height="15" fill="rgb(235,36,10)"/><text x="4.2701%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.01%)</title><rect x="4.0201%" y="500" width="1.0050%" height="15" fill="rgb(251,123,47)"/><text x="4.2701%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.01%)</title><rect x="4.0201%" y="516" width="1.0050%" height="15" fill="rgb(221,13,13)"/><text x="4.2701%" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.01%)</title><rect x="4.0201%" y="532" width="1.0050%" height="15" fill="rgb(238,131,9)"/><text x="4.2701%" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.01%)</title><rect x="4.0201%" y="548" width="1.0050%" height="15" fill="rgb(211,50,8)"/><text x="4.2701%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.01%)</title><rect x="4.0201%" y="564" width="1.0050%" height="15" fill="rgb(245,182,24)"/><text x="4.2701%" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 1.51%)</title><rect x="5.5276%" y="724" width="1.5075%" height="15" fill="rgb(242,14,37)"/><text x="5.7776%" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.51%)</title><rect x="5.5276%" y="740" width="1.5075%" height="15" fill="rgb(246,228,12)"/><text x="5.7776%" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.51%)</title><rect x="5.5276%" y="756" width="1.5075%" height="15" fill="rgb(213,55,15)"/><text x="5.7776%" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.51%)</title><rect x="5.5276%" y="772" width="1.5075%" height="15" fill="rgb(209,9,3)"/><text x="5.7776%" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.51%)</title><rect x="5.5276%" y="788" width="1.5075%" height="15" fill="rgb(230,59,30)"/><text x="5.7776%" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.51%)</title><rect x="5.5276%" y="804" width="1.5075%" height="15" fill="rgb(209,121,21)"/><text x="5.7776%" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 1.51%)</title><rect x="5.5276%" y="820" width="1.5075%" height="15" fill="rgb(220,109,13)"/><text x="5.7776%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.51%)</title><rect x="5.5276%" y="836" width="1.5075%" height="15" fill="rgb(232,18,1)"/><text x="5.7776%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.51%)</title><rect x="5.5276%" y="852" width="1.5075%" height="15" fill="rgb(215,41,42)"/><text x="5.7776%" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.51%)</title><rect x="5.5276%" y="868" width="1.5075%" height="15" fill="rgb(224,123,36)"/><text x="5.7776%" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.51%)</title><rect x="5.5276%" y="884" width="1.5075%" height="15" fill="rgb(240,125,3)"/><text x="5.7776%" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.51%)</title><rect x="5.5276%" y="900" width="1.5075%" height="15" fill="rgb(205,98,50)"/><text x="5.7776%" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 1.51%)</title><rect x="5.5276%" y="916" width="1.5075%" height="15" fill="rgb(205,185,37)"/><text x="5.7776%" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.51%)</title><rect x="5.5276%" y="932" width="1.5075%" height="15" fill="rgb(238,207,15)"/><text x="5.7776%" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.51%)</title><rect x="5.5276%" y="948" width="1.5075%" height="15" fill="rgb(213,199,42)"/><text x="5.7776%" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.51%)</title><rect x="5.5276%" y="964" width="1.5075%" height="15" fill="rgb(235,201,11)"/><text x="5.7776%" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.51%)</title><rect x="5.5276%" y="980" width="1.5075%" height="15" fill="rgb(207,46,11)"/><text x="5.7776%" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.51%)</title><rect x="5.5276%" y="996" width="1.5075%" height="15" fill="rgb(241,35,35)"/><text x="5.7776%" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (5 samples, 2.51%)</title><rect x="5.0251%" y="436" width="2.5126%" height="15" fill="rgb(243,32,47)"/><text x="5.2751%" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.51%)</title><rect x="5.0251%" y="452" width="2.5126%" height="15" fill="rgb(247,202,23)"/><text x="5.2751%" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.51%)</title><rect x="5.0251%" y="468" width="2.5126%" height="15" fill="rgb(219,102,11)"/><text x="5.2751%" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.51%)</title><rect x="5.0251%" y="484" width="2.5126%" height="15" fill="rgb(243,110,44)"/><text x="5.2751%" y="494.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.51%)</title><rect x="5.0251%" y="500" width="2.5126%" height="15" fill="rgb(222,74,54)"/><text x="5.2751%" y="510.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.51%)</title><rect x="5.0251%" y="516" width="2.5126%" height="15" fill="rgb(216,99,12)"/><text x="5.2751%" y="526.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:13) (5 samples, 2.51%)</title><rect x="5.0251%" y="532" width="2.5126%" height="15" fill="rgb(226,22,26)"/><text x="5.2751%" y="542.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.51%)</title><rect x="5.0251%" y="548" width="2.5126%" height="15" fill="rgb(217,163,10)"/><text x="5.2751%" y="558.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.51%)</title><rect x="5.0251%" y="564" width="2.5126%" height="15" fill="rgb(213,25,53)"/><text x="5.2751%" y="574.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.51%)</title><rect x="5.0251%" y="580" width="2.5126%" height="15" fill="rgb(252,105,26)"/><text x="5.2751%" y="590.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.51%)</title><rect x="5.0251%" y="596" width="2.5126%" height="15" fill="rgb(220,39,43)"/><text x="5.2751%" y="606.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.51%)</title><rect x="5.0251%" y="612" width="2.5126%" height="15" fill="rgb(229,68,48)"/><text x="5.2751%" y="622.50">_c..</text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (4 samples, 2.01%)</title><rect x="5.5276%" y="628" width="2.0101%" height="15" fill="rgb(252,8,32)"/><text x="5.7776%" y="638.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.01%)</title><rect x="5.5276%" y="644" width="2.0101%" height="15" fill="rgb(223,20,43)"/><text x="5.7776%" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.01%)</title><rect x="5.5276%" y="660" width="2.0101%" height="15" fill="rgb(229,81,49)"/><text x="5.7776%" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.01%)</title><rect x="5.5276%" y="676" width="2.0101%" height="15" fill="rgb(236,28,36)"/><text x="5.7776%" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.01%)</title><rect x="5.5276%" y="692" width="2.0101%" height="15" fill="rgb(249,185,26)"/><text x="5.7776%" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.01%)</title><rect x="5.5276%" y="708" width="2.0101%" height="15" fill="rgb(249,174,33)"/><text x="5.7776%" y="718.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 1.51%)</title><rect x="8.5427%" y="1236" width="1.5075%" height="15" fill="rgb(233,201,37)"/><text x="8.7927%" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 1.51%)</title><rect x="8.5427%" y="1252" width="1.5075%" height="15" fill="rgb(221,78,26)"/><text x="8.7927%" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.51%)</title><rect x="8.5427%" y="1268" width="1.5075%" height="15" fill="rgb(250,127,30)"/><text x="8.7927%" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.51%)</title><rect x="8.5427%" y="1284" width="1.5075%" height="15" fill="rgb(230,49,44)"/><text x="8.7927%" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.51%)</title><rect x="8.5427%" y="1300" width="1.5075%" height="15" fill="rgb(229,67,23)"/><text x="8.7927%" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.51%)</title><rect x="8.5427%" y="1316" width="1.5075%" height="15" fill="rgb(249,83,47)"/><text x="8.7927%" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.51%)</title><rect x="8.5427%" y="1332" width="1.5075%" height="15" fill="rgb(215,43,3)"/><text x="8.7927%" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.51%)</title><rect x="8.5427%" y="1348" width="1.5075%" height="15" fill="rgb(238,154,13)"/><text x="8.7927%" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 1.51%)</title><rect x="8.5427%" y="1364" width="1.5075%" height="15" fill="rgb(219,56,2)"/><text x="8.7927%" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.51%)</title><rect x="8.5427%" y="1380" width="1.5075%" height="15" fill="rgb(233,0,4)"/><text x="8.7927%" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.51%)</title><rect x="8.5427%" y="1396" width="1.5075%" height="15" fill="rgb(235,30,7)"/><text x="8.7927%" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.51%)</title><rect x="8.5427%" y="1412" width="1.5075%" height="15" fill="rgb(250,79,13)"/><text x="8.7927%" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.51%)</title><rect x="8.5427%" y="1428" width="1.5075%" height="15" fill="rgb(211,146,34)"/><text x="8.7927%" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.51%)</title><rect x="8.5427%" y="1444" width="1.5075%" height="15" fill="rgb(228,22,38)"/><text x="8.7927%" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (2 samples, 1.01%)</title><rect x="9.0452%" y="1460" width="1.0050%" height="15" fill="rgb(235,168,5)"/><text x="9.2952%" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.01%)</title><rect x="9.0452%" y="1476" width="1.0050%" height="15" fill="rgb(221,155,16)"/><text x="9.2952%" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.01%)</title><rect x="9.0452%" y="1492" width="1.0050%" height="15" fill="rgb(215,215,53)"/><text x="9.2952%" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.01%)</title><rect x="9.0452%" y="1508" width="1.0050%" height="15" fill="rgb(223,4,10)"/><text x="9.2952%" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.01%)</title><rect x="9.0452%" y="1524" width="1.0050%" height="15" fill="rgb(234,103,6)"/><text x="9.2952%" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.01%)</title><rect x="9.0452%" y="1540" width="1.0050%" height="15" fill="rgb(227,97,0)"/><text x="9.2952%" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (2 samples, 1.01%)</title><rect x="9.0452%" y="1556" width="1.0050%" height="15" fill="rgb(234,150,53)"/><text x="9.2952%" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (2 samples, 1.01%)</title><rect x="9.0452%" y="1572" width="1.0050%" height="15" fill="rgb(228,201,54)"/><text x="9.2952%" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (2 samples, 1.01%)</title><rect x="9.0452%" y="1588" width="1.0050%" height="15" fill="rgb(222,22,37)"/><text x="9.2952%" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (2 samples, 1.01%)</title><rect x="9.0452%" y="1604" width="1.0050%" height="15" fill="rgb(237,53,32)"/><text x="9.2952%" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:579) (2 samples, 1.01%)</title><rect x="9.0452%" y="1620" width="1.0050%" height="15" fill="rgb(233,25,53)"/><text x="9.2952%" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py:497) (2 samples, 1.01%)</title><rect x="9.0452%" y="1636" width="1.0050%" height="15" fill="rgb(210,40,34)"/><text x="9.2952%" y="1646.50"></text></g><g><title>parse (jinja2/parser.py:901) (2 samples, 1.01%)</title><rect x="9.0452%" y="1652" width="1.0050%" height="15" fill="rgb(241,220,44)"/><text x="9.2952%" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py:883) (2 samples, 1.01%)</title><rect x="9.0452%" y="1668" width="1.0050%" height="15" fill="rgb(235,28,35)"/><text x="9.2952%" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (2 samples, 1.01%)</title><rect x="9.0452%" y="1684" width="1.0050%" height="15" fill="rgb(210,56,17)"/><text x="9.2952%" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (2 samples, 1.01%)</title><rect x="9.0452%" y="1700" width="1.0050%" height="15" fill="rgb(224,130,29)"/><text x="9.2952%" y="1710.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (2 samples, 1.01%)</title><rect x="9.0452%" y="1716" width="1.0050%" height="15" fill="rgb(235,212,8)"/><text x="9.2952%" y="1726.50"></text></g><g><title>&lt;module&gt; (bench_SVR_rbf_b_reg_kernelrbf_1_4_12_float_.py:4) (21 samples, 10.55%)</title><rect x="0.0000%" y="52" width="10.5528%" height="15" fill="rgb(223,33,50)"/><text x="0.2500%" y="62.50">&lt;module&gt; (bench..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (21 samples, 10.55%)</title><rect x="0.0000%" y="68" width="10.5528%" height="15" fill="rgb(219,149,13)"/><text x="0.2500%" y="78.50">_find_and_load ..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (21 samples, 10.55%)</title><rect x="0.0000%" y="84" width="10.5528%" height="15" fill="rgb(250,156,29)"/><text x="0.2500%" y="94.50">_find_and_load_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (21 samples, 10.55%)</title><rect x="0.0000%" y="100" width="10.5528%" height="15" fill="rgb(216,193,19)"/><text x="0.2500%" y="110.50">_load_unlocked ..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (21 samples, 10.55%)</title><rect x="0.0000%" y="116" width="10.5528%" height="15" fill="rgb(216,135,14)"/><text x="0.2500%" y="126.50">exec_module (&lt;f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (21 samples, 10.55%)</title><rect x="0.0000%" y="132" width="10.5528%" height="15" fill="rgb(241,47,5)"/><text x="0.2500%" y="142.50">_call_with_fram..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVR/bench_SVR_rbf_b_reg_kernelrbf.py:7) (13 samples, 6.53%)</title><rect x="4.0201%" y="148" width="6.5327%" height="15" fill="rgb(233,42,35)"/><text x="4.2701%" y="158.50">&lt;module&gt; ..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 6.53%)</title><rect x="4.0201%" y="164" width="6.5327%" height="15" fill="rgb(231,13,6)"/><text x="4.2701%" y="174.50">_find_and..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 6.53%)</title><rect x="4.0201%" y="180" width="6.5327%" height="15" fill="rgb(207,181,40)"/><text x="4.2701%" y="190.50">_find_and..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 6.53%)</title><rect x="4.0201%" y="196" width="6.5327%" height="15" fill="rgb(254,173,49)"/><text x="4.2701%" y="206.50">_load_unl..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (13 samples, 6.53%)</title><rect x="4.0201%" y="212" width="6.5327%" height="15" fill="rgb(221,1,38)"/><text x="4.2701%" y="222.50">exec_modu..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (13 samples, 6.53%)</title><rect x="4.0201%" y="228" width="6.5327%" height="15" fill="rgb(206,124,46)"/><text x="4.2701%" y="238.50">_call_wit..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (11 samples, 5.53%)</title><rect x="5.0251%" y="244" width="5.5276%" height="15" fill="rgb(249,21,11)"/><text x="5.2751%" y="254.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 5.53%)</title><rect x="5.0251%" y="260" width="5.5276%" height="15" fill="rgb(222,201,40)"/><text x="5.2751%" y="270.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 5.53%)</title><rect x="5.0251%" y="276" width="5.5276%" height="15" fill="rgb(235,61,29)"/><text x="5.2751%" y="286.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 5.53%)</title><rect x="5.0251%" y="292" width="5.5276%" height="15" fill="rgb(219,207,3)"/><text x="5.2751%" y="302.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 5.53%)</title><rect x="5.0251%" y="308" width="5.5276%" height="15" fill="rgb(222,56,46)"/><text x="5.2751%" y="318.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 5.53%)</title><rect x="5.0251%" y="324" width="5.5276%" height="15" fill="rgb(239,76,54)"/><text x="5.2751%" y="334.50">_call_w..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:27) (11 samples, 5.53%)</title><rect x="5.0251%" y="340" width="5.5276%" height="15" fill="rgb(231,124,27)"/><text x="5.2751%" y="350.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 5.53%)</title><rect x="5.0251%" y="356" width="5.5276%" height="15" fill="rgb(249,195,6)"/><text x="5.2751%" y="366.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 5.53%)</title><rect x="5.0251%" y="372" width="5.5276%" height="15" fill="rgb(237,174,47)"/><text x="5.2751%" y="382.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 5.53%)</title><rect x="5.0251%" y="388" width="5.5276%" height="15" fill="rgb(206,201,31)"/><text x="5.2751%" y="398.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 5.53%)</title><rect x="5.0251%" y="404" width="5.5276%" height="15" fill="rgb(231,57,52)"/><text x="5.2751%" y="414.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 5.53%)</title><rect x="5.0251%" y="420" width="5.5276%" height="15" fill="rgb(248,177,22)"/><text x="5.2751%" y="430.50">_call_w..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (6 samples, 3.02%)</title><rect x="7.5377%" y="436" width="3.0151%" height="15" fill="rgb(215,211,37)"/><text x="7.7877%" y="446.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.02%)</title><rect x="7.5377%" y="452" width="3.0151%" height="15" fill="rgb(241,128,51)"/><text x="7.7877%" y="462.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 3.02%)</title><rect x="7.5377%" y="468" width="3.0151%" height="15" fill="rgb(227,165,31)"/><text x="7.7877%" y="478.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.02%)</title><rect x="7.5377%" y="484" width="3.0151%" height="15" fill="rgb(228,167,24)"/><text x="7.7877%" y="494.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.02%)</title><rect x="7.5377%" y="500" width="3.0151%" height="15" fill="rgb(228,143,12)"/><text x="7.7877%" y="510.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 3.02%)</title><rect x="7.5377%" y="516" width="3.0151%" height="15" fill="rgb(249,149,8)"/><text x="7.7877%" y="526.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 3.02%)</title><rect x="7.5377%" y="532" width="3.0151%" height="15" fill="rgb(243,35,44)"/><text x="7.7877%" y="542.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 3.02%)</title><rect x="7.5377%" y="548" width="3.0151%" height="15" fill="rgb(246,89,9)"/><text x="7.7877%" y="558.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.02%)</title><rect x="7.5377%" y="564" width="3.0151%" height="15" fill="rgb(233,213,13)"/><text x="7.7877%" y="574.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (6 samples, 3.02%)</title><rect x="7.5377%" y="580" width="3.0151%" height="15" fill="rgb(233,141,41)"/><text x="7.7877%" y="590.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.02%)</title><rect x="7.5377%" y="596" width="3.0151%" height="15" fill="rgb(239,167,4)"/><text x="7.7877%" y="606.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 3.02%)</title><rect x="7.5377%" y="612" width="3.0151%" height="15" fill="rgb(209,217,16)"/><text x="7.7877%" y="622.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 3.02%)</title><rect x="7.5377%" y="628" width="3.0151%" height="15" fill="rgb(219,88,35)"/><text x="7.7877%" y="638.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 3.02%)</title><rect x="7.5377%" y="644" width="3.0151%" height="15" fill="rgb(220,193,23)"/><text x="7.7877%" y="654.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.02%)</title><rect x="7.5377%" y="660" width="3.0151%" height="15" fill="rgb(230,90,52)"/><text x="7.7877%" y="670.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (6 samples, 3.02%)</title><rect x="7.5377%" y="676" width="3.0151%" height="15" fill="rgb(252,106,19)"/><text x="7.7877%" y="686.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.02%)</title><rect x="7.5377%" y="692" width="3.0151%" height="15" fill="rgb(206,74,20)"/><text x="7.7877%" y="702.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 3.02%)</title><rect x="7.5377%" y="708" width="3.0151%" height="15" fill="rgb(230,138,44)"/><text x="7.7877%" y="718.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 3.02%)</title><rect x="7.5377%" y="724" width="3.0151%" height="15" fill="rgb(235,182,43)"/><text x="7.7877%" y="734.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 3.02%)</title><rect x="7.5377%" y="740" width="3.0151%" height="15" fill="rgb(242,16,51)"/><text x="7.7877%" y="750.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.02%)</title><rect x="7.5377%" y="756" width="3.0151%" height="15" fill="rgb(248,9,4)"/><text x="7.7877%" y="766.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (6 samples, 3.02%)</title><rect x="7.5377%" y="772" width="3.0151%" height="15" fill="rgb(210,31,22)"/><text x="7.7877%" y="782.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.02%)</title><rect x="7.5377%" y="788" width="3.0151%" height="15" fill="rgb(239,54,39)"/><text x="7.7877%" y="798.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 3.02%)</title><rect x="7.5377%" y="804" width="3.0151%" height="15" fill="rgb(230,99,41)"/><text x="7.7877%" y="814.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 3.02%)</title><rect x="7.5377%" y="820" width="3.0151%" height="15" fill="rgb(253,106,12)"/><text x="7.7877%" y="830.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 3.02%)</title><rect x="7.5377%" y="836" width="3.0151%" height="15" fill="rgb(213,46,41)"/><text x="7.7877%" y="846.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.02%)</title><rect x="7.5377%" y="852" width="3.0151%" height="15" fill="rgb(215,133,35)"/><text x="7.7877%" y="862.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (6 samples, 3.02%)</title><rect x="7.5377%" y="868" width="3.0151%" height="15" fill="rgb(213,28,5)"/><text x="7.7877%" y="878.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.02%)</title><rect x="7.5377%" y="884" width="3.0151%" height="15" fill="rgb(215,77,49)"/><text x="7.7877%" y="894.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 3.02%)</title><rect x="7.5377%" y="900" width="3.0151%" height="15" fill="rgb(248,100,22)"/><text x="7.7877%" y="910.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.02%)</title><rect x="7.5377%" y="916" width="3.0151%" height="15" fill="rgb(208,67,9)"/><text x="7.7877%" y="926.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.02%)</title><rect x="7.5377%" y="932" width="3.0151%" height="15" fill="rgb(219,133,21)"/><text x="7.7877%" y="942.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 3.02%)</title><rect x="7.5377%" y="948" width="3.0151%" height="15" fill="rgb(246,46,29)"/><text x="7.7877%" y="958.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 3.02%)</title><rect x="7.5377%" y="964" width="3.0151%" height="15" fill="rgb(246,185,52)"/><text x="7.7877%" y="974.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 3.02%)</title><rect x="7.5377%" y="980" width="3.0151%" height="15" fill="rgb(252,136,11)"/><text x="7.7877%" y="990.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.02%)</title><rect x="7.5377%" y="996" width="3.0151%" height="15" fill="rgb(219,138,53)"/><text x="7.7877%" y="1006.50">_ca..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (6 samples, 3.02%)</title><rect x="7.5377%" y="1012" width="3.0151%" height="15" fill="rgb(211,51,23)"/><text x="7.7877%" y="1022.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.02%)</title><rect x="7.5377%" y="1028" width="3.0151%" height="15" fill="rgb(247,221,28)"/><text x="7.7877%" y="1038.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 3.02%)</title><rect x="7.5377%" y="1044" width="3.0151%" height="15" fill="rgb(251,222,45)"/><text x="7.7877%" y="1054.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 3.02%)</title><rect x="7.5377%" y="1060" width="3.0151%" height="15" fill="rgb(217,162,53)"/><text x="7.7877%" y="1070.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.51%)</title><rect x="8.0402%" y="1076" width="2.5126%" height="15" fill="rgb(229,93,14)"/><text x="8.2902%" y="1086.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.51%)</title><rect x="8.0402%" y="1092" width="2.5126%" height="15" fill="rgb(209,67,49)"/><text x="8.2902%" y="1102.50">_c..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (4 samples, 2.01%)</title><rect x="8.5427%" y="1108" width="2.0101%" height="15" fill="rgb(213,87,29)"/><text x="8.7927%" y="1118.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 2.01%)</title><rect x="8.5427%" y="1124" width="2.0101%" height="15" fill="rgb(205,151,52)"/><text x="8.7927%" y="1134.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.01%)</title><rect x="8.5427%" y="1140" width="2.0101%" height="15" fill="rgb(253,215,39)"/><text x="8.7927%" y="1150.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.01%)</title><rect x="8.5427%" y="1156" width="2.0101%" height="15" fill="rgb(221,220,41)"/><text x="8.7927%" y="1166.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.01%)</title><rect x="8.5427%" y="1172" width="2.0101%" height="15" fill="rgb(218,133,21)"/><text x="8.7927%" y="1182.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.01%)</title><rect x="8.5427%" y="1188" width="2.0101%" height="15" fill="rgb(221,193,43)"/><text x="8.7927%" y="1198.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.01%)</title><rect x="8.5427%" y="1204" width="2.0101%" height="15" fill="rgb(240,128,52)"/><text x="8.7927%" y="1214.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.01%)</title><rect x="8.5427%" y="1220" width="2.0101%" height="15" fill="rgb(253,114,12)"/><text x="8.7927%" y="1230.50">_..</text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 1.01%)</title><rect x="11.0553%" y="116" width="1.0050%" height="15" fill="rgb(215,223,47)"/><text x="11.3053%" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 1.01%)</title><rect x="11.0553%" y="132" width="1.0050%" height="15" fill="rgb(248,225,23)"/><text x="11.3053%" y="142.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:955) (2 samples, 1.01%)</title><rect x="14.0704%" y="180" width="1.0050%" height="15" fill="rgb(250,108,0)"/><text x="14.3204%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:963) (2 samples, 1.01%)</title><rect x="17.5879%" y="196" width="1.0050%" height="15" fill="rgb(228,208,7)"/><text x="17.8379%" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 2.01%)</title><rect x="19.5980%" y="212" width="2.0101%" height="15" fill="rgb(244,45,10)"/><text x="19.8480%" y="222.50">u..</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (18 samples, 9.05%)</title><rect x="13.5678%" y="164" width="9.0452%" height="15" fill="rgb(207,125,25)"/><text x="13.8178%" y="174.50">_validate_for..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:963) (15 samples, 7.54%)</title><rect x="15.0754%" y="180" width="7.5377%" height="15" fill="rgb(210,195,18)"/><text x="15.3254%" y="190.50">check_is_f..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:964) (8 samples, 4.02%)</title><rect x="18.5930%" y="196" width="4.0201%" height="15" fill="rgb(249,80,12)"/><text x="18.8430%" y="206.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 1.01%)</title><rect x="21.6080%" y="212" width="1.0050%" height="15" fill="rgb(221,65,9)"/><text x="21.8580%" y="222.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 1.01%)</title><rect x="24.1206%" y="196" width="1.0050%" height="15" fill="rgb(235,49,36)"/><text x="24.3706%" y="206.50"></text></g><g><title>__enter__ (warnings.py:481) (2 samples, 1.01%)</title><rect x="25.6281%" y="196" width="1.0050%" height="15" fill="rgb(225,32,20)"/><text x="25.8781%" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (10 samples, 5.03%)</title><rect x="22.6131%" y="180" width="5.0251%" height="15" fill="rgb(215,141,46)"/><text x="22.8631%" y="190.50">check_..</text></g><g><title>check_array (sklearn/utils/validation.py:520) (4 samples, 2.01%)</title><rect x="27.6382%" y="180" width="2.0101%" height="15" fill="rgb(250,160,47)"/><text x="27.8882%" y="190.50">c..</text></g><g><title>simplefilter (warnings.py:179) (4 samples, 2.01%)</title><rect x="27.6382%" y="196" width="2.0101%" height="15" fill="rgb(216,222,40)"/><text x="27.8882%" y="206.50">s..</text></g><g><title>check_array (sklearn/utils/validation.py:521) (2 samples, 1.01%)</title><rect x="29.6482%" y="180" width="1.0050%" height="15" fill="rgb(234,217,39)"/><text x="29.8982%" y="190.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (3 samples, 1.51%)</title><rect x="31.1558%" y="212" width="1.5075%" height="15" fill="rgb(207,178,40)"/><text x="31.4058%" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:531) (5 samples, 2.51%)</title><rect x="30.6533%" y="180" width="2.5126%" height="15" fill="rgb(221,136,13)"/><text x="30.9033%" y="190.50">ch..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (4 samples, 2.01%)</title><rect x="31.1558%" y="196" width="2.0101%" height="15" fill="rgb(249,199,10)"/><text x="31.4058%" y="206.50">a..</text></g><g><title>check_array (sklearn/utils/validation.py:540) (2 samples, 1.01%)</title><rect x="33.6683%" y="180" width="1.0050%" height="15" fill="rgb(249,222,13)"/><text x="33.9183%" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 1.01%)</title><rect x="37.1859%" y="212" width="1.0050%" height="15" fill="rgb(244,185,38)"/><text x="37.4359%" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:578) (9 samples, 4.52%)</title><rect x="35.1759%" y="180" width="4.5226%" height="15" fill="rgb(236,202,9)"/><text x="35.4259%" y="190.50">check..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (9 samples, 4.52%)</title><rect x="35.1759%" y="196" width="4.5226%" height="15" fill="rgb(250,229,37)"/><text x="35.4259%" y="206.50">_asse..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 1.01%)</title><rect x="38.6935%" y="212" width="1.0050%" height="15" fill="rgb(206,174,23)"/><text x="38.9435%" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 1.51%)</title><rect x="39.6985%" y="196" width="1.5075%" height="15" fill="rgb(211,33,43)"/><text x="39.9485%" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:581) (14 samples, 7.04%)</title><rect x="39.6985%" y="180" width="7.0352%" height="15" fill="rgb(245,58,50)"/><text x="39.9485%" y="190.50">check_arr..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (8 samples, 4.02%)</title><rect x="42.7136%" y="196" width="4.0201%" height="15" fill="rgb(244,68,36)"/><text x="42.9636%" y="206.50">_num..</text></g><g><title>__instancecheck__ (abc.py:139) (6 samples, 3.02%)</title><rect x="43.7186%" y="212" width="3.0151%" height="15" fill="rgb(232,229,15)"/><text x="43.9686%" y="222.50">__i..</text></g><g><title>__subclasscheck__ (abc.py:143) (4 samples, 2.01%)</title><rect x="44.7236%" y="228" width="2.0101%" height="15" fill="rgb(254,30,23)"/><text x="44.9736%" y="238.50">_..</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (49 samples, 24.62%)</title><rect x="22.6131%" y="164" width="24.6231%" height="15" fill="rgb(235,160,14)"/><text x="22.8631%" y="174.50">_validate_for_predict (sklearn/svm/_bas..</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:453) (2 samples, 1.01%)</title><rect x="47.2362%" y="164" width="1.0050%" height="15" fill="rgb(212,155,44)"/><text x="47.4862%" y="174.50"></text></g><g><title>predict (sklearn/svm/_base.py:315) (74 samples, 37.19%)</title><rect x="12.5628%" y="148" width="37.1859%" height="15" fill="rgb(226,2,50)"/><text x="12.8128%" y="158.50">predict (sklearn/svm/_base.py:315)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:464) (2 samples, 1.01%)</title><rect x="48.7437%" y="164" width="1.0050%" height="15" fill="rgb(234,177,6)"/><text x="48.9937%" y="174.50"></text></g><g><title>_dense_predict (sklearn/svm/_base.py:320) (2 samples, 1.01%)</title><rect x="49.7487%" y="164" width="1.0050%" height="15" fill="rgb(217,24,9)"/><text x="49.9987%" y="174.50"></text></g><g><title>_dense_predict (sklearn/svm/_base.py:321) (2 samples, 1.01%)</title><rect x="50.7538%" y="164" width="1.0050%" height="15" fill="rgb(220,13,46)"/><text x="51.0038%" y="174.50"></text></g><g><title>0x7f410f62dd86 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.01%)</title><rect x="53.2663%" y="196" width="1.0050%" height="15" fill="rgb(239,221,27)"/><text x="53.5163%" y="206.50"></text></g><g><title>0x7f410f62ddcc (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.01%)</title><rect x="54.2714%" y="196" width="1.0050%" height="15" fill="rgb(222,198,25)"/><text x="54.5214%" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c:2754) (5 samples, 2.51%)</title><rect x="56.7839%" y="212" width="2.5126%" height="15" fill="rgb(211,99,13)"/><text x="57.0339%" y="222.50">ar..</text></g><g><title>0x7f410f62e17f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (6 samples, 3.02%)</title><rect x="56.7839%" y="196" width="3.0151%" height="15" fill="rgb(232,111,31)"/><text x="57.0339%" y="206.50">0x7..</text></g><g><title>0x7f410f62e4c8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.01%)</title><rect x="59.7990%" y="196" width="1.0050%" height="15" fill="rgb(245,82,37)"/><text x="60.0490%" y="206.50"></text></g><g><title>0x7f410f613e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.01%)</title><rect x="59.7990%" y="212" width="1.0050%" height="15" fill="rgb(227,149,46)"/><text x="60.0490%" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 1.01%)</title><rect x="59.7990%" y="228" width="1.0050%" height="15" fill="rgb(218,36,50)"/><text x="60.0490%" y="238.50"></text></g><g><title>exp (libm-2.29.so) (3 samples, 1.51%)</title><rect x="60.8040%" y="260" width="1.5075%" height="15" fill="rgb(226,80,48)"/><text x="61.0540%" y="270.50"></text></g><g><title>0x7f410f62e4f1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.51%)</title><rect x="60.8040%" y="196" width="2.5126%" height="15" fill="rgb(238,224,15)"/><text x="61.0540%" y="206.50">0x..</text></g><g><title>copy_predict (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.51%)</title><rect x="60.8040%" y="212" width="2.5126%" height="15" fill="rgb(241,136,10)"/><text x="61.0540%" y="222.50">co..</text></g><g><title>svm_predict (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.51%)</title><rect x="60.8040%" y="228" width="2.5126%" height="15" fill="rgb(208,32,45)"/><text x="61.0540%" y="238.50">sv..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.51%)</title><rect x="60.8040%" y="244" width="2.5126%" height="15" fill="rgb(207,135,9)"/><text x="61.0540%" y="254.50">sv..</text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.01%)</title><rect x="62.3116%" y="260" width="1.0050%" height="15" fill="rgb(206,86,44)"/><text x="62.5616%" y="270.50"></text></g><g><title>0x7f410f62e72e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.01%)</title><rect x="64.3216%" y="196" width="1.0050%" height="15" fill="rgb(245,177,15)"/><text x="64.5716%" y="206.50"></text></g><g><title>array_empty (multiarraymodule.c:1814) (2 samples, 1.01%)</title><rect x="67.3367%" y="244" width="1.0050%" height="15" fill="rgb(206,64,50)"/><text x="67.5867%" y="254.50"></text></g><g><title>0x7f410f60d9a1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 2.01%)</title><rect x="66.8342%" y="212" width="2.0101%" height="15" fill="rgb(234,36,40)"/><text x="67.0842%" y="222.50">0..</text></g><g><title>0x7f410f611fdf (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 2.01%)</title><rect x="66.8342%" y="228" width="2.0101%" height="15" fill="rgb(213,64,8)"/><text x="67.0842%" y="238.50">0..</text></g><g><title>&lt;module&gt; (bench_SVR_rbf_b_reg_kernelrbf_1_4_12_float_.py:54) (116 samples, 58.29%)</title><rect x="11.0553%" y="52" width="58.2915%" height="15" fill="rgb(210,75,36)"/><text x="11.3053%" y="62.50">&lt;module&gt; (bench_SVR_rbf_b_reg_kernelrbf_1_4_12_float_.py:54)</text></g><g><title>profile_skl (bench_SVR_rbf_b_reg_kernelrbf_1_4_12_float_.py:53) (116 samples, 58.29%)</title><rect x="11.0553%" y="68" width="58.2915%" height="15" fill="rgb(229,88,21)"/><text x="11.3053%" y="78.50">profile_skl (bench_SVR_rbf_b_reg_kernelrbf_1_4_12_float_.py:53)</text></g><g><title>setup_profile (bench_SVR_rbf_b_reg_kernelrbf_1_4_12_float_.py:37) (116 samples, 58.29%)</title><rect x="11.0553%" y="84" width="58.2915%" height="15" fill="rgb(252,204,47)"/><text x="11.3053%" y="94.50">setup_profile (bench_SVR_rbf_b_reg_kernelrbf_1_4_12_float_.py:37)</text></g><g><title>profile (bench_SVR_rbf_b_reg_kernelrbf_1_4_12_float_.py:31) (116 samples, 58.29%)</title><rect x="11.0553%" y="100" width="58.2915%" height="15" fill="rgb(208,77,27)"/><text x="11.3053%" y="110.50">profile (bench_SVR_rbf_b_reg_kernelrbf_1_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:182) (114 samples, 57.29%)</title><rect x="12.0603%" y="116" width="57.2864%" height="15" fill="rgb(221,76,26)"/><text x="12.3103%" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:182)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:375) (113 samples, 56.78%)</title><rect x="12.5628%" y="132" width="56.7839%" height="15" fill="rgb(225,139,18)"/><text x="12.8128%" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:375)</text></g><g><title>predict (sklearn/svm/_base.py:317) (39 samples, 19.60%)</title><rect x="49.7487%" y="148" width="19.5980%" height="15" fill="rgb(230,137,11)"/><text x="49.9987%" y="158.50">predict (sklearn/svm/_base.py:3..</text></g><g><title>_dense_predict (sklearn/svm/_base.py:339) (34 samples, 17.09%)</title><rect x="52.2613%" y="164" width="17.0854%" height="15" fill="rgb(212,28,1)"/><text x="52.5113%" y="174.50">_dense_predict (sklearn/sv..</text></g><g><title>0x7f410f6301dd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (32 samples, 16.08%)</title><rect x="53.2663%" y="180" width="16.0804%" height="15" fill="rgb(248,164,17)"/><text x="53.5163%" y="190.50">0x7f410f6301dd (sklearn/s..</text></g><g><title>0x7f410f62ecec (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (6 samples, 3.02%)</title><rect x="66.3317%" y="196" width="3.0151%" height="15" fill="rgb(222,171,42)"/><text x="66.5817%" y="206.50">0x7..</text></g><g><title>setup_profile (bench_SVR_rbf_b_reg_kernelrbf_1_4_12_float_.py:36) (2 samples, 1.01%)</title><rect x="69.3467%" y="84" width="1.0050%" height="15" fill="rgb(243,84,45)"/><text x="69.5967%" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:174) (2 samples, 1.01%)</title><rect x="69.3467%" y="100" width="1.0050%" height="15" fill="rgb(252,49,23)"/><text x="69.5967%" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:378) (2 samples, 1.01%)</title><rect x="69.3467%" y="116" width="1.0050%" height="15" fill="rgb(215,19,7)"/><text x="69.5967%" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:113) (2 samples, 1.01%)</title><rect x="69.3467%" y="132" width="1.0050%" height="15" fill="rgb(238,81,41)"/><text x="69.5967%" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:77) (2 samples, 1.01%)</title><rect x="69.3467%" y="148" width="1.0050%" height="15" fill="rgb(210,199,37)"/><text x="69.5967%" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:130) (2 samples, 1.01%)</title><rect x="69.3467%" y="164" width="1.0050%" height="15" fill="rgb(244,192,49)"/><text x="69.5967%" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:102) (2 samples, 1.01%)</title><rect x="69.3467%" y="180" width="1.0050%" height="15" fill="rgb(226,211,11)"/><text x="69.5967%" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (2 samples, 1.01%)</title><rect x="69.3467%" y="196" width="1.0050%" height="15" fill="rgb(236,162,54)"/><text x="69.5967%" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.01%)</title><rect x="69.3467%" y="212" width="1.0050%" height="15" fill="rgb(220,229,9)"/><text x="69.5967%" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.01%)</title><rect x="69.3467%" y="228" width="1.0050%" height="15" fill="rgb(250,87,22)"/><text x="69.5967%" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.01%)</title><rect x="69.3467%" y="244" width="1.0050%" height="15" fill="rgb(239,43,17)"/><text x="69.5967%" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.01%)</title><rect x="69.3467%" y="260" width="1.0050%" height="15" fill="rgb(231,177,25)"/><text x="69.5967%" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.01%)</title><rect x="69.3467%" y="276" width="1.0050%" height="15" fill="rgb(219,179,1)"/><text x="69.5967%" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (2 samples, 1.01%)</title><rect x="69.3467%" y="292" width="1.0050%" height="15" fill="rgb(238,219,53)"/><text x="69.5967%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.01%)</title><rect x="69.3467%" y="308" width="1.0050%" height="15" fill="rgb(232,167,36)"/><text x="69.5967%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.01%)</title><rect x="69.3467%" y="324" width="1.0050%" height="15" fill="rgb(244,19,51)"/><text x="69.5967%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.01%)</title><rect x="69.3467%" y="340" width="1.0050%" height="15" fill="rgb(224,6,22)"/><text x="69.5967%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.01%)</title><rect x="69.3467%" y="356" width="1.0050%" height="15" fill="rgb(224,145,5)"/><text x="69.5967%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.01%)</title><rect x="69.3467%" y="372" width="1.0050%" height="15" fill="rgb(234,130,49)"/><text x="69.5967%" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (2 samples, 1.01%)</title><rect x="69.3467%" y="388" width="1.0050%" height="15" fill="rgb(254,6,2)"/><text x="69.5967%" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (2 samples, 1.01%)</title><rect x="69.3467%" y="404" width="1.0050%" height="15" fill="rgb(208,96,46)"/><text x="69.5967%" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 1.01%)</title><rect x="69.3467%" y="420" width="1.0050%" height="15" fill="rgb(239,3,39)"/><text x="69.5967%" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 1.01%)</title><rect x="69.3467%" y="436" width="1.0050%" height="15" fill="rgb(233,210,1)"/><text x="69.5967%" y="446.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 1.01%)</title><rect x="69.3467%" y="452" width="1.0050%" height="15" fill="rgb(244,137,37)"/><text x="69.5967%" y="462.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (6 samples, 3.02%)</title><rect x="75.3769%" y="212" width="3.0151%" height="15" fill="rgb(240,136,2)"/><text x="75.6269%" y="222.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (6 samples, 3.02%)</title><rect x="75.3769%" y="228" width="3.0151%" height="15" fill="rgb(239,18,37)"/><text x="75.6269%" y="238.50">voi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (5 samples, 2.51%)</title><rect x="75.8794%" y="244" width="2.5126%" height="15" fill="rgb(218,185,22)"/><text x="76.1294%" y="254.50">vo..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (5 samples, 2.51%)</title><rect x="75.8794%" y="260" width="2.5126%" height="15" fill="rgb(225,218,4)"/><text x="76.1294%" y="270.50">py..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (5 samples, 2.51%)</title><rect x="75.8794%" y="276" width="2.5126%" height="15" fill="rgb(230,182,32)"/><text x="76.1294%" y="286.50">py..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (5 samples, 2.51%)</title><rect x="75.8794%" y="292" width="2.5126%" height="15" fill="rgb(242,56,43)"/><text x="76.1294%" y="302.50">py..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (5 samples, 2.51%)</title><rect x="75.8794%" y="308" width="2.5126%" height="15" fill="rgb(233,99,24)"/><text x="76.1294%" y="318.50">py..</text></g><g><title>pybind11::array::~array (numpy.h:538) (5 samples, 2.51%)</title><rect x="75.8794%" y="324" width="2.5126%" height="15" fill="rgb(234,209,42)"/><text x="76.1294%" y="334.50">py..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (5 samples, 2.51%)</title><rect x="75.8794%" y="340" width="2.5126%" height="15" fill="rgb(227,7,12)"/><text x="76.1294%" y="350.50">py..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (5 samples, 2.51%)</title><rect x="75.8794%" y="356" width="2.5126%" height="15" fill="rgb(245,203,43)"/><text x="76.1294%" y="366.50">py..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (5 samples, 2.51%)</title><rect x="75.8794%" y="372" width="2.5126%" height="15" fill="rgb(238,205,33)"/><text x="76.1294%" y="382.50">py..</text></g><g><title>RuntimeSVMRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_regressor_.cpp:181) (5 samples, 2.51%)</title><rect x="75.8794%" y="388" width="2.5126%" height="15" fill="rgb(231,56,7)"/><text x="76.1294%" y="398.50">Ru..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (5 samples, 2.51%)</title><rect x="75.8794%" y="404" width="2.5126%" height="15" fill="rgb(244,186,29)"/><text x="76.1294%" y="414.50">py..</text></g><g><title>RuntimeSVMRegressor&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_regressor_.cpp:265) (5 samples, 2.51%)</title><rect x="75.8794%" y="420" width="2.5126%" height="15" fill="rgb(234,111,31)"/><text x="76.1294%" y="430.50">Ru..</text></g><g><title>RuntimeSVMRegressor&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_regressor_.cpp:217) (3 samples, 1.51%)</title><rect x="76.8844%" y="436" width="1.5075%" height="15" fill="rgb(241,149,10)"/><text x="77.1344%" y="446.50"></text></g><g><title>expf32x (libm-2.29.so) (2 samples, 1.01%)</title><rect x="77.3869%" y="452" width="1.0050%" height="15" fill="rgb(249,206,44)"/><text x="77.6369%" y="462.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_regressor.py:59) (9 samples, 4.52%)</title><rect x="74.3719%" y="196" width="4.5226%" height="15" fill="rgb(251,153,30)"/><text x="74.6219%" y="206.50">_run ..</text></g><g><title>&lt;module&gt; (bench_SVR_rbf_b_reg_kernelrbf_1_4_12_float_.py:61) (22 samples, 11.06%)</title><rect x="69.3467%" y="52" width="11.0553%" height="15" fill="rgb(239,152,38)"/><text x="69.5967%" y="62.50">&lt;module&gt; (bench_..</text></g><g><title>profile_pyrtc (bench_SVR_rbf_b_reg_kernelrbf_1_4_12_float_.py:60) (22 samples, 11.06%)</title><rect x="69.3467%" y="68" width="11.0553%" height="15" fill="rgb(249,139,47)"/><text x="69.5967%" y="78.50">profile_pyrtc (b..</text></g><g><title>setup_profile (bench_SVR_rbf_b_reg_kernelrbf_1_4_12_float_.py:37) (20 samples, 10.05%)</title><rect x="70.3518%" y="84" width="10.0503%" height="15" fill="rgb(244,64,35)"/><text x="70.6018%" y="94.50">setup_profile (..</text></g><g><title>profile (bench_SVR_rbf_b_reg_kernelrbf_1_4_12_float_.py:31) (20 samples, 10.05%)</title><rect x="70.3518%" y="100" width="10.0503%" height="15" fill="rgb(216,46,15)"/><text x="70.6018%" y="110.50">profile (bench_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:182) (19 samples, 9.55%)</title><rect x="70.8543%" y="116" width="9.5477%" height="15" fill="rgb(250,74,19)"/><text x="71.1043%" y="126.50">time_predict (..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:379) (16 samples, 8.04%)</title><rect x="72.3618%" y="132" width="8.0402%" height="15" fill="rgb(249,42,33)"/><text x="72.6118%" y="142.50">&lt;lambda&gt; (m..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:442) (14 samples, 7.04%)</title><rect x="73.3668%" y="148" width="7.0352%" height="15" fill="rgb(242,149,17)"/><text x="73.6168%" y="158.50">run (mlpr..</text></g><g><title>_run_sequence_runtime_compiled (mlprodict/onnxrt/onnx_inference.py:160) (14 samples, 7.04%)</title><rect x="73.3668%" y="164" width="7.0352%" height="15" fill="rgb(244,29,21)"/><text x="73.6168%" y="174.50">_run_sequ..</text></g><g><title>compiled_run (&lt;string&gt;:4) (12 samples, 6.03%)</title><rect x="74.3719%" y="180" width="6.0302%" height="15" fill="rgb(220,130,37)"/><text x="74.6219%" y="190.50">compiled..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_regressor.py:60) (3 samples, 1.51%)</title><rect x="78.8945%" y="196" width="1.5075%" height="15" fill="rgb(211,67,2)"/><text x="79.1445%" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:140) (4 samples, 2.01%)</title><rect x="83.9196%" y="196" width="2.0101%" height="15" fill="rgb(235,68,52)"/><text x="84.1696%" y="206.50">r..</text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:140) (2 samples, 1.01%)</title><rect x="84.9246%" y="212" width="1.0050%" height="15" fill="rgb(246,142,3)"/><text x="85.1746%" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.01%)</title><rect x="84.9246%" y="228" width="1.0050%" height="15" fill="rgb(241,25,7)"/><text x="85.1746%" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.01%)</title><rect x="84.9246%" y="244" width="1.0050%" height="15" fill="rgb(242,119,39)"/><text x="85.1746%" y="254.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 3.02%)</title><rect x="89.4472%" y="292" width="3.0151%" height="15" fill="rgb(241,98,45)"/><text x="89.6972%" y="302.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 3.02%)</title><rect x="89.4472%" y="308" width="3.0151%" height="15" fill="rgb(254,28,30)"/><text x="89.6972%" y="318.50">onn..</text></g><g><title>onnxruntime::ml::SVMRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 2.01%)</title><rect x="90.4523%" y="324" width="2.0101%" height="15" fill="rgb(241,142,54)"/><text x="90.7023%" y="334.50">o..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.51%)</title><rect x="90.9548%" y="340" width="1.5075%" height="15" fill="rgb(222,85,15)"/><text x="91.2048%" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.51%)</title><rect x="90.9548%" y="356" width="1.5075%" height="15" fill="rgb(210,85,47)"/><text x="91.2048%" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.51%)</title><rect x="90.9548%" y="372" width="1.5075%" height="15" fill="rgb(224,206,25)"/><text x="91.2048%" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.51%)</title><rect x="90.9548%" y="388" width="1.5075%" height="15" fill="rgb(243,201,19)"/><text x="91.2048%" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.51%)</title><rect x="90.9548%" y="404" width="1.5075%" height="15" fill="rgb(236,59,4)"/><text x="91.2048%" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.51%)</title><rect x="90.9548%" y="420" width="1.5075%" height="15" fill="rgb(254,179,45)"/><text x="91.2048%" y="430.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.51%)</title><rect x="90.9548%" y="436" width="1.5075%" height="15" fill="rgb(226,14,10)"/><text x="91.2048%" y="446.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.51%)</title><rect x="90.9548%" y="452" width="1.5075%" height="15" fill="rgb(244,27,41)"/><text x="91.2048%" y="462.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.01%)</title><rect x="91.4573%" y="468" width="1.0050%" height="15" fill="rgb(235,35,32)"/><text x="91.7073%" y="478.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.52%)</title><rect x="89.4472%" y="276" width="3.5176%" height="15" fill="rgb(218,68,31)"/><text x="89.6972%" y="286.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 5.53%)</title><rect x="87.9397%" y="260" width="5.5276%" height="15" fill="rgb(207,120,37)"/><text x="88.1897%" y="270.50">onnxrun..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 6.53%)</title><rect x="87.9397%" y="244" width="6.5327%" height="15" fill="rgb(227,98,0)"/><text x="88.1897%" y="254.50">onnxrunti..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.01%)</title><rect x="94.4724%" y="244" width="1.0050%" height="15" fill="rgb(207,7,3)"/><text x="94.7224%" y="254.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:650) (29 samples, 14.57%)</title><rect x="82.9146%" y="164" width="14.5729%" height="15" fill="rgb(206,98,19)"/><text x="83.1646%" y="174.50">_run_whole_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (28 samples, 14.07%)</title><rect x="83.4171%" y="180" width="14.0704%" height="15" fill="rgb(217,5,26)"/><text x="83.6671%" y="190.50">run (mlprodict/onnxrt..</text></g><g><title>run (onnxruntime/capi/session.py:142) (23 samples, 11.56%)</title><rect x="85.9296%" y="196" width="11.5578%" height="15" fill="rgb(235,190,38)"/><text x="86.1796%" y="206.50">run (onnxruntime/..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 10.05%)</title><rect x="87.4372%" y="212" width="10.0503%" height="15" fill="rgb(247,86,24)"/><text x="87.6872%" y="222.50">pybind11::cpp_f..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 10.05%)</title><rect x="87.4372%" y="228" width="10.0503%" height="15" fill="rgb(205,101,16)"/><text x="87.6872%" y="238.50">void pybind11::..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 2.01%)</title><rect x="95.4774%" y="244" width="2.0101%" height="15" fill="rgb(246,168,33)"/><text x="95.7274%" y="254.50">p..</text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.1543] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.01%)</title><rect x="96.4824%" y="260" width="1.0050%" height="15" fill="rgb(231,114,1)"/><text x="96.7324%" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (libstdc++.so.6.0.28) (2 samples, 1.01%)</title><rect x="96.4824%" y="276" width="1.0050%" height="15" fill="rgb(207,184,53)"/><text x="96.7324%" y="286.50"></text></g><g><title>all (199 samples, 100%)</title><rect x="0.0000%" y="36" width="100.0000%" height="15" fill="rgb(224,95,51)"/><text x="0.2500%" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVR_rbf_b_reg_kernelrbf_1_4_12_float_.py:68) (39 samples, 19.60%)</title><rect x="80.4020%" y="52" width="19.5980%" height="15" fill="rgb(212,188,45)"/><text x="80.6520%" y="62.50">&lt;module&gt; (bench_SVR_rbf_b_reg_k..</text></g><g><title>profile_ort (bench_SVR_rbf_b_reg_kernelrbf_1_4_12_float_.py:67) (39 samples, 19.60%)</title><rect x="80.4020%" y="68" width="19.5980%" height="15" fill="rgb(223,154,38)"/><text x="80.6520%" y="78.50">profile_ort (bench_SVR_rbf_b_re..</text></g><g><title>setup_profile (bench_SVR_rbf_b_reg_kernelrbf_1_4_12_float_.py:37) (39 samples, 19.60%)</title><rect x="80.4020%" y="84" width="19.5980%" height="15" fill="rgb(251,22,52)"/><text x="80.6520%" y="94.50">setup_profile (bench_SVR_rbf_b_..</text></g><g><title>profile (bench_SVR_rbf_b_reg_kernelrbf_1_4_12_float_.py:31) (39 samples, 19.60%)</title><rect x="80.4020%" y="100" width="19.5980%" height="15" fill="rgb(229,209,22)"/><text x="80.6520%" y="110.50">profile (bench_SVR_rbf_b_reg_ke..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:182) (37 samples, 18.59%)</title><rect x="81.4070%" y="116" width="18.5930%" height="15" fill="rgb(234,138,34)"/><text x="81.6570%" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:379) (34 samples, 17.09%)</title><rect x="82.9146%" y="132" width="17.0854%" height="15" fill="rgb(212,95,11)"/><text x="83.1646%" y="142.50">&lt;lambda&gt; (mlprodict/asv_be..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:442) (34 samples, 17.09%)</title><rect x="82.9146%" y="148" width="17.0854%" height="15" fill="rgb(240,179,47)"/><text x="83.1646%" y="158.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:651) (5 samples, 2.51%)</title><rect x="97.4874%" y="164" width="2.5126%" height="15" fill="rgb(240,163,11)"/><text x="97.7374%" y="174.50">_r..</text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:651) (2 samples, 1.01%)</title><rect x="98.9950%" y="180" width="1.0050%" height="15" fill="rgb(236,37,12)"/><text x="99.2450%" y="190.50"></text></g></svg></svg>