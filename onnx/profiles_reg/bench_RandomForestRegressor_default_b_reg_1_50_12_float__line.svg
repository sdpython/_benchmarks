<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1734" onload="init(evt)" viewBox="0 0 1200 1734" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1734" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1717.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1717.00"> </text><g id="frames"><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.43%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(249,18,20)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.43%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(222,6,31)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(249,135,0)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(218,15,13)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(227,71,39)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(221,49,41)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(250,82,43)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(234,132,46)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:14) (1 samples, 0.43%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(214,227,6)"/><text x="13.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.43%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(218,80,40)"/><text x="13.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(238,139,16)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="10" y="548" width="5" height="15" fill="rgb(247,217,25)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="10" y="564" width="5" height="15" fill="rgb(246,155,28)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="10" y="580" width="5" height="15" fill="rgb(248,184,1)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="10" y="596" width="5" height="15" fill="rgb(253,75,36)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="10" y="612" width="5" height="15" fill="rgb(238,39,44)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:9) (1 samples, 0.43%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(248,103,19)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(215,139,6)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.43%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(219,3,37)"/><text x="13.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(219,10,24)"/><text x="13.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(254,38,25)"/><text x="13.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(222,153,1)"/><text x="13.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(217,99,48)"/><text x="13.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(230,108,46)"/><text x="13.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(221,226,18)"/><text x="13.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py:14) (1 samples, 0.43%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(219,111,5)"/><text x="13.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.43%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(213,80,23)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(238,48,45)"/><text x="13.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="10" y="820" width="5" height="15" fill="rgb(226,227,41)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(233,37,15)"/><text x="13.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(241,18,14)"/><text x="13.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(211,28,12)"/><text x="13.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(231,155,48)"/><text x="13.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py:26) (1 samples, 0.43%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(241,93,29)"/><text x="13.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(247,29,5)"/><text x="13.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="10" y="932" width="5" height="15" fill="rgb(241,14,10)"/><text x="13.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="10" y="948" width="5" height="15" fill="rgb(244,152,50)"/><text x="13.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="10" y="964" width="5" height="15" fill="rgb(227,15,22)"/><text x="13.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="10" y="980" width="5" height="15" fill="rgb(232,0,31)"/><text x="13.00" y="990.50"></text></g><g><title>&lt;module&gt; (pickle.py:181) (1 samples, 0.43%)</title><rect x="10" y="996" width="5" height="15" fill="rgb(247,88,14)"/><text x="13.00" y="1006.50"></text></g><g><title>&lt;listcomp&gt; (pickle.py:181) (1 samples, 0.43%)</title><rect x="10" y="1012" width="5" height="15" fill="rgb(242,81,53)"/><text x="13.00" y="1022.50"></text></g><g><title>match (re.py:173) (1 samples, 0.43%)</title><rect x="10" y="1028" width="5" height="15" fill="rgb(229,67,50)"/><text x="13.00" y="1038.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.43%)</title><rect x="10" y="1044" width="5" height="15" fill="rgb(222,105,7)"/><text x="13.00" y="1054.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.43%)</title><rect x="10" y="1060" width="5" height="15" fill="rgb(206,169,27)"/><text x="13.00" y="1070.50"></text></g><g><title>_code (sre_compile.py:604) (1 samples, 0.43%)</title><rect x="10" y="1076" width="5" height="15" fill="rgb(211,88,44)"/><text x="13.00" y="1086.50"></text></g><g><title>_compile_info (sre_compile.py:590) (1 samples, 0.43%)</title><rect x="10" y="1092" width="5" height="15" fill="rgb(243,205,21)"/><text x="13.00" y="1102.50"></text></g><g><title>_optimize_charset (sre_compile.py:312) (1 samples, 0.43%)</title><rect x="10" y="1108" width="5" height="15" fill="rgb(212,217,10)"/><text x="13.00" y="1118.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:1) (2 samples, 0.86%)</title><rect x="10" y="148" width="10" height="15" fill="rgb(239,83,22)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.86%)</title><rect x="10" y="164" width="10" height="15" fill="rgb(219,34,28)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.86%)</title><rect x="10" y="180" width="10" height="15" fill="rgb(220,212,46)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.86%)</title><rect x="10" y="196" width="10" height="15" fill="rgb(209,59,52)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.86%)</title><rect x="10" y="212" width="10" height="15" fill="rgb(209,222,53)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.86%)</title><rect x="10" y="228" width="10" height="15" fill="rgb(221,21,53)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (2 samples, 0.86%)</title><rect x="10" y="244" width="10" height="15" fill="rgb(230,56,32)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.86%)</title><rect x="10" y="260" width="10" height="15" fill="rgb(246,98,5)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.86%)</title><rect x="10" y="276" width="10" height="15" fill="rgb(230,76,31)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.86%)</title><rect x="10" y="292" width="10" height="15" fill="rgb(210,107,26)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.86%)</title><rect x="10" y="308" width="10" height="15" fill="rgb(232,142,1)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.86%)</title><rect x="10" y="324" width="10" height="15" fill="rgb(221,199,22)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.86%)</title><rect x="10" y="340" width="10" height="15" fill="rgb(220,219,40)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.86%)</title><rect x="10" y="356" width="10" height="15" fill="rgb(248,104,34)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:78) (1 samples, 0.43%)</title><rect x="15" y="372" width="5" height="15" fill="rgb(209,86,19)"/><text x="18.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="15" y="388" width="5" height="15" fill="rgb(221,183,35)"/><text x="18.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="15" y="404" width="5" height="15" fill="rgb(221,33,5)"/><text x="18.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="15" y="420" width="5" height="15" fill="rgb(246,82,4)"/><text x="18.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="15" y="436" width="5" height="15" fill="rgb(224,131,34)"/><text x="18.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="15" y="452" width="5" height="15" fill="rgb(228,143,23)"/><text x="18.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/core/memmap.py:25) (1 samples, 0.43%)</title><rect x="15" y="468" width="5" height="15" fill="rgb(210,131,11)"/><text x="18.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:11) (1 samples, 0.43%)</title><rect x="20" y="580" width="5" height="15" fill="rgb(225,70,42)"/><text x="23.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.43%)</title><rect x="20" y="596" width="5" height="15" fill="rgb(234,13,3)"/><text x="23.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="20" y="612" width="5" height="15" fill="rgb(233,41,37)"/><text x="23.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="20" y="628" width="5" height="15" fill="rgb(206,201,0)"/><text x="23.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="20" y="644" width="5" height="15" fill="rgb(207,120,45)"/><text x="23.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="20" y="660" width="5" height="15" fill="rgb(235,222,52)"/><text x="23.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="20" y="676" width="5" height="15" fill="rgb(245,76,52)"/><text x="23.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="20" y="692" width="5" height="15" fill="rgb(242,42,9)"/><text x="23.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor_pb2.py:1805) (1 samples, 0.43%)</title><rect x="20" y="708" width="5" height="15" fill="rgb(223,10,43)"/><text x="23.00" y="718.50"></text></g><g><title>0x7f4d296050e4 (?) (1 samples, 0.43%)</title><rect x="20" y="724" width="5" height="15" fill="rgb(214,27,12)"/><text x="23.00" y="734.50"></text></g><g><title>0x7f4d295f8add (?) (1 samples, 0.43%)</title><rect x="20" y="740" width="5" height="15" fill="rgb(210,8,20)"/><text x="23.00" y="750.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.43%)</title><rect x="25" y="852" width="5" height="15" fill="rgb(251,150,48)"/><text x="28.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.43%)</title><rect x="25" y="868" width="5" height="15" fill="rgb(246,129,29)"/><text x="28.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.43%)</title><rect x="25" y="884" width="5" height="15" fill="rgb(239,53,8)"/><text x="28.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.43%)</title><rect x="25" y="900" width="5" height="15" fill="rgb(230,171,35)"/><text x="28.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.43%)</title><rect x="25" y="916" width="5" height="15" fill="rgb(235,148,44)"/><text x="28.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.43%)</title><rect x="25" y="932" width="5" height="15" fill="rgb(241,219,3)"/><text x="28.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.43%)</title><rect x="25" y="948" width="5" height="15" fill="rgb(244,89,6)"/><text x="28.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.43%)</title><rect x="25" y="964" width="5" height="15" fill="rgb(231,89,19)"/><text x="28.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:2) (3 samples, 1.29%)</title><rect x="20" y="148" width="15" height="15" fill="rgb(216,42,44)"/><text x="23.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.29%)</title><rect x="20" y="164" width="15" height="15" fill="rgb(237,41,17)"/><text x="23.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.29%)</title><rect x="20" y="180" width="15" height="15" fill="rgb(217,25,24)"/><text x="23.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.29%)</title><rect x="20" y="196" width="15" height="15" fill="rgb(230,87,17)"/><text x="23.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.29%)</title><rect x="20" y="212" width="15" height="15" fill="rgb(214,196,15)"/><text x="23.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.29%)</title><rect x="20" y="228" width="15" height="15" fill="rgb(219,115,7)"/><text x="23.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.29%)</title><rect x="20" y="244" width="15" height="15" fill="rgb(206,142,50)"/><text x="23.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.29%)</title><rect x="20" y="260" width="15" height="15" fill="rgb(243,90,12)"/><text x="23.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.29%)</title><rect x="20" y="276" width="15" height="15" fill="rgb(246,65,23)"/><text x="23.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 1.29%)</title><rect x="20" y="292" width="15" height="15" fill="rgb(206,206,4)"/><text x="23.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.29%)</title><rect x="20" y="308" width="15" height="15" fill="rgb(251,45,26)"/><text x="23.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.29%)</title><rect x="20" y="324" width="15" height="15" fill="rgb(211,91,32)"/><text x="23.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.29%)</title><rect x="20" y="340" width="15" height="15" fill="rgb(243,13,11)"/><text x="23.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.29%)</title><rect x="20" y="356" width="15" height="15" fill="rgb(214,141,7)"/><text x="23.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.29%)</title><rect x="20" y="372" width="15" height="15" fill="rgb(243,179,15)"/><text x="23.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 1.29%)</title><rect x="20" y="388" width="15" height="15" fill="rgb(230,134,50)"/><text x="23.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.29%)</title><rect x="20" y="404" width="15" height="15" fill="rgb(215,184,51)"/><text x="23.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.29%)</title><rect x="20" y="420" width="15" height="15" fill="rgb(225,14,1)"/><text x="23.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.29%)</title><rect x="20" y="436" width="15" height="15" fill="rgb(252,45,20)"/><text x="23.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.29%)</title><rect x="20" y="452" width="15" height="15" fill="rgb(245,173,53)"/><text x="23.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.29%)</title><rect x="20" y="468" width="15" height="15" fill="rgb(231,30,22)"/><text x="23.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 1.29%)</title><rect x="20" y="484" width="15" height="15" fill="rgb(221,11,40)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.29%)</title><rect x="20" y="500" width="15" height="15" fill="rgb(216,214,47)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.29%)</title><rect x="20" y="516" width="15" height="15" fill="rgb(239,15,9)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.29%)</title><rect x="20" y="532" width="15" height="15" fill="rgb(252,104,47)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.29%)</title><rect x="20" y="548" width="15" height="15" fill="rgb(221,209,23)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.29%)</title><rect x="20" y="564" width="15" height="15" fill="rgb(248,193,28)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.86%)</title><rect x="25" y="580" width="10" height="15" fill="rgb(241,50,3)"/><text x="28.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.86%)</title><rect x="25" y="596" width="10" height="15" fill="rgb(223,20,43)"/><text x="28.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.86%)</title><rect x="25" y="612" width="10" height="15" fill="rgb(246,220,23)"/><text x="28.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.86%)</title><rect x="25" y="628" width="10" height="15" fill="rgb(251,126,9)"/><text x="28.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.86%)</title><rect x="25" y="644" width="10" height="15" fill="rgb(226,17,11)"/><text x="28.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.86%)</title><rect x="25" y="660" width="10" height="15" fill="rgb(207,117,39)"/><text x="28.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.86%)</title><rect x="25" y="676" width="10" height="15" fill="rgb(231,203,29)"/><text x="28.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.86%)</title><rect x="25" y="692" width="10" height="15" fill="rgb(235,172,46)"/><text x="28.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.86%)</title><rect x="25" y="708" width="10" height="15" fill="rgb(216,33,50)"/><text x="28.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.86%)</title><rect x="25" y="724" width="10" height="15" fill="rgb(208,50,18)"/><text x="28.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.86%)</title><rect x="25" y="740" width="10" height="15" fill="rgb(225,174,24)"/><text x="28.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.86%)</title><rect x="25" y="756" width="10" height="15" fill="rgb(225,102,54)"/><text x="28.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.86%)</title><rect x="25" y="772" width="10" height="15" fill="rgb(232,90,35)"/><text x="28.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.86%)</title><rect x="25" y="788" width="10" height="15" fill="rgb(216,50,50)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.86%)</title><rect x="25" y="804" width="10" height="15" fill="rgb(224,203,41)"/><text x="28.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.86%)</title><rect x="25" y="820" width="10" height="15" fill="rgb(246,88,46)"/><text x="28.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.86%)</title><rect x="25" y="836" width="10" height="15" fill="rgb(231,145,22)"/><text x="28.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.43%)</title><rect x="30" y="852" width="5" height="15" fill="rgb(217,32,50)"/><text x="33.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.43%)</title><rect x="30" y="868" width="5" height="15" fill="rgb(211,206,48)"/><text x="33.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.43%)</title><rect x="30" y="884" width="5" height="15" fill="rgb(224,205,20)"/><text x="33.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.43%)</title><rect x="30" y="900" width="5" height="15" fill="rgb(237,60,25)"/><text x="33.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.43%)</title><rect x="30" y="916" width="5" height="15" fill="rgb(233,182,18)"/><text x="33.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.43%)</title><rect x="30" y="932" width="5" height="15" fill="rgb(246,168,53)"/><text x="33.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.43%)</title><rect x="30" y="948" width="5" height="15" fill="rgb(223,94,0)"/><text x="33.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:220) (1 samples, 0.43%)</title><rect x="30" y="964" width="5" height="15" fill="rgb(218,226,24)"/><text x="33.00" y="974.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:14) (1 samples, 0.43%)</title><rect x="35" y="484" width="5" height="15" fill="rgb(216,100,12)"/><text x="38.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.43%)</title><rect x="35" y="500" width="5" height="15" fill="rgb(207,4,3)"/><text x="38.00" y="510.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:149) (1 samples, 0.43%)</title><rect x="35" y="516" width="5" height="15" fill="rgb(231,147,42)"/><text x="38.00" y="526.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;:90) (1 samples, 0.43%)</title><rect x="35" y="532" width="5" height="15" fill="rgb(231,227,29)"/><text x="38.00" y="542.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.43%)</title><rect x="40" y="772" width="5" height="15" fill="rgb(214,69,37)"/><text x="43.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.43%)</title><rect x="40" y="788" width="5" height="15" fill="rgb(236,65,17)"/><text x="43.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="40" y="804" width="5" height="15" fill="rgb(254,202,22)"/><text x="43.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="40" y="820" width="5" height="15" fill="rgb(207,126,47)"/><text x="43.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="40" y="836" width="5" height="15" fill="rgb(244,215,52)"/><text x="43.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="40" y="852" width="5" height="15" fill="rgb(240,78,24)"/><text x="43.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="40" y="868" width="5" height="15" fill="rgb(225,115,1)"/><text x="43.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="40" y="884" width="5" height="15" fill="rgb(243,183,41)"/><text x="43.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.43%)</title><rect x="40" y="900" width="5" height="15" fill="rgb(246,43,7)"/><text x="43.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.43%)</title><rect x="40" y="916" width="5" height="15" fill="rgb(228,159,44)"/><text x="43.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="40" y="932" width="5" height="15" fill="rgb(245,61,25)"/><text x="43.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="40" y="948" width="5" height="15" fill="rgb(229,180,30)"/><text x="43.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="40" y="964" width="5" height="15" fill="rgb(239,70,30)"/><text x="43.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="40" y="980" width="5" height="15" fill="rgb(254,75,1)"/><text x="43.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="40" y="996" width="5" height="15" fill="rgb(248,188,9)"/><text x="43.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="40" y="1012" width="5" height="15" fill="rgb(228,39,3)"/><text x="43.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:280) (1 samples, 0.43%)</title><rect x="40" y="1028" width="5" height="15" fill="rgb(230,56,23)"/><text x="43.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.43%)</title><rect x="40" y="1044" width="5" height="15" fill="rgb(216,16,27)"/><text x="43.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:737) (1 samples, 0.43%)</title><rect x="40" y="1060" width="5" height="15" fill="rgb(238,101,26)"/><text x="43.00" y="1070.50"></text></g><g><title>unicode_replace (python3.7) (1 samples, 0.43%)</title><rect x="40" y="1076" width="5" height="15" fill="rgb(224,199,23)"/><text x="43.00" y="1086.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:4) (3 samples, 1.29%)</title><rect x="35" y="148" width="15" height="15" fill="rgb(220,106,48)"/><text x="38.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.29%)</title><rect x="35" y="164" width="15" height="15" fill="rgb(224,16,42)"/><text x="38.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.29%)</title><rect x="35" y="180" width="15" height="15" fill="rgb(216,222,20)"/><text x="38.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.29%)</title><rect x="35" y="196" width="15" height="15" fill="rgb(216,142,7)"/><text x="38.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.29%)</title><rect x="35" y="212" width="15" height="15" fill="rgb(239,22,25)"/><text x="38.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.29%)</title><rect x="35" y="228" width="15" height="15" fill="rgb(223,56,23)"/><text x="38.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.29%)</title><rect x="35" y="244" width="15" height="15" fill="rgb(244,202,54)"/><text x="38.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.29%)</title><rect x="35" y="260" width="15" height="15" fill="rgb(236,183,28)"/><text x="38.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.29%)</title><rect x="35" y="276" width="15" height="15" fill="rgb(246,204,2)"/><text x="38.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 1.29%)</title><rect x="35" y="292" width="15" height="15" fill="rgb(231,49,37)"/><text x="38.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.29%)</title><rect x="35" y="308" width="15" height="15" fill="rgb(226,167,53)"/><text x="38.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.29%)</title><rect x="35" y="324" width="15" height="15" fill="rgb(227,173,8)"/><text x="38.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.29%)</title><rect x="35" y="340" width="15" height="15" fill="rgb(206,86,39)"/><text x="38.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.29%)</title><rect x="35" y="356" width="15" height="15" fill="rgb(236,109,42)"/><text x="38.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.29%)</title><rect x="35" y="372" width="15" height="15" fill="rgb(230,75,54)"/><text x="38.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 1.29%)</title><rect x="35" y="388" width="15" height="15" fill="rgb(216,30,36)"/><text x="38.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.29%)</title><rect x="35" y="404" width="15" height="15" fill="rgb(206,51,48)"/><text x="38.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.29%)</title><rect x="35" y="420" width="15" height="15" fill="rgb(208,54,3)"/><text x="38.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.29%)</title><rect x="35" y="436" width="15" height="15" fill="rgb(241,222,53)"/><text x="38.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.29%)</title><rect x="35" y="452" width="15" height="15" fill="rgb(249,227,6)"/><text x="38.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.29%)</title><rect x="35" y="468" width="15" height="15" fill="rgb(249,189,39)"/><text x="38.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.86%)</title><rect x="40" y="484" width="10" height="15" fill="rgb(234,199,14)"/><text x="43.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.86%)</title><rect x="40" y="500" width="10" height="15" fill="rgb(242,39,3)"/><text x="43.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.86%)</title><rect x="40" y="516" width="10" height="15" fill="rgb(207,59,0)"/><text x="43.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.86%)</title><rect x="40" y="532" width="10" height="15" fill="rgb(246,13,21)"/><text x="43.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.86%)</title><rect x="40" y="548" width="10" height="15" fill="rgb(249,119,40)"/><text x="43.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.86%)</title><rect x="40" y="564" width="10" height="15" fill="rgb(248,92,15)"/><text x="43.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.86%)</title><rect x="40" y="580" width="10" height="15" fill="rgb(215,133,44)"/><text x="43.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.86%)</title><rect x="40" y="596" width="10" height="15" fill="rgb(218,48,27)"/><text x="43.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.86%)</title><rect x="40" y="612" width="10" height="15" fill="rgb(207,207,26)"/><text x="43.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.86%)</title><rect x="40" y="628" width="10" height="15" fill="rgb(235,141,28)"/><text x="43.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.86%)</title><rect x="40" y="644" width="10" height="15" fill="rgb(214,104,19)"/><text x="43.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.86%)</title><rect x="40" y="660" width="10" height="15" fill="rgb(237,156,5)"/><text x="43.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.86%)</title><rect x="40" y="676" width="10" height="15" fill="rgb(228,105,51)"/><text x="43.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.86%)</title><rect x="40" y="692" width="10" height="15" fill="rgb(233,110,36)"/><text x="43.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.86%)</title><rect x="40" y="708" width="10" height="15" fill="rgb(217,81,51)"/><text x="43.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.86%)</title><rect x="40" y="724" width="10" height="15" fill="rgb(253,157,33)"/><text x="43.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.86%)</title><rect x="40" y="740" width="10" height="15" fill="rgb(220,73,49)"/><text x="43.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.86%)</title><rect x="40" y="756" width="10" height="15" fill="rgb(229,16,41)"/><text x="43.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:183) (1 samples, 0.43%)</title><rect x="45" y="772" width="5" height="15" fill="rgb(216,195,52)"/><text x="48.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.43%)</title><rect x="45" y="788" width="5" height="15" fill="rgb(222,21,10)"/><text x="48.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="45" y="804" width="5" height="15" fill="rgb(242,131,47)"/><text x="48.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="45" y="820" width="5" height="15" fill="rgb(251,142,8)"/><text x="48.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="45" y="836" width="5" height="15" fill="rgb(207,226,33)"/><text x="48.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="45" y="852" width="5" height="15" fill="rgb(234,26,25)"/><text x="48.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="45" y="868" width="5" height="15" fill="rgb(242,151,25)"/><text x="48.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="45" y="884" width="5" height="15" fill="rgb(232,150,11)"/><text x="48.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/mstats_basic.py:2228) (1 samples, 0.43%)</title><rect x="45" y="900" width="5" height="15" fill="rgb(244,175,27)"/><text x="48.00" y="910.50"></text></g><g><title>namedtuple (collections/__init__.py:464) (1 samples, 0.43%)</title><rect x="45" y="916" width="5" height="15" fill="rgb(253,136,39)"/><text x="48.00" y="926.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.43%)</title><rect x="50" y="244" width="5" height="15" fill="rgb(217,129,30)"/><text x="53.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="50" y="260" width="5" height="15" fill="rgb(220,169,34)"/><text x="53.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="50" y="276" width="5" height="15" fill="rgb(209,170,24)"/><text x="53.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="50" y="292" width="5" height="15" fill="rgb(211,161,45)"/><text x="53.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="50" y="308" width="5" height="15" fill="rgb(242,55,42)"/><text x="53.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="50" y="324" width="5" height="15" fill="rgb(229,204,11)"/><text x="53.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.43%)</title><rect x="50" y="340" width="5" height="15" fill="rgb(211,93,15)"/><text x="53.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="50" y="356" width="5" height="15" fill="rgb(230,138,11)"/><text x="53.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.43%)</title><rect x="50" y="372" width="5" height="15" fill="rgb(223,135,26)"/><text x="53.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="50" y="388" width="5" height="15" fill="rgb(222,46,22)"/><text x="53.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="50" y="404" width="5" height="15" fill="rgb(207,69,0)"/><text x="53.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="50" y="420" width="5" height="15" fill="rgb(219,86,43)"/><text x="53.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="50" y="436" width="5" height="15" fill="rgb(234,80,15)"/><text x="53.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="50" y="452" width="5" height="15" fill="rgb(233,175,44)"/><text x="53.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="50" y="468" width="5" height="15" fill="rgb(212,175,38)"/><text x="53.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.43%)</title><rect x="50" y="484" width="5" height="15" fill="rgb(213,213,49)"/><text x="53.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="50" y="500" width="5" height="15" fill="rgb(223,128,43)"/><text x="53.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="50" y="516" width="5" height="15" fill="rgb(233,115,15)"/><text x="53.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="50" y="532" width="5" height="15" fill="rgb(245,174,50)"/><text x="53.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="50" y="548" width="5" height="15" fill="rgb(206,131,22)"/><text x="53.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="50" y="564" width="5" height="15" fill="rgb(250,99,24)"/><text x="53.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.43%)</title><rect x="50" y="580" width="5" height="15" fill="rgb(228,142,1)"/><text x="53.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="50" y="596" width="5" height="15" fill="rgb(206,39,21)"/><text x="53.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="50" y="612" width="5" height="15" fill="rgb(215,106,51)"/><text x="53.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="50" y="628" width="5" height="15" fill="rgb(247,69,47)"/><text x="53.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="50" y="644" width="5" height="15" fill="rgb(247,30,25)"/><text x="53.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="50" y="660" width="5" height="15" fill="rgb(252,152,43)"/><text x="53.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.43%)</title><rect x="50" y="676" width="5" height="15" fill="rgb(244,51,23)"/><text x="53.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="50" y="692" width="5" height="15" fill="rgb(206,71,36)"/><text x="53.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="50" y="708" width="5" height="15" fill="rgb(240,177,14)"/><text x="53.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="50" y="724" width="5" height="15" fill="rgb(212,217,48)"/><text x="53.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="50" y="740" width="5" height="15" fill="rgb(208,76,46)"/><text x="53.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="50" y="756" width="5" height="15" fill="rgb(243,218,28)"/><text x="53.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:113) (1 samples, 0.43%)</title><rect x="50" y="772" width="5" height="15" fill="rgb(241,44,39)"/><text x="53.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.43%)</title><rect x="50" y="788" width="5" height="15" fill="rgb(246,36,19)"/><text x="53.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="50" y="804" width="5" height="15" fill="rgb(209,106,41)"/><text x="53.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="50" y="820" width="5" height="15" fill="rgb(250,186,34)"/><text x="53.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="50" y="836" width="5" height="15" fill="rgb(254,107,24)"/><text x="53.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="50" y="852" width="5" height="15" fill="rgb(208,77,36)"/><text x="53.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="50" y="868" width="5" height="15" fill="rgb(231,18,30)"/><text x="53.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="50" y="884" width="5" height="15" fill="rgb(244,149,6)"/><text x="53.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/packages.py:10) (1 samples, 0.43%)</title><rect x="50" y="900" width="5" height="15" fill="rgb(205,105,4)"/><text x="53.00" y="910.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.43%)</title><rect x="55" y="340" width="5" height="15" fill="rgb(231,9,15)"/><text x="58.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="55" y="356" width="5" height="15" fill="rgb(219,93,40)"/><text x="58.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="55" y="372" width="5" height="15" fill="rgb(210,57,51)"/><text x="58.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="55" y="388" width="5" height="15" fill="rgb(241,168,53)"/><text x="58.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="55" y="404" width="5" height="15" fill="rgb(220,224,53)"/><text x="58.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="55" y="420" width="5" height="15" fill="rgb(239,208,50)"/><text x="58.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:24) (1 samples, 0.43%)</title><rect x="55" y="436" width="5" height="15" fill="rgb(226,165,53)"/><text x="58.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="55" y="452" width="5" height="15" fill="rgb(252,66,4)"/><text x="58.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="55" y="468" width="5" height="15" fill="rgb(205,26,18)"/><text x="58.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (1 samples, 0.43%)</title><rect x="55" y="484" width="5" height="15" fill="rgb(224,59,45)"/><text x="58.00" y="494.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.43%)</title><rect x="60" y="532" width="5" height="15" fill="rgb(223,51,34)"/><text x="63.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="60" y="548" width="5" height="15" fill="rgb(225,75,30)"/><text x="63.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="60" y="564" width="5" height="15" fill="rgb(237,130,18)"/><text x="63.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="60" y="580" width="5" height="15" fill="rgb(233,207,26)"/><text x="63.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="60" y="596" width="5" height="15" fill="rgb(231,210,49)"/><text x="63.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="60" y="612" width="5" height="15" fill="rgb(254,6,0)"/><text x="63.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.43%)</title><rect x="60" y="628" width="5" height="15" fill="rgb(215,7,37)"/><text x="63.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="60" y="644" width="5" height="15" fill="rgb(248,149,12)"/><text x="63.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="60" y="660" width="5" height="15" fill="rgb(243,65,32)"/><text x="63.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="60" y="676" width="5" height="15" fill="rgb(217,220,27)"/><text x="63.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="60" y="692" width="5" height="15" fill="rgb(218,33,45)"/><text x="63.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="60" y="708" width="5" height="15" fill="rgb(227,7,41)"/><text x="63.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.43%)</title><rect x="60" y="724" width="5" height="15" fill="rgb(242,118,10)"/><text x="63.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="60" y="740" width="5" height="15" fill="rgb(215,143,37)"/><text x="63.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="60" y="756" width="5" height="15" fill="rgb(205,124,46)"/><text x="63.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="60" y="772" width="5" height="15" fill="rgb(231,138,14)"/><text x="63.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="60" y="788" width="5" height="15" fill="rgb(235,130,8)"/><text x="63.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="60" y="804" width="5" height="15" fill="rgb(216,54,7)"/><text x="63.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.43%)</title><rect x="60" y="820" width="5" height="15" fill="rgb(242,34,12)"/><text x="63.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="60" y="836" width="5" height="15" fill="rgb(215,75,16)"/><text x="63.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="60" y="852" width="5" height="15" fill="rgb(236,160,40)"/><text x="63.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="60" y="868" width="5" height="15" fill="rgb(247,184,1)"/><text x="63.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="60" y="884" width="5" height="15" fill="rgb(248,0,36)"/><text x="63.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="60" y="900" width="5" height="15" fill="rgb(213,171,44)"/><text x="63.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.43%)</title><rect x="60" y="916" width="5" height="15" fill="rgb(250,176,51)"/><text x="63.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="60" y="932" width="5" height="15" fill="rgb(219,48,45)"/><text x="63.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="60" y="948" width="5" height="15" fill="rgb(231,180,31)"/><text x="63.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="60" y="964" width="5" height="15" fill="rgb(230,54,35)"/><text x="63.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="60" y="980" width="5" height="15" fill="rgb(205,85,45)"/><text x="63.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="60" y="996" width="5" height="15" fill="rgb(245,84,45)"/><text x="63.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.43%)</title><rect x="60" y="1012" width="5" height="15" fill="rgb(248,12,40)"/><text x="63.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="60" y="1028" width="5" height="15" fill="rgb(254,88,7)"/><text x="63.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="60" y="1044" width="5" height="15" fill="rgb(235,162,27)"/><text x="63.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="60" y="1060" width="5" height="15" fill="rgb(236,45,27)"/><text x="63.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="60" y="1076" width="5" height="15" fill="rgb(228,47,2)"/><text x="63.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="60" y="1092" width="5" height="15" fill="rgb(252,205,20)"/><text x="63.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (1 samples, 0.43%)</title><rect x="60" y="1108" width="5" height="15" fill="rgb(237,141,50)"/><text x="63.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="60" y="1124" width="5" height="15" fill="rgb(210,60,29)"/><text x="63.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="60" y="1140" width="5" height="15" fill="rgb(218,219,1)"/><text x="63.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="60" y="1156" width="5" height="15" fill="rgb(236,166,42)"/><text x="63.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="60" y="1172" width="5" height="15" fill="rgb(238,224,46)"/><text x="63.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="60" y="1188" width="5" height="15" fill="rgb(206,54,36)"/><text x="63.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (1 samples, 0.43%)</title><rect x="60" y="1204" width="5" height="15" fill="rgb(223,100,15)"/><text x="63.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="60" y="1220" width="5" height="15" fill="rgb(216,218,42)"/><text x="63.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="60" y="1236" width="5" height="15" fill="rgb(212,50,35)"/><text x="63.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="60" y="1252" width="5" height="15" fill="rgb(226,165,25)"/><text x="63.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="60" y="1268" width="5" height="15" fill="rgb(209,69,44)"/><text x="63.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="60" y="1284" width="5" height="15" fill="rgb(229,124,14)"/><text x="63.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:15) (1 samples, 0.43%)</title><rect x="60" y="1300" width="5" height="15" fill="rgb(222,71,8)"/><text x="63.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="60" y="1316" width="5" height="15" fill="rgb(238,208,0)"/><text x="63.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="60" y="1332" width="5" height="15" fill="rgb(246,93,36)"/><text x="63.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="60" y="1348" width="5" height="15" fill="rgb(251,219,13)"/><text x="63.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="60" y="1364" width="5" height="15" fill="rgb(252,112,34)"/><text x="63.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="60" y="1380" width="5" height="15" fill="rgb(236,166,35)"/><text x="63.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/datetimes.py:40) (1 samples, 0.43%)</title><rect x="60" y="1396" width="5" height="15" fill="rgb(211,0,49)"/><text x="63.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="60" y="1412" width="5" height="15" fill="rgb(245,38,3)"/><text x="63.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="60" y="1428" width="5" height="15" fill="rgb(225,6,29)"/><text x="63.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="60" y="1444" width="5" height="15" fill="rgb(213,228,53)"/><text x="63.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="60" y="1460" width="5" height="15" fill="rgb(212,214,39)"/><text x="63.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="60" y="1476" width="5" height="15" fill="rgb(226,166,13)"/><text x="63.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/numeric.py:349) (1 samples, 0.43%)</title><rect x="60" y="1492" width="5" height="15" fill="rgb(225,179,39)"/><text x="63.00" y="1502.50"></text></g><g><title>Float64Index (pandas/core/indexes/numeric.py:447) (1 samples, 0.43%)</title><rect x="60" y="1508" width="5" height="15" fill="rgb(232,144,45)"/><text x="63.00" y="1518.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.86%)</title><rect x="60" y="436" width="10" height="15" fill="rgb(213,197,39)"/><text x="63.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.86%)</title><rect x="60" y="452" width="10" height="15" fill="rgb(230,214,54)"/><text x="63.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.86%)</title><rect x="60" y="468" width="10" height="15" fill="rgb(237,74,53)"/><text x="63.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.86%)</title><rect x="60" y="484" width="10" height="15" fill="rgb(217,159,3)"/><text x="63.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.86%)</title><rect x="60" y="500" width="10" height="15" fill="rgb(229,85,33)"/><text x="63.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.86%)</title><rect x="60" y="516" width="10" height="15" fill="rgb(249,126,34)"/><text x="63.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:16) (1 samples, 0.43%)</title><rect x="65" y="532" width="5" height="15" fill="rgb(215,228,14)"/><text x="68.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="65" y="548" width="5" height="15" fill="rgb(250,188,0)"/><text x="68.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="65" y="564" width="5" height="15" fill="rgb(209,135,13)"/><text x="68.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.43%)</title><rect x="65" y="580" width="5" height="15" fill="rgb(234,26,52)"/><text x="68.00" y="590.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.43%)</title><rect x="65" y="596" width="5" height="15" fill="rgb(237,91,16)"/><text x="68.00" y="606.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:544) (1 samples, 0.43%)</title><rect x="65" y="612" width="5" height="15" fill="rgb(235,194,32)"/><text x="68.00" y="622.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.43%)</title><rect x="65" y="628" width="5" height="15" fill="rgb(207,207,14)"/><text x="68.00" y="638.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.43%)</title><rect x="70" y="1108" width="5" height="15" fill="rgb(235,158,49)"/><text x="73.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="70" y="1124" width="5" height="15" fill="rgb(207,18,23)"/><text x="73.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="70" y="1140" width="5" height="15" fill="rgb(230,102,4)"/><text x="73.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="70" y="1156" width="5" height="15" fill="rgb(206,114,14)"/><text x="73.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="70" y="1172" width="5" height="15" fill="rgb(234,113,28)"/><text x="73.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="70" y="1188" width="5" height="15" fill="rgb(248,29,30)"/><text x="73.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.43%)</title><rect x="70" y="1204" width="5" height="15" fill="rgb(252,102,49)"/><text x="73.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="70" y="1220" width="5" height="15" fill="rgb(217,133,39)"/><text x="73.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="70" y="1236" width="5" height="15" fill="rgb(219,189,2)"/><text x="73.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="70" y="1252" width="5" height="15" fill="rgb(230,66,32)"/><text x="73.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="70" y="1268" width="5" height="15" fill="rgb(216,111,2)"/><text x="73.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="70" y="1284" width="5" height="15" fill="rgb(212,60,49)"/><text x="73.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.43%)</title><rect x="70" y="1300" width="5" height="15" fill="rgb(231,66,16)"/><text x="73.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.43%)</title><rect x="70" y="1316" width="5" height="15" fill="rgb(221,199,30)"/><text x="73.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.43%)</title><rect x="70" y="1332" width="5" height="15" fill="rgb(242,127,21)"/><text x="73.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.43%)</title><rect x="70" y="1348" width="5" height="15" fill="rgb(246,141,27)"/><text x="73.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.43%)</title><rect x="70" y="1364" width="5" height="15" fill="rgb(221,211,18)"/><text x="73.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:592) (1 samples, 0.43%)</title><rect x="70" y="1380" width="5" height="15" fill="rgb(224,86,53)"/><text x="73.00" y="1390.50"></text></g><g><title>root (&lt;template&gt;:47) (1 samples, 0.43%)</title><rect x="75" y="1572" width="5" height="15" fill="rgb(238,124,19)"/><text x="78.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.43%)</title><rect x="75" y="1588" width="5" height="15" fill="rgb(242,173,33)"/><text x="78.00" y="1598.50"></text></g><g><title>google::protobuf::Reflection::ListFields (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="80" y="1668" width="5" height="15" fill="rgb(253,30,33)"/><text x="83.00" y="1678.50"></text></g><g><title>0x7f4d295e2090 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="80" y="1684" width="5" height="15" fill="rgb(225,13,22)"/><text x="83.00" y="1694.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (3 samples, 1.29%)</title><rect x="75" y="1492" width="16" height="15" fill="rgb(240,183,51)"/><text x="78.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (3 samples, 1.29%)</title><rect x="75" y="1508" width="16" height="15" fill="rgb(216,61,47)"/><text x="78.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (3 samples, 1.29%)</title><rect x="75" y="1524" width="16" height="15" fill="rgb(229,208,26)"/><text x="78.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (3 samples, 1.29%)</title><rect x="75" y="1540" width="16" height="15" fill="rgb(230,4,26)"/><text x="78.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 1.29%)</title><rect x="75" y="1556" width="16" height="15" fill="rgb(238,169,3)"/><text x="78.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:75) (2 samples, 0.86%)</title><rect x="80" y="1572" width="11" height="15" fill="rgb(224,168,26)"/><text x="83.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (2 samples, 0.86%)</title><rect x="80" y="1588" width="11" height="15" fill="rgb(206,73,25)"/><text x="83.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py:40) (2 samples, 0.86%)</title><rect x="80" y="1604" width="11" height="15" fill="rgb(229,182,39)"/><text x="83.00" y="1614.50"></text></g><g><title>0x7f4d295f43b1 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.86%)</title><rect x="80" y="1620" width="11" height="15" fill="rgb(212,92,40)"/><text x="83.00" y="1630.50"></text></g><g><title>google::protobuf::python::cmessage::Clear (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.86%)</title><rect x="80" y="1636" width="11" height="15" fill="rgb(237,140,4)"/><text x="83.00" y="1646.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Clear (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.86%)</title><rect x="80" y="1652" width="11" height="15" fill="rgb(250,4,9)"/><text x="83.00" y="1662.50"></text></g><g><title>google::protobuf::Reflection::MutableUnknownFields (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="85" y="1668" width="6" height="15" fill="rgb(254,24,17)"/><text x="88.00" y="1678.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:121) (1 samples, 0.43%)</title><rect x="91" y="1492" width="5" height="15" fill="rgb(254,208,11)"/><text x="94.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="91" y="1508" width="5" height="15" fill="rgb(236,166,37)"/><text x="94.00" y="1518.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="91" y="1524" width="5" height="15" fill="rgb(254,115,16)"/><text x="94.00" y="1534.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute&gt;::cast&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="91" y="1540" width="5" height="15" fill="rgb(242,158,28)"/><text x="94.00" y="1550.50"></text></g><g><title>pybind11::detail::type_caster_generic::src_and_type (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="91" y="1556" width="5" height="15" fill="rgb(242,41,49)"/><text x="94.00" y="1566.50"></text></g><g><title>pybind11::detail::get_type_info (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="91" y="1572" width="5" height="15" fill="rgb(233,184,40)"/><text x="94.00" y="1582.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.994] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="91" y="1588" width="5" height="15" fill="rgb(217,185,50)"/><text x="94.00" y="1598.50"></text></g><g><title>0x7f4d3b2ae6a2 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="91" y="1604" width="5" height="15" fill="rgb(233,128,23)"/><text x="94.00" y="1614.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:4) (18 samples, 7.73%)</title><rect x="10" y="52" width="91" height="15" fill="rgb(215,214,9)"/><text x="13.00" y="62.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (18 samples, 7.73%)</title><rect x="10" y="68" width="91" height="15" fill="rgb(228,109,37)"/><text x="13.00" y="78.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (18 samples, 7.73%)</title><rect x="10" y="84" width="91" height="15" fill="rgb(231,213,5)"/><text x="13.00" y="94.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (18 samples, 7.73%)</title><rect x="10" y="100" width="91" height="15" fill="rgb(213,225,39)"/><text x="13.00" y="110.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (18 samples, 7.73%)</title><rect x="10" y="116" width="91" height="15" fill="rgb(252,119,50)"/><text x="13.00" y="126.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (18 samples, 7.73%)</title><rect x="10" y="132" width="91" height="15" fill="rgb(224,227,3)"/><text x="13.00" y="142.50">_call_with..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:7) (10 samples, 4.29%)</title><rect x="50" y="148" width="51" height="15" fill="rgb(224,227,2)"/><text x="53.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 4.29%)</title><rect x="50" y="164" width="51" height="15" fill="rgb(232,38,30)"/><text x="53.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 4.29%)</title><rect x="50" y="180" width="51" height="15" fill="rgb(234,33,16)"/><text x="53.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 4.29%)</title><rect x="50" y="196" width="51" height="15" fill="rgb(215,108,22)"/><text x="53.00" y="206.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 4.29%)</title><rect x="50" y="212" width="51" height="15" fill="rgb(212,184,36)"/><text x="53.00" y="222.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 4.29%)</title><rect x="50" y="228" width="51" height="15" fill="rgb(254,203,41)"/><text x="53.00" y="238.50">_call..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (9 samples, 3.86%)</title><rect x="55" y="244" width="46" height="15" fill="rgb(224,90,1)"/><text x="58.00" y="254.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.86%)</title><rect x="55" y="260" width="46" height="15" fill="rgb(251,189,17)"/><text x="58.00" y="270.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 3.86%)</title><rect x="55" y="276" width="46" height="15" fill="rgb(228,202,25)"/><text x="58.00" y="286.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 3.86%)</title><rect x="55" y="292" width="46" height="15" fill="rgb(206,96,32)"/><text x="58.00" y="302.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 3.86%)</title><rect x="55" y="308" width="46" height="15" fill="rgb(247,109,45)"/><text x="58.00" y="318.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.86%)</title><rect x="55" y="324" width="46" height="15" fill="rgb(237,21,54)"/><text x="58.00" y="334.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (8 samples, 3.43%)</title><rect x="60" y="340" width="41" height="15" fill="rgb(232,169,37)"/><text x="63.00" y="350.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.43%)</title><rect x="60" y="356" width="41" height="15" fill="rgb(230,225,51)"/><text x="63.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.43%)</title><rect x="60" y="372" width="41" height="15" fill="rgb(240,162,21)"/><text x="63.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.43%)</title><rect x="60" y="388" width="41" height="15" fill="rgb(214,15,45)"/><text x="63.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.43%)</title><rect x="60" y="404" width="41" height="15" fill="rgb(214,25,28)"/><text x="63.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.43%)</title><rect x="60" y="420" width="41" height="15" fill="rgb(237,159,45)"/><text x="63.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (6 samples, 2.58%)</title><rect x="70" y="436" width="31" height="15" fill="rgb(209,152,30)"/><text x="73.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.58%)</title><rect x="70" y="452" width="31" height="15" fill="rgb(220,121,26)"/><text x="73.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.58%)</title><rect x="70" y="468" width="31" height="15" fill="rgb(214,103,9)"/><text x="73.00" y="478.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.58%)</title><rect x="70" y="484" width="31" height="15" fill="rgb(234,97,26)"/><text x="73.00" y="494.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.58%)</title><rect x="70" y="500" width="31" height="15" fill="rgb(247,164,36)"/><text x="73.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.58%)</title><rect x="70" y="516" width="31" height="15" fill="rgb(225,188,21)"/><text x="73.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.58%)</title><rect x="70" y="532" width="31" height="15" fill="rgb(232,116,29)"/><text x="73.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.58%)</title><rect x="70" y="548" width="31" height="15" fill="rgb(208,97,46)"/><text x="73.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.58%)</title><rect x="70" y="564" width="31" height="15" fill="rgb(241,206,31)"/><text x="73.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (6 samples, 2.58%)</title><rect x="70" y="580" width="31" height="15" fill="rgb(240,179,12)"/><text x="73.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.58%)</title><rect x="70" y="596" width="31" height="15" fill="rgb(227,161,27)"/><text x="73.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.58%)</title><rect x="70" y="612" width="31" height="15" fill="rgb(212,94,14)"/><text x="73.00" y="622.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.58%)</title><rect x="70" y="628" width="31" height="15" fill="rgb(250,94,36)"/><text x="73.00" y="638.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.58%)</title><rect x="70" y="644" width="31" height="15" fill="rgb(220,28,41)"/><text x="73.00" y="654.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.58%)</title><rect x="70" y="660" width="31" height="15" fill="rgb(251,149,39)"/><text x="73.00" y="670.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (6 samples, 2.58%)</title><rect x="70" y="676" width="31" height="15" fill="rgb(250,12,27)"/><text x="73.00" y="686.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.58%)</title><rect x="70" y="692" width="31" height="15" fill="rgb(229,221,52)"/><text x="73.00" y="702.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.58%)</title><rect x="70" y="708" width="31" height="15" fill="rgb(208,96,11)"/><text x="73.00" y="718.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.58%)</title><rect x="70" y="724" width="31" height="15" fill="rgb(217,80,23)"/><text x="73.00" y="734.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.58%)</title><rect x="70" y="740" width="31" height="15" fill="rgb(208,17,48)"/><text x="73.00" y="750.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.58%)</title><rect x="70" y="756" width="31" height="15" fill="rgb(211,14,38)"/><text x="73.00" y="766.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (6 samples, 2.58%)</title><rect x="70" y="772" width="31" height="15" fill="rgb(223,157,34)"/><text x="73.00" y="782.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.58%)</title><rect x="70" y="788" width="31" height="15" fill="rgb(239,148,18)"/><text x="73.00" y="798.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.58%)</title><rect x="70" y="804" width="31" height="15" fill="rgb(254,72,3)"/><text x="73.00" y="814.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.58%)</title><rect x="70" y="820" width="31" height="15" fill="rgb(233,88,29)"/><text x="73.00" y="830.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.58%)</title><rect x="70" y="836" width="31" height="15" fill="rgb(216,80,9)"/><text x="73.00" y="846.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.58%)</title><rect x="70" y="852" width="31" height="15" fill="rgb(251,73,42)"/><text x="73.00" y="862.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (6 samples, 2.58%)</title><rect x="70" y="868" width="31" height="15" fill="rgb(229,146,54)"/><text x="73.00" y="878.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.58%)</title><rect x="70" y="884" width="31" height="15" fill="rgb(209,38,38)"/><text x="73.00" y="894.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.58%)</title><rect x="70" y="900" width="31" height="15" fill="rgb(206,172,53)"/><text x="73.00" y="910.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.58%)</title><rect x="70" y="916" width="31" height="15" fill="rgb(206,62,33)"/><text x="73.00" y="926.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.58%)</title><rect x="70" y="932" width="31" height="15" fill="rgb(218,95,28)"/><text x="73.00" y="942.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.58%)</title><rect x="70" y="948" width="31" height="15" fill="rgb(216,173,54)"/><text x="73.00" y="958.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.58%)</title><rect x="70" y="964" width="31" height="15" fill="rgb(213,216,25)"/><text x="73.00" y="974.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.58%)</title><rect x="70" y="980" width="31" height="15" fill="rgb(235,159,7)"/><text x="73.00" y="990.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.58%)</title><rect x="70" y="996" width="31" height="15" fill="rgb(234,48,35)"/><text x="73.00" y="1006.50">_c..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (6 samples, 2.58%)</title><rect x="70" y="1012" width="31" height="15" fill="rgb(211,46,44)"/><text x="73.00" y="1022.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.58%)</title><rect x="70" y="1028" width="31" height="15" fill="rgb(225,89,38)"/><text x="73.00" y="1038.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.58%)</title><rect x="70" y="1044" width="31" height="15" fill="rgb(206,34,44)"/><text x="73.00" y="1054.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.58%)</title><rect x="70" y="1060" width="31" height="15" fill="rgb(221,160,17)"/><text x="73.00" y="1070.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.58%)</title><rect x="70" y="1076" width="31" height="15" fill="rgb(245,55,27)"/><text x="73.00" y="1086.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.58%)</title><rect x="70" y="1092" width="31" height="15" fill="rgb(233,4,29)"/><text x="73.00" y="1102.50">_c..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (5 samples, 2.15%)</title><rect x="75" y="1108" width="26" height="15" fill="rgb(220,17,20)"/><text x="78.00" y="1118.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (5 samples, 2.15%)</title><rect x="75" y="1124" width="26" height="15" fill="rgb(249,50,31)"/><text x="78.00" y="1134.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.15%)</title><rect x="75" y="1140" width="26" height="15" fill="rgb(211,219,39)"/><text x="78.00" y="1150.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.15%)</title><rect x="75" y="1156" width="26" height="15" fill="rgb(227,151,39)"/><text x="78.00" y="1166.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.15%)</title><rect x="75" y="1172" width="26" height="15" fill="rgb(253,128,54)"/><text x="78.00" y="1182.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.15%)</title><rect x="75" y="1188" width="26" height="15" fill="rgb(233,152,1)"/><text x="78.00" y="1198.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.15%)</title><rect x="75" y="1204" width="26" height="15" fill="rgb(251,177,33)"/><text x="78.00" y="1214.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.15%)</title><rect x="75" y="1220" width="26" height="15" fill="rgb(223,16,29)"/><text x="78.00" y="1230.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (5 samples, 2.15%)</title><rect x="75" y="1236" width="26" height="15" fill="rgb(243,132,19)"/><text x="78.00" y="1246.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (5 samples, 2.15%)</title><rect x="75" y="1252" width="26" height="15" fill="rgb(245,67,46)"/><text x="78.00" y="1262.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.15%)</title><rect x="75" y="1268" width="26" height="15" fill="rgb(225,93,54)"/><text x="78.00" y="1278.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.15%)</title><rect x="75" y="1284" width="26" height="15" fill="rgb(208,118,11)"/><text x="78.00" y="1294.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.15%)</title><rect x="75" y="1300" width="26" height="15" fill="rgb(220,83,54)"/><text x="78.00" y="1310.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.15%)</title><rect x="75" y="1316" width="26" height="15" fill="rgb(205,120,3)"/><text x="78.00" y="1326.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.15%)</title><rect x="75" y="1332" width="26" height="15" fill="rgb(249,199,2)"/><text x="78.00" y="1342.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.15%)</title><rect x="75" y="1348" width="26" height="15" fill="rgb(212,106,10)"/><text x="78.00" y="1358.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (5 samples, 2.15%)</title><rect x="75" y="1364" width="26" height="15" fill="rgb(252,83,53)"/><text x="78.00" y="1374.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.15%)</title><rect x="75" y="1380" width="26" height="15" fill="rgb(254,70,50)"/><text x="78.00" y="1390.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.15%)</title><rect x="75" y="1396" width="26" height="15" fill="rgb(246,75,52)"/><text x="78.00" y="1406.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.15%)</title><rect x="75" y="1412" width="26" height="15" fill="rgb(245,131,16)"/><text x="78.00" y="1422.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.15%)</title><rect x="75" y="1428" width="26" height="15" fill="rgb(245,145,48)"/><text x="78.00" y="1438.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.15%)</title><rect x="75" y="1444" width="26" height="15" fill="rgb(222,89,38)"/><text x="78.00" y="1454.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (5 samples, 2.15%)</title><rect x="75" y="1460" width="26" height="15" fill="rgb(239,146,37)"/><text x="78.00" y="1470.50">&lt;..</text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (5 samples, 2.15%)</title><rect x="75" y="1476" width="26" height="15" fill="rgb(240,44,36)"/><text x="78.00" y="1486.50">_..</text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:123) (1 samples, 0.43%)</title><rect x="96" y="1492" width="5" height="15" fill="rgb(226,163,27)"/><text x="99.00" y="1502.50"></text></g><g><title>__init__ (inspect.py:2487) (1 samples, 0.43%)</title><rect x="101" y="276" width="5" height="15" fill="rgb(253,21,43)"/><text x="104.00" y="286.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:369) (2 samples, 0.86%)</title><rect x="101" y="116" width="10" height="15" fill="rgb(252,52,48)"/><text x="104.00" y="126.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py:369) (2 samples, 0.86%)</title><rect x="101" y="132" width="10" height="15" fill="rgb(216,128,23)"/><text x="104.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:149) (2 samples, 0.86%)</title><rect x="101" y="148" width="10" height="15" fill="rgb(253,181,22)"/><text x="104.00" y="158.50"></text></g><g><title>clone (sklearn/base.py:73) (2 samples, 0.86%)</title><rect x="101" y="164" width="10" height="15" fill="rgb(235,120,9)"/><text x="104.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py:189) (2 samples, 0.86%)</title><rect x="101" y="180" width="10" height="15" fill="rgb(224,127,36)"/><text x="104.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (2 samples, 0.86%)</title><rect x="101" y="196" width="10" height="15" fill="rgb(246,210,42)"/><text x="104.00" y="206.50"></text></g><g><title>signature (inspect.py:3083) (2 samples, 0.86%)</title><rect x="101" y="212" width="10" height="15" fill="rgb(224,112,17)"/><text x="104.00" y="222.50"></text></g><g><title>from_callable (inspect.py:2833) (2 samples, 0.86%)</title><rect x="101" y="228" width="10" height="15" fill="rgb(229,164,39)"/><text x="104.00" y="238.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (2 samples, 0.86%)</title><rect x="101" y="244" width="10" height="15" fill="rgb(205,88,1)"/><text x="104.00" y="254.50"></text></g><g><title>_signature_from_function (inspect.py:2161) (2 samples, 0.86%)</title><rect x="101" y="260" width="10" height="15" fill="rgb(208,221,13)"/><text x="104.00" y="270.50"></text></g><g><title>__init__ (inspect.py:2502) (1 samples, 0.43%)</title><rect x="106" y="276" width="5" height="15" fill="rgb(209,132,40)"/><text x="109.00" y="286.50"></text></g><g><title>unicode_isidentifier (python3.7) (1 samples, 0.43%)</title><rect x="106" y="292" width="5" height="15" fill="rgb(234,83,2)"/><text x="109.00" y="302.50"></text></g><g><title>fit (sklearn/tree/_classes.py:143) (1 samples, 0.43%)</title><rect x="111" y="276" width="5" height="15" fill="rgb(218,123,21)"/><text x="114.00" y="286.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (1 samples, 0.43%)</title><rect x="111" y="292" width="5" height="15" fill="rgb(231,54,30)"/><text x="114.00" y="302.50"></text></g><g><title>__init__ (mtrand.c:3210) (1 samples, 0.43%)</title><rect x="111" y="308" width="5" height="15" fill="rgb(237,155,17)"/><text x="114.00" y="318.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (1 samples, 0.43%)</title><rect x="111" y="324" width="5" height="15" fill="rgb(223,19,15)"/><text x="114.00" y="334.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (1 samples, 0.43%)</title><rect x="111" y="340" width="5" height="15" fill="rgb(241,56,28)"/><text x="114.00" y="350.50"></text></g><g><title>__init__ (mt19937.c:2381) (1 samples, 0.43%)</title><rect x="111" y="356" width="5" height="15" fill="rgb(213,33,28)"/><text x="114.00" y="366.50"></text></g><g><title>MT19937___init__ (mt19937.c:2558) (1 samples, 0.43%)</title><rect x="111" y="372" width="5" height="15" fill="rgb(224,128,0)"/><text x="114.00" y="382.50"></text></g><g><title>__Pyx_GetItemInt_Fast (mt19937.c:8049) (1 samples, 0.43%)</title><rect x="111" y="388" width="5" height="15" fill="rgb(250,34,15)"/><text x="114.00" y="398.50"></text></g><g><title>array_item (mapping.c:1386) (1 samples, 0.43%)</title><rect x="111" y="404" width="5" height="15" fill="rgb(237,60,27)"/><text x="114.00" y="414.50"></text></g><g><title>PyArray_Scalar (scalarapi.c:693) (1 samples, 0.43%)</title><rect x="111" y="420" width="5" height="15" fill="rgb(252,165,34)"/><text x="114.00" y="430.50"></text></g><g><title>gentype_alloc (scalartypes.c.src:129) (1 samples, 0.43%)</title><rect x="111" y="436" width="5" height="15" fill="rgb(228,226,46)"/><text x="114.00" y="446.50"></text></g><g><title>0x7f4d14cd7b11 (?) (1 samples, 0.43%)</title><rect x="116" y="292" width="5" height="15" fill="rgb(224,24,17)"/><text x="119.00" y="302.50"></text></g><g><title>0x7f4d14d0910a (?) (1 samples, 0.43%)</title><rect x="116" y="308" width="5" height="15" fill="rgb(253,138,11)"/><text x="119.00" y="318.50"></text></g><g><title>0x7f4d14f34d8c (?) (1 samples, 0.43%)</title><rect x="116" y="324" width="5" height="15" fill="rgb(209,46,4)"/><text x="119.00" y="334.50"></text></g><g><title>0x7f4d14f2dd50 (?) (1 samples, 0.43%)</title><rect x="116" y="340" width="5" height="15" fill="rgb(233,68,28)"/><text x="119.00" y="350.50"></text></g><g><title>0x7f4d14f2dd00 (?) (1 samples, 0.43%)</title><rect x="116" y="356" width="5" height="15" fill="rgb(228,225,24)"/><text x="119.00" y="366.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:40) (5 samples, 2.15%)</title><rect x="101" y="52" width="25" height="15" fill="rgb(236,214,20)"/><text x="104.00" y="62.50">&lt;..</text></g><g><title>start (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:11) (5 samples, 2.15%)</title><rect x="101" y="68" width="25" height="15" fill="rgb(208,36,43)"/><text x="104.00" y="78.50">s..</text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:39) (5 samples, 2.15%)</title><rect x="101" y="84" width="25" height="15" fill="rgb(242,151,30)"/><text x="104.00" y="94.50">s..</text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (5 samples, 2.15%)</title><rect x="101" y="100" width="25" height="15" fill="rgb(226,61,36)"/><text x="104.00" y="110.50">s..</text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (3 samples, 1.29%)</title><rect x="111" y="116" width="15" height="15" fill="rgb(243,198,32)"/><text x="114.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (3 samples, 1.29%)</title><rect x="111" y="132" width="15" height="15" fill="rgb(235,164,43)"/><text x="114.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (3 samples, 1.29%)</title><rect x="111" y="148" width="15" height="15" fill="rgb(233,37,14)"/><text x="114.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (3 samples, 1.29%)</title><rect x="111" y="164" width="15" height="15" fill="rgb(231,109,27)"/><text x="114.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (3 samples, 1.29%)</title><rect x="111" y="180" width="15" height="15" fill="rgb(223,106,18)"/><text x="114.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (3 samples, 1.29%)</title><rect x="111" y="196" width="15" height="15" fill="rgb(208,104,14)"/><text x="114.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (3 samples, 1.29%)</title><rect x="111" y="212" width="15" height="15" fill="rgb(251,111,38)"/><text x="114.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (3 samples, 1.29%)</title><rect x="111" y="228" width="15" height="15" fill="rgb(239,173,37)"/><text x="114.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:165) (3 samples, 1.29%)</title><rect x="111" y="244" width="15" height="15" fill="rgb(205,24,29)"/><text x="114.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py:1226) (3 samples, 1.29%)</title><rect x="111" y="260" width="15" height="15" fill="rgb(253,7,39)"/><text x="114.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py:367) (2 samples, 0.86%)</title><rect x="116" y="276" width="10" height="15" fill="rgb(252,122,45)"/><text x="119.00" y="286.50"></text></g><g><title>0x7f4d14cd7b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="121" y="292" width="5" height="15" fill="rgb(245,115,51)"/><text x="124.00" y="302.50"></text></g><g><title>0x7f4d14d0910a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="121" y="308" width="5" height="15" fill="rgb(237,55,51)"/><text x="124.00" y="318.50"></text></g><g><title>0x7f4d14f34d8c (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="121" y="324" width="5" height="15" fill="rgb(230,103,3)"/><text x="124.00" y="334.50"></text></g><g><title>0x7f4d14f2dd00 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="121" y="340" width="5" height="15" fill="rgb(235,68,16)"/><text x="124.00" y="350.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (1 samples, 0.43%)</title><rect x="126" y="180" width="5" height="15" fill="rgb(251,43,4)"/><text x="129.00" y="190.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.43%)</title><rect x="126" y="196" width="5" height="15" fill="rgb(236,153,18)"/><text x="129.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (1 samples, 0.43%)</title><rect x="126" y="212" width="5" height="15" fill="rgb(240,142,22)"/><text x="129.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (1 samples, 0.43%)</title><rect x="131" y="180" width="5" height="15" fill="rgb(240,65,8)"/><text x="134.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (1 samples, 0.43%)</title><rect x="136" y="180" width="5" height="15" fill="rgb(249,103,34)"/><text x="139.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (1 samples, 0.43%)</title><rect x="136" y="196" width="5" height="15" fill="rgb(214,38,30)"/><text x="139.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (1 samples, 0.43%)</title><rect x="136" y="212" width="5" height="15" fill="rgb(245,200,52)"/><text x="139.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (1 samples, 0.43%)</title><rect x="136" y="228" width="5" height="15" fill="rgb(244,192,49)"/><text x="139.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (1 samples, 0.43%)</title><rect x="141" y="180" width="5" height="15" fill="rgb(220,93,49)"/><text x="144.00" y="190.50"></text></g><g><title>put (queue.py:150) (1 samples, 0.43%)</title><rect x="141" y="196" width="5" height="15" fill="rgb(237,7,47)"/><text x="144.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (1 samples, 0.43%)</title><rect x="146" y="292" width="5" height="15" fill="rgb(219,104,31)"/><text x="149.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.43%)</title><rect x="146" y="308" width="5" height="15" fill="rgb(230,76,8)"/><text x="149.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.43%)</title><rect x="146" y="324" width="5" height="15" fill="rgb(231,190,2)"/><text x="149.00" y="334.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (6 samples, 2.58%)</title><rect x="126" y="164" width="30" height="15" fill="rgb(248,111,30)"/><text x="129.00" y="174.50">__..</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (2 samples, 0.86%)</title><rect x="146" y="180" width="10" height="15" fill="rgb(239,38,44)"/><text x="149.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (2 samples, 0.86%)</title><rect x="146" y="196" width="10" height="15" fill="rgb(251,40,22)"/><text x="149.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (2 samples, 0.86%)</title><rect x="146" y="212" width="10" height="15" fill="rgb(228,12,27)"/><text x="149.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (2 samples, 0.86%)</title><rect x="146" y="228" width="10" height="15" fill="rgb(218,28,45)"/><text x="149.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (2 samples, 0.86%)</title><rect x="146" y="244" width="10" height="15" fill="rgb(247,215,11)"/><text x="149.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (2 samples, 0.86%)</title><rect x="146" y="260" width="10" height="15" fill="rgb(252,14,41)"/><text x="149.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (2 samples, 0.86%)</title><rect x="146" y="276" width="10" height="15" fill="rgb(244,7,17)"/><text x="149.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (1 samples, 0.43%)</title><rect x="151" y="292" width="5" height="15" fill="rgb(242,61,10)"/><text x="154.00" y="302.50"></text></g><g><title>0x7f4d14ce3d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="151" y="308" width="5" height="15" fill="rgb(234,30,25)"/><text x="154.00" y="318.50"></text></g><g><title>0x7f4d14ce2f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="151" y="324" width="5" height="15" fill="rgb(211,49,10)"/><text x="154.00" y="334.50"></text></g><g><title>0x7f4d14cd2d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="151" y="340" width="5" height="15" fill="rgb(238,42,33)"/><text x="154.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.43%)</title><rect x="151" y="356" width="5" height="15" fill="rgb(215,81,16)"/><text x="154.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1006) (1 samples, 0.43%)</title><rect x="151" y="372" width="5" height="15" fill="rgb(248,127,12)"/><text x="154.00" y="382.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:37) (1 samples, 0.43%)</title><rect x="151" y="388" width="5" height="15" fill="rgb(225,2,5)"/><text x="154.00" y="398.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:47) (7 samples, 3.00%)</title><rect x="126" y="52" width="35" height="15" fill="rgb(241,180,7)"/><text x="129.00" y="62.50">&lt;m..</text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:46) (7 samples, 3.00%)</title><rect x="126" y="68" width="35" height="15" fill="rgb(245,187,2)"/><text x="129.00" y="78.50">pr..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:26) (7 samples, 3.00%)</title><rect x="126" y="84" width="35" height="15" fill="rgb(222,89,39)"/><text x="129.00" y="94.50">se..</text></g><g><title>profile0 (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:18) (7 samples, 3.00%)</title><rect x="126" y="100" width="35" height="15" fill="rgb(232,140,0)"/><text x="129.00" y="110.50">pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (7 samples, 3.00%)</title><rect x="126" y="116" width="35" height="15" fill="rgb(236,101,19)"/><text x="129.00" y="126.50">ti..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (7 samples, 3.00%)</title><rect x="126" y="132" width="35" height="15" fill="rgb(216,1,14)"/><text x="129.00" y="142.50">&lt;l..</text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (7 samples, 3.00%)</title><rect x="126" y="148" width="35" height="15" fill="rgb(236,23,5)"/><text x="129.00" y="158.50">pr..</text></g><g><title>__call__ (joblib/parallel.py:1016) (1 samples, 0.43%)</title><rect x="156" y="164" width="5" height="15" fill="rgb(207,121,21)"/><text x="159.00" y="174.50"></text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py:410) (1 samples, 0.43%)</title><rect x="161" y="164" width="5" height="15" fill="rgb(228,175,0)"/><text x="164.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.43%)</title><rect x="161" y="180" width="5" height="15" fill="rgb(233,130,1)"/><text x="164.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.43%)</title><rect x="161" y="196" width="5" height="15" fill="rgb(225,108,46)"/><text x="164.00" y="206.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:766) (2 samples, 0.86%)</title><rect x="161" y="148" width="11" height="15" fill="rgb(214,138,7)"/><text x="164.00" y="158.50"></text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py:412) (1 samples, 0.43%)</title><rect x="166" y="164" width="6" height="15" fill="rgb(205,96,42)"/><text x="169.00" y="174.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (1 samples, 0.43%)</title><rect x="166" y="180" width="6" height="15" fill="rgb(249,27,39)"/><text x="169.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.43%)</title><rect x="166" y="196" width="6" height="15" fill="rgb(223,81,51)"/><text x="169.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.43%)</title><rect x="166" y="212" width="6" height="15" fill="rgb(242,73,44)"/><text x="169.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1610) (1 samples, 0.43%)</title><rect x="166" y="228" width="6" height="15" fill="rgb(217,133,32)"/><text x="169.00" y="238.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:769) (1 samples, 0.43%)</title><rect x="172" y="148" width="5" height="15" fill="rgb(245,120,28)"/><text x="175.00" y="158.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:182) (1 samples, 0.43%)</title><rect x="172" y="164" width="5" height="15" fill="rgb(239,161,7)"/><text x="175.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.43%)</title><rect x="172" y="180" width="5" height="15" fill="rgb(205,122,0)"/><text x="175.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.43%)</title><rect x="172" y="196" width="5" height="15" fill="rgb(244,161,43)"/><text x="175.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.43%)</title><rect x="172" y="212" width="5" height="15" fill="rgb(219,163,21)"/><text x="175.00" y="222.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1371) (1 samples, 0.43%)</title><rect x="172" y="228" width="5" height="15" fill="rgb(233,120,23)"/><text x="175.00" y="238.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:780) (1 samples, 0.43%)</title><rect x="177" y="148" width="5" height="15" fill="rgb(248,48,34)"/><text x="180.00" y="158.50"></text></g><g><title>_joblib_parallel_args (sklearn/utils/fixes.py:223) (1 samples, 0.43%)</title><rect x="177" y="164" width="5" height="15" fill="rgb(222,64,27)"/><text x="180.00" y="174.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (1 samples, 0.43%)</title><rect x="182" y="164" width="5" height="15" fill="rgb(253,153,4)"/><text x="185.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (1 samples, 0.43%)</title><rect x="182" y="180" width="5" height="15" fill="rgb(252,210,1)"/><text x="185.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (1 samples, 0.43%)</title><rect x="182" y="196" width="5" height="15" fill="rgb(245,62,52)"/><text x="185.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (1 samples, 0.43%)</title><rect x="182" y="212" width="5" height="15" fill="rgb(212,107,45)"/><text x="185.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (1 samples, 0.43%)</title><rect x="182" y="228" width="5" height="15" fill="rgb(216,147,54)"/><text x="185.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (1 samples, 0.43%)</title><rect x="182" y="244" width="5" height="15" fill="rgb(243,197,10)"/><text x="185.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (1 samples, 0.43%)</title><rect x="182" y="260" width="5" height="15" fill="rgb(234,25,37)"/><text x="185.00" y="270.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:782) (1 samples, 0.43%)</title><rect x="187" y="180" width="5" height="15" fill="rgb(237,32,54)"/><text x="190.00" y="190.50"></text></g><g><title>get (queue.py:164) (2 samples, 0.86%)</title><rect x="192" y="196" width="10" height="15" fill="rgb(224,12,25)"/><text x="195.00" y="206.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.43%)</title><rect x="202" y="196" width="5" height="15" fill="rgb(245,183,7)"/><text x="205.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (1 samples, 0.43%)</title><rect x="202" y="212" width="5" height="15" fill="rgb(225,41,15)"/><text x="205.00" y="222.50"></text></g><g><title>get (queue.py:167) (1 samples, 0.43%)</title><rect x="207" y="196" width="5" height="15" fill="rgb(243,34,19)"/><text x="210.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (5 samples, 2.15%)</title><rect x="192" y="180" width="25" height="15" fill="rgb(206,56,0)"/><text x="195.00" y="190.50">d..</text></g><g><title>get (queue.py:182) (1 samples, 0.43%)</title><rect x="212" y="196" width="5" height="15" fill="rgb(254,160,46)"/><text x="215.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.43%)</title><rect x="212" y="212" width="5" height="15" fill="rgb(215,20,24)"/><text x="215.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:52) (2 samples, 0.86%)</title><rect x="278" y="228" width="10" height="15" fill="rgb(222,188,2)"/><text x="281.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:54) (5 samples, 2.15%)</title><rect x="288" y="228" width="25" height="15" fill="rgb(227,2,29)"/><text x="291.00" y="238.50">u..</text></g><g><title>update_wrapper (functools.py:58) (1 samples, 0.43%)</title><rect x="313" y="228" width="5" height="15" fill="rgb(237,94,27)"/><text x="316.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:65) (1 samples, 0.43%)</title><rect x="318" y="228" width="5" height="15" fill="rgb(226,190,38)"/><text x="321.00" y="238.50"></text></g><g><title>delayed (joblib/parallel.py:308) (16 samples, 6.87%)</title><rect x="248" y="212" width="81" height="15" fill="rgb(233,102,27)"/><text x="251.00" y="222.50">delayed (..</text></g><g><title>wraps (functools.py:79) (1 samples, 0.43%)</title><rect x="323" y="228" width="6" height="15" fill="rgb(236,131,23)"/><text x="326.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (23 samples, 9.87%)</title><rect x="217" y="180" width="117" height="15" fill="rgb(240,15,25)"/><text x="220.00" y="190.50">dispatch_one_b..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:782) (20 samples, 8.58%)</title><rect x="232" y="196" width="102" height="15" fill="rgb(232,65,23)"/><text x="235.00" y="206.50">&lt;genexpr&gt; (s..</text></g><g><title>delayed_function (joblib/parallel.py:306) (1 samples, 0.43%)</title><rect x="329" y="212" width="5" height="15" fill="rgb(248,163,32)"/><text x="332.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:808) (1 samples, 0.43%)</title><rect x="334" y="180" width="5" height="15" fill="rgb(212,176,10)"/><text x="337.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:819) (1 samples, 0.43%)</title><rect x="339" y="180" width="5" height="15" fill="rgb(229,27,15)"/><text x="342.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (1 samples, 0.43%)</title><rect x="344" y="180" width="5" height="15" fill="rgb(243,99,20)"/><text x="347.00" y="190.50"></text></g><g><title>0x7f4d3b37d134 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="379" y="212" width="5" height="15" fill="rgb(219,128,27)"/><text x="382.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (9 samples, 3.86%)</title><rect x="349" y="196" width="45" height="15" fill="rgb(235,192,4)"/><text x="352.00" y="206.50">get_..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.86%)</title><rect x="384" y="212" width="10" height="15" fill="rgb(253,124,41)"/><text x="387.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:273) (1 samples, 0.43%)</title><rect x="405" y="228" width="5" height="15" fill="rgb(246,212,43)"/><text x="408.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (2 samples, 0.86%)</title><rect x="410" y="228" width="10" height="15" fill="rgb(225,107,54)"/><text x="413.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:275) (1 samples, 0.43%)</title><rect x="420" y="228" width="5" height="15" fill="rgb(205,73,48)"/><text x="423.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (8 samples, 3.43%)</title><rect x="394" y="212" width="41" height="15" fill="rgb(243,33,6)"/><text x="397.00" y="222.50">get..</text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (2 samples, 0.86%)</title><rect x="425" y="228" width="10" height="15" fill="rgb(221,123,18)"/><text x="428.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:38) (1 samples, 0.43%)</title><rect x="430" y="244" width="5" height="15" fill="rgb(232,172,26)"/><text x="433.00" y="254.50"></text></g><g><title>get_active_backend (joblib/parallel.py:118) (1 samples, 0.43%)</title><rect x="435" y="212" width="5" height="15" fill="rgb(212,207,45)"/><text x="438.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:83) (2 samples, 0.86%)</title><rect x="440" y="212" width="10" height="15" fill="rgb(253,58,15)"/><text x="443.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (22 samples, 9.44%)</title><rect x="349" y="180" width="111" height="15" fill="rgb(253,114,44)"/><text x="352.00" y="190.50">dispatch_one_..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (13 samples, 5.58%)</title><rect x="394" y="196" width="66" height="15" fill="rgb(243,7,28)"/><text x="397.00" y="206.50">get_nes..</text></g><g><title>get_active_backend (joblib/parallel.py:94) (2 samples, 0.86%)</title><rect x="450" y="212" width="10" height="15" fill="rgb(246,170,1)"/><text x="453.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:241) (2 samples, 0.86%)</title><rect x="465" y="196" width="10" height="15" fill="rgb(228,169,26)"/><text x="468.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:243) (1 samples, 0.43%)</title><rect x="475" y="196" width="5" height="15" fill="rgb(208,116,34)"/><text x="478.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (5 samples, 2.15%)</title><rect x="460" y="180" width="26" height="15" fill="rgb(209,205,50)"/><text x="463.00" y="190.50">d..</text></g><g><title>__init__ (joblib/parallel.py:244) (1 samples, 0.43%)</title><rect x="480" y="196" width="6" height="15" fill="rgb(224,167,30)"/><text x="483.00" y="206.50"></text></g><g><title>put (queue.py:121) (1 samples, 0.43%)</title><rect x="486" y="196" width="5" height="15" fill="rgb(232,61,29)"/><text x="489.00" y="206.50"></text></g><g><title>put (queue.py:132) (1 samples, 0.43%)</title><rect x="491" y="196" width="5" height="15" fill="rgb(242,154,47)"/><text x="494.00" y="206.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.43%)</title><rect x="496" y="212" width="5" height="15" fill="rgb(220,62,23)"/><text x="499.00" y="222.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.43%)</title><rect x="501" y="212" width="5" height="15" fill="rgb(205,106,21)"/><text x="504.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (6 samples, 2.58%)</title><rect x="486" y="180" width="30" height="15" fill="rgb(225,196,7)"/><text x="489.00" y="190.50">di..</text></g><g><title>put (queue.py:151) (4 samples, 1.72%)</title><rect x="496" y="196" width="20" height="15" fill="rgb(229,112,27)"/><text x="499.00" y="206.50"></text></g><g><title>notify (threading.py:349) (2 samples, 0.86%)</title><rect x="506" y="212" width="10" height="15" fill="rgb(238,90,7)"/><text x="509.00" y="222.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.43%)</title><rect x="516" y="196" width="5" height="15" fill="rgb(233,87,14)"/><text x="519.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.43%)</title><rect x="516" y="212" width="5" height="15" fill="rgb(249,212,40)"/><text x="519.00" y="222.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.43%)</title><rect x="526" y="212" width="5" height="15" fill="rgb(238,168,16)"/><text x="529.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.43%)</title><rect x="526" y="228" width="5" height="15" fill="rgb(207,44,42)"/><text x="529.00" y="238.50"></text></g><g><title>get (queue.py:181) (3 samples, 1.29%)</title><rect x="521" y="196" width="15" height="15" fill="rgb(232,43,43)"/><text x="524.00" y="206.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.43%)</title><rect x="531" y="212" width="5" height="15" fill="rgb(254,26,18)"/><text x="534.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (6 samples, 2.58%)</title><rect x="516" y="180" width="30" height="15" fill="rgb(254,205,36)"/><text x="519.00" y="190.50">di..</text></g><g><title>get (queue.py:182) (2 samples, 0.86%)</title><rect x="536" y="196" width="10" height="15" fill="rgb(233,144,32)"/><text x="539.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (1 samples, 0.43%)</title><rect x="546" y="180" width="5" height="15" fill="rgb(221,3,46)"/><text x="549.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:743) (2 samples, 0.86%)</title><rect x="556" y="196" width="11" height="15" fill="rgb(224,85,37)"/><text x="559.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:746) (1 samples, 0.43%)</title><rect x="567" y="196" width="5" height="15" fill="rgb(237,228,4)"/><text x="570.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:747) (1 samples, 0.43%)</title><rect x="572" y="196" width="5" height="15" fill="rgb(226,95,45)"/><text x="575.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:749) (1 samples, 0.43%)</title><rect x="577" y="196" width="5" height="15" fill="rgb(210,140,4)"/><text x="580.00" y="206.50"></text></g><g><title>time_time (python3.7) (1 samples, 0.43%)</title><rect x="577" y="212" width="5" height="15" fill="rgb(206,71,9)"/><text x="580.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (4 samples, 1.72%)</title><rect x="582" y="196" width="20" height="15" fill="rgb(246,90,35)"/><text x="585.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:751) (3 samples, 1.29%)</title><rect x="602" y="196" width="15" height="15" fill="rgb(210,51,32)"/><text x="605.00" y="206.50"></text></g><g><title>0x7f4d3b2b5730 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="612" y="212" width="5" height="15" fill="rgb(243,31,34)"/><text x="615.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (1 samples, 0.43%)</title><rect x="637" y="260" width="6" height="15" fill="rgb(251,55,29)"/><text x="640.00" y="270.50"></text></g><g><title>__init__ (joblib/parallel.py:206) (1 samples, 0.43%)</title><rect x="643" y="260" width="5" height="15" fill="rgb(237,55,4)"/><text x="646.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (6 samples, 2.58%)</title><rect x="627" y="244" width="31" height="15" fill="rgb(234,132,46)"/><text x="630.00" y="254.50">__..</text></g><g><title>__init__ (joblib/parallel.py:209) (2 samples, 0.86%)</title><rect x="648" y="260" width="10" height="15" fill="rgb(210,31,7)"/><text x="651.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:255) (1 samples, 0.43%)</title><rect x="658" y="244" width="5" height="15" fill="rgb(210,86,35)"/><text x="661.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.43%)</title><rect x="693" y="308" width="5" height="15" fill="rgb(252,12,35)"/><text x="696.00" y="318.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.86%)</title><rect x="698" y="308" width="10" height="15" fill="rgb(228,168,48)"/><text x="701.00" y="318.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.43%)</title><rect x="703" y="324" width="5" height="15" fill="rgb(228,143,10)"/><text x="706.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.43%)</title><rect x="719" y="324" width="5" height="15" fill="rgb(211,22,45)"/><text x="722.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.43%)</title><rect x="769" y="340" width="5" height="15" fill="rgb(234,3,23)"/><text x="772.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (11 samples, 4.72%)</title><rect x="724" y="324" width="55" height="15" fill="rgb(251,225,11)"/><text x="727.00" y="334.50">&lt;list..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.43%)</title><rect x="774" y="340" width="5" height="15" fill="rgb(205,116,0)"/><text x="777.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (22 samples, 9.44%)</title><rect x="688" y="292" width="112" height="15" fill="rgb(235,88,24)"/><text x="691.00" y="302.50">predict (skle..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (18 samples, 7.73%)</title><rect x="708" y="308" width="92" height="15" fill="rgb(226,146,37)"/><text x="711.00" y="318.50">check_is_f..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (4 samples, 1.72%)</title><rect x="779" y="324" width="21" height="15" fill="rgb(222,210,47)"/><text x="782.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.43%)</title><rect x="794" y="340" width="6" height="15" fill="rgb(246,89,45)"/><text x="797.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (2 samples, 0.86%)</title><rect x="800" y="292" width="10" height="15" fill="rgb(252,170,3)"/><text x="803.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (1 samples, 0.43%)</title><rect x="805" y="308" width="5" height="15" fill="rgb(240,180,47)"/><text x="808.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.43%)</title><rect x="810" y="372" width="5" height="15" fill="rgb(230,48,54)"/><text x="813.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.43%)</title><rect x="810" y="388" width="5" height="15" fill="rgb(234,100,53)"/><text x="813.00" y="398.50"></text></g><g><title>0x7f4d14ce2f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.86%)</title><rect x="810" y="324" width="10" height="15" fill="rgb(226,6,40)"/><text x="813.00" y="334.50"></text></g><g><title>0x7f4d14cd2d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.86%)</title><rect x="810" y="340" width="10" height="15" fill="rgb(254,173,53)"/><text x="813.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.86%)</title><rect x="810" y="356" width="10" height="15" fill="rgb(211,146,47)"/><text x="813.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.43%)</title><rect x="815" y="372" width="5" height="15" fill="rgb(249,67,45)"/><text x="818.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.43%)</title><rect x="815" y="388" width="5" height="15" fill="rgb(236,39,52)"/><text x="818.00" y="398.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.43%)</title><rect x="815" y="404" width="5" height="15" fill="rgb(246,117,25)"/><text x="818.00" y="414.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.43%)</title><rect x="815" y="420" width="5" height="15" fill="rgb(247,115,38)"/><text x="818.00" y="430.50"></text></g><g><title>0x7f4d14ce2f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="820" y="324" width="5" height="15" fill="rgb(206,73,24)"/><text x="823.00" y="334.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.43%)</title><rect x="825" y="388" width="5" height="15" fill="rgb(220,19,42)"/><text x="828.00" y="398.50"></text></g><g><title>0x7f4d14cf1225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.86%)</title><rect x="825" y="356" width="10" height="15" fill="rgb(235,112,43)"/><text x="828.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (2 samples, 0.86%)</title><rect x="825" y="372" width="10" height="15" fill="rgb(205,204,49)"/><text x="828.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.43%)</title><rect x="830" y="388" width="5" height="15" fill="rgb(224,174,48)"/><text x="833.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.43%)</title><rect x="830" y="404" width="5" height="15" fill="rgb(237,200,50)"/><text x="833.00" y="414.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.43%)</title><rect x="830" y="420" width="5" height="15" fill="rgb(222,179,52)"/><text x="833.00" y="430.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4560) (1 samples, 0.43%)</title><rect x="830" y="436" width="5" height="15" fill="rgb(241,118,17)"/><text x="833.00" y="446.50"></text></g><g><title>_buffer_format_string (buffer.c:358) (1 samples, 0.43%)</title><rect x="835" y="468" width="5" height="15" fill="rgb(243,180,44)"/><text x="838.00" y="478.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (2 samples, 0.86%)</title><rect x="835" y="436" width="10" height="15" fill="rgb(232,122,48)"/><text x="838.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (2 samples, 0.86%)</title><rect x="835" y="452" width="10" height="15" fill="rgb(250,10,16)"/><text x="838.00" y="462.50"></text></g><g><title>_buffer_format_string (buffer.c:433) (1 samples, 0.43%)</title><rect x="840" y="468" width="5" height="15" fill="rgb(241,22,35)"/><text x="843.00" y="478.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.43%)</title><rect x="840" y="484" width="5" height="15" fill="rgb(242,154,16)"/><text x="843.00" y="494.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.43%)</title><rect x="840" y="500" width="5" height="15" fill="rgb(226,89,30)"/><text x="843.00" y="510.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.43%)</title><rect x="845" y="436" width="5" height="15" fill="rgb(225,148,50)"/><text x="848.00" y="446.50"></text></g><g><title>0x7f4d14cd5d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.72%)</title><rect x="835" y="372" width="20" height="15" fill="rgb(235,172,15)"/><text x="838.00" y="382.50"></text></g><g><title>0x7f4d14cd5666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.72%)</title><rect x="835" y="388" width="20" height="15" fill="rgb(210,42,11)"/><text x="838.00" y="398.50"></text></g><g><title>0x7f4d14ccb2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.72%)</title><rect x="835" y="404" width="20" height="15" fill="rgb(221,199,12)"/><text x="838.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (4 samples, 1.72%)</title><rect x="835" y="420" width="20" height="15" fill="rgb(224,181,44)"/><text x="838.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:698) (1 samples, 0.43%)</title><rect x="850" y="436" width="5" height="15" fill="rgb(225,21,23)"/><text x="853.00" y="446.50"></text></g><g><title>0x7f4d14cd5ddd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="855" y="372" width="5" height="15" fill="rgb(244,35,2)"/><text x="858.00" y="382.50"></text></g><g><title>0x7f4d14cc8fda (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="860" y="388" width="5" height="15" fill="rgb(205,5,51)"/><text x="863.00" y="398.50"></text></g><g><title>0x7f4d14cc9022 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="865" y="388" width="5" height="15" fill="rgb(211,116,52)"/><text x="868.00" y="398.50"></text></g><g><title>0x7f4d14cc8c82 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="870" y="404" width="6" height="15" fill="rgb(252,152,44)"/><text x="873.00" y="414.50"></text></g><g><title>0x7f4d14cf12df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 3.86%)</title><rect x="835" y="356" width="46" height="15" fill="rgb(235,214,14)"/><text x="838.00" y="366.50">0x7f..</text></g><g><title>0x7f4d14cd5e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.72%)</title><rect x="860" y="372" width="21" height="15" fill="rgb(221,118,54)"/><text x="863.00" y="382.50"></text></g><g><title>0x7f4d14cc92bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.86%)</title><rect x="870" y="388" width="11" height="15" fill="rgb(242,92,22)"/><text x="873.00" y="398.50"></text></g><g><title>0x7f4d14cc8db9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="876" y="404" width="5" height="15" fill="rgb(232,150,6)"/><text x="879.00" y="414.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.43%)</title><rect x="886" y="388" width="5" height="15" fill="rgb(253,154,12)"/><text x="889.00" y="398.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.43%)</title><rect x="886" y="404" width="5" height="15" fill="rgb(212,93,53)"/><text x="889.00" y="414.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.43%)</title><rect x="886" y="420" width="5" height="15" fill="rgb(213,45,2)"/><text x="889.00" y="430.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.43%)</title><rect x="886" y="436" width="5" height="15" fill="rgb(231,156,52)"/><text x="889.00" y="446.50"></text></g><g><title>0x7f4d14cf1592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.29%)</title><rect x="881" y="356" width="15" height="15" fill="rgb(233,53,40)"/><text x="884.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (3 samples, 1.29%)</title><rect x="881" y="372" width="15" height="15" fill="rgb(222,226,52)"/><text x="884.00" y="382.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.43%)</title><rect x="891" y="388" width="5" height="15" fill="rgb(233,121,14)"/><text x="894.00" y="398.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.43%)</title><rect x="896" y="372" width="5" height="15" fill="rgb(219,173,40)"/><text x="899.00" y="382.50"></text></g><g><title>0x7f4d14cf1644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.86%)</title><rect x="896" y="356" width="10" height="15" fill="rgb(232,180,24)"/><text x="899.00" y="366.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.43%)</title><rect x="901" y="372" width="5" height="15" fill="rgb(213,177,25)"/><text x="904.00" y="382.50"></text></g><g><title>0x7f4d14cf16fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="906" y="356" width="5" height="15" fill="rgb(222,144,42)"/><text x="909.00" y="366.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.43%)</title><rect x="906" y="372" width="5" height="15" fill="rgb(246,165,27)"/><text x="909.00" y="382.50"></text></g><g><title>0x7f4d14cf2405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (18 samples, 7.73%)</title><rect x="825" y="340" width="91" height="15" fill="rgb(217,165,17)"/><text x="828.00" y="350.50">0x7f4d14cf..</text></g><g><title>0x7f4d14cf192f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="911" y="356" width="5" height="15" fill="rgb(226,83,9)"/><text x="914.00" y="366.50"></text></g><g><title>0x7f4d14cc69af (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="911" y="372" width="5" height="15" fill="rgb(231,117,39)"/><text x="914.00" y="382.50"></text></g><g><title>0x7f4d14ce2fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (19 samples, 8.15%)</title><rect x="825" y="324" width="96" height="15" fill="rgb(232,137,12)"/><text x="828.00" y="334.50">0x7f4d14ce2..</text></g><g><title>0x7f4d14cf2540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="916" y="340" width="5" height="15" fill="rgb(232,199,30)"/><text x="919.00" y="350.50"></text></g><g><title>0x7f4d14cc72f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="916" y="356" width="5" height="15" fill="rgb(250,0,44)"/><text x="919.00" y="366.50"></text></g><g><title>0x7f4d14cc6530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="916" y="372" width="5" height="15" fill="rgb(217,208,53)"/><text x="919.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.43%)</title><rect x="916" y="388" width="5" height="15" fill="rgb(228,99,15)"/><text x="919.00" y="398.50"></text></g><g><title>0x7f4d14ce2fa9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="921" y="324" width="5" height="15" fill="rgb(235,47,53)"/><text x="924.00" y="334.50"></text></g><g><title>0x7f4d3b2b5e50 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="926" y="356" width="5" height="15" fill="rgb(223,6,45)"/><text x="929.00" y="366.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:229) (1 samples, 0.43%)</title><rect x="931" y="356" width="5" height="15" fill="rgb(227,33,5)"/><text x="934.00" y="366.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.43%)</title><rect x="931" y="372" width="5" height="15" fill="rgb(234,70,41)"/><text x="934.00" y="382.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.43%)</title><rect x="931" y="388" width="5" height="15" fill="rgb(220,111,13)"/><text x="934.00" y="398.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (2 samples, 0.86%)</title><rect x="936" y="356" width="10" height="15" fill="rgb(205,85,30)"/><text x="939.00" y="366.50"></text></g><g><title>array_take (methods.c:138) (5 samples, 2.15%)</title><rect x="926" y="340" width="25" height="15" fill="rgb(245,102,48)"/><text x="929.00" y="350.50">a..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.43%)</title><rect x="946" y="356" width="5" height="15" fill="rgb(229,94,34)"/><text x="949.00" y="366.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:52) (1 samples, 0.43%)</title><rect x="951" y="356" width="6" height="15" fill="rgb(214,127,10)"/><text x="954.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.43%)</title><rect x="951" y="372" width="6" height="15" fill="rgb(237,32,35)"/><text x="954.00" y="382.50"></text></g><g><title>0x7f4d14ce305a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 3.00%)</title><rect x="926" y="324" width="36" height="15" fill="rgb(252,215,48)"/><text x="929.00" y="334.50">0x7..</text></g><g><title>array_take (methods.c:145) (2 samples, 0.86%)</title><rect x="951" y="340" width="11" height="15" fill="rgb(218,40,13)"/><text x="954.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:61) (1 samples, 0.43%)</title><rect x="957" y="356" width="5" height="15" fill="rgb(227,5,12)"/><text x="960.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.43%)</title><rect x="962" y="372" width="5" height="15" fill="rgb(219,71,49)"/><text x="965.00" y="382.50"></text></g><g><title>0x7f4d14ce314f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.86%)</title><rect x="962" y="324" width="10" height="15" fill="rgb(231,174,2)"/><text x="965.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.86%)</title><rect x="962" y="340" width="10" height="15" fill="rgb(207,7,30)"/><text x="965.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.86%)</title><rect x="962" y="356" width="10" height="15" fill="rgb(243,18,9)"/><text x="965.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:725) (1 samples, 0.43%)</title><rect x="967" y="372" width="5" height="15" fill="rgb(229,136,48)"/><text x="970.00" y="382.50"></text></g><g><title>0x7f4d3b29f97c (libc-2.29.so) (1 samples, 0.43%)</title><rect x="967" y="388" width="5" height="15" fill="rgb(242,103,48)"/><text x="970.00" y="398.50"></text></g><g><title>0x7f4d14ce318f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="972" y="324" width="5" height="15" fill="rgb(220,86,18)"/><text x="975.00" y="334.50"></text></g><g><title>0x7f4d14ce31a6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="977" y="324" width="5" height="15" fill="rgb(239,23,44)"/><text x="980.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (35 samples, 15.02%)</title><rect x="810" y="292" width="177" height="15" fill="rgb(251,223,53)"/><text x="813.00" y="302.50">predict (sklearn/tree/_..</text></g><g><title>0x7f4d14ce3d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (35 samples, 15.02%)</title><rect x="810" y="308" width="177" height="15" fill="rgb(223,104,21)"/><text x="813.00" y="318.50">0x7f4d14ce3d2e (sklearn..</text></g><g><title>0x7f4d14ce3328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="982" y="324" width="5" height="15" fill="rgb(228,110,32)"/><text x="985.00" y="334.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.43%)</title><rect x="982" y="340" width="5" height="15" fill="rgb(220,195,10)"/><text x="985.00" y="350.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.43%)</title><rect x="982" y="356" width="5" height="15" fill="rgb(219,160,36)"/><text x="985.00" y="366.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.43%)</title><rect x="982" y="372" width="5" height="15" fill="rgb(247,73,37)"/><text x="985.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.43%)</title><rect x="982" y="388" width="5" height="15" fill="rgb(237,162,29)"/><text x="985.00" y="398.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c:176) (1 samples, 0.43%)</title><rect x="982" y="404" width="5" height="15" fill="rgb(208,7,30)"/><text x="985.00" y="414.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (4 samples, 1.72%)</title><rect x="987" y="292" width="20" height="15" fill="rgb(242,84,13)"/><text x="990.00" y="302.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (3 samples, 1.29%)</title><rect x="992" y="308" width="15" height="15" fill="rgb(246,91,45)"/><text x="995.00" y="318.50"></text></g><g><title>predict (sklearn/tree/_classes.py:441) (1 samples, 0.43%)</title><rect x="1007" y="292" width="5" height="15" fill="rgb(225,82,29)"/><text x="1010.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1508) (1 samples, 0.43%)</title><rect x="1017" y="308" width="5" height="15" fill="rgb(209,92,42)"/><text x="1020.00" y="318.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (67 samples, 28.76%)</title><rect x="688" y="276" width="339" height="15" fill="rgb(213,165,23)"/><text x="691.00" y="286.50">_accumulate_prediction (sklearn/ensemble/_for..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (3 samples, 1.29%)</title><rect x="1012" y="292" width="15" height="15" fill="rgb(228,44,19)"/><text x="1015.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.43%)</title><rect x="1022" y="308" width="5" height="15" fill="rgb(219,224,33)"/><text x="1025.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.43%)</title><rect x="1022" y="324" width="5" height="15" fill="rgb(226,139,18)"/><text x="1025.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.43%)</title><rect x="1022" y="340" width="5" height="15" fill="rgb(216,193,11)"/><text x="1025.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1022) (1 samples, 0.43%)</title><rect x="1022" y="356" width="5" height="15" fill="rgb(213,205,28)"/><text x="1025.00" y="366.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:451) (1 samples, 0.43%)</title><rect x="1027" y="276" width="6" height="15" fill="rgb(248,156,49)"/><text x="1030.00" y="286.50"></text></g><g><title>array_inplace_add (number.c:708) (1 samples, 0.43%)</title><rect x="1043" y="292" width="5" height="15" fill="rgb(209,148,0)"/><text x="1046.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.43%)</title><rect x="1048" y="308" width="5" height="15" fill="rgb(234,155,14)"/><text x="1051.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.43%)</title><rect x="1048" y="324" width="5" height="15" fill="rgb(247,39,35)"/><text x="1051.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2068) (1 samples, 0.43%)</title><rect x="1048" y="340" width="5" height="15" fill="rgb(249,52,39)"/><text x="1051.00" y="350.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1902) (1 samples, 0.43%)</title><rect x="1053" y="340" width="5" height="15" fill="rgb(230,209,5)"/><text x="1056.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.86%)</title><rect x="1053" y="308" width="10" height="15" fill="rgb(253,157,11)"/><text x="1056.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (2 samples, 0.86%)</title><rect x="1053" y="324" width="10" height="15" fill="rgb(208,199,14)"/><text x="1056.00" y="334.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.43%)</title><rect x="1058" y="340" width="5" height="15" fill="rgb(229,192,33)"/><text x="1061.00" y="350.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.43%)</title><rect x="1058" y="356" width="5" height="15" fill="rgb(246,79,11)"/><text x="1061.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.43%)</title><rect x="1058" y="372" width="5" height="15" fill="rgb(254,145,9)"/><text x="1061.00" y="382.50"></text></g><g><title>0x7f4d3a4c0f00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="1063" y="324" width="5" height="15" fill="rgb(229,73,53)"/><text x="1066.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.43%)</title><rect x="1068" y="340" width="5" height="15" fill="rgb(216,6,15)"/><text x="1071.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.43%)</title><rect x="1068" y="356" width="5" height="15" fill="rgb(250,61,24)"/><text x="1071.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.43%)</title><rect x="1068" y="372" width="5" height="15" fill="rgb(244,136,13)"/><text x="1071.00" y="382.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.43%)</title><rect x="1068" y="388" width="5" height="15" fill="rgb(235,85,18)"/><text x="1071.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.86%)</title><rect x="1068" y="324" width="10" height="15" fill="rgb(233,52,28)"/><text x="1071.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:741) (1 samples, 0.43%)</title><rect x="1073" y="340" width="5" height="15" fill="rgb(210,31,41)"/><text x="1076.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.43%)</title><rect x="1078" y="340" width="5" height="15" fill="rgb(208,121,47)"/><text x="1081.00" y="350.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.43%)</title><rect x="1078" y="356" width="5" height="15" fill="rgb(214,45,37)"/><text x="1081.00" y="366.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1882) (1 samples, 0.43%)</title><rect x="1078" y="372" width="5" height="15" fill="rgb(248,99,9)"/><text x="1081.00" y="382.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (11 samples, 4.72%)</title><rect x="1033" y="276" width="55" height="15" fill="rgb(218,15,19)"/><text x="1036.00" y="286.50">_accu..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 3.43%)</title><rect x="1048" y="292" width="40" height="15" fill="rgb(225,187,39)"/><text x="1051.00" y="302.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 2.15%)</title><rect x="1063" y="308" width="25" height="15" fill="rgb(242,43,2)"/><text x="1066.00" y="318.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.86%)</title><rect x="1078" y="324" width="10" height="15" fill="rgb(229,123,31)"/><text x="1081.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.43%)</title><rect x="1083" y="340" width="5" height="15" fill="rgb(209,34,0)"/><text x="1086.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.43%)</title><rect x="1083" y="356" width="5" height="15" fill="rgb(233,79,31)"/><text x="1086.00" y="366.50"></text></g><g><title>0x7f4d3b29f902 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="1083" y="372" width="5" height="15" fill="rgb(213,16,31)"/><text x="1086.00" y="382.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (95 samples, 40.77%)</title><rect x="617" y="212" width="481" height="15" fill="rgb(250,13,48)"/><text x="620.00" y="222.50">apply_async (joblib/_parallel_backends.py:201)</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (93 samples, 39.91%)</title><rect x="627" y="228" width="471" height="15" fill="rgb(245,177,18)"/><text x="630.00" y="238.50">__init__ (joblib/_parallel_backends.py:582)</text></g><g><title>__call__ (joblib/parallel.py:256) (86 samples, 36.91%)</title><rect x="663" y="244" width="435" height="15" fill="rgb(219,5,9)"/><text x="666.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (81 samples, 34.76%)</title><rect x="688" y="260" width="410" height="15" fill="rgb(209,46,12)"/><text x="691.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:256)</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:455) (2 samples, 0.86%)</title><rect x="1088" y="276" width="10" height="15" fill="rgb(241,192,51)"/><text x="1091.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (1 samples, 0.43%)</title><rect x="1098" y="228" width="5" height="15" fill="rgb(238,74,30)"/><text x="1101.00" y="238.50"></text></g><g><title>print_progress (joblib/parallel.py:854) (1 samples, 0.43%)</title><rect x="1103" y="244" width="5" height="15" fill="rgb(220,20,52)"/><text x="1106.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py:337) (2 samples, 0.86%)</title><rect x="1103" y="228" width="11" height="15" fill="rgb(247,151,48)"/><text x="1106.00" y="238.50"></text></g><g><title>print_progress (joblib/parallel.py:855) (1 samples, 0.43%)</title><rect x="1108" y="244" width="6" height="15" fill="rgb(251,200,26)"/><text x="1111.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py:339) (1 samples, 0.43%)</title><rect x="1114" y="228" width="5" height="15" fill="rgb(229,52,12)"/><text x="1117.00" y="238.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (100 samples, 42.92%)</title><rect x="617" y="196" width="507" height="15" fill="rgb(216,156,44)"/><text x="620.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (5 samples, 2.15%)</title><rect x="1098" y="212" width="26" height="15" fill="rgb(234,147,51)"/><text x="1101.00" y="222.50">a..</text></g><g><title>__call__ (joblib/parallel.py:340) (1 samples, 0.43%)</title><rect x="1119" y="228" width="5" height="15" fill="rgb(243,202,26)"/><text x="1122.00" y="238.50"></text></g><g><title>0x7f4d3b2c014e (libc-2.29.so) (1 samples, 0.43%)</title><rect x="1119" y="244" width="5" height="15" fill="rgb(247,147,52)"/><text x="1122.00" y="254.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (114 samples, 48.93%)</title><rect x="551" y="180" width="578" height="15" fill="rgb(230,95,5)"/><text x="554.00" y="190.50">dispatch_one_batch (joblib/parallel.py:834)</text></g><g><title>_dispatch (joblib/parallel.py:758) (1 samples, 0.43%)</title><rect x="1124" y="196" width="5" height="15" fill="rgb(223,226,9)"/><text x="1127.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (187 samples, 80.26%)</title><rect x="187" y="164" width="947" height="15" fill="rgb(211,64,21)"/><text x="190.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:835) (1 samples, 0.43%)</title><rect x="1129" y="180" width="5" height="15" fill="rgb(252,210,33)"/><text x="1132.00" y="190.50"></text></g><g><title>retrieve (joblib/parallel.py:895) (1 samples, 0.43%)</title><rect x="1134" y="180" width="5" height="15" fill="rgb(215,195,40)"/><text x="1137.00" y="190.50"></text></g><g><title>__call__ (joblib/parallel.py:1016) (2 samples, 0.86%)</title><rect x="1134" y="164" width="10" height="15" fill="rgb(237,154,42)"/><text x="1137.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:907) (1 samples, 0.43%)</title><rect x="1139" y="180" width="5" height="15" fill="rgb(241,168,15)"/><text x="1142.00" y="190.50"></text></g><g><title>__call__ (joblib/parallel.py:1021) (1 samples, 0.43%)</title><rect x="1144" y="164" width="5" height="15" fill="rgb(220,62,10)"/><text x="1147.00" y="174.50"></text></g><g><title>short_format_time (joblib/logger.py:44) (1 samples, 0.43%)</title><rect x="1144" y="180" width="5" height="15" fill="rgb(240,132,25)"/><text x="1147.00" y="190.50"></text></g><g><title>__call__ (joblib/parallel.py:1027) (1 samples, 0.43%)</title><rect x="1149" y="164" width="5" height="15" fill="rgb(239,210,29)"/><text x="1152.00" y="174.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (193 samples, 82.83%)</title><rect x="182" y="148" width="977" height="15" fill="rgb(243,165,33)"/><text x="185.00" y="158.50">predict (sklearn/ensemble/_forest.py:782)</text></g><g><title>__call__ (joblib/parallel.py:965) (1 samples, 0.43%)</title><rect x="1154" y="164" width="5" height="15" fill="rgb(219,34,9)"/><text x="1157.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:54) (198 samples, 84.98%)</title><rect x="161" y="52" width="1003" height="15" fill="rgb(243,136,6)"/><text x="164.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:53) (198 samples, 84.98%)</title><rect x="161" y="68" width="1003" height="15" fill="rgb(210,120,2)"/><text x="164.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:37) (198 samples, 84.98%)</title><rect x="161" y="84" width="1003" height="15" fill="rgb(247,65,47)"/><text x="164.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:37)</text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:31) (198 samples, 84.98%)</title><rect x="161" y="100" width="1003" height="15" fill="rgb(247,134,16)"/><text x="164.00" y="110.50">profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (198 samples, 84.98%)</title><rect x="161" y="116" width="1003" height="15" fill="rgb(210,15,21)"/><text x="164.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (198 samples, 84.98%)</title><rect x="161" y="132" width="1003" height="15" fill="rgb(213,34,9)"/><text x="164.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/ensemble/_forest.py:784) (1 samples, 0.43%)</title><rect x="1159" y="148" width="5" height="15" fill="rgb(219,89,43)"/><text x="1162.00" y="158.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.43%)</title><rect x="1159" y="164" width="5" height="15" fill="rgb(225,49,45)"/><text x="1162.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.43%)</title><rect x="1159" y="180" width="5" height="15" fill="rgb(236,0,43)"/><text x="1162.00" y="190.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1318) (1 samples, 0.43%)</title><rect x="1159" y="196" width="5" height="15" fill="rgb(217,207,33)"/><text x="1162.00" y="206.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.43%)</title><rect x="1164" y="548" width="5" height="15" fill="rgb(214,120,51)"/><text x="1167.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.43%)</title><rect x="1164" y="564" width="5" height="15" fill="rgb(212,45,14)"/><text x="1167.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py:901) (1 samples, 0.43%)</title><rect x="1164" y="580" width="5" height="15" fill="rgb(231,65,29)"/><text x="1167.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.43%)</title><rect x="1164" y="596" width="5" height="15" fill="rgb(243,181,23)"/><text x="1167.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.43%)</title><rect x="1164" y="612" width="5" height="15" fill="rgb(211,195,28)"/><text x="1167.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.43%)</title><rect x="1164" y="628" width="5" height="15" fill="rgb(241,90,38)"/><text x="1167.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.43%)</title><rect x="1164" y="644" width="5" height="15" fill="rgb(249,201,33)"/><text x="1167.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.43%)</title><rect x="1164" y="660" width="5" height="15" fill="rgb(249,69,22)"/><text x="1167.00" y="670.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.43%)</title><rect x="1164" y="676" width="5" height="15" fill="rgb(233,19,20)"/><text x="1167.00" y="686.50"></text></g><g><title>parse_if (jinja2/parser.py:212) (1 samples, 0.43%)</title><rect x="1164" y="692" width="5" height="15" fill="rgb(226,88,12)"/><text x="1167.00" y="702.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.43%)</title><rect x="1164" y="708" width="5" height="15" fill="rgb(224,151,14)"/><text x="1167.00" y="718.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.43%)</title><rect x="1164" y="724" width="5" height="15" fill="rgb(214,209,1)"/><text x="1167.00" y="734.50"></text></g><g><title>parse_statement (jinja2/parser.py:126) (1 samples, 0.43%)</title><rect x="1164" y="740" width="5" height="15" fill="rgb(250,16,23)"/><text x="1167.00" y="750.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (2 samples, 0.86%)</title><rect x="1164" y="164" width="10" height="15" fill="rgb(237,1,45)"/><text x="1167.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (2 samples, 0.86%)</title><rect x="1164" y="180" width="10" height="15" fill="rgb(226,118,44)"/><text x="1167.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (2 samples, 0.86%)</title><rect x="1164" y="196" width="10" height="15" fill="rgb(251,15,16)"/><text x="1167.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.86%)</title><rect x="1164" y="212" width="10" height="15" fill="rgb(215,156,17)"/><text x="1167.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.86%)</title><rect x="1164" y="228" width="10" height="15" fill="rgb(234,41,46)"/><text x="1167.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.86%)</title><rect x="1164" y="244" width="10" height="15" fill="rgb(241,47,51)"/><text x="1167.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.86%)</title><rect x="1164" y="260" width="10" height="15" fill="rgb(207,76,25)"/><text x="1167.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.86%)</title><rect x="1164" y="276" width="10" height="15" fill="rgb(248,204,16)"/><text x="1167.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (2 samples, 0.86%)</title><rect x="1164" y="292" width="10" height="15" fill="rgb(249,43,47)"/><text x="1167.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.86%)</title><rect x="1164" y="308" width="10" height="15" fill="rgb(224,186,16)"/><text x="1167.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.86%)</title><rect x="1164" y="324" width="10" height="15" fill="rgb(245,159,50)"/><text x="1167.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.86%)</title><rect x="1164" y="340" width="10" height="15" fill="rgb(249,121,37)"/><text x="1167.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.86%)</title><rect x="1164" y="356" width="10" height="15" fill="rgb(253,190,37)"/><text x="1167.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.86%)</title><rect x="1164" y="372" width="10" height="15" fill="rgb(251,176,25)"/><text x="1167.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (2 samples, 0.86%)</title><rect x="1164" y="388" width="10" height="15" fill="rgb(245,112,25)"/><text x="1167.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.86%)</title><rect x="1164" y="404" width="10" height="15" fill="rgb(235,116,26)"/><text x="1167.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.86%)</title><rect x="1164" y="420" width="10" height="15" fill="rgb(229,209,4)"/><text x="1167.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.86%)</title><rect x="1164" y="436" width="10" height="15" fill="rgb(229,97,45)"/><text x="1167.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.86%)</title><rect x="1164" y="452" width="10" height="15" fill="rgb(236,225,27)"/><text x="1167.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.86%)</title><rect x="1164" y="468" width="10" height="15" fill="rgb(215,130,50)"/><text x="1167.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (2 samples, 0.86%)</title><rect x="1164" y="484" width="10" height="15" fill="rgb(247,163,23)"/><text x="1167.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (2 samples, 0.86%)</title><rect x="1164" y="500" width="10" height="15" fill="rgb(254,39,4)"/><text x="1167.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (2 samples, 0.86%)</title><rect x="1164" y="516" width="10" height="15" fill="rgb(243,166,42)"/><text x="1167.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (2 samples, 0.86%)</title><rect x="1164" y="532" width="10" height="15" fill="rgb(207,35,45)"/><text x="1167.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.43%)</title><rect x="1169" y="548" width="5" height="15" fill="rgb(216,213,13)"/><text x="1172.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.43%)</title><rect x="1169" y="564" width="5" height="15" fill="rgb(214,163,48)"/><text x="1172.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.43%)</title><rect x="1169" y="580" width="5" height="15" fill="rgb(249,185,0)"/><text x="1172.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.43%)</title><rect x="1169" y="596" width="5" height="15" fill="rgb(228,107,50)"/><text x="1172.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.43%)</title><rect x="1169" y="612" width="5" height="15" fill="rgb(224,201,8)"/><text x="1172.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.43%)</title><rect x="1169" y="628" width="5" height="15" fill="rgb(230,77,32)"/><text x="1172.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.43%)</title><rect x="1169" y="644" width="5" height="15" fill="rgb(215,179,52)"/><text x="1172.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py:1122) (1 samples, 0.43%)</title><rect x="1169" y="660" width="5" height="15" fill="rgb(205,170,23)"/><text x="1172.00" y="670.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.43%)</title><rect x="1169" y="676" width="5" height="15" fill="rgb(226,224,26)"/><text x="1172.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.43%)</title><rect x="1169" y="692" width="5" height="15" fill="rgb(231,98,26)"/><text x="1172.00" y="702.50"></text></g><g><title>visit_If (jinja2/compiler.py:1157) (1 samples, 0.43%)</title><rect x="1169" y="708" width="5" height="15" fill="rgb(237,172,30)"/><text x="1172.00" y="718.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.43%)</title><rect x="1169" y="724" width="5" height="15" fill="rgb(218,210,14)"/><text x="1172.00" y="734.50"></text></g><g><title>new_func (jinja2/compiler.py:67) (1 samples, 0.43%)</title><rect x="1169" y="740" width="5" height="15" fill="rgb(223,87,20)"/><text x="1172.00" y="750.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:61) (3 samples, 1.29%)</title><rect x="1164" y="52" width="15" height="15" fill="rgb(229,122,13)"/><text x="1167.00" y="62.50"></text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:60) (3 samples, 1.29%)</title><rect x="1164" y="68" width="15" height="15" fill="rgb(251,138,54)"/><text x="1167.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:36) (3 samples, 1.29%)</title><rect x="1164" y="84" width="15" height="15" fill="rgb(239,161,41)"/><text x="1167.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (3 samples, 1.29%)</title><rect x="1164" y="100" width="15" height="15" fill="rgb(244,118,0)"/><text x="1167.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (3 samples, 1.29%)</title><rect x="1164" y="116" width="15" height="15" fill="rgb(249,177,25)"/><text x="1167.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (3 samples, 1.29%)</title><rect x="1164" y="132" width="15" height="15" fill="rgb(213,205,34)"/><text x="1167.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (3 samples, 1.29%)</title><rect x="1164" y="148" width="15" height="15" fill="rgb(221,126,41)"/><text x="1167.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:90) (1 samples, 0.43%)</title><rect x="1174" y="164" width="5" height="15" fill="rgb(223,137,34)"/><text x="1177.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py:264) (1 samples, 0.43%)</title><rect x="1174" y="180" width="5" height="15" fill="rgb(239,82,54)"/><text x="1177.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py:186) (1 samples, 0.43%)</title><rect x="1174" y="196" width="5" height="15" fill="rgb(233,125,15)"/><text x="1177.00" y="206.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py:162) (1 samples, 0.43%)</title><rect x="1174" y="212" width="5" height="15" fill="rgb(208,24,37)"/><text x="1177.00" y="222.50"></text></g><g><title>_numpy_array (mlprodict/onnxrt/onnx2py_helper.py:24) (1 samples, 0.43%)</title><rect x="1174" y="228" width="5" height="15" fill="rgb(228,53,18)"/><text x="1177.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.43%)</title><rect x="1174" y="244" width="5" height="15" fill="rgb(229,157,9)"/><text x="1177.00" y="254.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.43%)</title><rect x="1174" y="260" width="5" height="15" fill="rgb(207,169,7)"/><text x="1177.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.43%)</title><rect x="1174" y="276" width="5" height="15" fill="rgb(215,11,14)"/><text x="1177.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (1 samples, 0.43%)</title><rect x="1174" y="292" width="5" height="15" fill="rgb(228,212,15)"/><text x="1177.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:883) (1 samples, 0.43%)</title><rect x="1174" y="308" width="5" height="15" fill="rgb(242,175,0)"/><text x="1177.00" y="318.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (1 samples, 0.43%)</title><rect x="1179" y="132" width="5" height="15" fill="rgb(225,16,42)"/><text x="1182.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.43%)</title><rect x="1179" y="148" width="5" height="15" fill="rgb(253,94,27)"/><text x="1182.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (1 samples, 0.43%)</title><rect x="1179" y="164" width="5" height="15" fill="rgb(247,32,42)"/><text x="1182.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (1 samples, 0.43%)</title><rect x="1179" y="180" width="5" height="15" fill="rgb(238,48,31)"/><text x="1182.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (1 samples, 0.43%)</title><rect x="1179" y="196" width="5" height="15" fill="rgb(247,26,20)"/><text x="1182.00" y="206.50"></text></g><g><title>0x7f4cfb2ddff9 (?) (1 samples, 0.43%)</title><rect x="1179" y="212" width="5" height="15" fill="rgb(207,196,45)"/><text x="1182.00" y="222.50"></text></g><g><title>0x7f4cfb2d8ef6 (?) (1 samples, 0.43%)</title><rect x="1179" y="228" width="5" height="15" fill="rgb(239,14,14)"/><text x="1182.00" y="238.50"></text></g><g><title>0x7f4cfb2cd962 (?) (1 samples, 0.43%)</title><rect x="1179" y="244" width="5" height="15" fill="rgb(233,118,15)"/><text x="1182.00" y="254.50"></text></g><g><title>0x7f4cfb3017a7 (?) (1 samples, 0.43%)</title><rect x="1179" y="260" width="5" height="15" fill="rgb(226,29,17)"/><text x="1182.00" y="270.50"></text></g><g><title>0x7f4cfb301379 (?) (1 samples, 0.43%)</title><rect x="1179" y="276" width="5" height="15" fill="rgb(206,161,44)"/><text x="1182.00" y="286.50"></text></g><g><title>0x7f4cfb75f8b8 (?) (1 samples, 0.43%)</title><rect x="1179" y="292" width="5" height="15" fill="rgb(254,85,40)"/><text x="1182.00" y="302.50"></text></g><g><title>0x7f4cfb75dc7f (?) (1 samples, 0.43%)</title><rect x="1179" y="308" width="5" height="15" fill="rgb(210,150,28)"/><text x="1182.00" y="318.50"></text></g><g><title>0x7f4cfb77099c (?) (1 samples, 0.43%)</title><rect x="1179" y="324" width="5" height="15" fill="rgb(225,209,40)"/><text x="1182.00" y="334.50"></text></g><g><title>0x7f4cfb497dc2 (?) (1 samples, 0.43%)</title><rect x="1179" y="340" width="5" height="15" fill="rgb(212,201,33)"/><text x="1182.00" y="350.50"></text></g><g><title>0x7f4cfb4975ce (?) (1 samples, 0.43%)</title><rect x="1179" y="356" width="5" height="15" fill="rgb(227,47,38)"/><text x="1182.00" y="366.50"></text></g><g><title>all (233 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(229,184,51)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:68) (2 samples, 0.86%)</title><rect x="1179" y="52" width="11" height="15" fill="rgb(230,184,7)"/><text x="1182.00" y="62.50"></text></g><g><title>profile_ort (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:67) (2 samples, 0.86%)</title><rect x="1179" y="68" width="11" height="15" fill="rgb(250,16,21)"/><text x="1182.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:37) (2 samples, 0.86%)</title><rect x="1179" y="84" width="11" height="15" fill="rgb(212,11,51)"/><text x="1182.00" y="94.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:31) (2 samples, 0.86%)</title><rect x="1179" y="100" width="11" height="15" fill="rgb(216,23,19)"/><text x="1182.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.86%)</title><rect x="1179" y="116" width="11" height="15" fill="rgb(216,71,36)"/><text x="1182.00" y="126.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.43%)</title><rect x="1184" y="132" width="6" height="15" fill="rgb(249,118,3)"/><text x="1187.00" y="142.50"></text></g></g></svg>