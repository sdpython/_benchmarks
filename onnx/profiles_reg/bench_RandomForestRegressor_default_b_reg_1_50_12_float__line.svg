<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1766" onload="init(evt)" viewBox="0 0 1200 1766" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1766" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1749.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1749.00"> </text><g id="frames"><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.44%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(234,140,24)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.44%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(236,228,25)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.44%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(224,27,32)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.44%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(238,99,2)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.44%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(246,227,10)"/><text x="13.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.44%)</title><rect x="10" y="932" width="5" height="15" fill="rgb(232,145,28)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.44%)</title><rect x="10" y="948" width="5" height="15" fill="rgb(226,193,6)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.44%)</title><rect x="10" y="964" width="5" height="15" fill="rgb(235,87,1)"/><text x="13.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.44%)</title><rect x="10" y="980" width="5" height="15" fill="rgb(250,112,33)"/><text x="13.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.44%)</title><rect x="10" y="996" width="5" height="15" fill="rgb(218,79,51)"/><text x="13.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:353) (1 samples, 0.44%)</title><rect x="10" y="1012" width="5" height="15" fill="rgb(209,198,27)"/><text x="13.00" y="1022.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.44%)</title><rect x="15" y="916" width="5" height="15" fill="rgb(228,38,34)"/><text x="18.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.44%)</title><rect x="15" y="932" width="5" height="15" fill="rgb(225,134,3)"/><text x="18.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.44%)</title><rect x="15" y="948" width="5" height="15" fill="rgb(210,52,15)"/><text x="18.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1388) (1 samples, 0.44%)</title><rect x="15" y="964" width="5" height="15" fill="rgb(254,195,5)"/><text x="18.00" y="974.50"></text></g><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;:102) (1 samples, 0.44%)</title><rect x="15" y="980" width="5" height="15" fill="rgb(233,119,17)"/><text x="18.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.44%)</title><rect x="15" y="996" width="5" height="15" fill="rgb(245,64,1)"/><text x="18.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.44%)</title><rect x="15" y="1012" width="5" height="15" fill="rgb(239,99,16)"/><text x="18.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.44%)</title><rect x="15" y="1028" width="5" height="15" fill="rgb(217,17,21)"/><text x="18.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.44%)</title><rect x="15" y="1044" width="5" height="15" fill="rgb(218,77,10)"/><text x="18.00" y="1054.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.88%)</title><rect x="15" y="852" width="10" height="15" fill="rgb(223,56,50)"/><text x="18.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.88%)</title><rect x="15" y="868" width="10" height="15" fill="rgb(222,93,5)"/><text x="18.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.88%)</title><rect x="15" y="884" width="10" height="15" fill="rgb(246,167,46)"/><text x="18.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.88%)</title><rect x="15" y="900" width="10" height="15" fill="rgb(252,75,22)"/><text x="18.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2203) (1 samples, 0.44%)</title><rect x="20" y="916" width="5" height="15" fill="rgb(228,217,29)"/><text x="23.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.44%)</title><rect x="25" y="900" width="5" height="15" fill="rgb(228,199,40)"/><text x="28.00" y="910.50"></text></g><g><title>isdir (genericpath.py:42) (1 samples, 0.44%)</title><rect x="25" y="916" width="5" height="15" fill="rgb(229,120,24)"/><text x="28.00" y="926.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.44%)</title><rect x="25" y="932" width="5" height="15" fill="rgb(225,116,14)"/><text x="28.00" y="942.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2130) (1 samples, 0.44%)</title><rect x="30" y="900" width="5" height="15" fill="rgb(246,49,21)"/><text x="33.00" y="910.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:1935) (1 samples, 0.44%)</title><rect x="30" y="916" width="5" height="15" fill="rgb(241,65,52)"/><text x="33.00" y="926.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 1.32%)</title><rect x="25" y="868" width="16" height="15" fill="rgb(250,37,3)"/><text x="28.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (3 samples, 1.32%)</title><rect x="25" y="884" width="16" height="15" fill="rgb(245,167,8)"/><text x="28.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.44%)</title><rect x="35" y="900" width="6" height="15" fill="rgb(220,80,21)"/><text x="38.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.44%)</title><rect x="35" y="916" width="6" height="15" fill="rgb(239,198,38)"/><text x="38.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.44%)</title><rect x="35" y="932" width="6" height="15" fill="rgb(206,222,36)"/><text x="38.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.44%)</title><rect x="35" y="948" width="6" height="15" fill="rgb(235,134,3)"/><text x="38.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.44%)</title><rect x="35" y="964" width="6" height="15" fill="rgb(232,69,6)"/><text x="38.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.44%)</title><rect x="35" y="980" width="6" height="15" fill="rgb(210,198,15)"/><text x="38.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.44%)</title><rect x="35" y="996" width="6" height="15" fill="rgb(206,23,43)"/><text x="38.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.44%)</title><rect x="35" y="1012" width="6" height="15" fill="rgb(225,120,30)"/><text x="38.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (7 samples, 3.07%)</title><rect x="10" y="820" width="36" height="15" fill="rgb(225,111,51)"/><text x="13.00" y="830.50">&lt;mo..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (7 samples, 3.07%)</title><rect x="10" y="836" width="36" height="15" fill="rgb(243,77,12)"/><text x="13.00" y="846.50">_ca..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (4 samples, 1.75%)</title><rect x="25" y="852" width="21" height="15" fill="rgb(243,194,51)"/><text x="28.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.44%)</title><rect x="41" y="868" width="5" height="15" fill="rgb(217,60,43)"/><text x="44.00" y="878.50"></text></g><g><title>add (pkg_resources/__init__.py:704) (1 samples, 0.44%)</title><rect x="41" y="884" width="5" height="15" fill="rgb(214,164,29)"/><text x="44.00" y="894.50"></text></g><g><title>key (pkg_resources/__init__.py:2640) (1 samples, 0.44%)</title><rect x="41" y="900" width="5" height="15" fill="rgb(250,105,22)"/><text x="44.00" y="910.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:2) (8 samples, 3.51%)</title><rect x="10" y="148" width="41" height="15" fill="rgb(241,199,5)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.51%)</title><rect x="10" y="164" width="41" height="15" fill="rgb(241,38,1)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 3.51%)</title><rect x="10" y="180" width="41" height="15" fill="rgb(240,133,22)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.51%)</title><rect x="10" y="196" width="41" height="15" fill="rgb(208,125,47)"/><text x="13.00" y="206.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.51%)</title><rect x="10" y="212" width="41" height="15" fill="rgb(209,58,8)"/><text x="13.00" y="222.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.51%)</title><rect x="10" y="228" width="41" height="15" fill="rgb(243,171,36)"/><text x="13.00" y="238.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.51%)</title><rect x="10" y="244" width="41" height="15" fill="rgb(237,77,33)"/><text x="13.00" y="254.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.51%)</title><rect x="10" y="260" width="41" height="15" fill="rgb(226,185,1)"/><text x="13.00" y="270.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.51%)</title><rect x="10" y="276" width="41" height="15" fill="rgb(244,97,45)"/><text x="13.00" y="286.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (8 samples, 3.51%)</title><rect x="10" y="292" width="41" height="15" fill="rgb(209,153,40)"/><text x="13.00" y="302.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.51%)</title><rect x="10" y="308" width="41" height="15" fill="rgb(243,105,48)"/><text x="13.00" y="318.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.51%)</title><rect x="10" y="324" width="41" height="15" fill="rgb(243,157,24)"/><text x="13.00" y="334.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.51%)</title><rect x="10" y="340" width="41" height="15" fill="rgb(207,200,3)"/><text x="13.00" y="350.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.51%)</title><rect x="10" y="356" width="41" height="15" fill="rgb(229,60,9)"/><text x="13.00" y="366.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.51%)</title><rect x="10" y="372" width="41" height="15" fill="rgb(214,26,47)"/><text x="13.00" y="382.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (8 samples, 3.51%)</title><rect x="10" y="388" width="41" height="15" fill="rgb(236,182,45)"/><text x="13.00" y="398.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.51%)</title><rect x="10" y="404" width="41" height="15" fill="rgb(250,163,53)"/><text x="13.00" y="414.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.51%)</title><rect x="10" y="420" width="41" height="15" fill="rgb(219,10,41)"/><text x="13.00" y="430.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.51%)</title><rect x="10" y="436" width="41" height="15" fill="rgb(215,161,29)"/><text x="13.00" y="446.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.51%)</title><rect x="10" y="452" width="41" height="15" fill="rgb(230,128,46)"/><text x="13.00" y="462.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.51%)</title><rect x="10" y="468" width="41" height="15" fill="rgb(249,108,33)"/><text x="13.00" y="478.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (8 samples, 3.51%)</title><rect x="10" y="484" width="41" height="15" fill="rgb(243,43,25)"/><text x="13.00" y="494.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.51%)</title><rect x="10" y="500" width="41" height="15" fill="rgb(214,65,49)"/><text x="13.00" y="510.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.51%)</title><rect x="10" y="516" width="41" height="15" fill="rgb(243,90,22)"/><text x="13.00" y="526.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.51%)</title><rect x="10" y="532" width="41" height="15" fill="rgb(219,202,36)"/><text x="13.00" y="542.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.51%)</title><rect x="10" y="548" width="41" height="15" fill="rgb(236,83,2)"/><text x="13.00" y="558.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.51%)</title><rect x="10" y="564" width="41" height="15" fill="rgb(216,136,51)"/><text x="13.00" y="574.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (8 samples, 3.51%)</title><rect x="10" y="580" width="41" height="15" fill="rgb(230,110,40)"/><text x="13.00" y="590.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.51%)</title><rect x="10" y="596" width="41" height="15" fill="rgb(227,25,35)"/><text x="13.00" y="606.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 3.51%)</title><rect x="10" y="612" width="41" height="15" fill="rgb(230,150,49)"/><text x="13.00" y="622.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.51%)</title><rect x="10" y="628" width="41" height="15" fill="rgb(209,220,9)"/><text x="13.00" y="638.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.51%)</title><rect x="10" y="644" width="41" height="15" fill="rgb(251,99,3)"/><text x="13.00" y="654.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.51%)</title><rect x="10" y="660" width="41" height="15" fill="rgb(229,167,20)"/><text x="13.00" y="670.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.51%)</title><rect x="10" y="676" width="41" height="15" fill="rgb(207,39,45)"/><text x="13.00" y="686.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.51%)</title><rect x="10" y="692" width="41" height="15" fill="rgb(220,137,7)"/><text x="13.00" y="702.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.51%)</title><rect x="10" y="708" width="41" height="15" fill="rgb(211,71,46)"/><text x="13.00" y="718.50">_ca..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (8 samples, 3.51%)</title><rect x="10" y="724" width="41" height="15" fill="rgb(210,194,18)"/><text x="13.00" y="734.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.51%)</title><rect x="10" y="740" width="41" height="15" fill="rgb(228,195,28)"/><text x="13.00" y="750.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.51%)</title><rect x="10" y="756" width="41" height="15" fill="rgb(228,161,25)"/><text x="13.00" y="766.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.51%)</title><rect x="10" y="772" width="41" height="15" fill="rgb(254,8,31)"/><text x="13.00" y="782.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.51%)</title><rect x="10" y="788" width="41" height="15" fill="rgb(246,149,47)"/><text x="13.00" y="798.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.51%)</title><rect x="10" y="804" width="41" height="15" fill="rgb(219,115,0)"/><text x="13.00" y="814.50">_ca..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:83) (1 samples, 0.44%)</title><rect x="46" y="820" width="5" height="15" fill="rgb(211,66,51)"/><text x="49.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="46" y="836" width="5" height="15" fill="rgb(242,46,21)"/><text x="49.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="46" y="852" width="5" height="15" fill="rgb(208,63,33)"/><text x="49.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="46" y="868" width="5" height="15" fill="rgb(246,212,20)"/><text x="49.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="46" y="884" width="5" height="15" fill="rgb(228,58,34)"/><text x="49.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="46" y="900" width="5" height="15" fill="rgb(221,55,23)"/><text x="49.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py:275) (1 samples, 0.44%)</title><rect x="46" y="916" width="5" height="15" fill="rgb(205,177,35)"/><text x="49.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py:373) (1 samples, 0.44%)</title><rect x="46" y="932" width="5" height="15" fill="rgb(214,90,17)"/><text x="49.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.44%)</title><rect x="46" y="948" width="5" height="15" fill="rgb(211,0,10)"/><text x="49.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.44%)</title><rect x="46" y="964" width="5" height="15" fill="rgb(241,35,35)"/><text x="49.00" y="974.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.44%)</title><rect x="46" y="980" width="5" height="15" fill="rgb(215,126,54)"/><text x="49.00" y="990.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.44%)</title><rect x="46" y="996" width="5" height="15" fill="rgb(238,24,2)"/><text x="49.00" y="1006.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.44%)</title><rect x="46" y="1012" width="5" height="15" fill="rgb(249,74,0)"/><text x="49.00" y="1022.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.44%)</title><rect x="46" y="1028" width="5" height="15" fill="rgb(218,27,12)"/><text x="49.00" y="1038.50"></text></g><g><title>_compile (sre_compile.py:156) (1 samples, 0.44%)</title><rect x="46" y="1044" width="5" height="15" fill="rgb(244,214,33)"/><text x="49.00" y="1054.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.44%)</title><rect x="46" y="1060" width="5" height="15" fill="rgb(216,215,29)"/><text x="49.00" y="1070.50"></text></g><g><title>_compile (sre_compile.py:156) (1 samples, 0.44%)</title><rect x="46" y="1076" width="5" height="15" fill="rgb(229,42,43)"/><text x="49.00" y="1086.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.44%)</title><rect x="46" y="1092" width="5" height="15" fill="rgb(237,35,16)"/><text x="49.00" y="1102.50"></text></g><g><title>_compile (sre_compile.py:120) (1 samples, 0.44%)</title><rect x="46" y="1108" width="5" height="15" fill="rgb(228,178,31)"/><text x="49.00" y="1118.50"></text></g><g><title>_optimize_charset (sre_compile.py:396) (1 samples, 0.44%)</title><rect x="46" y="1124" width="5" height="15" fill="rgb(218,167,17)"/><text x="49.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.44%)</title><rect x="51" y="180" width="5" height="15" fill="rgb(248,215,34)"/><text x="54.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="51" y="196" width="5" height="15" fill="rgb(214,206,7)"/><text x="54.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="51" y="212" width="5" height="15" fill="rgb(208,70,54)"/><text x="54.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="51" y="228" width="5" height="15" fill="rgb(241,39,30)"/><text x="54.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="51" y="244" width="5" height="15" fill="rgb(209,3,24)"/><text x="54.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="51" y="260" width="5" height="15" fill="rgb(246,88,39)"/><text x="54.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="51" y="276" width="5" height="15" fill="rgb(253,130,31)"/><text x="54.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.44%)</title><rect x="51" y="292" width="5" height="15" fill="rgb(215,195,22)"/><text x="54.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="51" y="308" width="5" height="15" fill="rgb(209,61,27)"/><text x="54.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="51" y="324" width="5" height="15" fill="rgb(254,40,16)"/><text x="54.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="51" y="340" width="5" height="15" fill="rgb(241,147,38)"/><text x="54.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="51" y="356" width="5" height="15" fill="rgb(220,164,39)"/><text x="54.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="51" y="372" width="5" height="15" fill="rgb(238,212,53)"/><text x="54.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.44%)</title><rect x="51" y="388" width="5" height="15" fill="rgb(206,179,40)"/><text x="54.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="51" y="404" width="5" height="15" fill="rgb(215,201,41)"/><text x="54.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="51" y="420" width="5" height="15" fill="rgb(237,166,10)"/><text x="54.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="51" y="436" width="5" height="15" fill="rgb(247,196,33)"/><text x="54.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="51" y="452" width="5" height="15" fill="rgb(234,157,3)"/><text x="54.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="51" y="468" width="5" height="15" fill="rgb(247,163,14)"/><text x="54.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.44%)</title><rect x="51" y="484" width="5" height="15" fill="rgb(240,215,25)"/><text x="54.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="51" y="500" width="5" height="15" fill="rgb(248,124,44)"/><text x="54.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="51" y="516" width="5" height="15" fill="rgb(218,15,35)"/><text x="54.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="51" y="532" width="5" height="15" fill="rgb(205,188,13)"/><text x="54.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="51" y="548" width="5" height="15" fill="rgb(253,172,16)"/><text x="54.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="51" y="564" width="5" height="15" fill="rgb(216,24,41)"/><text x="54.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.44%)</title><rect x="51" y="580" width="5" height="15" fill="rgb(247,141,17)"/><text x="54.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="51" y="596" width="5" height="15" fill="rgb(239,131,30)"/><text x="54.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="51" y="612" width="5" height="15" fill="rgb(224,114,33)"/><text x="54.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="51" y="628" width="5" height="15" fill="rgb(243,194,26)"/><text x="54.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="51" y="644" width="5" height="15" fill="rgb(254,110,46)"/><text x="54.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="51" y="660" width="5" height="15" fill="rgb(208,12,11)"/><text x="54.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.44%)</title><rect x="51" y="676" width="5" height="15" fill="rgb(241,157,39)"/><text x="54.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="51" y="692" width="5" height="15" fill="rgb(250,49,8)"/><text x="54.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="51" y="708" width="5" height="15" fill="rgb(210,13,36)"/><text x="54.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="51" y="724" width="5" height="15" fill="rgb(231,141,21)"/><text x="54.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="51" y="740" width="5" height="15" fill="rgb(235,57,15)"/><text x="54.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="51" y="756" width="5" height="15" fill="rgb(249,163,2)"/><text x="54.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:183) (1 samples, 0.44%)</title><rect x="51" y="772" width="5" height="15" fill="rgb(241,216,47)"/><text x="54.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.44%)</title><rect x="51" y="788" width="5" height="15" fill="rgb(222,228,12)"/><text x="54.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="51" y="804" width="5" height="15" fill="rgb(212,188,47)"/><text x="54.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="51" y="820" width="5" height="15" fill="rgb(245,58,8)"/><text x="54.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="51" y="836" width="5" height="15" fill="rgb(246,75,36)"/><text x="54.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="51" y="852" width="5" height="15" fill="rgb(207,1,30)"/><text x="54.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="51" y="868" width="5" height="15" fill="rgb(251,13,54)"/><text x="54.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="51" y="884" width="5" height="15" fill="rgb(212,34,39)"/><text x="54.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/mstats_basic.py:2375) (1 samples, 0.44%)</title><rect x="51" y="900" width="5" height="15" fill="rgb(219,136,20)"/><text x="54.00" y="910.50"></text></g><g><title>namedtuple (collections/__init__.py:387) (1 samples, 0.44%)</title><rect x="51" y="916" width="5" height="15" fill="rgb(244,153,8)"/><text x="54.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:4) (2 samples, 0.88%)</title><rect x="51" y="148" width="10" height="15" fill="rgb(225,58,25)"/><text x="54.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="51" y="164" width="10" height="15" fill="rgb(246,133,48)"/><text x="54.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="56" y="180" width="5" height="15" fill="rgb(253,64,51)"/><text x="59.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="56" y="196" width="5" height="15" fill="rgb(236,86,44)"/><text x="59.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="56" y="212" width="5" height="15" fill="rgb(247,113,33)"/><text x="59.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="56" y="228" width="5" height="15" fill="rgb(223,73,34)"/><text x="59.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:17) (1 samples, 0.44%)</title><rect x="56" y="244" width="5" height="15" fill="rgb(242,86,27)"/><text x="59.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="56" y="260" width="5" height="15" fill="rgb(215,24,36)"/><text x="59.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="56" y="276" width="5" height="15" fill="rgb(252,52,44)"/><text x="59.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="56" y="292" width="5" height="15" fill="rgb(253,127,11)"/><text x="59.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="56" y="308" width="5" height="15" fill="rgb(211,167,24)"/><text x="59.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="56" y="324" width="5" height="15" fill="rgb(234,186,43)"/><text x="59.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_gb.py:33) (1 samples, 0.44%)</title><rect x="56" y="340" width="5" height="15" fill="rgb(236,220,11)"/><text x="59.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="56" y="356" width="5" height="15" fill="rgb(211,91,9)"/><text x="59.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="56" y="372" width="5" height="15" fill="rgb(221,118,50)"/><text x="59.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="56" y="388" width="5" height="15" fill="rgb(254,41,27)"/><text x="59.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.44%)</title><rect x="56" y="404" width="5" height="15" fill="rgb(240,73,46)"/><text x="59.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="56" y="420" width="5" height="15" fill="rgb(234,133,29)"/><text x="59.00" y="430.50"></text></g><g><title>0x7fed14482463 (?) (1 samples, 0.44%)</title><rect x="56" y="436" width="5" height="15" fill="rgb(247,58,44)"/><text x="59.00" y="446.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.44%)</title><rect x="56" y="452" width="5" height="15" fill="rgb(214,81,18)"/><text x="59.00" y="462.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.44%)</title><rect x="61" y="484" width="5" height="15" fill="rgb(216,84,32)"/><text x="64.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="61" y="500" width="5" height="15" fill="rgb(229,40,48)"/><text x="64.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="61" y="516" width="5" height="15" fill="rgb(222,10,39)"/><text x="64.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="61" y="532" width="5" height="15" fill="rgb(243,218,23)"/><text x="64.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="61" y="548" width="5" height="15" fill="rgb(238,219,15)"/><text x="64.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="61" y="564" width="5" height="15" fill="rgb(217,179,29)"/><text x="64.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.44%)</title><rect x="61" y="580" width="5" height="15" fill="rgb(215,66,18)"/><text x="64.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="61" y="596" width="5" height="15" fill="rgb(207,95,26)"/><text x="64.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="61" y="612" width="5" height="15" fill="rgb(208,109,16)"/><text x="64.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="61" y="628" width="5" height="15" fill="rgb(248,159,34)"/><text x="64.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="61" y="644" width="5" height="15" fill="rgb(216,81,20)"/><text x="64.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="61" y="660" width="5" height="15" fill="rgb(240,86,12)"/><text x="64.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.44%)</title><rect x="61" y="676" width="5" height="15" fill="rgb(210,161,14)"/><text x="64.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="61" y="692" width="5" height="15" fill="rgb(219,32,54)"/><text x="64.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="61" y="708" width="5" height="15" fill="rgb(216,0,47)"/><text x="64.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="61" y="724" width="5" height="15" fill="rgb(240,198,27)"/><text x="64.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="61" y="740" width="5" height="15" fill="rgb(225,226,43)"/><text x="64.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="61" y="756" width="5" height="15" fill="rgb(251,128,49)"/><text x="64.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.44%)</title><rect x="61" y="772" width="5" height="15" fill="rgb(244,57,28)"/><text x="64.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.44%)</title><rect x="61" y="788" width="5" height="15" fill="rgb(249,185,36)"/><text x="64.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="61" y="804" width="5" height="15" fill="rgb(210,80,24)"/><text x="64.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="61" y="820" width="5" height="15" fill="rgb(220,62,36)"/><text x="64.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="61" y="836" width="5" height="15" fill="rgb(212,137,47)"/><text x="64.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="61" y="852" width="5" height="15" fill="rgb(214,97,15)"/><text x="64.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="61" y="868" width="5" height="15" fill="rgb(228,189,47)"/><text x="64.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="61" y="884" width="5" height="15" fill="rgb(232,189,54)"/><text x="64.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (1 samples, 0.44%)</title><rect x="61" y="900" width="5" height="15" fill="rgb(213,21,7)"/><text x="64.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="61" y="916" width="5" height="15" fill="rgb(208,110,40)"/><text x="64.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.44%)</title><rect x="61" y="932" width="5" height="15" fill="rgb(247,224,37)"/><text x="64.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="61" y="948" width="5" height="15" fill="rgb(223,169,0)"/><text x="64.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="61" y="964" width="5" height="15" fill="rgb(219,65,23)"/><text x="64.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="61" y="980" width="5" height="15" fill="rgb(238,196,36)"/><text x="64.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="61" y="996" width="5" height="15" fill="rgb(239,208,21)"/><text x="64.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="61" y="1012" width="5" height="15" fill="rgb(244,68,29)"/><text x="64.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="61" y="1028" width="5" height="15" fill="rgb(234,41,46)"/><text x="64.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (1 samples, 0.44%)</title><rect x="61" y="1044" width="5" height="15" fill="rgb(243,211,47)"/><text x="64.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.44%)</title><rect x="61" y="1060" width="5" height="15" fill="rgb(216,135,13)"/><text x="64.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="61" y="1076" width="5" height="15" fill="rgb(225,77,47)"/><text x="64.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="61" y="1092" width="5" height="15" fill="rgb(250,182,25)"/><text x="64.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="61" y="1108" width="5" height="15" fill="rgb(231,15,23)"/><text x="64.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="61" y="1124" width="5" height="15" fill="rgb(246,175,45)"/><text x="64.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="61" y="1140" width="5" height="15" fill="rgb(225,55,13)"/><text x="64.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="61" y="1156" width="5" height="15" fill="rgb(247,215,4)"/><text x="64.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:12) (1 samples, 0.44%)</title><rect x="61" y="1172" width="5" height="15" fill="rgb(226,146,45)"/><text x="64.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.44%)</title><rect x="61" y="1188" width="5" height="15" fill="rgb(205,216,39)"/><text x="64.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="61" y="1204" width="5" height="15" fill="rgb(243,153,26)"/><text x="64.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="61" y="1220" width="5" height="15" fill="rgb(238,58,22)"/><text x="64.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="61" y="1236" width="5" height="15" fill="rgb(222,189,10)"/><text x="64.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="61" y="1252" width="5" height="15" fill="rgb(217,109,29)"/><text x="64.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="61" y="1268" width="5" height="15" fill="rgb(237,173,14)"/><text x="64.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="61" y="1284" width="5" height="15" fill="rgb(231,227,14)"/><text x="64.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py:8) (1 samples, 0.44%)</title><rect x="61" y="1300" width="5" height="15" fill="rgb(248,109,37)"/><text x="64.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="61" y="1316" width="5" height="15" fill="rgb(253,111,49)"/><text x="64.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="61" y="1332" width="5" height="15" fill="rgb(231,127,31)"/><text x="64.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="61" y="1348" width="5" height="15" fill="rgb(235,83,38)"/><text x="64.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="61" y="1364" width="5" height="15" fill="rgb(223,33,7)"/><text x="64.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="61" y="1380" width="5" height="15" fill="rgb(232,19,22)"/><text x="64.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py:18) (1 samples, 0.44%)</title><rect x="61" y="1396" width="5" height="15" fill="rgb(222,176,23)"/><text x="64.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="61" y="1412" width="5" height="15" fill="rgb(225,7,51)"/><text x="64.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="61" y="1428" width="5" height="15" fill="rgb(227,100,1)"/><text x="64.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="61" y="1444" width="5" height="15" fill="rgb(222,208,24)"/><text x="64.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="61" y="1460" width="5" height="15" fill="rgb(246,214,10)"/><text x="64.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="61" y="1476" width="5" height="15" fill="rgb(250,106,53)"/><text x="64.00" y="1486.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/extensions.py:512) (1 samples, 0.44%)</title><rect x="61" y="1492" width="5" height="15" fill="rgb(237,10,8)"/><text x="64.00" y="1502.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.88%)</title><rect x="61" y="244" width="11" height="15" fill="rgb(241,70,5)"/><text x="64.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="61" y="260" width="11" height="15" fill="rgb(208,13,47)"/><text x="64.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.88%)</title><rect x="61" y="276" width="11" height="15" fill="rgb(252,101,13)"/><text x="64.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.88%)</title><rect x="61" y="292" width="11" height="15" fill="rgb(229,115,2)"/><text x="64.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.88%)</title><rect x="61" y="308" width="11" height="15" fill="rgb(236,198,5)"/><text x="64.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="61" y="324" width="11" height="15" fill="rgb(242,186,2)"/><text x="64.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.88%)</title><rect x="61" y="340" width="11" height="15" fill="rgb(250,197,44)"/><text x="64.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="61" y="356" width="11" height="15" fill="rgb(236,20,52)"/><text x="64.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.88%)</title><rect x="61" y="372" width="11" height="15" fill="rgb(210,107,10)"/><text x="64.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="61" y="388" width="11" height="15" fill="rgb(253,134,43)"/><text x="64.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="61" y="404" width="11" height="15" fill="rgb(246,123,52)"/><text x="64.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.88%)</title><rect x="61" y="420" width="11" height="15" fill="rgb(233,127,50)"/><text x="64.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.88%)</title><rect x="61" y="436" width="11" height="15" fill="rgb(238,17,43)"/><text x="64.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.88%)</title><rect x="61" y="452" width="11" height="15" fill="rgb(216,32,14)"/><text x="64.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="61" y="468" width="11" height="15" fill="rgb(209,13,10)"/><text x="64.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.44%)</title><rect x="66" y="484" width="6" height="15" fill="rgb(207,76,10)"/><text x="69.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="66" y="500" width="6" height="15" fill="rgb(248,9,51)"/><text x="69.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="66" y="516" width="6" height="15" fill="rgb(247,229,7)"/><text x="69.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="66" y="532" width="6" height="15" fill="rgb(249,109,24)"/><text x="69.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="66" y="548" width="6" height="15" fill="rgb(247,34,15)"/><text x="69.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="66" y="564" width="6" height="15" fill="rgb(205,101,13)"/><text x="69.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.44%)</title><rect x="66" y="580" width="6" height="15" fill="rgb(254,61,30)"/><text x="69.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="66" y="596" width="6" height="15" fill="rgb(235,194,11)"/><text x="69.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.44%)</title><rect x="66" y="612" width="6" height="15" fill="rgb(228,24,48)"/><text x="69.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="66" y="628" width="6" height="15" fill="rgb(230,31,45)"/><text x="69.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="66" y="644" width="6" height="15" fill="rgb(254,133,27)"/><text x="69.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="66" y="660" width="6" height="15" fill="rgb(236,104,0)"/><text x="69.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="66" y="676" width="6" height="15" fill="rgb(245,107,49)"/><text x="69.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="66" y="692" width="6" height="15" fill="rgb(209,89,50)"/><text x="69.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="66" y="708" width="6" height="15" fill="rgb(224,51,13)"/><text x="69.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.44%)</title><rect x="66" y="724" width="6" height="15" fill="rgb(250,0,34)"/><text x="69.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="66" y="740" width="6" height="15" fill="rgb(208,214,40)"/><text x="69.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="66" y="756" width="6" height="15" fill="rgb(206,85,16)"/><text x="69.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="66" y="772" width="6" height="15" fill="rgb(235,151,23)"/><text x="69.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="66" y="788" width="6" height="15" fill="rgb(232,34,53)"/><text x="69.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="66" y="804" width="6" height="15" fill="rgb(227,6,3)"/><text x="69.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.44%)</title><rect x="66" y="820" width="6" height="15" fill="rgb(234,219,36)"/><text x="69.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="66" y="836" width="6" height="15" fill="rgb(250,12,5)"/><text x="69.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="66" y="852" width="6" height="15" fill="rgb(220,104,33)"/><text x="69.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="66" y="868" width="6" height="15" fill="rgb(209,75,0)"/><text x="69.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="66" y="884" width="6" height="15" fill="rgb(245,90,42)"/><text x="69.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="66" y="900" width="6" height="15" fill="rgb(246,19,25)"/><text x="69.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.44%)</title><rect x="66" y="916" width="6" height="15" fill="rgb(231,6,47)"/><text x="69.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="66" y="932" width="6" height="15" fill="rgb(232,33,11)"/><text x="69.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.44%)</title><rect x="66" y="948" width="6" height="15" fill="rgb(251,170,45)"/><text x="69.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="66" y="964" width="6" height="15" fill="rgb(207,167,47)"/><text x="69.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="66" y="980" width="6" height="15" fill="rgb(251,50,43)"/><text x="69.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="66" y="996" width="6" height="15" fill="rgb(238,75,46)"/><text x="69.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="66" y="1012" width="6" height="15" fill="rgb(252,16,25)"/><text x="69.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="66" y="1028" width="6" height="15" fill="rgb(207,47,33)"/><text x="69.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="66" y="1044" width="6" height="15" fill="rgb(251,75,13)"/><text x="69.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:11) (1 samples, 0.44%)</title><rect x="66" y="1060" width="6" height="15" fill="rgb(211,69,32)"/><text x="69.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="66" y="1076" width="6" height="15" fill="rgb(213,102,23)"/><text x="69.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="66" y="1092" width="6" height="15" fill="rgb(242,84,38)"/><text x="69.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="66" y="1108" width="6" height="15" fill="rgb(233,33,19)"/><text x="69.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="66" y="1124" width="6" height="15" fill="rgb(207,171,12)"/><text x="69.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="66" y="1140" width="6" height="15" fill="rgb(252,184,28)"/><text x="69.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py:6) (1 samples, 0.44%)</title><rect x="66" y="1156" width="6" height="15" fill="rgb(214,113,15)"/><text x="69.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="66" y="1172" width="6" height="15" fill="rgb(245,122,38)"/><text x="69.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="66" y="1188" width="6" height="15" fill="rgb(218,174,31)"/><text x="69.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="66" y="1204" width="6" height="15" fill="rgb(247,215,31)"/><text x="69.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.44%)</title><rect x="66" y="1220" width="6" height="15" fill="rgb(209,123,17)"/><text x="69.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.44%)</title><rect x="66" y="1236" width="6" height="15" fill="rgb(254,193,8)"/><text x="69.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.44%)</title><rect x="66" y="1252" width="6" height="15" fill="rgb(209,90,9)"/><text x="69.00" y="1262.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:11) (1 samples, 0.44%)</title><rect x="72" y="628" width="5" height="15" fill="rgb(246,63,3)"/><text x="75.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="72" y="644" width="5" height="15" fill="rgb(229,51,15)"/><text x="75.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.44%)</title><rect x="72" y="660" width="5" height="15" fill="rgb(247,228,31)"/><text x="75.00" y="670.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.44%)</title><rect x="72" y="676" width="5" height="15" fill="rgb(242,146,37)"/><text x="75.00" y="686.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.44%)</title><rect x="72" y="692" width="5" height="15" fill="rgb(244,165,5)"/><text x="75.00" y="702.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.44%)</title><rect x="72" y="708" width="5" height="15" fill="rgb(206,125,27)"/><text x="75.00" y="718.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.44%)</title><rect x="72" y="724" width="5" height="15" fill="rgb(232,225,36)"/><text x="75.00" y="734.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.44%)</title><rect x="77" y="1012" width="5" height="15" fill="rgb(213,76,33)"/><text x="80.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="77" y="1028" width="5" height="15" fill="rgb(207,187,21)"/><text x="80.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="77" y="1044" width="5" height="15" fill="rgb(215,147,50)"/><text x="80.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="77" y="1060" width="5" height="15" fill="rgb(254,186,22)"/><text x="80.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="77" y="1076" width="5" height="15" fill="rgb(236,72,12)"/><text x="80.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="77" y="1092" width="5" height="15" fill="rgb(230,22,22)"/><text x="80.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.44%)</title><rect x="77" y="1108" width="5" height="15" fill="rgb(232,83,49)"/><text x="80.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="77" y="1124" width="5" height="15" fill="rgb(220,24,32)"/><text x="80.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="77" y="1140" width="5" height="15" fill="rgb(210,218,47)"/><text x="80.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="77" y="1156" width="5" height="15" fill="rgb(234,57,30)"/><text x="80.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="77" y="1172" width="5" height="15" fill="rgb(216,219,18)"/><text x="80.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="77" y="1188" width="5" height="15" fill="rgb(249,10,6)"/><text x="80.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.44%)</title><rect x="77" y="1204" width="5" height="15" fill="rgb(254,95,46)"/><text x="80.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="77" y="1220" width="5" height="15" fill="rgb(244,210,54)"/><text x="80.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="77" y="1236" width="5" height="15" fill="rgb(237,154,1)"/><text x="80.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="77" y="1252" width="5" height="15" fill="rgb(215,175,34)"/><text x="80.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="77" y="1268" width="5" height="15" fill="rgb(249,139,6)"/><text x="80.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="77" y="1284" width="5" height="15" fill="rgb(225,169,5)"/><text x="80.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.44%)</title><rect x="77" y="1300" width="5" height="15" fill="rgb(249,26,20)"/><text x="80.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="77" y="1316" width="5" height="15" fill="rgb(231,38,19)"/><text x="80.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="77" y="1332" width="5" height="15" fill="rgb(227,130,49)"/><text x="80.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="77" y="1348" width="5" height="15" fill="rgb(209,165,15)"/><text x="80.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="77" y="1364" width="5" height="15" fill="rgb(207,219,53)"/><text x="80.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="77" y="1380" width="5" height="15" fill="rgb(205,195,45)"/><text x="80.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.44%)</title><rect x="77" y="1396" width="5" height="15" fill="rgb(246,102,30)"/><text x="80.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="77" y="1412" width="5" height="15" fill="rgb(251,183,21)"/><text x="80.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="77" y="1428" width="5" height="15" fill="rgb(220,188,28)"/><text x="80.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="77" y="1444" width="5" height="15" fill="rgb(226,221,27)"/><text x="80.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="77" y="1460" width="5" height="15" fill="rgb(208,106,22)"/><text x="80.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="77" y="1476" width="5" height="15" fill="rgb(247,46,48)"/><text x="80.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:13) (1 samples, 0.44%)</title><rect x="77" y="1492" width="5" height="15" fill="rgb(233,41,34)"/><text x="80.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.44%)</title><rect x="77" y="1508" width="5" height="15" fill="rgb(253,63,5)"/><text x="80.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="77" y="1524" width="5" height="15" fill="rgb(239,178,18)"/><text x="80.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="77" y="1540" width="5" height="15" fill="rgb(217,142,23)"/><text x="80.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="77" y="1556" width="5" height="15" fill="rgb(212,221,53)"/><text x="80.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="77" y="1572" width="5" height="15" fill="rgb(206,152,34)"/><text x="80.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="77" y="1588" width="5" height="15" fill="rgb(252,148,6)"/><text x="80.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="77" y="1604" width="5" height="15" fill="rgb(228,38,28)"/><text x="80.00" y="1614.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/converter.py:6) (1 samples, 0.44%)</title><rect x="77" y="1620" width="5" height="15" fill="rgb(207,132,12)"/><text x="80.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="77" y="1636" width="5" height="15" fill="rgb(240,114,44)"/><text x="80.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="77" y="1652" width="5" height="15" fill="rgb(218,224,28)"/><text x="80.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="77" y="1668" width="5" height="15" fill="rgb(209,92,24)"/><text x="80.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.44%)</title><rect x="77" y="1684" width="5" height="15" fill="rgb(253,182,1)"/><text x="80.00" y="1694.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.44%)</title><rect x="77" y="1700" width="5" height="15" fill="rgb(214,203,31)"/><text x="80.00" y="1710.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.44%)</title><rect x="77" y="1716" width="5" height="15" fill="rgb(233,156,31)"/><text x="80.00" y="1726.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:14) (1 samples, 0.44%)</title><rect x="82" y="1300" width="5" height="15" fill="rgb(206,7,0)"/><text x="85.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="82" y="1316" width="5" height="15" fill="rgb(231,141,24)"/><text x="85.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="82" y="1332" width="5" height="15" fill="rgb(214,151,27)"/><text x="85.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="82" y="1348" width="5" height="15" fill="rgb(208,128,22)"/><text x="85.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="82" y="1364" width="5" height="15" fill="rgb(232,80,4)"/><text x="85.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="82" y="1380" width="5" height="15" fill="rgb(242,172,32)"/><text x="85.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/category.py:56) (1 samples, 0.44%)</title><rect x="82" y="1396" width="5" height="15" fill="rgb(228,0,29)"/><text x="85.00" y="1406.50"></text></g><g><title>add_delegate_accessors (pandas/core/accessor.py:141) (1 samples, 0.44%)</title><rect x="82" y="1412" width="5" height="15" fill="rgb(227,52,48)"/><text x="85.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.44%)</title><rect x="87" y="1460" width="5" height="15" fill="rgb(217,199,29)"/><text x="90.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.44%)</title><rect x="87" y="1476" width="5" height="15" fill="rgb(253,186,6)"/><text x="90.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.44%)</title><rect x="87" y="1492" width="5" height="15" fill="rgb(219,53,22)"/><text x="90.00" y="1502.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (5 samples, 2.19%)</title><rect x="72" y="436" width="25" height="15" fill="rgb(226,154,13)"/><text x="75.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.19%)</title><rect x="72" y="452" width="25" height="15" fill="rgb(206,173,30)"/><text x="75.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.19%)</title><rect x="72" y="468" width="25" height="15" fill="rgb(226,58,13)"/><text x="75.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.19%)</title><rect x="72" y="484" width="25" height="15" fill="rgb(234,196,5)"/><text x="75.00" y="494.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.19%)</title><rect x="72" y="500" width="25" height="15" fill="rgb(229,28,0)"/><text x="75.00" y="510.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.19%)</title><rect x="72" y="516" width="25" height="15" fill="rgb(224,25,15)"/><text x="75.00" y="526.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (5 samples, 2.19%)</title><rect x="72" y="532" width="25" height="15" fill="rgb(209,208,21)"/><text x="75.00" y="542.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.19%)</title><rect x="72" y="548" width="25" height="15" fill="rgb(236,36,25)"/><text x="75.00" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.19%)</title><rect x="72" y="564" width="25" height="15" fill="rgb(223,82,15)"/><text x="75.00" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.19%)</title><rect x="72" y="580" width="25" height="15" fill="rgb(245,53,23)"/><text x="75.00" y="590.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.19%)</title><rect x="72" y="596" width="25" height="15" fill="rgb(249,25,46)"/><text x="75.00" y="606.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.19%)</title><rect x="72" y="612" width="25" height="15" fill="rgb(240,205,32)"/><text x="75.00" y="622.50">_..</text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (4 samples, 1.75%)</title><rect x="77" y="628" width="20" height="15" fill="rgb(221,215,27)"/><text x="80.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.75%)</title><rect x="77" y="644" width="20" height="15" fill="rgb(240,85,34)"/><text x="80.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.75%)</title><rect x="77" y="660" width="20" height="15" fill="rgb(230,145,31)"/><text x="80.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.75%)</title><rect x="77" y="676" width="20" height="15" fill="rgb(249,216,24)"/><text x="80.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.75%)</title><rect x="77" y="692" width="20" height="15" fill="rgb(221,176,36)"/><text x="80.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.75%)</title><rect x="77" y="708" width="20" height="15" fill="rgb(230,103,54)"/><text x="80.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (4 samples, 1.75%)</title><rect x="77" y="724" width="20" height="15" fill="rgb(241,124,33)"/><text x="80.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.75%)</title><rect x="77" y="740" width="20" height="15" fill="rgb(210,103,54)"/><text x="80.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.75%)</title><rect x="77" y="756" width="20" height="15" fill="rgb(232,68,48)"/><text x="80.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.75%)</title><rect x="77" y="772" width="20" height="15" fill="rgb(228,16,53)"/><text x="80.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.75%)</title><rect x="77" y="788" width="20" height="15" fill="rgb(250,30,45)"/><text x="80.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.75%)</title><rect x="77" y="804" width="20" height="15" fill="rgb(226,35,46)"/><text x="80.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (4 samples, 1.75%)</title><rect x="77" y="820" width="20" height="15" fill="rgb(228,32,45)"/><text x="80.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.75%)</title><rect x="77" y="836" width="20" height="15" fill="rgb(247,148,22)"/><text x="80.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.75%)</title><rect x="77" y="852" width="20" height="15" fill="rgb(212,169,41)"/><text x="80.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.75%)</title><rect x="77" y="868" width="20" height="15" fill="rgb(231,102,35)"/><text x="80.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.75%)</title><rect x="77" y="884" width="20" height="15" fill="rgb(223,2,13)"/><text x="80.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.75%)</title><rect x="77" y="900" width="20" height="15" fill="rgb(209,190,13)"/><text x="80.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (4 samples, 1.75%)</title><rect x="77" y="916" width="20" height="15" fill="rgb(233,164,20)"/><text x="80.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.75%)</title><rect x="77" y="932" width="20" height="15" fill="rgb(208,52,48)"/><text x="80.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.75%)</title><rect x="77" y="948" width="20" height="15" fill="rgb(251,212,39)"/><text x="80.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.75%)</title><rect x="77" y="964" width="20" height="15" fill="rgb(223,229,28)"/><text x="80.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.75%)</title><rect x="77" y="980" width="20" height="15" fill="rgb(246,158,26)"/><text x="80.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.75%)</title><rect x="77" y="996" width="20" height="15" fill="rgb(236,13,34)"/><text x="80.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (3 samples, 1.32%)</title><rect x="82" y="1012" width="15" height="15" fill="rgb(248,109,41)"/><text x="85.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.32%)</title><rect x="82" y="1028" width="15" height="15" fill="rgb(249,12,26)"/><text x="85.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.32%)</title><rect x="82" y="1044" width="15" height="15" fill="rgb(218,229,36)"/><text x="85.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.32%)</title><rect x="82" y="1060" width="15" height="15" fill="rgb(215,159,48)"/><text x="85.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.32%)</title><rect x="82" y="1076" width="15" height="15" fill="rgb(224,153,37)"/><text x="85.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.32%)</title><rect x="82" y="1092" width="15" height="15" fill="rgb(216,91,51)"/><text x="85.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (3 samples, 1.32%)</title><rect x="82" y="1108" width="15" height="15" fill="rgb(209,98,7)"/><text x="85.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.32%)</title><rect x="82" y="1124" width="15" height="15" fill="rgb(231,210,23)"/><text x="85.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.32%)</title><rect x="82" y="1140" width="15" height="15" fill="rgb(211,208,16)"/><text x="85.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.32%)</title><rect x="82" y="1156" width="15" height="15" fill="rgb(237,211,17)"/><text x="85.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.32%)</title><rect x="82" y="1172" width="15" height="15" fill="rgb(212,223,31)"/><text x="85.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.32%)</title><rect x="82" y="1188" width="15" height="15" fill="rgb(216,169,7)"/><text x="85.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (3 samples, 1.32%)</title><rect x="82" y="1204" width="15" height="15" fill="rgb(223,166,34)"/><text x="85.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.32%)</title><rect x="82" y="1220" width="15" height="15" fill="rgb(234,141,1)"/><text x="85.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.32%)</title><rect x="82" y="1236" width="15" height="15" fill="rgb(220,176,9)"/><text x="85.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.32%)</title><rect x="82" y="1252" width="15" height="15" fill="rgb(232,166,30)"/><text x="85.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.32%)</title><rect x="82" y="1268" width="15" height="15" fill="rgb(242,178,4)"/><text x="85.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.32%)</title><rect x="82" y="1284" width="15" height="15" fill="rgb(214,176,6)"/><text x="85.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:16) (2 samples, 0.88%)</title><rect x="87" y="1300" width="10" height="15" fill="rgb(254,57,17)"/><text x="90.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="87" y="1316" width="10" height="15" fill="rgb(222,81,16)"/><text x="90.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.88%)</title><rect x="87" y="1332" width="10" height="15" fill="rgb(222,1,28)"/><text x="90.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.88%)</title><rect x="87" y="1348" width="10" height="15" fill="rgb(237,94,20)"/><text x="90.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.88%)</title><rect x="87" y="1364" width="10" height="15" fill="rgb(229,187,22)"/><text x="90.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="87" y="1380" width="10" height="15" fill="rgb(229,64,35)"/><text x="90.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py:51) (2 samples, 0.88%)</title><rect x="87" y="1396" width="10" height="15" fill="rgb(231,94,45)"/><text x="90.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="87" y="1412" width="10" height="15" fill="rgb(208,4,48)"/><text x="90.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.88%)</title><rect x="87" y="1428" width="10" height="15" fill="rgb(238,57,51)"/><text x="90.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.88%)</title><rect x="87" y="1444" width="10" height="15" fill="rgb(225,138,3)"/><text x="90.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="92" y="1460" width="5" height="15" fill="rgb(236,162,38)"/><text x="95.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="92" y="1476" width="5" height="15" fill="rgb(210,46,47)"/><text x="95.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/multi.py:3440) (1 samples, 0.44%)</title><rect x="92" y="1492" width="5" height="15" fill="rgb(222,117,43)"/><text x="95.00" y="1502.50"></text></g><g><title>_add_numeric_methods_disabled (pandas/core/indexes/base.py:5403) (1 samples, 0.44%)</title><rect x="92" y="1508" width="5" height="15" fill="rgb(206,92,30)"/><text x="95.00" y="1518.50"></text></g><g><title>make_invalid_op (pandas/core/ops/__init__.py:193) (1 samples, 0.44%)</title><rect x="92" y="1524" width="5" height="15" fill="rgb(232,175,52)"/><text x="95.00" y="1534.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.44%)</title><rect x="97" y="1108" width="6" height="15" fill="rgb(245,188,47)"/><text x="100.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="97" y="1124" width="6" height="15" fill="rgb(229,148,6)"/><text x="100.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="97" y="1140" width="6" height="15" fill="rgb(252,101,21)"/><text x="100.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="97" y="1156" width="6" height="15" fill="rgb(235,81,24)"/><text x="100.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="97" y="1172" width="6" height="15" fill="rgb(223,130,10)"/><text x="100.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="97" y="1188" width="6" height="15" fill="rgb(254,15,17)"/><text x="100.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.44%)</title><rect x="97" y="1204" width="6" height="15" fill="rgb(239,168,3)"/><text x="100.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="97" y="1220" width="6" height="15" fill="rgb(208,18,28)"/><text x="100.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="97" y="1236" width="6" height="15" fill="rgb(241,86,48)"/><text x="100.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="97" y="1252" width="6" height="15" fill="rgb(236,178,10)"/><text x="100.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="97" y="1268" width="6" height="15" fill="rgb(222,46,34)"/><text x="100.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="97" y="1284" width="6" height="15" fill="rgb(254,19,17)"/><text x="100.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.44%)</title><rect x="97" y="1300" width="6" height="15" fill="rgb(208,81,27)"/><text x="100.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.44%)</title><rect x="97" y="1316" width="6" height="15" fill="rgb(254,80,29)"/><text x="100.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.44%)</title><rect x="97" y="1332" width="6" height="15" fill="rgb(207,75,3)"/><text x="100.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.44%)</title><rect x="97" y="1348" width="6" height="15" fill="rgb(229,143,30)"/><text x="100.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.44%)</title><rect x="97" y="1364" width="6" height="15" fill="rgb(236,35,48)"/><text x="100.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.44%)</title><rect x="97" y="1380" width="6" height="15" fill="rgb(235,130,21)"/><text x="100.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.44%)</title><rect x="97" y="1396" width="6" height="15" fill="rgb(242,29,42)"/><text x="100.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.44%)</title><rect x="97" y="1412" width="6" height="15" fill="rgb(205,63,48)"/><text x="100.00" y="1422.50"></text></g><g><title>_compile (re.py:274) (1 samples, 0.44%)</title><rect x="97" y="1428" width="6" height="15" fill="rgb(238,34,7)"/><text x="100.00" y="1438.50"></text></g><g><title>__get__ (types.py:165) (1 samples, 0.44%)</title><rect x="97" y="1444" width="6" height="15" fill="rgb(236,146,17)"/><text x="100.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.44%)</title><rect x="103" y="1236" width="5" height="15" fill="rgb(253,89,20)"/><text x="106.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.44%)</title><rect x="103" y="1252" width="5" height="15" fill="rgb(214,28,0)"/><text x="106.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="103" y="1268" width="5" height="15" fill="rgb(229,154,48)"/><text x="106.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="103" y="1284" width="5" height="15" fill="rgb(249,64,2)"/><text x="106.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="103" y="1300" width="5" height="15" fill="rgb(232,38,53)"/><text x="106.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="103" y="1316" width="5" height="15" fill="rgb(219,3,23)"/><text x="106.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="103" y="1332" width="5" height="15" fill="rgb(243,44,42)"/><text x="106.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="103" y="1348" width="5" height="15" fill="rgb(231,94,42)"/><text x="106.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.44%)</title><rect x="103" y="1364" width="5" height="15" fill="rgb(209,81,26)"/><text x="106.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="103" y="1380" width="5" height="15" fill="rgb(241,226,36)"/><text x="106.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="103" y="1396" width="5" height="15" fill="rgb(220,53,5)"/><text x="106.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="103" y="1412" width="5" height="15" fill="rgb(235,152,22)"/><text x="106.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="103" y="1428" width="5" height="15" fill="rgb(243,123,16)"/><text x="106.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="103" y="1444" width="5" height="15" fill="rgb(242,224,25)"/><text x="106.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.44%)</title><rect x="103" y="1460" width="5" height="15" fill="rgb(254,227,30)"/><text x="106.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.44%)</title><rect x="103" y="1476" width="5" height="15" fill="rgb(221,228,21)"/><text x="106.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.44%)</title><rect x="103" y="1492" width="5" height="15" fill="rgb(239,126,10)"/><text x="106.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.44%)</title><rect x="103" y="1508" width="5" height="15" fill="rgb(250,26,50)"/><text x="106.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.44%)</title><rect x="103" y="1524" width="5" height="15" fill="rgb(218,135,53)"/><text x="106.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.44%)</title><rect x="103" y="1540" width="5" height="15" fill="rgb(229,178,11)"/><text x="106.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.44%)</title><rect x="103" y="1556" width="5" height="15" fill="rgb(227,202,27)"/><text x="106.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:61) (1 samples, 0.44%)</title><rect x="103" y="1572" width="5" height="15" fill="rgb(234,164,38)"/><text x="106.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.44%)</title><rect x="103" y="1588" width="5" height="15" fill="rgb(221,51,15)"/><text x="106.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="103" y="1604" width="5" height="15" fill="rgb(241,183,30)"/><text x="106.00" y="1614.50"></text></g><g><title>pybind11::detail::function_call::~function_call (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="103" y="1620" width="5" height="15" fill="rgb(230,190,20)"/><text x="106.00" y="1630.50"></text></g><g><title>0x7fed3d8d5a41 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="103" y="1636" width="5" height="15" fill="rgb(253,194,6)"/><text x="106.00" y="1646.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:4) (20 samples, 8.77%)</title><rect x="10" y="52" width="103" height="15" fill="rgb(215,110,18)"/><text x="13.00" y="62.50">&lt;module&gt; (be..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (20 samples, 8.77%)</title><rect x="10" y="68" width="103" height="15" fill="rgb(224,93,29)"/><text x="13.00" y="78.50">_find_and_lo..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (20 samples, 8.77%)</title><rect x="10" y="84" width="103" height="15" fill="rgb(250,180,4)"/><text x="13.00" y="94.50">_find_and_lo..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (20 samples, 8.77%)</title><rect x="10" y="100" width="103" height="15" fill="rgb(212,86,44)"/><text x="13.00" y="110.50">_load_unlock..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (20 samples, 8.77%)</title><rect x="10" y="116" width="103" height="15" fill="rgb(208,21,32)"/><text x="13.00" y="126.50">exec_module ..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (20 samples, 8.77%)</title><rect x="10" y="132" width="103" height="15" fill="rgb(232,116,0)"/><text x="13.00" y="142.50">_call_with_f..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:7) (10 samples, 4.39%)</title><rect x="61" y="148" width="52" height="15" fill="rgb(207,37,30)"/><text x="64.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 4.39%)</title><rect x="61" y="164" width="52" height="15" fill="rgb(208,121,4)"/><text x="64.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 4.39%)</title><rect x="61" y="180" width="52" height="15" fill="rgb(254,151,2)"/><text x="64.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 4.39%)</title><rect x="61" y="196" width="52" height="15" fill="rgb(253,61,5)"/><text x="64.00" y="206.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 4.39%)</title><rect x="61" y="212" width="52" height="15" fill="rgb(206,127,13)"/><text x="64.00" y="222.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 4.39%)</title><rect x="61" y="228" width="52" height="15" fill="rgb(238,74,52)"/><text x="64.00" y="238.50">_call..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (8 samples, 3.51%)</title><rect x="72" y="244" width="41" height="15" fill="rgb(231,169,36)"/><text x="75.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.51%)</title><rect x="72" y="260" width="41" height="15" fill="rgb(230,54,39)"/><text x="75.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.51%)</title><rect x="72" y="276" width="41" height="15" fill="rgb(234,110,22)"/><text x="75.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.51%)</title><rect x="72" y="292" width="41" height="15" fill="rgb(225,214,37)"/><text x="75.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.51%)</title><rect x="72" y="308" width="41" height="15" fill="rgb(248,188,6)"/><text x="75.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.51%)</title><rect x="72" y="324" width="41" height="15" fill="rgb(234,102,26)"/><text x="75.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (8 samples, 3.51%)</title><rect x="72" y="340" width="41" height="15" fill="rgb(211,171,26)"/><text x="75.00" y="350.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.51%)</title><rect x="72" y="356" width="41" height="15" fill="rgb(246,157,31)"/><text x="75.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.51%)</title><rect x="72" y="372" width="41" height="15" fill="rgb(229,162,33)"/><text x="75.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.51%)</title><rect x="72" y="388" width="41" height="15" fill="rgb(228,129,30)"/><text x="75.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.51%)</title><rect x="72" y="404" width="41" height="15" fill="rgb(224,70,15)"/><text x="75.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.51%)</title><rect x="72" y="420" width="41" height="15" fill="rgb(206,158,19)"/><text x="75.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 1.32%)</title><rect x="97" y="436" width="16" height="15" fill="rgb(250,138,50)"/><text x="100.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.32%)</title><rect x="97" y="452" width="16" height="15" fill="rgb(234,109,32)"/><text x="100.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.32%)</title><rect x="97" y="468" width="16" height="15" fill="rgb(230,89,30)"/><text x="100.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.32%)</title><rect x="97" y="484" width="16" height="15" fill="rgb(253,11,24)"/><text x="100.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.32%)</title><rect x="97" y="500" width="16" height="15" fill="rgb(206,160,8)"/><text x="100.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.32%)</title><rect x="97" y="516" width="16" height="15" fill="rgb(213,100,10)"/><text x="100.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.32%)</title><rect x="97" y="532" width="16" height="15" fill="rgb(209,175,8)"/><text x="100.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.32%)</title><rect x="97" y="548" width="16" height="15" fill="rgb(249,209,45)"/><text x="100.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.32%)</title><rect x="97" y="564" width="16" height="15" fill="rgb(225,43,38)"/><text x="100.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 1.32%)</title><rect x="97" y="580" width="16" height="15" fill="rgb(224,84,40)"/><text x="100.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.32%)</title><rect x="97" y="596" width="16" height="15" fill="rgb(224,97,13)"/><text x="100.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.32%)</title><rect x="97" y="612" width="16" height="15" fill="rgb(223,203,24)"/><text x="100.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.32%)</title><rect x="97" y="628" width="16" height="15" fill="rgb(220,169,3)"/><text x="100.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.32%)</title><rect x="97" y="644" width="16" height="15" fill="rgb(230,200,28)"/><text x="100.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.32%)</title><rect x="97" y="660" width="16" height="15" fill="rgb(226,143,25)"/><text x="100.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 1.32%)</title><rect x="97" y="676" width="16" height="15" fill="rgb(210,42,10)"/><text x="100.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.32%)</title><rect x="97" y="692" width="16" height="15" fill="rgb(241,51,19)"/><text x="100.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.32%)</title><rect x="97" y="708" width="16" height="15" fill="rgb(254,197,20)"/><text x="100.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.32%)</title><rect x="97" y="724" width="16" height="15" fill="rgb(232,34,20)"/><text x="100.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.32%)</title><rect x="97" y="740" width="16" height="15" fill="rgb(246,102,37)"/><text x="100.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.32%)</title><rect x="97" y="756" width="16" height="15" fill="rgb(252,166,36)"/><text x="100.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 1.32%)</title><rect x="97" y="772" width="16" height="15" fill="rgb(226,143,33)"/><text x="100.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.32%)</title><rect x="97" y="788" width="16" height="15" fill="rgb(214,1,46)"/><text x="100.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.32%)</title><rect x="97" y="804" width="16" height="15" fill="rgb(241,165,1)"/><text x="100.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.32%)</title><rect x="97" y="820" width="16" height="15" fill="rgb(230,207,21)"/><text x="100.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.32%)</title><rect x="97" y="836" width="16" height="15" fill="rgb(235,185,24)"/><text x="100.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.32%)</title><rect x="97" y="852" width="16" height="15" fill="rgb(246,179,16)"/><text x="100.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 1.32%)</title><rect x="97" y="868" width="16" height="15" fill="rgb(234,73,35)"/><text x="100.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.32%)</title><rect x="97" y="884" width="16" height="15" fill="rgb(214,210,54)"/><text x="100.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.32%)</title><rect x="97" y="900" width="16" height="15" fill="rgb(227,171,50)"/><text x="100.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.32%)</title><rect x="97" y="916" width="16" height="15" fill="rgb(232,164,7)"/><text x="100.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.32%)</title><rect x="97" y="932" width="16" height="15" fill="rgb(230,217,11)"/><text x="100.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.32%)</title><rect x="97" y="948" width="16" height="15" fill="rgb(242,213,12)"/><text x="100.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.32%)</title><rect x="97" y="964" width="16" height="15" fill="rgb(218,35,18)"/><text x="100.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.32%)</title><rect x="97" y="980" width="16" height="15" fill="rgb(209,28,37)"/><text x="100.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.32%)</title><rect x="97" y="996" width="16" height="15" fill="rgb(244,25,23)"/><text x="100.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 1.32%)</title><rect x="97" y="1012" width="16" height="15" fill="rgb(253,166,36)"/><text x="100.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.32%)</title><rect x="97" y="1028" width="16" height="15" fill="rgb(213,3,39)"/><text x="100.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.32%)</title><rect x="97" y="1044" width="16" height="15" fill="rgb(225,196,1)"/><text x="100.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.32%)</title><rect x="97" y="1060" width="16" height="15" fill="rgb(244,21,22)"/><text x="100.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.32%)</title><rect x="97" y="1076" width="16" height="15" fill="rgb(233,176,34)"/><text x="100.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.32%)</title><rect x="97" y="1092" width="16" height="15" fill="rgb(235,182,34)"/><text x="100.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.88%)</title><rect x="103" y="1108" width="10" height="15" fill="rgb(225,139,37)"/><text x="106.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.88%)</title><rect x="103" y="1124" width="10" height="15" fill="rgb(247,66,47)"/><text x="106.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="103" y="1140" width="10" height="15" fill="rgb(208,181,2)"/><text x="106.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="103" y="1156" width="10" height="15" fill="rgb(222,215,54)"/><text x="106.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.88%)</title><rect x="103" y="1172" width="10" height="15" fill="rgb(230,159,51)"/><text x="106.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.88%)</title><rect x="103" y="1188" width="10" height="15" fill="rgb(223,217,18)"/><text x="106.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.88%)</title><rect x="103" y="1204" width="10" height="15" fill="rgb(206,112,7)"/><text x="106.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="103" y="1220" width="10" height="15" fill="rgb(220,127,11)"/><text x="106.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:24) (1 samples, 0.44%)</title><rect x="108" y="1236" width="5" height="15" fill="rgb(235,199,34)"/><text x="111.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.44%)</title><rect x="108" y="1252" width="5" height="15" fill="rgb(216,105,26)"/><text x="111.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="108" y="1268" width="5" height="15" fill="rgb(211,157,10)"/><text x="111.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="108" y="1284" width="5" height="15" fill="rgb(241,195,11)"/><text x="111.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="108" y="1300" width="5" height="15" fill="rgb(252,139,24)"/><text x="111.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="108" y="1316" width="5" height="15" fill="rgb(254,184,13)"/><text x="111.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.44%)</title><rect x="108" y="1332" width="5" height="15" fill="rgb(216,57,30)"/><text x="111.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:807) (1 samples, 0.44%)</title><rect x="108" y="1348" width="5" height="15" fill="rgb(242,14,23)"/><text x="111.00" y="1358.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:304) (1 samples, 0.44%)</title><rect x="108" y="1364" width="5" height="15" fill="rgb(251,99,50)"/><text x="111.00" y="1374.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:154) (1 samples, 0.44%)</title><rect x="113" y="244" width="5" height="15" fill="rgb(252,156,45)"/><text x="116.00" y="254.50"></text></g><g><title>_generate_sample_indices (sklearn/ensemble/_forest.py:120) (1 samples, 0.44%)</title><rect x="113" y="260" width="5" height="15" fill="rgb(225,78,13)"/><text x="116.00" y="270.50"></text></g><g><title>randint (mtrand.c:6007) (1 samples, 0.44%)</title><rect x="113" y="276" width="5" height="15" fill="rgb(219,157,42)"/><text x="116.00" y="286.50"></text></g><g><title>randint (mtrand.c:6250) (1 samples, 0.44%)</title><rect x="113" y="292" width="5" height="15" fill="rgb(221,65,1)"/><text x="116.00" y="302.50"></text></g><g><title>bounded_integers__rand_int64 (bounded_integers.c:16267) (1 samples, 0.44%)</title><rect x="113" y="308" width="5" height="15" fill="rgb(241,47,19)"/><text x="116.00" y="318.50"></text></g><g><title>prod (&lt;__array_function__ internals&gt;:6) (1 samples, 0.44%)</title><rect x="113" y="324" width="5" height="15" fill="rgb(208,216,39)"/><text x="116.00" y="334.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.44%)</title><rect x="113" y="340" width="5" height="15" fill="rgb(244,144,12)"/><text x="116.00" y="350.50"></text></g><g><title>prod (numpy/core/fromnumeric.py:2911) (1 samples, 0.44%)</title><rect x="113" y="356" width="5" height="15" fill="rgb(207,202,46)"/><text x="116.00" y="366.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.44%)</title><rect x="113" y="372" width="5" height="15" fill="rgb(218,206,37)"/><text x="116.00" y="382.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.44%)</title><rect x="113" y="388" width="5" height="15" fill="rgb(254,91,25)"/><text x="116.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.44%)</title><rect x="113" y="404" width="5" height="15" fill="rgb(215,211,42)"/><text x="116.00" y="414.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.44%)</title><rect x="113" y="420" width="5" height="15" fill="rgb(252,169,46)"/><text x="116.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.44%)</title><rect x="113" y="436" width="5" height="15" fill="rgb(246,22,49)"/><text x="116.00" y="446.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.44%)</title><rect x="113" y="452" width="5" height="15" fill="rgb(251,95,9)"/><text x="116.00" y="462.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:195) (1 samples, 0.44%)</title><rect x="113" y="468" width="5" height="15" fill="rgb(230,190,12)"/><text x="116.00" y="478.50"></text></g><g><title>fit (sklearn/tree/_classes.py:143) (1 samples, 0.44%)</title><rect x="118" y="276" width="5" height="15" fill="rgb(219,96,1)"/><text x="121.00" y="286.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (1 samples, 0.44%)</title><rect x="118" y="292" width="5" height="15" fill="rgb(226,176,12)"/><text x="121.00" y="302.50"></text></g><g><title>__init__ (mtrand.c:3210) (1 samples, 0.44%)</title><rect x="118" y="308" width="5" height="15" fill="rgb(227,185,39)"/><text x="121.00" y="318.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (1 samples, 0.44%)</title><rect x="118" y="324" width="5" height="15" fill="rgb(250,175,33)"/><text x="121.00" y="334.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (1 samples, 0.44%)</title><rect x="118" y="340" width="5" height="15" fill="rgb(232,41,26)"/><text x="121.00" y="350.50"></text></g><g><title>__init__ (mt19937.c:2381) (1 samples, 0.44%)</title><rect x="118" y="356" width="5" height="15" fill="rgb(214,39,28)"/><text x="121.00" y="366.50"></text></g><g><title>MT19937___init__ (mt19937.c:2493) (1 samples, 0.44%)</title><rect x="118" y="372" width="5" height="15" fill="rgb(224,223,26)"/><text x="121.00" y="382.50"></text></g><g><title>inner (contextlib.py:74) (1 samples, 0.44%)</title><rect x="118" y="388" width="5" height="15" fill="rgb(245,143,2)"/><text x="121.00" y="398.50"></text></g><g><title>generate_state (bit_generator.c:5779) (1 samples, 0.44%)</title><rect x="118" y="404" width="5" height="15" fill="rgb(232,90,52)"/><text x="121.00" y="414.50"></text></g><g><title>generate_state (bit_generator.c:6081) (1 samples, 0.44%)</title><rect x="118" y="420" width="5" height="15" fill="rgb(244,11,29)"/><text x="121.00" y="430.50"></text></g><g><title>array_assign_subscript (mapping.c:1826) (1 samples, 0.44%)</title><rect x="118" y="436" width="5" height="15" fill="rgb(231,137,31)"/><text x="121.00" y="446.50"></text></g><g><title>prepare_index (mapping.c:497) (1 samples, 0.44%)</title><rect x="118" y="452" width="5" height="15" fill="rgb(208,224,43)"/><text x="121.00" y="462.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:40) (3 samples, 1.32%)</title><rect x="113" y="52" width="16" height="15" fill="rgb(221,152,11)"/><text x="116.00" y="62.50"></text></g><g><title>start (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:11) (3 samples, 1.32%)</title><rect x="113" y="68" width="16" height="15" fill="rgb(236,179,9)"/><text x="116.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:39) (3 samples, 1.32%)</title><rect x="113" y="84" width="16" height="15" fill="rgb(233,87,6)"/><text x="116.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (3 samples, 1.32%)</title><rect x="113" y="100" width="16" height="15" fill="rgb(213,66,0)"/><text x="116.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (3 samples, 1.32%)</title><rect x="113" y="116" width="16" height="15" fill="rgb(246,74,30)"/><text x="116.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (3 samples, 1.32%)</title><rect x="113" y="132" width="16" height="15" fill="rgb(213,183,1)"/><text x="116.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (3 samples, 1.32%)</title><rect x="113" y="148" width="16" height="15" fill="rgb(217,133,51)"/><text x="116.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (3 samples, 1.32%)</title><rect x="113" y="164" width="16" height="15" fill="rgb(226,32,50)"/><text x="116.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (3 samples, 1.32%)</title><rect x="113" y="180" width="16" height="15" fill="rgb(211,10,16)"/><text x="116.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (3 samples, 1.32%)</title><rect x="113" y="196" width="16" height="15" fill="rgb(251,175,27)"/><text x="116.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (3 samples, 1.32%)</title><rect x="113" y="212" width="16" height="15" fill="rgb(209,102,11)"/><text x="116.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (3 samples, 1.32%)</title><rect x="113" y="228" width="16" height="15" fill="rgb(249,86,18)"/><text x="116.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:165) (2 samples, 0.88%)</title><rect x="118" y="244" width="11" height="15" fill="rgb(212,182,36)"/><text x="121.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py:1226) (2 samples, 0.88%)</title><rect x="118" y="260" width="11" height="15" fill="rgb(242,162,47)"/><text x="121.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py:367) (1 samples, 0.44%)</title><rect x="123" y="276" width="6" height="15" fill="rgb(222,151,7)"/><text x="126.00" y="286.50"></text></g><g><title>0x7fed1730db11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="123" y="292" width="6" height="15" fill="rgb(229,153,41)"/><text x="126.00" y="302.50"></text></g><g><title>0x7fed1733eee8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="123" y="308" width="6" height="15" fill="rgb(208,216,50)"/><text x="126.00" y="318.50"></text></g><g><title>0x7fed1756f100 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="123" y="324" width="6" height="15" fill="rgb(225,90,16)"/><text x="126.00" y="334.50"></text></g><g><title>0x7fed17578a47 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="123" y="340" width="6" height="15" fill="rgb(209,77,29)"/><text x="126.00" y="350.50"></text></g><g><title>randint (mtrand.c:6007) (1 samples, 0.44%)</title><rect x="123" y="356" width="6" height="15" fill="rgb(251,7,50)"/><text x="126.00" y="366.50"></text></g><g><title>randint (mtrand.c:6250) (1 samples, 0.44%)</title><rect x="123" y="372" width="6" height="15" fill="rgb(246,78,46)"/><text x="126.00" y="382.50"></text></g><g><title>bounded_integers__rand_int64 (bounded_integers.c:16812) (1 samples, 0.44%)</title><rect x="123" y="388" width="6" height="15" fill="rgb(244,29,27)"/><text x="126.00" y="398.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (bounded_integers.c:23650) (1 samples, 0.44%)</title><rect x="123" y="404" width="6" height="15" fill="rgb(251,67,1)"/><text x="126.00" y="414.50"></text></g><g><title>long_arrtype_new (scalartypes.c.src:2827) (1 samples, 0.44%)</title><rect x="123" y="420" width="6" height="15" fill="rgb(232,90,23)"/><text x="126.00" y="430.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.44%)</title><rect x="123" y="436" width="6" height="15" fill="rgb(235,146,48)"/><text x="126.00" y="446.50"></text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:25) (1 samples, 0.44%)</title><rect x="129" y="84" width="5" height="15" fill="rgb(220,221,24)"/><text x="132.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.44%)</title><rect x="129" y="100" width="5" height="15" fill="rgb(237,88,8)"/><text x="132.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:189) (1 samples, 0.44%)</title><rect x="129" y="116" width="5" height="15" fill="rgb(208,183,21)"/><text x="132.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py:138) (1 samples, 0.44%)</title><rect x="129" y="132" width="5" height="15" fill="rgb(218,181,46)"/><text x="132.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="129" y="148" width="5" height="15" fill="rgb(238,225,36)"/><text x="132.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="129" y="164" width="5" height="15" fill="rgb(212,163,29)"/><text x="132.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="129" y="180" width="5" height="15" fill="rgb(246,205,11)"/><text x="132.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="129" y="196" width="5" height="15" fill="rgb(237,18,34)"/><text x="132.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="129" y="212" width="5" height="15" fill="rgb(252,78,10)"/><text x="132.00" y="222.50"></text></g><g><title>&lt;module&gt; (xgboost/__init__.py:17) (1 samples, 0.44%)</title><rect x="129" y="228" width="5" height="15" fill="rgb(233,18,51)"/><text x="132.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="129" y="244" width="5" height="15" fill="rgb(242,72,18)"/><text x="132.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="129" y="260" width="5" height="15" fill="rgb(215,164,54)"/><text x="132.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.44%)</title><rect x="129" y="276" width="5" height="15" fill="rgb(205,11,8)"/><text x="132.00" y="286.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.44%)</title><rect x="129" y="292" width="5" height="15" fill="rgb(224,198,44)"/><text x="132.00" y="302.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.44%)</title><rect x="129" y="308" width="5" height="15" fill="rgb(218,178,3)"/><text x="132.00" y="318.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:406) (1 samples, 0.44%)</title><rect x="129" y="324" width="5" height="15" fill="rgb(207,85,52)"/><text x="132.00" y="334.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (1 samples, 0.44%)</title><rect x="134" y="180" width="5" height="15" fill="rgb(217,79,16)"/><text x="137.00" y="190.50"></text></g><g><title>get (queue.py:167) (1 samples, 0.44%)</title><rect x="134" y="196" width="5" height="15" fill="rgb(216,190,40)"/><text x="137.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (1 samples, 0.44%)</title><rect x="139" y="180" width="5" height="15" fill="rgb(209,216,7)"/><text x="142.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:782) (1 samples, 0.44%)</title><rect x="139" y="196" width="5" height="15" fill="rgb(242,48,51)"/><text x="142.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py:308) (1 samples, 0.44%)</title><rect x="139" y="212" width="5" height="15" fill="rgb(211,92,19)"/><text x="142.00" y="222.50"></text></g><g><title>wraps (functools.py:79) (1 samples, 0.44%)</title><rect x="139" y="228" width="5" height="15" fill="rgb(237,84,20)"/><text x="142.00" y="238.50"></text></g><g><title>0x7fed17327225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="149" y="356" width="5" height="15" fill="rgb(230,150,29)"/><text x="152.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3248) (1 samples, 0.44%)</title><rect x="149" y="372" width="5" height="15" fill="rgb(244,202,33)"/><text x="152.00" y="382.50"></text></g><g><title>0x7fed17328405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.88%)</title><rect x="149" y="340" width="11" height="15" fill="rgb(211,120,16)"/><text x="152.00" y="350.50"></text></g><g><title>0x7fed17327644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="154" y="356" width="6" height="15" fill="rgb(253,113,40)"/><text x="157.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.44%)</title><rect x="154" y="372" width="6" height="15" fill="rgb(226,94,43)"/><text x="157.00" y="382.50"></text></g><g><title>0x7fed172fc4f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="160" y="372" width="5" height="15" fill="rgb(253,53,44)"/><text x="163.00" y="382.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (4 samples, 1.75%)</title><rect x="149" y="260" width="21" height="15" fill="rgb(225,210,50)"/><text x="152.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (4 samples, 1.75%)</title><rect x="149" y="276" width="21" height="15" fill="rgb(236,50,5)"/><text x="152.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (4 samples, 1.75%)</title><rect x="149" y="292" width="21" height="15" fill="rgb(211,32,44)"/><text x="152.00" y="302.50"></text></g><g><title>0x7fed17319d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.75%)</title><rect x="149" y="308" width="21" height="15" fill="rgb(253,200,31)"/><text x="152.00" y="318.50"></text></g><g><title>0x7fed17318fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.75%)</title><rect x="149" y="324" width="21" height="15" fill="rgb(237,58,26)"/><text x="152.00" y="334.50"></text></g><g><title>0x7fed17328540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.88%)</title><rect x="160" y="340" width="10" height="15" fill="rgb(230,52,4)"/><text x="163.00" y="350.50"></text></g><g><title>0x7fed172fd2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.88%)</title><rect x="160" y="356" width="10" height="15" fill="rgb(216,100,8)"/><text x="163.00" y="366.50"></text></g><g><title>0x7fed172fc530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="165" y="372" width="5" height="15" fill="rgb(241,53,2)"/><text x="168.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.44%)</title><rect x="165" y="388" width="5" height="15" fill="rgb(253,162,51)"/><text x="168.00" y="398.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:47) (9 samples, 3.95%)</title><rect x="129" y="52" width="46" height="15" fill="rgb(222,127,39)"/><text x="132.00" y="62.50">&lt;mod..</text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:46) (9 samples, 3.95%)</title><rect x="129" y="68" width="46" height="15" fill="rgb(254,11,13)"/><text x="132.00" y="78.50">prof..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:26) (8 samples, 3.51%)</title><rect x="134" y="84" width="41" height="15" fill="rgb(238,105,4)"/><text x="137.00" y="94.50">set..</text></g><g><title>profile0 (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:18) (8 samples, 3.51%)</title><rect x="134" y="100" width="41" height="15" fill="rgb(248,101,33)"/><text x="137.00" y="110.50">pro..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (8 samples, 3.51%)</title><rect x="134" y="116" width="41" height="15" fill="rgb(229,57,5)"/><text x="137.00" y="126.50">tim..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (8 samples, 3.51%)</title><rect x="134" y="132" width="41" height="15" fill="rgb(247,210,11)"/><text x="137.00" y="142.50">&lt;la..</text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (8 samples, 3.51%)</title><rect x="134" y="148" width="41" height="15" fill="rgb(225,58,11)"/><text x="137.00" y="158.50">pre..</text></g><g><title>__call__ (joblib/parallel.py:1006) (8 samples, 3.51%)</title><rect x="134" y="164" width="41" height="15" fill="rgb(233,220,36)"/><text x="137.00" y="174.50">__c..</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (6 samples, 2.63%)</title><rect x="144" y="180" width="31" height="15" fill="rgb(252,205,20)"/><text x="147.00" y="190.50">di..</text></g><g><title>_dispatch (joblib/parallel.py:753) (6 samples, 2.63%)</title><rect x="144" y="196" width="31" height="15" fill="rgb(207,163,54)"/><text x="147.00" y="206.50">_d..</text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (6 samples, 2.63%)</title><rect x="144" y="212" width="31" height="15" fill="rgb(244,133,10)"/><text x="147.00" y="222.50">ap..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (6 samples, 2.63%)</title><rect x="144" y="228" width="31" height="15" fill="rgb(216,61,53)"/><text x="147.00" y="238.50">__..</text></g><g><title>__call__ (joblib/parallel.py:256) (6 samples, 2.63%)</title><rect x="144" y="244" width="31" height="15" fill="rgb(246,61,1)"/><text x="147.00" y="254.50">__..</text></g><g><title>__exit__ (joblib/parallel.py:215) (1 samples, 0.44%)</title><rect x="170" y="260" width="5" height="15" fill="rgb(249,15,12)"/><text x="173.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:218) (1 samples, 0.44%)</title><rect x="170" y="276" width="5" height="15" fill="rgb(254,79,25)"/><text x="173.00" y="286.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:36) (1 samples, 0.44%)</title><rect x="175" y="84" width="5" height="15" fill="rgb(254,77,29)"/><text x="178.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.44%)</title><rect x="175" y="100" width="5" height="15" fill="rgb(239,189,25)"/><text x="178.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (1 samples, 0.44%)</title><rect x="175" y="116" width="5" height="15" fill="rgb(229,153,35)"/><text x="178.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.44%)</title><rect x="175" y="132" width="5" height="15" fill="rgb(247,42,53)"/><text x="178.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.44%)</title><rect x="175" y="148" width="5" height="15" fill="rgb(232,211,13)"/><text x="178.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.44%)</title><rect x="175" y="164" width="5" height="15" fill="rgb(210,223,27)"/><text x="178.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:1017) (1 samples, 0.44%)</title><rect x="175" y="180" width="5" height="15" fill="rgb(226,152,54)"/><text x="178.00" y="190.50"></text></g><g><title>make_model (onnx/helper.py:113) (1 samples, 0.44%)</title><rect x="175" y="196" width="5" height="15" fill="rgb(209,141,48)"/><text x="178.00" y="206.50"></text></g><g><title>0x7fed2bc2a4be (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="175" y="212" width="5" height="15" fill="rgb(209,162,41)"/><text x="178.00" y="222.50"></text></g><g><title>google::protobuf::Message::CopyFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="175" y="228" width="5" height="15" fill="rgb(205,161,16)"/><text x="178.00" y="238.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Merge (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="175" y="244" width="5" height="15" fill="rgb(220,15,27)"/><text x="178.00" y="254.50"></text></g><g><title>google::protobuf::Message::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="175" y="260" width="5" height="15" fill="rgb(244,62,54)"/><text x="178.00" y="270.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Merge (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="175" y="276" width="5" height="15" fill="rgb(239,51,23)"/><text x="178.00" y="286.50"></text></g><g><title>google::protobuf::Reflection::AddMessage (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="175" y="292" width="5" height="15" fill="rgb(237,190,42)"/><text x="178.00" y="302.50"></text></g><g><title>google::protobuf::DynamicMessage::New (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="175" y="308" width="5" height="15" fill="rgb(212,99,8)"/><text x="178.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.44%)</title><rect x="175" y="324" width="5" height="15" fill="rgb(213,166,7)"/><text x="178.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.44%)</title><rect x="175" y="340" width="5" height="15" fill="rgb(231,127,30)"/><text x="178.00" y="350.50"></text></g><g><title>0x7fed3d8d73ae (libc-2.29.so) (1 samples, 0.44%)</title><rect x="175" y="356" width="5" height="15" fill="rgb(234,52,45)"/><text x="178.00" y="366.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:780) (1 samples, 0.44%)</title><rect x="180" y="148" width="5" height="15" fill="rgb(233,17,41)"/><text x="183.00" y="158.50"></text></g><g><title>_joblib_parallel_args (sklearn/utils/fixes.py:223) (1 samples, 0.44%)</title><rect x="180" y="164" width="5" height="15" fill="rgb(222,36,50)"/><text x="183.00" y="174.50"></text></g><g><title>__init__ (distutils/version.py:304) (1 samples, 0.44%)</title><rect x="180" y="180" width="5" height="15" fill="rgb(212,104,50)"/><text x="183.00" y="190.50"></text></g><g><title>parse (distutils/version.py:312) (1 samples, 0.44%)</title><rect x="180" y="196" width="5" height="15" fill="rgb(226,50,25)"/><text x="183.00" y="206.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.44%)</title><rect x="180" y="212" width="5" height="15" fill="rgb(227,222,54)"/><text x="183.00" y="222.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.44%)</title><rect x="180" y="228" width="5" height="15" fill="rgb(242,190,45)"/><text x="183.00" y="238.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.44%)</title><rect x="180" y="244" width="5" height="15" fill="rgb(235,184,28)"/><text x="183.00" y="254.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (1 samples, 0.44%)</title><rect x="185" y="180" width="6" height="15" fill="rgb(240,165,38)"/><text x="188.00" y="190.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.44%)</title><rect x="185" y="196" width="6" height="15" fill="rgb(215,103,31)"/><text x="188.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (1 samples, 0.44%)</title><rect x="191" y="212" width="5" height="15" fill="rgb(231,229,13)"/><text x="194.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (1 samples, 0.44%)</title><rect x="191" y="228" width="5" height="15" fill="rgb(236,203,24)"/><text x="194.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (1 samples, 0.44%)</title><rect x="191" y="244" width="5" height="15" fill="rgb(227,71,17)"/><text x="194.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (1 samples, 0.44%)</title><rect x="191" y="260" width="5" height="15" fill="rgb(239,126,2)"/><text x="194.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (1 samples, 0.44%)</title><rect x="191" y="276" width="5" height="15" fill="rgb(234,47,0)"/><text x="194.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (1 samples, 0.44%)</title><rect x="191" y="292" width="5" height="15" fill="rgb(209,1,23)"/><text x="194.00" y="302.50"></text></g><g><title>0x7fed17319d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="191" y="308" width="5" height="15" fill="rgb(251,200,42)"/><text x="194.00" y="318.50"></text></g><g><title>0x7fed1731905a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="191" y="324" width="5" height="15" fill="rgb(210,159,2)"/><text x="194.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.44%)</title><rect x="191" y="340" width="5" height="15" fill="rgb(242,89,45)"/><text x="194.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:36) (1 samples, 0.44%)</title><rect x="191" y="356" width="5" height="15" fill="rgb(240,115,17)"/><text x="194.00" y="366.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (3 samples, 1.32%)</title><rect x="185" y="164" width="16" height="15" fill="rgb(254,102,40)"/><text x="188.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (2 samples, 0.88%)</title><rect x="191" y="180" width="10" height="15" fill="rgb(245,202,14)"/><text x="194.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (2 samples, 0.88%)</title><rect x="191" y="196" width="10" height="15" fill="rgb(239,164,23)"/><text x="194.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (1 samples, 0.44%)</title><rect x="196" y="212" width="5" height="15" fill="rgb(212,135,49)"/><text x="199.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:783) (1 samples, 0.44%)</title><rect x="206" y="180" width="5" height="15" fill="rgb(238,218,6)"/><text x="209.00" y="190.50"></text></g><g><title>get (queue.py:164) (2 samples, 0.88%)</title><rect x="211" y="196" width="11" height="15" fill="rgb(213,98,45)"/><text x="214.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (2 samples, 0.88%)</title><rect x="211" y="212" width="11" height="15" fill="rgb(218,116,37)"/><text x="214.00" y="222.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.44%)</title><rect x="222" y="196" width="5" height="15" fill="rgb(232,40,5)"/><text x="225.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (1 samples, 0.44%)</title><rect x="222" y="212" width="5" height="15" fill="rgb(217,169,51)"/><text x="225.00" y="222.50"></text></g><g><title>get (queue.py:167) (1 samples, 0.44%)</title><rect x="227" y="196" width="5" height="15" fill="rgb(245,28,28)"/><text x="230.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (5 samples, 2.19%)</title><rect x="211" y="180" width="26" height="15" fill="rgb(211,155,6)"/><text x="214.00" y="190.50">d..</text></g><g><title>get (queue.py:182) (1 samples, 0.44%)</title><rect x="232" y="196" width="5" height="15" fill="rgb(247,91,10)"/><text x="235.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:797) (2 samples, 0.88%)</title><rect x="237" y="180" width="11" height="15" fill="rgb(212,8,21)"/><text x="240.00" y="190.50"></text></g><g><title>delayed (joblib/parallel.py:297) (1 samples, 0.44%)</title><rect x="263" y="212" width="5" height="15" fill="rgb(230,54,37)"/><text x="266.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:52) (1 samples, 0.44%)</title><rect x="273" y="228" width="6" height="15" fill="rgb(212,41,45)"/><text x="276.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:54) (2 samples, 0.88%)</title><rect x="279" y="228" width="10" height="15" fill="rgb(239,197,10)"/><text x="282.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:58) (2 samples, 0.88%)</title><rect x="289" y="228" width="10" height="15" fill="rgb(247,144,48)"/><text x="292.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:63) (1 samples, 0.44%)</title><rect x="299" y="228" width="6" height="15" fill="rgb(216,86,9)"/><text x="302.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (12 samples, 5.26%)</title><rect x="248" y="180" width="62" height="15" fill="rgb(216,176,53)"/><text x="251.00" y="190.50">dispat..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:782) (10 samples, 4.39%)</title><rect x="258" y="196" width="52" height="15" fill="rgb(208,198,9)"/><text x="261.00" y="206.50">&lt;gene..</text></g><g><title>delayed (joblib/parallel.py:308) (8 samples, 3.51%)</title><rect x="268" y="212" width="42" height="15" fill="rgb(247,103,20)"/><text x="271.00" y="222.50">del..</text></g><g><title>wraps (functools.py:79) (1 samples, 0.44%)</title><rect x="305" y="228" width="5" height="15" fill="rgb(253,1,4)"/><text x="308.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:808) (1 samples, 0.44%)</title><rect x="310" y="180" width="5" height="15" fill="rgb(226,172,10)"/><text x="313.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (3 samples, 1.32%)</title><rect x="315" y="180" width="15" height="15" fill="rgb(213,97,25)"/><text x="318.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:823) (1 samples, 0.44%)</title><rect x="330" y="180" width="6" height="15" fill="rgb(232,39,18)"/><text x="333.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 1.32%)</title><rect x="351" y="212" width="16" height="15" fill="rgb(217,102,18)"/><text x="354.00" y="222.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.44%)</title><rect x="361" y="228" width="6" height="15" fill="rgb(208,112,39)"/><text x="364.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.44%)</title><rect x="367" y="212" width="5" height="15" fill="rgb(234,115,33)"/><text x="370.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (9 samples, 3.95%)</title><rect x="336" y="196" width="46" height="15" fill="rgb(215,181,50)"/><text x="339.00" y="206.50">get_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.88%)</title><rect x="372" y="212" width="10" height="15" fill="rgb(229,115,28)"/><text x="375.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (1 samples, 0.44%)</title><rect x="418" y="228" width="6" height="15" fill="rgb(242,172,2)"/><text x="421.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (6 samples, 2.63%)</title><rect x="398" y="212" width="31" height="15" fill="rgb(207,74,5)"/><text x="401.00" y="222.50">ge..</text></g><g><title>__init__ (joblib/_parallel_backends.py:275) (1 samples, 0.44%)</title><rect x="424" y="228" width="5" height="15" fill="rgb(212,141,48)"/><text x="427.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:118) (2 samples, 0.88%)</title><rect x="429" y="212" width="10" height="15" fill="rgb(241,7,52)"/><text x="432.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:91) (1 samples, 0.44%)</title><rect x="439" y="212" width="5" height="15" fill="rgb(235,201,5)"/><text x="442.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (26 samples, 11.40%)</title><rect x="336" y="180" width="134" height="15" fill="rgb(251,116,47)"/><text x="339.00" y="190.50">dispatch_one_bat..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (17 samples, 7.46%)</title><rect x="382" y="196" width="88" height="15" fill="rgb(250,107,54)"/><text x="385.00" y="206.50">get_nested..</text></g><g><title>get_active_backend (joblib/parallel.py:94) (5 samples, 2.19%)</title><rect x="444" y="212" width="26" height="15" fill="rgb(242,22,13)"/><text x="447.00" y="222.50">g..</text></g><g><title>__init__ (joblib/parallel.py:241) (2 samples, 0.88%)</title><rect x="480" y="196" width="11" height="15" fill="rgb(210,26,9)"/><text x="483.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (5 samples, 2.19%)</title><rect x="470" y="180" width="26" height="15" fill="rgb(227,104,33)"/><text x="473.00" y="190.50">d..</text></g><g><title>__init__ (joblib/parallel.py:243) (1 samples, 0.44%)</title><rect x="491" y="196" width="5" height="15" fill="rgb(248,147,9)"/><text x="494.00" y="206.50"></text></g><g><title>put (queue.py:132) (2 samples, 0.88%)</title><rect x="496" y="196" width="10" height="15" fill="rgb(214,210,50)"/><text x="499.00" y="206.50"></text></g><g><title>put (queue.py:150) (1 samples, 0.44%)</title><rect x="506" y="196" width="6" height="15" fill="rgb(226,109,13)"/><text x="509.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (2 samples, 0.88%)</title><rect x="522" y="212" width="10" height="15" fill="rgb(252,152,44)"/><text x="525.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (8 samples, 3.51%)</title><rect x="496" y="180" width="41" height="15" fill="rgb(249,218,0)"/><text x="499.00" y="190.50">dis..</text></g><g><title>put (queue.py:151) (5 samples, 2.19%)</title><rect x="512" y="196" width="25" height="15" fill="rgb(220,148,18)"/><text x="515.00" y="206.50">p..</text></g><g><title>notify (threading.py:345) (1 samples, 0.44%)</title><rect x="532" y="212" width="5" height="15" fill="rgb(206,87,45)"/><text x="535.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.44%)</title><rect x="532" y="228" width="5" height="15" fill="rgb(250,222,25)"/><text x="535.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.44%)</title><rect x="532" y="244" width="5" height="15" fill="rgb(228,51,43)"/><text x="535.00" y="254.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.44%)</title><rect x="532" y="260" width="5" height="15" fill="rgb(228,125,25)"/><text x="535.00" y="270.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.44%)</title><rect x="532" y="276" width="5" height="15" fill="rgb(205,214,25)"/><text x="535.00" y="286.50"></text></g><g><title>get (queue.py:164) (2 samples, 0.88%)</title><rect x="543" y="196" width="10" height="15" fill="rgb(206,201,0)"/><text x="546.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.44%)</title><rect x="548" y="212" width="5" height="15" fill="rgb(235,221,3)"/><text x="551.00" y="222.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.44%)</title><rect x="553" y="196" width="5" height="15" fill="rgb(225,57,14)"/><text x="556.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (1 samples, 0.44%)</title><rect x="553" y="212" width="5" height="15" fill="rgb(216,49,25)"/><text x="556.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (6 samples, 2.63%)</title><rect x="537" y="180" width="31" height="15" fill="rgb(248,28,28)"/><text x="540.00" y="190.50">di..</text></g><g><title>get (queue.py:181) (2 samples, 0.88%)</title><rect x="558" y="196" width="10" height="15" fill="rgb(222,115,8)"/><text x="561.00" y="206.50"></text></g><g><title>notify (threading.py:347) (1 samples, 0.44%)</title><rect x="563" y="212" width="5" height="15" fill="rgb(251,206,19)"/><text x="566.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (1 samples, 0.44%)</title><rect x="568" y="180" width="6" height="15" fill="rgb(248,3,27)"/><text x="571.00" y="190.50"></text></g><g><title>__len__ (joblib/parallel.py:259) (1 samples, 0.44%)</title><rect x="568" y="196" width="6" height="15" fill="rgb(239,137,42)"/><text x="571.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:749) (1 samples, 0.44%)</title><rect x="574" y="196" width="5" height="15" fill="rgb(207,103,53)"/><text x="577.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:327) (1 samples, 0.44%)</title><rect x="584" y="212" width="5" height="15" fill="rgb(248,124,8)"/><text x="587.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:328) (2 samples, 0.88%)</title><rect x="589" y="212" width="11" height="15" fill="rgb(221,42,50)"/><text x="592.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:329) (1 samples, 0.44%)</title><rect x="600" y="212" width="5" height="15" fill="rgb(238,35,45)"/><text x="603.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (6 samples, 2.63%)</title><rect x="579" y="196" width="31" height="15" fill="rgb(232,203,0)"/><text x="582.00" y="206.50">_d..</text></g><g><title>__len__ (joblib/parallel.py:258) (1 samples, 0.44%)</title><rect x="605" y="212" width="5" height="15" fill="rgb(207,85,25)"/><text x="608.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:751) (1 samples, 0.44%)</title><rect x="610" y="196" width="5" height="15" fill="rgb(234,28,24)"/><text x="613.00" y="206.50"></text></g><g><title>0x7fed3d8eb730 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="610" y="212" width="5" height="15" fill="rgb(233,161,28)"/><text x="613.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:181) (1 samples, 0.44%)</title><rect x="641" y="260" width="5" height="15" fill="rgb(252,43,5)"/><text x="644.00" y="270.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (2 samples, 0.88%)</title><rect x="646" y="260" width="10" height="15" fill="rgb(236,147,19)"/><text x="649.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (5 samples, 2.19%)</title><rect x="636" y="244" width="26" height="15" fill="rgb(210,37,2)"/><text x="639.00" y="254.50">_..</text></g><g><title>__init__ (joblib/parallel.py:207) (1 samples, 0.44%)</title><rect x="656" y="260" width="6" height="15" fill="rgb(215,74,1)"/><text x="659.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.44%)</title><rect x="693" y="308" width="5" height="15" fill="rgb(247,74,11)"/><text x="696.00" y="318.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:941) (2 samples, 0.88%)</title><rect x="698" y="308" width="10" height="15" fill="rgb(219,6,24)"/><text x="701.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (4 samples, 1.75%)</title><rect x="713" y="324" width="21" height="15" fill="rgb(253,57,44)"/><text x="716.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 2.63%)</title><rect x="734" y="324" width="31" height="15" fill="rgb(218,178,34)"/><text x="737.00" y="334.50">&lt;l..</text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.75%)</title><rect x="744" y="340" width="21" height="15" fill="rgb(250,36,26)"/><text x="747.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (16 samples, 7.02%)</title><rect x="693" y="292" width="82" height="15" fill="rgb(241,47,45)"/><text x="696.00" y="302.50">predict (..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (13 samples, 5.70%)</title><rect x="708" y="308" width="67" height="15" fill="rgb(210,175,16)"/><text x="711.00" y="318.50">check_i..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.88%)</title><rect x="765" y="324" width="10" height="15" fill="rgb(214,222,37)"/><text x="768.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.44%)</title><rect x="770" y="340" width="5" height="15" fill="rgb(236,3,16)"/><text x="773.00" y="350.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (1 samples, 0.44%)</title><rect x="775" y="308" width="6" height="15" fill="rgb(248,53,51)"/><text x="778.00" y="318.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.44%)</title><rect x="775" y="324" width="6" height="15" fill="rgb(248,93,35)"/><text x="778.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (2 samples, 0.88%)</title><rect x="775" y="292" width="11" height="15" fill="rgb(245,109,14)"/><text x="778.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (1 samples, 0.44%)</title><rect x="781" y="308" width="5" height="15" fill="rgb(240,222,34)"/><text x="784.00" y="318.50"></text></g><g><title>0x7fed17319d24 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="791" y="308" width="5" height="15" fill="rgb(209,185,18)"/><text x="794.00" y="318.50"></text></g><g><title>0x7fed17318f12 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="796" y="324" width="5" height="15" fill="rgb(215,109,19)"/><text x="799.00" y="334.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3210) (1 samples, 0.44%)</title><rect x="801" y="372" width="6" height="15" fill="rgb(236,39,5)"/><text x="804.00" y="382.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.44%)</title><rect x="807" y="372" width="5" height="15" fill="rgb(226,72,38)"/><text x="810.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.44%)</title><rect x="807" y="388" width="5" height="15" fill="rgb(234,65,50)"/><text x="810.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:432) (1 samples, 0.44%)</title><rect x="807" y="404" width="5" height="15" fill="rgb(241,91,0)"/><text x="810.00" y="414.50"></text></g><g><title>0x7fed17327225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.32%)</title><rect x="801" y="356" width="16" height="15" fill="rgb(254,229,33)"/><text x="804.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3248) (1 samples, 0.44%)</title><rect x="812" y="372" width="5" height="15" fill="rgb(211,167,22)"/><text x="815.00" y="382.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1505) (1 samples, 0.44%)</title><rect x="812" y="388" width="5" height="15" fill="rgb(241,140,24)"/><text x="815.00" y="398.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (2 samples, 0.88%)</title><rect x="817" y="452" width="10" height="15" fill="rgb(252,181,52)"/><text x="820.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.88%)</title><rect x="817" y="468" width="10" height="15" fill="rgb(227,73,21)"/><text x="820.00" y="478.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (3 samples, 1.32%)</title><rect x="817" y="436" width="15" height="15" fill="rgb(229,173,39)"/><text x="820.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.44%)</title><rect x="827" y="452" width="5" height="15" fill="rgb(209,3,36)"/><text x="830.00" y="462.50"></text></g><g><title>_buffer_format_string (buffer.c:237) (1 samples, 0.44%)</title><rect x="827" y="468" width="5" height="15" fill="rgb(216,115,5)"/><text x="830.00" y="478.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.44%)</title><rect x="832" y="436" width="6" height="15" fill="rgb(243,27,4)"/><text x="835.00" y="446.50"></text></g><g><title>0x7fed1730bd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.19%)</title><rect x="817" y="372" width="26" height="15" fill="rgb(236,209,23)"/><text x="820.00" y="382.50">0..</text></g><g><title>0x7fed1730b666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.19%)</title><rect x="817" y="388" width="26" height="15" fill="rgb(230,135,17)"/><text x="820.00" y="398.50">0..</text></g><g><title>0x7fed173012fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.19%)</title><rect x="817" y="404" width="26" height="15" fill="rgb(249,121,5)"/><text x="820.00" y="414.50">0..</text></g><g><title>array_getbuffer (buffer.c:782) (5 samples, 2.19%)</title><rect x="817" y="420" width="26" height="15" fill="rgb(219,32,16)"/><text x="820.00" y="430.50">a..</text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.44%)</title><rect x="838" y="436" width="5" height="15" fill="rgb(207,146,50)"/><text x="841.00" y="446.50"></text></g><g><title>0x7fed173272df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.63%)</title><rect x="817" y="356" width="31" height="15" fill="rgb(218,38,16)"/><text x="820.00" y="366.50">0x..</text></g><g><title>0x7fed1730be72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="843" y="372" width="5" height="15" fill="rgb(232,206,19)"/><text x="846.00" y="382.50"></text></g><g><title>0x7fed172ff2bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="843" y="388" width="5" height="15" fill="rgb(227,201,7)"/><text x="846.00" y="398.50"></text></g><g><title>0x7fed172fedec (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="843" y="404" width="5" height="15" fill="rgb(233,176,9)"/><text x="846.00" y="414.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.44%)</title><rect x="853" y="388" width="5" height="15" fill="rgb(242,92,10)"/><text x="856.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.44%)</title><rect x="853" y="404" width="5" height="15" fill="rgb(233,78,3)"/><text x="856.00" y="414.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.44%)</title><rect x="853" y="420" width="5" height="15" fill="rgb(212,51,20)"/><text x="856.00" y="430.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4560) (1 samples, 0.44%)</title><rect x="853" y="436" width="5" height="15" fill="rgb(243,47,51)"/><text x="856.00" y="446.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:98) (1 samples, 0.44%)</title><rect x="858" y="388" width="5" height="15" fill="rgb(249,14,11)"/><text x="861.00" y="398.50"></text></g><g><title>0x7fed17327592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.75%)</title><rect x="848" y="356" width="21" height="15" fill="rgb(217,210,21)"/><text x="851.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (4 samples, 1.75%)</title><rect x="848" y="372" width="21" height="15" fill="rgb(210,217,16)"/><text x="851.00" y="382.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.44%)</title><rect x="863" y="388" width="6" height="15" fill="rgb(209,204,39)"/><text x="866.00" y="398.50"></text></g><g><title>0x7fed17327693 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="869" y="356" width="5" height="15" fill="rgb(213,126,19)"/><text x="872.00" y="366.50"></text></g><g><title>0x7fed17327731 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="874" y="356" width="5" height="15" fill="rgb(239,80,23)"/><text x="877.00" y="366.50"></text></g><g><title>0x7fed173278c3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="879" y="356" width="5" height="15" fill="rgb(227,192,8)"/><text x="882.00" y="366.50"></text></g><g><title>0x7fed172ff529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="884" y="372" width="5" height="15" fill="rgb(250,101,31)"/><text x="887.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.44%)</title><rect x="884" y="388" width="5" height="15" fill="rgb(221,42,44)"/><text x="887.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.44%)</title><rect x="884" y="404" width="5" height="15" fill="rgb(219,190,39)"/><text x="887.00" y="414.50"></text></g><g><title>0x7fed172fefda (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="889" y="388" width="5" height="15" fill="rgb(229,62,8)"/><text x="892.00" y="398.50"></text></g><g><title>0x7fed172fe902 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="889" y="404" width="5" height="15" fill="rgb(242,28,23)"/><text x="892.00" y="414.50"></text></g><g><title>0x7fed17327c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.32%)</title><rect x="884" y="356" width="16" height="15" fill="rgb(234,50,20)"/><text x="887.00" y="366.50"></text></g><g><title>0x7fed172ff5f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.88%)</title><rect x="889" y="372" width="11" height="15" fill="rgb(240,179,29)"/><text x="892.00" y="382.50"></text></g><g><title>0x7fed172ff2a6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="894" y="388" width="6" height="15" fill="rgb(213,158,5)"/><text x="897.00" y="398.50"></text></g><g><title>0x7fed17328405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (20 samples, 8.77%)</title><rect x="801" y="340" width="104" height="15" fill="rgb(217,0,41)"/><text x="804.00" y="350.50">0x7fed173284..</text></g><g><title>0x7fed17327c2a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="900" y="356" width="5" height="15" fill="rgb(210,194,25)"/><text x="903.00" y="366.50"></text></g><g><title>0x7fed172fc4dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="905" y="372" width="5" height="15" fill="rgb(244,27,52)"/><text x="908.00" y="382.50"></text></g><g><title>0x7fed17318fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (22 samples, 9.65%)</title><rect x="801" y="324" width="114" height="15" fill="rgb(226,100,2)"/><text x="804.00" y="334.50">0x7fed17318fa6..</text></g><g><title>0x7fed17328540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.88%)</title><rect x="905" y="340" width="10" height="15" fill="rgb(254,153,34)"/><text x="908.00" y="350.50"></text></g><g><title>0x7fed172fd2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.88%)</title><rect x="905" y="356" width="10" height="15" fill="rgb(242,196,53)"/><text x="908.00" y="366.50"></text></g><g><title>0x7fed172fc570 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="910" y="372" width="5" height="15" fill="rgb(238,54,16)"/><text x="913.00" y="382.50"></text></g><g><title>0x7fed17319011 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="915" y="324" width="5" height="15" fill="rgb(206,149,7)"/><text x="918.00" y="334.50"></text></g><g><title>array_take (methods.c:138) (3 samples, 1.32%)</title><rect x="920" y="340" width="16" height="15" fill="rgb(248,60,6)"/><text x="923.00" y="350.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.44%)</title><rect x="931" y="356" width="5" height="15" fill="rgb(252,166,14)"/><text x="934.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3947) (1 samples, 0.44%)</title><rect x="936" y="372" width="5" height="15" fill="rgb(242,62,52)"/><text x="939.00" y="382.50"></text></g><g><title>0x7fed1731905a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.19%)</title><rect x="920" y="324" width="26" height="15" fill="rgb(221,158,46)"/><text x="923.00" y="334.50">0..</text></g><g><title>array_take (methods.c:145) (2 samples, 0.88%)</title><rect x="936" y="340" width="10" height="15" fill="rgb(237,177,3)"/><text x="939.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.88%)</title><rect x="936" y="356" width="10" height="15" fill="rgb(231,169,47)"/><text x="939.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3957) (1 samples, 0.44%)</title><rect x="941" y="372" width="5" height="15" fill="rgb(243,12,6)"/><text x="944.00" y="382.50"></text></g><g><title>0x7fed1731913a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="946" y="324" width="5" height="15" fill="rgb(232,2,40)"/><text x="949.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.44%)</title><rect x="946" y="340" width="5" height="15" fill="rgb(216,7,37)"/><text x="949.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.44%)</title><rect x="946" y="356" width="5" height="15" fill="rgb(206,54,13)"/><text x="949.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.44%)</title><rect x="946" y="372" width="5" height="15" fill="rgb(222,29,37)"/><text x="949.00" y="382.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.44%)</title><rect x="951" y="340" width="6" height="15" fill="rgb(214,134,16)"/><text x="954.00" y="350.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.44%)</title><rect x="951" y="356" width="6" height="15" fill="rgb(231,27,9)"/><text x="954.00" y="366.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (34 samples, 14.91%)</title><rect x="786" y="292" width="176" height="15" fill="rgb(216,141,21)"/><text x="789.00" y="302.50">predict (sklearn/tree/..</text></g><g><title>0x7fed17319d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (32 samples, 14.04%)</title><rect x="796" y="308" width="166" height="15" fill="rgb(216,217,43)"/><text x="799.00" y="318.50">0x7fed17319d2e (sklea..</text></g><g><title>0x7fed17319328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.88%)</title><rect x="951" y="324" width="11" height="15" fill="rgb(243,23,26)"/><text x="954.00" y="334.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.44%)</title><rect x="957" y="340" width="5" height="15" fill="rgb(238,30,43)"/><text x="960.00" y="350.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.44%)</title><rect x="957" y="356" width="5" height="15" fill="rgb(252,132,5)"/><text x="960.00" y="366.50"></text></g><g><title>PyArray_Newshape (shape.c:241) (1 samples, 0.44%)</title><rect x="957" y="372" width="5" height="15" fill="rgb(235,11,6)"/><text x="960.00" y="382.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.44%)</title><rect x="957" y="388" width="5" height="15" fill="rgb(237,94,39)"/><text x="960.00" y="398.50"></text></g><g><title>predict (sklearn/tree/_classes.py:421) (1 samples, 0.44%)</title><rect x="962" y="292" width="5" height="15" fill="rgb(222,177,19)"/><text x="965.00" y="302.50"></text></g><g><title>is_classifier (sklearn/base.py:639) (1 samples, 0.44%)</title><rect x="972" y="308" width="5" height="15" fill="rgb(238,0,22)"/><text x="975.00" y="318.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (56 samples, 24.56%)</title><rect x="693" y="276" width="289" height="15" fill="rgb(235,183,16)"/><text x="696.00" y="286.50">_accumulate_prediction (sklearn/ensemb..</text></g><g><title>predict (sklearn/tree/_classes.py:424) (3 samples, 1.32%)</title><rect x="967" y="292" width="15" height="15" fill="rgb(245,30,41)"/><text x="970.00" y="302.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (1 samples, 0.44%)</title><rect x="977" y="308" width="5" height="15" fill="rgb(233,33,40)"/><text x="980.00" y="318.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (1 samples, 0.44%)</title><rect x="982" y="276" width="6" height="15" fill="rgb(248,79,26)"/><text x="985.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.44%)</title><rect x="988" y="292" width="5" height="15" fill="rgb(241,217,19)"/><text x="991.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.44%)</title><rect x="988" y="308" width="5" height="15" fill="rgb(254,213,39)"/><text x="991.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.44%)</title><rect x="988" y="324" width="5" height="15" fill="rgb(244,113,21)"/><text x="991.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:47) (1 samples, 0.44%)</title><rect x="988" y="340" width="5" height="15" fill="rgb(207,75,1)"/><text x="991.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1042) (1 samples, 0.44%)</title><rect x="993" y="324" width="5" height="15" fill="rgb(253,197,28)"/><text x="996.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.88%)</title><rect x="993" y="308" width="10" height="15" fill="rgb(229,33,32)"/><text x="996.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1110) (1 samples, 0.44%)</title><rect x="998" y="324" width="5" height="15" fill="rgb(254,177,21)"/><text x="1001.00" y="334.50"></text></g><g><title>_set_out_array (ufunc_object.c:824) (1 samples, 0.44%)</title><rect x="998" y="340" width="5" height="15" fill="rgb(213,215,22)"/><text x="1001.00" y="350.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:700) (1 samples, 0.44%)</title><rect x="998" y="356" width="5" height="15" fill="rgb(244,101,36)"/><text x="1001.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.44%)</title><rect x="1003" y="308" width="5" height="15" fill="rgb(233,200,14)"/><text x="1006.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.44%)</title><rect x="1003" y="324" width="5" height="15" fill="rgb(222,89,33)"/><text x="1006.00" y="334.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.44%)</title><rect x="1003" y="340" width="5" height="15" fill="rgb(225,169,40)"/><text x="1006.00" y="350.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1804) (1 samples, 0.44%)</title><rect x="1003" y="356" width="5" height="15" fill="rgb(230,45,37)"/><text x="1006.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.44%)</title><rect x="1008" y="308" width="6" height="15" fill="rgb(207,61,45)"/><text x="1011.00" y="318.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.44%)</title><rect x="1008" y="324" width="6" height="15" fill="rgb(235,116,8)"/><text x="1011.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.44%)</title><rect x="1014" y="324" width="5" height="15" fill="rgb(223,116,14)"/><text x="1017.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.44%)</title><rect x="1014" y="340" width="5" height="15" fill="rgb(211,54,44)"/><text x="1017.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.44%)</title><rect x="1014" y="356" width="5" height="15" fill="rgb(223,111,29)"/><text x="1017.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:618) (1 samples, 0.44%)</title><rect x="1014" y="372" width="5" height="15" fill="rgb(218,143,36)"/><text x="1017.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1500) (1 samples, 0.44%)</title><rect x="1019" y="340" width="5" height="15" fill="rgb(236,192,44)"/><text x="1022.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.44%)</title><rect x="1024" y="356" width="5" height="15" fill="rgb(251,181,16)"/><text x="1027.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.44%)</title><rect x="1024" y="372" width="5" height="15" fill="rgb(209,111,32)"/><text x="1027.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.88%)</title><rect x="1029" y="356" width="10" height="15" fill="rgb(228,182,6)"/><text x="1032.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2812) (2 samples, 0.88%)</title><rect x="1029" y="372" width="10" height="15" fill="rgb(242,132,41)"/><text x="1032.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 1.75%)</title><rect x="1024" y="340" width="21" height="15" fill="rgb(243,178,25)"/><text x="1027.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.44%)</title><rect x="1039" y="356" width="6" height="15" fill="rgb(206,80,25)"/><text x="1042.00" y="366.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3131) (1 samples, 0.44%)</title><rect x="1039" y="372" width="6" height="15" fill="rgb(254,146,16)"/><text x="1042.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 4.82%)</title><rect x="993" y="292" width="57" height="15" fill="rgb(219,196,11)"/><text x="996.00" y="302.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 3.07%)</title><rect x="1014" y="308" width="36" height="15" fill="rgb(225,91,27)"/><text x="1017.00" y="318.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 2.63%)</title><rect x="1019" y="324" width="31" height="15" fill="rgb(218,193,13)"/><text x="1022.00" y="334.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.44%)</title><rect x="1045" y="340" width="5" height="15" fill="rgb(243,71,12)"/><text x="1048.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.44%)</title><rect x="1045" y="356" width="5" height="15" fill="rgb(249,11,11)"/><text x="1048.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.44%)</title><rect x="1050" y="292" width="5" height="15" fill="rgb(226,172,42)"/><text x="1053.00" y="302.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.44%)</title><rect x="1050" y="308" width="5" height="15" fill="rgb(226,3,3)"/><text x="1053.00" y="318.50"></text></g><g><title>_find_array_method (ufunc_object.c:216) (1 samples, 0.44%)</title><rect x="1050" y="324" width="5" height="15" fill="rgb(211,120,40)"/><text x="1053.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.44%)</title><rect x="1055" y="292" width="5" height="15" fill="rgb(245,24,2)"/><text x="1058.00" y="302.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:473) (1 samples, 0.44%)</title><rect x="1055" y="308" width="5" height="15" fill="rgb(234,63,16)"/><text x="1058.00" y="318.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (15 samples, 6.58%)</title><rect x="988" y="276" width="77" height="15" fill="rgb(212,173,1)"/><text x="991.00" y="286.50">_accumul..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (1 samples, 0.44%)</title><rect x="1060" y="292" width="5" height="15" fill="rgb(229,105,30)"/><text x="1063.00" y="302.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:455) (2 samples, 0.88%)</title><rect x="1065" y="276" width="11" height="15" fill="rgb(228,16,34)"/><text x="1068.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (76 samples, 33.33%)</title><rect x="687" y="260" width="394" height="15" fill="rgb(225,118,20)"/><text x="690.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:256)</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.44%)</title><rect x="1076" y="276" width="5" height="15" fill="rgb(252,213,18)"/><text x="1079.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.44%)</title><rect x="1076" y="292" width="5" height="15" fill="rgb(233,54,12)"/><text x="1079.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:949) (1 samples, 0.44%)</title><rect x="1076" y="308" width="5" height="15" fill="rgb(250,154,10)"/><text x="1079.00" y="318.50"></text></g><g><title>unregister (joblib/parallel.py:219) (1 samples, 0.44%)</title><rect x="1081" y="276" width="5" height="15" fill="rgb(231,167,46)"/><text x="1084.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (93 samples, 40.79%)</title><rect x="620" y="212" width="482" height="15" fill="rgb(224,65,17)"/><text x="623.00" y="222.50">apply_async (joblib/_parallel_backends.py:201)</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (93 samples, 40.79%)</title><rect x="620" y="228" width="482" height="15" fill="rgb(225,157,23)"/><text x="623.00" y="238.50">__init__ (joblib/_parallel_backends.py:582)</text></g><g><title>__call__ (joblib/parallel.py:256) (85 samples, 37.28%)</title><rect x="662" y="244" width="440" height="15" fill="rgb(246,228,16)"/><text x="665.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (4 samples, 1.75%)</title><rect x="1081" y="260" width="21" height="15" fill="rgb(238,8,17)"/><text x="1084.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:220) (3 samples, 1.32%)</title><rect x="1086" y="276" width="16" height="15" fill="rgb(245,24,43)"/><text x="1089.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (1 samples, 0.44%)</title><rect x="1112" y="228" width="5" height="15" fill="rgb(244,142,44)"/><text x="1115.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:337) (2 samples, 0.88%)</title><rect x="1117" y="228" width="10" height="15" fill="rgb(249,51,35)"/><text x="1120.00" y="238.50"></text></g><g><title>print_progress (joblib/parallel.py:854) (1 samples, 0.44%)</title><rect x="1122" y="244" width="5" height="15" fill="rgb(230,88,30)"/><text x="1125.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py:338) (2 samples, 0.88%)</title><rect x="1127" y="228" width="11" height="15" fill="rgb(212,47,53)"/><text x="1130.00" y="238.50"></text></g><g><title>0x7fed3d8eb734 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="1133" y="244" width="5" height="15" fill="rgb(228,40,14)"/><text x="1136.00" y="254.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (8 samples, 3.51%)</title><rect x="1102" y="212" width="41" height="15" fill="rgb(232,114,39)"/><text x="1105.00" y="222.50">app..</text></g><g><title>__call__ (joblib/parallel.py:339) (1 samples, 0.44%)</title><rect x="1138" y="228" width="5" height="15" fill="rgb(228,140,30)"/><text x="1141.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (111 samples, 48.68%)</title><rect x="574" y="180" width="574" height="15" fill="rgb(241,177,14)"/><text x="577.00" y="190.50">dispatch_one_batch (joblib/parallel.py:834)</text></g><g><title>_dispatch (joblib/parallel.py:753) (103 samples, 45.18%)</title><rect x="615" y="196" width="533" height="15" fill="rgb(208,126,40)"/><text x="618.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:204) (1 samples, 0.44%)</title><rect x="1143" y="212" width="5" height="15" fill="rgb(235,215,27)"/><text x="1146.00" y="222.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (187 samples, 82.02%)</title><rect x="185" y="148" width="968" height="15" fill="rgb(231,187,25)"/><text x="188.00" y="158.50">predict (sklearn/ensemble/_forest.py:782)</text></g><g><title>__call__ (joblib/parallel.py:1006) (184 samples, 80.70%)</title><rect x="201" y="164" width="952" height="15" fill="rgb(238,83,29)"/><text x="204.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:835) (1 samples, 0.44%)</title><rect x="1148" y="180" width="5" height="15" fill="rgb(236,176,12)"/><text x="1151.00" y="190.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.44%)</title><rect x="1148" y="196" width="5" height="15" fill="rgb(243,208,51)"/><text x="1151.00" y="206.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.44%)</title><rect x="1148" y="212" width="5" height="15" fill="rgb(235,1,38)"/><text x="1151.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:54) (190 samples, 83.33%)</title><rect x="175" y="52" width="983" height="15" fill="rgb(220,36,33)"/><text x="178.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:53) (190 samples, 83.33%)</title><rect x="175" y="68" width="983" height="15" fill="rgb(236,23,47)"/><text x="178.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:37) (189 samples, 82.89%)</title><rect x="180" y="84" width="978" height="15" fill="rgb(228,215,26)"/><text x="183.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:37)</text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:31) (189 samples, 82.89%)</title><rect x="180" y="100" width="978" height="15" fill="rgb(238,37,5)"/><text x="183.00" y="110.50">profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (189 samples, 82.89%)</title><rect x="180" y="116" width="978" height="15" fill="rgb(250,130,30)"/><text x="183.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (189 samples, 82.89%)</title><rect x="180" y="132" width="978" height="15" fill="rgb(249,96,14)"/><text x="183.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/ensemble/_forest.py:784) (1 samples, 0.44%)</title><rect x="1153" y="148" width="5" height="15" fill="rgb(230,83,45)"/><text x="1156.00" y="158.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.44%)</title><rect x="1153" y="164" width="5" height="15" fill="rgb(235,97,9)"/><text x="1156.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.44%)</title><rect x="1153" y="180" width="5" height="15" fill="rgb(227,110,50)"/><text x="1156.00" y="190.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.44%)</title><rect x="1153" y="196" width="5" height="15" fill="rgb(209,161,7)"/><text x="1156.00" y="206.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.44%)</title><rect x="1153" y="212" width="5" height="15" fill="rgb(230,139,51)"/><text x="1156.00" y="222.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.44%)</title><rect x="1153" y="228" width="5" height="15" fill="rgb(212,145,45)"/><text x="1156.00" y="238.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.44%)</title><rect x="1153" y="244" width="5" height="15" fill="rgb(233,204,11)"/><text x="1156.00" y="254.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.44%)</title><rect x="1153" y="260" width="5" height="15" fill="rgb(239,129,14)"/><text x="1156.00" y="270.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:722) (1 samples, 0.44%)</title><rect x="1153" y="276" width="5" height="15" fill="rgb(242,181,33)"/><text x="1156.00" y="286.50"></text></g><g><title>0x7fecfe3ae54f (?) (1 samples, 0.44%)</title><rect x="1158" y="244" width="6" height="15" fill="rgb(224,144,49)"/><text x="1161.00" y="254.50"></text></g><g><title>0x7fecfe3b465e (?) (1 samples, 0.44%)</title><rect x="1158" y="260" width="6" height="15" fill="rgb(251,136,23)"/><text x="1161.00" y="270.50"></text></g><g><title>0x7fecfe3b450f (?) (1 samples, 0.44%)</title><rect x="1158" y="276" width="6" height="15" fill="rgb(244,205,32)"/><text x="1161.00" y="286.50"></text></g><g><title>0x7fecfe3bad6c (?) (1 samples, 0.44%)</title><rect x="1158" y="292" width="6" height="15" fill="rgb(237,113,11)"/><text x="1161.00" y="302.50"></text></g><g><title>0x7fed0789bab9 (?) (1 samples, 0.44%)</title><rect x="1158" y="308" width="6" height="15" fill="rgb(234,66,4)"/><text x="1161.00" y="318.50"></text></g><g><title>0x7fed0789ceab (?) (1 samples, 0.44%)</title><rect x="1158" y="324" width="6" height="15" fill="rgb(223,75,53)"/><text x="1161.00" y="334.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:61) (2 samples, 0.88%)</title><rect x="1158" y="52" width="11" height="15" fill="rgb(236,101,48)"/><text x="1161.00" y="62.50"></text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:60) (2 samples, 0.88%)</title><rect x="1158" y="68" width="11" height="15" fill="rgb(249,218,23)"/><text x="1161.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:37) (2 samples, 0.88%)</title><rect x="1158" y="84" width="11" height="15" fill="rgb(241,228,2)"/><text x="1161.00" y="94.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:31) (2 samples, 0.88%)</title><rect x="1158" y="100" width="11" height="15" fill="rgb(213,47,24)"/><text x="1161.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.88%)</title><rect x="1158" y="116" width="11" height="15" fill="rgb(214,67,7)"/><text x="1161.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (2 samples, 0.88%)</title><rect x="1158" y="132" width="11" height="15" fill="rgb(211,37,10)"/><text x="1161.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.88%)</title><rect x="1158" y="148" width="11" height="15" fill="rgb(246,140,18)"/><text x="1161.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (2 samples, 0.88%)</title><rect x="1158" y="164" width="11" height="15" fill="rgb(244,125,45)"/><text x="1161.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (2 samples, 0.88%)</title><rect x="1158" y="180" width="11" height="15" fill="rgb(212,173,45)"/><text x="1161.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (2 samples, 0.88%)</title><rect x="1158" y="196" width="11" height="15" fill="rgb(208,61,50)"/><text x="1161.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (2 samples, 0.88%)</title><rect x="1158" y="212" width="11" height="15" fill="rgb(205,228,49)"/><text x="1161.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (2 samples, 0.88%)</title><rect x="1158" y="228" width="11" height="15" fill="rgb(236,53,12)"/><text x="1161.00" y="238.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (1 samples, 0.44%)</title><rect x="1164" y="244" width="5" height="15" fill="rgb(207,136,11)"/><text x="1167.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (1 samples, 0.44%)</title><rect x="1164" y="260" width="5" height="15" fill="rgb(253,79,41)"/><text x="1167.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (1 samples, 0.44%)</title><rect x="1164" y="276" width="5" height="15" fill="rgb(214,54,27)"/><text x="1167.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (1 samples, 0.44%)</title><rect x="1164" y="292" width="5" height="15" fill="rgb(250,158,37)"/><text x="1167.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (1 samples, 0.44%)</title><rect x="1164" y="308" width="5" height="15" fill="rgb(250,228,10)"/><text x="1167.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (1 samples, 0.44%)</title><rect x="1164" y="324" width="5" height="15" fill="rgb(235,149,0)"/><text x="1167.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (1 samples, 0.44%)</title><rect x="1164" y="340" width="5" height="15" fill="rgb(225,218,9)"/><text x="1167.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (1 samples, 0.44%)</title><rect x="1164" y="356" width="5" height="15" fill="rgb(245,64,54)"/><text x="1167.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (1 samples, 0.44%)</title><rect x="1164" y="372" width="5" height="15" fill="rgb(240,146,47)"/><text x="1167.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (1 samples, 0.44%)</title><rect x="1164" y="388" width="5" height="15" fill="rgb(234,106,10)"/><text x="1167.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.44%)</title><rect x="1164" y="404" width="5" height="15" fill="rgb(211,33,1)"/><text x="1167.00" y="414.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (1 samples, 0.44%)</title><rect x="1164" y="420" width="5" height="15" fill="rgb(222,168,47)"/><text x="1167.00" y="430.50"></text></g><g><title>pybind11::array::size (numpy.h:619) (1 samples, 0.44%)</title><rect x="1164" y="436" width="5" height="15" fill="rgb(211,110,1)"/><text x="1167.00" y="446.50"></text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (1 samples, 0.44%)</title><rect x="1164" y="452" width="5" height="15" fill="rgb(214,210,44)"/><text x="1167.00" y="462.50"></text></g><g><title>0x7fed0789bab9 (libgomp.so.1.0.0) (1 samples, 0.44%)</title><rect x="1164" y="468" width="5" height="15" fill="rgb(214,72,17)"/><text x="1167.00" y="478.50"></text></g><g><title>0x7fed0789cead (libgomp.so.1.0.0) (1 samples, 0.44%)</title><rect x="1164" y="484" width="5" height="15" fill="rgb(247,88,43)"/><text x="1167.00" y="494.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:36) (1 samples, 0.44%)</title><rect x="1169" y="84" width="5" height="15" fill="rgb(217,114,17)"/><text x="1172.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:168) (1 samples, 0.44%)</title><rect x="1169" y="100" width="5" height="15" fill="rgb(218,135,20)"/><text x="1172.00" y="110.50"></text></g><g><title>_pickle_load (_pickle.c.h:510) (1 samples, 0.44%)</title><rect x="1169" y="116" width="5" height="15" fill="rgb(236,206,29)"/><text x="1172.00" y="126.50"></text></g><g><title>_pickle_load_impl (_pickle.c:7333) (1 samples, 0.44%)</title><rect x="1169" y="132" width="5" height="15" fill="rgb(243,203,34)"/><text x="1172.00" y="142.50"></text></g><g><title>load (_pickle.c:6479) (1 samples, 0.44%)</title><rect x="1169" y="148" width="5" height="15" fill="rgb(206,24,50)"/><text x="1172.00" y="158.50"></text></g><g><title>load_reduce (_pickle.c:6335) (1 samples, 0.44%)</title><rect x="1169" y="164" width="5" height="15" fill="rgb(214,26,15)"/><text x="1172.00" y="174.50"></text></g><g><title>array__reconstruct (multiarraymodule.c:2830) (1 samples, 0.44%)</title><rect x="1169" y="180" width="5" height="15" fill="rgb(225,14,15)"/><text x="1172.00" y="190.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:567) (1 samples, 0.44%)</title><rect x="1174" y="164" width="5" height="15" fill="rgb(213,66,14)"/><text x="1177.00" y="174.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (2 samples, 0.88%)</title><rect x="1174" y="132" width="10" height="15" fill="rgb(207,207,53)"/><text x="1177.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.88%)</title><rect x="1174" y="148" width="10" height="15" fill="rgb(219,224,16)"/><text x="1177.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (1 samples, 0.44%)</title><rect x="1179" y="164" width="5" height="15" fill="rgb(218,137,0)"/><text x="1182.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (1 samples, 0.44%)</title><rect x="1179" y="180" width="5" height="15" fill="rgb(240,39,53)"/><text x="1182.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (1 samples, 0.44%)</title><rect x="1179" y="196" width="5" height="15" fill="rgb(221,194,40)"/><text x="1182.00" y="206.50"></text></g><g><title>0x7fecfd913ff9 (?) (1 samples, 0.44%)</title><rect x="1179" y="212" width="5" height="15" fill="rgb(222,33,36)"/><text x="1182.00" y="222.50"></text></g><g><title>0x7fecfd90eef6 (?) (1 samples, 0.44%)</title><rect x="1179" y="228" width="5" height="15" fill="rgb(227,20,14)"/><text x="1182.00" y="238.50"></text></g><g><title>0x7fecfd903962 (?) (1 samples, 0.44%)</title><rect x="1179" y="244" width="5" height="15" fill="rgb(214,23,41)"/><text x="1182.00" y="254.50"></text></g><g><title>0x7fecfd9377a7 (?) (1 samples, 0.44%)</title><rect x="1179" y="260" width="5" height="15" fill="rgb(253,54,5)"/><text x="1182.00" y="270.50"></text></g><g><title>0x7fecfd936f8a (?) (1 samples, 0.44%)</title><rect x="1179" y="276" width="5" height="15" fill="rgb(248,10,20)"/><text x="1182.00" y="286.50"></text></g><g><title>0x7fecfd92ff11 (?) (1 samples, 0.44%)</title><rect x="1179" y="292" width="5" height="15" fill="rgb(254,138,4)"/><text x="1182.00" y="302.50"></text></g><g><title>0x7fecfdd50eb2 (?) (1 samples, 0.44%)</title><rect x="1179" y="308" width="5" height="15" fill="rgb(233,127,3)"/><text x="1182.00" y="318.50"></text></g><g><title>all (228 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(246,160,16)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:68) (4 samples, 1.75%)</title><rect x="1169" y="52" width="21" height="15" fill="rgb(222,142,26)"/><text x="1172.00" y="62.50"></text></g><g><title>profile_ort (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:67) (4 samples, 1.75%)</title><rect x="1169" y="68" width="21" height="15" fill="rgb(206,155,5)"/><text x="1172.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:37) (3 samples, 1.32%)</title><rect x="1174" y="84" width="16" height="15" fill="rgb(230,219,4)"/><text x="1177.00" y="94.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py:31) (3 samples, 1.32%)</title><rect x="1174" y="100" width="16" height="15" fill="rgb(242,51,20)"/><text x="1177.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 1.32%)</title><rect x="1174" y="116" width="16" height="15" fill="rgb(231,158,16)"/><text x="1177.00" y="126.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.44%)</title><rect x="1184" y="132" width="6" height="15" fill="rgb(243,170,16)"/><text x="1187.00" y="142.50"></text></g></g></svg>