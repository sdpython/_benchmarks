<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2326" onload="init(evt)" viewBox="0 0 1200 2326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2326" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2309.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2309.00"> </text><g id="frames"><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(238,180,24)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(226,151,37)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(254,56,42)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(243,71,10)"/><text x="13.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(221,62,36)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(247,144,16)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="964" width="2" height="15" fill="rgb(243,132,39)"/><text x="13.00" y="974.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="12" y="900" width="3" height="15" fill="rgb(231,38,9)"/><text x="15.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="12" y="916" width="3" height="15" fill="rgb(208,15,36)"/><text x="15.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="12" y="932" width="3" height="15" fill="rgb(216,96,4)"/><text x="15.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.25%)</title><rect x="12" y="948" width="3" height="15" fill="rgb(213,144,15)"/><text x="15.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.25%)</title><rect x="12" y="964" width="3" height="15" fill="rgb(211,221,5)"/><text x="15.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.25%)</title><rect x="12" y="980" width="3" height="15" fill="rgb(222,216,23)"/><text x="15.00" y="990.50"></text></g><g><title>basename (posixpath.py) (1 samples, 0.25%)</title><rect x="18" y="916" width="3" height="15" fill="rgb(213,60,13)"/><text x="21.00" y="926.50"></text></g><g><title>_get_sep (posixpath.py) (1 samples, 0.25%)</title><rect x="18" y="932" width="3" height="15" fill="rgb(252,212,27)"/><text x="21.00" y="942.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 1.25%)</title><rect x="10" y="836" width="14" height="15" fill="rgb(213,132,12)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 1.25%)</title><rect x="10" y="852" width="14" height="15" fill="rgb(251,127,41)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (4 samples, 1.00%)</title><rect x="12" y="868" width="12" height="15" fill="rgb(231,85,38)"/><text x="15.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (4 samples, 1.00%)</title><rect x="12" y="884" width="12" height="15" fill="rgb(248,101,52)"/><text x="15.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (3 samples, 0.75%)</title><rect x="15" y="900" width="9" height="15" fill="rgb(210,144,25)"/><text x="18.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="21" y="916" width="3" height="15" fill="rgb(209,215,28)"/><text x="24.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="21" y="932" width="3" height="15" fill="rgb(235,210,22)"/><text x="24.00" y="942.50"></text></g><g><title>safe_name (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="21" y="948" width="3" height="15" fill="rgb(249,155,45)"/><text x="24.00" y="958.50"></text></g><g><title>sub (re.py) (1 samples, 0.25%)</title><rect x="21" y="964" width="3" height="15" fill="rgb(208,140,2)"/><text x="24.00" y="974.50"></text></g><g><title>_compile (re.py) (1 samples, 0.25%)</title><rect x="21" y="980" width="3" height="15" fill="rgb(249,187,51)"/><text x="24.00" y="990.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="1380" width="3" height="15" fill="rgb(242,136,33)"/><text x="30.00" y="1390.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="1396" width="3" height="15" fill="rgb(218,63,39)"/><text x="30.00" y="1406.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="27" y="1412" width="3" height="15" fill="rgb(248,205,44)"/><text x="30.00" y="1422.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.25%)</title><rect x="27" y="1428" width="3" height="15" fill="rgb(229,34,40)"/><text x="30.00" y="1438.50"></text></g><g><title>0x7f6cf0add3fe (?) (1 samples, 0.25%)</title><rect x="30" y="1412" width="3" height="15" fill="rgb(222,229,6)"/><text x="33.00" y="1422.50"></text></g><g><title>&lt;module&gt; (email/parser.py) (4 samples, 1.00%)</title><rect x="24" y="916" width="12" height="15" fill="rgb(223,57,35)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="24" y="932" width="12" height="15" fill="rgb(238,84,23)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="24" y="948" width="12" height="15" fill="rgb(207,31,27)"/><text x="27.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="24" y="964" width="12" height="15" fill="rgb(214,48,21)"/><text x="27.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.00%)</title><rect x="24" y="980" width="12" height="15" fill="rgb(230,138,4)"/><text x="27.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="24" y="996" width="12" height="15" fill="rgb(234,87,16)"/><text x="27.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py) (4 samples, 1.00%)</title><rect x="24" y="1012" width="12" height="15" fill="rgb(235,133,17)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="24" y="1028" width="12" height="15" fill="rgb(222,222,23)"/><text x="27.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="24" y="1044" width="12" height="15" fill="rgb(245,25,54)"/><text x="27.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="24" y="1060" width="12" height="15" fill="rgb(220,121,45)"/><text x="27.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.00%)</title><rect x="24" y="1076" width="12" height="15" fill="rgb(221,12,36)"/><text x="27.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="24" y="1092" width="12" height="15" fill="rgb(239,35,15)"/><text x="27.00" y="1102.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py) (4 samples, 1.00%)</title><rect x="24" y="1108" width="12" height="15" fill="rgb(240,14,34)"/><text x="27.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="24" y="1124" width="12" height="15" fill="rgb(243,228,15)"/><text x="27.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="24" y="1140" width="12" height="15" fill="rgb(217,213,17)"/><text x="27.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="24" y="1156" width="12" height="15" fill="rgb(240,115,52)"/><text x="27.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.00%)</title><rect x="24" y="1172" width="12" height="15" fill="rgb(205,225,33)"/><text x="27.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="24" y="1188" width="12" height="15" fill="rgb(238,66,46)"/><text x="27.00" y="1198.50"></text></g><g><title>&lt;module&gt; (email/utils.py) (4 samples, 1.00%)</title><rect x="24" y="1204" width="12" height="15" fill="rgb(215,195,29)"/><text x="27.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="24" y="1220" width="12" height="15" fill="rgb(221,16,37)"/><text x="27.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="24" y="1236" width="12" height="15" fill="rgb(248,173,10)"/><text x="27.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="24" y="1252" width="12" height="15" fill="rgb(211,11,1)"/><text x="27.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.00%)</title><rect x="24" y="1268" width="12" height="15" fill="rgb(237,0,2)"/><text x="27.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="24" y="1284" width="12" height="15" fill="rgb(212,203,33)"/><text x="27.00" y="1294.50"></text></g><g><title>&lt;module&gt; (socket.py) (4 samples, 1.00%)</title><rect x="24" y="1300" width="12" height="15" fill="rgb(220,106,27)"/><text x="27.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="1316" width="9" height="15" fill="rgb(248,100,25)"/><text x="30.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="1332" width="9" height="15" fill="rgb(225,165,32)"/><text x="30.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="1348" width="9" height="15" fill="rgb(233,65,27)"/><text x="30.00" y="1358.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="1364" width="9" height="15" fill="rgb(220,221,29)"/><text x="30.00" y="1374.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="30" y="1380" width="6" height="15" fill="rgb(251,95,15)"/><text x="33.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1396" width="6" height="15" fill="rgb(212,61,3)"/><text x="33.00" y="1406.50"></text></g><g><title>PyInit__socket (socketmodule.c) (1 samples, 0.25%)</title><rect x="33" y="1412" width="3" height="15" fill="rgb(222,153,9)"/><text x="36.00" y="1422.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="33" y="1428" width="3" height="15" fill="rgb(244,162,23)"/><text x="36.00" y="1438.50"></text></g><g><title>0x7f6d01c1e8a8 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="33" y="1444" width="3" height="15" fill="rgb(228,110,48)"/><text x="36.00" y="1454.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.25%)</title><rect x="36" y="1108" width="3" height="15" fill="rgb(237,179,42)"/><text x="39.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.25%)</title><rect x="36" y="1124" width="3" height="15" fill="rgb(242,64,19)"/><text x="39.00" y="1134.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.25%)</title><rect x="36" y="1140" width="3" height="15" fill="rgb(231,36,29)"/><text x="39.00" y="1150.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (11 samples, 2.75%)</title><rect x="10" y="292" width="32" height="15" fill="rgb(252,86,32)"/><text x="13.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="308" width="32" height="15" fill="rgb(236,65,51)"/><text x="13.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="324" width="32" height="15" fill="rgb(218,23,32)"/><text x="13.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="340" width="32" height="15" fill="rgb(221,101,10)"/><text x="13.00" y="350.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 2.75%)</title><rect x="10" y="356" width="32" height="15" fill="rgb(252,75,42)"/><text x="13.00" y="366.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="372" width="32" height="15" fill="rgb(254,148,3)"/><text x="13.00" y="382.50">_c..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (11 samples, 2.75%)</title><rect x="10" y="388" width="32" height="15" fill="rgb(225,180,42)"/><text x="13.00" y="398.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="404" width="32" height="15" fill="rgb(247,20,53)"/><text x="13.00" y="414.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="420" width="32" height="15" fill="rgb(215,32,32)"/><text x="13.00" y="430.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="436" width="32" height="15" fill="rgb(227,46,49)"/><text x="13.00" y="446.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 2.75%)</title><rect x="10" y="452" width="32" height="15" fill="rgb(214,138,14)"/><text x="13.00" y="462.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="468" width="32" height="15" fill="rgb(227,116,45)"/><text x="13.00" y="478.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (11 samples, 2.75%)</title><rect x="10" y="484" width="32" height="15" fill="rgb(212,31,14)"/><text x="13.00" y="494.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="500" width="32" height="15" fill="rgb(217,199,10)"/><text x="13.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="516" width="32" height="15" fill="rgb(214,105,44)"/><text x="13.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="532" width="32" height="15" fill="rgb(209,89,24)"/><text x="13.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 2.75%)</title><rect x="10" y="548" width="32" height="15" fill="rgb(243,223,50)"/><text x="13.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="564" width="32" height="15" fill="rgb(224,215,33)"/><text x="13.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (11 samples, 2.75%)</title><rect x="10" y="580" width="32" height="15" fill="rgb(224,110,3)"/><text x="13.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="596" width="32" height="15" fill="rgb(207,143,42)"/><text x="13.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="612" width="32" height="15" fill="rgb(237,27,3)"/><text x="13.00" y="622.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="628" width="32" height="15" fill="rgb(221,142,34)"/><text x="13.00" y="638.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="644" width="32" height="15" fill="rgb(236,132,38)"/><text x="13.00" y="654.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="660" width="32" height="15" fill="rgb(252,0,5)"/><text x="13.00" y="670.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="676" width="32" height="15" fill="rgb(250,47,32)"/><text x="13.00" y="686.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 2.75%)</title><rect x="10" y="692" width="32" height="15" fill="rgb(233,72,34)"/><text x="13.00" y="702.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="708" width="32" height="15" fill="rgb(241,192,45)"/><text x="13.00" y="718.50">_c..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (11 samples, 2.75%)</title><rect x="10" y="724" width="32" height="15" fill="rgb(231,1,38)"/><text x="13.00" y="734.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="740" width="32" height="15" fill="rgb(228,78,38)"/><text x="13.00" y="750.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="756" width="32" height="15" fill="rgb(208,195,5)"/><text x="13.00" y="766.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="772" width="32" height="15" fill="rgb(226,113,26)"/><text x="13.00" y="782.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 2.75%)</title><rect x="10" y="788" width="32" height="15" fill="rgb(237,193,8)"/><text x="13.00" y="798.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="10" y="804" width="32" height="15" fill="rgb(244,155,5)"/><text x="13.00" y="814.50">_c..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (11 samples, 2.75%)</title><rect x="10" y="820" width="32" height="15" fill="rgb(225,124,16)"/><text x="13.00" y="830.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="24" y="836" width="18" height="15" fill="rgb(246,187,14)"/><text x="27.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="24" y="852" width="18" height="15" fill="rgb(212,10,15)"/><text x="27.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="24" y="868" width="18" height="15" fill="rgb(246,185,40)"/><text x="27.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.50%)</title><rect x="24" y="884" width="18" height="15" fill="rgb(239,44,54)"/><text x="27.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="24" y="900" width="18" height="15" fill="rgb(207,102,54)"/><text x="27.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (2 samples, 0.50%)</title><rect x="36" y="916" width="6" height="15" fill="rgb(236,25,35)"/><text x="39.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="36" y="932" width="6" height="15" fill="rgb(236,51,17)"/><text x="39.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="36" y="948" width="6" height="15" fill="rgb(236,5,18)"/><text x="39.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="36" y="964" width="6" height="15" fill="rgb(247,178,2)"/><text x="39.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="36" y="980" width="6" height="15" fill="rgb(217,2,44)"/><text x="39.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (2 samples, 0.50%)</title><rect x="36" y="996" width="6" height="15" fill="rgb(225,95,26)"/><text x="39.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="36" y="1012" width="6" height="15" fill="rgb(217,140,21)"/><text x="39.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="36" y="1028" width="6" height="15" fill="rgb(207,72,13)"/><text x="39.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="36" y="1044" width="6" height="15" fill="rgb(209,122,3)"/><text x="39.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="36" y="1060" width="6" height="15" fill="rgb(235,15,20)"/><text x="39.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="36" y="1076" width="6" height="15" fill="rgb(208,116,24)"/><text x="39.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (2 samples, 0.50%)</title><rect x="36" y="1092" width="6" height="15" fill="rgb(220,27,25)"/><text x="39.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.25%)</title><rect x="39" y="1108" width="3" height="15" fill="rgb(248,17,36)"/><text x="42.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.25%)</title><rect x="39" y="1124" width="3" height="15" fill="rgb(245,206,26)"/><text x="42.00" y="1134.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.25%)</title><rect x="39" y="1140" width="3" height="15" fill="rgb(236,83,42)"/><text x="42.00" y="1150.50"></text></g><g><title>__str__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.25%)</title><rect x="39" y="1156" width="3" height="15" fill="rgb(240,189,7)"/><text x="42.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.00%)</title><rect x="10" y="196" width="35" height="15" fill="rgb(224,212,46)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.00%)</title><rect x="10" y="212" width="35" height="15" fill="rgb(250,48,35)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.00%)</title><rect x="10" y="228" width="35" height="15" fill="rgb(246,227,54)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.00%)</title><rect x="10" y="244" width="35" height="15" fill="rgb(211,175,22)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 3.00%)</title><rect x="10" y="260" width="35" height="15" fill="rgb(224,143,20)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.00%)</title><rect x="10" y="276" width="35" height="15" fill="rgb(254,157,6)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.25%)</title><rect x="42" y="292" width="3" height="15" fill="rgb(223,19,48)"/><text x="45.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="308" width="3" height="15" fill="rgb(252,96,39)"/><text x="45.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="324" width="3" height="15" fill="rgb(234,118,14)"/><text x="45.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="340" width="3" height="15" fill="rgb(216,199,49)"/><text x="45.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="356" width="3" height="15" fill="rgb(209,217,6)"/><text x="45.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="372" width="3" height="15" fill="rgb(216,16,21)"/><text x="45.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.25%)</title><rect x="42" y="388" width="3" height="15" fill="rgb(247,18,38)"/><text x="45.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="404" width="3" height="15" fill="rgb(210,158,19)"/><text x="45.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="420" width="3" height="15" fill="rgb(223,69,36)"/><text x="45.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="436" width="3" height="15" fill="rgb(220,155,16)"/><text x="45.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="452" width="3" height="15" fill="rgb(205,223,49)"/><text x="45.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="468" width="3" height="15" fill="rgb(208,109,33)"/><text x="45.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.25%)</title><rect x="42" y="484" width="3" height="15" fill="rgb(232,151,53)"/><text x="45.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="500" width="3" height="15" fill="rgb(254,33,39)"/><text x="45.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="516" width="3" height="15" fill="rgb(214,2,21)"/><text x="45.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="532" width="3" height="15" fill="rgb(245,47,3)"/><text x="45.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="548" width="3" height="15" fill="rgb(241,119,30)"/><text x="45.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="564" width="3" height="15" fill="rgb(242,66,41)"/><text x="45.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.25%)</title><rect x="42" y="580" width="3" height="15" fill="rgb(211,144,54)"/><text x="45.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="596" width="3" height="15" fill="rgb(225,100,44)"/><text x="45.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="612" width="3" height="15" fill="rgb(241,219,43)"/><text x="45.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="628" width="3" height="15" fill="rgb(237,151,22)"/><text x="45.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="644" width="3" height="15" fill="rgb(211,89,32)"/><text x="45.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="660" width="3" height="15" fill="rgb(206,29,50)"/><text x="45.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.25%)</title><rect x="42" y="676" width="3" height="15" fill="rgb(209,92,5)"/><text x="45.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="692" width="3" height="15" fill="rgb(216,205,22)"/><text x="45.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="708" width="3" height="15" fill="rgb(206,146,51)"/><text x="45.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="724" width="3" height="15" fill="rgb(252,81,0)"/><text x="45.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="740" width="3" height="15" fill="rgb(208,76,34)"/><text x="45.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="756" width="3" height="15" fill="rgb(254,20,31)"/><text x="45.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.25%)</title><rect x="42" y="772" width="3" height="15" fill="rgb(244,199,30)"/><text x="45.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="788" width="3" height="15" fill="rgb(232,95,26)"/><text x="45.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="804" width="3" height="15" fill="rgb(243,42,16)"/><text x="45.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="820" width="3" height="15" fill="rgb(243,93,2)"/><text x="45.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="836" width="3" height="15" fill="rgb(233,119,16)"/><text x="45.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="852" width="3" height="15" fill="rgb(222,83,38)"/><text x="45.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="868" width="3" height="15" fill="rgb(228,149,41)"/><text x="45.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="884" width="3" height="15" fill="rgb(206,84,48)"/><text x="45.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.25%)</title><rect x="42" y="900" width="3" height="15" fill="rgb(223,19,26)"/><text x="45.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="916" width="3" height="15" fill="rgb(249,123,27)"/><text x="45.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="932" width="3" height="15" fill="rgb(245,164,0)"/><text x="45.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="948" width="3" height="15" fill="rgb(219,120,32)"/><text x="45.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="964" width="3" height="15" fill="rgb(228,159,21)"/><text x="45.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="980" width="3" height="15" fill="rgb(218,174,41)"/><text x="45.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="996" width="3" height="15" fill="rgb(244,28,34)"/><text x="45.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="1012" width="3" height="15" fill="rgb(247,217,0)"/><text x="45.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.25%)</title><rect x="42" y="1028" width="3" height="15" fill="rgb(212,11,11)"/><text x="45.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.25%)</title><rect x="42" y="1044" width="3" height="15" fill="rgb(217,46,2)"/><text x="45.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.25%)</title><rect x="42" y="1060" width="3" height="15" fill="rgb(231,97,51)"/><text x="45.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.25%)</title><rect x="42" y="1076" width="3" height="15" fill="rgb(224,74,21)"/><text x="45.00" y="1086.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.25%)</title><rect x="42" y="1092" width="3" height="15" fill="rgb(229,2,35)"/><text x="45.00" y="1102.50"></text></g><g><title>0x7f6ceff6dc58 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="48" y="1588" width="3" height="15" fill="rgb(252,26,54)"/><text x="51.00" y="1598.50"></text></g><g><title>google::protobuf::TextFormat::Printer::PrintToString (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="48" y="1604" width="3" height="15" fill="rgb(239,214,16)"/><text x="51.00" y="1614.50"></text></g><g><title>google::protobuf::TextFormat::Printer::Print (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="48" y="1620" width="3" height="15" fill="rgb(217,110,12)"/><text x="51.00" y="1630.50"></text></g><g><title>google::protobuf::TextFormat::Printer::Print (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="48" y="1636" width="3" height="15" fill="rgb(253,194,44)"/><text x="51.00" y="1646.50"></text></g><g><title>google::protobuf::TextFormat::Printer::PrintField (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="48" y="1652" width="3" height="15" fill="rgb(246,135,33)"/><text x="51.00" y="1662.50"></text></g><g><title>google::protobuf::DynamicMessageFactory::~DynamicMessageFactory (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="48" y="1668" width="3" height="15" fill="rgb(238,209,40)"/><text x="51.00" y="1678.50"></text></g><g><title>0x7f6d01c3d178 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="48" y="1684" width="3" height="15" fill="rgb(232,116,20)"/><text x="51.00" y="1694.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.25%)</title><rect x="51" y="1588" width="3" height="15" fill="rgb(236,56,11)"/><text x="54.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.25%)</title><rect x="51" y="1604" width="3" height="15" fill="rgb(249,4,33)"/><text x="54.00" y="1614.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.25%)</title><rect x="51" y="1620" width="3" height="15" fill="rgb(238,220,25)"/><text x="54.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.25%)</title><rect x="51" y="1636" width="3" height="15" fill="rgb(214,115,18)"/><text x="54.00" y="1646.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.25%)</title><rect x="51" y="1652" width="3" height="15" fill="rgb(249,58,22)"/><text x="54.00" y="1662.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (4 samples, 1.00%)</title><rect x="45" y="1508" width="12" height="15" fill="rgb(232,22,9)"/><text x="48.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (4 samples, 1.00%)</title><rect x="45" y="1524" width="12" height="15" fill="rgb(242,203,30)"/><text x="48.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (4 samples, 1.00%)</title><rect x="45" y="1540" width="12" height="15" fill="rgb(248,65,39)"/><text x="48.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.75%)</title><rect x="48" y="1556" width="9" height="15" fill="rgb(238,43,0)"/><text x="51.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (3 samples, 0.75%)</title><rect x="48" y="1572" width="9" height="15" fill="rgb(252,41,4)"/><text x="51.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.25%)</title><rect x="54" y="1588" width="3" height="15" fill="rgb(232,226,13)"/><text x="57.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="45" y="1348" width="15" height="15" fill="rgb(251,56,1)"/><text x="48.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (5 samples, 1.25%)</title><rect x="45" y="1364" width="15" height="15" fill="rgb(205,122,53)"/><text x="48.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="45" y="1380" width="15" height="15" fill="rgb(220,93,18)"/><text x="48.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="45" y="1396" width="15" height="15" fill="rgb(219,80,50)"/><text x="48.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="45" y="1412" width="15" height="15" fill="rgb(236,207,7)"/><text x="48.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.25%)</title><rect x="45" y="1428" width="15" height="15" fill="rgb(245,29,1)"/><text x="48.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="45" y="1444" width="15" height="15" fill="rgb(222,190,50)"/><text x="48.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (5 samples, 1.25%)</title><rect x="45" y="1460" width="15" height="15" fill="rgb(254,58,44)"/><text x="48.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (5 samples, 1.25%)</title><rect x="45" y="1476" width="15" height="15" fill="rgb(236,137,45)"/><text x="48.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (5 samples, 1.25%)</title><rect x="45" y="1492" width="15" height="15" fill="rgb(207,213,34)"/><text x="48.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="57" y="1508" width="3" height="15" fill="rgb(238,55,43)"/><text x="60.00" y="1518.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="57" y="1524" width="3" height="15" fill="rgb(245,154,10)"/><text x="60.00" y="1534.50"></text></g><g><title>std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt;::_M_emplace_back_aux&lt;onnx::OpSchema&amp;&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="57" y="1540" width="3" height="15" fill="rgb(213,137,48)"/><text x="60.00" y="1550.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="57" y="1556" width="3" height="15" fill="rgb(222,187,2)"/><text x="60.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="484" width="18" height="15" fill="rgb(209,219,18)"/><text x="48.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="500" width="18" height="15" fill="rgb(209,49,20)"/><text x="48.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="516" width="18" height="15" fill="rgb(244,199,33)"/><text x="48.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="532" width="18" height="15" fill="rgb(210,97,16)"/><text x="48.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.50%)</title><rect x="45" y="548" width="18" height="15" fill="rgb(237,77,44)"/><text x="48.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="564" width="18" height="15" fill="rgb(232,30,7)"/><text x="48.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (6 samples, 1.50%)</title><rect x="45" y="580" width="18" height="15" fill="rgb(232,144,13)"/><text x="48.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="596" width="18" height="15" fill="rgb(244,26,51)"/><text x="48.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="612" width="18" height="15" fill="rgb(205,110,26)"/><text x="48.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="628" width="18" height="15" fill="rgb(218,36,14)"/><text x="48.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.50%)</title><rect x="45" y="644" width="18" height="15" fill="rgb(235,211,39)"/><text x="48.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="660" width="18" height="15" fill="rgb(225,56,3)"/><text x="48.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (6 samples, 1.50%)</title><rect x="45" y="676" width="18" height="15" fill="rgb(219,145,30)"/><text x="48.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="692" width="18" height="15" fill="rgb(242,146,31)"/><text x="48.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="708" width="18" height="15" fill="rgb(246,171,24)"/><text x="48.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="724" width="18" height="15" fill="rgb(216,50,1)"/><text x="48.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.50%)</title><rect x="45" y="740" width="18" height="15" fill="rgb(237,2,29)"/><text x="48.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="756" width="18" height="15" fill="rgb(233,72,16)"/><text x="48.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (6 samples, 1.50%)</title><rect x="45" y="772" width="18" height="15" fill="rgb(248,11,50)"/><text x="48.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="788" width="18" height="15" fill="rgb(217,141,20)"/><text x="48.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="804" width="18" height="15" fill="rgb(229,71,52)"/><text x="48.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="820" width="18" height="15" fill="rgb(236,172,39)"/><text x="48.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.50%)</title><rect x="45" y="836" width="18" height="15" fill="rgb(216,51,30)"/><text x="48.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="852" width="18" height="15" fill="rgb(220,225,42)"/><text x="48.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (6 samples, 1.50%)</title><rect x="45" y="868" width="18" height="15" fill="rgb(241,201,23)"/><text x="48.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="884" width="18" height="15" fill="rgb(235,104,42)"/><text x="48.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="900" width="18" height="15" fill="rgb(238,53,41)"/><text x="48.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="916" width="18" height="15" fill="rgb(208,27,19)"/><text x="48.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="932" width="18" height="15" fill="rgb(246,54,22)"/><text x="48.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="948" width="18" height="15" fill="rgb(244,10,17)"/><text x="48.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="964" width="18" height="15" fill="rgb(215,22,31)"/><text x="48.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.50%)</title><rect x="45" y="980" width="18" height="15" fill="rgb(242,226,28)"/><text x="48.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="996" width="18" height="15" fill="rgb(214,229,31)"/><text x="48.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (6 samples, 1.50%)</title><rect x="45" y="1012" width="18" height="15" fill="rgb(228,40,50)"/><text x="48.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="1028" width="18" height="15" fill="rgb(226,112,26)"/><text x="48.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="1044" width="18" height="15" fill="rgb(241,27,15)"/><text x="48.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="1060" width="18" height="15" fill="rgb(207,92,40)"/><text x="48.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.50%)</title><rect x="45" y="1076" width="18" height="15" fill="rgb(206,63,11)"/><text x="48.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="1092" width="18" height="15" fill="rgb(240,13,18)"/><text x="48.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (6 samples, 1.50%)</title><rect x="45" y="1108" width="18" height="15" fill="rgb(241,33,15)"/><text x="48.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="1124" width="18" height="15" fill="rgb(234,73,30)"/><text x="48.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="1140" width="18" height="15" fill="rgb(215,37,54)"/><text x="48.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="1156" width="18" height="15" fill="rgb(238,154,33)"/><text x="48.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="1172" width="18" height="15" fill="rgb(207,213,18)"/><text x="48.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="1188" width="18" height="15" fill="rgb(207,132,26)"/><text x="48.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.50%)</title><rect x="45" y="1204" width="18" height="15" fill="rgb(231,168,22)"/><text x="48.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="1220" width="18" height="15" fill="rgb(231,227,36)"/><text x="48.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (6 samples, 1.50%)</title><rect x="45" y="1236" width="18" height="15" fill="rgb(226,47,5)"/><text x="48.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="1252" width="18" height="15" fill="rgb(234,89,8)"/><text x="48.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="1268" width="18" height="15" fill="rgb(230,216,46)"/><text x="48.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="1284" width="18" height="15" fill="rgb(253,91,5)"/><text x="48.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="1300" width="18" height="15" fill="rgb(241,14,3)"/><text x="48.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="1316" width="18" height="15" fill="rgb(243,120,53)"/><text x="48.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.50%)</title><rect x="45" y="1332" width="18" height="15" fill="rgb(211,85,40)"/><text x="48.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="60" y="1348" width="3" height="15" fill="rgb(220,131,29)"/><text x="63.00" y="1358.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.25%)</title><rect x="63" y="724" width="3" height="15" fill="rgb(208,100,52)"/><text x="66.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="740" width="3" height="15" fill="rgb(209,41,38)"/><text x="66.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="756" width="3" height="15" fill="rgb(217,20,10)"/><text x="66.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="772" width="3" height="15" fill="rgb(231,46,13)"/><text x="66.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="63" y="788" width="3" height="15" fill="rgb(210,63,14)"/><text x="66.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="804" width="3" height="15" fill="rgb(225,22,8)"/><text x="66.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.25%)</title><rect x="63" y="820" width="3" height="15" fill="rgb(251,44,16)"/><text x="66.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="836" width="3" height="15" fill="rgb(208,66,44)"/><text x="66.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="852" width="3" height="15" fill="rgb(224,52,9)"/><text x="66.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="868" width="3" height="15" fill="rgb(254,159,53)"/><text x="66.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="63" y="884" width="3" height="15" fill="rgb(214,37,11)"/><text x="66.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="900" width="3" height="15" fill="rgb(228,52,17)"/><text x="66.00" y="910.50"></text></g><g><title>0x7f6cd714d40e (?) (1 samples, 0.25%)</title><rect x="63" y="916" width="3" height="15" fill="rgb(237,4,38)"/><text x="66.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="932" width="3" height="15" fill="rgb(243,87,4)"/><text x="66.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="948" width="3" height="15" fill="rgb(208,55,12)"/><text x="66.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="964" width="3" height="15" fill="rgb(216,113,10)"/><text x="66.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="63" y="980" width="3" height="15" fill="rgb(212,65,24)"/><text x="66.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="996" width="3" height="15" fill="rgb(251,228,51)"/><text x="66.00" y="1006.50"></text></g><g><title>0x7f6cd6f06cd2 (?) (1 samples, 0.25%)</title><rect x="63" y="1012" width="3" height="15" fill="rgb(223,207,38)"/><text x="66.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="1028" width="3" height="15" fill="rgb(227,68,50)"/><text x="66.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="1044" width="3" height="15" fill="rgb(248,176,5)"/><text x="66.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="1060" width="3" height="15" fill="rgb(243,16,49)"/><text x="66.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="63" y="1076" width="3" height="15" fill="rgb(223,21,54)"/><text x="66.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="1092" width="3" height="15" fill="rgb(205,73,32)"/><text x="66.00" y="1102.50"></text></g><g><title>0x7f6cd65fc0e5 (?) (1 samples, 0.25%)</title><rect x="63" y="1108" width="3" height="15" fill="rgb(209,98,4)"/><text x="66.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="1124" width="3" height="15" fill="rgb(208,180,11)"/><text x="66.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="1140" width="3" height="15" fill="rgb(226,16,22)"/><text x="66.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="1156" width="3" height="15" fill="rgb(244,70,4)"/><text x="66.00" y="1166.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="1172" width="3" height="15" fill="rgb(253,65,45)"/><text x="66.00" y="1182.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="63" y="1188" width="3" height="15" fill="rgb(244,216,52)"/><text x="66.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="63" y="1204" width="3" height="15" fill="rgb(219,152,35)"/><text x="66.00" y="1214.50"></text></g><g><title>0x7f6cd637c82c (?) (1 samples, 0.25%)</title><rect x="63" y="1220" width="3" height="15" fill="rgb(237,184,15)"/><text x="66.00" y="1230.50"></text></g><g><title>0x7f6cd637c6f0 (?) (1 samples, 0.25%)</title><rect x="63" y="1236" width="3" height="15" fill="rgb(240,78,6)"/><text x="66.00" y="1246.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.25%)</title><rect x="63" y="1252" width="3" height="15" fill="rgb(236,55,14)"/><text x="66.00" y="1262.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.25%)</title><rect x="66" y="1108" width="3" height="15" fill="rgb(229,68,27)"/><text x="69.00" y="1118.50"></text></g><g><title>NDFrame (pandas/core/generic.py) (1 samples, 0.25%)</title><rect x="66" y="1124" width="3" height="15" fill="rgb(231,118,26)"/><text x="69.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.25%)</title><rect x="66" y="1140" width="3" height="15" fill="rgb(245,136,51)"/><text x="69.00" y="1150.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.25%)</title><rect x="66" y="1156" width="3" height="15" fill="rgb(226,167,31)"/><text x="69.00" y="1166.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.25%)</title><rect x="66" y="1172" width="3" height="15" fill="rgb(205,168,8)"/><text x="69.00" y="1182.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.25%)</title><rect x="66" y="1188" width="3" height="15" fill="rgb(237,135,26)"/><text x="69.00" y="1198.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.25%)</title><rect x="66" y="1204" width="3" height="15" fill="rgb(205,13,36)"/><text x="69.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="69" y="1540" width="2" height="15" fill="rgb(251,157,1)"/><text x="72.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="69" y="1556" width="2" height="15" fill="rgb(233,196,52)"/><text x="72.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="69" y="1572" width="2" height="15" fill="rgb(211,96,44)"/><text x="72.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="69" y="1588" width="2" height="15" fill="rgb(247,38,11)"/><text x="72.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="69" y="1604" width="2" height="15" fill="rgb(250,9,36)"/><text x="72.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="69" y="1620" width="2" height="15" fill="rgb(232,112,53)"/><text x="72.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.25%)</title><rect x="69" y="1636" width="2" height="15" fill="rgb(211,66,18)"/><text x="72.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="69" y="1652" width="2" height="15" fill="rgb(251,25,4)"/><text x="72.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="69" y="1668" width="2" height="15" fill="rgb(241,116,5)"/><text x="72.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="69" y="1684" width="2" height="15" fill="rgb(236,78,3)"/><text x="72.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="69" y="1700" width="2" height="15" fill="rgb(205,221,51)"/><text x="72.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="69" y="1716" width="2" height="15" fill="rgb(218,2,37)"/><text x="72.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="69" y="1732" width="2" height="15" fill="rgb(218,100,4)"/><text x="72.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="69" y="1748" width="2" height="15" fill="rgb(247,61,2)"/><text x="72.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.25%)</title><rect x="69" y="1764" width="2" height="15" fill="rgb(206,138,7)"/><text x="72.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="69" y="1780" width="2" height="15" fill="rgb(249,63,17)"/><text x="72.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="69" y="1796" width="2" height="15" fill="rgb(242,104,1)"/><text x="72.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="69" y="1812" width="2" height="15" fill="rgb(228,25,3)"/><text x="72.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="69" y="1828" width="2" height="15" fill="rgb(220,223,31)"/><text x="72.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="69" y="1844" width="2" height="15" fill="rgb(237,128,44)"/><text x="72.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.25%)</title><rect x="69" y="1860" width="2" height="15" fill="rgb(220,143,21)"/><text x="72.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="69" y="1876" width="2" height="15" fill="rgb(238,172,47)"/><text x="72.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="69" y="1892" width="2" height="15" fill="rgb(207,98,25)"/><text x="72.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="69" y="1908" width="2" height="15" fill="rgb(223,183,13)"/><text x="72.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="69" y="1924" width="2" height="15" fill="rgb(244,87,41)"/><text x="72.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="69" y="1940" width="2" height="15" fill="rgb(224,12,36)"/><text x="72.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py) (1 samples, 0.25%)</title><rect x="69" y="1956" width="2" height="15" fill="rgb(242,88,5)"/><text x="72.00" y="1966.50"></text></g><g><title>pyparsing_common (pyparsing.py) (1 samples, 0.25%)</title><rect x="69" y="1972" width="2" height="15" fill="rgb(229,111,14)"/><text x="72.00" y="1982.50"></text></g><g><title>__init__ (pyparsing.py) (1 samples, 0.25%)</title><rect x="69" y="1988" width="2" height="15" fill="rgb(222,54,38)"/><text x="72.00" y="1998.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.25%)</title><rect x="69" y="2004" width="2" height="15" fill="rgb(245,95,45)"/><text x="72.00" y="2014.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.25%)</title><rect x="69" y="2020" width="2" height="15" fill="rgb(222,178,21)"/><text x="72.00" y="2030.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.25%)</title><rect x="69" y="2036" width="2" height="15" fill="rgb(243,49,37)"/><text x="72.00" y="2046.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.25%)</title><rect x="69" y="2052" width="2" height="15" fill="rgb(238,88,26)"/><text x="72.00" y="2062.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.25%)</title><rect x="69" y="2068" width="2" height="15" fill="rgb(245,125,40)"/><text x="72.00" y="2078.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.25%)</title><rect x="69" y="2084" width="2" height="15" fill="rgb(248,137,0)"/><text x="72.00" y="2094.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.25%)</title><rect x="69" y="2100" width="2" height="15" fill="rgb(223,118,33)"/><text x="72.00" y="2110.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.25%)</title><rect x="69" y="2116" width="2" height="15" fill="rgb(237,83,15)"/><text x="72.00" y="2126.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.25%)</title><rect x="69" y="2132" width="2" height="15" fill="rgb(207,152,33)"/><text x="72.00" y="2142.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.25%)</title><rect x="69" y="2148" width="2" height="15" fill="rgb(240,8,10)"/><text x="72.00" y="2158.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.25%)</title><rect x="69" y="2164" width="2" height="15" fill="rgb(233,155,47)"/><text x="72.00" y="2174.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.25%)</title><rect x="69" y="2180" width="2" height="15" fill="rgb(226,54,24)"/><text x="72.00" y="2190.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.25%)</title><rect x="69" y="2196" width="2" height="15" fill="rgb(206,208,26)"/><text x="72.00" y="2206.50"></text></g><g><title>&lt;listcomp&gt; (pyparsing.py) (1 samples, 0.25%)</title><rect x="69" y="2212" width="2" height="15" fill="rgb(249,161,2)"/><text x="72.00" y="2222.50"></text></g><g><title>copy (pyparsing.py) (1 samples, 0.25%)</title><rect x="69" y="2228" width="2" height="15" fill="rgb(229,44,38)"/><text x="72.00" y="2238.50"></text></g><g><title>&lt;listcomp&gt; (pyparsing.py) (1 samples, 0.25%)</title><rect x="69" y="2244" width="2" height="15" fill="rgb(229,49,51)"/><text x="72.00" y="2254.50"></text></g><g><title>copy (pyparsing.py) (1 samples, 0.25%)</title><rect x="69" y="2260" width="2" height="15" fill="rgb(231,97,51)"/><text x="72.00" y="2270.50"></text></g><g><title>copy (copy.py) (1 samples, 0.25%)</title><rect x="69" y="2276" width="2" height="15" fill="rgb(215,44,51)"/><text x="72.00" y="2286.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.75%)</title><rect x="66" y="1012" width="8" height="15" fill="rgb(241,124,4)"/><text x="69.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="66" y="1028" width="8" height="15" fill="rgb(229,92,29)"/><text x="69.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="66" y="1044" width="8" height="15" fill="rgb(237,206,28)"/><text x="69.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="66" y="1060" width="8" height="15" fill="rgb(212,204,9)"/><text x="69.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.75%)</title><rect x="66" y="1076" width="8" height="15" fill="rgb(209,161,16)"/><text x="69.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="66" y="1092" width="8" height="15" fill="rgb(213,119,42)"/><text x="69.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.50%)</title><rect x="69" y="1108" width="5" height="15" fill="rgb(218,16,24)"/><text x="72.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="69" y="1124" width="5" height="15" fill="rgb(211,116,14)"/><text x="72.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="69" y="1140" width="5" height="15" fill="rgb(211,124,44)"/><text x="72.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="69" y="1156" width="5" height="15" fill="rgb(228,188,8)"/><text x="72.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="69" y="1172" width="5" height="15" fill="rgb(241,99,8)"/><text x="72.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="69" y="1188" width="5" height="15" fill="rgb(223,214,20)"/><text x="72.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.50%)</title><rect x="69" y="1204" width="5" height="15" fill="rgb(219,218,25)"/><text x="72.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="69" y="1220" width="5" height="15" fill="rgb(219,110,19)"/><text x="72.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="69" y="1236" width="5" height="15" fill="rgb(209,110,29)"/><text x="72.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="69" y="1252" width="5" height="15" fill="rgb(237,224,5)"/><text x="72.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="69" y="1268" width="5" height="15" fill="rgb(252,34,41)"/><text x="72.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="69" y="1284" width="5" height="15" fill="rgb(216,199,37)"/><text x="72.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.50%)</title><rect x="69" y="1300" width="5" height="15" fill="rgb(244,167,30)"/><text x="72.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="69" y="1316" width="5" height="15" fill="rgb(251,40,17)"/><text x="72.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="69" y="1332" width="5" height="15" fill="rgb(252,201,24)"/><text x="72.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="69" y="1348" width="5" height="15" fill="rgb(210,214,3)"/><text x="72.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="69" y="1364" width="5" height="15" fill="rgb(210,153,33)"/><text x="72.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="69" y="1380" width="5" height="15" fill="rgb(247,11,27)"/><text x="72.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.50%)</title><rect x="69" y="1396" width="5" height="15" fill="rgb(229,124,20)"/><text x="72.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="69" y="1412" width="5" height="15" fill="rgb(209,11,54)"/><text x="72.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="69" y="1428" width="5" height="15" fill="rgb(223,63,53)"/><text x="72.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="69" y="1444" width="5" height="15" fill="rgb(223,27,27)"/><text x="72.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="69" y="1460" width="5" height="15" fill="rgb(248,81,15)"/><text x="72.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="69" y="1476" width="5" height="15" fill="rgb(223,142,41)"/><text x="72.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.50%)</title><rect x="69" y="1492" width="5" height="15" fill="rgb(227,128,0)"/><text x="72.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="69" y="1508" width="5" height="15" fill="rgb(231,173,25)"/><text x="72.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="69" y="1524" width="5" height="15" fill="rgb(225,209,6)"/><text x="72.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="1540" width="3" height="15" fill="rgb(242,6,0)"/><text x="74.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="71" y="1556" width="3" height="15" fill="rgb(208,134,23)"/><text x="74.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="1572" width="3" height="15" fill="rgb(209,141,17)"/><text x="74.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.25%)</title><rect x="71" y="1588" width="3" height="15" fill="rgb(219,27,19)"/><text x="74.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="1604" width="3" height="15" fill="rgb(237,29,13)"/><text x="74.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="1620" width="3" height="15" fill="rgb(233,103,39)"/><text x="74.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="1636" width="3" height="15" fill="rgb(254,197,42)"/><text x="74.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="71" y="1652" width="3" height="15" fill="rgb(214,191,28)"/><text x="74.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="1668" width="3" height="15" fill="rgb(250,88,41)"/><text x="74.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.25%)</title><rect x="71" y="1684" width="3" height="15" fill="rgb(205,90,53)"/><text x="74.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="1700" width="3" height="15" fill="rgb(235,51,19)"/><text x="74.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="1716" width="3" height="15" fill="rgb(246,165,2)"/><text x="74.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="1732" width="3" height="15" fill="rgb(247,63,31)"/><text x="74.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="71" y="1748" width="3" height="15" fill="rgb(253,177,52)"/><text x="74.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="1764" width="3" height="15" fill="rgb(215,104,0)"/><text x="74.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.25%)</title><rect x="71" y="1780" width="3" height="15" fill="rgb(239,104,12)"/><text x="74.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="1796" width="3" height="15" fill="rgb(251,117,45)"/><text x="74.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="1812" width="3" height="15" fill="rgb(209,108,44)"/><text x="74.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="1828" width="3" height="15" fill="rgb(254,89,1)"/><text x="74.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="71" y="1844" width="3" height="15" fill="rgb(243,194,30)"/><text x="74.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="1860" width="3" height="15" fill="rgb(235,15,51)"/><text x="74.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py) (1 samples, 0.25%)</title><rect x="71" y="1876" width="3" height="15" fill="rgb(238,202,49)"/><text x="74.00" y="1886.50"></text></g><g><title>_pprint_styles (matplotlib/patches.py) (1 samples, 0.25%)</title><rect x="71" y="1892" width="3" height="15" fill="rgb(209,141,0)"/><text x="74.00" y="1902.50"></text></g><g><title>getfullargspec (inspect.py) (1 samples, 0.25%)</title><rect x="71" y="1908" width="3" height="15" fill="rgb(218,86,34)"/><text x="74.00" y="1918.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.25%)</title><rect x="71" y="1924" width="3" height="15" fill="rgb(219,117,4)"/><text x="74.00" y="1934.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (11 samples, 2.75%)</title><rect x="45" y="436" width="32" height="15" fill="rgb(212,169,26)"/><text x="48.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="45" y="452" width="32" height="15" fill="rgb(223,70,30)"/><text x="48.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.75%)</title><rect x="45" y="468" width="32" height="15" fill="rgb(209,19,39)"/><text x="48.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="63" y="484" width="14" height="15" fill="rgb(210,122,49)"/><text x="66.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.25%)</title><rect x="63" y="500" width="14" height="15" fill="rgb(227,158,37)"/><text x="66.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="63" y="516" width="14" height="15" fill="rgb(206,210,45)"/><text x="66.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (5 samples, 1.25%)</title><rect x="63" y="532" width="14" height="15" fill="rgb(230,78,2)"/><text x="66.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="63" y="548" width="14" height="15" fill="rgb(252,100,9)"/><text x="66.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="63" y="564" width="14" height="15" fill="rgb(225,6,26)"/><text x="66.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="63" y="580" width="14" height="15" fill="rgb(239,138,50)"/><text x="66.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.25%)</title><rect x="63" y="596" width="14" height="15" fill="rgb(229,121,18)"/><text x="66.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="63" y="612" width="14" height="15" fill="rgb(217,196,46)"/><text x="66.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (5 samples, 1.25%)</title><rect x="63" y="628" width="14" height="15" fill="rgb(213,146,43)"/><text x="66.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="63" y="644" width="14" height="15" fill="rgb(246,144,3)"/><text x="66.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="63" y="660" width="14" height="15" fill="rgb(209,92,43)"/><text x="66.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="63" y="676" width="14" height="15" fill="rgb(237,229,50)"/><text x="66.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.25%)</title><rect x="63" y="692" width="14" height="15" fill="rgb(226,130,27)"/><text x="66.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="63" y="708" width="14" height="15" fill="rgb(210,127,1)"/><text x="66.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (4 samples, 1.00%)</title><rect x="66" y="724" width="11" height="15" fill="rgb(214,210,35)"/><text x="69.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="66" y="740" width="11" height="15" fill="rgb(232,189,2)"/><text x="69.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="66" y="756" width="11" height="15" fill="rgb(253,25,20)"/><text x="69.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="66" y="772" width="11" height="15" fill="rgb(221,148,48)"/><text x="69.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.00%)</title><rect x="66" y="788" width="11" height="15" fill="rgb(247,75,19)"/><text x="69.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="66" y="804" width="11" height="15" fill="rgb(218,168,47)"/><text x="69.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (4 samples, 1.00%)</title><rect x="66" y="820" width="11" height="15" fill="rgb(232,88,52)"/><text x="69.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="66" y="836" width="11" height="15" fill="rgb(243,227,37)"/><text x="69.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="66" y="852" width="11" height="15" fill="rgb(224,114,1)"/><text x="69.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="66" y="868" width="11" height="15" fill="rgb(217,99,6)"/><text x="69.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.00%)</title><rect x="66" y="884" width="11" height="15" fill="rgb(228,223,46)"/><text x="69.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="66" y="900" width="11" height="15" fill="rgb(249,186,27)"/><text x="69.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (4 samples, 1.00%)</title><rect x="66" y="916" width="11" height="15" fill="rgb(240,201,36)"/><text x="69.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="66" y="932" width="11" height="15" fill="rgb(233,225,11)"/><text x="69.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="66" y="948" width="11" height="15" fill="rgb(216,213,6)"/><text x="69.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="66" y="964" width="11" height="15" fill="rgb(225,116,45)"/><text x="69.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.00%)</title><rect x="66" y="980" width="11" height="15" fill="rgb(247,140,26)"/><text x="69.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="66" y="996" width="11" height="15" fill="rgb(210,108,1)"/><text x="69.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py) (1 samples, 0.25%)</title><rect x="74" y="1012" width="3" height="15" fill="rgb(233,198,46)"/><text x="77.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py) (1 samples, 0.25%)</title><rect x="74" y="1028" width="3" height="15" fill="rgb(207,76,24)"/><text x="77.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py) (1 samples, 0.25%)</title><rect x="74" y="1044" width="3" height="15" fill="rgb(234,222,52)"/><text x="77.00" y="1054.50"></text></g><g><title>_flex_comp_method_FRAME (pandas/core/ops/__init__.py) (1 samples, 0.25%)</title><rect x="74" y="1060" width="3" height="15" fill="rgb(246,55,8)"/><text x="77.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.25%)</title><rect x="74" y="1076" width="3" height="15" fill="rgb(221,35,27)"/><text x="77.00" y="1086.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.25%)</title><rect x="74" y="1092" width="3" height="15" fill="rgb(217,178,7)"/><text x="77.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.25%)</title><rect x="74" y="1108" width="3" height="15" fill="rgb(247,145,19)"/><text x="77.00" y="1118.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.25%)</title><rect x="74" y="1124" width="3" height="15" fill="rgb(212,9,14)"/><text x="77.00" y="1134.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.25%)</title><rect x="74" y="1140" width="3" height="15" fill="rgb(220,100,40)"/><text x="77.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (24 samples, 6.00%)</title><rect x="10" y="68" width="70" height="15" fill="rgb(216,77,19)"/><text x="13.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (24 samples, 6.00%)</title><rect x="10" y="84" width="70" height="15" fill="rgb(247,19,48)"/><text x="13.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (24 samples, 6.00%)</title><rect x="10" y="100" width="70" height="15" fill="rgb(210,32,46)"/><text x="13.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (24 samples, 6.00%)</title><rect x="10" y="116" width="70" height="15" fill="rgb(224,61,23)"/><text x="13.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (24 samples, 6.00%)</title><rect x="10" y="132" width="70" height="15" fill="rgb(234,209,50)"/><text x="13.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py) (24 samples, 6.00%)</title><rect x="10" y="148" width="70" height="15" fill="rgb(246,127,10)"/><text x="13.00" y="158.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (24 samples, 6.00%)</title><rect x="10" y="164" width="70" height="15" fill="rgb(241,107,35)"/><text x="13.00" y="174.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (24 samples, 6.00%)</title><rect x="10" y="180" width="70" height="15" fill="rgb(212,112,42)"/><text x="13.00" y="190.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.00%)</title><rect x="45" y="196" width="35" height="15" fill="rgb(248,23,31)"/><text x="48.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 3.00%)</title><rect x="45" y="212" width="35" height="15" fill="rgb(250,37,3)"/><text x="48.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.00%)</title><rect x="45" y="228" width="35" height="15" fill="rgb(220,79,0)"/><text x="48.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (12 samples, 3.00%)</title><rect x="45" y="244" width="35" height="15" fill="rgb(254,216,21)"/><text x="48.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.00%)</title><rect x="45" y="260" width="35" height="15" fill="rgb(213,30,34)"/><text x="48.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.00%)</title><rect x="45" y="276" width="35" height="15" fill="rgb(206,197,53)"/><text x="48.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.00%)</title><rect x="45" y="292" width="35" height="15" fill="rgb(248,64,4)"/><text x="48.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 3.00%)</title><rect x="45" y="308" width="35" height="15" fill="rgb(244,159,47)"/><text x="48.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.00%)</title><rect x="45" y="324" width="35" height="15" fill="rgb(209,198,47)"/><text x="48.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (12 samples, 3.00%)</title><rect x="45" y="340" width="35" height="15" fill="rgb(246,206,35)"/><text x="48.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.00%)</title><rect x="45" y="356" width="35" height="15" fill="rgb(236,88,36)"/><text x="48.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.00%)</title><rect x="45" y="372" width="35" height="15" fill="rgb(248,85,44)"/><text x="48.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.00%)</title><rect x="45" y="388" width="35" height="15" fill="rgb(252,16,45)"/><text x="48.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 3.00%)</title><rect x="45" y="404" width="35" height="15" fill="rgb(205,59,14)"/><text x="48.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.00%)</title><rect x="45" y="420" width="35" height="15" fill="rgb(254,224,20)"/><text x="48.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.25%)</title><rect x="77" y="436" width="3" height="15" fill="rgb(212,203,12)"/><text x="80.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="77" y="452" width="3" height="15" fill="rgb(244,181,21)"/><text x="80.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="77" y="468" width="3" height="15" fill="rgb(205,199,14)"/><text x="80.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="77" y="484" width="3" height="15" fill="rgb(247,62,54)"/><text x="80.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="77" y="500" width="3" height="15" fill="rgb(226,34,49)"/><text x="80.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="77" y="516" width="3" height="15" fill="rgb(214,177,2)"/><text x="80.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_openml.py) (1 samples, 0.25%)</title><rect x="77" y="532" width="3" height="15" fill="rgb(236,13,0)"/><text x="80.00" y="542.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="77" y="548" width="3" height="15" fill="rgb(205,2,49)"/><text x="80.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="77" y="564" width="3" height="15" fill="rgb(243,0,26)"/><text x="80.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="77" y="580" width="3" height="15" fill="rgb(221,35,50)"/><text x="80.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="77" y="596" width="3" height="15" fill="rgb(229,221,33)"/><text x="80.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="77" y="612" width="3" height="15" fill="rgb(239,156,9)"/><text x="80.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="77" y="628" width="3" height="15" fill="rgb(241,90,3)"/><text x="80.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="77" y="644" width="3" height="15" fill="rgb(246,164,28)"/><text x="80.00" y="654.50"></text></g><g><title>&lt;module&gt; (sklearn/externals/_arff.py) (1 samples, 0.25%)</title><rect x="77" y="660" width="3" height="15" fill="rgb(246,16,40)"/><text x="80.00" y="670.50"></text></g><g><title>_build_re_values (sklearn/externals/_arff.py) (1 samples, 0.25%)</title><rect x="77" y="676" width="3" height="15" fill="rgb(207,179,51)"/><text x="80.00" y="686.50"></text></g><g><title>compile (re.py) (1 samples, 0.25%)</title><rect x="77" y="692" width="3" height="15" fill="rgb(252,118,33)"/><text x="80.00" y="702.50"></text></g><g><title>_compile (re.py) (1 samples, 0.25%)</title><rect x="77" y="708" width="3" height="15" fill="rgb(252,118,9)"/><text x="80.00" y="718.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.25%)</title><rect x="77" y="724" width="3" height="15" fill="rgb(239,14,48)"/><text x="80.00" y="734.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.25%)</title><rect x="77" y="740" width="3" height="15" fill="rgb(247,194,36)"/><text x="80.00" y="750.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.25%)</title><rect x="77" y="756" width="3" height="15" fill="rgb(218,39,4)"/><text x="80.00" y="766.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.25%)</title><rect x="77" y="772" width="3" height="15" fill="rgb(241,164,1)"/><text x="80.00" y="782.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.25%)</title><rect x="77" y="788" width="3" height="15" fill="rgb(246,217,33)"/><text x="80.00" y="798.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.25%)</title><rect x="77" y="804" width="3" height="15" fill="rgb(247,67,16)"/><text x="80.00" y="814.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.25%)</title><rect x="77" y="820" width="3" height="15" fill="rgb(227,145,18)"/><text x="80.00" y="830.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.25%)</title><rect x="77" y="836" width="3" height="15" fill="rgb(230,106,40)"/><text x="80.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.25%)</title><rect x="77" y="852" width="3" height="15" fill="rgb(221,73,27)"/><text x="80.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.25%)</title><rect x="77" y="868" width="3" height="15" fill="rgb(219,201,40)"/><text x="80.00" y="878.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.25%)</title><rect x="77" y="884" width="3" height="15" fill="rgb(252,89,22)"/><text x="80.00" y="894.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.25%)</title><rect x="77" y="900" width="3" height="15" fill="rgb(207,45,36)"/><text x="80.00" y="910.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (1 samples, 0.25%)</title><rect x="86" y="196" width="3" height="15" fill="rgb(251,81,17)"/><text x="89.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py) (1 samples, 0.25%)</title><rect x="86" y="212" width="3" height="15" fill="rgb(251,76,35)"/><text x="89.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.25%)</title><rect x="89" y="196" width="3" height="15" fill="rgb(247,114,10)"/><text x="92.00" y="206.50"></text></g><g><title>PyThread_get_thread_ident (python3.7) (1 samples, 0.25%)</title><rect x="92" y="212" width="3" height="15" fill="rgb(245,112,34)"/><text x="95.00" y="222.50"></text></g><g><title>__len__ (joblib/parallel.py) (1 samples, 0.25%)</title><rect x="95" y="212" width="3" height="15" fill="rgb(218,89,22)"/><text x="98.00" y="222.50"></text></g><g><title>0x7f6cdb66e690 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="104" y="356" width="3" height="15" fill="rgb(218,4,4)"/><text x="107.00" y="366.50"></text></g><g><title>0x7f6cdb66f405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="104" y="340" width="6" height="15" fill="rgb(225,118,16)"/><text x="107.00" y="350.50"></text></g><g><title>0x7f6cdb66e6d4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="107" y="356" width="3" height="15" fill="rgb(212,184,47)"/><text x="110.00" y="366.50"></text></g><g><title>0x7f6cdb660d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.75%)</title><rect x="104" y="308" width="9" height="15" fill="rgb(247,62,33)"/><text x="107.00" y="318.50"></text></g><g><title>0x7f6cdb65ffa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.75%)</title><rect x="104" y="324" width="9" height="15" fill="rgb(236,120,31)"/><text x="107.00" y="334.50"></text></g><g><title>0x7f6cdb66f540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="110" y="340" width="3" height="15" fill="rgb(234,99,11)"/><text x="113.00" y="350.50"></text></g><g><title>0x7f6cdb6442f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="110" y="356" width="3" height="15" fill="rgb(223,196,47)"/><text x="113.00" y="366.50"></text></g><g><title>0x7f6cdb643530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="110" y="372" width="3" height="15" fill="rgb(215,227,47)"/><text x="113.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.25%)</title><rect x="110" y="388" width="3" height="15" fill="rgb(217,156,51)"/><text x="113.00" y="398.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (1 samples, 0.25%)</title><rect x="113" y="308" width="3" height="15" fill="rgb(224,52,20)"/><text x="116.00" y="318.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.25%)</title><rect x="116" y="340" width="3" height="15" fill="rgb(244,218,15)"/><text x="119.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (7 samples, 1.75%)</title><rect x="101" y="292" width="21" height="15" fill="rgb(226,1,2)"/><text x="104.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (2 samples, 0.50%)</title><rect x="116" y="308" width="6" height="15" fill="rgb(219,178,36)"/><text x="119.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.50%)</title><rect x="116" y="324" width="6" height="15" fill="rgb(209,223,2)"/><text x="119.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.25%)</title><rect x="119" y="340" width="3" height="15" fill="rgb(251,82,31)"/><text x="122.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.25%)</title><rect x="125" y="324" width="3" height="15" fill="rgb(209,178,47)"/><text x="128.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.25%)</title><rect x="125" y="340" width="3" height="15" fill="rgb(222,89,30)"/><text x="128.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.25%)</title><rect x="125" y="356" width="3" height="15" fill="rgb(239,195,33)"/><text x="128.00" y="366.50"></text></g><g><title>_dispatch (joblib/parallel.py) (13 samples, 3.25%)</title><rect x="92" y="196" width="38" height="15" fill="rgb(252,127,51)"/><text x="95.00" y="206.50">_di..</text></g><g><title>apply_async (joblib/_parallel_backends.py) (11 samples, 2.75%)</title><rect x="98" y="212" width="32" height="15" fill="rgb(229,19,53)"/><text x="101.00" y="222.50">ap..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (10 samples, 2.50%)</title><rect x="101" y="228" width="29" height="15" fill="rgb(247,68,13)"/><text x="104.00" y="238.50">__..</text></g><g><title>__call__ (joblib/parallel.py) (10 samples, 2.50%)</title><rect x="101" y="244" width="29" height="15" fill="rgb(219,85,8)"/><text x="104.00" y="254.50">__..</text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (10 samples, 2.50%)</title><rect x="101" y="260" width="29" height="15" fill="rgb(208,43,36)"/><text x="104.00" y="270.50">&lt;l..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (10 samples, 2.50%)</title><rect x="101" y="276" width="29" height="15" fill="rgb(221,126,23)"/><text x="104.00" y="286.50">_a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.75%)</title><rect x="122" y="292" width="8" height="15" fill="rgb(231,130,29)"/><text x="125.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.75%)</title><rect x="122" y="308" width="8" height="15" fill="rgb(240,79,6)"/><text x="125.00" y="318.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.25%)</title><rect x="128" y="324" width="2" height="15" fill="rgb(231,15,35)"/><text x="131.00" y="334.50"></text></g><g><title>0x7f6d01c3d120 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="128" y="340" width="2" height="15" fill="rgb(228,218,14)"/><text x="131.00" y="350.50"></text></g><g><title>get (queue.py) (1 samples, 0.25%)</title><rect x="130" y="196" width="3" height="15" fill="rgb(236,61,4)"/><text x="133.00" y="206.50"></text></g><g><title>profile0 (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (19 samples, 4.75%)</title><rect x="80" y="100" width="56" height="15" fill="rgb(208,161,8)"/><text x="83.00" y="110.50">profi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (19 samples, 4.75%)</title><rect x="80" y="116" width="56" height="15" fill="rgb(228,6,21)"/><text x="83.00" y="126.50">time_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (19 samples, 4.75%)</title><rect x="80" y="132" width="56" height="15" fill="rgb(239,90,28)"/><text x="83.00" y="142.50">&lt;lamb..</text></g><g><title>predict (sklearn/ensemble/_forest.py) (19 samples, 4.75%)</title><rect x="80" y="148" width="56" height="15" fill="rgb(227,171,23)"/><text x="83.00" y="158.50">predi..</text></g><g><title>__call__ (joblib/parallel.py) (19 samples, 4.75%)</title><rect x="80" y="164" width="56" height="15" fill="rgb(228,214,32)"/><text x="83.00" y="174.50">__cal..</text></g><g><title>dispatch_one_batch (joblib/parallel.py) (19 samples, 4.75%)</title><rect x="80" y="180" width="56" height="15" fill="rgb(232,164,14)"/><text x="83.00" y="190.50">dispa..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (1 samples, 0.25%)</title><rect x="133" y="196" width="3" height="15" fill="rgb(252,176,5)"/><text x="136.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="133" y="212" width="3" height="15" fill="rgb(239,219,28)"/><text x="136.00" y="222.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="136" y="116" width="3" height="15" fill="rgb(231,12,41)"/><text x="139.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="136" y="132" width="3" height="15" fill="rgb(244,108,43)"/><text x="139.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.25%)</title><rect x="136" y="148" width="3" height="15" fill="rgb(231,158,41)"/><text x="139.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.25%)</title><rect x="136" y="164" width="3" height="15" fill="rgb(238,197,50)"/><text x="139.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.25%)</title><rect x="136" y="180" width="3" height="15" fill="rgb(206,65,24)"/><text x="139.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py) (1 samples, 0.25%)</title><rect x="136" y="196" width="3" height="15" fill="rgb(217,144,45)"/><text x="139.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py) (1 samples, 0.25%)</title><rect x="136" y="212" width="3" height="15" fill="rgb(232,81,5)"/><text x="139.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.25%)</title><rect x="136" y="228" width="3" height="15" fill="rgb(227,28,32)"/><text x="139.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.25%)</title><rect x="136" y="244" width="3" height="15" fill="rgb(218,25,49)"/><text x="139.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.25%)</title><rect x="136" y="260" width="3" height="15" fill="rgb(222,37,48)"/><text x="139.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.25%)</title><rect x="136" y="276" width="3" height="15" fill="rgb(217,144,27)"/><text x="139.00" y="286.50"></text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (21 samples, 5.25%)</title><rect x="80" y="68" width="62" height="15" fill="rgb(248,60,38)"/><text x="83.00" y="78.50">profil..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (21 samples, 5.25%)</title><rect x="80" y="84" width="62" height="15" fill="rgb(214,148,42)"/><text x="83.00" y="94.50">setup_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.50%)</title><rect x="136" y="100" width="6" height="15" fill="rgb(238,105,32)"/><text x="139.00" y="110.50"></text></g><g><title>_pickle_load (_pickle.c.h) (1 samples, 0.25%)</title><rect x="139" y="116" width="3" height="15" fill="rgb(220,204,25)"/><text x="142.00" y="126.50"></text></g><g><title>_pickle_load_impl (_pickle.c) (1 samples, 0.25%)</title><rect x="139" y="132" width="3" height="15" fill="rgb(250,219,25)"/><text x="142.00" y="142.50"></text></g><g><title>load (_pickle.c) (1 samples, 0.25%)</title><rect x="139" y="148" width="3" height="15" fill="rgb(252,114,1)"/><text x="142.00" y="158.50"></text></g><g><title>load_reduce (_pickle.c) (1 samples, 0.25%)</title><rect x="139" y="164" width="3" height="15" fill="rgb(236,185,45)"/><text x="142.00" y="174.50"></text></g><g><title>0x7f6cdb65f7af (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="139" y="180" width="3" height="15" fill="rgb(250,34,2)"/><text x="142.00" y="190.50"></text></g><g><title>0x7f6cdb6441e5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="139" y="196" width="3" height="15" fill="rgb(219,196,47)"/><text x="142.00" y="206.50"></text></g><g><title>0x7f6cc1c5aff9 (?) (1 samples, 0.25%)</title><rect x="145" y="212" width="3" height="15" fill="rgb(248,98,37)"/><text x="148.00" y="222.50"></text></g><g><title>0x7f6cc1c55ef6 (?) (1 samples, 0.25%)</title><rect x="145" y="228" width="3" height="15" fill="rgb(250,63,8)"/><text x="148.00" y="238.50"></text></g><g><title>0x7f6cc1c4a962 (?) (1 samples, 0.25%)</title><rect x="145" y="244" width="3" height="15" fill="rgb(232,101,32)"/><text x="148.00" y="254.50"></text></g><g><title>0x7f6cc1c7e7a7 (?) (1 samples, 0.25%)</title><rect x="145" y="260" width="3" height="15" fill="rgb(245,227,25)"/><text x="148.00" y="270.50"></text></g><g><title>0x7f6cc1c7e379 (?) (1 samples, 0.25%)</title><rect x="145" y="276" width="3" height="15" fill="rgb(232,112,16)"/><text x="148.00" y="286.50"></text></g><g><title>0x7f6cc20dc8b8 (?) (1 samples, 0.25%)</title><rect x="145" y="292" width="3" height="15" fill="rgb(236,6,54)"/><text x="148.00" y="302.50"></text></g><g><title>0x7f6cc20dac7f (?) (1 samples, 0.25%)</title><rect x="145" y="308" width="3" height="15" fill="rgb(245,12,39)"/><text x="148.00" y="318.50"></text></g><g><title>0x7f6cc20ed99c (?) (1 samples, 0.25%)</title><rect x="145" y="324" width="3" height="15" fill="rgb(250,53,28)"/><text x="148.00" y="334.50"></text></g><g><title>0x7f6cc1e14dc2 (?) (1 samples, 0.25%)</title><rect x="145" y="340" width="3" height="15" fill="rgb(240,123,21)"/><text x="148.00" y="350.50"></text></g><g><title>0x7f6cc1e1455b (?) (1 samples, 0.25%)</title><rect x="145" y="356" width="3" height="15" fill="rgb(246,39,48)"/><text x="148.00" y="366.50"></text></g><g><title>0x7f6d01c1c90e (libc-2.29.so) (1 samples, 0.25%)</title><rect x="157" y="356" width="3" height="15" fill="rgb(240,219,27)"/><text x="160.00" y="366.50"></text></g><g><title>0x7f6d01c1c971 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="160" y="356" width="3" height="15" fill="rgb(250,45,35)"/><text x="163.00" y="366.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (123 samples, 30.75%)</title><rect x="163" y="356" width="363" height="15" fill="rgb(206,129,53)"/><text x="166.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Pr..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="523" y="372" width="3" height="15" fill="rgb(240,38,51)"/><text x="526.00" y="382.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="523" y="388" width="3" height="15" fill="rgb(247,165,54)"/><text x="526.00" y="398.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (131 samples, 32.75%)</title><rect x="142" y="100" width="387" height="15" fill="rgb(225,196,53)"/><text x="145.00" y="110.50">profile (bench_RandomForestRegressor_default_m_reg_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (131 samples, 32.75%)</title><rect x="142" y="116" width="387" height="15" fill="rgb(237,113,13)"/><text x="145.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (131 samples, 32.75%)</title><rect x="142" y="132" width="387" height="15" fill="rgb(253,165,47)"/><text x="145.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (131 samples, 32.75%)</title><rect x="142" y="148" width="387" height="15" fill="rgb(254,205,14)"/><text x="145.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (131 samples, 32.75%)</title><rect x="142" y="164" width="387" height="15" fill="rgb(231,90,19)"/><text x="145.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference...</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (130 samples, 32.50%)</title><rect x="145" y="180" width="384" height="15" fill="rgb(245,65,52)"/><text x="148.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (130 samples, 32.50%)</title><rect x="145" y="196" width="384" height="15" fill="rgb(224,118,50)"/><text x="148.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (129 samples, 32.25%)</title><rect x="148" y="212" width="381" height="15" fill="rgb(220,128,51)"/><text x="151.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/cap..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (129 samples, 32.25%)</title><rect x="148" y="228" width="381" height="15" fill="rgb(213,172,13)"/><text x="151.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (129 samples, 32.25%)</title><rect x="148" y="244" width="381" height="15" fill="rgb(250,49,18)"/><text x="151.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::mod..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (129 samples, 32.25%)</title><rect x="148" y="260" width="381" height="15" fill="rgb(224,219,52)"/><text x="151.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/cap..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (129 samples, 32.25%)</title><rect x="148" y="276" width="381" height="15" fill="rgb(224,22,26)"/><text x="151.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/cap..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (129 samples, 32.25%)</title><rect x="148" y="292" width="381" height="15" fill="rgb(251,227,42)"/><text x="151.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (129 samples, 32.25%)</title><rect x="148" y="308" width="381" height="15" fill="rgb(225,177,45)"/><text x="151.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/c..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (129 samples, 32.25%)</title><rect x="148" y="324" width="381" height="15" fill="rgb(207,96,2)"/><text x="151.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxrunti..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (129 samples, 32.25%)</title><rect x="148" y="340" width="381" height="15" fill="rgb(235,162,25)"/><text x="151.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Comp..</text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="526" y="356" width="3" height="15" fill="rgb(233,110,25)"/><text x="529.00" y="366.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="529" y="132" width="3" height="15" fill="rgb(223,206,35)"/><text x="532.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.25%)</title><rect x="529" y="148" width="3" height="15" fill="rgb(219,197,30)"/><text x="532.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.25%)</title><rect x="529" y="164" width="3" height="15" fill="rgb(235,186,14)"/><text x="532.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.25%)</title><rect x="529" y="180" width="3" height="15" fill="rgb(218,77,6)"/><text x="532.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.25%)</title><rect x="529" y="196" width="3" height="15" fill="rgb(226,50,12)"/><text x="532.00" y="206.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.25%)</title><rect x="529" y="212" width="3" height="15" fill="rgb(228,224,42)"/><text x="532.00" y="222.50"></text></g><g><title>_numpy_array (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.25%)</title><rect x="529" y="228" width="3" height="15" fill="rgb(245,149,33)"/><text x="532.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.25%)</title><rect x="529" y="244" width="3" height="15" fill="rgb(252,50,53)"/><text x="532.00" y="254.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.25%)</title><rect x="529" y="260" width="3" height="15" fill="rgb(231,141,2)"/><text x="532.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.25%)</title><rect x="529" y="276" width="3" height="15" fill="rgb(216,135,23)"/><text x="532.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.25%)</title><rect x="529" y="292" width="3" height="15" fill="rgb(209,133,33)"/><text x="532.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c) (1 samples, 0.25%)</title><rect x="529" y="308" width="3" height="15" fill="rgb(205,16,45)"/><text x="532.00" y="318.50"></text></g><g><title>profile_ort (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (133 samples, 33.25%)</title><rect x="142" y="68" width="393" height="15" fill="rgb(208,132,30)"/><text x="145.00" y="78.50">profile_ort (bench_RandomForestRegressor_default_m_re..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (133 samples, 33.25%)</title><rect x="142" y="84" width="393" height="15" fill="rgb(213,214,14)"/><text x="145.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_m_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.50%)</title><rect x="529" y="100" width="6" height="15" fill="rgb(217,150,19)"/><text x="532.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.50%)</title><rect x="529" y="116" width="6" height="15" fill="rgb(238,194,11)"/><text x="532.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="532" y="132" width="3" height="15" fill="rgb(253,172,9)"/><text x="535.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.25%)</title><rect x="532" y="148" width="3" height="15" fill="rgb(239,159,7)"/><text x="535.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.25%)</title><rect x="532" y="164" width="3" height="15" fill="rgb(213,3,47)"/><text x="535.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.25%)</title><rect x="532" y="180" width="3" height="15" fill="rgb(223,57,47)"/><text x="535.00" y="190.50"></text></g><g><title>make_model (onnx/helper.py) (1 samples, 0.25%)</title><rect x="532" y="196" width="3" height="15" fill="rgb(234,54,50)"/><text x="535.00" y="206.50"></text></g><g><title>0x7f6ceff714be (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="532" y="212" width="3" height="15" fill="rgb(241,152,3)"/><text x="535.00" y="222.50"></text></g><g><title>google::protobuf::Message::CopyFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="532" y="228" width="3" height="15" fill="rgb(232,133,16)"/><text x="535.00" y="238.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Merge (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="532" y="244" width="3" height="15" fill="rgb(223,100,29)"/><text x="535.00" y="254.50"></text></g><g><title>google::protobuf::Message::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="532" y="260" width="3" height="15" fill="rgb(240,5,9)"/><text x="535.00" y="270.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Merge (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="532" y="276" width="3" height="15" fill="rgb(221,19,36)"/><text x="535.00" y="286.50"></text></g><g><title>google::protobuf::Message::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="532" y="292" width="3" height="15" fill="rgb(220,3,48)"/><text x="535.00" y="302.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Merge (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="532" y="308" width="3" height="15" fill="rgb(249,156,25)"/><text x="535.00" y="318.50"></text></g><g><title>google::protobuf::Reflection::AddInt64 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="532" y="324" width="3" height="15" fill="rgb(217,76,29)"/><text x="535.00" y="334.50"></text></g><g><title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="532" y="340" width="3" height="15" fill="rgb(254,63,8)"/><text x="535.00" y="350.50"></text></g><g><title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="532" y="356" width="3" height="15" fill="rgb(221,212,29)"/><text x="535.00" y="366.50"></text></g><g><title>0x7f6cc26f554f (?) (1 samples, 0.25%)</title><rect x="535" y="244" width="3" height="15" fill="rgb(223,80,29)"/><text x="538.00" y="254.50"></text></g><g><title>0x7f6cc26fb65e (?) (1 samples, 0.25%)</title><rect x="535" y="260" width="3" height="15" fill="rgb(251,85,25)"/><text x="538.00" y="270.50"></text></g><g><title>0x7f6cc26fb50f (?) (1 samples, 0.25%)</title><rect x="535" y="276" width="3" height="15" fill="rgb(218,95,16)"/><text x="538.00" y="286.50"></text></g><g><title>0x7f6cc2701d6c (?) (1 samples, 0.25%)</title><rect x="535" y="292" width="3" height="15" fill="rgb(231,225,39)"/><text x="538.00" y="302.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.25%)</title><rect x="535" y="308" width="3" height="15" fill="rgb(249,35,44)"/><text x="538.00" y="318.50"></text></g><g><title>0x7f6cc26e627c (?) (1 samples, 0.25%)</title><rect x="535" y="324" width="3" height="15" fill="rgb(226,83,12)"/><text x="538.00" y="334.50"></text></g><g><title>0x7f6cc26e60ae (?) (1 samples, 0.25%)</title><rect x="535" y="340" width="3" height="15" fill="rgb(253,158,18)"/><text x="538.00" y="350.50"></text></g><g><title>0x7f6ccbbe3ea9 (libgomp.so.1.0.0) (3 samples, 0.75%)</title><rect x="538" y="484" width="8" height="15" fill="rgb(234,60,45)"/><text x="541.00" y="494.50"></text></g><g><title>0x7f6ccbbe3eab (libgomp.so.1.0.0) (1 samples, 0.25%)</title><rect x="546" y="484" width="3" height="15" fill="rgb(224,46,46)"/><text x="549.00" y="494.50"></text></g><g><title>0x7f6ccbbe2ab9 (libgomp.so.1.0.0) (5 samples, 1.25%)</title><rect x="538" y="468" width="14" height="15" fill="rgb(236,89,29)"/><text x="541.00" y="478.50"></text></g><g><title>0x7f6ccbbe3ead (libgomp.so.1.0.0) (1 samples, 0.25%)</title><rect x="549" y="484" width="3" height="15" fill="rgb(226,129,24)"/><text x="552.00" y="494.50"></text></g><g><title>std::isnan (cmath) (1 samples, 0.25%)</title><rect x="573" y="532" width="3" height="15" fill="rgb(229,89,39)"/><text x="576.00" y="542.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h) (4 samples, 1.00%)</title><rect x="576" y="564" width="12" height="15" fill="rgb(233,166,28)"/><text x="579.00" y="574.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h) (4 samples, 1.00%)</title><rect x="576" y="580" width="12" height="15" fill="rgb(242,61,41)"/><text x="579.00" y="590.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h) (4 samples, 1.00%)</title><rect x="576" y="596" width="12" height="15" fill="rgb(250,166,43)"/><text x="579.00" y="606.50"></text></g><g><title>std::unordered_map&lt;long, unsigned long, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt; &gt;::find (unordered_map.h) (16 samples, 4.00%)</title><rect x="576" y="532" width="47" height="15" fill="rgb(232,193,26)"/><text x="579.00" y="542.50">std:..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h) (16 samples, 4.00%)</title><rect x="576" y="548" width="47" height="15" fill="rgb(214,183,19)"/><text x="579.00" y="558.50">std:..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (hashtable.h) (12 samples, 3.00%)</title><rect x="588" y="564" width="35" height="15" fill="rgb(248,224,40)"/><text x="591.00" y="574.50">st..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h) (12 samples, 3.00%)</title><rect x="588" y="580" width="35" height="15" fill="rgb(243,43,43)"/><text x="591.00" y="590.50">st..</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (31 samples, 7.75%)</title><rect x="535" y="100" width="91" height="15" fill="rgb(254,155,33)"/><text x="538.00" y="110.50">profile (b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (31 samples, 7.75%)</title><rect x="535" y="116" width="91" height="15" fill="rgb(214,144,25)"/><text x="538.00" y="126.50">time_predi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (31 samples, 7.75%)</title><rect x="535" y="132" width="91" height="15" fill="rgb(242,9,20)"/><text x="538.00" y="142.50">&lt;lambda&gt; (..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (31 samples, 7.75%)</title><rect x="535" y="148" width="91" height="15" fill="rgb(231,39,21)"/><text x="538.00" y="158.50">run (mlpro..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (31 samples, 7.75%)</title><rect x="535" y="164" width="91" height="15" fill="rgb(234,186,2)"/><text x="538.00" y="174.50">_run_seque..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (31 samples, 7.75%)</title><rect x="535" y="180" width="91" height="15" fill="rgb(208,15,13)"/><text x="538.00" y="190.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (31 samples, 7.75%)</title><rect x="535" y="196" width="91" height="15" fill="rgb(235,45,25)"/><text x="538.00" y="206.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (31 samples, 7.75%)</title><rect x="535" y="212" width="91" height="15" fill="rgb(227,64,13)"/><text x="538.00" y="222.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (31 samples, 7.75%)</title><rect x="535" y="228" width="91" height="15" fill="rgb(209,195,25)"/><text x="538.00" y="238.50">_run (mlpr..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (30 samples, 7.50%)</title><rect x="538" y="244" width="88" height="15" fill="rgb(216,40,50)"/><text x="541.00" y="254.50">pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (30 samples, 7.50%)</title><rect x="538" y="260" width="88" height="15" fill="rgb(236,184,46)"/><text x="541.00" y="270.50">void pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (30 samples, 7.50%)</title><rect x="538" y="276" width="88" height="15" fill="rgb(214,18,2)"/><text x="541.00" y="286.50">void pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (30 samples, 7.50%)</title><rect x="538" y="292" width="88" height="15" fill="rgb(238,78,36)"/><text x="541.00" y="302.50">pybind11::..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (30 samples, 7.50%)</title><rect x="538" y="308" width="88" height="15" fill="rgb(212,151,27)"/><text x="541.00" y="318.50">pybind11::..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (30 samples, 7.50%)</title><rect x="538" y="324" width="88" height="15" fill="rgb(219,26,26)"/><text x="541.00" y="334.50">pybind11::..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (30 samples, 7.50%)</title><rect x="538" y="340" width="88" height="15" fill="rgb(249,165,24)"/><text x="541.00" y="350.50">pybind11::..</text></g><g><title>pybind11::array::~array (numpy.h) (30 samples, 7.50%)</title><rect x="538" y="356" width="88" height="15" fill="rgb(250,108,34)"/><text x="541.00" y="366.50">pybind11::..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (30 samples, 7.50%)</title><rect x="538" y="372" width="88" height="15" fill="rgb(224,3,53)"/><text x="541.00" y="382.50">pybind11::..</text></g><g><title>pybind11::object::~object (pytypes.h) (30 samples, 7.50%)</title><rect x="538" y="388" width="88" height="15" fill="rgb(208,44,10)"/><text x="541.00" y="398.50">pybind11::..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (30 samples, 7.50%)</title><rect x="538" y="404" width="88" height="15" fill="rgb(244,128,37)"/><text x="541.00" y="414.50">pybind11::..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (30 samples, 7.50%)</title><rect x="538" y="420" width="88" height="15" fill="rgb(207,75,49)"/><text x="541.00" y="430.50">RuntimeTre..</text></g><g><title>pybind11::array::size (numpy.h) (30 samples, 7.50%)</title><rect x="538" y="436" width="88" height="15" fill="rgb(246,199,28)"/><text x="541.00" y="446.50">pybind11::..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (30 samples, 7.50%)</title><rect x="538" y="452" width="88" height="15" fill="rgb(222,189,47)"/><text x="541.00" y="462.50">std::accum..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (25 samples, 6.25%)</title><rect x="552" y="468" width="74" height="15" fill="rgb(247,94,30)"/><text x="555.00" y="478.50">GOMP_par..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (25 samples, 6.25%)</title><rect x="552" y="484" width="74" height="15" fill="rgb(224,96,45)"/><text x="555.00" y="494.50">RuntimeT..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h) (25 samples, 6.25%)</title><rect x="552" y="500" width="74" height="15" fill="rgb(241,202,13)"/><text x="555.00" y="510.50">std::vec..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (24 samples, 6.00%)</title><rect x="555" y="516" width="71" height="15" fill="rgb(241,175,5)"/><text x="558.00" y="526.50">RuntimeT..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator[] (stl_vector.h) (1 samples, 0.25%)</title><rect x="623" y="532" width="3" height="15" fill="rgb(254,154,34)"/><text x="626.00" y="542.50"></text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (32 samples, 8.00%)</title><rect x="535" y="68" width="94" height="15" fill="rgb(228,16,19)"/><text x="538.00" y="78.50">profile_pyr..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (32 samples, 8.00%)</title><rect x="535" y="84" width="94" height="15" fill="rgb(250,104,14)"/><text x="538.00" y="94.50">setup_profi..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="626" y="100" width="3" height="15" fill="rgb(227,73,3)"/><text x="629.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="626" y="116" width="3" height="15" fill="rgb(224,198,26)"/><text x="629.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="626" y="132" width="3" height="15" fill="rgb(218,110,40)"/><text x="629.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.25%)</title><rect x="626" y="148" width="3" height="15" fill="rgb(246,83,51)"/><text x="629.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.25%)</title><rect x="626" y="164" width="3" height="15" fill="rgb(218,158,38)"/><text x="629.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.25%)</title><rect x="626" y="180" width="3" height="15" fill="rgb(206,215,29)"/><text x="629.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py) (1 samples, 0.25%)</title><rect x="626" y="196" width="3" height="15" fill="rgb(251,227,52)"/><text x="629.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py) (1 samples, 0.25%)</title><rect x="626" y="212" width="3" height="15" fill="rgb(247,183,31)"/><text x="629.00" y="222.50"></text></g><g><title>0x7f6cdb64f2d2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="626" y="228" width="3" height="15" fill="rgb(240,186,28)"/><text x="629.00" y="238.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.25%)</title><rect x="626" y="244" width="3" height="15" fill="rgb(238,136,9)"/><text x="629.00" y="254.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.25%)</title><rect x="626" y="260" width="3" height="15" fill="rgb(246,156,0)"/><text x="629.00" y="270.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.25%)</title><rect x="626" y="276" width="3" height="15" fill="rgb(208,174,21)"/><text x="629.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.25%)</title><rect x="626" y="292" width="3" height="15" fill="rgb(245,176,39)"/><text x="629.00" y="302.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.25%)</title><rect x="626" y="308" width="3" height="15" fill="rgb(241,18,20)"/><text x="629.00" y="318.50"></text></g><g><title>_initialize_backend (joblib/parallel.py) (1 samples, 0.25%)</title><rect x="638" y="180" width="3" height="15" fill="rgb(228,1,39)"/><text x="641.00" y="190.50"></text></g><g><title>update_wrapper (functools.py) (4 samples, 1.00%)</title><rect x="697" y="228" width="12" height="15" fill="rgb(229,95,39)"/><text x="700.00" y="238.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (9 samples, 2.25%)</title><rect x="685" y="196" width="27" height="15" fill="rgb(232,195,22)"/><text x="688.00" y="206.50">&lt;..</text></g><g><title>delayed (joblib/parallel.py) (8 samples, 2.00%)</title><rect x="688" y="212" width="24" height="15" fill="rgb(216,227,35)"/><text x="691.00" y="222.50">d..</text></g><g><title>wraps (functools.py) (1 samples, 0.25%)</title><rect x="709" y="228" width="3" height="15" fill="rgb(251,153,27)"/><text x="712.00" y="238.50"></text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.25%)</title><rect x="712" y="196" width="3" height="15" fill="rgb(205,163,22)"/><text x="715.00" y="206.50"></text></g><g><title>0x4 (?) (1 samples, 0.25%)</title><rect x="738" y="212" width="3" height="15" fill="rgb(212,142,47)"/><text x="741.00" y="222.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.25%)</title><rect x="738" y="228" width="3" height="15" fill="rgb(245,204,4)"/><text x="741.00" y="238.50"></text></g><g><title>0x7ffc6d7c6a09 ([vdso]) (1 samples, 0.25%)</title><rect x="738" y="244" width="3" height="15" fill="rgb(232,4,26)"/><text x="741.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.25%)</title><rect x="741" y="212" width="3" height="15" fill="rgb(247,117,22)"/><text x="744.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 1.00%)</title><rect x="750" y="228" width="12" height="15" fill="rgb(208,203,16)"/><text x="753.00" y="238.50"></text></g><g><title>batch_completed (joblib/_parallel_backends.py) (1 samples, 0.25%)</title><rect x="759" y="244" width="3" height="15" fill="rgb(240,34,0)"/><text x="762.00" y="254.50"></text></g><g><title>0x7f6cdb65ff55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="794" y="324" width="3" height="15" fill="rgb(235,163,10)"/><text x="797.00" y="334.50"></text></g><g><title>0x7f6cdb64fd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="794" y="340" width="3" height="15" fill="rgb(242,194,0)"/><text x="797.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.25%)</title><rect x="794" y="356" width="3" height="15" fill="rgb(212,28,10)"/><text x="797.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.25%)</title><rect x="794" y="372" width="3" height="15" fill="rgb(226,25,15)"/><text x="797.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.25%)</title><rect x="794" y="388" width="3" height="15" fill="rgb(215,106,45)"/><text x="797.00" y="398.50"></text></g><g><title>0x7f6cdb66f2bd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="797" y="340" width="3" height="15" fill="rgb(243,136,3)"/><text x="800.00" y="350.50"></text></g><g><title>0x7f6cdb66e225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="800" y="356" width="3" height="15" fill="rgb(208,166,15)"/><text x="803.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.25%)</title><rect x="800" y="372" width="3" height="15" fill="rgb(239,160,14)"/><text x="803.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.25%)</title><rect x="800" y="388" width="3" height="15" fill="rgb(220,8,36)"/><text x="803.00" y="398.50"></text></g><g><title>0x7f6cdb6480fe (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="806" y="404" width="3" height="15" fill="rgb(247,182,39)"/><text x="809.00" y="414.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.25%)</title><rect x="815" y="452" width="3" height="15" fill="rgb(223,17,11)"/><text x="818.00" y="462.50"></text></g><g><title>0x7f6cdb66e2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.50%)</title><rect x="803" y="356" width="18" height="15" fill="rgb(239,207,49)"/><text x="806.00" y="366.50"></text></g><g><title>0x7f6cdb652d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.50%)</title><rect x="803" y="372" width="18" height="15" fill="rgb(221,50,45)"/><text x="806.00" y="382.50"></text></g><g><title>0x7f6cdb652666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.50%)</title><rect x="803" y="388" width="18" height="15" fill="rgb(216,175,11)"/><text x="806.00" y="398.50"></text></g><g><title>0x7f6cdb6482fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.00%)</title><rect x="809" y="404" width="12" height="15" fill="rgb(232,141,11)"/><text x="812.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.75%)</title><rect x="812" y="420" width="9" height="15" fill="rgb(205,126,28)"/><text x="815.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.50%)</title><rect x="815" y="436" width="6" height="15" fill="rgb(215,192,2)"/><text x="818.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.25%)</title><rect x="818" y="452" width="3" height="15" fill="rgb(218,111,52)"/><text x="821.00" y="462.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.25%)</title><rect x="818" y="468" width="3" height="15" fill="rgb(252,158,3)"/><text x="821.00" y="478.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.25%)</title><rect x="818" y="484" width="3" height="15" fill="rgb(253,78,48)"/><text x="821.00" y="494.50"></text></g><g><title>0x7f6cdb66e456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="821" y="356" width="3" height="15" fill="rgb(249,55,53)"/><text x="824.00" y="366.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.25%)</title><rect x="830" y="388" width="3" height="15" fill="rgb(223,41,9)"/><text x="833.00" y="398.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.25%)</title><rect x="830" y="404" width="3" height="15" fill="rgb(250,140,16)"/><text x="833.00" y="414.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="833" y="468" width="3" height="15" fill="rgb(213,182,12)"/><text x="836.00" y="478.50"></text></g><g><title>0x7f6cdb66e592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.25%)</title><rect x="824" y="356" width="14" height="15" fill="rgb(254,4,15)"/><text x="827.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c) (4 samples, 1.00%)</title><rect x="827" y="372" width="11" height="15" fill="rgb(226,170,35)"/><text x="830.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.50%)</title><rect x="833" y="388" width="5" height="15" fill="rgb(219,180,53)"/><text x="836.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c) (2 samples, 0.50%)</title><rect x="833" y="404" width="5" height="15" fill="rgb(208,38,18)"/><text x="836.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.50%)</title><rect x="833" y="420" width="5" height="15" fill="rgb(208,25,45)"/><text x="836.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (2 samples, 0.50%)</title><rect x="833" y="436" width="5" height="15" fill="rgb(226,68,50)"/><text x="836.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (2 samples, 0.50%)</title><rect x="833" y="452" width="5" height="15" fill="rgb(240,228,52)"/><text x="836.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="836" y="468" width="2" height="15" fill="rgb(215,64,18)"/><text x="839.00" y="478.50"></text></g><g><title>0x7f6d01c3d103 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="836" y="484" width="2" height="15" fill="rgb(206,190,25)"/><text x="839.00" y="494.50"></text></g><g><title>0x7f6cdb66e644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="838" y="356" width="3" height="15" fill="rgb(236,219,29)"/><text x="841.00" y="366.50"></text></g><g><title>0x7f6cdb63aed0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="838" y="372" width="3" height="15" fill="rgb(253,161,14)"/><text x="841.00" y="382.50"></text></g><g><title>0x7f6cdb66e684 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="841" y="356" width="3" height="15" fill="rgb(235,83,18)"/><text x="844.00" y="366.50"></text></g><g><title>0x7f6cdb66e687 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="844" y="356" width="3" height="15" fill="rgb(236,48,50)"/><text x="847.00" y="366.50"></text></g><g><title>0x7f6cdb66e6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="847" y="356" width="6" height="15" fill="rgb(238,146,5)"/><text x="850.00" y="366.50"></text></g><g><title>0x7f6cdb66e6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.75%)</title><rect x="853" y="356" width="21" height="15" fill="rgb(249,120,41)"/><text x="856.00" y="366.50"></text></g><g><title>0x7f6cdb66e6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.50%)</title><rect x="874" y="356" width="18" height="15" fill="rgb(253,148,50)"/><text x="877.00" y="366.50"></text></g><g><title>0x7f6cdb66e6c6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="892" y="356" width="3" height="15" fill="rgb(222,94,38)"/><text x="895.00" y="366.50"></text></g><g><title>0x7f6cdb66e6c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="895" y="356" width="5" height="15" fill="rgb(206,149,13)"/><text x="898.00" y="366.50"></text></g><g><title>0x7f6cdb66f405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (36 samples, 9.00%)</title><rect x="800" y="340" width="106" height="15" fill="rgb(223,177,39)"/><text x="803.00" y="350.50">0x7f6cdb66f4..</text></g><g><title>0x7f6cdb66ec27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="900" y="356" width="6" height="15" fill="rgb(224,213,19)"/><text x="903.00" y="366.50"></text></g><g><title>0x7f6cdb646529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="900" y="372" width="6" height="15" fill="rgb(243,122,10)"/><text x="903.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.50%)</title><rect x="900" y="388" width="6" height="15" fill="rgb(230,105,2)"/><text x="903.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.50%)</title><rect x="900" y="404" width="6" height="15" fill="rgb(252,91,38)"/><text x="903.00" y="414.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.25%)</title><rect x="903" y="420" width="3" height="15" fill="rgb(209,136,15)"/><text x="906.00" y="430.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.25%)</title><rect x="903" y="436" width="3" height="15" fill="rgb(214,185,12)"/><text x="906.00" y="446.50"></text></g><g><title>0x7f6cdb644178 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="906" y="356" width="3" height="15" fill="rgb(229,78,34)"/><text x="909.00" y="366.50"></text></g><g><title>0x7f6cdb65ffa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (39 samples, 9.75%)</title><rect x="797" y="324" width="115" height="15" fill="rgb(249,116,14)"/><text x="800.00" y="334.50">0x7f6cdb65ffa6..</text></g><g><title>0x7f6cdb66f540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="906" y="340" width="6" height="15" fill="rgb(231,144,35)"/><text x="909.00" y="350.50"></text></g><g><title>0x7f6cdb6442f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="909" y="356" width="3" height="15" fill="rgb(253,211,40)"/><text x="912.00" y="366.50"></text></g><g><title>0x7f6cdb643570 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="909" y="372" width="3" height="15" fill="rgb(207,63,52)"/><text x="912.00" y="382.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (5 samples, 1.25%)</title><rect x="927" y="372" width="15" height="15" fill="rgb(238,99,0)"/><text x="930.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="939" y="388" width="3" height="15" fill="rgb(253,61,29)"/><text x="942.00" y="398.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (2 samples, 0.50%)</title><rect x="942" y="372" width="6" height="15" fill="rgb(231,93,37)"/><text x="945.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.50%)</title><rect x="942" y="388" width="6" height="15" fill="rgb(249,169,20)"/><text x="945.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.50%)</title><rect x="942" y="404" width="6" height="15" fill="rgb(217,27,11)"/><text x="945.00" y="414.50"></text></g><g><title>PyArray_FromArray (ctors.c) (2 samples, 0.50%)</title><rect x="942" y="420" width="6" height="15" fill="rgb(234,93,32)"/><text x="945.00" y="430.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.25%)</title><rect x="945" y="436" width="3" height="15" fill="rgb(250,0,38)"/><text x="948.00" y="446.50"></text></g><g><title>0x7f6cdb66005a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (13 samples, 3.25%)</title><rect x="912" y="324" width="39" height="15" fill="rgb(210,20,20)"/><text x="915.00" y="334.50">0x7..</text></g><g><title>array_take (methods.c) (13 samples, 3.25%)</title><rect x="912" y="340" width="39" height="15" fill="rgb(223,56,14)"/><text x="915.00" y="350.50">arr..</text></g><g><title>PyArray_TakeFrom (item_selection.c) (8 samples, 2.00%)</title><rect x="927" y="356" width="24" height="15" fill="rgb(226,125,42)"/><text x="930.00" y="366.50">P..</text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.25%)</title><rect x="948" y="372" width="3" height="15" fill="rgb(209,176,41)"/><text x="951.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.25%)</title><rect x="948" y="388" width="3" height="15" fill="rgb(226,168,5)"/><text x="951.00" y="398.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.25%)</title><rect x="948" y="404" width="3" height="15" fill="rgb(239,26,0)"/><text x="951.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.25%)</title><rect x="948" y="420" width="3" height="15" fill="rgb(231,197,5)"/><text x="951.00" y="430.50"></text></g><g><title>0x7f6cdb660062 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="951" y="324" width="3" height="15" fill="rgb(251,115,7)"/><text x="954.00" y="334.50"></text></g><g><title>0x7f6cdb66014f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.75%)</title><rect x="954" y="324" width="8" height="15" fill="rgb(241,221,43)"/><text x="957.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.75%)</title><rect x="954" y="340" width="8" height="15" fill="rgb(205,10,11)"/><text x="957.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (3 samples, 0.75%)</title><rect x="954" y="356" width="8" height="15" fill="rgb(206,50,37)"/><text x="957.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (3 samples, 0.75%)</title><rect x="954" y="372" width="8" height="15" fill="rgb(250,47,38)"/><text x="957.00" y="382.50"></text></g><g><title>0x7f6cdb660d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (59 samples, 14.75%)</title><rect x="794" y="308" width="174" height="15" fill="rgb(217,205,31)"/><text x="797.00" y="318.50">0x7f6cdb660d2e (sklear..</text></g><g><title>0x7f6cdb660328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="962" y="324" width="6" height="15" fill="rgb(239,190,39)"/><text x="965.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.25%)</title><rect x="965" y="340" width="3" height="15" fill="rgb(236,100,26)"/><text x="968.00" y="350.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.25%)</title><rect x="965" y="356" width="3" height="15" fill="rgb(212,122,29)"/><text x="968.00" y="366.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.25%)</title><rect x="965" y="372" width="3" height="15" fill="rgb(239,190,37)"/><text x="968.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.25%)</title><rect x="965" y="388" width="3" height="15" fill="rgb(232,205,38)"/><text x="968.00" y="398.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.25%)</title><rect x="965" y="404" width="3" height="15" fill="rgb(213,199,27)"/><text x="968.00" y="414.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (2 samples, 0.50%)</title><rect x="968" y="308" width="6" height="15" fill="rgb(226,168,15)"/><text x="971.00" y="318.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.25%)</title><rect x="974" y="308" width="3" height="15" fill="rgb(245,126,18)"/><text x="977.00" y="318.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.25%)</title><rect x="974" y="324" width="3" height="15" fill="rgb(228,125,4)"/><text x="977.00" y="334.50"></text></g><g><title>unpack_indices (mapping.c) (1 samples, 0.25%)</title><rect x="974" y="340" width="3" height="15" fill="rgb(207,138,17)"/><text x="977.00" y="350.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.25%)</title><rect x="1010" y="340" width="3" height="15" fill="rgb(206,55,50)"/><text x="1013.00" y="350.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (15 samples, 3.75%)</title><rect x="977" y="308" width="44" height="15" fill="rgb(210,154,22)"/><text x="980.00" y="318.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (11 samples, 2.75%)</title><rect x="989" y="324" width="32" height="15" fill="rgb(253,76,49)"/><text x="992.00" y="334.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.75%)</title><rect x="1013" y="340" width="8" height="15" fill="rgb(207,100,22)"/><text x="1016.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (79 samples, 19.75%)</title><rect x="791" y="292" width="233" height="15" fill="rgb(232,123,31)"/><text x="794.00" y="302.50">predict (sklearn/tree/_classes..</text></g><g><title>is_classifier (sklearn/base.py) (1 samples, 0.25%)</title><rect x="1021" y="308" width="3" height="15" fill="rgb(246,180,26)"/><text x="1024.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.25%)</title><rect x="1024" y="324" width="3" height="15" fill="rgb(225,157,0)"/><text x="1027.00" y="334.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.25%)</title><rect x="1024" y="340" width="3" height="15" fill="rgb(230,38,33)"/><text x="1027.00" y="350.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.25%)</title><rect x="1024" y="356" width="3" height="15" fill="rgb(210,33,46)"/><text x="1027.00" y="366.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.25%)</title><rect x="1024" y="372" width="3" height="15" fill="rgb(237,102,10)"/><text x="1027.00" y="382.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.25%)</title><rect x="1027" y="324" width="3" height="15" fill="rgb(218,141,43)"/><text x="1030.00" y="334.50"></text></g><g><title>0x7f6d01c1c902 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1030" y="388" width="3" height="15" fill="rgb(246,90,44)"/><text x="1033.00" y="398.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.25%)</title><rect x="1033" y="404" width="3" height="15" fill="rgb(225,121,30)"/><text x="1036.00" y="414.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.75%)</title><rect x="1030" y="340" width="9" height="15" fill="rgb(245,61,4)"/><text x="1033.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.75%)</title><rect x="1030" y="356" width="9" height="15" fill="rgb(207,122,7)"/><text x="1033.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (3 samples, 0.75%)</title><rect x="1030" y="372" width="9" height="15" fill="rgb(228,85,42)"/><text x="1033.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 0.50%)</title><rect x="1033" y="388" width="6" height="15" fill="rgb(246,192,2)"/><text x="1036.00" y="398.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.25%)</title><rect x="1036" y="404" width="3" height="15" fill="rgb(249,149,10)"/><text x="1039.00" y="414.50"></text></g><g><title>to_128 (npy_extint128.h) (1 samples, 0.25%)</title><rect x="1036" y="420" width="3" height="15" fill="rgb(248,63,52)"/><text x="1039.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.50%)</title><rect x="1030" y="324" width="18" height="15" fill="rgb(221,21,48)"/><text x="1033.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (3 samples, 0.75%)</title><rect x="1039" y="340" width="9" height="15" fill="rgb(246,127,54)"/><text x="1042.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.50%)</title><rect x="1042" y="356" width="6" height="15" fill="rgb(237,158,39)"/><text x="1045.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (2 samples, 0.50%)</title><rect x="1042" y="372" width="6" height="15" fill="rgb(205,210,50)"/><text x="1045.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (2 samples, 0.50%)</title><rect x="1042" y="388" width="6" height="15" fill="rgb(253,5,49)"/><text x="1045.00" y="398.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.50%)</title><rect x="1042" y="404" width="6" height="15" fill="rgb(216,136,38)"/><text x="1045.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 2.25%)</title><rect x="1024" y="308" width="27" height="15" fill="rgb(225,21,42)"/><text x="1027.00" y="318.50">P..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.25%)</title><rect x="1048" y="324" width="3" height="15" fill="rgb(213,156,18)"/><text x="1051.00" y="334.50"></text></g><g><title>0x7f6d00e3fa80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="1048" y="340" width="3" height="15" fill="rgb(238,58,35)"/><text x="1051.00" y="350.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (91 samples, 22.75%)</title><rect x="785" y="276" width="269" height="15" fill="rgb(241,165,37)"/><text x="788.00" y="286.50">_accumulate_prediction (sklearn/ens..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 2.50%)</title><rect x="1024" y="292" width="30" height="15" fill="rgb(207,135,52)"/><text x="1027.00" y="302.50">uf..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.25%)</title><rect x="1051" y="308" width="3" height="15" fill="rgb(221,217,22)"/><text x="1054.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (92 samples, 23.00%)</title><rect x="785" y="260" width="272" height="15" fill="rgb(248,49,54)"/><text x="788.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.25%)</title><rect x="1054" y="276" width="3" height="15" fill="rgb(231,208,20)"/><text x="1057.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.25%)</title><rect x="1054" y="292" width="3" height="15" fill="rgb(247,26,52)"/><text x="1057.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.25%)</title><rect x="1054" y="308" width="3" height="15" fill="rgb(205,7,32)"/><text x="1057.00" y="318.50"></text></g><g><title>__exit__ (joblib/parallel.py) (3 samples, 0.75%)</title><rect x="1057" y="260" width="9" height="15" fill="rgb(216,223,45)"/><text x="1060.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py) (3 samples, 0.75%)</title><rect x="1057" y="276" width="9" height="15" fill="rgb(239,77,36)"/><text x="1060.00" y="286.50"></text></g><g><title>_dispatch (joblib/parallel.py) (124 samples, 31.00%)</title><rect x="715" y="196" width="365" height="15" fill="rgb(247,79,4)"/><text x="718.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>apply_async (joblib/_parallel_backends.py) (114 samples, 28.50%)</title><rect x="744" y="212" width="336" height="15" fill="rgb(207,189,51)"/><text x="747.00" y="222.50">apply_async (joblib/_parallel_backends.py)</text></g><g><title>__init__ (joblib/_parallel_backends.py) (108 samples, 27.00%)</title><rect x="762" y="228" width="318" height="15" fill="rgb(242,61,49)"/><text x="765.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (108 samples, 27.00%)</title><rect x="762" y="244" width="318" height="15" fill="rgb(218,80,1)"/><text x="765.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (5 samples, 1.25%)</title><rect x="1066" y="260" width="14" height="15" fill="rgb(218,100,54)"/><text x="1069.00" y="270.50"></text></g><g><title>__enter__ (threading.py) (2 samples, 0.50%)</title><rect x="1086" y="212" width="6" height="15" fill="rgb(237,63,19)"/><text x="1089.00" y="222.50"></text></g><g><title>_qsize (queue.py) (1 samples, 0.25%)</title><rect x="1092" y="212" width="3" height="15" fill="rgb(240,93,9)"/><text x="1095.00" y="222.50"></text></g><g><title>get (queue.py) (6 samples, 1.50%)</title><rect x="1080" y="196" width="18" height="15" fill="rgb(226,27,6)"/><text x="1083.00" y="206.50"></text></g><g><title>notify (threading.py) (1 samples, 0.25%)</title><rect x="1095" y="212" width="3" height="15" fill="rgb(238,9,39)"/><text x="1098.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="1107" y="212" width="6" height="15" fill="rgb(226,129,33)"/><text x="1110.00" y="222.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.25%)</title><rect x="1110" y="228" width="3" height="15" fill="rgb(223,35,52)"/><text x="1113.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (10 samples, 2.50%)</title><rect x="1113" y="212" width="29" height="15" fill="rgb(237,94,47)"/><text x="1116.00" y="222.50">ge..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (3 samples, 0.75%)</title><rect x="1133" y="228" width="9" height="15" fill="rgb(246,126,20)"/><text x="1136.00" y="238.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (16 samples, 4.00%)</title><rect x="1098" y="196" width="47" height="15" fill="rgb(205,20,32)"/><text x="1101.00" y="206.50">get_..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.25%)</title><rect x="1142" y="212" width="3" height="15" fill="rgb(251,5,31)"/><text x="1145.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (173 samples, 43.25%)</title><rect x="641" y="180" width="510" height="15" fill="rgb(209,18,32)"/><text x="644.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (2 samples, 0.50%)</title><rect x="1145" y="196" width="6" height="15" fill="rgb(239,63,5)"/><text x="1148.00" y="206.50"></text></g><g><title>notify (threading.py) (1 samples, 0.25%)</title><rect x="1148" y="212" width="3" height="15" fill="rgb(229,173,10)"/><text x="1151.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py) (179 samples, 44.75%)</title><rect x="629" y="164" width="528" height="15" fill="rgb(246,98,17)"/><text x="632.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>retrieve (joblib/parallel.py) (2 samples, 0.50%)</title><rect x="1151" y="180" width="6" height="15" fill="rgb(254,122,41)"/><text x="1154.00" y="190.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1154" y="196" width="3" height="15" fill="rgb(226,70,41)"/><text x="1157.00" y="206.50"></text></g><g><title>0x7f6d01c1f202 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1154" y="212" width="3" height="15" fill="rgb(211,119,8)"/><text x="1157.00" y="222.50"></text></g><g><title>0x7f6d01c1ca89 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1154" y="228" width="3" height="15" fill="rgb(254,109,17)"/><text x="1157.00" y="238.50"></text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.25%)</title><rect x="1157" y="164" width="3" height="15" fill="rgb(235,30,15)"/><text x="1160.00" y="174.50"></text></g><g><title>__init__ (queue.py) (1 samples, 0.25%)</title><rect x="1157" y="180" width="3" height="15" fill="rgb(214,63,12)"/><text x="1160.00" y="190.50"></text></g><g><title>__init__ (threading.py) (1 samples, 0.25%)</title><rect x="1157" y="196" width="3" height="15" fill="rgb(213,151,19)"/><text x="1160.00" y="206.50"></text></g><g><title>_joblib_parallel_args (sklearn/utils/fixes.py) (2 samples, 0.50%)</title><rect x="1160" y="164" width="6" height="15" fill="rgb(236,27,11)"/><text x="1163.00" y="174.50"></text></g><g><title>__le__ (distutils/version.py) (2 samples, 0.50%)</title><rect x="1160" y="180" width="6" height="15" fill="rgb(228,9,53)"/><text x="1163.00" y="190.50"></text></g><g><title>_cmp (distutils/version.py) (2 samples, 0.50%)</title><rect x="1160" y="196" width="6" height="15" fill="rgb(217,0,9)"/><text x="1163.00" y="206.50"></text></g><g><title>__init__ (distutils/version.py) (2 samples, 0.50%)</title><rect x="1160" y="212" width="6" height="15" fill="rgb(209,97,40)"/><text x="1163.00" y="222.50"></text></g><g><title>parse (distutils/version.py) (2 samples, 0.50%)</title><rect x="1160" y="228" width="6" height="15" fill="rgb(209,143,28)"/><text x="1163.00" y="238.50"></text></g><g><title>profile_skl (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (183 samples, 45.75%)</title><rect x="629" y="68" width="540" height="15" fill="rgb(251,171,14)"/><text x="632.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (183 samples, 45.75%)</title><rect x="629" y="84" width="540" height="15" fill="rgb(232,167,46)"/><text x="632.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_...</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (183 samples, 45.75%)</title><rect x="629" y="100" width="540" height="15" fill="rgb(250,166,22)"/><text x="632.00" y="110.50">profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (183 samples, 45.75%)</title><rect x="629" y="116" width="540" height="15" fill="rgb(207,127,0)"/><text x="632.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (183 samples, 45.75%)</title><rect x="629" y="132" width="540" height="15" fill="rgb(214,208,4)"/><text x="632.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/ensemble/_forest.py) (183 samples, 45.75%)</title><rect x="629" y="148" width="540" height="15" fill="rgb(232,43,8)"/><text x="632.00" y="158.50">predict (sklearn/ensemble/_forest.py)</text></g><g><title>array_zeros (multiarraymodule.c) (1 samples, 0.25%)</title><rect x="1166" y="164" width="3" height="15" fill="rgb(240,175,43)"/><text x="1169.00" y="174.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.25%)</title><rect x="1166" y="180" width="3" height="15" fill="rgb(218,106,31)"/><text x="1169.00" y="190.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.25%)</title><rect x="1166" y="196" width="3" height="15" fill="rgb(232,56,38)"/><text x="1169.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.25%)</title><rect x="1166" y="212" width="3" height="15" fill="rgb(225,196,17)"/><text x="1169.00" y="222.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (1 samples, 0.25%)</title><rect x="1166" y="228" width="3" height="15" fill="rgb(232,204,1)"/><text x="1169.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py) (1 samples, 0.25%)</title><rect x="1169" y="132" width="3" height="15" fill="rgb(236,34,45)"/><text x="1172.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (1 samples, 0.25%)</title><rect x="1169" y="148" width="3" height="15" fill="rgb(225,12,27)"/><text x="1172.00" y="158.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py) (1 samples, 0.25%)</title><rect x="1169" y="164" width="3" height="15" fill="rgb(220,7,8)"/><text x="1172.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py) (1 samples, 0.25%)</title><rect x="1169" y="180" width="3" height="15" fill="rgb(232,124,42)"/><text x="1172.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py) (1 samples, 0.25%)</title><rect x="1169" y="196" width="3" height="15" fill="rgb(254,218,28)"/><text x="1172.00" y="206.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.25%)</title><rect x="1169" y="212" width="3" height="15" fill="rgb(219,96,38)"/><text x="1172.00" y="222.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.25%)</title><rect x="1169" y="228" width="3" height="15" fill="rgb(248,127,54)"/><text x="1172.00" y="238.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.25%)</title><rect x="1169" y="244" width="3" height="15" fill="rgb(248,168,50)"/><text x="1172.00" y="254.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.25%)</title><rect x="1169" y="260" width="3" height="15" fill="rgb(238,16,41)"/><text x="1172.00" y="270.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.25%)</title><rect x="1169" y="276" width="3" height="15" fill="rgb(239,84,51)"/><text x="1172.00" y="286.50"></text></g><g><title>__call__ (enum.py) (1 samples, 0.25%)</title><rect x="1169" y="292" width="3" height="15" fill="rgb(233,37,48)"/><text x="1172.00" y="302.50"></text></g><g><title>_generate_sample_indices (sklearn/ensemble/_forest.py) (1 samples, 0.25%)</title><rect x="1172" y="260" width="3" height="15" fill="rgb(253,222,39)"/><text x="1175.00" y="270.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (1 samples, 0.25%)</title><rect x="1172" y="276" width="3" height="15" fill="rgb(226,46,22)"/><text x="1175.00" y="286.50"></text></g><g><title>__init__ (mtrand.c) (1 samples, 0.25%)</title><rect x="1172" y="292" width="3" height="15" fill="rgb(224,4,13)"/><text x="1175.00" y="302.50"></text></g><g><title>RandomState___init__ (mtrand.c) (1 samples, 0.25%)</title><rect x="1172" y="308" width="3" height="15" fill="rgb(214,126,25)"/><text x="1175.00" y="318.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (1 samples, 0.25%)</title><rect x="1172" y="324" width="3" height="15" fill="rgb(253,9,35)"/><text x="1175.00" y="334.50"></text></g><g><title>__init__ (mt19937.c) (1 samples, 0.25%)</title><rect x="1172" y="340" width="3" height="15" fill="rgb(253,33,1)"/><text x="1175.00" y="350.50"></text></g><g><title>MT19937___init__ (mt19937.c) (1 samples, 0.25%)</title><rect x="1172" y="356" width="3" height="15" fill="rgb(234,58,43)"/><text x="1175.00" y="366.50"></text></g><g><title>inner (contextlib.py) (1 samples, 0.25%)</title><rect x="1172" y="372" width="3" height="15" fill="rgb(245,175,8)"/><text x="1175.00" y="382.50"></text></g><g><title>generate_state (bit_generator.c) (1 samples, 0.25%)</title><rect x="1172" y="388" width="3" height="15" fill="rgb(230,154,32)"/><text x="1175.00" y="398.50"></text></g><g><title>generate_state (bit_generator.c) (1 samples, 0.25%)</title><rect x="1172" y="404" width="3" height="15" fill="rgb(245,116,22)"/><text x="1175.00" y="414.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.25%)</title><rect x="1172" y="420" width="3" height="15" fill="rgb(223,59,2)"/><text x="1175.00" y="430.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.25%)</title><rect x="1172" y="436" width="3" height="15" fill="rgb(211,174,0)"/><text x="1175.00" y="446.50"></text></g><g><title>_prune_tree (sklearn/tree/_classes.py) (1 samples, 0.25%)</title><rect x="1175" y="292" width="3" height="15" fill="rgb(254,30,27)"/><text x="1178.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.25%)</title><rect x="1175" y="308" width="3" height="15" fill="rgb(239,35,9)"/><text x="1178.00" y="318.50"></text></g><g><title>__Pyx_PyInt_As_uint32_t (mt19937.c) (1 samples, 0.25%)</title><rect x="1178" y="388" width="3" height="15" fill="rgb(246,34,20)"/><text x="1181.00" y="398.50"></text></g><g><title>__Pyx_PyNumber_IntOrLong (mt19937.c) (1 samples, 0.25%)</title><rect x="1178" y="404" width="3" height="15" fill="rgb(229,36,5)"/><text x="1181.00" y="414.50"></text></g><g><title>__init__ (bit_generator.c) (1 samples, 0.25%)</title><rect x="1181" y="388" width="3" height="15" fill="rgb(247,100,48)"/><text x="1184.00" y="398.50"></text></g><g><title>BitGenerator___init__ (bit_generator.c) (1 samples, 0.25%)</title><rect x="1181" y="404" width="3" height="15" fill="rgb(214,46,48)"/><text x="1184.00" y="414.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (bit_generator.c) (1 samples, 0.25%)</title><rect x="1181" y="420" width="3" height="15" fill="rgb(209,138,36)"/><text x="1184.00" y="430.50"></text></g><g><title>__init__ (bit_generator.c) (1 samples, 0.25%)</title><rect x="1181" y="436" width="3" height="15" fill="rgb(228,154,18)"/><text x="1184.00" y="446.50"></text></g><g><title>SeedSequence___init__ (bit_generator.c) (1 samples, 0.25%)</title><rect x="1181" y="452" width="3" height="15" fill="rgb(209,186,40)"/><text x="1184.00" y="462.50"></text></g><g><title>SeedSequence_get_assembled_entropy (bit_generator.c) (1 samples, 0.25%)</title><rect x="1181" y="468" width="3" height="15" fill="rgb(219,25,49)"/><text x="1184.00" y="478.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c) (1 samples, 0.25%)</title><rect x="1181" y="484" width="3" height="15" fill="rgb(231,211,26)"/><text x="1184.00" y="494.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c) (1 samples, 0.25%)</title><rect x="1181" y="500" width="3" height="15" fill="rgb(221,166,33)"/><text x="1184.00" y="510.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c) (1 samples, 0.25%)</title><rect x="1181" y="516" width="3" height="15" fill="rgb(234,179,43)"/><text x="1184.00" y="526.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c) (1 samples, 0.25%)</title><rect x="1181" y="532" width="3" height="15" fill="rgb(250,71,46)"/><text x="1184.00" y="542.50"></text></g><g><title>_int_to_uint32_array (bit_generator.c) (1 samples, 0.25%)</title><rect x="1181" y="548" width="3" height="15" fill="rgb(218,144,20)"/><text x="1184.00" y="558.50"></text></g><g><title>bit_generator__int_to_uint32_array (bit_generator.c) (1 samples, 0.25%)</title><rect x="1181" y="564" width="3" height="15" fill="rgb(238,85,17)"/><text x="1184.00" y="574.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (bit_generator.c) (1 samples, 0.25%)</title><rect x="1181" y="580" width="3" height="15" fill="rgb(205,148,51)"/><text x="1184.00" y="590.50"></text></g><g><title>uint_arrtype_new (scalartypes.c.src) (1 samples, 0.25%)</title><rect x="1181" y="596" width="3" height="15" fill="rgb(250,3,10)"/><text x="1184.00" y="606.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src) (1 samples, 0.25%)</title><rect x="1184" y="388" width="3" height="15" fill="rgb(240,216,35)"/><text x="1187.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.25%)</title><rect x="1184" y="404" width="3" height="15" fill="rgb(221,226,24)"/><text x="1187.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.25%)</title><rect x="1184" y="420" width="3" height="15" fill="rgb(237,99,25)"/><text x="1187.00" y="430.50"></text></g><g><title>all (400 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(209,182,0)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (400 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(243,112,13)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py)</text></g><g><title>start (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (7 samples, 1.75%)</title><rect x="1169" y="68" width="21" height="15" fill="rgb(235,54,18)"/><text x="1172.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py) (7 samples, 1.75%)</title><rect x="1169" y="84" width="21" height="15" fill="rgb(206,46,36)"/><text x="1172.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (7 samples, 1.75%)</title><rect x="1169" y="100" width="21" height="15" fill="rgb(247,54,32)"/><text x="1172.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py) (7 samples, 1.75%)</title><rect x="1169" y="116" width="21" height="15" fill="rgb(205,110,2)"/><text x="1172.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py) (6 samples, 1.50%)</title><rect x="1172" y="132" width="18" height="15" fill="rgb(232,177,41)"/><text x="1175.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (6 samples, 1.50%)</title><rect x="1172" y="148" width="18" height="15" fill="rgb(241,137,42)"/><text x="1175.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py) (6 samples, 1.50%)</title><rect x="1172" y="164" width="18" height="15" fill="rgb(230,217,11)"/><text x="1175.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (6 samples, 1.50%)</title><rect x="1172" y="180" width="18" height="15" fill="rgb(217,216,31)"/><text x="1175.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (6 samples, 1.50%)</title><rect x="1172" y="196" width="18" height="15" fill="rgb(215,14,52)"/><text x="1175.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py) (6 samples, 1.50%)</title><rect x="1172" y="212" width="18" height="15" fill="rgb(236,162,37)"/><text x="1175.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (6 samples, 1.50%)</title><rect x="1172" y="228" width="18" height="15" fill="rgb(225,117,6)"/><text x="1175.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py) (6 samples, 1.50%)</title><rect x="1172" y="244" width="18" height="15" fill="rgb(206,43,7)"/><text x="1175.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (5 samples, 1.25%)</title><rect x="1175" y="260" width="15" height="15" fill="rgb(236,79,10)"/><text x="1178.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (5 samples, 1.25%)</title><rect x="1175" y="276" width="15" height="15" fill="rgb(213,54,18)"/><text x="1178.00" y="286.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (4 samples, 1.00%)</title><rect x="1178" y="292" width="12" height="15" fill="rgb(223,213,25)"/><text x="1181.00" y="302.50"></text></g><g><title>__init__ (mtrand.c) (4 samples, 1.00%)</title><rect x="1178" y="308" width="12" height="15" fill="rgb(252,187,11)"/><text x="1181.00" y="318.50"></text></g><g><title>RandomState___init__ (mtrand.c) (4 samples, 1.00%)</title><rect x="1178" y="324" width="12" height="15" fill="rgb(252,73,29)"/><text x="1181.00" y="334.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (4 samples, 1.00%)</title><rect x="1178" y="340" width="12" height="15" fill="rgb(242,165,4)"/><text x="1181.00" y="350.50"></text></g><g><title>__init__ (mt19937.c) (4 samples, 1.00%)</title><rect x="1178" y="356" width="12" height="15" fill="rgb(236,0,26)"/><text x="1181.00" y="366.50"></text></g><g><title>MT19937___init__ (mt19937.c) (4 samples, 1.00%)</title><rect x="1178" y="372" width="12" height="15" fill="rgb(240,30,18)"/><text x="1181.00" y="382.50"></text></g><g><title>inner (contextlib.py) (1 samples, 0.25%)</title><rect x="1187" y="388" width="3" height="15" fill="rgb(237,143,30)"/><text x="1190.00" y="398.50"></text></g><g><title>generate_state (bit_generator.c) (1 samples, 0.25%)</title><rect x="1187" y="404" width="3" height="15" fill="rgb(216,227,43)"/><text x="1190.00" y="414.50"></text></g><g><title>generate_state (bit_generator.c) (1 samples, 0.25%)</title><rect x="1187" y="420" width="3" height="15" fill="rgb(237,135,16)"/><text x="1190.00" y="430.50"></text></g></g></svg>