<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1990" onload="init(evt)" viewBox="0 0 1200 1990" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1990" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1973.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1973.00"> </text><g id="frames"><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="13" y="900" width="3" height="15" fill="rgb(250,19,34)"/><text x="16.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="13" y="916" width="3" height="15" fill="rgb(240,223,22)"/><text x="16.00" y="926.50"></text></g><g><title>_get_metadata_path (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="13" y="932" width="3" height="15" fill="rgb(216,58,8)"/><text x="16.00" y="942.50"></text></g><g><title>_fn (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="13" y="948" width="3" height="15" fill="rgb(249,86,42)"/><text x="16.00" y="958.50"></text></g><g><title>_validate_resource_path (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="13" y="964" width="3" height="15" fill="rgb(248,47,0)"/><text x="16.00" y="974.50"></text></g><g><title>isabs (posixpath.py) (1 samples, 0.29%)</title><rect x="13" y="980" width="3" height="15" fill="rgb(246,15,53)"/><text x="16.00" y="990.50"></text></g><g><title>_get_sep (posixpath.py) (1 samples, 0.29%)</title><rect x="13" y="996" width="3" height="15" fill="rgb(218,97,23)"/><text x="16.00" y="1006.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="20" y="980" width="3" height="15" fill="rgb(243,32,21)"/><text x="23.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="20" y="996" width="3" height="15" fill="rgb(252,87,9)"/><text x="23.00" y="1006.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 1.45%)</title><rect x="10" y="836" width="17" height="15" fill="rgb(249,100,2)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 1.45%)</title><rect x="10" y="852" width="17" height="15" fill="rgb(224,15,30)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (5 samples, 1.45%)</title><rect x="10" y="868" width="17" height="15" fill="rgb(238,203,40)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (5 samples, 1.45%)</title><rect x="10" y="884" width="17" height="15" fill="rgb(254,40,44)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (3 samples, 0.87%)</title><rect x="16" y="900" width="11" height="15" fill="rgb(229,149,34)"/><text x="19.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (3 samples, 0.87%)</title><rect x="16" y="916" width="11" height="15" fill="rgb(224,29,32)"/><text x="19.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="16" y="932" width="11" height="15" fill="rgb(249,135,24)"/><text x="19.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="16" y="948" width="11" height="15" fill="rgb(243,225,11)"/><text x="19.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="16" y="964" width="11" height="15" fill="rgb(252,2,38)"/><text x="19.00" y="974.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="980" width="4" height="15" fill="rgb(243,168,10)"/><text x="26.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="10" y="596" width="20" height="15" fill="rgb(218,73,22)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="10" y="612" width="20" height="15" fill="rgb(235,49,9)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="10" y="628" width="20" height="15" fill="rgb(211,195,18)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="10" y="644" width="20" height="15" fill="rgb(250,35,43)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="10" y="660" width="20" height="15" fill="rgb(248,9,6)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="10" y="676" width="20" height="15" fill="rgb(209,227,14)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.74%)</title><rect x="10" y="692" width="20" height="15" fill="rgb(212,135,10)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="10" y="708" width="20" height="15" fill="rgb(208,97,54)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 1.74%)</title><rect x="10" y="724" width="20" height="15" fill="rgb(214,52,33)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="10" y="740" width="20" height="15" fill="rgb(230,10,25)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="10" y="756" width="20" height="15" fill="rgb(234,24,9)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="10" y="772" width="20" height="15" fill="rgb(242,76,12)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.74%)</title><rect x="10" y="788" width="20" height="15" fill="rgb(252,35,48)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="10" y="804" width="20" height="15" fill="rgb(247,222,9)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 1.74%)</title><rect x="10" y="820" width="20" height="15" fill="rgb(224,47,38)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="836" width="3" height="15" fill="rgb(205,195,52)"/><text x="30.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="852" width="3" height="15" fill="rgb(248,180,45)"/><text x="30.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="868" width="3" height="15" fill="rgb(246,202,5)"/><text x="30.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="27" y="884" width="3" height="15" fill="rgb(213,151,8)"/><text x="30.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="900" width="3" height="15" fill="rgb(247,227,43)"/><text x="30.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.29%)</title><rect x="27" y="916" width="3" height="15" fill="rgb(231,89,42)"/><text x="30.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="932" width="3" height="15" fill="rgb(216,103,54)"/><text x="30.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="948" width="3" height="15" fill="rgb(211,133,31)"/><text x="30.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="964" width="3" height="15" fill="rgb(208,44,40)"/><text x="30.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="27" y="980" width="3" height="15" fill="rgb(212,121,49)"/><text x="30.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="27" y="996" width="3" height="15" fill="rgb(251,119,6)"/><text x="30.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/markers.py) (1 samples, 0.29%)</title><rect x="27" y="1012" width="3" height="15" fill="rgb(237,201,34)"/><text x="30.00" y="1022.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.29%)</title><rect x="27" y="1028" width="3" height="15" fill="rgb(205,116,33)"/><text x="30.00" y="1038.50"></text></g><g><title>compile (re.py) (1 samples, 0.29%)</title><rect x="27" y="1044" width="3" height="15" fill="rgb(241,21,4)"/><text x="30.00" y="1054.50"></text></g><g><title>_compile (re.py) (1 samples, 0.29%)</title><rect x="27" y="1060" width="3" height="15" fill="rgb(247,70,47)"/><text x="30.00" y="1070.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.29%)</title><rect x="27" y="1076" width="3" height="15" fill="rgb(245,204,46)"/><text x="30.00" y="1086.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.29%)</title><rect x="27" y="1092" width="3" height="15" fill="rgb(244,174,23)"/><text x="30.00" y="1102.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.29%)</title><rect x="27" y="1108" width="3" height="15" fill="rgb(250,184,45)"/><text x="30.00" y="1118.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.29%)</title><rect x="27" y="1124" width="3" height="15" fill="rgb(207,54,26)"/><text x="30.00" y="1134.50"></text></g><g><title>_optimize_charset (sre_compile.py) (1 samples, 0.29%)</title><rect x="27" y="1140" width="3" height="15" fill="rgb(217,208,10)"/><text x="30.00" y="1150.50"></text></g><g><title>_mk_bitmap (sre_compile.py) (1 samples, 0.29%)</title><rect x="27" y="1156" width="3" height="15" fill="rgb(212,63,38)"/><text x="30.00" y="1166.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (7 samples, 2.03%)</title><rect x="10" y="292" width="23" height="15" fill="rgb(235,44,26)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.03%)</title><rect x="10" y="308" width="23" height="15" fill="rgb(227,136,40)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.03%)</title><rect x="10" y="324" width="23" height="15" fill="rgb(205,187,3)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.03%)</title><rect x="10" y="340" width="23" height="15" fill="rgb(223,46,39)"/><text x="13.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.03%)</title><rect x="10" y="356" width="23" height="15" fill="rgb(208,228,19)"/><text x="13.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.03%)</title><rect x="10" y="372" width="23" height="15" fill="rgb(237,198,37)"/><text x="13.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (7 samples, 2.03%)</title><rect x="10" y="388" width="23" height="15" fill="rgb(253,197,29)"/><text x="13.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.03%)</title><rect x="10" y="404" width="23" height="15" fill="rgb(238,43,40)"/><text x="13.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.03%)</title><rect x="10" y="420" width="23" height="15" fill="rgb(217,86,26)"/><text x="13.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.03%)</title><rect x="10" y="436" width="23" height="15" fill="rgb(207,135,8)"/><text x="13.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.03%)</title><rect x="10" y="452" width="23" height="15" fill="rgb(229,137,39)"/><text x="13.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.03%)</title><rect x="10" y="468" width="23" height="15" fill="rgb(217,113,38)"/><text x="13.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (7 samples, 2.03%)</title><rect x="10" y="484" width="23" height="15" fill="rgb(220,224,5)"/><text x="13.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.03%)</title><rect x="10" y="500" width="23" height="15" fill="rgb(207,81,2)"/><text x="13.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.03%)</title><rect x="10" y="516" width="23" height="15" fill="rgb(252,173,13)"/><text x="13.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.03%)</title><rect x="10" y="532" width="23" height="15" fill="rgb(237,223,21)"/><text x="13.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.03%)</title><rect x="10" y="548" width="23" height="15" fill="rgb(244,0,6)"/><text x="13.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.03%)</title><rect x="10" y="564" width="23" height="15" fill="rgb(245,86,10)"/><text x="13.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (7 samples, 2.03%)</title><rect x="10" y="580" width="23" height="15" fill="rgb(209,102,12)"/><text x="13.00" y="590.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="596" width="3" height="15" fill="rgb(254,114,20)"/><text x="33.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="612" width="3" height="15" fill="rgb(215,104,20)"/><text x="33.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="628" width="3" height="15" fill="rgb(232,62,51)"/><text x="33.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="644" width="3" height="15" fill="rgb(249,229,4)"/><text x="33.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="660" width="3" height="15" fill="rgb(231,142,15)"/><text x="33.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="676" width="3" height="15" fill="rgb(252,136,6)"/><text x="33.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="692" width="3" height="15" fill="rgb(216,209,4)"/><text x="33.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/reflection.py) (1 samples, 0.29%)</title><rect x="30" y="708" width="3" height="15" fill="rgb(224,30,23)"/><text x="33.00" y="718.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="724" width="3" height="15" fill="rgb(223,68,2)"/><text x="33.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="740" width="3" height="15" fill="rgb(209,101,15)"/><text x="33.00" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="756" width="3" height="15" fill="rgb(209,62,26)"/><text x="33.00" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="772" width="3" height="15" fill="rgb(241,147,54)"/><text x="33.00" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="788" width="3" height="15" fill="rgb(229,147,10)"/><text x="33.00" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="804" width="3" height="15" fill="rgb(209,199,50)"/><text x="33.00" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="820" width="3" height="15" fill="rgb(241,149,14)"/><text x="33.00" y="830.50"></text></g><g><title>&lt;module&gt; (protobuf/message_factory.py) (1 samples, 0.29%)</title><rect x="30" y="836" width="3" height="15" fill="rgb(216,41,47)"/><text x="33.00" y="846.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="852" width="3" height="15" fill="rgb(229,221,34)"/><text x="33.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="868" width="3" height="15" fill="rgb(225,21,47)"/><text x="33.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="884" width="3" height="15" fill="rgb(229,129,47)"/><text x="33.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="900" width="3" height="15" fill="rgb(223,128,45)"/><text x="33.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="916" width="3" height="15" fill="rgb(211,180,25)"/><text x="33.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="932" width="3" height="15" fill="rgb(235,76,4)"/><text x="33.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="948" width="3" height="15" fill="rgb(210,58,14)"/><text x="33.00" y="958.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="964" width="3" height="15" fill="rgb(211,81,15)"/><text x="33.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="916" width="4" height="15" fill="rgb(205,39,3)"/><text x="36.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="932" width="4" height="15" fill="rgb(230,38,5)"/><text x="36.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="948" width="4" height="15" fill="rgb(237,188,43)"/><text x="36.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="33" y="964" width="4" height="15" fill="rgb(205,10,35)"/><text x="36.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="980" width="4" height="15" fill="rgb(219,103,3)"/><text x="36.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.29%)</title><rect x="33" y="996" width="4" height="15" fill="rgb(226,108,34)"/><text x="36.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1012" width="4" height="15" fill="rgb(241,41,24)"/><text x="36.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1028" width="4" height="15" fill="rgb(240,48,19)"/><text x="36.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1044" width="4" height="15" fill="rgb(212,208,18)"/><text x="36.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1060" width="4" height="15" fill="rgb(249,97,27)"/><text x="36.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1076" width="4" height="15" fill="rgb(212,147,51)"/><text x="36.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="33" y="1092" width="4" height="15" fill="rgb(254,23,32)"/><text x="36.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1108" width="4" height="15" fill="rgb(244,99,37)"/><text x="36.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.29%)</title><rect x="33" y="1124" width="4" height="15" fill="rgb(234,166,2)"/><text x="36.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1140" width="4" height="15" fill="rgb(251,73,6)"/><text x="36.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1156" width="4" height="15" fill="rgb(221,22,46)"/><text x="36.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1172" width="4" height="15" fill="rgb(219,5,17)"/><text x="36.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="33" y="1188" width="4" height="15" fill="rgb(215,125,22)"/><text x="36.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1204" width="4" height="15" fill="rgb(206,185,46)"/><text x="36.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.29%)</title><rect x="33" y="1220" width="4" height="15" fill="rgb(235,20,13)"/><text x="36.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1236" width="4" height="15" fill="rgb(240,115,42)"/><text x="36.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1252" width="4" height="15" fill="rgb(243,66,37)"/><text x="36.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1268" width="4" height="15" fill="rgb(238,198,24)"/><text x="36.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="33" y="1284" width="4" height="15" fill="rgb(248,200,20)"/><text x="36.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1300" width="4" height="15" fill="rgb(206,216,45)"/><text x="36.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py) (1 samples, 0.29%)</title><rect x="33" y="1316" width="4" height="15" fill="rgb(249,170,7)"/><text x="36.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1332" width="4" height="15" fill="rgb(252,54,22)"/><text x="36.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1348" width="4" height="15" fill="rgb(238,143,45)"/><text x="36.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1364" width="4" height="15" fill="rgb(207,207,42)"/><text x="36.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="33" y="1380" width="4" height="15" fill="rgb(248,35,17)"/><text x="36.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1396" width="4" height="15" fill="rgb(224,117,13)"/><text x="36.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py) (1 samples, 0.29%)</title><rect x="33" y="1412" width="4" height="15" fill="rgb(244,60,50)"/><text x="36.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1428" width="4" height="15" fill="rgb(250,145,39)"/><text x="36.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1444" width="4" height="15" fill="rgb(206,52,0)"/><text x="36.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1460" width="4" height="15" fill="rgb(223,93,8)"/><text x="36.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="33" y="1476" width="4" height="15" fill="rgb(219,99,14)"/><text x="36.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1492" width="4" height="15" fill="rgb(230,74,30)"/><text x="36.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py) (1 samples, 0.29%)</title><rect x="33" y="1508" width="4" height="15" fill="rgb(205,197,51)"/><text x="36.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1524" width="4" height="15" fill="rgb(243,203,49)"/><text x="36.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1540" width="4" height="15" fill="rgb(235,219,15)"/><text x="36.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1556" width="4" height="15" fill="rgb(211,78,24)"/><text x="36.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="33" y="1572" width="4" height="15" fill="rgb(225,1,19)"/><text x="36.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1588" width="4" height="15" fill="rgb(251,124,41)"/><text x="36.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/dsolve/__init__.py) (1 samples, 0.29%)</title><rect x="33" y="1604" width="4" height="15" fill="rgb(234,162,28)"/><text x="36.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1620" width="4" height="15" fill="rgb(213,72,51)"/><text x="36.00" y="1630.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1636" width="4" height="15" fill="rgb(247,151,32)"/><text x="36.00" y="1646.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1652" width="4" height="15" fill="rgb(229,75,43)"/><text x="36.00" y="1662.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="33" y="1668" width="4" height="15" fill="rgb(208,182,39)"/><text x="36.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1684" width="4" height="15" fill="rgb(232,148,39)"/><text x="36.00" y="1694.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/dsolve/linsolve.py) (1 samples, 0.29%)</title><rect x="33" y="1700" width="4" height="15" fill="rgb(219,187,9)"/><text x="36.00" y="1710.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1716" width="4" height="15" fill="rgb(225,217,14)"/><text x="36.00" y="1726.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1732" width="4" height="15" fill="rgb(205,44,50)"/><text x="36.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1748" width="4" height="15" fill="rgb(222,195,27)"/><text x="36.00" y="1758.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1764" width="4" height="15" fill="rgb(254,185,30)"/><text x="36.00" y="1774.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1780" width="4" height="15" fill="rgb(240,105,19)"/><text x="36.00" y="1790.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1796" width="4" height="15" fill="rgb(217,3,46)"/><text x="36.00" y="1806.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="33" y="1812" width="4" height="15" fill="rgb(207,69,37)"/><text x="36.00" y="1822.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="33" y="1828" width="4" height="15" fill="rgb(207,49,20)"/><text x="36.00" y="1838.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="33" y="1844" width="4" height="15" fill="rgb(238,32,40)"/><text x="36.00" y="1854.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1860" width="4" height="15" fill="rgb(238,142,7)"/><text x="36.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.90%)</title><rect x="10" y="196" width="34" height="15" fill="rgb(228,166,53)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.90%)</title><rect x="10" y="212" width="34" height="15" fill="rgb(224,228,7)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.90%)</title><rect x="10" y="228" width="34" height="15" fill="rgb(229,19,10)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.90%)</title><rect x="10" y="244" width="34" height="15" fill="rgb(244,9,27)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.90%)</title><rect x="10" y="260" width="34" height="15" fill="rgb(214,171,18)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.90%)</title><rect x="10" y="276" width="34" height="15" fill="rgb(242,174,1)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.87%)</title><rect x="33" y="292" width="11" height="15" fill="rgb(205,139,11)"/><text x="36.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="308" width="11" height="15" fill="rgb(206,229,28)"/><text x="36.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="324" width="11" height="15" fill="rgb(229,22,48)"/><text x="36.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="340" width="11" height="15" fill="rgb(220,65,14)"/><text x="36.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="33" y="356" width="11" height="15" fill="rgb(232,224,32)"/><text x="36.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="372" width="11" height="15" fill="rgb(247,61,3)"/><text x="36.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.87%)</title><rect x="33" y="388" width="11" height="15" fill="rgb(213,127,4)"/><text x="36.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="404" width="11" height="15" fill="rgb(206,146,25)"/><text x="36.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="420" width="11" height="15" fill="rgb(219,17,6)"/><text x="36.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="436" width="11" height="15" fill="rgb(235,172,38)"/><text x="36.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="33" y="452" width="11" height="15" fill="rgb(236,68,28)"/><text x="36.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="468" width="11" height="15" fill="rgb(212,195,2)"/><text x="36.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.87%)</title><rect x="33" y="484" width="11" height="15" fill="rgb(248,191,7)"/><text x="36.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="500" width="11" height="15" fill="rgb(208,21,5)"/><text x="36.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="516" width="11" height="15" fill="rgb(242,181,3)"/><text x="36.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="532" width="11" height="15" fill="rgb(231,25,11)"/><text x="36.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="33" y="548" width="11" height="15" fill="rgb(223,30,42)"/><text x="36.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="564" width="11" height="15" fill="rgb(219,104,54)"/><text x="36.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (3 samples, 0.87%)</title><rect x="33" y="580" width="11" height="15" fill="rgb(225,135,1)"/><text x="36.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="596" width="11" height="15" fill="rgb(242,204,23)"/><text x="36.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="612" width="11" height="15" fill="rgb(252,163,31)"/><text x="36.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="628" width="11" height="15" fill="rgb(206,93,47)"/><text x="36.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="33" y="644" width="11" height="15" fill="rgb(218,45,5)"/><text x="36.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="660" width="11" height="15" fill="rgb(235,167,5)"/><text x="36.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (3 samples, 0.87%)</title><rect x="33" y="676" width="11" height="15" fill="rgb(250,105,46)"/><text x="36.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="692" width="11" height="15" fill="rgb(205,140,17)"/><text x="36.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="708" width="11" height="15" fill="rgb(237,53,15)"/><text x="36.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="724" width="11" height="15" fill="rgb(228,191,2)"/><text x="36.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="33" y="740" width="11" height="15" fill="rgb(246,154,28)"/><text x="36.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="756" width="11" height="15" fill="rgb(252,104,15)"/><text x="36.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (3 samples, 0.87%)</title><rect x="33" y="772" width="11" height="15" fill="rgb(237,114,35)"/><text x="36.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="788" width="11" height="15" fill="rgb(234,1,4)"/><text x="36.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="804" width="11" height="15" fill="rgb(214,83,4)"/><text x="36.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="820" width="11" height="15" fill="rgb(205,41,34)"/><text x="36.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="836" width="11" height="15" fill="rgb(222,104,24)"/><text x="36.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="852" width="11" height="15" fill="rgb(208,134,29)"/><text x="36.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="33" y="868" width="11" height="15" fill="rgb(220,110,11)"/><text x="36.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="33" y="884" width="11" height="15" fill="rgb(217,221,53)"/><text x="36.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (3 samples, 0.87%)</title><rect x="33" y="900" width="11" height="15" fill="rgb(207,53,45)"/><text x="36.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="37" y="916" width="7" height="15" fill="rgb(239,228,22)"/><text x="40.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="37" y="932" width="7" height="15" fill="rgb(246,154,32)"/><text x="40.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="37" y="948" width="7" height="15" fill="rgb(223,103,5)"/><text x="40.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="37" y="964" width="7" height="15" fill="rgb(244,64,4)"/><text x="40.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="37" y="980" width="7" height="15" fill="rgb(230,188,11)"/><text x="40.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="37" y="996" width="7" height="15" fill="rgb(236,94,14)"/><text x="40.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="37" y="1012" width="7" height="15" fill="rgb(229,220,4)"/><text x="40.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (2 samples, 0.58%)</title><rect x="37" y="1028" width="7" height="15" fill="rgb(213,92,43)"/><text x="40.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (2 samples, 0.58%)</title><rect x="37" y="1044" width="7" height="15" fill="rgb(252,50,45)"/><text x="40.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (2 samples, 0.58%)</title><rect x="37" y="1060" width="7" height="15" fill="rgb(251,192,46)"/><text x="40.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (2 samples, 0.58%)</title><rect x="37" y="1076" width="7" height="15" fill="rgb(246,44,53)"/><text x="40.00" y="1086.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.29%)</title><rect x="40" y="1092" width="4" height="15" fill="rgb(210,155,37)"/><text x="43.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="724" width="3" height="15" fill="rgb(236,48,41)"/><text x="47.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="740" width="3" height="15" fill="rgb(238,220,14)"/><text x="47.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="756" width="3" height="15" fill="rgb(234,168,4)"/><text x="47.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="772" width="3" height="15" fill="rgb(238,135,18)"/><text x="47.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="44" y="788" width="3" height="15" fill="rgb(226,189,0)"/><text x="47.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="804" width="3" height="15" fill="rgb(251,194,1)"/><text x="47.00" y="814.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/optim/__init__.py) (1 samples, 0.29%)</title><rect x="44" y="820" width="3" height="15" fill="rgb(254,169,49)"/><text x="47.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="836" width="3" height="15" fill="rgb(239,47,37)"/><text x="47.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="852" width="3" height="15" fill="rgb(227,167,6)"/><text x="47.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="868" width="3" height="15" fill="rgb(208,91,7)"/><text x="47.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="44" y="884" width="3" height="15" fill="rgb(205,116,7)"/><text x="47.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="900" width="3" height="15" fill="rgb(234,51,23)"/><text x="47.00" y="910.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/optim/onnx_helper.py) (1 samples, 0.29%)</title><rect x="44" y="916" width="3" height="15" fill="rgb(205,41,22)"/><text x="47.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="932" width="3" height="15" fill="rgb(244,176,17)"/><text x="47.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="948" width="3" height="15" fill="rgb(240,173,43)"/><text x="47.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="964" width="3" height="15" fill="rgb(217,224,10)"/><text x="47.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="44" y="980" width="3" height="15" fill="rgb(231,225,14)"/><text x="47.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="996" width="3" height="15" fill="rgb(211,62,37)"/><text x="47.00" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/optim/onnx_optimisation.py) (1 samples, 0.29%)</title><rect x="44" y="1012" width="3" height="15" fill="rgb(234,50,3)"/><text x="47.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="1028" width="3" height="15" fill="rgb(212,193,30)"/><text x="47.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="1044" width="3" height="15" fill="rgb(250,228,1)"/><text x="47.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="1060" width="3" height="15" fill="rgb(217,70,36)"/><text x="47.00" y="1070.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="1076" width="3" height="15" fill="rgb(248,86,16)"/><text x="47.00" y="1086.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="1092" width="3" height="15" fill="rgb(230,174,53)"/><text x="47.00" y="1102.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="44" y="1108" width="3" height="15" fill="rgb(211,18,3)"/><text x="47.00" y="1118.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="44" y="1124" width="3" height="15" fill="rgb(206,223,45)"/><text x="47.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1124" width="4" height="15" fill="rgb(253,22,10)"/><text x="50.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1140" width="4" height="15" fill="rgb(247,93,2)"/><text x="50.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1156" width="4" height="15" fill="rgb(221,18,38)"/><text x="50.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1172" width="4" height="15" fill="rgb(246,17,18)"/><text x="50.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1188" width="4" height="15" fill="rgb(227,204,24)"/><text x="50.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.29%)</title><rect x="47" y="1204" width="4" height="15" fill="rgb(251,8,32)"/><text x="50.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1220" width="4" height="15" fill="rgb(219,143,42)"/><text x="50.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1236" width="4" height="15" fill="rgb(251,64,37)"/><text x="50.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1252" width="4" height="15" fill="rgb(211,131,7)"/><text x="50.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1268" width="4" height="15" fill="rgb(247,197,26)"/><text x="50.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1284" width="4" height="15" fill="rgb(238,59,11)"/><text x="50.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.29%)</title><rect x="47" y="1300" width="4" height="15" fill="rgb(218,174,51)"/><text x="50.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.29%)</title><rect x="47" y="1316" width="4" height="15" fill="rgb(238,50,24)"/><text x="50.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.29%)</title><rect x="47" y="1332" width="4" height="15" fill="rgb(210,130,35)"/><text x="50.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.29%)</title><rect x="47" y="1348" width="4" height="15" fill="rgb(254,33,30)"/><text x="50.00" y="1358.50"></text></g><g><title>findsource (inspect.py) (1 samples, 0.29%)</title><rect x="47" y="1364" width="4" height="15" fill="rgb(227,21,20)"/><text x="50.00" y="1374.50"></text></g><g><title>compile (re.py) (1 samples, 0.29%)</title><rect x="47" y="1380" width="4" height="15" fill="rgb(205,23,39)"/><text x="50.00" y="1390.50"></text></g><g><title>_compile (re.py) (1 samples, 0.29%)</title><rect x="47" y="1396" width="4" height="15" fill="rgb(227,210,3)"/><text x="50.00" y="1406.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.29%)</title><rect x="47" y="1412" width="4" height="15" fill="rgb(213,110,7)"/><text x="50.00" y="1422.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.29%)</title><rect x="47" y="1428" width="4" height="15" fill="rgb(212,129,24)"/><text x="50.00" y="1438.50"></text></g><g><title>__init__ (sre_parse.py) (1 samples, 0.29%)</title><rect x="47" y="1444" width="4" height="15" fill="rgb(205,181,25)"/><text x="50.00" y="1454.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.29%)</title><rect x="47" y="1460" width="4" height="15" fill="rgb(227,198,49)"/><text x="50.00" y="1470.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.29%)</title><rect x="47" y="1476" width="4" height="15" fill="rgb(243,52,11)"/><text x="50.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1476" width="3" height="15" fill="rgb(219,214,46)"/><text x="54.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1492" width="3" height="15" fill="rgb(226,30,31)"/><text x="54.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1508" width="3" height="15" fill="rgb(234,100,19)"/><text x="54.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="51" y="1524" width="3" height="15" fill="rgb(215,219,29)"/><text x="54.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1540" width="3" height="15" fill="rgb(251,209,47)"/><text x="54.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.29%)</title><rect x="51" y="1556" width="3" height="15" fill="rgb(209,95,37)"/><text x="54.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.29%)</title><rect x="51" y="1572" width="3" height="15" fill="rgb(253,66,12)"/><text x="54.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1588" width="3" height="15" fill="rgb(207,187,46)"/><text x="54.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1604" width="3" height="15" fill="rgb(244,143,38)"/><text x="54.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1620" width="3" height="15" fill="rgb(231,26,23)"/><text x="54.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="51" y="1636" width="3" height="15" fill="rgb(205,12,7)"/><text x="54.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1652" width="3" height="15" fill="rgb(242,19,2)"/><text x="54.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.29%)</title><rect x="51" y="1668" width="3" height="15" fill="rgb(243,66,35)"/><text x="54.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1684" width="3" height="15" fill="rgb(227,82,53)"/><text x="54.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1700" width="3" height="15" fill="rgb(228,12,45)"/><text x="54.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="51" y="1716" width="3" height="15" fill="rgb(249,121,8)"/><text x="54.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="51" y="1732" width="3" height="15" fill="rgb(238,92,35)"/><text x="54.00" y="1742.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="51" y="1748" width="3" height="15" fill="rgb(251,206,10)"/><text x="54.00" y="1758.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="51" y="1764" width="3" height="15" fill="rgb(220,152,13)"/><text x="54.00" y="1774.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="44" y="484" width="20" height="15" fill="rgb(236,106,52)"/><text x="47.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="44" y="500" width="20" height="15" fill="rgb(223,38,3)"/><text x="47.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="44" y="516" width="20" height="15" fill="rgb(209,125,4)"/><text x="47.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="44" y="532" width="20" height="15" fill="rgb(237,107,16)"/><text x="47.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.74%)</title><rect x="44" y="548" width="20" height="15" fill="rgb(254,223,44)"/><text x="47.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="44" y="564" width="20" height="15" fill="rgb(228,72,31)"/><text x="47.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (6 samples, 1.74%)</title><rect x="44" y="580" width="20" height="15" fill="rgb(223,22,36)"/><text x="47.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="44" y="596" width="20" height="15" fill="rgb(212,146,5)"/><text x="47.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="44" y="612" width="20" height="15" fill="rgb(205,90,31)"/><text x="47.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="44" y="628" width="20" height="15" fill="rgb(224,102,47)"/><text x="47.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.74%)</title><rect x="44" y="644" width="20" height="15" fill="rgb(225,71,12)"/><text x="47.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="44" y="660" width="20" height="15" fill="rgb(207,11,24)"/><text x="47.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (6 samples, 1.74%)</title><rect x="44" y="676" width="20" height="15" fill="rgb(221,18,49)"/><text x="47.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="44" y="692" width="20" height="15" fill="rgb(247,65,44)"/><text x="47.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.74%)</title><rect x="44" y="708" width="20" height="15" fill="rgb(234,204,50)"/><text x="47.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="47" y="724" width="17" height="15" fill="rgb(227,20,30)"/><text x="50.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.45%)</title><rect x="47" y="740" width="17" height="15" fill="rgb(221,175,2)"/><text x="50.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="47" y="756" width="17" height="15" fill="rgb(249,1,41)"/><text x="50.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (5 samples, 1.45%)</title><rect x="47" y="772" width="17" height="15" fill="rgb(222,155,14)"/><text x="50.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="47" y="788" width="17" height="15" fill="rgb(211,7,46)"/><text x="50.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="47" y="804" width="17" height="15" fill="rgb(233,115,6)"/><text x="50.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="47" y="820" width="17" height="15" fill="rgb(227,176,33)"/><text x="50.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.45%)</title><rect x="47" y="836" width="17" height="15" fill="rgb(217,179,51)"/><text x="50.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="47" y="852" width="17" height="15" fill="rgb(215,212,49)"/><text x="50.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (5 samples, 1.45%)</title><rect x="47" y="868" width="17" height="15" fill="rgb(236,56,52)"/><text x="50.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="47" y="884" width="17" height="15" fill="rgb(254,50,3)"/><text x="50.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="47" y="900" width="17" height="15" fill="rgb(213,171,47)"/><text x="50.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="47" y="916" width="17" height="15" fill="rgb(239,155,1)"/><text x="50.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="47" y="932" width="17" height="15" fill="rgb(237,199,48)"/><text x="50.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="47" y="948" width="17" height="15" fill="rgb(251,123,36)"/><text x="50.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="47" y="964" width="17" height="15" fill="rgb(220,131,43)"/><text x="50.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.45%)</title><rect x="47" y="980" width="17" height="15" fill="rgb(242,140,16)"/><text x="50.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="47" y="996" width="17" height="15" fill="rgb(238,191,18)"/><text x="50.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (5 samples, 1.45%)</title><rect x="47" y="1012" width="17" height="15" fill="rgb(216,27,10)"/><text x="50.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="47" y="1028" width="17" height="15" fill="rgb(248,29,15)"/><text x="50.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="47" y="1044" width="17" height="15" fill="rgb(240,185,45)"/><text x="50.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="47" y="1060" width="17" height="15" fill="rgb(217,65,45)"/><text x="50.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.45%)</title><rect x="47" y="1076" width="17" height="15" fill="rgb(223,154,13)"/><text x="50.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.45%)</title><rect x="47" y="1092" width="17" height="15" fill="rgb(242,171,41)"/><text x="50.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (5 samples, 1.45%)</title><rect x="47" y="1108" width="17" height="15" fill="rgb(214,96,25)"/><text x="50.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="51" y="1124" width="13" height="15" fill="rgb(222,60,20)"/><text x="54.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="51" y="1140" width="13" height="15" fill="rgb(230,41,24)"/><text x="54.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="51" y="1156" width="13" height="15" fill="rgb(208,56,11)"/><text x="54.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="51" y="1172" width="13" height="15" fill="rgb(247,210,3)"/><text x="54.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="51" y="1188" width="13" height="15" fill="rgb(218,133,15)"/><text x="54.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.16%)</title><rect x="51" y="1204" width="13" height="15" fill="rgb(240,125,17)"/><text x="54.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="51" y="1220" width="13" height="15" fill="rgb(227,111,19)"/><text x="54.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (4 samples, 1.16%)</title><rect x="51" y="1236" width="13" height="15" fill="rgb(253,34,5)"/><text x="54.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="51" y="1252" width="13" height="15" fill="rgb(238,22,11)"/><text x="54.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="51" y="1268" width="13" height="15" fill="rgb(253,228,8)"/><text x="54.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="51" y="1284" width="13" height="15" fill="rgb(229,156,19)"/><text x="54.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="51" y="1300" width="13" height="15" fill="rgb(214,207,38)"/><text x="54.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="51" y="1316" width="13" height="15" fill="rgb(208,137,33)"/><text x="54.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.16%)</title><rect x="51" y="1332" width="13" height="15" fill="rgb(254,199,16)"/><text x="54.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="51" y="1348" width="13" height="15" fill="rgb(231,78,52)"/><text x="54.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (4 samples, 1.16%)</title><rect x="51" y="1364" width="13" height="15" fill="rgb(239,145,49)"/><text x="54.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="51" y="1380" width="13" height="15" fill="rgb(254,196,30)"/><text x="54.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="51" y="1396" width="13" height="15" fill="rgb(229,159,15)"/><text x="54.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="51" y="1412" width="13" height="15" fill="rgb(243,188,11)"/><text x="54.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.16%)</title><rect x="51" y="1428" width="13" height="15" fill="rgb(208,222,34)"/><text x="54.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="51" y="1444" width="13" height="15" fill="rgb(209,81,52)"/><text x="54.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (4 samples, 1.16%)</title><rect x="51" y="1460" width="13" height="15" fill="rgb(208,200,48)"/><text x="54.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.87%)</title><rect x="54" y="1476" width="10" height="15" fill="rgb(236,207,20)"/><text x="57.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.87%)</title><rect x="54" y="1492" width="10" height="15" fill="rgb(238,224,26)"/><text x="57.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (3 samples, 0.87%)</title><rect x="54" y="1508" width="10" height="15" fill="rgb(245,36,20)"/><text x="57.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (3 samples, 0.87%)</title><rect x="54" y="1524" width="10" height="15" fill="rgb(217,196,23)"/><text x="57.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (3 samples, 0.87%)</title><rect x="54" y="1540" width="10" height="15" fill="rgb(230,95,13)"/><text x="57.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.58%)</title><rect x="57" y="1556" width="7" height="15" fill="rgb(216,124,20)"/><text x="60.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.58%)</title><rect x="57" y="1572" width="7" height="15" fill="rgb(246,104,5)"/><text x="60.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.29%)</title><rect x="61" y="1588" width="3" height="15" fill="rgb(228,146,27)"/><text x="64.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.29%)</title><rect x="61" y="1604" width="3" height="15" fill="rgb(208,164,3)"/><text x="64.00" y="1614.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.29%)</title><rect x="61" y="1620" width="3" height="15" fill="rgb(206,115,22)"/><text x="64.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.29%)</title><rect x="61" y="1636" width="3" height="15" fill="rgb(214,133,0)"/><text x="64.00" y="1646.50"></text></g><g><title>0x7f5b982dcb87 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="61" y="1652" width="3" height="15" fill="rgb(242,109,34)"/><text x="64.00" y="1662.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.29%)</title><rect x="64" y="1108" width="4" height="15" fill="rgb(212,168,32)"/><text x="67.00" y="1118.50"></text></g><g><title>NDFrame (pandas/core/generic.py) (1 samples, 0.29%)</title><rect x="64" y="1124" width="4" height="15" fill="rgb(231,21,53)"/><text x="67.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.29%)</title><rect x="64" y="1140" width="4" height="15" fill="rgb(221,64,31)"/><text x="67.00" y="1150.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.29%)</title><rect x="64" y="1156" width="4" height="15" fill="rgb(207,227,12)"/><text x="67.00" y="1166.50"></text></g><g><title>sub (re.py) (1 samples, 0.29%)</title><rect x="64" y="1172" width="4" height="15" fill="rgb(244,162,41)"/><text x="67.00" y="1182.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.29%)</title><rect x="64" y="1188" width="4" height="15" fill="rgb(211,45,29)"/><text x="67.00" y="1198.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.29%)</title><rect x="64" y="1204" width="4" height="15" fill="rgb(214,169,27)"/><text x="67.00" y="1214.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.29%)</title><rect x="64" y="1220" width="4" height="15" fill="rgb(231,167,34)"/><text x="67.00" y="1230.50"></text></g><g><title>RcParams (matplotlib/__init__.py) (1 samples, 0.29%)</title><rect x="68" y="1652" width="3" height="15" fill="rgb(213,185,48)"/><text x="71.00" y="1662.50"></text></g><g><title>deprecate (matplotlib/cbook/deprecation.py) (1 samples, 0.29%)</title><rect x="68" y="1668" width="3" height="15" fill="rgb(234,184,33)"/><text x="71.00" y="1678.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (9 samples, 2.61%)</title><rect x="44" y="340" width="30" height="15" fill="rgb(242,147,45)"/><text x="47.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.61%)</title><rect x="44" y="356" width="30" height="15" fill="rgb(248,148,54)"/><text x="47.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.61%)</title><rect x="44" y="372" width="30" height="15" fill="rgb(218,42,35)"/><text x="47.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.61%)</title><rect x="44" y="388" width="30" height="15" fill="rgb(253,5,6)"/><text x="47.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.61%)</title><rect x="44" y="404" width="30" height="15" fill="rgb(223,32,10)"/><text x="47.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.61%)</title><rect x="44" y="420" width="30" height="15" fill="rgb(241,137,10)"/><text x="47.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (9 samples, 2.61%)</title><rect x="44" y="436" width="30" height="15" fill="rgb(226,173,24)"/><text x="47.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.61%)</title><rect x="44" y="452" width="30" height="15" fill="rgb(214,220,49)"/><text x="47.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.61%)</title><rect x="44" y="468" width="30" height="15" fill="rgb(225,46,47)"/><text x="47.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="484" width="10" height="15" fill="rgb(233,55,10)"/><text x="67.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="64" y="500" width="10" height="15" fill="rgb(225,106,7)"/><text x="67.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="516" width="10" height="15" fill="rgb(232,204,11)"/><text x="67.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.87%)</title><rect x="64" y="532" width="10" height="15" fill="rgb(248,97,13)"/><text x="67.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="548" width="10" height="15" fill="rgb(213,2,54)"/><text x="67.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="564" width="10" height="15" fill="rgb(223,16,12)"/><text x="67.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="580" width="10" height="15" fill="rgb(243,151,12)"/><text x="67.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="64" y="596" width="10" height="15" fill="rgb(228,50,6)"/><text x="67.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="612" width="10" height="15" fill="rgb(242,11,25)"/><text x="67.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.87%)</title><rect x="64" y="628" width="10" height="15" fill="rgb(243,112,10)"/><text x="67.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="644" width="10" height="15" fill="rgb(214,51,27)"/><text x="67.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="660" width="10" height="15" fill="rgb(230,12,3)"/><text x="67.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="676" width="10" height="15" fill="rgb(236,19,48)"/><text x="67.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="64" y="692" width="10" height="15" fill="rgb(251,181,18)"/><text x="67.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="708" width="10" height="15" fill="rgb(246,202,0)"/><text x="67.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.87%)</title><rect x="64" y="724" width="10" height="15" fill="rgb(225,191,13)"/><text x="67.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="740" width="10" height="15" fill="rgb(239,194,49)"/><text x="67.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="756" width="10" height="15" fill="rgb(209,102,23)"/><text x="67.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="772" width="10" height="15" fill="rgb(226,56,6)"/><text x="67.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="64" y="788" width="10" height="15" fill="rgb(231,50,18)"/><text x="67.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="804" width="10" height="15" fill="rgb(226,122,32)"/><text x="67.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 0.87%)</title><rect x="64" y="820" width="10" height="15" fill="rgb(254,186,28)"/><text x="67.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="836" width="10" height="15" fill="rgb(251,17,51)"/><text x="67.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="852" width="10" height="15" fill="rgb(229,56,10)"/><text x="67.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="868" width="10" height="15" fill="rgb(251,149,26)"/><text x="67.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="64" y="884" width="10" height="15" fill="rgb(244,184,37)"/><text x="67.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="900" width="10" height="15" fill="rgb(252,200,7)"/><text x="67.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 0.87%)</title><rect x="64" y="916" width="10" height="15" fill="rgb(223,186,53)"/><text x="67.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="932" width="10" height="15" fill="rgb(227,159,46)"/><text x="67.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="948" width="10" height="15" fill="rgb(250,67,19)"/><text x="67.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="964" width="10" height="15" fill="rgb(228,96,44)"/><text x="67.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="64" y="980" width="10" height="15" fill="rgb(215,227,1)"/><text x="67.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="996" width="10" height="15" fill="rgb(229,24,52)"/><text x="67.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.87%)</title><rect x="64" y="1012" width="10" height="15" fill="rgb(248,132,2)"/><text x="67.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="1028" width="10" height="15" fill="rgb(228,12,29)"/><text x="67.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="1044" width="10" height="15" fill="rgb(217,192,25)"/><text x="67.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="1060" width="10" height="15" fill="rgb(213,152,21)"/><text x="67.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="64" y="1076" width="10" height="15" fill="rgb(224,18,7)"/><text x="67.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="64" y="1092" width="10" height="15" fill="rgb(221,227,28)"/><text x="67.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.58%)</title><rect x="68" y="1108" width="6" height="15" fill="rgb(213,81,49)"/><text x="71.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1124" width="6" height="15" fill="rgb(219,215,22)"/><text x="71.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1140" width="6" height="15" fill="rgb(235,156,41)"/><text x="71.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1156" width="6" height="15" fill="rgb(222,92,39)"/><text x="71.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="68" y="1172" width="6" height="15" fill="rgb(223,8,11)"/><text x="71.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1188" width="6" height="15" fill="rgb(224,40,19)"/><text x="71.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.58%)</title><rect x="68" y="1204" width="6" height="15" fill="rgb(239,147,47)"/><text x="71.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1220" width="6" height="15" fill="rgb(209,165,4)"/><text x="71.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1236" width="6" height="15" fill="rgb(247,75,54)"/><text x="71.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1252" width="6" height="15" fill="rgb(227,38,42)"/><text x="71.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="68" y="1268" width="6" height="15" fill="rgb(225,150,43)"/><text x="71.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1284" width="6" height="15" fill="rgb(218,117,0)"/><text x="71.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.58%)</title><rect x="68" y="1300" width="6" height="15" fill="rgb(215,153,28)"/><text x="71.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1316" width="6" height="15" fill="rgb(221,2,19)"/><text x="71.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1332" width="6" height="15" fill="rgb(244,83,12)"/><text x="71.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1348" width="6" height="15" fill="rgb(233,84,35)"/><text x="71.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="68" y="1364" width="6" height="15" fill="rgb(236,81,3)"/><text x="71.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1380" width="6" height="15" fill="rgb(230,45,20)"/><text x="71.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.58%)</title><rect x="68" y="1396" width="6" height="15" fill="rgb(206,177,0)"/><text x="71.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1412" width="6" height="15" fill="rgb(221,115,29)"/><text x="71.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1428" width="6" height="15" fill="rgb(238,101,47)"/><text x="71.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1444" width="6" height="15" fill="rgb(230,38,15)"/><text x="71.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="68" y="1460" width="6" height="15" fill="rgb(208,130,5)"/><text x="71.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1476" width="6" height="15" fill="rgb(236,209,19)"/><text x="71.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.58%)</title><rect x="68" y="1492" width="6" height="15" fill="rgb(229,40,8)"/><text x="71.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1508" width="6" height="15" fill="rgb(246,226,24)"/><text x="71.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1524" width="6" height="15" fill="rgb(246,144,12)"/><text x="71.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1540" width="6" height="15" fill="rgb(235,127,29)"/><text x="71.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1556" width="6" height="15" fill="rgb(246,171,40)"/><text x="71.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1572" width="6" height="15" fill="rgb(229,134,49)"/><text x="71.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1588" width="6" height="15" fill="rgb(251,43,37)"/><text x="71.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="68" y="1604" width="6" height="15" fill="rgb(233,10,19)"/><text x="71.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="1620" width="6" height="15" fill="rgb(243,40,48)"/><text x="71.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (2 samples, 0.58%)</title><rect x="68" y="1636" width="6" height="15" fill="rgb(253,139,24)"/><text x="71.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="71" y="1652" width="3" height="15" fill="rgb(252,226,53)"/><text x="74.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="71" y="1668" width="3" height="15" fill="rgb(225,133,31)"/><text x="74.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="71" y="1684" width="3" height="15" fill="rgb(242,50,7)"/><text x="74.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="71" y="1700" width="3" height="15" fill="rgb(218,195,37)"/><text x="74.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="71" y="1716" width="3" height="15" fill="rgb(212,22,46)"/><text x="74.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="71" y="1732" width="3" height="15" fill="rgb(222,118,6)"/><text x="74.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="71" y="1748" width="3" height="15" fill="rgb(226,126,15)"/><text x="74.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.29%)</title><rect x="71" y="1764" width="3" height="15" fill="rgb(209,74,27)"/><text x="74.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="71" y="1780" width="3" height="15" fill="rgb(205,11,30)"/><text x="74.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="71" y="1796" width="3" height="15" fill="rgb(217,35,14)"/><text x="74.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="71" y="1812" width="3" height="15" fill="rgb(234,184,5)"/><text x="74.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="71" y="1828" width="3" height="15" fill="rgb(225,149,27)"/><text x="74.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="71" y="1844" width="3" height="15" fill="rgb(220,210,12)"/><text x="74.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.29%)</title><rect x="71" y="1860" width="3" height="15" fill="rgb(228,69,5)"/><text x="74.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="71" y="1876" width="3" height="15" fill="rgb(223,166,53)"/><text x="74.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="71" y="1892" width="3" height="15" fill="rgb(238,169,35)"/><text x="74.00" y="1902.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="71" y="1908" width="3" height="15" fill="rgb(217,185,16)"/><text x="74.00" y="1918.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="71" y="1924" width="3" height="15" fill="rgb(242,22,44)"/><text x="74.00" y="1934.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="71" y="1940" width="3" height="15" fill="rgb(232,95,42)"/><text x="74.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.29%)</title><rect x="74" y="580" width="4" height="15" fill="rgb(239,19,11)"/><text x="77.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="74" y="596" width="4" height="15" fill="rgb(219,138,30)"/><text x="77.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="74" y="612" width="4" height="15" fill="rgb(239,176,14)"/><text x="77.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="74" y="628" width="4" height="15" fill="rgb(208,70,45)"/><text x="77.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="74" y="644" width="4" height="15" fill="rgb(223,84,18)"/><text x="77.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="74" y="660" width="4" height="15" fill="rgb(239,9,3)"/><text x="77.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.29%)</title><rect x="74" y="676" width="4" height="15" fill="rgb(234,100,14)"/><text x="77.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="74" y="692" width="4" height="15" fill="rgb(246,206,40)"/><text x="77.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="74" y="708" width="4" height="15" fill="rgb(244,205,17)"/><text x="77.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="74" y="724" width="4" height="15" fill="rgb(240,37,13)"/><text x="77.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="74" y="740" width="4" height="15" fill="rgb(247,153,24)"/><text x="77.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="74" y="756" width="4" height="15" fill="rgb(233,51,47)"/><text x="77.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.29%)</title><rect x="74" y="772" width="4" height="15" fill="rgb(247,28,0)"/><text x="77.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.29%)</title><rect x="74" y="788" width="4" height="15" fill="rgb(206,91,52)"/><text x="77.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.29%)</title><rect x="74" y="804" width="4" height="15" fill="rgb(241,62,7)"/><text x="77.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.29%)</title><rect x="74" y="820" width="4" height="15" fill="rgb(244,138,22)"/><text x="77.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="788" width="3" height="15" fill="rgb(236,128,44)"/><text x="81.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="804" width="3" height="15" fill="rgb(223,145,10)"/><text x="81.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="820" width="3" height="15" fill="rgb(232,6,52)"/><text x="81.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="78" y="836" width="3" height="15" fill="rgb(223,89,16)"/><text x="81.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="852" width="3" height="15" fill="rgb(211,169,7)"/><text x="81.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.29%)</title><rect x="78" y="868" width="3" height="15" fill="rgb(210,22,4)"/><text x="81.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="884" width="3" height="15" fill="rgb(206,173,21)"/><text x="81.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="900" width="3" height="15" fill="rgb(237,91,42)"/><text x="81.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="916" width="3" height="15" fill="rgb(207,217,1)"/><text x="81.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="78" y="932" width="3" height="15" fill="rgb(206,219,44)"/><text x="81.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="948" width="3" height="15" fill="rgb(213,202,20)"/><text x="81.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.29%)</title><rect x="78" y="964" width="3" height="15" fill="rgb(214,139,8)"/><text x="81.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="980" width="3" height="15" fill="rgb(251,201,16)"/><text x="81.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="996" width="3" height="15" fill="rgb(229,225,24)"/><text x="81.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="1012" width="3" height="15" fill="rgb(223,77,31)"/><text x="81.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="78" y="1028" width="3" height="15" fill="rgb(237,115,51)"/><text x="81.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="1044" width="3" height="15" fill="rgb(223,128,13)"/><text x="81.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (1 samples, 0.29%)</title><rect x="78" y="1060" width="3" height="15" fill="rgb(243,146,25)"/><text x="81.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="1076" width="3" height="15" fill="rgb(239,219,5)"/><text x="81.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="1092" width="3" height="15" fill="rgb(230,152,13)"/><text x="81.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="1108" width="3" height="15" fill="rgb(229,33,44)"/><text x="81.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="1124" width="3" height="15" fill="rgb(208,197,20)"/><text x="81.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="1140" width="3" height="15" fill="rgb(239,210,53)"/><text x="81.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="1156" width="3" height="15" fill="rgb(206,134,5)"/><text x="81.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="78" y="1172" width="3" height="15" fill="rgb(210,55,23)"/><text x="81.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="1188" width="3" height="15" fill="rgb(237,108,50)"/><text x="81.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (1 samples, 0.29%)</title><rect x="78" y="1204" width="3" height="15" fill="rgb(246,142,25)"/><text x="81.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="1220" width="3" height="15" fill="rgb(215,168,39)"/><text x="81.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="1236" width="3" height="15" fill="rgb(223,48,28)"/><text x="81.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="1252" width="3" height="15" fill="rgb(212,104,44)"/><text x="81.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="78" y="1268" width="3" height="15" fill="rgb(211,120,2)"/><text x="81.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="1284" width="3" height="15" fill="rgb(235,147,8)"/><text x="81.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py) (1 samples, 0.29%)</title><rect x="78" y="1300" width="3" height="15" fill="rgb(218,165,6)"/><text x="81.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="1316" width="3" height="15" fill="rgb(243,79,36)"/><text x="81.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="1332" width="3" height="15" fill="rgb(207,173,5)"/><text x="81.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="1348" width="3" height="15" fill="rgb(254,188,46)"/><text x="81.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="78" y="1364" width="3" height="15" fill="rgb(208,103,11)"/><text x="81.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="78" y="1380" width="3" height="15" fill="rgb(211,17,53)"/><text x="81.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py) (1 samples, 0.29%)</title><rect x="78" y="1396" width="3" height="15" fill="rgb(214,102,13)"/><text x="81.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.29%)</title><rect x="78" y="1412" width="3" height="15" fill="rgb(250,102,0)"/><text x="81.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.29%)</title><rect x="78" y="1428" width="3" height="15" fill="rgb(214,86,3)"/><text x="81.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.29%)</title><rect x="78" y="1444" width="3" height="15" fill="rgb(206,45,35)"/><text x="81.00" y="1454.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.29%)</title><rect x="78" y="1460" width="3" height="15" fill="rgb(235,107,14)"/><text x="81.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.29%)</title><rect x="78" y="1476" width="3" height="15" fill="rgb(247,152,21)"/><text x="81.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.29%)</title><rect x="78" y="1492" width="3" height="15" fill="rgb(252,103,12)"/><text x="81.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.29%)</title><rect x="78" y="1508" width="3" height="15" fill="rgb(253,121,21)"/><text x="81.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.29%)</title><rect x="78" y="1524" width="3" height="15" fill="rgb(212,21,26)"/><text x="81.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.29%)</title><rect x="78" y="1540" width="3" height="15" fill="rgb(208,124,16)"/><text x="81.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.29%)</title><rect x="78" y="1556" width="3" height="15" fill="rgb(211,183,25)"/><text x="81.00" y="1566.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.29%)</title><rect x="78" y="1572" width="3" height="15" fill="rgb(240,13,41)"/><text x="81.00" y="1582.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.29%)</title><rect x="78" y="1588" width="3" height="15" fill="rgb(251,181,48)"/><text x="81.00" y="1598.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.29%)</title><rect x="78" y="1604" width="3" height="15" fill="rgb(228,106,26)"/><text x="81.00" y="1614.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.29%)</title><rect x="78" y="1620" width="3" height="15" fill="rgb(238,91,11)"/><text x="81.00" y="1630.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (13 samples, 3.77%)</title><rect x="44" y="244" width="44" height="15" fill="rgb(253,8,33)"/><text x="47.00" y="254.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.77%)</title><rect x="44" y="260" width="44" height="15" fill="rgb(223,133,9)"/><text x="47.00" y="270.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.77%)</title><rect x="44" y="276" width="44" height="15" fill="rgb(230,141,46)"/><text x="47.00" y="286.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.77%)</title><rect x="44" y="292" width="44" height="15" fill="rgb(217,212,11)"/><text x="47.00" y="302.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 3.77%)</title><rect x="44" y="308" width="44" height="15" fill="rgb(246,142,7)"/><text x="47.00" y="318.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.77%)</title><rect x="44" y="324" width="44" height="15" fill="rgb(252,23,20)"/><text x="47.00" y="334.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (4 samples, 1.16%)</title><rect x="74" y="340" width="14" height="15" fill="rgb(231,53,35)"/><text x="77.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="74" y="356" width="14" height="15" fill="rgb(212,224,27)"/><text x="77.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="74" y="372" width="14" height="15" fill="rgb(251,94,26)"/><text x="77.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="74" y="388" width="14" height="15" fill="rgb(247,53,36)"/><text x="77.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="74" y="404" width="14" height="15" fill="rgb(215,211,31)"/><text x="77.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="74" y="420" width="14" height="15" fill="rgb(231,16,21)"/><text x="77.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="74" y="436" width="14" height="15" fill="rgb(249,33,35)"/><text x="77.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.16%)</title><rect x="74" y="452" width="14" height="15" fill="rgb(244,119,26)"/><text x="77.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="74" y="468" width="14" height="15" fill="rgb(250,211,49)"/><text x="77.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (4 samples, 1.16%)</title><rect x="74" y="484" width="14" height="15" fill="rgb(216,93,0)"/><text x="77.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="74" y="500" width="14" height="15" fill="rgb(235,158,13)"/><text x="77.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="74" y="516" width="14" height="15" fill="rgb(214,172,2)"/><text x="77.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="74" y="532" width="14" height="15" fill="rgb(212,28,23)"/><text x="77.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.16%)</title><rect x="74" y="548" width="14" height="15" fill="rgb(239,213,40)"/><text x="77.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.16%)</title><rect x="74" y="564" width="14" height="15" fill="rgb(218,198,33)"/><text x="77.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (3 samples, 0.87%)</title><rect x="78" y="580" width="10" height="15" fill="rgb(219,215,52)"/><text x="81.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="78" y="596" width="10" height="15" fill="rgb(244,87,27)"/><text x="81.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="78" y="612" width="10" height="15" fill="rgb(242,223,12)"/><text x="81.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="78" y="628" width="10" height="15" fill="rgb(242,183,45)"/><text x="81.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="78" y="644" width="10" height="15" fill="rgb(209,89,45)"/><text x="81.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="78" y="660" width="10" height="15" fill="rgb(215,88,52)"/><text x="81.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (3 samples, 0.87%)</title><rect x="78" y="676" width="10" height="15" fill="rgb(230,210,21)"/><text x="81.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="78" y="692" width="10" height="15" fill="rgb(208,21,0)"/><text x="81.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="78" y="708" width="10" height="15" fill="rgb(236,139,40)"/><text x="81.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="78" y="724" width="10" height="15" fill="rgb(254,91,51)"/><text x="81.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.87%)</title><rect x="78" y="740" width="10" height="15" fill="rgb(249,217,5)"/><text x="81.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.87%)</title><rect x="78" y="756" width="10" height="15" fill="rgb(238,187,0)"/><text x="81.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (3 samples, 0.87%)</title><rect x="78" y="772" width="10" height="15" fill="rgb(215,227,35)"/><text x="81.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="81" y="788" width="7" height="15" fill="rgb(215,65,21)"/><text x="84.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="81" y="804" width="7" height="15" fill="rgb(232,204,43)"/><text x="84.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="81" y="820" width="7" height="15" fill="rgb(207,51,22)"/><text x="84.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="81" y="836" width="7" height="15" fill="rgb(217,135,49)"/><text x="84.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="81" y="852" width="7" height="15" fill="rgb(216,20,17)"/><text x="84.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="81" y="868" width="7" height="15" fill="rgb(250,93,54)"/><text x="84.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="81" y="884" width="7" height="15" fill="rgb(246,168,22)"/><text x="84.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (2 samples, 0.58%)</title><rect x="81" y="900" width="7" height="15" fill="rgb(252,95,27)"/><text x="84.00" y="910.50"></text></g><g><title>WrappedSocket (urllib3/contrib/pyopenssl.py) (1 samples, 0.29%)</title><rect x="85" y="916" width="3" height="15" fill="rgb(206,34,28)"/><text x="88.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (24 samples, 6.96%)</title><rect x="10" y="68" width="82" height="15" fill="rgb(243,69,27)"/><text x="13.00" y="78.50">_find_and..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (24 samples, 6.96%)</title><rect x="10" y="84" width="82" height="15" fill="rgb(211,65,47)"/><text x="13.00" y="94.50">_find_and..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (24 samples, 6.96%)</title><rect x="10" y="100" width="82" height="15" fill="rgb(224,153,26)"/><text x="13.00" y="110.50">_load_unl..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (24 samples, 6.96%)</title><rect x="10" y="116" width="82" height="15" fill="rgb(233,57,27)"/><text x="13.00" y="126.50">exec_modu..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (24 samples, 6.96%)</title><rect x="10" y="132" width="82" height="15" fill="rgb(208,199,36)"/><text x="13.00" y="142.50">_call_wit..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py) (24 samples, 6.96%)</title><rect x="10" y="148" width="82" height="15" fill="rgb(235,4,21)"/><text x="13.00" y="158.50">&lt;module&gt; ..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (24 samples, 6.96%)</title><rect x="10" y="164" width="82" height="15" fill="rgb(219,152,8)"/><text x="13.00" y="174.50">_find_and..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (24 samples, 6.96%)</title><rect x="10" y="180" width="82" height="15" fill="rgb(210,96,53)"/><text x="13.00" y="190.50">_find_and..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.06%)</title><rect x="44" y="196" width="48" height="15" fill="rgb(236,32,3)"/><text x="47.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 4.06%)</title><rect x="44" y="212" width="48" height="15" fill="rgb(249,178,45)"/><text x="47.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.06%)</title><rect x="44" y="228" width="48" height="15" fill="rgb(221,41,52)"/><text x="47.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (1 samples, 0.29%)</title><rect x="88" y="244" width="4" height="15" fill="rgb(250,60,23)"/><text x="91.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="88" y="260" width="4" height="15" fill="rgb(222,87,40)"/><text x="91.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="88" y="276" width="4" height="15" fill="rgb(236,119,36)"/><text x="91.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="88" y="292" width="4" height="15" fill="rgb(254,34,48)"/><text x="91.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="88" y="308" width="4" height="15" fill="rgb(224,1,45)"/><text x="91.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="88" y="324" width="4" height="15" fill="rgb(206,10,5)"/><text x="91.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py) (1 samples, 0.29%)</title><rect x="88" y="340" width="4" height="15" fill="rgb(243,193,52)"/><text x="91.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="88" y="356" width="4" height="15" fill="rgb(250,219,34)"/><text x="91.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="88" y="372" width="4" height="15" fill="rgb(222,212,36)"/><text x="91.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="88" y="388" width="4" height="15" fill="rgb(233,38,3)"/><text x="91.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="88" y="404" width="4" height="15" fill="rgb(227,150,21)"/><text x="91.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="88" y="420" width="4" height="15" fill="rgb(244,47,42)"/><text x="91.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py) (1 samples, 0.29%)</title><rect x="88" y="436" width="4" height="15" fill="rgb(236,156,14)"/><text x="91.00" y="446.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="88" y="452" width="4" height="15" fill="rgb(245,172,25)"/><text x="91.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="88" y="468" width="4" height="15" fill="rgb(211,81,30)"/><text x="91.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="88" y="484" width="4" height="15" fill="rgb(231,193,20)"/><text x="91.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="88" y="500" width="4" height="15" fill="rgb(210,115,4)"/><text x="91.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="88" y="516" width="4" height="15" fill="rgb(219,115,16)"/><text x="91.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="88" y="532" width="4" height="15" fill="rgb(234,35,6)"/><text x="91.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="88" y="548" width="4" height="15" fill="rgb(227,63,36)"/><text x="91.00" y="558.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/cluster/__init__.py) (1 samples, 0.29%)</title><rect x="88" y="564" width="4" height="15" fill="rgb(214,129,27)"/><text x="91.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="88" y="580" width="4" height="15" fill="rgb(241,138,49)"/><text x="91.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="88" y="596" width="4" height="15" fill="rgb(218,195,27)"/><text x="91.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="88" y="612" width="4" height="15" fill="rgb(217,132,33)"/><text x="91.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="88" y="628" width="4" height="15" fill="rgb(246,224,18)"/><text x="91.00" y="638.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="88" y="644" width="4" height="15" fill="rgb(229,226,0)"/><text x="91.00" y="654.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="88" y="660" width="4" height="15" fill="rgb(223,53,53)"/><text x="91.00" y="670.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.29%)</title><rect x="95" y="292" width="3" height="15" fill="rgb(247,25,5)"/><text x="98.00" y="302.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.29%)</title><rect x="95" y="308" width="3" height="15" fill="rgb(248,75,8)"/><text x="98.00" y="318.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="95" y="324" width="3" height="15" fill="rgb(219,130,36)"/><text x="98.00" y="334.50"></text></g><g><title>0x7f5b71d1ffa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="98" y="324" width="4" height="15" fill="rgb(229,3,6)"/><text x="101.00" y="334.50"></text></g><g><title>0x7f5b71d2f405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="98" y="340" width="4" height="15" fill="rgb(240,166,24)"/><text x="101.00" y="350.50"></text></g><g><title>0x7f5b71d2e92f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="98" y="356" width="4" height="15" fill="rgb(205,6,19)"/><text x="101.00" y="366.50"></text></g><g><title>0x7f5b71d03a05 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="98" y="372" width="4" height="15" fill="rgb(224,141,38)"/><text x="101.00" y="382.50"></text></g><g><title>0x7f5b71d2013a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="102" y="324" width="3" height="15" fill="rgb(216,9,3)"/><text x="105.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.29%)</title><rect x="102" y="340" width="3" height="15" fill="rgb(212,0,54)"/><text x="105.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.29%)</title><rect x="102" y="356" width="3" height="15" fill="rgb(229,103,28)"/><text x="105.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.29%)</title><rect x="102" y="372" width="3" height="15" fill="rgb(223,90,23)"/><text x="105.00" y="382.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (3 samples, 0.87%)</title><rect x="98" y="292" width="11" height="15" fill="rgb(209,98,38)"/><text x="101.00" y="302.50"></text></g><g><title>0x7f5b71d20d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.87%)</title><rect x="98" y="308" width="11" height="15" fill="rgb(208,187,17)"/><text x="101.00" y="318.50"></text></g><g><title>0x7f5b71d201bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="105" y="324" width="4" height="15" fill="rgb(209,27,27)"/><text x="108.00" y="334.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.29%)</title><rect x="105" y="340" width="4" height="15" fill="rgb(250,96,49)"/><text x="108.00" y="350.50"></text></g><g><title>0x7f5b982fd124 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="105" y="356" width="4" height="15" fill="rgb(243,19,17)"/><text x="108.00" y="366.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (6 samples, 1.74%)</title><rect x="92" y="180" width="20" height="15" fill="rgb(238,1,37)"/><text x="95.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py) (5 samples, 1.45%)</title><rect x="95" y="196" width="17" height="15" fill="rgb(251,95,43)"/><text x="98.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (5 samples, 1.45%)</title><rect x="95" y="212" width="17" height="15" fill="rgb(224,119,44)"/><text x="98.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (5 samples, 1.45%)</title><rect x="95" y="228" width="17" height="15" fill="rgb(253,212,28)"/><text x="98.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py) (5 samples, 1.45%)</title><rect x="95" y="244" width="17" height="15" fill="rgb(209,150,6)"/><text x="98.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (5 samples, 1.45%)</title><rect x="95" y="260" width="17" height="15" fill="rgb(212,45,2)"/><text x="98.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (5 samples, 1.45%)</title><rect x="95" y="276" width="17" height="15" fill="rgb(229,156,13)"/><text x="98.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.29%)</title><rect x="109" y="292" width="3" height="15" fill="rgb(226,21,42)"/><text x="112.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.29%)</title><rect x="109" y="308" width="3" height="15" fill="rgb(224,185,34)"/><text x="112.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.29%)</title><rect x="109" y="324" width="3" height="15" fill="rgb(234,113,48)"/><text x="112.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.29%)</title><rect x="109" y="340" width="3" height="15" fill="rgb(205,177,33)"/><text x="112.00" y="350.50"></text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (7 samples, 2.03%)</title><rect x="92" y="68" width="24" height="15" fill="rgb(234,97,10)"/><text x="95.00" y="78.50">p..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (7 samples, 2.03%)</title><rect x="92" y="84" width="24" height="15" fill="rgb(235,48,15)"/><text x="95.00" y="94.50">s..</text></g><g><title>profile0 (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (7 samples, 2.03%)</title><rect x="92" y="100" width="24" height="15" fill="rgb(245,32,32)"/><text x="95.00" y="110.50">p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (7 samples, 2.03%)</title><rect x="92" y="116" width="24" height="15" fill="rgb(234,114,3)"/><text x="95.00" y="126.50">t..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (7 samples, 2.03%)</title><rect x="92" y="132" width="24" height="15" fill="rgb(232,96,13)"/><text x="95.00" y="142.50">&lt;..</text></g><g><title>predict (sklearn/ensemble/_forest.py) (7 samples, 2.03%)</title><rect x="92" y="148" width="24" height="15" fill="rgb(230,205,7)"/><text x="95.00" y="158.50">p..</text></g><g><title>__call__ (joblib/parallel.py) (7 samples, 2.03%)</title><rect x="92" y="164" width="24" height="15" fill="rgb(237,58,48)"/><text x="95.00" y="174.50">_..</text></g><g><title>short_format_time (joblib/logger.py) (1 samples, 0.29%)</title><rect x="112" y="180" width="4" height="15" fill="rgb(249,57,0)"/><text x="115.00" y="190.50"></text></g><g><title>0x7f5b5831aff9 (?) (1 samples, 0.29%)</title><rect x="116" y="212" width="3" height="15" fill="rgb(234,9,29)"/><text x="119.00" y="222.50"></text></g><g><title>0x7f5b58315ef6 (?) (1 samples, 0.29%)</title><rect x="116" y="228" width="3" height="15" fill="rgb(252,225,3)"/><text x="119.00" y="238.50"></text></g><g><title>0x7f5b5830a962 (?) (1 samples, 0.29%)</title><rect x="116" y="244" width="3" height="15" fill="rgb(245,159,34)"/><text x="119.00" y="254.50"></text></g><g><title>0x7f5b5833e7a7 (?) (1 samples, 0.29%)</title><rect x="116" y="260" width="3" height="15" fill="rgb(232,64,16)"/><text x="119.00" y="270.50"></text></g><g><title>0x7f5b5833e379 (?) (1 samples, 0.29%)</title><rect x="116" y="276" width="3" height="15" fill="rgb(252,143,44)"/><text x="119.00" y="286.50"></text></g><g><title>0x7f5b5879c8b8 (?) (1 samples, 0.29%)</title><rect x="116" y="292" width="3" height="15" fill="rgb(208,8,7)"/><text x="119.00" y="302.50"></text></g><g><title>0x7f5b5879ac7f (?) (1 samples, 0.29%)</title><rect x="116" y="308" width="3" height="15" fill="rgb(220,183,54)"/><text x="119.00" y="318.50"></text></g><g><title>0x7f5b587ad99c (?) (1 samples, 0.29%)</title><rect x="116" y="324" width="3" height="15" fill="rgb(230,131,10)"/><text x="119.00" y="334.50"></text></g><g><title>0x7f5b584d4dc2 (?) (1 samples, 0.29%)</title><rect x="116" y="340" width="3" height="15" fill="rgb(233,162,47)"/><text x="119.00" y="350.50"></text></g><g><title>0x7f5b584d46b8 (?) (1 samples, 0.29%)</title><rect x="116" y="356" width="3" height="15" fill="rgb(205,181,2)"/><text x="119.00" y="366.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 30.14%)</title><rect x="139" y="356" width="356" height="15" fill="rgb(253,50,22)"/><text x="142.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::P..</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (112 samples, 32.46%)</title><rect x="116" y="100" width="383" height="15" fill="rgb(206,139,8)"/><text x="119.00" y="110.50">profile (bench_RandomForestRegressor_default_m_reg_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (112 samples, 32.46%)</title><rect x="116" y="116" width="383" height="15" fill="rgb(230,38,6)"/><text x="119.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (112 samples, 32.46%)</title><rect x="116" y="132" width="383" height="15" fill="rgb(224,113,2)"/><text x="119.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (112 samples, 32.46%)</title><rect x="116" y="148" width="383" height="15" fill="rgb(234,139,20)"/><text x="119.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (112 samples, 32.46%)</title><rect x="116" y="164" width="383" height="15" fill="rgb(227,106,9)"/><text x="119.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference...</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (112 samples, 32.46%)</title><rect x="116" y="180" width="383" height="15" fill="rgb(235,20,35)"/><text x="119.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (112 samples, 32.46%)</title><rect x="116" y="196" width="383" height="15" fill="rgb(227,72,16)"/><text x="119.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (111 samples, 32.17%)</title><rect x="119" y="212" width="380" height="15" fill="rgb(222,205,3)"/><text x="122.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/cap..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (111 samples, 32.17%)</title><rect x="119" y="228" width="380" height="15" fill="rgb(234,37,39)"/><text x="122.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (111 samples, 32.17%)</title><rect x="119" y="244" width="380" height="15" fill="rgb(220,134,1)"/><text x="122.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::mod..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 31.88%)</title><rect x="122" y="260" width="377" height="15" fill="rgb(226,157,23)"/><text x="125.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/cap..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 31.88%)</title><rect x="122" y="276" width="377" height="15" fill="rgb(218,75,52)"/><text x="125.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/cap..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 31.88%)</title><rect x="122" y="292" width="377" height="15" fill="rgb(252,18,41)"/><text x="125.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 31.88%)</title><rect x="122" y="308" width="377" height="15" fill="rgb(250,215,10)"/><text x="125.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/c..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 31.88%)</title><rect x="122" y="324" width="377" height="15" fill="rgb(231,228,51)"/><text x="125.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxrunti..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 31.88%)</title><rect x="122" y="340" width="377" height="15" fill="rgb(213,83,44)"/><text x="125.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Comp..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="495" y="356" width="4" height="15" fill="rgb(222,213,8)"/><text x="498.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="495" y="372" width="4" height="15" fill="rgb(210,138,20)"/><text x="498.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="495" y="388" width="4" height="15" fill="rgb(237,157,50)"/><text x="498.00" y="398.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.29%)</title><rect x="499" y="212" width="3" height="15" fill="rgb(237,188,36)"/><text x="502.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.29%)</title><rect x="499" y="228" width="3" height="15" fill="rgb(210,11,29)"/><text x="502.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="499" y="244" width="3" height="15" fill="rgb(234,47,13)"/><text x="502.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.29%)</title><rect x="499" y="260" width="3" height="15" fill="rgb(239,56,19)"/><text x="502.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.29%)</title><rect x="499" y="276" width="3" height="15" fill="rgb(227,35,13)"/><text x="502.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.29%)</title><rect x="499" y="292" width="3" height="15" fill="rgb(247,122,20)"/><text x="502.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py) (1 samples, 0.29%)</title><rect x="499" y="308" width="3" height="15" fill="rgb(252,52,44)"/><text x="502.00" y="318.50"></text></g><g><title>profile_ort (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (114 samples, 33.04%)</title><rect x="116" y="68" width="389" height="15" fill="rgb(249,129,7)"/><text x="119.00" y="78.50">profile_ort (bench_RandomForestRegressor_default_m_r..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (114 samples, 33.04%)</title><rect x="116" y="84" width="389" height="15" fill="rgb(236,208,7)"/><text x="119.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_m..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.58%)</title><rect x="499" y="100" width="6" height="15" fill="rgb(231,161,35)"/><text x="502.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.58%)</title><rect x="499" y="116" width="6" height="15" fill="rgb(205,106,34)"/><text x="502.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.58%)</title><rect x="499" y="132" width="6" height="15" fill="rgb(212,59,38)"/><text x="502.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (2 samples, 0.58%)</title><rect x="499" y="148" width="6" height="15" fill="rgb(246,158,21)"/><text x="502.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (2 samples, 0.58%)</title><rect x="499" y="164" width="6" height="15" fill="rgb(208,193,5)"/><text x="502.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (2 samples, 0.58%)</title><rect x="499" y="180" width="6" height="15" fill="rgb(214,37,23)"/><text x="502.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py) (2 samples, 0.58%)</title><rect x="499" y="196" width="6" height="15" fill="rgb(220,156,44)"/><text x="502.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py) (1 samples, 0.29%)</title><rect x="502" y="212" width="3" height="15" fill="rgb(228,177,9)"/><text x="505.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py) (1 samples, 0.29%)</title><rect x="502" y="228" width="3" height="15" fill="rgb(247,158,2)"/><text x="505.00" y="238.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py) (1 samples, 0.29%)</title><rect x="502" y="244" width="3" height="15" fill="rgb(250,89,0)"/><text x="505.00" y="254.50"></text></g><g><title>float_subtract (scalarmath.c.src) (1 samples, 0.29%)</title><rect x="502" y="260" width="3" height="15" fill="rgb(218,178,14)"/><text x="505.00" y="270.50"></text></g><g><title>array_subtract (number.c) (1 samples, 0.29%)</title><rect x="502" y="276" width="3" height="15" fill="rgb(217,143,25)"/><text x="505.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.29%)</title><rect x="502" y="292" width="3" height="15" fill="rgb(226,22,14)"/><text x="505.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.29%)</title><rect x="502" y="308" width="3" height="15" fill="rgb(240,154,28)"/><text x="505.00" y="318.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.29%)</title><rect x="502" y="324" width="3" height="15" fill="rgb(239,98,15)"/><text x="505.00" y="334.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.29%)</title><rect x="502" y="340" width="3" height="15" fill="rgb(254,146,51)"/><text x="505.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.29%)</title><rect x="502" y="356" width="3" height="15" fill="rgb(224,160,6)"/><text x="505.00" y="366.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.29%)</title><rect x="502" y="372" width="3" height="15" fill="rgb(254,214,30)"/><text x="505.00" y="382.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.29%)</title><rect x="502" y="388" width="3" height="15" fill="rgb(207,207,1)"/><text x="505.00" y="398.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.29%)</title><rect x="502" y="404" width="3" height="15" fill="rgb(232,39,29)"/><text x="505.00" y="414.50"></text></g><g><title>0x7f5b58d7554f (?) (1 samples, 0.29%)</title><rect x="505" y="244" width="4" height="15" fill="rgb(233,204,43)"/><text x="508.00" y="254.50"></text></g><g><title>0x7f5b58d7b65e (?) (1 samples, 0.29%)</title><rect x="505" y="260" width="4" height="15" fill="rgb(249,17,47)"/><text x="508.00" y="270.50"></text></g><g><title>0x7f5b58d7b50f (?) (1 samples, 0.29%)</title><rect x="505" y="276" width="4" height="15" fill="rgb(232,39,25)"/><text x="508.00" y="286.50"></text></g><g><title>0x7f5b58d81d6c (?) (1 samples, 0.29%)</title><rect x="505" y="292" width="4" height="15" fill="rgb(242,78,1)"/><text x="508.00" y="302.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.29%)</title><rect x="505" y="308" width="4" height="15" fill="rgb(236,225,33)"/><text x="508.00" y="318.50"></text></g><g><title>0x7f5b58d6627c (?) (1 samples, 0.29%)</title><rect x="505" y="324" width="4" height="15" fill="rgb(233,136,37)"/><text x="508.00" y="334.50"></text></g><g><title>0x7f5b58d655c8 (?) (1 samples, 0.29%)</title><rect x="505" y="340" width="4" height="15" fill="rgb(233,137,51)"/><text x="508.00" y="350.50"></text></g><g><title>0x7f5b622a2ab9 (libgomp.so.1.0.0) (1 samples, 0.29%)</title><rect x="509" y="468" width="3" height="15" fill="rgb(220,34,21)"/><text x="512.00" y="478.50"></text></g><g><title>0x7f5b622a3ead (libgomp.so.1.0.0) (1 samples, 0.29%)</title><rect x="509" y="484" width="3" height="15" fill="rgb(205,82,49)"/><text x="512.00" y="494.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h) (1 samples, 0.29%)</title><rect x="564" y="564" width="3" height="15" fill="rgb(220,207,9)"/><text x="567.00" y="574.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h) (1 samples, 0.29%)</title><rect x="564" y="580" width="3" height="15" fill="rgb(254,151,15)"/><text x="567.00" y="590.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h) (1 samples, 0.29%)</title><rect x="564" y="596" width="3" height="15" fill="rgb(212,223,54)"/><text x="567.00" y="606.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (30 samples, 8.70%)</title><rect x="505" y="100" width="103" height="15" fill="rgb(211,218,29)"/><text x="508.00" y="110.50">profile (ben..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (30 samples, 8.70%)</title><rect x="505" y="116" width="103" height="15" fill="rgb(232,65,40)"/><text x="508.00" y="126.50">time_predict..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (30 samples, 8.70%)</title><rect x="505" y="132" width="103" height="15" fill="rgb(236,199,26)"/><text x="508.00" y="142.50">&lt;lambda&gt; (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (30 samples, 8.70%)</title><rect x="505" y="148" width="103" height="15" fill="rgb(222,144,44)"/><text x="508.00" y="158.50">run (mlprodi..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (30 samples, 8.70%)</title><rect x="505" y="164" width="103" height="15" fill="rgb(205,87,34)"/><text x="508.00" y="174.50">_run_sequenc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (30 samples, 8.70%)</title><rect x="505" y="180" width="103" height="15" fill="rgb(229,122,0)"/><text x="508.00" y="190.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (30 samples, 8.70%)</title><rect x="505" y="196" width="103" height="15" fill="rgb(253,204,13)"/><text x="508.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (30 samples, 8.70%)</title><rect x="505" y="212" width="103" height="15" fill="rgb(219,6,16)"/><text x="508.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (30 samples, 8.70%)</title><rect x="505" y="228" width="103" height="15" fill="rgb(226,7,10)"/><text x="508.00" y="238.50">_run (mlprod..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (29 samples, 8.41%)</title><rect x="509" y="244" width="99" height="15" fill="rgb(253,10,29)"/><text x="512.00" y="254.50">pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (29 samples, 8.41%)</title><rect x="509" y="260" width="99" height="15" fill="rgb(224,40,4)"/><text x="512.00" y="270.50">void pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (29 samples, 8.41%)</title><rect x="509" y="276" width="99" height="15" fill="rgb(246,0,13)"/><text x="512.00" y="286.50">void pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (29 samples, 8.41%)</title><rect x="509" y="292" width="99" height="15" fill="rgb(253,67,26)"/><text x="512.00" y="302.50">pybind11::d..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (29 samples, 8.41%)</title><rect x="509" y="308" width="99" height="15" fill="rgb(251,19,27)"/><text x="512.00" y="318.50">pybind11::d..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (29 samples, 8.41%)</title><rect x="509" y="324" width="99" height="15" fill="rgb(219,28,44)"/><text x="512.00" y="334.50">pybind11::c..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (29 samples, 8.41%)</title><rect x="509" y="340" width="99" height="15" fill="rgb(227,5,8)"/><text x="512.00" y="350.50">pybind11::a..</text></g><g><title>pybind11::array::~array (numpy.h) (29 samples, 8.41%)</title><rect x="509" y="356" width="99" height="15" fill="rgb(225,72,36)"/><text x="512.00" y="366.50">pybind11::a..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (29 samples, 8.41%)</title><rect x="509" y="372" width="99" height="15" fill="rgb(224,95,29)"/><text x="512.00" y="382.50">pybind11::b..</text></g><g><title>pybind11::object::~object (pytypes.h) (29 samples, 8.41%)</title><rect x="509" y="388" width="99" height="15" fill="rgb(205,169,50)"/><text x="512.00" y="398.50">pybind11::o..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (29 samples, 8.41%)</title><rect x="509" y="404" width="99" height="15" fill="rgb(250,70,47)"/><text x="512.00" y="414.50">pybind11::h..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (29 samples, 8.41%)</title><rect x="509" y="420" width="99" height="15" fill="rgb(205,192,11)"/><text x="512.00" y="430.50">RuntimeTree..</text></g><g><title>pybind11::array::size (numpy.h) (29 samples, 8.41%)</title><rect x="509" y="436" width="99" height="15" fill="rgb(249,168,33)"/><text x="512.00" y="446.50">pybind11::a..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (29 samples, 8.41%)</title><rect x="509" y="452" width="99" height="15" fill="rgb(226,11,17)"/><text x="512.00" y="462.50">std::accumu..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (28 samples, 8.12%)</title><rect x="512" y="468" width="96" height="15" fill="rgb(237,173,54)"/><text x="515.00" y="478.50">GOMP_parall..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (28 samples, 8.12%)</title><rect x="512" y="484" width="96" height="15" fill="rgb(206,3,1)"/><text x="515.00" y="494.50">RuntimeTree..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h) (28 samples, 8.12%)</title><rect x="512" y="500" width="96" height="15" fill="rgb(217,26,3)"/><text x="515.00" y="510.50">std::vector..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (28 samples, 8.12%)</title><rect x="512" y="516" width="96" height="15" fill="rgb(207,29,35)"/><text x="515.00" y="526.50">RuntimeTree..</text></g><g><title>std::unordered_map&lt;long, unsigned long, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt; &gt;::find (unordered_map.h) (13 samples, 3.77%)</title><rect x="564" y="532" width="44" height="15" fill="rgb(212,212,9)"/><text x="567.00" y="542.50">std:..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h) (13 samples, 3.77%)</title><rect x="564" y="548" width="44" height="15" fill="rgb(219,113,14)"/><text x="567.00" y="558.50">std:..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (hashtable.h) (12 samples, 3.48%)</title><rect x="567" y="564" width="41" height="15" fill="rgb(209,125,24)"/><text x="570.00" y="574.50">std..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h) (12 samples, 3.48%)</title><rect x="567" y="580" width="41" height="15" fill="rgb(215,227,33)"/><text x="570.00" y="590.50">std..</text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (31 samples, 8.99%)</title><rect x="505" y="68" width="106" height="15" fill="rgb(227,220,48)"/><text x="508.00" y="78.50">profile_pyrt..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (31 samples, 8.99%)</title><rect x="505" y="84" width="106" height="15" fill="rgb(219,4,23)"/><text x="508.00" y="94.50">setup_profil..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="608" y="100" width="3" height="15" fill="rgb(229,181,4)"/><text x="611.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="608" y="116" width="3" height="15" fill="rgb(234,203,3)"/><text x="611.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="608" y="132" width="3" height="15" fill="rgb(248,11,32)"/><text x="611.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.29%)</title><rect x="608" y="148" width="3" height="15" fill="rgb(239,198,3)"/><text x="611.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.29%)</title><rect x="608" y="164" width="3" height="15" fill="rgb(238,229,25)"/><text x="611.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.29%)</title><rect x="608" y="180" width="3" height="15" fill="rgb(228,28,42)"/><text x="611.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.29%)</title><rect x="608" y="196" width="3" height="15" fill="rgb(247,62,31)"/><text x="611.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="608" y="212" width="3" height="15" fill="rgb(215,227,42)"/><text x="611.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="608" y="228" width="3" height="15" fill="rgb(217,166,53)"/><text x="611.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="608" y="244" width="3" height="15" fill="rgb(239,83,8)"/><text x="611.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="608" y="260" width="3" height="15" fill="rgb(231,13,6)"/><text x="611.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="608" y="276" width="3" height="15" fill="rgb(205,7,44)"/><text x="611.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.29%)</title><rect x="608" y="292" width="3" height="15" fill="rgb(245,168,25)"/><text x="611.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="608" y="308" width="3" height="15" fill="rgb(244,73,35)"/><text x="611.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="608" y="324" width="3" height="15" fill="rgb(253,1,7)"/><text x="611.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="608" y="340" width="3" height="15" fill="rgb(206,222,29)"/><text x="611.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="608" y="356" width="3" height="15" fill="rgb(212,54,3)"/><text x="611.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="608" y="372" width="3" height="15" fill="rgb(245,94,3)"/><text x="611.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.29%)</title><rect x="608" y="388" width="3" height="15" fill="rgb(253,55,19)"/><text x="611.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="608" y="404" width="3" height="15" fill="rgb(247,109,47)"/><text x="611.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="608" y="420" width="3" height="15" fill="rgb(219,87,44)"/><text x="611.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="608" y="436" width="3" height="15" fill="rgb(253,119,26)"/><text x="611.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="608" y="452" width="3" height="15" fill="rgb(234,210,25)"/><text x="611.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="608" y="468" width="3" height="15" fill="rgb(208,164,43)"/><text x="611.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.29%)</title><rect x="608" y="484" width="3" height="15" fill="rgb(224,205,51)"/><text x="611.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.29%)</title><rect x="608" y="500" width="3" height="15" fill="rgb(226,182,52)"/><text x="611.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="608" y="516" width="3" height="15" fill="rgb(213,33,13)"/><text x="611.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="608" y="532" width="3" height="15" fill="rgb(226,116,9)"/><text x="611.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="608" y="548" width="3" height="15" fill="rgb(232,95,25)"/><text x="611.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="608" y="564" width="3" height="15" fill="rgb(241,229,4)"/><text x="611.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.29%)</title><rect x="608" y="580" width="3" height="15" fill="rgb(247,188,15)"/><text x="611.00" y="590.50"></text></g><g><title>set_environment (jinja2/nodes.py) (1 samples, 0.29%)</title><rect x="608" y="596" width="3" height="15" fill="rgb(246,71,11)"/><text x="611.00" y="606.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py) (1 samples, 0.29%)</title><rect x="608" y="612" width="3" height="15" fill="rgb(251,150,41)"/><text x="611.00" y="622.50"></text></g><g><title>iter_fields (jinja2/nodes.py) (1 samples, 0.29%)</title><rect x="608" y="628" width="3" height="15" fill="rgb(249,115,26)"/><text x="611.00" y="638.50"></text></g><g><title>0x7f5b982f2734 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="666" y="196" width="4" height="15" fill="rgb(223,97,14)"/><text x="669.00" y="206.50"></text></g><g><title>update_wrapper (functools.py) (3 samples, 0.87%)</title><rect x="683" y="228" width="11" height="15" fill="rgb(225,64,33)"/><text x="686.00" y="238.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (8 samples, 2.32%)</title><rect x="670" y="196" width="27" height="15" fill="rgb(254,140,49)"/><text x="673.00" y="206.50">&lt;..</text></g><g><title>delayed (joblib/parallel.py) (6 samples, 1.74%)</title><rect x="676" y="212" width="21" height="15" fill="rgb(223,99,20)"/><text x="679.00" y="222.50"></text></g><g><title>wraps (functools.py) (1 samples, 0.29%)</title><rect x="694" y="228" width="3" height="15" fill="rgb(213,21,18)"/><text x="697.00" y="238.50"></text></g><g><title>__init__ (joblib/parallel.py) (3 samples, 0.87%)</title><rect x="697" y="196" width="10" height="15" fill="rgb(206,202,22)"/><text x="700.00" y="206.50"></text></g><g><title>0x7ffd851eda00 ([vdso]) (1 samples, 0.29%)</title><rect x="718" y="212" width="3" height="15" fill="rgb(245,213,5)"/><text x="721.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.29%)</title><rect x="721" y="212" width="3" height="15" fill="rgb(252,53,0)"/><text x="724.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 1.16%)</title><rect x="731" y="228" width="14" height="15" fill="rgb(227,196,8)"/><text x="734.00" y="238.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.29%)</title><rect x="741" y="244" width="4" height="15" fill="rgb(221,6,0)"/><text x="744.00" y="254.50"></text></g><g><title>0x7ffd851edaf6 ([vdso]) (1 samples, 0.29%)</title><rect x="741" y="260" width="4" height="15" fill="rgb(253,54,2)"/><text x="744.00" y="270.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.29%)</title><rect x="786" y="292" width="3" height="15" fill="rgb(219,9,6)"/><text x="789.00" y="302.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.29%)</title><rect x="786" y="308" width="3" height="15" fill="rgb(248,78,11)"/><text x="789.00" y="318.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="786" y="324" width="3" height="15" fill="rgb(223,36,46)"/><text x="789.00" y="334.50"></text></g><g><title>0x7f5b71d1ff55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="813" y="324" width="4" height="15" fill="rgb(210,72,21)"/><text x="816.00" y="334.50"></text></g><g><title>0x7f5b71d0fd7b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="813" y="340" width="4" height="15" fill="rgb(242,58,42)"/><text x="816.00" y="350.50"></text></g><g><title>0x7f5b71cfcb8c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="813" y="356" width="4" height="15" fill="rgb(214,106,3)"/><text x="816.00" y="366.50"></text></g><g><title>0x7f5b71d1ff81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="817" y="324" width="3" height="15" fill="rgb(224,71,42)"/><text x="820.00" y="334.50"></text></g><g><title>0x7f5b71d2e225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="820" y="356" width="4" height="15" fill="rgb(243,214,51)"/><text x="823.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.29%)</title><rect x="820" y="372" width="4" height="15" fill="rgb(244,147,30)"/><text x="823.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.29%)</title><rect x="820" y="388" width="4" height="15" fill="rgb(250,177,6)"/><text x="823.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.29%)</title><rect x="820" y="404" width="4" height="15" fill="rgb(239,54,14)"/><text x="823.00" y="414.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.29%)</title><rect x="820" y="420" width="4" height="15" fill="rgb(207,144,3)"/><text x="823.00" y="430.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.29%)</title><rect x="820" y="436" width="4" height="15" fill="rgb(213,168,41)"/><text x="823.00" y="446.50"></text></g><g><title>0x7f5b71d12d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="824" y="372" width="6" height="15" fill="rgb(236,111,12)"/><text x="827.00" y="382.50"></text></g><g><title>0x7f5b71d12666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="824" y="388" width="6" height="15" fill="rgb(238,10,23)"/><text x="827.00" y="398.50"></text></g><g><title>0x7f5b71d082fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="824" y="404" width="6" height="15" fill="rgb(239,159,54)"/><text x="827.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.29%)</title><rect x="827" y="420" width="3" height="15" fill="rgb(226,22,51)"/><text x="830.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.29%)</title><rect x="827" y="436" width="3" height="15" fill="rgb(235,167,52)"/><text x="830.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.29%)</title><rect x="827" y="452" width="3" height="15" fill="rgb(219,52,53)"/><text x="830.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="827" y="468" width="3" height="15" fill="rgb(231,2,49)"/><text x="830.00" y="478.50"></text></g><g><title>0x7f5b71d05f22 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="830" y="388" width="4" height="15" fill="rgb(231,227,2)"/><text x="833.00" y="398.50"></text></g><g><title>0x7f5b71d05a69 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="834" y="404" width="3" height="15" fill="rgb(216,135,22)"/><text x="837.00" y="414.50"></text></g><g><title>0x7f5b71d2e2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.45%)</title><rect x="824" y="356" width="17" height="15" fill="rgb(236,179,3)"/><text x="827.00" y="366.50"></text></g><g><title>0x7f5b71d12e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.87%)</title><rect x="830" y="372" width="11" height="15" fill="rgb(216,58,13)"/><text x="833.00" y="382.50"></text></g><g><title>0x7f5b71d062bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="834" y="388" width="7" height="15" fill="rgb(234,202,42)"/><text x="837.00" y="398.50"></text></g><g><title>0x7f5b71d05c7e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="837" y="404" width="4" height="15" fill="rgb(214,42,42)"/><text x="840.00" y="414.50"></text></g><g><title>0x7f5b71d2e456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="841" y="356" width="3" height="15" fill="rgb(223,99,7)"/><text x="844.00" y="366.50"></text></g><g><title>0x7f5b71d2e4a4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="844" y="356" width="3" height="15" fill="rgb(243,30,2)"/><text x="847.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.29%)</title><rect x="858" y="436" width="3" height="15" fill="rgb(233,203,47)"/><text x="861.00" y="446.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.29%)</title><rect x="858" y="452" width="3" height="15" fill="rgb(207,196,50)"/><text x="861.00" y="462.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h) (1 samples, 0.29%)</title><rect x="858" y="468" width="3" height="15" fill="rgb(226,131,36)"/><text x="861.00" y="478.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (1 samples, 0.29%)</title><rect x="861" y="452" width="4" height="15" fill="rgb(218,15,23)"/><text x="864.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="861" y="468" width="4" height="15" fill="rgb(253,121,29)"/><text x="864.00" y="478.50"></text></g><g><title>0x7f5b982fd120 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="861" y="484" width="4" height="15" fill="rgb(219,178,54)"/><text x="864.00" y="494.50"></text></g><g><title>0x7f5b71d2e592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.74%)</title><rect x="847" y="356" width="21" height="15" fill="rgb(251,200,20)"/><text x="850.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c) (6 samples, 1.74%)</title><rect x="847" y="372" width="21" height="15" fill="rgb(227,204,0)"/><text x="850.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (3 samples, 0.87%)</title><rect x="858" y="388" width="10" height="15" fill="rgb(225,58,19)"/><text x="861.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c) (3 samples, 0.87%)</title><rect x="858" y="404" width="10" height="15" fill="rgb(217,60,52)"/><text x="861.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 0.87%)</title><rect x="858" y="420" width="10" height="15" fill="rgb(250,191,52)"/><text x="861.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (2 samples, 0.58%)</title><rect x="861" y="436" width="7" height="15" fill="rgb(247,17,34)"/><text x="864.00" y="446.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="865" y="452" width="3" height="15" fill="rgb(247,211,3)"/><text x="868.00" y="462.50"></text></g><g><title>0x7f5b71d2e687 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="868" y="356" width="3" height="15" fill="rgb(223,115,42)"/><text x="871.00" y="366.50"></text></g><g><title>0x7f5b71d2e698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="871" y="356" width="4" height="15" fill="rgb(206,174,22)"/><text x="874.00" y="366.50"></text></g><g><title>0x7f5b71d2e6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="875" y="356" width="3" height="15" fill="rgb(248,194,20)"/><text x="878.00" y="366.50"></text></g><g><title>0x7f5b71d2e6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="878" y="356" width="7" height="15" fill="rgb(218,93,16)"/><text x="881.00" y="366.50"></text></g><g><title>0x7f5b71d2e6bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="885" y="356" width="4" height="15" fill="rgb(207,129,47)"/><text x="888.00" y="366.50"></text></g><g><title>0x7f5b71d2e6d7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.87%)</title><rect x="889" y="356" width="10" height="15" fill="rgb(225,95,29)"/><text x="892.00" y="366.50"></text></g><g><title>0x7f5b71d2e6e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="899" y="356" width="3" height="15" fill="rgb(220,139,42)"/><text x="902.00" y="366.50"></text></g><g><title>0x7f5b71d2e7a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="902" y="356" width="7" height="15" fill="rgb(205,211,1)"/><text x="905.00" y="366.50"></text></g><g><title>0x7f5b71d2e8c3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="909" y="356" width="3" height="15" fill="rgb(239,163,35)"/><text x="912.00" y="366.50"></text></g><g><title>0x7f5b71d2f405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (28 samples, 8.12%)</title><rect x="820" y="340" width="96" height="15" fill="rgb(217,184,35)"/><text x="823.00" y="350.50">0x7f5b71d2f..</text></g><g><title>0x7f5b71d2ec27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="912" y="356" width="4" height="15" fill="rgb(243,85,49)"/><text x="915.00" y="366.50"></text></g><g><title>0x7f5b71d06529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="912" y="372" width="4" height="15" fill="rgb(219,32,38)"/><text x="915.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.29%)</title><rect x="912" y="388" width="4" height="15" fill="rgb(254,205,35)"/><text x="915.00" y="398.50"></text></g><g><title>0x7f5b71d034f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="916" y="372" width="3" height="15" fill="rgb(232,45,5)"/><text x="919.00" y="382.50"></text></g><g><title>0x7f5b71d1ffa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (30 samples, 8.70%)</title><rect x="820" y="324" width="103" height="15" fill="rgb(231,211,42)"/><text x="823.00" y="334.50">0x7f5b71d1ff..</text></g><g><title>0x7f5b71d2f540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="916" y="340" width="7" height="15" fill="rgb(210,81,43)"/><text x="919.00" y="350.50"></text></g><g><title>0x7f5b71d042f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="916" y="356" width="7" height="15" fill="rgb(254,137,31)"/><text x="919.00" y="366.50"></text></g><g><title>0x7f5b71d03530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="919" y="372" width="4" height="15" fill="rgb(240,147,33)"/><text x="922.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.29%)</title><rect x="919" y="388" width="4" height="15" fill="rgb(207,162,36)"/><text x="922.00" y="398.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c) (1 samples, 0.29%)</title><rect x="926" y="356" width="4" height="15" fill="rgb(253,152,25)"/><text x="929.00" y="366.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.29%)</title><rect x="926" y="372" width="4" height="15" fill="rgb(235,78,40)"/><text x="929.00" y="382.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.29%)</title><rect x="926" y="388" width="4" height="15" fill="rgb(220,149,2)"/><text x="929.00" y="398.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.29%)</title><rect x="930" y="356" width="3" height="15" fill="rgb(244,136,29)"/><text x="933.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (4 samples, 1.16%)</title><rect x="936" y="372" width="14" height="15" fill="rgb(227,207,38)"/><text x="939.00" y="382.50"></text></g><g><title>0x7f5b71d2005a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.61%)</title><rect x="923" y="324" width="31" height="15" fill="rgb(250,140,44)"/><text x="926.00" y="334.50">0x..</text></g><g><title>array_take (methods.c) (9 samples, 2.61%)</title><rect x="923" y="340" width="31" height="15" fill="rgb(238,119,28)"/><text x="926.00" y="350.50">ar..</text></g><g><title>PyArray_TakeFrom (item_selection.c) (6 samples, 1.74%)</title><rect x="933" y="356" width="21" height="15" fill="rgb(250,177,44)"/><text x="936.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.29%)</title><rect x="950" y="372" width="4" height="15" fill="rgb(218,68,52)"/><text x="953.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.29%)</title><rect x="950" y="388" width="4" height="15" fill="rgb(219,65,18)"/><text x="953.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.29%)</title><rect x="950" y="404" width="4" height="15" fill="rgb(237,175,13)"/><text x="953.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.29%)</title><rect x="950" y="420" width="4" height="15" fill="rgb(226,215,24)"/><text x="953.00" y="430.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.29%)</title><rect x="950" y="436" width="4" height="15" fill="rgb(248,207,7)"/><text x="953.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="950" y="452" width="4" height="15" fill="rgb(229,110,34)"/><text x="953.00" y="462.50"></text></g><g><title>0x7f5b982de274 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="950" y="468" width="4" height="15" fill="rgb(206,37,33)"/><text x="953.00" y="478.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.29%)</title><rect x="957" y="356" width="3" height="15" fill="rgb(226,76,43)"/><text x="960.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.29%)</title><rect x="957" y="372" width="3" height="15" fill="rgb(240,22,42)"/><text x="960.00" y="382.50"></text></g><g><title>0x7f5b71d20d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (44 samples, 12.75%)</title><rect x="813" y="308" width="151" height="15" fill="rgb(233,62,20)"/><text x="816.00" y="318.50">0x7f5b71d20d2e (skl..</text></g><g><title>0x7f5b71d2014f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.87%)</title><rect x="954" y="324" width="10" height="15" fill="rgb(241,190,9)"/><text x="957.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.58%)</title><rect x="957" y="340" width="7" height="15" fill="rgb(210,79,21)"/><text x="960.00" y="350.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.29%)</title><rect x="960" y="356" width="4" height="15" fill="rgb(248,182,33)"/><text x="963.00" y="366.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.29%)</title><rect x="960" y="372" width="4" height="15" fill="rgb(227,152,13)"/><text x="963.00" y="382.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.29%)</title><rect x="960" y="388" width="4" height="15" fill="rgb(219,119,24)"/><text x="963.00" y="398.50"></text></g><g><title>0x7f5b982dcf5b (libc-2.29.so) (1 samples, 0.29%)</title><rect x="960" y="404" width="4" height="15" fill="rgb(214,185,15)"/><text x="963.00" y="414.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (2 samples, 0.58%)</title><rect x="964" y="308" width="7" height="15" fill="rgb(248,73,16)"/><text x="967.00" y="318.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.29%)</title><rect x="971" y="308" width="3" height="15" fill="rgb(241,71,23)"/><text x="974.00" y="318.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.29%)</title><rect x="971" y="324" width="3" height="15" fill="rgb(231,128,20)"/><text x="974.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.29%)</title><rect x="998" y="340" width="3" height="15" fill="rgb(234,43,19)"/><text x="1001.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (63 samples, 18.26%)</title><rect x="789" y="292" width="216" height="15" fill="rgb(239,92,47)"/><text x="792.00" y="302.50">predict (sklearn/tree/_class..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (9 samples, 2.61%)</title><rect x="974" y="308" width="31" height="15" fill="rgb(252,104,31)"/><text x="977.00" y="318.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 1.74%)</title><rect x="984" y="324" width="21" height="15" fill="rgb(228,66,21)"/><text x="987.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.29%)</title><rect x="1001" y="340" width="4" height="15" fill="rgb(241,74,20)"/><text x="1004.00" y="350.50"></text></g><g><title>0x7f5b974fdf00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="1005" y="324" width="3" height="15" fill="rgb(218,196,53)"/><text x="1008.00" y="334.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.29%)</title><rect x="1008" y="324" width="4" height="15" fill="rgb(215,185,24)"/><text x="1011.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.29%)</title><rect x="1012" y="324" width="3" height="15" fill="rgb(250,82,46)"/><text x="1015.00" y="334.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.29%)</title><rect x="1012" y="340" width="3" height="15" fill="rgb(221,223,49)"/><text x="1015.00" y="350.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.29%)</title><rect x="1012" y="356" width="3" height="15" fill="rgb(210,195,37)"/><text x="1015.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.29%)</title><rect x="1012" y="372" width="3" height="15" fill="rgb(226,98,25)"/><text x="1015.00" y="382.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.29%)</title><rect x="1015" y="324" width="3" height="15" fill="rgb(228,180,42)"/><text x="1018.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.29%)</title><rect x="1018" y="340" width="4" height="15" fill="rgb(208,79,33)"/><text x="1021.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.29%)</title><rect x="1018" y="356" width="4" height="15" fill="rgb(208,29,2)"/><text x="1021.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.29%)</title><rect x="1018" y="372" width="4" height="15" fill="rgb(212,123,13)"/><text x="1021.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1018" y="388" width="4" height="15" fill="rgb(211,69,26)"/><text x="1021.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.58%)</title><rect x="1018" y="324" width="7" height="15" fill="rgb(216,157,48)"/><text x="1021.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.29%)</title><rect x="1022" y="340" width="3" height="15" fill="rgb(213,74,8)"/><text x="1025.00" y="350.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (75 samples, 21.74%)</title><rect x="772" y="276" width="257" height="15" fill="rgb(240,123,39)"/><text x="775.00" y="286.50">_accumulate_prediction (sklearn/en..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 2.03%)</title><rect x="1005" y="292" width="24" height="15" fill="rgb(213,54,18)"/><text x="1008.00" y="302.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 2.03%)</title><rect x="1005" y="308" width="24" height="15" fill="rgb(211,223,2)"/><text x="1008.00" y="318.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.29%)</title><rect x="1025" y="324" width="4" height="15" fill="rgb(239,179,44)"/><text x="1028.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (77 samples, 22.32%)</title><rect x="769" y="260" width="263" height="15" fill="rgb(241,90,40)"/><text x="772.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.29%)</title><rect x="1029" y="276" width="3" height="15" fill="rgb(226,4,46)"/><text x="1032.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.29%)</title><rect x="1029" y="292" width="3" height="15" fill="rgb(252,210,8)"/><text x="1032.00" y="302.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.29%)</title><rect x="1029" y="308" width="3" height="15" fill="rgb(207,73,25)"/><text x="1032.00" y="318.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.29%)</title><rect x="1029" y="324" width="3" height="15" fill="rgb(243,35,14)"/><text x="1032.00" y="334.50"></text></g><g><title>__exit__ (joblib/parallel.py) (2 samples, 0.58%)</title><rect x="1032" y="260" width="7" height="15" fill="rgb(218,3,30)"/><text x="1035.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py) (2 samples, 0.58%)</title><rect x="1032" y="276" width="7" height="15" fill="rgb(223,85,30)"/><text x="1035.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (94 samples, 27.25%)</title><rect x="724" y="212" width="322" height="15" fill="rgb(242,48,15)"/><text x="727.00" y="222.50">apply_async (joblib/_parallel_backends.py)</text></g><g><title>__init__ (joblib/_parallel_backends.py) (88 samples, 25.51%)</title><rect x="745" y="228" width="301" height="15" fill="rgb(226,83,29)"/><text x="748.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (87 samples, 25.22%)</title><rect x="748" y="244" width="298" height="15" fill="rgb(230,171,54)"/><text x="751.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (2 samples, 0.58%)</title><rect x="1039" y="260" width="7" height="15" fill="rgb(209,219,13)"/><text x="1042.00" y="270.50"></text></g><g><title>_dispatch (joblib/parallel.py) (101 samples, 29.28%)</title><rect x="707" y="196" width="346" height="15" fill="rgb(246,27,9)"/><text x="710.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>time_time (python3.7) (2 samples, 0.58%)</title><rect x="1046" y="212" width="7" height="15" fill="rgb(217,114,49)"/><text x="1049.00" y="222.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1049" y="228" width="4" height="15" fill="rgb(225,81,41)"/><text x="1052.00" y="238.50"></text></g><g><title>__enter__ (threading.py) (3 samples, 0.87%)</title><rect x="1070" y="212" width="10" height="15" fill="rgb(217,226,38)"/><text x="1073.00" y="222.50"></text></g><g><title>__exit__ (threading.py) (1 samples, 0.29%)</title><rect x="1080" y="212" width="3" height="15" fill="rgb(244,128,52)"/><text x="1083.00" y="222.50"></text></g><g><title>_qsize (queue.py) (2 samples, 0.58%)</title><rect x="1083" y="212" width="7" height="15" fill="rgb(218,71,25)"/><text x="1086.00" y="222.50"></text></g><g><title>get (queue.py) (12 samples, 3.48%)</title><rect x="1053" y="196" width="41" height="15" fill="rgb(205,110,22)"/><text x="1056.00" y="206.50">get..</text></g><g><title>notify (threading.py) (1 samples, 0.29%)</title><rect x="1090" y="212" width="4" height="15" fill="rgb(212,163,53)"/><text x="1093.00" y="222.50"></text></g><g><title>0x7f5b982f2e7a (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1107" y="212" width="4" height="15" fill="rgb(206,14,41)"/><text x="1110.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="1111" y="212" width="7" height="15" fill="rgb(221,63,35)"/><text x="1114.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (6 samples, 1.74%)</title><rect x="1118" y="212" width="20" height="15" fill="rgb(214,144,49)"/><text x="1121.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.29%)</title><rect x="1135" y="228" width="3" height="15" fill="rgb(215,107,24)"/><text x="1138.00" y="238.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (14 samples, 4.06%)</title><rect x="1094" y="196" width="48" height="15" fill="rgb(249,203,3)"/><text x="1097.00" y="206.50">get_..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.29%)</title><rect x="1138" y="212" width="4" height="15" fill="rgb(221,19,24)"/><text x="1141.00" y="222.50"></text></g><g><title>__enter__ (threading.py) (1 samples, 0.29%)</title><rect x="1145" y="212" width="3" height="15" fill="rgb(209,35,43)"/><text x="1148.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.29%)</title><rect x="1145" y="228" width="3" height="15" fill="rgb(241,12,30)"/><text x="1148.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (158 samples, 45.80%)</title><rect x="618" y="180" width="541" height="15" fill="rgb(252,144,20)"/><text x="621.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (5 samples, 1.45%)</title><rect x="1142" y="196" width="17" height="15" fill="rgb(249,195,17)"/><text x="1145.00" y="206.50"></text></g><g><title>notify (threading.py) (3 samples, 0.87%)</title><rect x="1148" y="212" width="11" height="15" fill="rgb(229,205,43)"/><text x="1151.00" y="222.50"></text></g><g><title>_is_owned (threading.py) (1 samples, 0.29%)</title><rect x="1155" y="228" width="4" height="15" fill="rgb(251,68,9)"/><text x="1158.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py) (162 samples, 46.96%)</title><rect x="611" y="164" width="555" height="15" fill="rgb(230,226,4)"/><text x="614.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>retrieve (joblib/parallel.py) (2 samples, 0.58%)</title><rect x="1159" y="180" width="7" height="15" fill="rgb(244,204,29)"/><text x="1162.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.29%)</title><rect x="1166" y="164" width="3" height="15" fill="rgb(253,27,22)"/><text x="1169.00" y="174.50"></text></g><g><title>__init__ (queue.py) (1 samples, 0.29%)</title><rect x="1166" y="180" width="3" height="15" fill="rgb(232,207,1)"/><text x="1169.00" y="190.50"></text></g><g><title>__init__ (threading.py) (1 samples, 0.29%)</title><rect x="1166" y="196" width="3" height="15" fill="rgb(217,208,49)"/><text x="1169.00" y="206.50"></text></g><g><title>0x7f5b974ff9c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="1172" y="180" width="4" height="15" fill="rgb(222,158,42)"/><text x="1175.00" y="190.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py) (3 samples, 0.87%)</title><rect x="1169" y="164" width="10" height="15" fill="rgb(209,222,7)"/><text x="1172.00" y="174.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (1 samples, 0.29%)</title><rect x="1176" y="180" width="3" height="15" fill="rgb(231,144,49)"/><text x="1179.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.29%)</title><rect x="1176" y="196" width="3" height="15" fill="rgb(226,17,24)"/><text x="1179.00" y="206.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (1 samples, 0.29%)</title><rect x="1176" y="212" width="3" height="15" fill="rgb(224,139,3)"/><text x="1179.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.29%)</title><rect x="1176" y="228" width="3" height="15" fill="rgb(230,139,9)"/><text x="1179.00" y="238.50"></text></g><g><title>profile_skl (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (167 samples, 48.41%)</title><rect x="611" y="68" width="572" height="15" fill="rgb(247,51,11)"/><text x="614.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (167 samples, 48.41%)</title><rect x="611" y="84" width="572" height="15" fill="rgb(245,167,5)"/><text x="614.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py)</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (167 samples, 48.41%)</title><rect x="611" y="100" width="572" height="15" fill="rgb(207,87,13)"/><text x="614.00" y="110.50">profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (167 samples, 48.41%)</title><rect x="611" y="116" width="572" height="15" fill="rgb(210,32,42)"/><text x="614.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (167 samples, 48.41%)</title><rect x="611" y="132" width="572" height="15" fill="rgb(205,18,47)"/><text x="614.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/ensemble/_forest.py) (167 samples, 48.41%)</title><rect x="611" y="148" width="572" height="15" fill="rgb(206,117,10)"/><text x="614.00" y="158.50">predict (sklearn/ensemble/_forest.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.29%)</title><rect x="1179" y="164" width="4" height="15" fill="rgb(207,87,15)"/><text x="1182.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.29%)</title><rect x="1179" y="180" width="4" height="15" fill="rgb(219,181,0)"/><text x="1182.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py) (1 samples, 0.29%)</title><rect x="1183" y="132" width="3" height="15" fill="rgb(230,223,1)"/><text x="1186.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (1 samples, 0.29%)</title><rect x="1183" y="148" width="3" height="15" fill="rgb(250,110,51)"/><text x="1186.00" y="158.50"></text></g><g><title>clone (sklearn/base.py) (1 samples, 0.29%)</title><rect x="1183" y="164" width="3" height="15" fill="rgb(229,140,31)"/><text x="1186.00" y="174.50"></text></g><g><title>clone (sklearn/base.py) (1 samples, 0.29%)</title><rect x="1183" y="180" width="3" height="15" fill="rgb(206,43,1)"/><text x="1186.00" y="190.50"></text></g><g><title>deepcopy (copy.py) (1 samples, 0.29%)</title><rect x="1183" y="196" width="3" height="15" fill="rgb(246,119,10)"/><text x="1186.00" y="206.50"></text></g><g><title>all (345 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(208,192,12)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (345 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(220,210,31)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py)</text></g><g><title>start (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py) (2 samples, 0.58%)</title><rect x="1183" y="68" width="7" height="15" fill="rgb(235,69,16)"/><text x="1186.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py) (2 samples, 0.58%)</title><rect x="1183" y="84" width="7" height="15" fill="rgb(229,97,39)"/><text x="1186.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.58%)</title><rect x="1183" y="100" width="7" height="15" fill="rgb(209,105,31)"/><text x="1186.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py) (2 samples, 0.58%)</title><rect x="1183" y="116" width="7" height="15" fill="rgb(213,192,46)"/><text x="1186.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py) (1 samples, 0.29%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(241,70,30)"/><text x="1189.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (1 samples, 0.29%)</title><rect x="1186" y="148" width="4" height="15" fill="rgb(226,83,52)"/><text x="1189.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py) (1 samples, 0.29%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(223,143,41)"/><text x="1189.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (1 samples, 0.29%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(241,150,27)"/><text x="1189.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.29%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(214,211,13)"/><text x="1189.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py) (1 samples, 0.29%)</title><rect x="1186" y="212" width="4" height="15" fill="rgb(223,217,13)"/><text x="1189.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (1 samples, 0.29%)</title><rect x="1186" y="228" width="4" height="15" fill="rgb(208,103,46)"/><text x="1189.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py) (1 samples, 0.29%)</title><rect x="1186" y="244" width="4" height="15" fill="rgb(234,166,13)"/><text x="1189.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.29%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(207,130,41)"/><text x="1189.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.29%)</title><rect x="1186" y="276" width="4" height="15" fill="rgb(213,0,25)"/><text x="1189.00" y="286.50"></text></g><g><title>0x7f5b71d14b11 (?) (1 samples, 0.29%)</title><rect x="1186" y="292" width="4" height="15" fill="rgb(245,197,42)"/><text x="1189.00" y="302.50"></text></g><g><title>0x7f5b71d4610a (?) (1 samples, 0.29%)</title><rect x="1186" y="308" width="4" height="15" fill="rgb(245,180,38)"/><text x="1189.00" y="318.50"></text></g><g><title>0x7f5b71f71d8c (?) (1 samples, 0.29%)</title><rect x="1186" y="324" width="4" height="15" fill="rgb(230,48,48)"/><text x="1189.00" y="334.50"></text></g><g><title>0x7f5b71f6ad50 (?) (1 samples, 0.29%)</title><rect x="1186" y="340" width="4" height="15" fill="rgb(208,127,37)"/><text x="1189.00" y="350.50"></text></g><g><title>0x7f5b71f6ad50 (?) (1 samples, 0.29%)</title><rect x="1186" y="356" width="4" height="15" fill="rgb(234,55,29)"/><text x="1189.00" y="366.50"></text></g><g><title>0x7f5b71f6aec5 (?) (1 samples, 0.29%)</title><rect x="1186" y="372" width="4" height="15" fill="rgb(247,9,46)"/><text x="1189.00" y="382.50"></text></g></g></svg>