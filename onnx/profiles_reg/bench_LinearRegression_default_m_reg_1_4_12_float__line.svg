<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1990" onload="init(evt)" viewBox="0 0 1200 1990" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1990" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1973.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1973.00"> </text><g id="frames"><g><title>_by_version (pkg_resources/__init__.py:2030) (1 samples, 0.30%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(235,205,13)"/><text x="13.00" y="958.50"></text></g><g><title>splitext (posixpath.py:129) (1 samples, 0.30%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(230,55,30)"/><text x="13.00" y="974.50"></text></g><g><title>_splitext (genericpath.py:133) (1 samples, 0.30%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(248,215,26)"/><text x="13.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.60%)</title><rect x="10" y="852" width="7" height="15" fill="rgb(247,3,43)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.60%)</title><rect x="10" y="868" width="7" height="15" fill="rgb(222,205,14)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.60%)</title><rect x="10" y="884" width="7" height="15" fill="rgb(211,191,25)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.60%)</title><rect x="10" y="900" width="7" height="15" fill="rgb(216,200,21)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.60%)</title><rect x="10" y="916" width="7" height="15" fill="rgb(239,70,30)"/><text x="13.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.60%)</title><rect x="10" y="932" width="7" height="15" fill="rgb(211,37,12)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.30%)</title><rect x="13" y="948" width="4" height="15" fill="rgb(232,163,8)"/><text x="16.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.30%)</title><rect x="13" y="964" width="4" height="15" fill="rgb(228,51,6)"/><text x="16.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.30%)</title><rect x="13" y="980" width="4" height="15" fill="rgb(233,20,15)"/><text x="16.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.30%)</title><rect x="13" y="996" width="4" height="15" fill="rgb(206,17,40)"/><text x="16.00" y="1006.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.30%)</title><rect x="13" y="1012" width="4" height="15" fill="rgb(219,91,48)"/><text x="16.00" y="1022.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.30%)</title><rect x="17" y="964" width="3" height="15" fill="rgb(213,40,43)"/><text x="20.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.60%)</title><rect x="17" y="852" width="7" height="15" fill="rgb(209,48,42)"/><text x="20.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.60%)</title><rect x="17" y="868" width="7" height="15" fill="rgb(238,24,42)"/><text x="20.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.60%)</title><rect x="17" y="884" width="7" height="15" fill="rgb(208,52,39)"/><text x="20.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.60%)</title><rect x="17" y="900" width="7" height="15" fill="rgb(237,90,52)"/><text x="20.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.60%)</title><rect x="17" y="916" width="7" height="15" fill="rgb(236,67,42)"/><text x="20.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.60%)</title><rect x="17" y="932" width="7" height="15" fill="rgb(205,151,49)"/><text x="20.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.60%)</title><rect x="17" y="948" width="7" height="15" fill="rgb(242,223,45)"/><text x="20.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1390) (1 samples, 0.30%)</title><rect x="20" y="964" width="4" height="15" fill="rgb(224,53,0)"/><text x="23.00" y="974.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py:48) (1 samples, 0.30%)</title><rect x="24" y="916" width="3" height="15" fill="rgb(211,27,37)"/><text x="27.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:69) (1 samples, 0.30%)</title><rect x="24" y="932" width="3" height="15" fill="rgb(233,157,3)"/><text x="27.00" y="942.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.60%)</title><rect x="24" y="884" width="7" height="15" fill="rgb(213,138,31)"/><text x="27.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.60%)</title><rect x="24" y="900" width="7" height="15" fill="rgb(221,211,43)"/><text x="27.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.30%)</title><rect x="27" y="916" width="4" height="15" fill="rgb(238,14,24)"/><text x="30.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.30%)</title><rect x="27" y="932" width="4" height="15" fill="rgb(253,31,29)"/><text x="30.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.30%)</title><rect x="27" y="948" width="4" height="15" fill="rgb(230,124,54)"/><text x="30.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:202) (1 samples, 0.30%)</title><rect x="27" y="964" width="4" height="15" fill="rgb(232,176,30)"/><text x="30.00" y="974.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.30%)</title><rect x="31" y="900" width="3" height="15" fill="rgb(215,113,48)"/><text x="34.00" y="910.50"></text></g><g><title>isdir (genericpath.py:42) (1 samples, 0.30%)</title><rect x="31" y="916" width="3" height="15" fill="rgb(244,40,44)"/><text x="34.00" y="926.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.30%)</title><rect x="31" y="932" width="3" height="15" fill="rgb(207,223,29)"/><text x="34.00" y="942.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2133) (1 samples, 0.30%)</title><rect x="34" y="900" width="4" height="15" fill="rgb(220,192,22)"/><text x="37.00" y="910.50"></text></g><g><title>basename (posixpath.py:149) (1 samples, 0.30%)</title><rect x="34" y="916" width="4" height="15" fill="rgb(235,132,48)"/><text x="37.00" y="926.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.30%)</title><rect x="34" y="932" width="4" height="15" fill="rgb(210,203,28)"/><text x="37.00" y="942.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py:2) (9 samples, 2.68%)</title><rect x="10" y="148" width="31" height="15" fill="rgb(217,1,42)"/><text x="13.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.68%)</title><rect x="10" y="164" width="31" height="15" fill="rgb(227,93,51)"/><text x="13.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 2.68%)</title><rect x="10" y="180" width="31" height="15" fill="rgb(253,163,16)"/><text x="13.00" y="190.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.68%)</title><rect x="10" y="196" width="31" height="15" fill="rgb(250,14,38)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.68%)</title><rect x="10" y="212" width="31" height="15" fill="rgb(219,128,3)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.68%)</title><rect x="10" y="228" width="31" height="15" fill="rgb(245,120,31)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.68%)</title><rect x="10" y="244" width="31" height="15" fill="rgb(234,119,34)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.68%)</title><rect x="10" y="260" width="31" height="15" fill="rgb(252,46,7)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.68%)</title><rect x="10" y="276" width="31" height="15" fill="rgb(251,120,29)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (9 samples, 2.68%)</title><rect x="10" y="292" width="31" height="15" fill="rgb(234,114,3)"/><text x="13.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.68%)</title><rect x="10" y="308" width="31" height="15" fill="rgb(221,71,33)"/><text x="13.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.68%)</title><rect x="10" y="324" width="31" height="15" fill="rgb(220,189,2)"/><text x="13.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.68%)</title><rect x="10" y="340" width="31" height="15" fill="rgb(222,11,1)"/><text x="13.00" y="350.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.68%)</title><rect x="10" y="356" width="31" height="15" fill="rgb(243,47,51)"/><text x="13.00" y="366.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.68%)</title><rect x="10" y="372" width="31" height="15" fill="rgb(238,81,45)"/><text x="13.00" y="382.50">_c..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (9 samples, 2.68%)</title><rect x="10" y="388" width="31" height="15" fill="rgb(253,149,30)"/><text x="13.00" y="398.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.68%)</title><rect x="10" y="404" width="31" height="15" fill="rgb(253,224,27)"/><text x="13.00" y="414.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.68%)</title><rect x="10" y="420" width="31" height="15" fill="rgb(206,63,44)"/><text x="13.00" y="430.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.68%)</title><rect x="10" y="436" width="31" height="15" fill="rgb(213,73,54)"/><text x="13.00" y="446.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.68%)</title><rect x="10" y="452" width="31" height="15" fill="rgb(231,209,47)"/><text x="13.00" y="462.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.68%)</title><rect x="10" y="468" width="31" height="15" fill="rgb(214,63,48)"/><text x="13.00" y="478.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (9 samples, 2.68%)</title><rect x="10" y="484" width="31" height="15" fill="rgb(229,154,6)"/><text x="13.00" y="494.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.68%)</title><rect x="10" y="500" width="31" height="15" fill="rgb(211,69,46)"/><text x="13.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.68%)</title><rect x="10" y="516" width="31" height="15" fill="rgb(215,186,54)"/><text x="13.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.68%)</title><rect x="10" y="532" width="31" height="15" fill="rgb(241,153,12)"/><text x="13.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.68%)</title><rect x="10" y="548" width="31" height="15" fill="rgb(212,54,40)"/><text x="13.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.68%)</title><rect x="10" y="564" width="31" height="15" fill="rgb(250,109,14)"/><text x="13.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (9 samples, 2.68%)</title><rect x="10" y="580" width="31" height="15" fill="rgb(245,18,50)"/><text x="13.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.68%)</title><rect x="10" y="596" width="31" height="15" fill="rgb(239,207,35)"/><text x="13.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 2.68%)</title><rect x="10" y="612" width="31" height="15" fill="rgb(237,171,52)"/><text x="13.00" y="622.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.68%)</title><rect x="10" y="628" width="31" height="15" fill="rgb(230,184,2)"/><text x="13.00" y="638.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.68%)</title><rect x="10" y="644" width="31" height="15" fill="rgb(212,25,27)"/><text x="13.00" y="654.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.68%)</title><rect x="10" y="660" width="31" height="15" fill="rgb(217,182,19)"/><text x="13.00" y="670.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.68%)</title><rect x="10" y="676" width="31" height="15" fill="rgb(249,2,41)"/><text x="13.00" y="686.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.68%)</title><rect x="10" y="692" width="31" height="15" fill="rgb(215,64,33)"/><text x="13.00" y="702.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.68%)</title><rect x="10" y="708" width="31" height="15" fill="rgb(240,58,50)"/><text x="13.00" y="718.50">_c..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (9 samples, 2.68%)</title><rect x="10" y="724" width="31" height="15" fill="rgb(226,7,17)"/><text x="13.00" y="734.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.68%)</title><rect x="10" y="740" width="31" height="15" fill="rgb(247,130,52)"/><text x="13.00" y="750.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.68%)</title><rect x="10" y="756" width="31" height="15" fill="rgb(244,0,1)"/><text x="13.00" y="766.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.68%)</title><rect x="10" y="772" width="31" height="15" fill="rgb(251,27,40)"/><text x="13.00" y="782.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.68%)</title><rect x="10" y="788" width="31" height="15" fill="rgb(225,99,21)"/><text x="13.00" y="798.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.68%)</title><rect x="10" y="804" width="31" height="15" fill="rgb(233,223,2)"/><text x="13.00" y="814.50">_c..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (9 samples, 2.68%)</title><rect x="10" y="820" width="31" height="15" fill="rgb(227,22,39)"/><text x="13.00" y="830.50">&lt;m..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (9 samples, 2.68%)</title><rect x="10" y="836" width="31" height="15" fill="rgb(249,40,22)"/><text x="13.00" y="846.50">_c..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (5 samples, 1.49%)</title><rect x="24" y="852" width="17" height="15" fill="rgb(249,47,27)"/><text x="27.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (5 samples, 1.49%)</title><rect x="24" y="868" width="17" height="15" fill="rgb(206,228,16)"/><text x="27.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (3 samples, 0.89%)</title><rect x="31" y="884" width="10" height="15" fill="rgb(226,67,6)"/><text x="34.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.30%)</title><rect x="38" y="900" width="3" height="15" fill="rgb(225,140,31)"/><text x="41.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.30%)</title><rect x="38" y="916" width="3" height="15" fill="rgb(237,150,25)"/><text x="41.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.30%)</title><rect x="38" y="932" width="3" height="15" fill="rgb(246,212,25)"/><text x="41.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.30%)</title><rect x="38" y="948" width="3" height="15" fill="rgb(245,100,9)"/><text x="41.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.30%)</title><rect x="38" y="964" width="3" height="15" fill="rgb(245,74,52)"/><text x="41.00" y="974.50"></text></g><g><title>unicode_split (python3.7) (1 samples, 0.30%)</title><rect x="38" y="980" width="3" height="15" fill="rgb(243,218,39)"/><text x="41.00" y="990.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:18) (1 samples, 0.30%)</title><rect x="41" y="484" width="4" height="15" fill="rgb(211,114,10)"/><text x="44.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="41" y="500" width="4" height="15" fill="rgb(206,57,48)"/><text x="44.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.30%)</title><rect x="41" y="516" width="4" height="15" fill="rgb(233,19,37)"/><text x="44.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="41" y="532" width="4" height="15" fill="rgb(207,101,14)"/><text x="44.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="41" y="548" width="4" height="15" fill="rgb(225,138,52)"/><text x="44.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="41" y="564" width="4" height="15" fill="rgb(239,112,28)"/><text x="44.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="41" y="580" width="4" height="15" fill="rgb(221,20,25)"/><text x="44.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="41" y="596" width="4" height="15" fill="rgb(213,32,29)"/><text x="44.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="41" y="612" width="4" height="15" fill="rgb(244,32,13)"/><text x="44.00" y="622.50"></text></g><g><title>&lt;module&gt; (scipy/__init__.py:102) (1 samples, 0.30%)</title><rect x="41" y="628" width="4" height="15" fill="rgb(230,25,3)"/><text x="44.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="41" y="644" width="4" height="15" fill="rgb(244,9,30)"/><text x="44.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.30%)</title><rect x="41" y="660" width="4" height="15" fill="rgb(221,142,9)"/><text x="44.00" y="670.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.30%)</title><rect x="41" y="676" width="4" height="15" fill="rgb(211,97,39)"/><text x="44.00" y="686.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.30%)</title><rect x="41" y="692" width="4" height="15" fill="rgb(236,39,29)"/><text x="44.00" y="702.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.30%)</title><rect x="41" y="708" width="4" height="15" fill="rgb(246,99,53)"/><text x="44.00" y="718.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.30%)</title><rect x="41" y="724" width="4" height="15" fill="rgb(228,165,54)"/><text x="44.00" y="734.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.30%)</title><rect x="41" y="740" width="4" height="15" fill="rgb(221,0,42)"/><text x="44.00" y="750.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.30%)</title><rect x="41" y="756" width="4" height="15" fill="rgb(211,176,16)"/><text x="44.00" y="766.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.30%)</title><rect x="41" y="772" width="4" height="15" fill="rgb(235,81,51)"/><text x="44.00" y="782.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.30%)</title><rect x="45" y="484" width="3" height="15" fill="rgb(239,41,42)"/><text x="48.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="45" y="500" width="3" height="15" fill="rgb(246,227,2)"/><text x="48.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="45" y="516" width="3" height="15" fill="rgb(209,123,41)"/><text x="48.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="45" y="532" width="3" height="15" fill="rgb(213,53,15)"/><text x="48.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="45" y="548" width="3" height="15" fill="rgb(218,4,44)"/><text x="48.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="45" y="564" width="3" height="15" fill="rgb(223,124,5)"/><text x="48.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="45" y="580" width="3" height="15" fill="rgb(221,88,32)"/><text x="48.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="45" y="596" width="3" height="15" fill="rgb(232,127,12)"/><text x="48.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.30%)</title><rect x="45" y="612" width="3" height="15" fill="rgb(218,135,18)"/><text x="48.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="45" y="628" width="3" height="15" fill="rgb(226,161,13)"/><text x="48.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="45" y="644" width="3" height="15" fill="rgb(215,195,1)"/><text x="48.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="45" y="660" width="3" height="15" fill="rgb(247,32,42)"/><text x="48.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="45" y="676" width="3" height="15" fill="rgb(230,14,16)"/><text x="48.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="45" y="692" width="3" height="15" fill="rgb(227,10,54)"/><text x="48.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:113) (1 samples, 0.30%)</title><rect x="45" y="708" width="3" height="15" fill="rgb(221,65,51)"/><text x="48.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="45" y="724" width="3" height="15" fill="rgb(251,155,33)"/><text x="48.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="45" y="740" width="3" height="15" fill="rgb(250,41,10)"/><text x="48.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="45" y="756" width="3" height="15" fill="rgb(253,66,35)"/><text x="48.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="45" y="772" width="3" height="15" fill="rgb(233,15,5)"/><text x="48.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="45" y="788" width="3" height="15" fill="rgb(224,215,26)"/><text x="48.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py:32) (1 samples, 0.30%)</title><rect x="45" y="804" width="3" height="15" fill="rgb(252,36,54)"/><text x="48.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="45" y="820" width="3" height="15" fill="rgb(239,128,48)"/><text x="48.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="45" y="836" width="3" height="15" fill="rgb(209,48,12)"/><text x="48.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="45" y="852" width="3" height="15" fill="rgb(210,192,23)"/><text x="48.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="45" y="868" width="3" height="15" fill="rgb(216,27,0)"/><text x="48.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="45" y="884" width="3" height="15" fill="rgb(254,125,4)"/><text x="48.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py:18) (1 samples, 0.30%)</title><rect x="45" y="900" width="3" height="15" fill="rgb(213,209,54)"/><text x="48.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="45" y="916" width="3" height="15" fill="rgb(216,46,37)"/><text x="48.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="45" y="932" width="3" height="15" fill="rgb(243,215,51)"/><text x="48.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="45" y="948" width="3" height="15" fill="rgb(251,126,40)"/><text x="48.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="45" y="964" width="3" height="15" fill="rgb(234,173,29)"/><text x="48.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="45" y="980" width="3" height="15" fill="rgb(226,9,8)"/><text x="48.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.30%)</title><rect x="45" y="996" width="3" height="15" fill="rgb(216,181,14)"/><text x="48.00" y="1006.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.30%)</title><rect x="45" y="1012" width="3" height="15" fill="rgb(241,196,18)"/><text x="48.00" y="1022.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.30%)</title><rect x="45" y="1028" width="3" height="15" fill="rgb(231,156,52)"/><text x="48.00" y="1038.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (1 samples, 0.30%)</title><rect x="48" y="772" width="4" height="15" fill="rgb(228,188,29)"/><text x="51.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="48" y="788" width="4" height="15" fill="rgb(231,198,37)"/><text x="51.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="48" y="804" width="4" height="15" fill="rgb(209,121,27)"/><text x="51.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="48" y="820" width="4" height="15" fill="rgb(254,105,8)"/><text x="51.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="48" y="836" width="4" height="15" fill="rgb(223,200,0)"/><text x="51.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="48" y="852" width="4" height="15" fill="rgb(231,197,10)"/><text x="51.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py:641) (1 samples, 0.30%)</title><rect x="48" y="868" width="4" height="15" fill="rgb(233,176,47)"/><text x="51.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="48" y="884" width="4" height="15" fill="rgb(207,159,23)"/><text x="51.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="48" y="900" width="4" height="15" fill="rgb(235,98,17)"/><text x="51.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="48" y="916" width="4" height="15" fill="rgb(240,32,46)"/><text x="51.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.30%)</title><rect x="48" y="932" width="4" height="15" fill="rgb(242,147,43)"/><text x="51.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="48" y="948" width="4" height="15" fill="rgb(254,151,11)"/><text x="51.00" y="958.50"></text></g><g><title>0x7f07d29fb65b (?) (1 samples, 0.30%)</title><rect x="48" y="964" width="4" height="15" fill="rgb(252,195,21)"/><text x="51.00" y="974.50"></text></g><g><title>0x7f07d29f9568 (?) (1 samples, 0.30%)</title><rect x="48" y="980" width="4" height="15" fill="rgb(237,113,51)"/><text x="51.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:4189) (1 samples, 0.30%)</title><rect x="52" y="1028" width="3" height="15" fill="rgb(235,229,45)"/><text x="55.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.30%)</title><rect x="52" y="1044" width="3" height="15" fill="rgb(214,189,7)"/><text x="55.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:737) (1 samples, 0.30%)</title><rect x="52" y="1060" width="3" height="15" fill="rgb(244,97,48)"/><text x="55.00" y="1070.50"></text></g><g><title>unicode_replace (python3.7) (1 samples, 0.30%)</title><rect x="52" y="1076" width="3" height="15" fill="rgb(234,57,30)"/><text x="55.00" y="1086.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py:4) (5 samples, 1.49%)</title><rect x="41" y="148" width="18" height="15" fill="rgb(220,25,8)"/><text x="44.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.49%)</title><rect x="41" y="164" width="18" height="15" fill="rgb(216,222,31)"/><text x="44.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.49%)</title><rect x="41" y="180" width="18" height="15" fill="rgb(216,220,9)"/><text x="44.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.49%)</title><rect x="41" y="196" width="18" height="15" fill="rgb(243,103,16)"/><text x="44.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.49%)</title><rect x="41" y="212" width="18" height="15" fill="rgb(206,211,42)"/><text x="44.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.49%)</title><rect x="41" y="228" width="18" height="15" fill="rgb(218,105,0)"/><text x="44.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.49%)</title><rect x="41" y="244" width="18" height="15" fill="rgb(251,92,21)"/><text x="44.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.49%)</title><rect x="41" y="260" width="18" height="15" fill="rgb(227,153,0)"/><text x="44.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.49%)</title><rect x="41" y="276" width="18" height="15" fill="rgb(235,25,31)"/><text x="44.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (5 samples, 1.49%)</title><rect x="41" y="292" width="18" height="15" fill="rgb(239,54,38)"/><text x="44.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.49%)</title><rect x="41" y="308" width="18" height="15" fill="rgb(240,169,27)"/><text x="44.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.49%)</title><rect x="41" y="324" width="18" height="15" fill="rgb(207,144,33)"/><text x="44.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.49%)</title><rect x="41" y="340" width="18" height="15" fill="rgb(254,222,13)"/><text x="44.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.49%)</title><rect x="41" y="356" width="18" height="15" fill="rgb(222,173,31)"/><text x="44.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.49%)</title><rect x="41" y="372" width="18" height="15" fill="rgb(226,110,7)"/><text x="44.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (5 samples, 1.49%)</title><rect x="41" y="388" width="18" height="15" fill="rgb(233,209,3)"/><text x="44.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.49%)</title><rect x="41" y="404" width="18" height="15" fill="rgb(222,47,0)"/><text x="44.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.49%)</title><rect x="41" y="420" width="18" height="15" fill="rgb(238,138,33)"/><text x="44.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.49%)</title><rect x="41" y="436" width="18" height="15" fill="rgb(254,161,36)"/><text x="44.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.49%)</title><rect x="41" y="452" width="18" height="15" fill="rgb(217,26,8)"/><text x="44.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.49%)</title><rect x="41" y="468" width="18" height="15" fill="rgb(251,97,29)"/><text x="44.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (3 samples, 0.89%)</title><rect x="48" y="484" width="11" height="15" fill="rgb(218,171,4)"/><text x="51.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.89%)</title><rect x="48" y="500" width="11" height="15" fill="rgb(246,42,18)"/><text x="51.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.89%)</title><rect x="48" y="516" width="11" height="15" fill="rgb(233,44,10)"/><text x="51.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.89%)</title><rect x="48" y="532" width="11" height="15" fill="rgb(225,110,14)"/><text x="51.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.89%)</title><rect x="48" y="548" width="11" height="15" fill="rgb(218,202,31)"/><text x="51.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.89%)</title><rect x="48" y="564" width="11" height="15" fill="rgb(215,227,49)"/><text x="51.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (3 samples, 0.89%)</title><rect x="48" y="580" width="11" height="15" fill="rgb(208,168,40)"/><text x="51.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.89%)</title><rect x="48" y="596" width="11" height="15" fill="rgb(208,41,53)"/><text x="51.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.89%)</title><rect x="48" y="612" width="11" height="15" fill="rgb(230,41,34)"/><text x="51.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.89%)</title><rect x="48" y="628" width="11" height="15" fill="rgb(233,22,47)"/><text x="51.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.89%)</title><rect x="48" y="644" width="11" height="15" fill="rgb(218,93,38)"/><text x="51.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.89%)</title><rect x="48" y="660" width="11" height="15" fill="rgb(205,88,35)"/><text x="51.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (3 samples, 0.89%)</title><rect x="48" y="676" width="11" height="15" fill="rgb(215,115,42)"/><text x="51.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.89%)</title><rect x="48" y="692" width="11" height="15" fill="rgb(211,205,39)"/><text x="51.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.89%)</title><rect x="48" y="708" width="11" height="15" fill="rgb(229,49,9)"/><text x="51.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.89%)</title><rect x="48" y="724" width="11" height="15" fill="rgb(205,133,19)"/><text x="51.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.89%)</title><rect x="48" y="740" width="11" height="15" fill="rgb(231,173,49)"/><text x="51.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.89%)</title><rect x="48" y="756" width="11" height="15" fill="rgb(221,139,1)"/><text x="51.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.60%)</title><rect x="52" y="772" width="7" height="15" fill="rgb(208,45,29)"/><text x="55.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.60%)</title><rect x="52" y="788" width="7" height="15" fill="rgb(243,199,54)"/><text x="55.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="52" y="804" width="7" height="15" fill="rgb(221,119,40)"/><text x="55.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="52" y="820" width="7" height="15" fill="rgb(230,155,52)"/><text x="55.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="52" y="836" width="7" height="15" fill="rgb(225,133,2)"/><text x="55.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="52" y="852" width="7" height="15" fill="rgb(206,135,23)"/><text x="55.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="52" y="868" width="7" height="15" fill="rgb(214,91,47)"/><text x="55.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="52" y="884" width="7" height="15" fill="rgb(214,197,26)"/><text x="55.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (2 samples, 0.60%)</title><rect x="52" y="900" width="7" height="15" fill="rgb(206,201,52)"/><text x="55.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.60%)</title><rect x="52" y="916" width="7" height="15" fill="rgb(243,31,4)"/><text x="55.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="52" y="932" width="7" height="15" fill="rgb(210,88,38)"/><text x="55.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="52" y="948" width="7" height="15" fill="rgb(249,113,3)"/><text x="55.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="52" y="964" width="7" height="15" fill="rgb(254,42,42)"/><text x="55.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="52" y="980" width="7" height="15" fill="rgb(215,132,1)"/><text x="55.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="52" y="996" width="7" height="15" fill="rgb(208,55,52)"/><text x="55.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="52" y="1012" width="7" height="15" fill="rgb(251,174,30)"/><text x="55.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:4943) (1 samples, 0.30%)</title><rect x="55" y="1028" width="4" height="15" fill="rgb(241,70,54)"/><text x="58.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.30%)</title><rect x="55" y="1044" width="4" height="15" fill="rgb(253,229,52)"/><text x="58.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.30%)</title><rect x="55" y="1060" width="4" height="15" fill="rgb(219,17,20)"/><text x="58.00" y="1070.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.30%)</title><rect x="59" y="772" width="3" height="15" fill="rgb(227,121,13)"/><text x="62.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="59" y="788" width="3" height="15" fill="rgb(237,174,7)"/><text x="62.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="59" y="804" width="3" height="15" fill="rgb(222,11,43)"/><text x="62.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="59" y="820" width="3" height="15" fill="rgb(222,170,6)"/><text x="62.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="59" y="836" width="3" height="15" fill="rgb(238,228,12)"/><text x="62.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="59" y="852" width="3" height="15" fill="rgb(240,31,43)"/><text x="62.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.30%)</title><rect x="59" y="868" width="3" height="15" fill="rgb(240,172,46)"/><text x="62.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="59" y="884" width="3" height="15" fill="rgb(220,70,33)"/><text x="62.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="59" y="900" width="3" height="15" fill="rgb(227,195,50)"/><text x="62.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="59" y="916" width="3" height="15" fill="rgb(210,52,14)"/><text x="62.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="59" y="932" width="3" height="15" fill="rgb(248,113,28)"/><text x="62.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="59" y="948" width="3" height="15" fill="rgb(231,67,31)"/><text x="62.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:38) (1 samples, 0.30%)</title><rect x="59" y="964" width="3" height="15" fill="rgb(222,68,6)"/><text x="62.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="59" y="980" width="3" height="15" fill="rgb(240,55,13)"/><text x="62.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="59" y="996" width="3" height="15" fill="rgb(249,3,18)"/><text x="62.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="59" y="1012" width="3" height="15" fill="rgb(221,81,32)"/><text x="62.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="59" y="1028" width="3" height="15" fill="rgb(206,225,39)"/><text x="62.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="59" y="1044" width="3" height="15" fill="rgb(243,194,44)"/><text x="62.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/request.py:3) (1 samples, 0.30%)</title><rect x="59" y="1060" width="3" height="15" fill="rgb(235,212,33)"/><text x="62.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="59" y="1076" width="3" height="15" fill="rgb(232,200,19)"/><text x="62.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="59" y="1092" width="3" height="15" fill="rgb(223,222,19)"/><text x="62.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="59" y="1108" width="3" height="15" fill="rgb(235,0,40)"/><text x="62.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="59" y="1124" width="3" height="15" fill="rgb(224,84,5)"/><text x="62.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="59" y="1140" width="3" height="15" fill="rgb(229,181,49)"/><text x="62.00" y="1150.50"></text></g><g><title>&lt;module&gt; (urllib3/filepost.py:10) (1 samples, 0.30%)</title><rect x="59" y="1156" width="3" height="15" fill="rgb(209,102,25)"/><text x="62.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="59" y="1172" width="3" height="15" fill="rgb(207,141,17)"/><text x="62.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="59" y="1188" width="3" height="15" fill="rgb(228,41,42)"/><text x="62.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="59" y="1204" width="3" height="15" fill="rgb(230,65,42)"/><text x="62.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="59" y="1220" width="3" height="15" fill="rgb(225,198,33)"/><text x="62.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="59" y="1236" width="3" height="15" fill="rgb(252,109,14)"/><text x="62.00" y="1246.50"></text></g><g><title>&lt;module&gt; (urllib3/fields.py:3) (1 samples, 0.30%)</title><rect x="59" y="1252" width="3" height="15" fill="rgb(251,160,16)"/><text x="62.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="59" y="1268" width="3" height="15" fill="rgb(217,87,36)"/><text x="62.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="59" y="1284" width="3" height="15" fill="rgb(215,203,3)"/><text x="62.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="59" y="1300" width="3" height="15" fill="rgb(217,4,30)"/><text x="62.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.30%)</title><rect x="59" y="1316" width="3" height="15" fill="rgb(252,114,15)"/><text x="62.00" y="1326.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.30%)</title><rect x="59" y="1332" width="3" height="15" fill="rgb(250,208,24)"/><text x="62.00" y="1342.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.30%)</title><rect x="59" y="1348" width="3" height="15" fill="rgb(250,204,29)"/><text x="62.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.30%)</title><rect x="62" y="868" width="4" height="15" fill="rgb(246,219,6)"/><text x="65.00" y="878.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.30%)</title><rect x="62" y="884" width="4" height="15" fill="rgb(249,38,7)"/><text x="65.00" y="894.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.30%)</title><rect x="62" y="900" width="4" height="15" fill="rgb(207,152,13)"/><text x="65.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.30%)</title><rect x="66" y="1140" width="3" height="15" fill="rgb(236,11,4)"/><text x="69.00" y="1150.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.30%)</title><rect x="66" y="1156" width="3" height="15" fill="rgb(244,59,32)"/><text x="69.00" y="1166.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.30%)</title><rect x="66" y="1172" width="3" height="15" fill="rgb(235,112,11)"/><text x="69.00" y="1182.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (4 samples, 1.19%)</title><rect x="59" y="244" width="14" height="15" fill="rgb(209,214,17)"/><text x="62.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.19%)</title><rect x="59" y="260" width="14" height="15" fill="rgb(216,114,25)"/><text x="62.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.19%)</title><rect x="59" y="276" width="14" height="15" fill="rgb(231,178,53)"/><text x="62.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.19%)</title><rect x="59" y="292" width="14" height="15" fill="rgb(221,204,30)"/><text x="62.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.19%)</title><rect x="59" y="308" width="14" height="15" fill="rgb(254,144,34)"/><text x="62.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="59" y="324" width="14" height="15" fill="rgb(226,188,25)"/><text x="62.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (4 samples, 1.19%)</title><rect x="59" y="340" width="14" height="15" fill="rgb(210,151,26)"/><text x="62.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.19%)</title><rect x="59" y="356" width="14" height="15" fill="rgb(222,22,3)"/><text x="62.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.19%)</title><rect x="59" y="372" width="14" height="15" fill="rgb(219,214,30)"/><text x="62.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="59" y="388" width="14" height="15" fill="rgb(218,119,11)"/><text x="62.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.19%)</title><rect x="59" y="404" width="14" height="15" fill="rgb(251,143,2)"/><text x="62.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.19%)</title><rect x="59" y="420" width="14" height="15" fill="rgb(235,100,13)"/><text x="62.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.19%)</title><rect x="59" y="436" width="14" height="15" fill="rgb(214,74,24)"/><text x="62.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.19%)</title><rect x="59" y="452" width="14" height="15" fill="rgb(240,61,47)"/><text x="62.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="59" y="468" width="14" height="15" fill="rgb(253,220,16)"/><text x="62.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (4 samples, 1.19%)</title><rect x="59" y="484" width="14" height="15" fill="rgb(228,122,49)"/><text x="62.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.19%)</title><rect x="59" y="500" width="14" height="15" fill="rgb(214,75,5)"/><text x="62.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.19%)</title><rect x="59" y="516" width="14" height="15" fill="rgb(239,183,20)"/><text x="62.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.19%)</title><rect x="59" y="532" width="14" height="15" fill="rgb(205,150,22)"/><text x="62.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.19%)</title><rect x="59" y="548" width="14" height="15" fill="rgb(218,86,52)"/><text x="62.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="59" y="564" width="14" height="15" fill="rgb(246,164,48)"/><text x="62.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (4 samples, 1.19%)</title><rect x="59" y="580" width="14" height="15" fill="rgb(214,55,35)"/><text x="62.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.19%)</title><rect x="59" y="596" width="14" height="15" fill="rgb(246,212,5)"/><text x="62.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.19%)</title><rect x="59" y="612" width="14" height="15" fill="rgb(246,4,2)"/><text x="62.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.19%)</title><rect x="59" y="628" width="14" height="15" fill="rgb(243,69,11)"/><text x="62.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.19%)</title><rect x="59" y="644" width="14" height="15" fill="rgb(214,120,34)"/><text x="62.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="59" y="660" width="14" height="15" fill="rgb(214,173,40)"/><text x="62.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (4 samples, 1.19%)</title><rect x="59" y="676" width="14" height="15" fill="rgb(237,34,30)"/><text x="62.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.19%)</title><rect x="59" y="692" width="14" height="15" fill="rgb(250,156,28)"/><text x="62.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.19%)</title><rect x="59" y="708" width="14" height="15" fill="rgb(239,220,15)"/><text x="62.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.19%)</title><rect x="59" y="724" width="14" height="15" fill="rgb(245,95,8)"/><text x="62.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.19%)</title><rect x="59" y="740" width="14" height="15" fill="rgb(219,50,37)"/><text x="62.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="59" y="756" width="14" height="15" fill="rgb(246,94,47)"/><text x="62.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (3 samples, 0.89%)</title><rect x="62" y="772" width="11" height="15" fill="rgb(209,203,7)"/><text x="65.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.89%)</title><rect x="62" y="788" width="11" height="15" fill="rgb(212,37,11)"/><text x="65.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.89%)</title><rect x="62" y="804" width="11" height="15" fill="rgb(252,179,50)"/><text x="65.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.89%)</title><rect x="62" y="820" width="11" height="15" fill="rgb(216,33,11)"/><text x="65.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.89%)</title><rect x="62" y="836" width="11" height="15" fill="rgb(215,204,9)"/><text x="65.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.89%)</title><rect x="62" y="852" width="11" height="15" fill="rgb(208,70,27)"/><text x="65.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="66" y="868" width="7" height="15" fill="rgb(230,125,38)"/><text x="69.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="66" y="884" width="7" height="15" fill="rgb(230,61,50)"/><text x="69.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (2 samples, 0.60%)</title><rect x="66" y="900" width="7" height="15" fill="rgb(237,19,41)"/><text x="69.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="66" y="916" width="7" height="15" fill="rgb(248,128,38)"/><text x="69.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.60%)</title><rect x="66" y="932" width="7" height="15" fill="rgb(222,205,37)"/><text x="69.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="66" y="948" width="7" height="15" fill="rgb(227,160,50)"/><text x="69.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="66" y="964" width="7" height="15" fill="rgb(243,166,28)"/><text x="69.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="66" y="980" width="7" height="15" fill="rgb(211,95,41)"/><text x="69.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="66" y="996" width="7" height="15" fill="rgb(247,111,31)"/><text x="69.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="66" y="1012" width="7" height="15" fill="rgb(230,117,25)"/><text x="69.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="66" y="1028" width="7" height="15" fill="rgb(218,226,49)"/><text x="69.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (2 samples, 0.60%)</title><rect x="66" y="1044" width="7" height="15" fill="rgb(210,182,36)"/><text x="69.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.60%)</title><rect x="66" y="1060" width="7" height="15" fill="rgb(234,73,13)"/><text x="69.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="66" y="1076" width="7" height="15" fill="rgb(234,221,41)"/><text x="69.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="66" y="1092" width="7" height="15" fill="rgb(229,206,11)"/><text x="69.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="66" y="1108" width="7" height="15" fill="rgb(254,58,1)"/><text x="69.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="66" y="1124" width="7" height="15" fill="rgb(232,156,38)"/><text x="69.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="69" y="1140" width="4" height="15" fill="rgb(229,197,43)"/><text x="72.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="69" y="1156" width="4" height="15" fill="rgb(220,36,34)"/><text x="72.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:15) (1 samples, 0.30%)</title><rect x="69" y="1172" width="4" height="15" fill="rgb(212,12,2)"/><text x="72.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="69" y="1188" width="4" height="15" fill="rgb(225,151,18)"/><text x="72.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="69" y="1204" width="4" height="15" fill="rgb(227,86,7)"/><text x="72.00" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="69" y="1220" width="4" height="15" fill="rgb(253,110,35)"/><text x="72.00" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="69" y="1236" width="4" height="15" fill="rgb(216,41,32)"/><text x="72.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="69" y="1252" width="4" height="15" fill="rgb(253,102,22)"/><text x="72.00" y="1262.50"></text></g><g><title>&lt;module&gt; (OpenSSL/_util.py:6) (1 samples, 0.30%)</title><rect x="69" y="1268" width="4" height="15" fill="rgb(240,96,54)"/><text x="72.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="69" y="1284" width="4" height="15" fill="rgb(251,118,17)"/><text x="72.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="69" y="1300" width="4" height="15" fill="rgb(240,123,18)"/><text x="72.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="69" y="1316" width="4" height="15" fill="rgb(217,157,22)"/><text x="72.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="69" y="1332" width="4" height="15" fill="rgb(245,192,19)"/><text x="72.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="69" y="1348" width="4" height="15" fill="rgb(246,77,12)"/><text x="72.00" y="1358.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/bindings/openssl/binding.py:195) (1 samples, 0.30%)</title><rect x="69" y="1364" width="4" height="15" fill="rgb(254,82,28)"/><text x="72.00" y="1374.50"></text></g><g><title>init_static_locks (cryptography/hazmat/bindings/openssl/binding.py:139) (1 samples, 0.30%)</title><rect x="69" y="1380" width="4" height="15" fill="rgb(223,228,47)"/><text x="72.00" y="1390.50"></text></g><g><title>_ensure_ffi_initialized (cryptography/hazmat/bindings/openssl/binding.py:126) (1 samples, 0.30%)</title><rect x="69" y="1396" width="4" height="15" fill="rgb(220,68,22)"/><text x="72.00" y="1406.50"></text></g><g><title>build_conditional_library (cryptography/hazmat/bindings/openssl/binding.py:92) (1 samples, 0.30%)</title><rect x="69" y="1412" width="4" height="15" fill="rgb(235,18,10)"/><text x="72.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.30%)</title><rect x="73" y="884" width="3" height="15" fill="rgb(214,223,38)"/><text x="76.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.30%)</title><rect x="73" y="900" width="3" height="15" fill="rgb(248,59,40)"/><text x="76.00" y="910.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.30%)</title><rect x="73" y="916" width="3" height="15" fill="rgb(241,155,28)"/><text x="76.00" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (1 samples, 0.30%)</title><rect x="76" y="964" width="4" height="15" fill="rgb(206,70,30)"/><text x="79.00" y="974.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.89%)</title><rect x="73" y="436" width="10" height="15" fill="rgb(228,207,21)"/><text x="76.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.89%)</title><rect x="73" y="452" width="10" height="15" fill="rgb(247,80,25)"/><text x="76.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.89%)</title><rect x="73" y="468" width="10" height="15" fill="rgb(215,163,51)"/><text x="76.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.89%)</title><rect x="73" y="484" width="10" height="15" fill="rgb(208,122,21)"/><text x="76.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.89%)</title><rect x="73" y="500" width="10" height="15" fill="rgb(224,169,8)"/><text x="76.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.89%)</title><rect x="73" y="516" width="10" height="15" fill="rgb(209,104,36)"/><text x="76.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.89%)</title><rect x="73" y="532" width="10" height="15" fill="rgb(223,144,6)"/><text x="76.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.89%)</title><rect x="73" y="548" width="10" height="15" fill="rgb(222,228,4)"/><text x="76.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.89%)</title><rect x="73" y="564" width="10" height="15" fill="rgb(206,152,23)"/><text x="76.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.89%)</title><rect x="73" y="580" width="10" height="15" fill="rgb(250,133,34)"/><text x="76.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.89%)</title><rect x="73" y="596" width="10" height="15" fill="rgb(253,162,25)"/><text x="76.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.89%)</title><rect x="73" y="612" width="10" height="15" fill="rgb(246,90,5)"/><text x="76.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 0.89%)</title><rect x="73" y="628" width="10" height="15" fill="rgb(221,7,23)"/><text x="76.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.89%)</title><rect x="73" y="644" width="10" height="15" fill="rgb(239,222,43)"/><text x="76.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.89%)</title><rect x="73" y="660" width="10" height="15" fill="rgb(209,83,17)"/><text x="76.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.89%)</title><rect x="73" y="676" width="10" height="15" fill="rgb(230,21,10)"/><text x="76.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.89%)</title><rect x="73" y="692" width="10" height="15" fill="rgb(243,189,53)"/><text x="76.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.89%)</title><rect x="73" y="708" width="10" height="15" fill="rgb(244,110,7)"/><text x="76.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 0.89%)</title><rect x="73" y="724" width="10" height="15" fill="rgb(245,227,40)"/><text x="76.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.89%)</title><rect x="73" y="740" width="10" height="15" fill="rgb(218,38,9)"/><text x="76.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.89%)</title><rect x="73" y="756" width="10" height="15" fill="rgb(237,91,38)"/><text x="76.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.89%)</title><rect x="73" y="772" width="10" height="15" fill="rgb(247,128,54)"/><text x="76.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.89%)</title><rect x="73" y="788" width="10" height="15" fill="rgb(246,84,29)"/><text x="76.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.89%)</title><rect x="73" y="804" width="10" height="15" fill="rgb(218,181,2)"/><text x="76.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 0.89%)</title><rect x="73" y="820" width="10" height="15" fill="rgb(238,1,6)"/><text x="76.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.89%)</title><rect x="73" y="836" width="10" height="15" fill="rgb(213,158,49)"/><text x="76.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.89%)</title><rect x="73" y="852" width="10" height="15" fill="rgb(214,160,54)"/><text x="76.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.89%)</title><rect x="73" y="868" width="10" height="15" fill="rgb(212,70,2)"/><text x="76.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="76" y="884" width="7" height="15" fill="rgb(211,65,13)"/><text x="79.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="76" y="900" width="7" height="15" fill="rgb(211,64,54)"/><text x="79.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:47) (2 samples, 0.60%)</title><rect x="76" y="916" width="7" height="15" fill="rgb(249,228,32)"/><text x="79.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="76" y="932" width="7" height="15" fill="rgb(222,67,7)"/><text x="79.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="76" y="948" width="7" height="15" fill="rgb(236,112,33)"/><text x="79.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="80" y="964" width="3" height="15" fill="rgb(248,68,36)"/><text x="83.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.30%)</title><rect x="80" y="980" width="3" height="15" fill="rgb(216,205,19)"/><text x="83.00" y="990.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.30%)</title><rect x="80" y="996" width="3" height="15" fill="rgb(230,115,29)"/><text x="83.00" y="1006.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.30%)</title><rect x="80" y="1012" width="3" height="15" fill="rgb(229,52,6)"/><text x="83.00" y="1022.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:132) (1 samples, 0.30%)</title><rect x="83" y="1492" width="4" height="15" fill="rgb(218,87,7)"/><text x="86.00" y="1502.50"></text></g><g><title>unicode_split (python3.7) (1 samples, 0.30%)</title><rect x="83" y="1508" width="4" height="15" fill="rgb(214,175,23)"/><text x="86.00" y="1518.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.60%)</title><rect x="83" y="1460" width="7" height="15" fill="rgb(214,194,38)"/><text x="86.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.60%)</title><rect x="83" y="1476" width="7" height="15" fill="rgb(254,191,34)"/><text x="86.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (1 samples, 0.30%)</title><rect x="87" y="1492" width="3" height="15" fill="rgb(247,216,22)"/><text x="90.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:82) (1 samples, 0.30%)</title><rect x="87" y="1508" width="3" height="15" fill="rgb(240,70,37)"/><text x="90.00" y="1518.50"></text></g><g><title>parse_for (jinja2/parser.py:191) (1 samples, 0.30%)</title><rect x="90" y="1828" width="4" height="15" fill="rgb(234,137,10)"/><text x="93.00" y="1838.50"></text></g><g><title>parse_assign_target (jinja2/parser.py:420) (1 samples, 0.30%)</title><rect x="90" y="1844" width="4" height="15" fill="rgb(218,0,51)"/><text x="93.00" y="1854.50"></text></g><g><title>set_ctx (jinja2/nodes.py:205) (1 samples, 0.30%)</title><rect x="90" y="1860" width="4" height="15" fill="rgb(206,215,29)"/><text x="93.00" y="1870.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py:169) (1 samples, 0.30%)</title><rect x="90" y="1876" width="4" height="15" fill="rgb(238,94,37)"/><text x="93.00" y="1886.50"></text></g><g><title>iter_fields (jinja2/nodes.py:160) (1 samples, 0.30%)</title><rect x="90" y="1892" width="4" height="15" fill="rgb(215,67,53)"/><text x="93.00" y="1902.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1_4_12_float_.py:4) (25 samples, 7.44%)</title><rect x="10" y="52" width="87" height="15" fill="rgb(244,15,22)"/><text x="13.00" y="62.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (25 samples, 7.44%)</title><rect x="10" y="68" width="87" height="15" fill="rgb(218,60,52)"/><text x="13.00" y="78.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (25 samples, 7.44%)</title><rect x="10" y="84" width="87" height="15" fill="rgb(224,83,44)"/><text x="13.00" y="94.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (25 samples, 7.44%)</title><rect x="10" y="100" width="87" height="15" fill="rgb(232,171,21)"/><text x="13.00" y="110.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (25 samples, 7.44%)</title><rect x="10" y="116" width="87" height="15" fill="rgb(240,221,9)"/><text x="13.00" y="126.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (25 samples, 7.44%)</title><rect x="10" y="132" width="87" height="15" fill="rgb(238,72,27)"/><text x="13.00" y="142.50">_call_with..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py:7) (11 samples, 3.27%)</title><rect x="59" y="148" width="38" height="15" fill="rgb(221,26,25)"/><text x="62.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 3.27%)</title><rect x="59" y="164" width="38" height="15" fill="rgb(235,159,21)"/><text x="62.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 3.27%)</title><rect x="59" y="180" width="38" height="15" fill="rgb(229,205,7)"/><text x="62.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 3.27%)</title><rect x="59" y="196" width="38" height="15" fill="rgb(232,183,36)"/><text x="62.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 3.27%)</title><rect x="59" y="212" width="38" height="15" fill="rgb(252,159,52)"/><text x="62.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 3.27%)</title><rect x="59" y="228" width="38" height="15" fill="rgb(252,198,7)"/><text x="62.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (7 samples, 2.08%)</title><rect x="73" y="244" width="24" height="15" fill="rgb(240,24,35)"/><text x="76.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.08%)</title><rect x="73" y="260" width="24" height="15" fill="rgb(239,48,2)"/><text x="76.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.08%)</title><rect x="73" y="276" width="24" height="15" fill="rgb(228,33,37)"/><text x="76.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.08%)</title><rect x="73" y="292" width="24" height="15" fill="rgb(223,61,1)"/><text x="76.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.08%)</title><rect x="73" y="308" width="24" height="15" fill="rgb(222,69,29)"/><text x="76.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.08%)</title><rect x="73" y="324" width="24" height="15" fill="rgb(225,57,41)"/><text x="76.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (7 samples, 2.08%)</title><rect x="73" y="340" width="24" height="15" fill="rgb(211,197,44)"/><text x="76.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.08%)</title><rect x="73" y="356" width="24" height="15" fill="rgb(234,18,16)"/><text x="76.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.08%)</title><rect x="73" y="372" width="24" height="15" fill="rgb(205,137,50)"/><text x="76.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.08%)</title><rect x="73" y="388" width="24" height="15" fill="rgb(236,117,40)"/><text x="76.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.08%)</title><rect x="73" y="404" width="24" height="15" fill="rgb(211,209,9)"/><text x="76.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.08%)</title><rect x="73" y="420" width="24" height="15" fill="rgb(214,208,21)"/><text x="76.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 1.19%)</title><rect x="83" y="436" width="14" height="15" fill="rgb(247,90,3)"/><text x="86.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.19%)</title><rect x="83" y="452" width="14" height="15" fill="rgb(210,56,37)"/><text x="86.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.19%)</title><rect x="83" y="468" width="14" height="15" fill="rgb(214,176,45)"/><text x="86.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="83" y="484" width="14" height="15" fill="rgb(207,203,21)"/><text x="86.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.19%)</title><rect x="83" y="500" width="14" height="15" fill="rgb(220,168,1)"/><text x="86.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.19%)</title><rect x="83" y="516" width="14" height="15" fill="rgb(210,123,3)"/><text x="86.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.19%)</title><rect x="83" y="532" width="14" height="15" fill="rgb(233,89,17)"/><text x="86.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.19%)</title><rect x="83" y="548" width="14" height="15" fill="rgb(226,65,22)"/><text x="86.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="83" y="564" width="14" height="15" fill="rgb(220,45,17)"/><text x="86.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 1.19%)</title><rect x="83" y="580" width="14" height="15" fill="rgb(241,188,12)"/><text x="86.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.19%)</title><rect x="83" y="596" width="14" height="15" fill="rgb(210,184,32)"/><text x="86.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.19%)</title><rect x="83" y="612" width="14" height="15" fill="rgb(217,32,53)"/><text x="86.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.19%)</title><rect x="83" y="628" width="14" height="15" fill="rgb(241,137,39)"/><text x="86.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.19%)</title><rect x="83" y="644" width="14" height="15" fill="rgb(243,208,50)"/><text x="86.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="83" y="660" width="14" height="15" fill="rgb(222,78,45)"/><text x="86.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 1.19%)</title><rect x="83" y="676" width="14" height="15" fill="rgb(225,99,44)"/><text x="86.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.19%)</title><rect x="83" y="692" width="14" height="15" fill="rgb(206,172,35)"/><text x="86.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.19%)</title><rect x="83" y="708" width="14" height="15" fill="rgb(220,214,5)"/><text x="86.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.19%)</title><rect x="83" y="724" width="14" height="15" fill="rgb(220,153,46)"/><text x="86.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.19%)</title><rect x="83" y="740" width="14" height="15" fill="rgb(213,22,33)"/><text x="86.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="83" y="756" width="14" height="15" fill="rgb(235,98,54)"/><text x="86.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 1.19%)</title><rect x="83" y="772" width="14" height="15" fill="rgb(251,129,44)"/><text x="86.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.19%)</title><rect x="83" y="788" width="14" height="15" fill="rgb(223,158,18)"/><text x="86.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.19%)</title><rect x="83" y="804" width="14" height="15" fill="rgb(214,61,4)"/><text x="86.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.19%)</title><rect x="83" y="820" width="14" height="15" fill="rgb(243,76,46)"/><text x="86.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.19%)</title><rect x="83" y="836" width="14" height="15" fill="rgb(250,25,39)"/><text x="86.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="83" y="852" width="14" height="15" fill="rgb(214,144,23)"/><text x="86.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 1.19%)</title><rect x="83" y="868" width="14" height="15" fill="rgb(217,129,41)"/><text x="86.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.19%)</title><rect x="83" y="884" width="14" height="15" fill="rgb(242,225,8)"/><text x="86.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.19%)</title><rect x="83" y="900" width="14" height="15" fill="rgb(222,11,41)"/><text x="86.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="83" y="916" width="14" height="15" fill="rgb(207,29,52)"/><text x="86.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.19%)</title><rect x="83" y="932" width="14" height="15" fill="rgb(247,2,4)"/><text x="86.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.19%)</title><rect x="83" y="948" width="14" height="15" fill="rgb(214,106,17)"/><text x="86.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.19%)</title><rect x="83" y="964" width="14" height="15" fill="rgb(231,4,10)"/><text x="86.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.19%)</title><rect x="83" y="980" width="14" height="15" fill="rgb(206,39,41)"/><text x="86.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="83" y="996" width="14" height="15" fill="rgb(221,59,22)"/><text x="86.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 1.19%)</title><rect x="83" y="1012" width="14" height="15" fill="rgb(216,144,39)"/><text x="86.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.19%)</title><rect x="83" y="1028" width="14" height="15" fill="rgb(244,17,3)"/><text x="86.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.19%)</title><rect x="83" y="1044" width="14" height="15" fill="rgb(247,198,28)"/><text x="86.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.19%)</title><rect x="83" y="1060" width="14" height="15" fill="rgb(236,138,8)"/><text x="86.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.19%)</title><rect x="83" y="1076" width="14" height="15" fill="rgb(217,159,46)"/><text x="86.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="83" y="1092" width="14" height="15" fill="rgb(240,116,50)"/><text x="86.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (4 samples, 1.19%)</title><rect x="83" y="1108" width="14" height="15" fill="rgb(243,32,11)"/><text x="86.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.19%)</title><rect x="83" y="1124" width="14" height="15" fill="rgb(234,66,51)"/><text x="86.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="83" y="1140" width="14" height="15" fill="rgb(245,148,32)"/><text x="86.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.19%)</title><rect x="83" y="1156" width="14" height="15" fill="rgb(216,151,31)"/><text x="86.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.19%)</title><rect x="83" y="1172" width="14" height="15" fill="rgb(208,172,23)"/><text x="86.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.19%)</title><rect x="83" y="1188" width="14" height="15" fill="rgb(241,226,22)"/><text x="86.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.19%)</title><rect x="83" y="1204" width="14" height="15" fill="rgb(216,167,20)"/><text x="86.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="83" y="1220" width="14" height="15" fill="rgb(246,190,3)"/><text x="86.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (4 samples, 1.19%)</title><rect x="83" y="1236" width="14" height="15" fill="rgb(243,1,22)"/><text x="86.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.19%)</title><rect x="83" y="1252" width="14" height="15" fill="rgb(245,43,22)"/><text x="86.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="83" y="1268" width="14" height="15" fill="rgb(228,106,7)"/><text x="86.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.19%)</title><rect x="83" y="1284" width="14" height="15" fill="rgb(206,80,51)"/><text x="86.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.19%)</title><rect x="83" y="1300" width="14" height="15" fill="rgb(215,117,17)"/><text x="86.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.19%)</title><rect x="83" y="1316" width="14" height="15" fill="rgb(227,39,42)"/><text x="86.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.19%)</title><rect x="83" y="1332" width="14" height="15" fill="rgb(212,48,11)"/><text x="86.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="83" y="1348" width="14" height="15" fill="rgb(251,105,35)"/><text x="86.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (4 samples, 1.19%)</title><rect x="83" y="1364" width="14" height="15" fill="rgb(236,210,34)"/><text x="86.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.19%)</title><rect x="83" y="1380" width="14" height="15" fill="rgb(220,169,8)"/><text x="86.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.19%)</title><rect x="83" y="1396" width="14" height="15" fill="rgb(227,15,49)"/><text x="86.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.19%)</title><rect x="83" y="1412" width="14" height="15" fill="rgb(206,148,17)"/><text x="86.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.19%)</title><rect x="83" y="1428" width="14" height="15" fill="rgb(241,161,30)"/><text x="86.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="83" y="1444" width="14" height="15" fill="rgb(212,152,6)"/><text x="86.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (2 samples, 0.60%)</title><rect x="90" y="1460" width="7" height="15" fill="rgb(209,34,21)"/><text x="93.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="90" y="1476" width="7" height="15" fill="rgb(210,180,13)"/><text x="93.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="90" y="1492" width="7" height="15" fill="rgb(211,22,4)"/><text x="93.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="90" y="1508" width="7" height="15" fill="rgb(248,100,26)"/><text x="93.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="90" y="1524" width="7" height="15" fill="rgb(212,17,22)"/><text x="93.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="90" y="1540" width="7" height="15" fill="rgb(226,148,23)"/><text x="93.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (2 samples, 0.60%)</title><rect x="90" y="1556" width="7" height="15" fill="rgb(240,200,45)"/><text x="93.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (2 samples, 0.60%)</title><rect x="90" y="1572" width="7" height="15" fill="rgb(215,211,9)"/><text x="93.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (2 samples, 0.60%)</title><rect x="90" y="1588" width="7" height="15" fill="rgb(233,128,4)"/><text x="93.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (2 samples, 0.60%)</title><rect x="90" y="1604" width="7" height="15" fill="rgb(241,193,11)"/><text x="93.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:579) (2 samples, 0.60%)</title><rect x="90" y="1620" width="7" height="15" fill="rgb(228,85,39)"/><text x="93.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py:497) (2 samples, 0.60%)</title><rect x="90" y="1636" width="7" height="15" fill="rgb(206,10,6)"/><text x="93.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py:901) (2 samples, 0.60%)</title><rect x="90" y="1652" width="7" height="15" fill="rgb(209,112,36)"/><text x="93.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py:883) (2 samples, 0.60%)</title><rect x="90" y="1668" width="7" height="15" fill="rgb(232,9,40)"/><text x="93.00" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (2 samples, 0.60%)</title><rect x="90" y="1684" width="7" height="15" fill="rgb(225,138,3)"/><text x="93.00" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (2 samples, 0.60%)</title><rect x="90" y="1700" width="7" height="15" fill="rgb(241,157,11)"/><text x="93.00" y="1710.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (2 samples, 0.60%)</title><rect x="90" y="1716" width="7" height="15" fill="rgb(228,88,41)"/><text x="93.00" y="1726.50"></text></g><g><title>subparse (jinja2/parser.py:883) (2 samples, 0.60%)</title><rect x="90" y="1732" width="7" height="15" fill="rgb(210,97,30)"/><text x="93.00" y="1742.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (2 samples, 0.60%)</title><rect x="90" y="1748" width="7" height="15" fill="rgb(253,40,36)"/><text x="93.00" y="1758.50"></text></g><g><title>parse_if (jinja2/parser.py:212) (2 samples, 0.60%)</title><rect x="90" y="1764" width="7" height="15" fill="rgb(234,121,38)"/><text x="93.00" y="1774.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (2 samples, 0.60%)</title><rect x="90" y="1780" width="7" height="15" fill="rgb(248,182,10)"/><text x="93.00" y="1790.50"></text></g><g><title>subparse (jinja2/parser.py:883) (2 samples, 0.60%)</title><rect x="90" y="1796" width="7" height="15" fill="rgb(237,137,50)"/><text x="93.00" y="1806.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (2 samples, 0.60%)</title><rect x="90" y="1812" width="7" height="15" fill="rgb(232,172,39)"/><text x="93.00" y="1822.50"></text></g><g><title>parse_for (jinja2/parser.py:194) (1 samples, 0.30%)</title><rect x="94" y="1828" width="3" height="15" fill="rgb(215,192,40)"/><text x="97.00" y="1838.50"></text></g><g><title>parse_tuple (jinja2/parser.py:620) (1 samples, 0.30%)</title><rect x="94" y="1844" width="3" height="15" fill="rgb(247,113,22)"/><text x="97.00" y="1854.50"></text></g><g><title>&lt;lambda&gt; (jinja2/parser.py:612) (1 samples, 0.30%)</title><rect x="94" y="1860" width="3" height="15" fill="rgb(209,142,48)"/><text x="97.00" y="1870.50"></text></g><g><title>parse_expression (jinja2/parser.py:433) (1 samples, 0.30%)</title><rect x="94" y="1876" width="3" height="15" fill="rgb(230,67,17)"/><text x="97.00" y="1886.50"></text></g><g><title>parse_or (jinja2/parser.py:450) (1 samples, 0.30%)</title><rect x="94" y="1892" width="3" height="15" fill="rgb(216,67,36)"/><text x="97.00" y="1902.50"></text></g><g><title>parse_and (jinja2/parser.py:459) (1 samples, 0.30%)</title><rect x="94" y="1908" width="3" height="15" fill="rgb(216,135,2)"/><text x="97.00" y="1918.50"></text></g><g><title>parse_not (jinja2/parser.py:467) (1 samples, 0.30%)</title><rect x="94" y="1924" width="3" height="15" fill="rgb(219,93,13)"/><text x="97.00" y="1934.50"></text></g><g><title>test (jinja2/lexer.py:256) (1 samples, 0.30%)</title><rect x="94" y="1940" width="3" height="15" fill="rgb(218,136,7)"/><text x="97.00" y="1950.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (3 samples, 0.89%)</title><rect x="108" y="180" width="10" height="15" fill="rgb(240,205,11)"/><text x="111.00" y="190.50"></text></g><g><title>isclass (inspect.py:78) (2 samples, 0.60%)</title><rect x="111" y="196" width="7" height="15" fill="rgb(254,22,40)"/><text x="114.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.30%)</title><rect x="118" y="180" width="4" height="15" fill="rgb(215,152,38)"/><text x="121.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (3 samples, 0.89%)</title><rect x="129" y="196" width="10" height="15" fill="rgb(234,70,0)"/><text x="132.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (10 samples, 2.98%)</title><rect x="139" y="196" width="36" height="15" fill="rgb(235,119,0)"/><text x="142.00" y="206.50">&lt;li..</text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.19%)</title><rect x="161" y="212" width="14" height="15" fill="rgb(249,44,12)"/><text x="164.00" y="222.50"></text></g><g><title>0x7f07e780e163 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="171" y="228" width="4" height="15" fill="rgb(252,126,39)"/><text x="174.00" y="238.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:205) (22 samples, 6.55%)</title><rect x="104" y="164" width="78" height="15" fill="rgb(247,161,36)"/><text x="107.00" y="174.50">_decision..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (17 samples, 5.06%)</title><rect x="122" y="180" width="60" height="15" fill="rgb(230,20,17)"/><text x="125.00" y="190.50">check_..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.60%)</title><rect x="175" y="196" width="7" height="15" fill="rgb(229,180,35)"/><text x="178.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.30%)</title><rect x="189" y="180" width="3" height="15" fill="rgb(239,110,22)"/><text x="192.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.30%)</title><rect x="192" y="180" width="4" height="15" fill="rgb(249,194,21)"/><text x="195.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.30%)</title><rect x="213" y="196" width="4" height="15" fill="rgb(252,120,40)"/><text x="216.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.30%)</title><rect x="217" y="196" width="3" height="15" fill="rgb(219,68,3)"/><text x="220.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.30%)</title><rect x="220" y="196" width="4" height="15" fill="rgb(219,95,5)"/><text x="223.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:483) (2 samples, 0.60%)</title><rect x="224" y="196" width="7" height="15" fill="rgb(220,183,18)"/><text x="227.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (11 samples, 3.27%)</title><rect x="196" y="180" width="38" height="15" fill="rgb(245,156,2)"/><text x="199.00" y="190.50">che..</text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.30%)</title><rect x="231" y="196" width="3" height="15" fill="rgb(248,171,6)"/><text x="234.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.30%)</title><rect x="241" y="196" width="4" height="15" fill="rgb(250,15,42)"/><text x="244.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.30%)</title><rect x="245" y="196" width="3" height="15" fill="rgb(214,169,5)"/><text x="248.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (6 samples, 1.79%)</title><rect x="255" y="212" width="21" height="15" fill="rgb(218,30,49)"/><text x="258.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:187) (2 samples, 0.60%)</title><rect x="276" y="212" width="7" height="15" fill="rgb(223,76,48)"/><text x="279.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:188) (2 samples, 0.60%)</title><rect x="283" y="212" width="7" height="15" fill="rgb(224,166,28)"/><text x="286.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (19 samples, 5.65%)</title><rect x="234" y="180" width="67" height="15" fill="rgb(228,36,32)"/><text x="237.00" y="190.50">check_a..</text></g><g><title>simplefilter (warnings.py:179) (15 samples, 4.46%)</title><rect x="248" y="196" width="53" height="15" fill="rgb(208,1,12)"/><text x="251.00" y="206.50">simpl..</text></g><g><title>_add_filter (warnings.py:189) (3 samples, 0.89%)</title><rect x="290" y="212" width="11" height="15" fill="rgb(236,29,38)"/><text x="293.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (4 samples, 1.19%)</title><rect x="301" y="180" width="14" height="15" fill="rgb(221,98,48)"/><text x="304.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.30%)</title><rect x="312" y="196" width="3" height="15" fill="rgb(245,213,22)"/><text x="315.00" y="206.50"></text></g><g><title>0x7f07e7751124 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="312" y="212" width="3" height="15" fill="rgb(248,211,3)"/><text x="315.00" y="222.50"></text></g><g><title>__exit__ (warnings.py:496) (3 samples, 0.89%)</title><rect x="319" y="196" width="10" height="15" fill="rgb(233,2,22)"/><text x="322.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (5 samples, 1.49%)</title><rect x="315" y="180" width="18" height="15" fill="rgb(237,145,16)"/><text x="318.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.30%)</title><rect x="329" y="196" width="4" height="15" fill="rgb(206,29,54)"/><text x="332.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.30%)</title><rect x="333" y="180" width="3" height="15" fill="rgb(225,197,24)"/><text x="336.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (4 samples, 1.19%)</title><rect x="350" y="212" width="14" height="15" fill="rgb(233,58,2)"/><text x="353.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:329) (3 samples, 0.89%)</title><rect x="364" y="212" width="11" height="15" fill="rgb(224,37,33)"/><text x="367.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (10 samples, 2.98%)</title><rect x="343" y="196" width="35" height="15" fill="rgb(213,215,1)"/><text x="346.00" y="206.50">is..</text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (1 samples, 0.30%)</title><rect x="375" y="212" width="3" height="15" fill="rgb(230,166,20)"/><text x="378.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (13 samples, 3.87%)</title><rect x="336" y="180" width="46" height="15" fill="rgb(251,54,22)"/><text x="339.00" y="190.50">chec..</text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.30%)</title><rect x="378" y="196" width="4" height="15" fill="rgb(249,46,31)"/><text x="381.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.30%)</title><rect x="378" y="212" width="4" height="15" fill="rgb(205,210,32)"/><text x="381.00" y="222.50"></text></g><g><title>0x7f07e7746730 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="378" y="228" width="4" height="15" fill="rgb(217,34,45)"/><text x="381.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.30%)</title><rect x="382" y="180" width="3" height="15" fill="rgb(225,106,51)"/><text x="385.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:560) (1 samples, 0.30%)</title><rect x="385" y="180" width="4" height="15" fill="rgb(254,190,5)"/><text x="388.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.89%)</title><rect x="420" y="212" width="11" height="15" fill="rgb(236,119,25)"/><text x="423.00" y="222.50"></text></g><g><title>0x7f07e7746e7a (libc-2.29.so) (1 samples, 0.30%)</title><rect x="427" y="228" width="4" height="15" fill="rgb(228,72,46)"/><text x="430.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1044) (1 samples, 0.30%)</title><rect x="431" y="212" width="3" height="15" fill="rgb(242,167,1)"/><text x="434.00" y="222.50"></text></g><g><title>0x7f07e77416d0 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="438" y="228" width="3" height="15" fill="rgb(212,47,52)"/><text x="441.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (3 samples, 0.89%)</title><rect x="434" y="212" width="11" height="15" fill="rgb(245,94,26)"/><text x="437.00" y="222.50"></text></g><g><title>0x7f07e775114a (libc-2.29.so) (1 samples, 0.30%)</title><rect x="441" y="228" width="4" height="15" fill="rgb(243,193,48)"/><text x="444.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (18 samples, 5.36%)</title><rect x="389" y="196" width="63" height="15" fill="rgb(229,54,24)"/><text x="392.00" y="206.50">_asser..</text></g><g><title>unicode_hash (python3.7) (2 samples, 0.60%)</title><rect x="445" y="212" width="7" height="15" fill="rgb(239,135,19)"/><text x="448.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (20 samples, 5.95%)</title><rect x="389" y="180" width="70" height="15" fill="rgb(240,58,36)"/><text x="392.00" y="190.50">check_a..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.60%)</title><rect x="452" y="196" width="7" height="15" fill="rgb(249,135,37)"/><text x="455.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.30%)</title><rect x="456" y="212" width="3" height="15" fill="rgb(253,178,36)"/><text x="459.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (6 samples, 1.79%)</title><rect x="463" y="196" width="21" height="15" fill="rgb(253,101,42)"/><text x="466.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (2 samples, 0.60%)</title><rect x="484" y="196" width="7" height="15" fill="rgb(243,31,40)"/><text x="487.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (3 samples, 0.89%)</title><rect x="491" y="196" width="10" height="15" fill="rgb(218,64,51)"/><text x="494.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (3 samples, 0.89%)</title><rect x="491" y="212" width="10" height="15" fill="rgb(237,151,30)"/><text x="494.00" y="222.50"></text></g><g><title>0x7f07e7751144 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="498" y="228" width="3" height="15" fill="rgb(216,175,24)"/><text x="501.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.30%)</title><rect x="501" y="196" width="4" height="15" fill="rgb(227,118,52)"/><text x="504.00" y="206.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:207) (102 samples, 30.36%)</title><rect x="182" y="164" width="358" height="15" fill="rgb(252,11,54)"/><text x="185.00" y="174.50">_decision_function (sklearn/linear_model/_base.p..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (23 samples, 6.85%)</title><rect x="459" y="180" width="81" height="15" fill="rgb(223,4,3)"/><text x="462.00" y="190.50">check_arr..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (10 samples, 2.98%)</title><rect x="505" y="196" width="35" height="15" fill="rgb(229,133,41)"/><text x="508.00" y="206.50">_n..</text></g><g><title>__instancecheck__ (abc.py:139) (4 samples, 1.19%)</title><rect x="526" y="212" width="14" height="15" fill="rgb(234,166,38)"/><text x="529.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.30%)</title><rect x="543" y="212" width="4" height="15" fill="rgb(251,4,22)"/><text x="546.00" y="222.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.30%)</title><rect x="543" y="228" width="4" height="15" fill="rgb(219,184,10)"/><text x="546.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.30%)</title><rect x="547" y="212" width="3" height="15" fill="rgb(213,148,7)"/><text x="550.00" y="222.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.30%)</title><rect x="547" y="228" width="3" height="15" fill="rgb(249,128,46)"/><text x="550.00" y="238.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.30%)</title><rect x="547" y="244" width="3" height="15" fill="rgb(244,170,18)"/><text x="550.00" y="254.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.30%)</title><rect x="547" y="260" width="3" height="15" fill="rgb(215,17,18)"/><text x="550.00" y="270.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (3 samples, 0.89%)</title><rect x="543" y="180" width="11" height="15" fill="rgb(214,219,46)"/><text x="546.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (3 samples, 0.89%)</title><rect x="543" y="196" width="11" height="15" fill="rgb(237,169,2)"/><text x="546.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.30%)</title><rect x="550" y="212" width="4" height="15" fill="rgb(228,40,7)"/><text x="553.00" y="222.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c:231) (1 samples, 0.30%)</title><rect x="550" y="228" width="4" height="15" fill="rgb(215,0,2)"/><text x="553.00" y="238.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:208) (5 samples, 1.49%)</title><rect x="540" y="164" width="17" height="15" fill="rgb(233,158,25)"/><text x="543.00" y="174.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.30%)</title><rect x="554" y="180" width="3" height="15" fill="rgb(210,191,19)"/><text x="557.00" y="190.50"></text></g><g><title>0x7f07e780e134 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="554" y="196" width="3" height="15" fill="rgb(219,59,50)"/><text x="557.00" y="206.50"></text></g><g><title>array_add (number.c:325) (1 samples, 0.30%)</title><rect x="564" y="180" width="4" height="15" fill="rgb(231,174,52)"/><text x="567.00" y="190.50"></text></g><g><title>binop_should_defer (binop_override.h:123) (1 samples, 0.30%)</title><rect x="564" y="196" width="4" height="15" fill="rgb(248,159,41)"/><text x="567.00" y="206.50"></text></g><g><title>is_anyscalar_exact (scalartypes.c.src:4574) (1 samples, 0.30%)</title><rect x="564" y="212" width="4" height="15" fill="rgb(249,229,40)"/><text x="567.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (4 samples, 1.19%)</title><rect x="568" y="196" width="14" height="15" fill="rgb(227,167,20)"/><text x="571.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (4 samples, 1.19%)</title><rect x="568" y="212" width="14" height="15" fill="rgb(217,71,45)"/><text x="571.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (4 samples, 1.19%)</title><rect x="568" y="228" width="14" height="15" fill="rgb(230,172,41)"/><text x="571.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (4 samples, 1.19%)</title><rect x="568" y="244" width="14" height="15" fill="rgb(247,8,47)"/><text x="571.00" y="254.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (4 samples, 1.19%)</title><rect x="568" y="260" width="14" height="15" fill="rgb(220,99,18)"/><text x="571.00" y="270.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (4 samples, 1.19%)</title><rect x="568" y="276" width="14" height="15" fill="rgb(209,68,9)"/><text x="571.00" y="286.50"></text></g><g><title>0x7f07e7746e76 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="578" y="292" width="4" height="15" fill="rgb(238,154,3)"/><text x="581.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.30%)</title><rect x="582" y="212" width="3" height="15" fill="rgb(231,138,50)"/><text x="585.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1079) (1 samples, 0.30%)</title><rect x="582" y="228" width="3" height="15" fill="rgb(219,56,6)"/><text x="585.00" y="238.50"></text></g><g><title>0x7f07e69530a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="582" y="244" width="3" height="15" fill="rgb(254,123,25)"/><text x="585.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.30%)</title><rect x="585" y="212" width="4" height="15" fill="rgb(239,149,20)"/><text x="588.00" y="222.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.30%)</title><rect x="585" y="228" width="4" height="15" fill="rgb(223,57,53)"/><text x="588.00" y="238.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.30%)</title><rect x="585" y="244" width="4" height="15" fill="rgb(222,107,23)"/><text x="588.00" y="254.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c:694) (1 samples, 0.30%)</title><rect x="589" y="228" width="3" height="15" fill="rgb(221,200,20)"/><text x="592.00" y="238.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c:847) (1 samples, 0.30%)</title><rect x="592" y="228" width="4" height="15" fill="rgb(221,201,42)"/><text x="595.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.30%)</title><rect x="596" y="228" width="4" height="15" fill="rgb(214,89,37)"/><text x="599.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.30%)</title><rect x="596" y="244" width="4" height="15" fill="rgb(238,182,39)"/><text x="599.00" y="254.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.30%)</title><rect x="596" y="260" width="4" height="15" fill="rgb(253,117,50)"/><text x="599.00" y="270.50"></text></g><g><title>DOUBLE_copyswap (arraytypes.c.src:1924) (1 samples, 0.30%)</title><rect x="596" y="276" width="4" height="15" fill="rgb(218,206,33)"/><text x="599.00" y="286.50"></text></g><g><title>_basic_copy (arraytypes.c.src:1890) (1 samples, 0.30%)</title><rect x="596" y="292" width="4" height="15" fill="rgb(233,144,47)"/><text x="599.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (4 samples, 1.19%)</title><rect x="589" y="212" width="14" height="15" fill="rgb(218,144,54)"/><text x="592.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.30%)</title><rect x="600" y="228" width="3" height="15" fill="rgb(244,67,50)"/><text x="603.00" y="238.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:256) (1 samples, 0.30%)</title><rect x="600" y="244" width="3" height="15" fill="rgb(236,121,33)"/><text x="603.00" y="254.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1368) (1 samples, 0.30%)</title><rect x="603" y="244" width="4" height="15" fill="rgb(238,147,16)"/><text x="606.00" y="254.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1371) (1 samples, 0.30%)</title><rect x="607" y="244" width="3" height="15" fill="rgb(228,53,2)"/><text x="610.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 2.68%)</title><rect x="582" y="196" width="32" height="15" fill="rgb(254,205,54)"/><text x="585.00" y="206.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.89%)</title><rect x="603" y="212" width="11" height="15" fill="rgb(221,123,12)"/><text x="606.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (3 samples, 0.89%)</title><rect x="603" y="228" width="11" height="15" fill="rgb(239,85,44)"/><text x="606.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.30%)</title><rect x="610" y="244" width="4" height="15" fill="rgb(227,44,17)"/><text x="613.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1756) (1 samples, 0.30%)</title><rect x="610" y="260" width="4" height="15" fill="rgb(229,43,5)"/><text x="613.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.30%)</title><rect x="614" y="196" width="3" height="15" fill="rgb(213,186,4)"/><text x="617.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.30%)</title><rect x="614" y="212" width="3" height="15" fill="rgb(252,198,5)"/><text x="617.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.30%)</title><rect x="614" y="228" width="3" height="15" fill="rgb(234,142,52)"/><text x="617.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:718) (1 samples, 0.30%)</title><rect x="614" y="244" width="3" height="15" fill="rgb(211,214,10)"/><text x="617.00" y="254.50"></text></g><g><title>array_add (number.c:330) (15 samples, 4.46%)</title><rect x="568" y="180" width="53" height="15" fill="rgb(216,218,30)"/><text x="571.00" y="190.50">array..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.30%)</title><rect x="617" y="196" width="4" height="15" fill="rgb(209,7,46)"/><text x="620.00" y="206.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.30%)</title><rect x="617" y="212" width="4" height="15" fill="rgb(230,29,52)"/><text x="620.00" y="222.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.30%)</title><rect x="617" y="228" width="4" height="15" fill="rgb(244,95,12)"/><text x="620.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.30%)</title><rect x="628" y="196" width="3" height="15" fill="rgb(232,163,1)"/><text x="631.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.30%)</title><rect x="628" y="212" width="3" height="15" fill="rgb(241,140,47)"/><text x="631.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.30%)</title><rect x="628" y="228" width="3" height="15" fill="rgb(231,59,25)"/><text x="631.00" y="238.50"></text></g><g><title>0x7f07e69539d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="628" y="244" width="3" height="15" fill="rgb(253,192,31)"/><text x="631.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2578) (1 samples, 0.30%)</title><rect x="631" y="228" width="4" height="15" fill="rgb(228,209,39)"/><text x="634.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2606) (1 samples, 0.30%)</title><rect x="635" y="228" width="3" height="15" fill="rgb(213,157,34)"/><text x="638.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1042) (1 samples, 0.30%)</title><rect x="635" y="244" width="3" height="15" fill="rgb(213,141,3)"/><text x="638.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2645) (1 samples, 0.30%)</title><rect x="638" y="228" width="4" height="15" fill="rgb(238,209,6)"/><text x="641.00" y="238.50"></text></g><g><title>_validate_num_dims (ufunc_object.c:2069) (1 samples, 0.30%)</title><rect x="638" y="244" width="4" height="15" fill="rgb(209,37,41)"/><text x="641.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2689) (1 samples, 0.30%)</title><rect x="642" y="228" width="3" height="15" fill="rgb(240,89,5)"/><text x="645.00" y="238.50"></text></g><g><title>_get_coredim_sizes (ufunc_object.c:2397) (1 samples, 0.30%)</title><rect x="642" y="244" width="3" height="15" fill="rgb(213,58,51)"/><text x="645.00" y="254.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:738) (1 samples, 0.30%)</title><rect x="645" y="292" width="4" height="15" fill="rgb(212,63,21)"/><text x="648.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.30%)</title><rect x="649" y="292" width="3" height="15" fill="rgb(233,146,27)"/><text x="652.00" y="302.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1511) (1 samples, 0.30%)</title><rect x="649" y="308" width="3" height="15" fill="rgb(206,81,5)"/><text x="652.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (3 samples, 0.89%)</title><rect x="645" y="228" width="11" height="15" fill="rgb(209,79,41)"/><text x="648.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (3 samples, 0.89%)</title><rect x="645" y="244" width="11" height="15" fill="rgb(233,181,36)"/><text x="648.00" y="254.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (3 samples, 0.89%)</title><rect x="645" y="260" width="11" height="15" fill="rgb(206,175,6)"/><text x="648.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (3 samples, 0.89%)</title><rect x="645" y="276" width="11" height="15" fill="rgb(227,6,7)"/><text x="648.00" y="286.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.30%)</title><rect x="652" y="292" width="4" height="15" fill="rgb(222,81,52)"/><text x="655.00" y="302.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:461) (1 samples, 0.30%)</title><rect x="652" y="308" width="4" height="15" fill="rgb(252,76,41)"/><text x="655.00" y="318.50"></text></g><g><title>PyArray_CanCastSafely (convert_datatype.c:404) (1 samples, 0.30%)</title><rect x="652" y="324" width="4" height="15" fill="rgb(213,224,50)"/><text x="655.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.30%)</title><rect x="656" y="244" width="3" height="15" fill="rgb(211,34,17)"/><text x="659.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:210) (1 samples, 0.30%)</title><rect x="659" y="244" width="4" height="15" fill="rgb(225,59,21)"/><text x="662.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.30%)</title><rect x="663" y="244" width="3" height="15" fill="rgb(223,146,49)"/><text x="666.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1645) (1 samples, 0.30%)</title><rect x="663" y="260" width="3" height="15" fill="rgb(236,50,24)"/><text x="666.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.30%)</title><rect x="666" y="260" width="4" height="15" fill="rgb(251,225,48)"/><text x="669.00" y="270.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.30%)</title><rect x="666" y="276" width="4" height="15" fill="rgb(221,182,19)"/><text x="669.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.30%)</title><rect x="666" y="292" width="4" height="15" fill="rgb(254,93,30)"/><text x="669.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1049) (1 samples, 0.30%)</title><rect x="666" y="308" width="4" height="15" fill="rgb(236,202,38)"/><text x="669.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2535) (1 samples, 0.30%)</title><rect x="670" y="276" width="3" height="15" fill="rgb(241,211,13)"/><text x="673.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (2 samples, 0.60%)</title><rect x="670" y="260" width="7" height="15" fill="rgb(218,151,27)"/><text x="673.00" y="270.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2684) (1 samples, 0.30%)</title><rect x="673" y="276" width="4" height="15" fill="rgb(228,41,10)"/><text x="676.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.30%)</title><rect x="673" y="292" width="4" height="15" fill="rgb(224,43,2)"/><text x="676.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.30%)</title><rect x="673" y="308" width="4" height="15" fill="rgb(254,93,33)"/><text x="676.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.30%)</title><rect x="673" y="324" width="4" height="15" fill="rgb(228,202,41)"/><text x="676.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:301) (1 samples, 0.30%)</title><rect x="677" y="276" width="3" height="15" fill="rgb(236,25,36)"/><text x="680.00" y="286.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.30%)</title><rect x="677" y="292" width="3" height="15" fill="rgb(228,21,37)"/><text x="680.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.30%)</title><rect x="680" y="292" width="4" height="15" fill="rgb(231,122,24)"/><text x="683.00" y="302.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:751) (1 samples, 0.30%)</title><rect x="680" y="308" width="4" height="15" fill="rgb(253,11,18)"/><text x="683.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:94) (1 samples, 0.30%)</title><rect x="684" y="292" width="3" height="15" fill="rgb(221,205,12)"/><text x="687.00" y="302.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:62) (1 samples, 0.30%)</title><rect x="684" y="308" width="3" height="15" fill="rgb(244,87,39)"/><text x="687.00" y="318.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:110) (1 samples, 0.30%)</title><rect x="684" y="324" width="3" height="15" fill="rgb(212,125,7)"/><text x="687.00" y="334.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.30%)</title><rect x="687" y="308" width="4" height="15" fill="rgb(220,128,6)"/><text x="690.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.30%)</title><rect x="687" y="324" width="4" height="15" fill="rgb(211,61,42)"/><text x="690.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.30%)</title><rect x="687" y="340" width="4" height="15" fill="rgb(247,43,25)"/><text x="690.00" y="350.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (11 samples, 3.27%)</title><rect x="656" y="228" width="38" height="15" fill="rgb(251,171,15)"/><text x="659.00" y="238.50">PyU..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (8 samples, 2.38%)</title><rect x="666" y="244" width="28" height="15" fill="rgb(242,46,10)"/><text x="669.00" y="254.50">N..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (5 samples, 1.49%)</title><rect x="677" y="260" width="17" height="15" fill="rgb(226,19,7)"/><text x="680.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (4 samples, 1.19%)</title><rect x="680" y="276" width="14" height="15" fill="rgb(214,137,50)"/><text x="683.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (2 samples, 0.60%)</title><rect x="687" y="292" width="7" height="15" fill="rgb(238,174,1)"/><text x="690.00" y="302.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:4033) (1 samples, 0.30%)</title><rect x="691" y="308" width="3" height="15" fill="rgb(225,140,42)"/><text x="694.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.30%)</title><rect x="694" y="228" width="4" height="15" fill="rgb(253,218,32)"/><text x="697.00" y="238.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:156) (1 samples, 0.30%)</title><rect x="694" y="244" width="4" height="15" fill="rgb(221,145,50)"/><text x="697.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2986) (1 samples, 0.30%)</title><rect x="698" y="228" width="3" height="15" fill="rgb(237,95,10)"/><text x="701.00" y="238.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:812) (1 samples, 0.30%)</title><rect x="698" y="244" width="3" height="15" fill="rgb(225,38,12)"/><text x="701.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:443) (1 samples, 0.30%)</title><rect x="701" y="244" width="4" height="15" fill="rgb(206,131,19)"/><text x="704.00" y="254.50"></text></g><g><title>DOUBLE_dot (arraytypes.c.src:3439) (1 samples, 0.30%)</title><rect x="701" y="260" width="4" height="15" fill="rgb(205,127,27)"/><text x="704.00" y="270.50"></text></g><g><title>ddot_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="701" y="276" width="4" height="15" fill="rgb(243,192,44)"/><text x="704.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (2 samples, 0.60%)</title><rect x="701" y="228" width="7" height="15" fill="rgb(209,215,32)"/><text x="704.00" y="238.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.30%)</title><rect x="705" y="244" width="3" height="15" fill="rgb(213,114,13)"/><text x="708.00" y="254.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:94) (1 samples, 0.30%)</title><rect x="705" y="260" width="3" height="15" fill="rgb(233,217,40)"/><text x="708.00" y="270.50"></text></g><g><title>is_blasable2d (matmul.c.src:52) (1 samples, 0.30%)</title><rect x="705" y="276" width="3" height="15" fill="rgb(231,224,36)"/><text x="708.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.30%)</title><rect x="708" y="292" width="4" height="15" fill="rgb(206,171,52)"/><text x="711.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (24 samples, 7.14%)</title><rect x="631" y="196" width="84" height="15" fill="rgb(232,124,35)"/><text x="634.00" y="206.50">ufunc_gen..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (24 samples, 7.14%)</title><rect x="631" y="212" width="84" height="15" fill="rgb(224,86,8)"/><text x="634.00" y="222.50">PyUFunc_G..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (2 samples, 0.60%)</title><rect x="708" y="228" width="7" height="15" fill="rgb(223,169,18)"/><text x="711.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (2 samples, 0.60%)</title><rect x="708" y="244" width="7" height="15" fill="rgb(233,105,45)"/><text x="711.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.60%)</title><rect x="708" y="260" width="7" height="15" fill="rgb(248,73,33)"/><text x="711.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.60%)</title><rect x="708" y="276" width="7" height="15" fill="rgb(222,187,49)"/><text x="711.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.30%)</title><rect x="712" y="292" width="3" height="15" fill="rgb(247,133,14)"/><text x="715.00" y="302.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (176 samples, 52.38%)</title><rect x="104" y="132" width="618" height="15" fill="rgb(222,29,44)"/><text x="107.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/linear_model/_base.py:225) (176 samples, 52.38%)</title><rect x="104" y="148" width="618" height="15" fill="rgb(213,64,1)"/><text x="107.00" y="158.50">predict (sklearn/linear_model/_base.py:225)</text></g><g><title>_decision_function (sklearn/linear_model/_base.py:209) (47 samples, 13.99%)</title><rect x="557" y="164" width="165" height="15" fill="rgb(216,114,15)"/><text x="560.00" y="174.50">_decision_function (s..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (29 samples, 8.63%)</title><rect x="621" y="180" width="101" height="15" fill="rgb(218,70,12)"/><text x="624.00" y="190.50">safe_sparse_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (2 samples, 0.60%)</title><rect x="715" y="196" width="7" height="15" fill="rgb(248,67,37)"/><text x="718.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (2 samples, 0.60%)</title><rect x="715" y="212" width="7" height="15" fill="rgb(251,37,36)"/><text x="718.00" y="222.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.30%)</title><rect x="722" y="132" width="4" height="15" fill="rgb(222,94,24)"/><text x="725.00" y="142.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1_4_12_float_.py:54) (180 samples, 53.57%)</title><rect x="97" y="52" width="632" height="15" fill="rgb(236,137,30)"/><text x="100.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_m_reg_1_4_12_float_.py:54)</text></g><g><title>profile_skl (bench_LinearRegression_default_m_reg_1_4_12_float_.py:53) (180 samples, 53.57%)</title><rect x="97" y="68" width="632" height="15" fill="rgb(254,220,0)"/><text x="100.00" y="78.50">profile_skl (bench_LinearRegression_default_m_reg_1_4_12_float_.py:53)</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py:37) (180 samples, 53.57%)</title><rect x="97" y="84" width="632" height="15" fill="rgb(214,57,0)"/><text x="100.00" y="94.50">setup_profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py:37)</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py:31) (180 samples, 53.57%)</title><rect x="97" y="100" width="632" height="15" fill="rgb(238,76,0)"/><text x="100.00" y="110.50">profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (179 samples, 53.27%)</title><rect x="101" y="116" width="628" height="15" fill="rgb(221,98,33)"/><text x="104.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.30%)</title><rect x="726" y="132" width="3" height="15" fill="rgb(230,90,7)"/><text x="729.00" y="142.50"></text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py:36) (1 samples, 0.30%)</title><rect x="729" y="84" width="4" height="15" fill="rgb(246,164,27)"/><text x="732.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.30%)</title><rect x="729" y="100" width="4" height="15" fill="rgb(221,50,14)"/><text x="732.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.30%)</title><rect x="729" y="116" width="4" height="15" fill="rgb(210,59,19)"/><text x="732.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.30%)</title><rect x="729" y="132" width="4" height="15" fill="rgb(244,33,27)"/><text x="732.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.30%)</title><rect x="729" y="148" width="4" height="15" fill="rgb(221,108,0)"/><text x="732.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.30%)</title><rect x="729" y="164" width="4" height="15" fill="rgb(244,173,22)"/><text x="732.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.30%)</title><rect x="729" y="180" width="4" height="15" fill="rgb(212,153,28)"/><text x="732.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.30%)</title><rect x="729" y="196" width="4" height="15" fill="rgb(228,172,5)"/><text x="732.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="729" y="212" width="4" height="15" fill="rgb(208,66,26)"/><text x="732.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="729" y="228" width="4" height="15" fill="rgb(253,0,10)"/><text x="732.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="729" y="244" width="4" height="15" fill="rgb(235,151,49)"/><text x="732.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="729" y="260" width="4" height="15" fill="rgb(219,166,21)"/><text x="732.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="729" y="276" width="4" height="15" fill="rgb(234,142,19)"/><text x="732.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.30%)</title><rect x="729" y="292" width="4" height="15" fill="rgb(207,144,23)"/><text x="732.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="729" y="308" width="4" height="15" fill="rgb(229,189,10)"/><text x="732.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="729" y="324" width="4" height="15" fill="rgb(234,119,17)"/><text x="732.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="729" y="340" width="4" height="15" fill="rgb(209,117,30)"/><text x="732.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="729" y="356" width="4" height="15" fill="rgb(233,111,6)"/><text x="732.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="729" y="372" width="4" height="15" fill="rgb(207,111,9)"/><text x="732.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.30%)</title><rect x="729" y="388" width="4" height="15" fill="rgb(222,156,15)"/><text x="732.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="729" y="404" width="4" height="15" fill="rgb(240,88,39)"/><text x="732.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="729" y="420" width="4" height="15" fill="rgb(247,12,8)"/><text x="732.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="729" y="436" width="4" height="15" fill="rgb(235,5,3)"/><text x="732.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="729" y="452" width="4" height="15" fill="rgb(226,105,46)"/><text x="732.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="729" y="468" width="4" height="15" fill="rgb(231,193,22)"/><text x="732.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.30%)</title><rect x="729" y="484" width="4" height="15" fill="rgb(234,53,33)"/><text x="732.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.30%)</title><rect x="729" y="500" width="4" height="15" fill="rgb(231,192,54)"/><text x="732.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.30%)</title><rect x="729" y="516" width="4" height="15" fill="rgb(225,196,3)"/><text x="732.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.30%)</title><rect x="729" y="532" width="4" height="15" fill="rgb(247,213,6)"/><text x="732.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:588) (1 samples, 0.30%)</title><rect x="729" y="548" width="4" height="15" fill="rgb(253,114,26)"/><text x="732.00" y="558.50"></text></g><g><title>_compile (jinja2/environment.py:551) (1 samples, 0.30%)</title><rect x="729" y="564" width="4" height="15" fill="rgb(243,191,19)"/><text x="732.00" y="574.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.30%)</title><rect x="736" y="116" width="4" height="15" fill="rgb(217,54,32)"/><text x="739.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.30%)</title><rect x="736" y="132" width="4" height="15" fill="rgb(248,201,26)"/><text x="739.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.30%)</title><rect x="736" y="148" width="4" height="15" fill="rgb(217,121,6)"/><text x="739.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.60%)</title><rect x="758" y="148" width="7" height="15" fill="rgb(236,48,26)"/><text x="761.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:418) (1 samples, 0.30%)</title><rect x="779" y="164" width="3" height="15" fill="rgb(253,201,2)"/><text x="782.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.30%)</title><rect x="782" y="164" width="4" height="15" fill="rgb(217,137,49)"/><text x="785.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.89%)</title><rect x="796" y="180" width="11" height="15" fill="rgb(242,177,51)"/><text x="799.00" y="190.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.30%)</title><rect x="828" y="244" width="3" height="15" fill="rgb(243,11,33)"/><text x="831.00" y="254.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.30%)</title><rect x="838" y="308" width="4" height="15" fill="rgb(213,30,19)"/><text x="841.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.30%)</title><rect x="838" y="324" width="4" height="15" fill="rgb(245,101,38)"/><text x="841.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2094) (1 samples, 0.30%)</title><rect x="838" y="340" width="4" height="15" fill="rgb(243,216,50)"/><text x="841.00" y="350.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.30%)</title><rect x="838" y="356" width="4" height="15" fill="rgb(231,122,38)"/><text x="841.00" y="366.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.30%)</title><rect x="842" y="324" width="3" height="15" fill="rgb(246,98,24)"/><text x="845.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.30%)</title><rect x="842" y="340" width="3" height="15" fill="rgb(206,50,38)"/><text x="845.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.30%)</title><rect x="842" y="356" width="3" height="15" fill="rgb(238,61,5)"/><text x="845.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.30%)</title><rect x="842" y="372" width="3" height="15" fill="rgb(230,166,21)"/><text x="845.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.30%)</title><rect x="842" y="388" width="3" height="15" fill="rgb(242,217,15)"/><text x="845.00" y="398.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="845" y="340" width="4" height="15" fill="rgb(214,147,5)"/><text x="848.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py:28) (8 samples, 2.38%)</title><rect x="824" y="228" width="28" height="15" fill="rgb(247,228,8)"/><text x="827.00" y="238.50">_..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (6 samples, 1.79%)</title><rect x="831" y="244" width="21" height="15" fill="rgb(218,187,15)"/><text x="834.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (5 samples, 1.49%)</title><rect x="835" y="260" width="17" height="15" fill="rgb(215,211,9)"/><text x="838.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.49%)</title><rect x="835" y="276" width="17" height="15" fill="rgb(234,62,50)"/><text x="838.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (4 samples, 1.19%)</title><rect x="838" y="292" width="14" height="15" fill="rgb(239,152,0)"/><text x="841.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (3 samples, 0.89%)</title><rect x="842" y="308" width="10" height="15" fill="rgb(223,137,41)"/><text x="845.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:527) (2 samples, 0.60%)</title><rect x="845" y="324" width="7" height="15" fill="rgb(224,131,11)"/><text x="848.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="849" y="340" width="3" height="15" fill="rgb(244,68,17)"/><text x="852.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py:29) (1 samples, 0.30%)</title><rect x="852" y="228" width="4" height="15" fill="rgb(240,41,23)"/><text x="855.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3162) (1 samples, 0.30%)</title><rect x="863" y="260" width="3" height="15" fill="rgb(215,153,47)"/><text x="866.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.30%)</title><rect x="866" y="260" width="4" height="15" fill="rgb(248,171,17)"/><text x="869.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.30%)</title><rect x="866" y="276" width="4" height="15" fill="rgb(229,108,47)"/><text x="869.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1848) (1 samples, 0.30%)</title><rect x="866" y="292" width="4" height="15" fill="rgb(250,216,45)"/><text x="869.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1187) (1 samples, 0.30%)</title><rect x="870" y="324" width="3" height="15" fill="rgb(244,178,15)"/><text x="873.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (2 samples, 0.60%)</title><rect x="870" y="308" width="7" height="15" fill="rgb(239,186,13)"/><text x="873.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.30%)</title><rect x="873" y="324" width="4" height="15" fill="rgb(213,145,8)"/><text x="876.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1104) (1 samples, 0.30%)</title><rect x="873" y="340" width="4" height="15" fill="rgb(227,42,28)"/><text x="876.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.30%)</title><rect x="877" y="308" width="3" height="15" fill="rgb(213,102,21)"/><text x="880.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1676) (1 samples, 0.30%)</title><rect x="877" y="324" width="3" height="15" fill="rgb(218,228,4)"/><text x="880.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 1.19%)</title><rect x="870" y="292" width="14" height="15" fill="rgb(238,151,53)"/><text x="873.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.30%)</title><rect x="880" y="308" width="4" height="15" fill="rgb(224,7,16)"/><text x="883.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1660) (1 samples, 0.30%)</title><rect x="880" y="324" width="4" height="15" fill="rgb(236,38,34)"/><text x="883.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.30%)</title><rect x="884" y="292" width="3" height="15" fill="rgb(236,170,33)"/><text x="887.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.30%)</title><rect x="884" y="308" width="3" height="15" fill="rgb(233,21,47)"/><text x="887.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.30%)</title><rect x="884" y="324" width="3" height="15" fill="rgb(215,121,21)"/><text x="887.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="884" y="340" width="3" height="15" fill="rgb(221,138,12)"/><text x="887.00" y="350.50"></text></g><g><title>0x7f07e7730902 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="887" y="324" width="4" height="15" fill="rgb(220,138,0)"/><text x="890.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (2 samples, 0.60%)</title><rect x="887" y="308" width="8" height="15" fill="rgb(219,106,8)"/><text x="890.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.30%)</title><rect x="891" y="324" width="4" height="15" fill="rgb(254,192,54)"/><text x="894.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 2.98%)</title><rect x="863" y="244" width="35" height="15" fill="rgb(211,4,34)"/><text x="866.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 2.38%)</title><rect x="870" y="260" width="28" height="15" fill="rgb(247,219,11)"/><text x="873.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 2.38%)</title><rect x="870" y="276" width="28" height="15" fill="rgb(243,218,28)"/><text x="873.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (3 samples, 0.89%)</title><rect x="887" y="292" width="11" height="15" fill="rgb(208,37,14)"/><text x="890.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.30%)</title><rect x="895" y="308" width="3" height="15" fill="rgb(219,134,24)"/><text x="898.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py:30) (13 samples, 3.87%)</title><rect x="856" y="228" width="46" height="15" fill="rgb(205,210,26)"/><text x="859.00" y="238.50">_run..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.30%)</title><rect x="898" y="244" width="4" height="15" fill="rgb(238,174,46)"/><text x="901.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.30%)</title><rect x="898" y="260" width="4" height="15" fill="rgb(226,22,44)"/><text x="901.00" y="270.50"></text></g><g><title>0x7f07e775114a (libc-2.29.so) (1 samples, 0.30%)</title><rect x="898" y="276" width="4" height="15" fill="rgb(214,45,42)"/><text x="901.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (28 samples, 8.33%)</title><rect x="807" y="196" width="98" height="15" fill="rgb(206,218,41)"/><text x="810.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (25 samples, 7.44%)</title><rect x="817" y="212" width="88" height="15" fill="rgb(226,20,32)"/><text x="820.00" y="222.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py:31) (1 samples, 0.30%)</title><rect x="902" y="228" width="3" height="15" fill="rgb(210,138,44)"/><text x="905.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (29 samples, 8.63%)</title><rect x="807" y="180" width="102" height="15" fill="rgb(215,181,26)"/><text x="810.00" y="190.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.30%)</title><rect x="905" y="196" width="4" height="15" fill="rgb(218,212,46)"/><text x="908.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.60%)</title><rect x="909" y="180" width="7" height="15" fill="rgb(226,149,49)"/><text x="912.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.30%)</title><rect x="916" y="180" width="3" height="15" fill="rgb(247,112,33)"/><text x="919.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.30%)</title><rect x="919" y="180" width="4" height="15" fill="rgb(216,4,40)"/><text x="922.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.60%)</title><rect x="923" y="180" width="7" height="15" fill="rgb(246,200,45)"/><text x="926.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (42 samples, 12.50%)</title><rect x="786" y="164" width="147" height="15" fill="rgb(236,27,39)"/><text x="789.00" y="174.50">_run_sequence_runt..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.30%)</title><rect x="930" y="180" width="3" height="15" fill="rgb(216,44,29)"/><text x="933.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (60 samples, 17.86%)</title><rect x="747" y="132" width="211" height="15" fill="rgb(213,40,9)"/><text x="750.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (55 samples, 16.37%)</title><rect x="765" y="148" width="193" height="15" fill="rgb(233,124,45)"/><text x="768.00" y="158.50">run (mlprodict/onnxrt/onn..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (7 samples, 2.08%)</title><rect x="933" y="164" width="25" height="15" fill="rgb(208,67,39)"/><text x="936.00" y="174.50">_..</text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.60%)</title><rect x="951" y="180" width="7" height="15" fill="rgb(214,206,34)"/><text x="954.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1_4_12_float_.py:61) (66 samples, 19.64%)</title><rect x="729" y="52" width="232" height="15" fill="rgb(208,107,14)"/><text x="732.00" y="62.50">&lt;module&gt; (bench_LinearRegressi..</text></g><g><title>profile_pyrt (bench_LinearRegression_default_m_reg_1_4_12_float_.py:60) (66 samples, 19.64%)</title><rect x="729" y="68" width="232" height="15" fill="rgb(216,35,1)"/><text x="732.00" y="78.50">profile_pyrt (bench_LinearRegr..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py:37) (65 samples, 19.35%)</title><rect x="733" y="84" width="228" height="15" fill="rgb(216,45,37)"/><text x="736.00" y="94.50">setup_profile (bench_LinearReg..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py:31) (65 samples, 19.35%)</title><rect x="733" y="100" width="228" height="15" fill="rgb(219,207,5)"/><text x="736.00" y="110.50">profile (bench_LinearRegressio..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (63 samples, 18.75%)</title><rect x="740" y="116" width="221" height="15" fill="rgb(250,79,12)"/><text x="743.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.30%)</title><rect x="958" y="132" width="3" height="15" fill="rgb(212,182,8)"/><text x="961.00" y="142.50"></text></g><g><title>profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py:30) (1 samples, 0.30%)</title><rect x="961" y="100" width="4" height="15" fill="rgb(245,50,31)"/><text x="964.00" y="110.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.30%)</title><rect x="986" y="148" width="3" height="15" fill="rgb(249,73,37)"/><text x="989.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.30%)</title><rect x="989" y="148" width="4" height="15" fill="rgb(229,84,46)"/><text x="992.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.30%)</title><rect x="993" y="148" width="3" height="15" fill="rgb(230,67,36)"/><text x="996.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.30%)</title><rect x="1007" y="196" width="3" height="15" fill="rgb(222,134,8)"/><text x="1010.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.30%)</title><rect x="1010" y="196" width="4" height="15" fill="rgb(229,125,47)"/><text x="1013.00" y="206.50"></text></g><g><title>0x7f07a5760ff9 (?) (1 samples, 0.30%)</title><rect x="1021" y="228" width="3" height="15" fill="rgb(222,174,9)"/><text x="1024.00" y="238.50"></text></g><g><title>0x7f07a575a993 (?) (1 samples, 0.30%)</title><rect x="1021" y="244" width="3" height="15" fill="rgb(217,121,29)"/><text x="1024.00" y="254.50"></text></g><g><title>0x7f07a5c08e64 (?) (1 samples, 0.30%)</title><rect x="1021" y="260" width="3" height="15" fill="rgb(254,57,23)"/><text x="1024.00" y="270.50"></text></g><g><title>onnxruntime::NodeArg::Name[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1028" y="260" width="3" height="15" fill="rgb(214,104,2)"/><text x="1031.00" y="270.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (7 samples, 2.08%)</title><rect x="1014" y="196" width="24" height="15" fill="rgb(226,121,7)"/><text x="1017.00" y="206.50">r..</text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (7 samples, 2.08%)</title><rect x="1014" y="212" width="24" height="15" fill="rgb(241,126,52)"/><text x="1017.00" y="222.50">&lt;..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.19%)</title><rect x="1024" y="228" width="14" height="15" fill="rgb(211,217,18)"/><text x="1027.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.19%)</title><rect x="1024" y="244" width="14" height="15" fill="rgb(242,194,54)"/><text x="1027.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="1031" y="260" width="7" height="15" fill="rgb(241,60,31)"/><text x="1034.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="1031" y="276" width="7" height="15" fill="rgb(210,160,44)"/><text x="1034.00" y="286.50"></text></g><g><title>std::type_info::hash_code (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1035" y="292" width="3" height="15" fill="rgb(220,1,29)"/><text x="1038.00" y="302.50"></text></g><g><title>0x7f07e7730be4 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1067" y="260" width="3" height="15" fill="rgb(248,5,54)"/><text x="1070.00" y="270.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="1070" y="260" width="4" height="15" fill="rgb(225,100,24)"/><text x="1073.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1074" y="292" width="3" height="15" fill="rgb(219,59,36)"/><text x="1077.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1074" y="308" width="3" height="15" fill="rgb(208,11,22)"/><text x="1077.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1074" y="324" width="3" height="15" fill="rgb(207,19,50)"/><text x="1077.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1077" y="292" width="4" height="15" fill="rgb(247,200,39)"/><text x="1080.00" y="302.50"></text></g><g><title>0x7f07e7730957 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1077" y="308" width="4" height="15" fill="rgb(219,141,9)"/><text x="1080.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1081" y="292" width="3" height="15" fill="rgb(211,57,37)"/><text x="1084.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1081" y="308" width="3" height="15" fill="rgb(238,117,12)"/><text x="1084.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="1081" y="324" width="3" height="15" fill="rgb(217,73,2)"/><text x="1084.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1081" y="340" width="3" height="15" fill="rgb(230,136,15)"/><text x="1084.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionProvider::OnRunStart (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1084" y="292" width="4" height="15" fill="rgb(251,75,40)"/><text x="1087.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1091" y="356" width="4" height="15" fill="rgb(226,28,39)"/><text x="1094.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1095" y="388" width="3" height="15" fill="rgb(208,3,8)"/><text x="1098.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="1095" y="356" width="7" height="15" fill="rgb(224,223,33)"/><text x="1098.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="1095" y="372" width="7" height="15" fill="rgb(210,38,1)"/><text x="1098.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1098" y="388" width="4" height="15" fill="rgb(249,112,16)"/><text x="1101.00" y="398.50"></text></g><g><title>0x7f07e773f6a2 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1098" y="404" width="4" height="15" fill="rgb(253,43,28)"/><text x="1101.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1102" y="356" width="3" height="15" fill="rgb(233,99,49)"/><text x="1105.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1102" y="372" width="3" height="15" fill="rgb(213,129,17)"/><text x="1105.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1102" y="388" width="3" height="15" fill="rgb(251,227,11)"/><text x="1105.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.49%)</title><rect x="1091" y="340" width="18" height="15" fill="rgb(230,187,21)"/><text x="1094.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1105" y="356" width="4" height="15" fill="rgb(242,56,19)"/><text x="1108.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1105" y="372" width="4" height="15" fill="rgb(226,220,40)"/><text x="1108.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1109" y="340" width="3" height="15" fill="rgb(209,117,3)"/><text x="1112.00" y="350.50"></text></g><g><title>0x7f07a5727850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1112" y="356" width="4" height="15" fill="rgb(240,145,21)"/><text x="1115.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.17%)</title><rect x="1074" y="260" width="49" height="15" fill="rgb(233,142,4)"/><text x="1077.00" y="270.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.17%)</title><rect x="1074" y="276" width="49" height="15" fill="rgb(215,78,28)"/><text x="1077.00" y="286.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.98%)</title><rect x="1088" y="292" width="35" height="15" fill="rgb(244,39,25)"/><text x="1091.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.68%)</title><rect x="1091" y="308" width="32" height="15" fill="rgb(205,197,12)"/><text x="1094.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.68%)</title><rect x="1091" y="324" width="32" height="15" fill="rgb(208,141,15)"/><text x="1094.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.89%)</title><rect x="1112" y="340" width="11" height="15" fill="rgb(251,99,12)"/><text x="1115.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="1116" y="356" width="7" height="15" fill="rgb(249,227,19)"/><text x="1119.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="1116" y="372" width="7" height="15" fill="rgb(250,74,21)"/><text x="1119.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1119" y="388" width="4" height="15" fill="rgb(222,42,41)"/><text x="1122.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1119" y="404" width="4" height="15" fill="rgb(231,117,37)"/><text x="1122.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1119" y="420" width="4" height="15" fill="rgb(242,23,16)"/><text x="1122.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1119" y="436" width="4" height="15" fill="rgb(212,206,20)"/><text x="1122.00" y="446.50"></text></g><g><title>onnxruntime::TensorTypeBase::GetDeleteFunc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1119" y="452" width="4" height="15" fill="rgb(221,63,25)"/><text x="1122.00" y="462.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="1126" y="276" width="7" height="15" fill="rgb(249,107,43)"/><text x="1129.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.19%)</title><rect x="1123" y="260" width="14" height="15" fill="rgb(224,97,10)"/><text x="1126.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.30%)</title><rect x="1133" y="276" width="4" height="15" fill="rgb(221,209,47)"/><text x="1136.00" y="286.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.30%)</title><rect x="1144" y="276" width="3" height="15" fill="rgb(250,111,22)"/><text x="1147.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.30%)</title><rect x="1144" y="292" width="3" height="15" fill="rgb(240,68,24)"/><text x="1147.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.30%)</title><rect x="1144" y="308" width="3" height="15" fill="rgb(250,22,30)"/><text x="1147.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.19%)</title><rect x="1137" y="260" width="14" height="15" fill="rgb(205,162,29)"/><text x="1140.00" y="270.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1147" y="276" width="4" height="15" fill="rgb(243,97,0)"/><text x="1150.00" y="286.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="1151" y="260" width="3" height="15" fill="rgb(218,187,12)"/><text x="1154.00" y="270.50"></text></g><g><title>0x7f07e7730991 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1154" y="276" width="4" height="15" fill="rgb(210,169,29)"/><text x="1157.00" y="286.50"></text></g><g><title>0x7f07e773095e (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1158" y="308" width="3" height="15" fill="rgb(244,75,53)"/><text x="1161.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 8.63%)</title><rect x="1063" y="244" width="102" height="15" fill="rgb(236,58,2)"/><text x="1066.00" y="254.50">onnxruntime:..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.89%)</title><rect x="1154" y="260" width="11" height="15" fill="rgb(221,19,3)"/><text x="1157.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="1158" y="276" width="7" height="15" fill="rgb(205,195,13)"/><text x="1161.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="1158" y="292" width="7" height="15" fill="rgb(241,110,51)"/><text x="1161.00" y="302.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="1161" y="308" width="4" height="15" fill="rgb(235,123,32)"/><text x="1164.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1165" y="244" width="3" height="15" fill="rgb(230,41,35)"/><text x="1168.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1168" y="244" width="4" height="15" fill="rgb(237,33,11)"/><text x="1171.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1168" y="260" width="4" height="15" fill="rgb(235,94,38)"/><text x="1171.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (50 samples, 14.88%)</title><rect x="1000" y="164" width="175" height="15" fill="rgb(237,51,30)"/><text x="1003.00" y="174.50">_run_whole_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (49 samples, 14.58%)</title><rect x="1003" y="180" width="172" height="15" fill="rgb(236,41,44)"/><text x="1006.00" y="190.50">run (mlprodict/onnxrt/..</text></g><g><title>run (onnxruntime/capi/session.py:136) (39 samples, 11.61%)</title><rect x="1038" y="196" width="137" height="15" fill="rgb(254,43,8)"/><text x="1041.00" y="206.50">run (onnxruntime/..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 10.12%)</title><rect x="1056" y="212" width="119" height="15" fill="rgb(222,98,0)"/><text x="1059.00" y="222.50">pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 9.82%)</title><rect x="1060" y="228" width="115" height="15" fill="rgb(237,227,0)"/><text x="1063.00" y="238.50">void pybind11:..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1172" y="244" width="3" height="15" fill="rgb(220,179,15)"/><text x="1175.00" y="254.50"></text></g><g><title>all (336 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(226,40,4)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1_4_12_float_.py:68) (65 samples, 19.35%)</title><rect x="961" y="52" width="229" height="15" fill="rgb(224,126,41)"/><text x="964.00" y="62.50">&lt;module&gt; (bench_LinearRegressi..</text></g><g><title>profile_ort (bench_LinearRegression_default_m_reg_1_4_12_float_.py:67) (65 samples, 19.35%)</title><rect x="961" y="68" width="229" height="15" fill="rgb(243,24,19)"/><text x="964.00" y="78.50">profile_ort (bench_LinearRegre..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py:37) (65 samples, 19.35%)</title><rect x="961" y="84" width="229" height="15" fill="rgb(237,119,26)"/><text x="964.00" y="94.50">setup_profile (bench_LinearReg..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py:31) (64 samples, 19.05%)</title><rect x="965" y="100" width="225" height="15" fill="rgb(254,219,50)"/><text x="968.00" y="110.50">profile (bench_LinearRegressi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (63 samples, 18.75%)</title><rect x="968" y="116" width="222" height="15" fill="rgb(241,207,3)"/><text x="971.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (62 samples, 18.45%)</title><rect x="972" y="132" width="218" height="15" fill="rgb(225,135,33)"/><text x="975.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (55 samples, 16.37%)</title><rect x="996" y="148" width="194" height="15" fill="rgb(234,157,46)"/><text x="999.00" y="158.50">run (mlprodict/onnxrt/onn..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (4 samples, 1.19%)</title><rect x="1175" y="164" width="15" height="15" fill="rgb(208,174,25)"/><text x="1178.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.30%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(215,69,51)"/><text x="1189.00" y="190.50"></text></g></g></svg>