<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2054" onload="init(evt)" viewBox="0 0 1200 2054" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2054" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2037.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2037.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(215,141,10)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(211,24,45)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(220,22,17)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(232,217,40)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="10" y="932" width="5" height="15" fill="rgb(233,167,51)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="10" y="948" width="5" height="15" fill="rgb(246,35,34)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="10" y="964" width="5" height="15" fill="rgb(240,48,11)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="10" y="980" width="5" height="15" fill="rgb(211,80,25)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="10" y="996" width="5" height="15" fill="rgb(243,94,53)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="10" y="1012" width="5" height="15" fill="rgb(208,24,29)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.45%)</title><rect x="10" y="1028" width="5" height="15" fill="rgb(216,188,31)"/><text x="13.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.45%)</title><rect x="10" y="1044" width="5" height="15" fill="rgb(223,108,35)"/><text x="13.00" y="1054.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.45%)</title><rect x="20" y="1012" width="6" height="15" fill="rgb(231,75,6)"/><text x="23.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.45%)</title><rect x="20" y="1028" width="6" height="15" fill="rgb(218,66,15)"/><text x="23.00" y="1038.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (3 samples, 1.36%)</title><rect x="15" y="932" width="16" height="15" fill="rgb(216,1,29)"/><text x="18.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (3 samples, 1.36%)</title><rect x="15" y="948" width="16" height="15" fill="rgb(231,132,17)"/><text x="18.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (3 samples, 1.36%)</title><rect x="15" y="964" width="16" height="15" fill="rgb(212,102,1)"/><text x="18.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (3 samples, 1.36%)</title><rect x="15" y="980" width="16" height="15" fill="rgb(238,45,21)"/><text x="18.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.90%)</title><rect x="20" y="996" width="11" height="15" fill="rgb(224,139,37)"/><text x="23.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.45%)</title><rect x="26" y="1012" width="5" height="15" fill="rgb(230,158,33)"/><text x="29.00" y="1022.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 2.26%)</title><rect x="10" y="836" width="26" height="15" fill="rgb(215,147,46)"/><text x="13.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 2.26%)</title><rect x="10" y="852" width="26" height="15" fill="rgb(222,143,18)"/><text x="13.00" y="862.50">_..</text></g><g><title>_build_master (pkg_resources/__init__.py) (4 samples, 1.81%)</title><rect x="15" y="868" width="21" height="15" fill="rgb(252,195,37)"/><text x="18.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (4 samples, 1.81%)</title><rect x="15" y="884" width="21" height="15" fill="rgb(217,13,27)"/><text x="18.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (4 samples, 1.81%)</title><rect x="15" y="900" width="21" height="15" fill="rgb(222,68,44)"/><text x="18.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (4 samples, 1.81%)</title><rect x="15" y="916" width="21" height="15" fill="rgb(238,66,33)"/><text x="18.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="31" y="932" width="5" height="15" fill="rgb(229,0,12)"/><text x="34.00" y="942.50"></text></g><g><title>basename (posixpath.py) (1 samples, 0.45%)</title><rect x="31" y="948" width="5" height="15" fill="rgb(208,71,25)"/><text x="34.00" y="958.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.45%)</title><rect x="31" y="964" width="5" height="15" fill="rgb(239,64,6)"/><text x="34.00" y="974.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 2.71%)</title><rect x="10" y="292" width="32" height="15" fill="rgb(215,163,40)"/><text x="13.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="308" width="32" height="15" fill="rgb(211,44,53)"/><text x="13.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="324" width="32" height="15" fill="rgb(226,59,29)"/><text x="13.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="340" width="32" height="15" fill="rgb(223,31,47)"/><text x="13.00" y="350.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.71%)</title><rect x="10" y="356" width="32" height="15" fill="rgb(212,84,4)"/><text x="13.00" y="366.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="372" width="32" height="15" fill="rgb(239,221,49)"/><text x="13.00" y="382.50">_c..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 2.71%)</title><rect x="10" y="388" width="32" height="15" fill="rgb(209,1,1)"/><text x="13.00" y="398.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="404" width="32" height="15" fill="rgb(213,219,39)"/><text x="13.00" y="414.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="420" width="32" height="15" fill="rgb(223,212,23)"/><text x="13.00" y="430.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="436" width="32" height="15" fill="rgb(220,144,4)"/><text x="13.00" y="446.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.71%)</title><rect x="10" y="452" width="32" height="15" fill="rgb(235,17,16)"/><text x="13.00" y="462.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="468" width="32" height="15" fill="rgb(221,77,23)"/><text x="13.00" y="478.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 2.71%)</title><rect x="10" y="484" width="32" height="15" fill="rgb(247,38,7)"/><text x="13.00" y="494.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="500" width="32" height="15" fill="rgb(239,178,10)"/><text x="13.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="516" width="32" height="15" fill="rgb(248,63,27)"/><text x="13.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="532" width="32" height="15" fill="rgb(230,198,53)"/><text x="13.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.71%)</title><rect x="10" y="548" width="32" height="15" fill="rgb(241,75,4)"/><text x="13.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="564" width="32" height="15" fill="rgb(244,22,5)"/><text x="13.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 2.71%)</title><rect x="10" y="580" width="32" height="15" fill="rgb(224,48,30)"/><text x="13.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="596" width="32" height="15" fill="rgb(229,18,18)"/><text x="13.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="612" width="32" height="15" fill="rgb(210,43,35)"/><text x="13.00" y="622.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="628" width="32" height="15" fill="rgb(246,65,2)"/><text x="13.00" y="638.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="644" width="32" height="15" fill="rgb(243,19,53)"/><text x="13.00" y="654.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="660" width="32" height="15" fill="rgb(215,102,28)"/><text x="13.00" y="670.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="676" width="32" height="15" fill="rgb(207,186,22)"/><text x="13.00" y="686.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.71%)</title><rect x="10" y="692" width="32" height="15" fill="rgb(219,122,50)"/><text x="13.00" y="702.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="708" width="32" height="15" fill="rgb(253,166,15)"/><text x="13.00" y="718.50">_c..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 2.71%)</title><rect x="10" y="724" width="32" height="15" fill="rgb(212,88,54)"/><text x="13.00" y="734.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="740" width="32" height="15" fill="rgb(249,87,5)"/><text x="13.00" y="750.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="756" width="32" height="15" fill="rgb(240,149,31)"/><text x="13.00" y="766.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="772" width="32" height="15" fill="rgb(235,109,26)"/><text x="13.00" y="782.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.71%)</title><rect x="10" y="788" width="32" height="15" fill="rgb(252,8,33)"/><text x="13.00" y="798.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.71%)</title><rect x="10" y="804" width="32" height="15" fill="rgb(232,87,2)"/><text x="13.00" y="814.50">_c..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 2.71%)</title><rect x="10" y="820" width="32" height="15" fill="rgb(213,202,44)"/><text x="13.00" y="830.50">&lt;m..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="836" width="6" height="15" fill="rgb(214,225,20)"/><text x="39.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="852" width="6" height="15" fill="rgb(210,180,0)"/><text x="39.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="868" width="6" height="15" fill="rgb(220,140,36)"/><text x="39.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="884" width="6" height="15" fill="rgb(234,179,19)"/><text x="39.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="900" width="6" height="15" fill="rgb(208,16,36)"/><text x="39.00" y="910.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="916" width="6" height="15" fill="rgb(236,99,44)"/><text x="39.00" y="926.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.45%)</title><rect x="36" y="932" width="6" height="15" fill="rgb(236,4,12)"/><text x="39.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="948" width="6" height="15" fill="rgb(254,112,42)"/><text x="39.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="964" width="6" height="15" fill="rgb(247,120,27)"/><text x="39.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="980" width="6" height="15" fill="rgb(250,94,49)"/><text x="39.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="36" y="996" width="6" height="15" fill="rgb(251,169,39)"/><text x="39.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="1012" width="6" height="15" fill="rgb(205,61,30)"/><text x="39.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/__init__.py) (1 samples, 0.45%)</title><rect x="36" y="1028" width="6" height="15" fill="rgb(254,85,37)"/><text x="39.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="1044" width="6" height="15" fill="rgb(240,21,17)"/><text x="39.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="1060" width="6" height="15" fill="rgb(235,155,11)"/><text x="39.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="1076" width="6" height="15" fill="rgb(246,125,9)"/><text x="39.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="36" y="1092" width="6" height="15" fill="rgb(206,214,28)"/><text x="39.00" y="1102.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="36" y="1108" width="6" height="15" fill="rgb(210,127,47)"/><text x="39.00" y="1118.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="36" y="1124" width="6" height="15" fill="rgb(224,56,48)"/><text x="39.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="916" width="5" height="15" fill="rgb(208,15,1)"/><text x="45.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="932" width="5" height="15" fill="rgb(251,64,29)"/><text x="45.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="948" width="5" height="15" fill="rgb(215,89,46)"/><text x="45.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="964" width="5" height="15" fill="rgb(242,11,22)"/><text x="45.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="980" width="5" height="15" fill="rgb(239,208,9)"/><text x="45.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.45%)</title><rect x="42" y="996" width="5" height="15" fill="rgb(205,163,20)"/><text x="45.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1012" width="5" height="15" fill="rgb(223,108,11)"/><text x="45.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1028" width="5" height="15" fill="rgb(250,62,23)"/><text x="45.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1044" width="5" height="15" fill="rgb(242,127,48)"/><text x="45.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1060" width="5" height="15" fill="rgb(246,206,24)"/><text x="45.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1076" width="5" height="15" fill="rgb(207,196,0)"/><text x="45.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="1092" width="5" height="15" fill="rgb(215,145,51)"/><text x="45.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1108" width="5" height="15" fill="rgb(238,151,23)"/><text x="45.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.45%)</title><rect x="42" y="1124" width="5" height="15" fill="rgb(235,33,46)"/><text x="45.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1140" width="5" height="15" fill="rgb(249,207,5)"/><text x="45.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1156" width="5" height="15" fill="rgb(244,215,24)"/><text x="45.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1172" width="5" height="15" fill="rgb(209,111,23)"/><text x="45.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="1188" width="5" height="15" fill="rgb(228,78,41)"/><text x="45.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1204" width="5" height="15" fill="rgb(245,139,15)"/><text x="45.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_root.py) (1 samples, 0.45%)</title><rect x="42" y="1220" width="5" height="15" fill="rgb(246,24,38)"/><text x="45.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1236" width="5" height="15" fill="rgb(249,3,31)"/><text x="45.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1252" width="5" height="15" fill="rgb(234,70,1)"/><text x="45.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1268" width="5" height="15" fill="rgb(242,149,32)"/><text x="45.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="1284" width="5" height="15" fill="rgb(218,213,3)"/><text x="45.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1300" width="5" height="15" fill="rgb(224,150,25)"/><text x="45.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/minpack.py) (1 samples, 0.45%)</title><rect x="42" y="1316" width="5" height="15" fill="rgb(249,82,45)"/><text x="45.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1332" width="5" height="15" fill="rgb(228,94,35)"/><text x="45.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1348" width="5" height="15" fill="rgb(228,115,2)"/><text x="45.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1364" width="5" height="15" fill="rgb(213,120,48)"/><text x="45.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="1380" width="5" height="15" fill="rgb(215,126,33)"/><text x="45.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1396" width="5" height="15" fill="rgb(212,100,4)"/><text x="45.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/__init__.py) (1 samples, 0.45%)</title><rect x="42" y="1412" width="5" height="15" fill="rgb(229,99,42)"/><text x="45.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1428" width="5" height="15" fill="rgb(218,19,37)"/><text x="45.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1444" width="5" height="15" fill="rgb(210,224,43)"/><text x="45.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1460" width="5" height="15" fill="rgb(252,47,50)"/><text x="45.00" y="1470.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1476" width="5" height="15" fill="rgb(249,182,42)"/><text x="45.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="500" width="10" height="15" fill="rgb(252,225,35)"/><text x="45.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="516" width="10" height="15" fill="rgb(217,217,7)"/><text x="45.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="532" width="10" height="15" fill="rgb(245,175,9)"/><text x="45.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="42" y="548" width="10" height="15" fill="rgb(216,178,2)"/><text x="45.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="564" width="10" height="15" fill="rgb(223,30,10)"/><text x="45.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.90%)</title><rect x="42" y="580" width="10" height="15" fill="rgb(236,16,1)"/><text x="45.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="596" width="10" height="15" fill="rgb(210,98,28)"/><text x="45.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="612" width="10" height="15" fill="rgb(216,25,15)"/><text x="45.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="628" width="10" height="15" fill="rgb(251,198,3)"/><text x="45.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="42" y="644" width="10" height="15" fill="rgb(206,77,45)"/><text x="45.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="660" width="10" height="15" fill="rgb(253,98,30)"/><text x="45.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.90%)</title><rect x="42" y="676" width="10" height="15" fill="rgb(252,41,10)"/><text x="45.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="692" width="10" height="15" fill="rgb(231,145,43)"/><text x="45.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="708" width="10" height="15" fill="rgb(247,189,34)"/><text x="45.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="724" width="10" height="15" fill="rgb(214,133,11)"/><text x="45.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="42" y="740" width="10" height="15" fill="rgb(228,174,37)"/><text x="45.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="756" width="10" height="15" fill="rgb(205,25,28)"/><text x="45.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.90%)</title><rect x="42" y="772" width="10" height="15" fill="rgb(212,85,38)"/><text x="45.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="788" width="10" height="15" fill="rgb(213,22,32)"/><text x="45.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="804" width="10" height="15" fill="rgb(218,50,40)"/><text x="45.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="820" width="10" height="15" fill="rgb(241,106,32)"/><text x="45.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="836" width="10" height="15" fill="rgb(227,16,48)"/><text x="45.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="852" width="10" height="15" fill="rgb(244,124,16)"/><text x="45.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="42" y="868" width="10" height="15" fill="rgb(216,5,51)"/><text x="45.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="884" width="10" height="15" fill="rgb(232,107,36)"/><text x="45.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.90%)</title><rect x="42" y="900" width="10" height="15" fill="rgb(237,171,35)"/><text x="45.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="916" width="5" height="15" fill="rgb(213,9,51)"/><text x="50.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="932" width="5" height="15" fill="rgb(236,90,38)"/><text x="50.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="948" width="5" height="15" fill="rgb(224,49,42)"/><text x="50.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="964" width="5" height="15" fill="rgb(232,8,31)"/><text x="50.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="980" width="5" height="15" fill="rgb(228,189,52)"/><text x="50.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="47" y="996" width="5" height="15" fill="rgb(214,146,50)"/><text x="50.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1012" width="5" height="15" fill="rgb(241,203,51)"/><text x="50.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.45%)</title><rect x="47" y="1028" width="5" height="15" fill="rgb(236,83,0)"/><text x="50.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.45%)</title><rect x="47" y="1044" width="5" height="15" fill="rgb(207,103,20)"/><text x="50.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.45%)</title><rect x="47" y="1060" width="5" height="15" fill="rgb(230,50,26)"/><text x="50.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.45%)</title><rect x="47" y="1076" width="5" height="15" fill="rgb(224,204,45)"/><text x="50.00" y="1086.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.45%)</title><rect x="47" y="1092" width="5" height="15" fill="rgb(227,120,3)"/><text x="50.00" y="1102.50"></text></g><g><title>0x7fc9ea990130 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="47" y="1108" width="5" height="15" fill="rgb(218,179,16)"/><text x="50.00" y="1118.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.45%)</title><rect x="52" y="804" width="6" height="15" fill="rgb(206,140,49)"/><text x="55.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="820" width="6" height="15" fill="rgb(218,186,17)"/><text x="55.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="836" width="6" height="15" fill="rgb(222,65,36)"/><text x="55.00" y="846.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="852" width="6" height="15" fill="rgb(211,78,36)"/><text x="55.00" y="862.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="52" y="868" width="6" height="15" fill="rgb(233,88,25)"/><text x="55.00" y="878.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="52" y="884" width="6" height="15" fill="rgb(217,51,10)"/><text x="55.00" y="894.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="52" y="900" width="6" height="15" fill="rgb(236,132,35)"/><text x="55.00" y="910.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="52" y="916" width="6" height="15" fill="rgb(244,199,8)"/><text x="55.00" y="926.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="52" y="932" width="6" height="15" fill="rgb(248,11,39)"/><text x="55.00" y="942.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="52" y="948" width="6" height="15" fill="rgb(222,186,4)"/><text x="55.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.45%)</title><rect x="52" y="964" width="6" height="15" fill="rgb(232,12,5)"/><text x="55.00" y="974.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.45%)</title><rect x="52" y="980" width="6" height="15" fill="rgb(221,17,17)"/><text x="55.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.52%)</title><rect x="10" y="196" width="53" height="15" fill="rgb(217,154,49)"/><text x="13.00" y="206.50">_call..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.52%)</title><rect x="10" y="212" width="53" height="15" fill="rgb(230,111,9)"/><text x="13.00" y="222.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.52%)</title><rect x="10" y="228" width="53" height="15" fill="rgb(234,137,5)"/><text x="13.00" y="238.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.52%)</title><rect x="10" y="244" width="53" height="15" fill="rgb(247,188,36)"/><text x="13.00" y="254.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 4.52%)</title><rect x="10" y="260" width="53" height="15" fill="rgb(219,46,20)"/><text x="13.00" y="270.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.52%)</title><rect x="10" y="276" width="53" height="15" fill="rgb(233,10,39)"/><text x="13.00" y="286.50">_call..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (4 samples, 1.81%)</title><rect x="42" y="292" width="21" height="15" fill="rgb(245,44,4)"/><text x="45.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="42" y="308" width="21" height="15" fill="rgb(228,103,13)"/><text x="45.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="42" y="324" width="21" height="15" fill="rgb(244,204,44)"/><text x="45.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="42" y="340" width="21" height="15" fill="rgb(235,14,15)"/><text x="45.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="42" y="356" width="21" height="15" fill="rgb(251,134,37)"/><text x="45.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="42" y="372" width="21" height="15" fill="rgb(225,153,42)"/><text x="45.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (4 samples, 1.81%)</title><rect x="42" y="388" width="21" height="15" fill="rgb(209,225,39)"/><text x="45.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="42" y="404" width="21" height="15" fill="rgb(250,188,54)"/><text x="45.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="42" y="420" width="21" height="15" fill="rgb(236,79,37)"/><text x="45.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="42" y="436" width="21" height="15" fill="rgb(251,64,30)"/><text x="45.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="42" y="452" width="21" height="15" fill="rgb(225,22,26)"/><text x="45.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="42" y="468" width="21" height="15" fill="rgb(225,27,26)"/><text x="45.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (4 samples, 1.81%)</title><rect x="42" y="484" width="21" height="15" fill="rgb(209,96,27)"/><text x="45.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="500" width="11" height="15" fill="rgb(231,213,27)"/><text x="55.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="516" width="11" height="15" fill="rgb(216,199,44)"/><text x="55.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="532" width="11" height="15" fill="rgb(220,208,47)"/><text x="55.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="548" width="11" height="15" fill="rgb(239,55,44)"/><text x="55.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="564" width="11" height="15" fill="rgb(207,135,14)"/><text x="55.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="52" y="580" width="11" height="15" fill="rgb(217,131,26)"/><text x="55.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="596" width="11" height="15" fill="rgb(217,196,18)"/><text x="55.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (2 samples, 0.90%)</title><rect x="52" y="612" width="11" height="15" fill="rgb(212,97,50)"/><text x="55.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="628" width="11" height="15" fill="rgb(221,128,32)"/><text x="55.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="644" width="11" height="15" fill="rgb(216,119,4)"/><text x="55.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="660" width="11" height="15" fill="rgb(225,226,45)"/><text x="55.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="52" y="676" width="11" height="15" fill="rgb(219,210,23)"/><text x="55.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="692" width="11" height="15" fill="rgb(210,17,51)"/><text x="55.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (2 samples, 0.90%)</title><rect x="52" y="708" width="11" height="15" fill="rgb(251,122,10)"/><text x="55.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="724" width="11" height="15" fill="rgb(211,192,23)"/><text x="55.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="740" width="11" height="15" fill="rgb(210,90,44)"/><text x="55.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="756" width="11" height="15" fill="rgb(238,37,1)"/><text x="55.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="52" y="772" width="11" height="15" fill="rgb(218,16,7)"/><text x="55.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="788" width="11" height="15" fill="rgb(241,151,21)"/><text x="55.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.45%)</title><rect x="58" y="804" width="5" height="15" fill="rgb(233,192,4)"/><text x="61.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="820" width="5" height="15" fill="rgb(217,60,30)"/><text x="61.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="836" width="5" height="15" fill="rgb(236,20,37)"/><text x="61.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="852" width="5" height="15" fill="rgb(244,190,46)"/><text x="61.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="58" y="868" width="5" height="15" fill="rgb(214,71,26)"/><text x="61.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="884" width="5" height="15" fill="rgb(229,177,34)"/><text x="61.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/my_exceptions.py) (1 samples, 0.45%)</title><rect x="58" y="900" width="5" height="15" fill="rgb(237,218,9)"/><text x="61.00" y="910.50"></text></g><g><title>_mk_common_exceptions (joblib/my_exceptions.py) (1 samples, 0.45%)</title><rect x="58" y="916" width="5" height="15" fill="rgb(217,84,34)"/><text x="61.00" y="926.50"></text></g><g><title>_mk_exception (joblib/my_exceptions.py) (1 samples, 0.45%)</title><rect x="58" y="932" width="5" height="15" fill="rgb(245,64,41)"/><text x="61.00" y="942.50"></text></g><g><title>_compile (tokenize.py) (1 samples, 0.45%)</title><rect x="68" y="1396" width="6" height="15" fill="rgb(225,170,26)"/><text x="71.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.45%)</title><rect x="68" y="1412" width="6" height="15" fill="rgb(238,115,1)"/><text x="71.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.45%)</title><rect x="68" y="1428" width="6" height="15" fill="rgb(223,151,5)"/><text x="71.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.45%)</title><rect x="68" y="1444" width="6" height="15" fill="rgb(214,111,23)"/><text x="71.00" y="1454.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="68" y="1460" width="6" height="15" fill="rgb(214,118,47)"/><text x="71.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.45%)</title><rect x="68" y="1476" width="6" height="15" fill="rgb(207,126,40)"/><text x="71.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="68" y="1492" width="6" height="15" fill="rgb(249,16,52)"/><text x="71.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.45%)</title><rect x="68" y="1508" width="6" height="15" fill="rgb(234,182,1)"/><text x="71.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="68" y="1524" width="6" height="15" fill="rgb(221,130,52)"/><text x="71.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.45%)</title><rect x="68" y="1540" width="6" height="15" fill="rgb(208,49,38)"/><text x="71.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="68" y="1556" width="6" height="15" fill="rgb(207,214,51)"/><text x="71.00" y="1566.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.45%)</title><rect x="68" y="1572" width="6" height="15" fill="rgb(231,176,15)"/><text x="71.00" y="1582.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="68" y="1588" width="6" height="15" fill="rgb(214,199,7)"/><text x="71.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1124" width="11" height="15" fill="rgb(254,228,54)"/><text x="71.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1140" width="11" height="15" fill="rgb(244,154,28)"/><text x="71.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1156" width="11" height="15" fill="rgb(233,85,20)"/><text x="71.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="68" y="1172" width="11" height="15" fill="rgb(244,139,12)"/><text x="71.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1188" width="11" height="15" fill="rgb(222,212,2)"/><text x="71.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (2 samples, 0.90%)</title><rect x="68" y="1204" width="11" height="15" fill="rgb(238,174,25)"/><text x="71.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1220" width="11" height="15" fill="rgb(247,162,15)"/><text x="71.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1236" width="11" height="15" fill="rgb(242,162,46)"/><text x="71.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1252" width="11" height="15" fill="rgb(227,178,49)"/><text x="71.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="68" y="1268" width="11" height="15" fill="rgb(225,16,37)"/><text x="71.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1284" width="11" height="15" fill="rgb(225,201,21)"/><text x="71.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (2 samples, 0.90%)</title><rect x="68" y="1300" width="11" height="15" fill="rgb(252,141,3)"/><text x="71.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (2 samples, 0.90%)</title><rect x="68" y="1316" width="11" height="15" fill="rgb(238,75,15)"/><text x="71.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (2 samples, 0.90%)</title><rect x="68" y="1332" width="11" height="15" fill="rgb(206,123,1)"/><text x="71.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (2 samples, 0.90%)</title><rect x="68" y="1348" width="11" height="15" fill="rgb(224,175,28)"/><text x="71.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (2 samples, 0.90%)</title><rect x="68" y="1364" width="11" height="15" fill="rgb(229,178,7)"/><text x="71.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (2 samples, 0.90%)</title><rect x="68" y="1380" width="11" height="15" fill="rgb(252,112,15)"/><text x="71.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.45%)</title><rect x="74" y="1396" width="5" height="15" fill="rgb(205,33,4)"/><text x="77.00" y="1406.50"></text></g><g><title>sre_ucs1_match.cold.27 (python3.7) (1 samples, 0.45%)</title><rect x="74" y="1412" width="5" height="15" fill="rgb(251,168,45)"/><text x="77.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="484" width="22" height="15" fill="rgb(224,192,46)"/><text x="71.00" y="494.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="500" width="22" height="15" fill="rgb(243,129,33)"/><text x="71.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="516" width="22" height="15" fill="rgb(232,180,18)"/><text x="71.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="532" width="22" height="15" fill="rgb(229,219,13)"/><text x="71.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="68" y="548" width="22" height="15" fill="rgb(224,211,9)"/><text x="71.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="564" width="22" height="15" fill="rgb(210,13,20)"/><text x="71.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 1.81%)</title><rect x="68" y="580" width="22" height="15" fill="rgb(241,141,39)"/><text x="71.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="596" width="22" height="15" fill="rgb(239,206,19)"/><text x="71.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="612" width="22" height="15" fill="rgb(210,91,26)"/><text x="71.00" y="622.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="628" width="22" height="15" fill="rgb(211,58,46)"/><text x="71.00" y="638.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="68" y="644" width="22" height="15" fill="rgb(210,28,10)"/><text x="71.00" y="654.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="660" width="22" height="15" fill="rgb(252,16,21)"/><text x="71.00" y="670.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 1.81%)</title><rect x="68" y="676" width="22" height="15" fill="rgb(234,33,36)"/><text x="71.00" y="686.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="692" width="22" height="15" fill="rgb(207,8,20)"/><text x="71.00" y="702.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="708" width="22" height="15" fill="rgb(237,67,20)"/><text x="71.00" y="718.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="724" width="22" height="15" fill="rgb(250,225,51)"/><text x="71.00" y="734.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="68" y="740" width="22" height="15" fill="rgb(221,91,17)"/><text x="71.00" y="750.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="756" width="22" height="15" fill="rgb(225,28,48)"/><text x="71.00" y="766.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 1.81%)</title><rect x="68" y="772" width="22" height="15" fill="rgb(230,186,29)"/><text x="71.00" y="782.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="788" width="22" height="15" fill="rgb(241,141,1)"/><text x="71.00" y="798.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="804" width="22" height="15" fill="rgb(210,156,12)"/><text x="71.00" y="814.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="820" width="22" height="15" fill="rgb(250,173,13)"/><text x="71.00" y="830.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="68" y="836" width="22" height="15" fill="rgb(251,149,10)"/><text x="71.00" y="846.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="852" width="22" height="15" fill="rgb(240,22,33)"/><text x="71.00" y="862.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 1.81%)</title><rect x="68" y="868" width="22" height="15" fill="rgb(218,150,36)"/><text x="71.00" y="878.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="884" width="22" height="15" fill="rgb(214,153,5)"/><text x="71.00" y="894.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="900" width="22" height="15" fill="rgb(241,39,54)"/><text x="71.00" y="910.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="916" width="22" height="15" fill="rgb(223,123,8)"/><text x="71.00" y="926.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="932" width="22" height="15" fill="rgb(217,143,48)"/><text x="71.00" y="942.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="948" width="22" height="15" fill="rgb(207,60,30)"/><text x="71.00" y="958.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="964" width="22" height="15" fill="rgb(216,224,17)"/><text x="71.00" y="974.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="68" y="980" width="22" height="15" fill="rgb(226,93,30)"/><text x="71.00" y="990.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="996" width="22" height="15" fill="rgb(213,119,47)"/><text x="71.00" y="1006.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 1.81%)</title><rect x="68" y="1012" width="22" height="15" fill="rgb(230,73,38)"/><text x="71.00" y="1022.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="1028" width="22" height="15" fill="rgb(206,103,39)"/><text x="71.00" y="1038.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="1044" width="22" height="15" fill="rgb(220,110,14)"/><text x="71.00" y="1054.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="1060" width="22" height="15" fill="rgb(236,61,33)"/><text x="71.00" y="1070.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="68" y="1076" width="22" height="15" fill="rgb(207,44,11)"/><text x="71.00" y="1086.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="68" y="1092" width="22" height="15" fill="rgb(240,61,10)"/><text x="71.00" y="1102.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 1.81%)</title><rect x="68" y="1108" width="22" height="15" fill="rgb(243,97,12)"/><text x="71.00" y="1118.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="79" y="1124" width="11" height="15" fill="rgb(217,195,2)"/><text x="82.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="79" y="1140" width="11" height="15" fill="rgb(223,53,48)"/><text x="82.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="79" y="1156" width="11" height="15" fill="rgb(241,119,9)"/><text x="82.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="79" y="1172" width="11" height="15" fill="rgb(223,196,2)"/><text x="82.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="79" y="1188" width="11" height="15" fill="rgb(245,5,26)"/><text x="82.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="79" y="1204" width="11" height="15" fill="rgb(220,82,29)"/><text x="82.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="79" y="1220" width="11" height="15" fill="rgb(211,20,17)"/><text x="82.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.90%)</title><rect x="79" y="1236" width="11" height="15" fill="rgb(232,32,7)"/><text x="82.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="79" y="1252" width="11" height="15" fill="rgb(231,197,39)"/><text x="82.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="79" y="1268" width="11" height="15" fill="rgb(243,103,27)"/><text x="82.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="79" y="1284" width="11" height="15" fill="rgb(208,174,16)"/><text x="82.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="79" y="1300" width="11" height="15" fill="rgb(229,90,44)"/><text x="82.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="79" y="1316" width="11" height="15" fill="rgb(236,200,21)"/><text x="82.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="79" y="1332" width="11" height="15" fill="rgb(210,221,48)"/><text x="82.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="79" y="1348" width="11" height="15" fill="rgb(217,159,45)"/><text x="82.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.90%)</title><rect x="79" y="1364" width="11" height="15" fill="rgb(212,203,28)"/><text x="82.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="79" y="1380" width="11" height="15" fill="rgb(230,223,13)"/><text x="82.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="79" y="1396" width="11" height="15" fill="rgb(214,205,26)"/><text x="82.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="79" y="1412" width="11" height="15" fill="rgb(208,76,33)"/><text x="82.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="79" y="1428" width="11" height="15" fill="rgb(218,54,8)"/><text x="82.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="79" y="1444" width="11" height="15" fill="rgb(209,47,43)"/><text x="82.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.90%)</title><rect x="79" y="1460" width="11" height="15" fill="rgb(245,204,13)"/><text x="82.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.90%)</title><rect x="79" y="1476" width="11" height="15" fill="rgb(243,184,6)"/><text x="82.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.90%)</title><rect x="79" y="1492" width="11" height="15" fill="rgb(230,186,44)"/><text x="82.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.90%)</title><rect x="79" y="1508" width="11" height="15" fill="rgb(211,2,30)"/><text x="82.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.90%)</title><rect x="79" y="1524" width="11" height="15" fill="rgb(222,178,5)"/><text x="82.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.90%)</title><rect x="79" y="1540" width="11" height="15" fill="rgb(240,54,37)"/><text x="82.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.90%)</title><rect x="79" y="1556" width="11" height="15" fill="rgb(226,209,37)"/><text x="82.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.90%)</title><rect x="79" y="1572" width="11" height="15" fill="rgb(210,193,8)"/><text x="82.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.45%)</title><rect x="84" y="1588" width="6" height="15" fill="rgb(233,15,1)"/><text x="87.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="90" y="772" width="5" height="15" fill="rgb(248,172,21)"/><text x="93.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="90" y="788" width="5" height="15" fill="rgb(252,158,54)"/><text x="93.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="90" y="804" width="5" height="15" fill="rgb(247,124,28)"/><text x="93.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="90" y="820" width="5" height="15" fill="rgb(215,11,31)"/><text x="93.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="90" y="836" width="5" height="15" fill="rgb(235,193,18)"/><text x="93.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="90" y="852" width="5" height="15" fill="rgb(238,43,47)"/><text x="93.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.45%)</title><rect x="90" y="868" width="5" height="15" fill="rgb(248,53,14)"/><text x="93.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="90" y="884" width="5" height="15" fill="rgb(232,50,40)"/><text x="93.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="90" y="900" width="5" height="15" fill="rgb(213,135,43)"/><text x="93.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="90" y="916" width="5" height="15" fill="rgb(246,9,27)"/><text x="93.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="90" y="932" width="5" height="15" fill="rgb(210,137,36)"/><text x="93.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="90" y="948" width="5" height="15" fill="rgb(219,129,50)"/><text x="93.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py) (1 samples, 0.45%)</title><rect x="90" y="964" width="5" height="15" fill="rgb(223,115,35)"/><text x="93.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="90" y="980" width="5" height="15" fill="rgb(219,119,39)"/><text x="93.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="90" y="996" width="5" height="15" fill="rgb(219,22,51)"/><text x="93.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="90" y="1012" width="5" height="15" fill="rgb(231,148,17)"/><text x="93.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="90" y="1028" width="5" height="15" fill="rgb(233,209,37)"/><text x="93.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="90" y="1044" width="5" height="15" fill="rgb(226,87,15)"/><text x="93.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/base.py) (1 samples, 0.45%)</title><rect x="90" y="1060" width="5" height="15" fill="rgb(245,221,11)"/><text x="93.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="90" y="1076" width="5" height="15" fill="rgb(221,94,21)"/><text x="93.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="90" y="1092" width="5" height="15" fill="rgb(215,82,33)"/><text x="93.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="90" y="1108" width="5" height="15" fill="rgb(243,15,32)"/><text x="93.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="90" y="1124" width="5" height="15" fill="rgb(222,73,6)"/><text x="93.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="90" y="1140" width="5" height="15" fill="rgb(247,54,4)"/><text x="93.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/strings.py) (1 samples, 0.45%)</title><rect x="90" y="1156" width="5" height="15" fill="rgb(224,68,53)"/><text x="93.00" y="1166.50"></text></g><g><title>StringMethods (pandas/core/strings.py) (1 samples, 0.45%)</title><rect x="90" y="1172" width="5" height="15" fill="rgb(253,84,31)"/><text x="93.00" y="1182.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.45%)</title><rect x="90" y="1188" width="5" height="15" fill="rgb(252,75,22)"/><text x="93.00" y="1198.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.45%)</title><rect x="90" y="1204" width="5" height="15" fill="rgb(251,128,13)"/><text x="93.00" y="1214.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.45%)</title><rect x="90" y="1220" width="5" height="15" fill="rgb(239,1,34)"/><text x="93.00" y="1230.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.45%)</title><rect x="90" y="1236" width="5" height="15" fill="rgb(214,186,54)"/><text x="93.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (2 samples, 0.90%)</title><rect x="95" y="1108" width="11" height="15" fill="rgb(232,50,54)"/><text x="98.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="95" y="1124" width="11" height="15" fill="rgb(220,46,48)"/><text x="98.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="95" y="1140" width="11" height="15" fill="rgb(223,215,53)"/><text x="98.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="95" y="1156" width="11" height="15" fill="rgb(252,47,18)"/><text x="98.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="95" y="1172" width="11" height="15" fill="rgb(216,44,0)"/><text x="98.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="95" y="1188" width="11" height="15" fill="rgb(217,215,53)"/><text x="98.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/internals/__init__.py) (2 samples, 0.90%)</title><rect x="95" y="1204" width="11" height="15" fill="rgb(218,90,13)"/><text x="98.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="95" y="1220" width="11" height="15" fill="rgb(230,189,3)"/><text x="98.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="95" y="1236" width="11" height="15" fill="rgb(247,2,28)"/><text x="98.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="95" y="1252" width="11" height="15" fill="rgb(226,21,42)"/><text x="98.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="95" y="1268" width="11" height="15" fill="rgb(211,0,3)"/><text x="98.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="95" y="1284" width="11" height="15" fill="rgb(212,63,1)"/><text x="98.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/internals/managers.py) (2 samples, 0.90%)</title><rect x="95" y="1300" width="11" height="15" fill="rgb(246,213,51)"/><text x="98.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="95" y="1316" width="11" height="15" fill="rgb(216,85,13)"/><text x="98.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="95" y="1332" width="11" height="15" fill="rgb(222,10,45)"/><text x="98.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="95" y="1348" width="11" height="15" fill="rgb(249,167,54)"/><text x="98.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="95" y="1364" width="11" height="15" fill="rgb(233,0,26)"/><text x="98.00" y="1374.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="95" y="1380" width="11" height="15" fill="rgb(224,109,6)"/><text x="98.00" y="1390.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="95" y="1396" width="11" height="15" fill="rgb(235,104,0)"/><text x="98.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1188" width="5" height="15" fill="rgb(229,22,11)"/><text x="109.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.45%)</title><rect x="106" y="1204" width="5" height="15" fill="rgb(221,159,32)"/><text x="109.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1220" width="5" height="15" fill="rgb(234,52,50)"/><text x="109.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1236" width="5" height="15" fill="rgb(244,90,3)"/><text x="109.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1252" width="5" height="15" fill="rgb(235,52,43)"/><text x="109.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="106" y="1268" width="5" height="15" fill="rgb(245,67,39)"/><text x="109.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1284" width="5" height="15" fill="rgb(238,222,28)"/><text x="109.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.45%)</title><rect x="106" y="1300" width="5" height="15" fill="rgb(228,207,32)"/><text x="109.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1316" width="5" height="15" fill="rgb(229,221,44)"/><text x="109.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1332" width="5" height="15" fill="rgb(217,72,24)"/><text x="109.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1348" width="5" height="15" fill="rgb(252,105,31)"/><text x="109.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="106" y="1364" width="5" height="15" fill="rgb(251,143,48)"/><text x="109.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1380" width="5" height="15" fill="rgb(221,104,15)"/><text x="109.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.45%)</title><rect x="106" y="1396" width="5" height="15" fill="rgb(248,111,49)"/><text x="109.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1412" width="5" height="15" fill="rgb(223,170,31)"/><text x="109.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1428" width="5" height="15" fill="rgb(231,197,21)"/><text x="109.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1444" width="5" height="15" fill="rgb(250,94,41)"/><text x="109.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="106" y="1460" width="5" height="15" fill="rgb(236,215,42)"/><text x="109.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1476" width="5" height="15" fill="rgb(220,86,16)"/><text x="109.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.45%)</title><rect x="106" y="1492" width="5" height="15" fill="rgb(222,57,1)"/><text x="109.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1508" width="5" height="15" fill="rgb(242,223,52)"/><text x="109.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1524" width="5" height="15" fill="rgb(209,72,40)"/><text x="109.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1540" width="5" height="15" fill="rgb(220,60,41)"/><text x="109.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="106" y="1556" width="5" height="15" fill="rgb(220,72,51)"/><text x="109.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1572" width="5" height="15" fill="rgb(212,217,47)"/><text x="109.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.45%)</title><rect x="106" y="1588" width="5" height="15" fill="rgb(216,218,48)"/><text x="109.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1604" width="5" height="15" fill="rgb(219,61,21)"/><text x="109.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1620" width="5" height="15" fill="rgb(236,34,24)"/><text x="109.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1636" width="5" height="15" fill="rgb(228,215,1)"/><text x="109.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="106" y="1652" width="5" height="15" fill="rgb(207,198,12)"/><text x="109.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1668" width="5" height="15" fill="rgb(230,135,52)"/><text x="109.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.45%)</title><rect x="106" y="1684" width="5" height="15" fill="rgb(223,163,3)"/><text x="109.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1700" width="5" height="15" fill="rgb(227,202,5)"/><text x="109.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1716" width="5" height="15" fill="rgb(216,177,26)"/><text x="109.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1732" width="5" height="15" fill="rgb(228,165,5)"/><text x="109.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="106" y="1748" width="5" height="15" fill="rgb(247,203,38)"/><text x="109.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1764" width="5" height="15" fill="rgb(234,184,22)"/><text x="109.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.45%)</title><rect x="106" y="1780" width="5" height="15" fill="rgb(247,113,11)"/><text x="109.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1796" width="5" height="15" fill="rgb(214,191,45)"/><text x="109.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1812" width="5" height="15" fill="rgb(233,95,44)"/><text x="109.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1828" width="5" height="15" fill="rgb(224,2,43)"/><text x="109.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="106" y="1844" width="5" height="15" fill="rgb(207,207,49)"/><text x="109.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1860" width="5" height="15" fill="rgb(212,68,7)"/><text x="109.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py) (1 samples, 0.45%)</title><rect x="106" y="1876" width="5" height="15" fill="rgb(219,172,30)"/><text x="109.00" y="1886.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1892" width="5" height="15" fill="rgb(219,2,3)"/><text x="109.00" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1908" width="5" height="15" fill="rgb(244,78,41)"/><text x="109.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1924" width="5" height="15" fill="rgb(222,130,4)"/><text x="109.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1940" width="5" height="15" fill="rgb(241,34,50)"/><text x="109.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="106" y="1956" width="5" height="15" fill="rgb(226,198,53)"/><text x="109.00" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="106" y="1972" width="5" height="15" fill="rgb(231,157,46)"/><text x="109.00" y="1982.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="106" y="1988" width="5" height="15" fill="rgb(217,85,1)"/><text x="109.00" y="1998.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="106" y="2004" width="5" height="15" fill="rgb(218,53,12)"/><text x="109.00" y="2014.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (10 samples, 4.52%)</title><rect x="63" y="340" width="53" height="15" fill="rgb(215,50,38)"/><text x="66.00" y="350.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.52%)</title><rect x="63" y="356" width="53" height="15" fill="rgb(206,195,34)"/><text x="66.00" y="366.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.52%)</title><rect x="63" y="372" width="53" height="15" fill="rgb(215,87,27)"/><text x="66.00" y="382.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.52%)</title><rect x="63" y="388" width="53" height="15" fill="rgb(224,57,20)"/><text x="66.00" y="398.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 4.52%)</title><rect x="63" y="404" width="53" height="15" fill="rgb(211,197,27)"/><text x="66.00" y="414.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.52%)</title><rect x="63" y="420" width="53" height="15" fill="rgb(233,97,37)"/><text x="66.00" y="430.50">_call..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (9 samples, 4.07%)</title><rect x="68" y="436" width="48" height="15" fill="rgb(231,211,31)"/><text x="71.00" y="446.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.07%)</title><rect x="68" y="452" width="48" height="15" fill="rgb(246,206,32)"/><text x="71.00" y="462.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.07%)</title><rect x="68" y="468" width="48" height="15" fill="rgb(244,132,13)"/><text x="71.00" y="478.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="90" y="484" width="26" height="15" fill="rgb(249,56,41)"/><text x="93.00" y="494.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.26%)</title><rect x="90" y="500" width="26" height="15" fill="rgb(240,1,49)"/><text x="93.00" y="510.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="90" y="516" width="26" height="15" fill="rgb(225,40,29)"/><text x="93.00" y="526.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (5 samples, 2.26%)</title><rect x="90" y="532" width="26" height="15" fill="rgb(220,147,9)"/><text x="93.00" y="542.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="90" y="548" width="26" height="15" fill="rgb(221,89,0)"/><text x="93.00" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="90" y="564" width="26" height="15" fill="rgb(233,204,51)"/><text x="93.00" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="90" y="580" width="26" height="15" fill="rgb(254,166,30)"/><text x="93.00" y="590.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.26%)</title><rect x="90" y="596" width="26" height="15" fill="rgb(233,63,42)"/><text x="93.00" y="606.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="90" y="612" width="26" height="15" fill="rgb(249,101,28)"/><text x="93.00" y="622.50">_..</text></g><g><title>&lt;module&gt; (pandas/__init__.py) (5 samples, 2.26%)</title><rect x="90" y="628" width="26" height="15" fill="rgb(244,95,47)"/><text x="93.00" y="638.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="90" y="644" width="26" height="15" fill="rgb(243,205,18)"/><text x="93.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="90" y="660" width="26" height="15" fill="rgb(229,171,0)"/><text x="93.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="90" y="676" width="26" height="15" fill="rgb(241,209,51)"/><text x="93.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.26%)</title><rect x="90" y="692" width="26" height="15" fill="rgb(223,138,22)"/><text x="93.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="90" y="708" width="26" height="15" fill="rgb(208,54,45)"/><text x="93.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (pandas/core/api.py) (5 samples, 2.26%)</title><rect x="90" y="724" width="26" height="15" fill="rgb(224,124,3)"/><text x="93.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="90" y="740" width="26" height="15" fill="rgb(240,226,9)"/><text x="93.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="90" y="756" width="26" height="15" fill="rgb(211,213,21)"/><text x="93.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="95" y="772" width="21" height="15" fill="rgb(236,14,14)"/><text x="98.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="95" y="788" width="21" height="15" fill="rgb(252,201,45)"/><text x="98.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="95" y="804" width="21" height="15" fill="rgb(218,113,29)"/><text x="98.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (4 samples, 1.81%)</title><rect x="95" y="820" width="21" height="15" fill="rgb(253,118,34)"/><text x="98.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="95" y="836" width="21" height="15" fill="rgb(219,148,0)"/><text x="98.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="95" y="852" width="21" height="15" fill="rgb(215,107,39)"/><text x="98.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="95" y="868" width="21" height="15" fill="rgb(236,172,50)"/><text x="98.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="95" y="884" width="21" height="15" fill="rgb(222,146,9)"/><text x="98.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="95" y="900" width="21" height="15" fill="rgb(236,152,38)"/><text x="98.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (4 samples, 1.81%)</title><rect x="95" y="916" width="21" height="15" fill="rgb(216,85,33)"/><text x="98.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="95" y="932" width="21" height="15" fill="rgb(216,50,28)"/><text x="98.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="95" y="948" width="21" height="15" fill="rgb(222,36,48)"/><text x="98.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="95" y="964" width="21" height="15" fill="rgb(208,209,31)"/><text x="98.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="95" y="980" width="21" height="15" fill="rgb(227,195,50)"/><text x="98.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="95" y="996" width="21" height="15" fill="rgb(209,4,0)"/><text x="98.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (4 samples, 1.81%)</title><rect x="95" y="1012" width="21" height="15" fill="rgb(225,107,47)"/><text x="98.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="95" y="1028" width="21" height="15" fill="rgb(231,123,4)"/><text x="98.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="95" y="1044" width="21" height="15" fill="rgb(239,111,7)"/><text x="98.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="95" y="1060" width="21" height="15" fill="rgb(242,76,30)"/><text x="98.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="95" y="1076" width="21" height="15" fill="rgb(205,215,15)"/><text x="98.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="95" y="1092" width="21" height="15" fill="rgb(227,8,40)"/><text x="98.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.90%)</title><rect x="106" y="1108" width="10" height="15" fill="rgb(207,49,32)"/><text x="109.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="106" y="1124" width="10" height="15" fill="rgb(222,110,23)"/><text x="109.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="106" y="1140" width="10" height="15" fill="rgb(227,142,25)"/><text x="109.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="106" y="1156" width="10" height="15" fill="rgb(237,2,43)"/><text x="109.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="106" y="1172" width="10" height="15" fill="rgb(248,190,0)"/><text x="109.00" y="1182.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="111" y="1188" width="5" height="15" fill="rgb(208,114,41)"/><text x="114.00" y="1198.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="111" y="1204" width="5" height="15" fill="rgb(254,186,43)"/><text x="114.00" y="1214.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.45%)</title><rect x="116" y="580" width="6" height="15" fill="rgb(251,164,25)"/><text x="119.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="116" y="596" width="6" height="15" fill="rgb(220,66,40)"/><text x="119.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="116" y="612" width="6" height="15" fill="rgb(215,4,44)"/><text x="119.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="116" y="628" width="6" height="15" fill="rgb(216,228,12)"/><text x="119.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="116" y="644" width="6" height="15" fill="rgb(219,30,20)"/><text x="119.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="116" y="660" width="6" height="15" fill="rgb(247,86,38)"/><text x="119.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.45%)</title><rect x="116" y="676" width="6" height="15" fill="rgb(244,167,14)"/><text x="119.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="116" y="692" width="6" height="15" fill="rgb(238,42,5)"/><text x="119.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="116" y="708" width="6" height="15" fill="rgb(212,58,31)"/><text x="119.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="116" y="724" width="6" height="15" fill="rgb(238,85,42)"/><text x="119.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="116" y="740" width="6" height="15" fill="rgb(206,20,27)"/><text x="119.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="116" y="756" width="6" height="15" fill="rgb(230,221,40)"/><text x="119.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.45%)</title><rect x="116" y="772" width="6" height="15" fill="rgb(228,121,18)"/><text x="119.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="116" y="788" width="6" height="15" fill="rgb(215,223,54)"/><text x="119.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="116" y="804" width="6" height="15" fill="rgb(229,7,24)"/><text x="119.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="116" y="820" width="6" height="15" fill="rgb(253,1,54)"/><text x="119.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="116" y="836" width="6" height="15" fill="rgb(252,66,27)"/><text x="119.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="116" y="852" width="6" height="15" fill="rgb(252,7,10)"/><text x="119.00" y="862.50"></text></g><g><title>&lt;module&gt; (configparser.py) (1 samples, 0.45%)</title><rect x="116" y="868" width="6" height="15" fill="rgb(212,24,46)"/><text x="119.00" y="878.50"></text></g><g><title>RawConfigParser (configparser.py) (1 samples, 0.45%)</title><rect x="116" y="884" width="6" height="15" fill="rgb(235,32,22)"/><text x="119.00" y="894.50"></text></g><g><title>compile (re.py) (1 samples, 0.45%)</title><rect x="116" y="900" width="6" height="15" fill="rgb(232,217,54)"/><text x="119.00" y="910.50"></text></g><g><title>_compile (re.py) (1 samples, 0.45%)</title><rect x="116" y="916" width="6" height="15" fill="rgb(210,146,37)"/><text x="119.00" y="926.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.45%)</title><rect x="116" y="932" width="6" height="15" fill="rgb(229,16,39)"/><text x="119.00" y="942.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="116" y="948" width="6" height="15" fill="rgb(206,59,12)"/><text x="119.00" y="958.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.45%)</title><rect x="116" y="964" width="6" height="15" fill="rgb(248,31,36)"/><text x="119.00" y="974.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="116" y="980" width="6" height="15" fill="rgb(213,93,16)"/><text x="119.00" y="990.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.45%)</title><rect x="116" y="996" width="6" height="15" fill="rgb(248,226,8)"/><text x="119.00" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (12 samples, 5.43%)</title><rect x="63" y="244" width="64" height="15" fill="rgb(209,54,15)"/><text x="66.00" y="254.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 5.43%)</title><rect x="63" y="260" width="64" height="15" fill="rgb(252,123,19)"/><text x="66.00" y="270.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 5.43%)</title><rect x="63" y="276" width="64" height="15" fill="rgb(211,191,25)"/><text x="66.00" y="286.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 5.43%)</title><rect x="63" y="292" width="64" height="15" fill="rgb(237,9,8)"/><text x="66.00" y="302.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 5.43%)</title><rect x="63" y="308" width="64" height="15" fill="rgb(211,100,50)"/><text x="66.00" y="318.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 5.43%)</title><rect x="63" y="324" width="64" height="15" fill="rgb(228,77,51)"/><text x="66.00" y="334.50">_call_w..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.90%)</title><rect x="116" y="340" width="11" height="15" fill="rgb(224,191,54)"/><text x="119.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="116" y="356" width="11" height="15" fill="rgb(217,120,19)"/><text x="119.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="116" y="372" width="11" height="15" fill="rgb(252,39,13)"/><text x="119.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="116" y="388" width="11" height="15" fill="rgb(217,86,45)"/><text x="119.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="116" y="404" width="11" height="15" fill="rgb(221,154,27)"/><text x="119.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="116" y="420" width="11" height="15" fill="rgb(247,204,23)"/><text x="119.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="116" y="436" width="11" height="15" fill="rgb(210,39,30)"/><text x="119.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="116" y="452" width="11" height="15" fill="rgb(213,170,10)"/><text x="119.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="116" y="468" width="11" height="15" fill="rgb(218,88,12)"/><text x="119.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.90%)</title><rect x="116" y="484" width="11" height="15" fill="rgb(226,85,3)"/><text x="119.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="116" y="500" width="11" height="15" fill="rgb(250,67,12)"/><text x="119.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="116" y="516" width="11" height="15" fill="rgb(245,20,22)"/><text x="119.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="116" y="532" width="11" height="15" fill="rgb(246,65,44)"/><text x="119.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="116" y="548" width="11" height="15" fill="rgb(237,132,1)"/><text x="119.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="116" y="564" width="11" height="15" fill="rgb(236,114,49)"/><text x="119.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.45%)</title><rect x="122" y="580" width="5" height="15" fill="rgb(211,202,28)"/><text x="125.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="596" width="5" height="15" fill="rgb(234,48,46)"/><text x="125.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="612" width="5" height="15" fill="rgb(240,121,23)"/><text x="125.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="628" width="5" height="15" fill="rgb(207,106,34)"/><text x="125.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="122" y="644" width="5" height="15" fill="rgb(247,63,3)"/><text x="125.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="660" width="5" height="15" fill="rgb(254,6,52)"/><text x="125.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.45%)</title><rect x="122" y="676" width="5" height="15" fill="rgb(207,203,19)"/><text x="125.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="692" width="5" height="15" fill="rgb(234,118,47)"/><text x="125.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="708" width="5" height="15" fill="rgb(224,207,42)"/><text x="125.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="724" width="5" height="15" fill="rgb(243,105,8)"/><text x="125.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="122" y="740" width="5" height="15" fill="rgb(243,27,51)"/><text x="125.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="756" width="5" height="15" fill="rgb(242,93,19)"/><text x="125.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.45%)</title><rect x="122" y="772" width="5" height="15" fill="rgb(239,229,22)"/><text x="125.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="788" width="5" height="15" fill="rgb(224,172,43)"/><text x="125.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="804" width="5" height="15" fill="rgb(230,100,48)"/><text x="125.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="820" width="5" height="15" fill="rgb(207,166,9)"/><text x="125.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="836" width="5" height="15" fill="rgb(241,162,37)"/><text x="125.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="852" width="5" height="15" fill="rgb(252,33,48)"/><text x="125.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="122" y="868" width="5" height="15" fill="rgb(209,168,20)"/><text x="125.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="884" width="5" height="15" fill="rgb(250,165,25)"/><text x="125.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.45%)</title><rect x="122" y="900" width="5" height="15" fill="rgb(224,120,54)"/><text x="125.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="916" width="5" height="15" fill="rgb(243,31,5)"/><text x="125.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="932" width="5" height="15" fill="rgb(246,163,3)"/><text x="125.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="948" width="5" height="15" fill="rgb(233,153,24)"/><text x="125.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="122" y="964" width="5" height="15" fill="rgb(254,47,32)"/><text x="125.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="980" width="5" height="15" fill="rgb(245,184,46)"/><text x="125.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.45%)</title><rect x="122" y="996" width="5" height="15" fill="rgb(245,53,42)"/><text x="125.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="1012" width="5" height="15" fill="rgb(223,188,12)"/><text x="125.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="1028" width="5" height="15" fill="rgb(252,69,16)"/><text x="125.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="1044" width="5" height="15" fill="rgb(217,64,37)"/><text x="125.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="122" y="1060" width="5" height="15" fill="rgb(238,219,28)"/><text x="125.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="1076" width="5" height="15" fill="rgb(223,213,37)"/><text x="125.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.45%)</title><rect x="122" y="1092" width="5" height="15" fill="rgb(208,207,14)"/><text x="125.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="1108" width="5" height="15" fill="rgb(222,11,32)"/><text x="125.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="1124" width="5" height="15" fill="rgb(232,124,54)"/><text x="125.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="1140" width="5" height="15" fill="rgb(239,192,27)"/><text x="125.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="122" y="1156" width="5" height="15" fill="rgb(237,152,36)"/><text x="125.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="1172" width="5" height="15" fill="rgb(217,10,6)"/><text x="125.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/dsa.py) (1 samples, 0.45%)</title><rect x="122" y="1188" width="5" height="15" fill="rgb(207,115,10)"/><text x="125.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="1204" width="5" height="15" fill="rgb(240,32,19)"/><text x="125.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="1220" width="5" height="15" fill="rgb(225,213,23)"/><text x="125.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="1236" width="5" height="15" fill="rgb(235,40,22)"/><text x="125.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="122" y="1252" width="5" height="15" fill="rgb(227,99,0)"/><text x="125.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="1268" width="5" height="15" fill="rgb(250,45,34)"/><text x="125.00" y="1278.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/utils.py) (1 samples, 0.45%)</title><rect x="122" y="1284" width="5" height="15" fill="rgb(250,30,27)"/><text x="125.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="1300" width="5" height="15" fill="rgb(213,104,11)"/><text x="125.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="1316" width="5" height="15" fill="rgb(253,96,6)"/><text x="125.00" y="1326.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="122" y="1332" width="5" height="15" fill="rgb(211,137,29)"/><text x="125.00" y="1342.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="122" y="1348" width="5" height="15" fill="rgb(245,119,38)"/><text x="125.00" y="1358.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="122" y="1364" width="5" height="15" fill="rgb(207,146,41)"/><text x="125.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (23 samples, 10.41%)</title><rect x="10" y="68" width="122" height="15" fill="rgb(226,99,13)"/><text x="13.00" y="78.50">_find_and_load ..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (23 samples, 10.41%)</title><rect x="10" y="84" width="122" height="15" fill="rgb(226,18,51)"/><text x="13.00" y="94.50">_find_and_load_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (23 samples, 10.41%)</title><rect x="10" y="100" width="122" height="15" fill="rgb(211,64,21)"/><text x="13.00" y="110.50">_load_unlocked ..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (23 samples, 10.41%)</title><rect x="10" y="116" width="122" height="15" fill="rgb(216,183,26)"/><text x="13.00" y="126.50">exec_module (&lt;f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (23 samples, 10.41%)</title><rect x="10" y="132" width="122" height="15" fill="rgb(253,12,1)"/><text x="13.00" y="142.50">_call_with_fram..</text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3.py) (23 samples, 10.41%)</title><rect x="10" y="148" width="122" height="15" fill="rgb(209,47,15)"/><text x="13.00" y="158.50">&lt;module&gt; (profi..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (23 samples, 10.41%)</title><rect x="10" y="164" width="122" height="15" fill="rgb(214,181,46)"/><text x="13.00" y="174.50">_find_and_load ..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (23 samples, 10.41%)</title><rect x="10" y="180" width="122" height="15" fill="rgb(216,126,21)"/><text x="13.00" y="190.50">_find_and_load_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.88%)</title><rect x="63" y="196" width="69" height="15" fill="rgb(221,83,35)"/><text x="66.00" y="206.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 5.88%)</title><rect x="63" y="212" width="69" height="15" fill="rgb(250,146,15)"/><text x="66.00" y="222.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.88%)</title><rect x="63" y="228" width="69" height="15" fill="rgb(205,188,26)"/><text x="66.00" y="238.50">_call_w..</text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.45%)</title><rect x="127" y="244" width="5" height="15" fill="rgb(211,6,37)"/><text x="130.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="127" y="260" width="5" height="15" fill="rgb(233,166,53)"/><text x="130.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="127" y="276" width="5" height="15" fill="rgb(215,149,0)"/><text x="130.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="127" y="292" width="5" height="15" fill="rgb(239,226,10)"/><text x="130.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="127" y="308" width="5" height="15" fill="rgb(206,17,37)"/><text x="130.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="127" y="324" width="5" height="15" fill="rgb(245,189,15)"/><text x="130.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py) (1 samples, 0.45%)</title><rect x="127" y="340" width="5" height="15" fill="rgb(210,113,18)"/><text x="130.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="127" y="356" width="5" height="15" fill="rgb(236,102,24)"/><text x="130.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="127" y="372" width="5" height="15" fill="rgb(241,43,25)"/><text x="130.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="127" y="388" width="5" height="15" fill="rgb(240,66,14)"/><text x="130.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="127" y="404" width="5" height="15" fill="rgb(246,110,41)"/><text x="130.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="127" y="420" width="5" height="15" fill="rgb(224,141,50)"/><text x="130.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py) (1 samples, 0.45%)</title><rect x="127" y="436" width="5" height="15" fill="rgb(251,191,7)"/><text x="130.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="127" y="452" width="5" height="15" fill="rgb(219,59,23)"/><text x="130.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="127" y="468" width="5" height="15" fill="rgb(244,213,14)"/><text x="130.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="127" y="484" width="5" height="15" fill="rgb(208,22,52)"/><text x="130.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="127" y="500" width="5" height="15" fill="rgb(229,23,40)"/><text x="130.00" y="510.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="127" y="516" width="5" height="15" fill="rgb(212,45,36)"/><text x="130.00" y="526.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="127" y="532" width="5" height="15" fill="rgb(218,104,7)"/><text x="130.00" y="542.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.45%)</title><rect x="143" y="180" width="5" height="15" fill="rgb(211,96,11)"/><text x="146.00" y="190.50"></text></g><g><title>0x7fc9aa8e5ff9 (?) (1 samples, 0.45%)</title><rect x="154" y="212" width="5" height="15" fill="rgb(214,130,29)"/><text x="157.00" y="222.50"></text></g><g><title>0x7fc9aa8e0ef6 (?) (1 samples, 0.45%)</title><rect x="154" y="228" width="5" height="15" fill="rgb(252,97,21)"/><text x="157.00" y="238.50"></text></g><g><title>0x7fc9aa8d5962 (?) (1 samples, 0.45%)</title><rect x="154" y="244" width="5" height="15" fill="rgb(223,58,41)"/><text x="157.00" y="254.50"></text></g><g><title>0x7fc9aa9097a7 (?) (1 samples, 0.45%)</title><rect x="154" y="260" width="5" height="15" fill="rgb(239,169,54)"/><text x="157.00" y="270.50"></text></g><g><title>0x7fc9aa908f8a (?) (1 samples, 0.45%)</title><rect x="154" y="276" width="5" height="15" fill="rgb(216,180,5)"/><text x="157.00" y="286.50"></text></g><g><title>0x7fc9aa901f11 (?) (1 samples, 0.45%)</title><rect x="154" y="292" width="5" height="15" fill="rgb(229,92,53)"/><text x="157.00" y="302.50"></text></g><g><title>0x7fc9aad22ed7 (?) (1 samples, 0.45%)</title><rect x="154" y="308" width="5" height="15" fill="rgb(206,72,43)"/><text x="157.00" y="318.50"></text></g><g><title>0x7fc9aad22a94 (?) (1 samples, 0.45%)</title><rect x="154" y="324" width="5" height="15" fill="rgb(214,13,29)"/><text x="157.00" y="334.50"></text></g><g><title>0x7fc9ea8b2982 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="170" y="388" width="5" height="15" fill="rgb(209,70,54)"/><text x="173.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.45%)</title><rect x="175" y="388" width="5" height="15" fill="rgb(225,4,38)"/><text x="178.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.36%)</title><rect x="170" y="340" width="16" height="15" fill="rgb(220,192,44)"/><text x="173.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.36%)</title><rect x="170" y="356" width="16" height="15" fill="rgb(219,186,1)"/><text x="173.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.36%)</title><rect x="170" y="372" width="16" height="15" fill="rgb(215,52,16)"/><text x="173.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.45%)</title><rect x="180" y="388" width="6" height="15" fill="rgb(215,35,41)"/><text x="183.00" y="398.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.81%)</title><rect x="170" y="308" width="21" height="15" fill="rgb(244,188,50)"/><text x="173.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.81%)</title><rect x="170" y="324" width="21" height="15" fill="rgb(207,197,17)"/><text x="173.00" y="334.50"></text></g><g><title>onnxruntime::ReduceMean&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="186" y="340" width="5" height="15" fill="rgb(222,197,7)"/><text x="189.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="186" y="356" width="5" height="15" fill="rgb(237,101,46)"/><text x="189.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="186" y="372" width="5" height="15" fill="rgb(236,96,44)"/><text x="189.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="186" y="388" width="5" height="15" fill="rgb(225,122,35)"/><text x="189.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="186" y="404" width="5" height="15" fill="rgb(217,3,53)"/><text x="189.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="186" y="420" width="5" height="15" fill="rgb(211,184,45)"/><text x="189.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="186" y="436" width="5" height="15" fill="rgb(218,142,42)"/><text x="189.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="186" y="452" width="5" height="15" fill="rgb(224,21,40)"/><text x="189.00" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.45%)</title><rect x="186" y="468" width="5" height="15" fill="rgb(220,61,53)"/><text x="189.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.45%)</title><rect x="186" y="484" width="5" height="15" fill="rgb(228,128,31)"/><text x="189.00" y="494.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.26%)</title><rect x="170" y="260" width="26" height="15" fill="rgb(250,85,3)"/><text x="173.00" y="270.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.26%)</title><rect x="170" y="276" width="26" height="15" fill="rgb(243,154,53)"/><text x="173.00" y="286.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.26%)</title><rect x="170" y="292" width="26" height="15" fill="rgb(251,125,7)"/><text x="173.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="191" y="308" width="5" height="15" fill="rgb(251,85,17)"/><text x="194.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::SetDeviceCopyChecks (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="191" y="324" width="5" height="15" fill="rgb(206,14,43)"/><text x="194.00" y="334.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.17%)</title><rect x="164" y="244" width="38" height="15" fill="rgb(230,212,47)"/><text x="167.00" y="254.50">onn..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="196" y="260" width="6" height="15" fill="rgb(243,214,23)"/><text x="199.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="196" y="276" width="6" height="15" fill="rgb(239,91,31)"/><text x="199.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.45%)</title><rect x="196" y="292" width="6" height="15" fill="rgb(208,26,26)"/><text x="199.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.45%)</title><rect x="196" y="308" width="6" height="15" fill="rgb(240,199,3)"/><text x="199.00" y="318.50"></text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (14 samples, 6.33%)</title><rect x="132" y="100" width="75" height="15" fill="rgb(240,73,10)"/><text x="135.00" y="110.50">profile ..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (14 samples, 6.33%)</title><rect x="132" y="116" width="75" height="15" fill="rgb(243,186,20)"/><text x="135.00" y="126.50">time_pre..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (14 samples, 6.33%)</title><rect x="132" y="132" width="75" height="15" fill="rgb(238,0,21)"/><text x="135.00" y="142.50">&lt;lambda&gt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (13 samples, 5.88%)</title><rect x="138" y="148" width="69" height="15" fill="rgb(243,227,53)"/><text x="141.00" y="158.50">run (ml..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (12 samples, 5.43%)</title><rect x="143" y="164" width="64" height="15" fill="rgb(237,150,46)"/><text x="146.00" y="174.50">_run_wh..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (11 samples, 4.98%)</title><rect x="148" y="180" width="59" height="15" fill="rgb(242,102,19)"/><text x="151.00" y="190.50">run (m..</text></g><g><title>run (onnxruntime/capi/session.py) (11 samples, 4.98%)</title><rect x="148" y="196" width="59" height="15" fill="rgb(248,30,54)"/><text x="151.00" y="206.50">run (o..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 4.07%)</title><rect x="159" y="212" width="48" height="15" fill="rgb(224,105,16)"/><text x="162.00" y="222.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 4.07%)</title><rect x="159" y="228" width="48" height="15" fill="rgb(254,87,28)"/><text x="162.00" y="238.50">void..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="202" y="244" width="5" height="15" fill="rgb(245,176,36)"/><text x="205.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="202" y="260" width="5" height="15" fill="rgb(247,131,2)"/><text x="205.00" y="270.50"></text></g><g><title>profile_ort (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (15 samples, 6.79%)</title><rect x="132" y="68" width="80" height="15" fill="rgb(251,117,22)"/><text x="135.00" y="78.50">profile_o..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (15 samples, 6.79%)</title><rect x="132" y="84" width="80" height="15" fill="rgb(239,65,30)"/><text x="135.00" y="94.50">setup_pro..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="207" y="100" width="5" height="15" fill="rgb(238,65,4)"/><text x="210.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="207" y="116" width="5" height="15" fill="rgb(234,142,45)"/><text x="210.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="207" y="132" width="5" height="15" fill="rgb(235,55,45)"/><text x="210.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.45%)</title><rect x="207" y="148" width="5" height="15" fill="rgb(206,39,21)"/><text x="210.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.45%)</title><rect x="207" y="164" width="5" height="15" fill="rgb(252,13,40)"/><text x="210.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="207" y="180" width="5" height="15" fill="rgb(233,204,18)"/><text x="210.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="207" y="196" width="5" height="15" fill="rgb(231,39,5)"/><text x="210.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="207" y="212" width="5" height="15" fill="rgb(229,0,53)"/><text x="210.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="207" y="228" width="5" height="15" fill="rgb(244,137,22)"/><text x="210.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="207" y="244" width="5" height="15" fill="rgb(237,56,2)"/><text x="210.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.45%)</title><rect x="207" y="260" width="5" height="15" fill="rgb(211,148,23)"/><text x="210.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="207" y="276" width="5" height="15" fill="rgb(232,203,15)"/><text x="210.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="207" y="292" width="5" height="15" fill="rgb(248,216,39)"/><text x="210.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="207" y="308" width="5" height="15" fill="rgb(222,139,17)"/><text x="210.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="207" y="324" width="5" height="15" fill="rgb(214,204,10)"/><text x="210.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="207" y="340" width="5" height="15" fill="rgb(205,159,20)"/><text x="210.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.45%)</title><rect x="207" y="356" width="5" height="15" fill="rgb(244,70,53)"/><text x="210.00" y="366.50"></text></g><g><title>check_distro_info (onnxruntime/capi/onnxruntime_validation.py) (1 samples, 0.45%)</title><rect x="207" y="372" width="5" height="15" fill="rgb(219,147,48)"/><text x="210.00" y="382.50"></text></g><g><title>architecture (platform.py) (1 samples, 0.45%)</title><rect x="207" y="388" width="5" height="15" fill="rgb(239,66,5)"/><text x="210.00" y="398.50"></text></g><g><title>_syscmd_file (platform.py) (1 samples, 0.45%)</title><rect x="207" y="404" width="5" height="15" fill="rgb(238,2,4)"/><text x="210.00" y="414.50"></text></g><g><title>__init__ (subprocess.py) (1 samples, 0.45%)</title><rect x="207" y="420" width="5" height="15" fill="rgb(237,67,51)"/><text x="210.00" y="430.50"></text></g><g><title>_execute_child (subprocess.py) (1 samples, 0.45%)</title><rect x="207" y="436" width="5" height="15" fill="rgb(212,176,31)"/><text x="210.00" y="446.50"></text></g><g><title>subprocess_fork_exec (_posixsubprocess.c) (1 samples, 0.45%)</title><rect x="207" y="452" width="5" height="15" fill="rgb(217,191,11)"/><text x="210.00" y="462.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.45%)</title><rect x="207" y="468" width="5" height="15" fill="rgb(226,15,31)"/><text x="210.00" y="478.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.45%)</title><rect x="298" y="196" width="5" height="15" fill="rgb(214,76,41)"/><text x="301.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (3 samples, 1.36%)</title><rect x="309" y="212" width="16" height="15" fill="rgb(251,15,4)"/><text x="312.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.45%)</title><rect x="319" y="228" width="6" height="15" fill="rgb(217,129,19)"/><text x="322.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.45%)</title><rect x="319" y="244" width="6" height="15" fill="rgb(232,115,31)"/><text x="322.00" y="254.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.45%)</title><rect x="319" y="260" width="6" height="15" fill="rgb(242,70,44)"/><text x="322.00" y="270.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.45%)</title><rect x="319" y="276" width="6" height="15" fill="rgb(226,226,34)"/><text x="322.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.45%)</title><rect x="325" y="212" width="5" height="15" fill="rgb(209,80,18)"/><text x="328.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.45%)</title><rect x="325" y="228" width="5" height="15" fill="rgb(239,21,47)"/><text x="328.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.45%)</title><rect x="325" y="244" width="5" height="15" fill="rgb(214,22,41)"/><text x="328.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.45%)</title><rect x="325" y="260" width="5" height="15" fill="rgb(249,7,31)"/><text x="328.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.90%)</title><rect x="341" y="324" width="10" height="15" fill="rgb(224,71,1)"/><text x="344.00" y="334.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.45%)</title><rect x="346" y="340" width="5" height="15" fill="rgb(252,85,40)"/><text x="349.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.45%)</title><rect x="346" y="356" width="5" height="15" fill="rgb(228,12,0)"/><text x="349.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.45%)</title><rect x="346" y="372" width="5" height="15" fill="rgb(209,158,33)"/><text x="349.00" y="382.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.45%)</title><rect x="346" y="388" width="5" height="15" fill="rgb(236,121,13)"/><text x="349.00" y="398.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.45%)</title><rect x="346" y="404" width="5" height="15" fill="rgb(228,87,37)"/><text x="349.00" y="414.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_flatten.py) (5 samples, 2.26%)</title><rect x="330" y="212" width="27" height="15" fill="rgb(254,150,10)"/><text x="333.00" y="222.50">_..</text></g><g><title>prod (&lt;__array_function__ internals&gt;) (5 samples, 2.26%)</title><rect x="330" y="228" width="27" height="15" fill="rgb(206,117,48)"/><text x="333.00" y="238.50">p..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 2.26%)</title><rect x="330" y="244" width="27" height="15" fill="rgb(233,12,47)"/><text x="333.00" y="254.50">a..</text></g><g><title>prod (numpy/core/fromnumeric.py) (5 samples, 2.26%)</title><rect x="330" y="260" width="27" height="15" fill="rgb(234,214,31)"/><text x="333.00" y="270.50">p..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (4 samples, 1.81%)</title><rect x="335" y="276" width="22" height="15" fill="rgb(219,18,38)"/><text x="338.00" y="286.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (3 samples, 1.36%)</title><rect x="341" y="292" width="16" height="15" fill="rgb(244,85,25)"/><text x="344.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (3 samples, 1.36%)</title><rect x="341" y="308" width="16" height="15" fill="rgb(205,65,18)"/><text x="344.00" y="318.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.45%)</title><rect x="351" y="324" width="6" height="15" fill="rgb(216,136,37)"/><text x="354.00" y="334.50"></text></g><g><title>PyArray_Scalar (scalarapi.c) (1 samples, 0.45%)</title><rect x="351" y="340" width="6" height="15" fill="rgb(241,1,43)"/><text x="354.00" y="350.50"></text></g><g><title>LONG_copyswap (arraytypes.c.src) (1 samples, 0.45%)</title><rect x="351" y="356" width="6" height="15" fill="rgb(225,7,2)"/><text x="354.00" y="366.50"></text></g><g><title>_basic_copy (arraytypes.c.src) (1 samples, 0.45%)</title><rect x="351" y="372" width="6" height="15" fill="rgb(236,130,19)"/><text x="354.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_shape.py) (1 samples, 0.45%)</title><rect x="357" y="212" width="5" height="15" fill="rgb(246,90,40)"/><text x="360.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.45%)</title><rect x="357" y="228" width="5" height="15" fill="rgb(215,201,25)"/><text x="360.00" y="238.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.45%)</title><rect x="357" y="244" width="5" height="15" fill="rgb(253,93,50)"/><text x="360.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.45%)</title><rect x="357" y="260" width="5" height="15" fill="rgb(239,1,28)"/><text x="360.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.45%)</title><rect x="357" y="276" width="5" height="15" fill="rgb(236,207,41)"/><text x="360.00" y="286.50"></text></g><g><title>0x7fc9ea8c8e7a (libc-2.29.so) (1 samples, 0.45%)</title><rect x="373" y="340" width="5" height="15" fill="rgb(215,219,48)"/><text x="376.00" y="350.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (4 samples, 1.81%)</title><rect x="362" y="260" width="21" height="15" fill="rgb(230,144,10)"/><text x="365.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.81%)</title><rect x="362" y="276" width="21" height="15" fill="rgb(207,85,26)"/><text x="365.00" y="286.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py) (3 samples, 1.36%)</title><rect x="367" y="292" width="16" height="15" fill="rgb(218,11,54)"/><text x="370.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 1.36%)</title><rect x="367" y="308" width="16" height="15" fill="rgb(250,56,53)"/><text x="370.00" y="318.50"></text></g><g><title>array_argpartition (methods.c) (2 samples, 0.90%)</title><rect x="373" y="324" width="10" height="15" fill="rgb(208,45,18)"/><text x="376.00" y="334.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c) (1 samples, 0.45%)</title><rect x="378" y="340" width="5" height="15" fill="rgb(233,207,26)"/><text x="381.00" y="350.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (1 samples, 0.45%)</title><rect x="383" y="260" width="6" height="15" fill="rgb(210,136,18)"/><text x="386.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.45%)</title><rect x="383" y="276" width="6" height="15" fill="rgb(242,33,7)"/><text x="386.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (1 samples, 0.45%)</title><rect x="383" y="292" width="6" height="15" fill="rgb(227,49,18)"/><text x="386.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.45%)</title><rect x="383" y="308" width="6" height="15" fill="rgb(244,217,53)"/><text x="386.00" y="318.50"></text></g><g><title>array_argsort (methods.c) (1 samples, 0.45%)</title><rect x="383" y="324" width="6" height="15" fill="rgb(207,12,17)"/><text x="386.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (1 samples, 0.45%)</title><rect x="383" y="340" width="6" height="15" fill="rgb(207,170,13)"/><text x="386.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c) (1 samples, 0.45%)</title><rect x="383" y="356" width="6" height="15" fill="rgb(211,34,29)"/><text x="386.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.90%)</title><rect x="389" y="260" width="10" height="15" fill="rgb(242,226,21)"/><text x="392.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.45%)</title><rect x="394" y="276" width="5" height="15" fill="rgb(232,97,27)"/><text x="397.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.45%)</title><rect x="394" y="292" width="5" height="15" fill="rgb(220,200,52)"/><text x="397.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (9 samples, 4.07%)</title><rect x="362" y="212" width="48" height="15" fill="rgb(252,131,8)"/><text x="365.00" y="222.50">_run..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (9 samples, 4.07%)</title><rect x="362" y="228" width="48" height="15" fill="rgb(230,74,50)"/><text x="365.00" y="238.50">_com..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py) (9 samples, 4.07%)</title><rect x="362" y="244" width="48" height="15" fill="rgb(210,145,33)"/><text x="365.00" y="254.50">topk..</text></g><g><title>array_subscript (mapping.c) (2 samples, 0.90%)</title><rect x="399" y="260" width="11" height="15" fill="rgb(214,34,7)"/><text x="402.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (2 samples, 0.90%)</title><rect x="399" y="276" width="11" height="15" fill="rgb(251,219,42)"/><text x="402.00" y="286.50"></text></g><g><title>mapiter_fill_info (mapping.c) (1 samples, 0.45%)</title><rect x="405" y="292" width="5" height="15" fill="rgb(234,46,22)"/><text x="408.00" y="302.50"></text></g><g><title>PyArray_STRIDE (ndarraytypes.h) (1 samples, 0.45%)</title><rect x="405" y="308" width="5" height="15" fill="rgb(230,164,15)"/><text x="408.00" y="318.50"></text></g><g><title>0x7fc9c7ad88cf (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="463" y="260" width="6" height="15" fill="rgb(223,20,33)"/><text x="466.00" y="270.50"></text></g><g><title>0x7fc9c7ad899e (?) (1 samples, 0.45%)</title><rect x="469" y="260" width="5" height="15" fill="rgb(238,175,5)"/><text x="472.00" y="270.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.45%)</title><rect x="485" y="324" width="5" height="15" fill="rgb(214,150,37)"/><text x="488.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.45%)</title><rect x="485" y="340" width="5" height="15" fill="rgb(222,211,2)"/><text x="488.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.45%)</title><rect x="485" y="356" width="5" height="15" fill="rgb(245,75,31)"/><text x="488.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.45%)</title><rect x="485" y="372" width="5" height="15" fill="rgb(233,62,48)"/><text x="488.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.45%)</title><rect x="485" y="388" width="5" height="15" fill="rgb(229,9,20)"/><text x="488.00" y="398.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.45%)</title><rect x="485" y="404" width="5" height="15" fill="rgb(226,38,53)"/><text x="488.00" y="414.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.45%)</title><rect x="485" y="420" width="5" height="15" fill="rgb(235,153,48)"/><text x="488.00" y="430.50"></text></g><g><title>0x7fc9ea86a8c0 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="485" y="436" width="5" height="15" fill="rgb(246,193,6)"/><text x="488.00" y="446.50"></text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py) (5 samples, 2.26%)</title><rect x="474" y="260" width="27" height="15" fill="rgb(211,104,10)"/><text x="477.00" y="270.50">_..</text></g><g><title>_convert_to_type (scipy/spatial/distance.py) (5 samples, 2.26%)</title><rect x="474" y="276" width="27" height="15" fill="rgb(227,22,54)"/><text x="477.00" y="286.50">_..</text></g><g><title>ascontiguousarray (numpy/core/_asarray.py) (4 samples, 1.81%)</title><rect x="479" y="292" width="22" height="15" fill="rgb(245,144,37)"/><text x="482.00" y="302.50">a..</text></g><g><title>_array_fromobject (multiarraymodule.c) (4 samples, 1.81%)</title><rect x="479" y="308" width="22" height="15" fill="rgb(231,140,15)"/><text x="482.00" y="318.50">_..</text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (2 samples, 0.90%)</title><rect x="490" y="324" width="11" height="15" fill="rgb(238,87,39)"/><text x="493.00" y="334.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (2 samples, 0.90%)</title><rect x="490" y="340" width="11" height="15" fill="rgb(244,182,44)"/><text x="493.00" y="350.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (2 samples, 0.90%)</title><rect x="490" y="356" width="11" height="15" fill="rgb(253,101,19)"/><text x="493.00" y="366.50"></text></g><g><title>0x7fc9ea8c8e7e (libc-2.29.so) (1 samples, 0.45%)</title><rect x="495" y="372" width="6" height="15" fill="rgb(229,216,53)"/><text x="498.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.90%)</title><rect x="501" y="260" width="10" height="15" fill="rgb(227,115,9)"/><text x="504.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.45%)</title><rect x="506" y="276" width="5" height="15" fill="rgb(246,44,54)"/><text x="509.00" y="286.50"></text></g><g><title>0x7fc9ea8c8e6d (libc-2.29.so) (1 samples, 0.45%)</title><rect x="506" y="292" width="5" height="15" fill="rgb(219,120,23)"/><text x="509.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cdist.py) (19 samples, 8.60%)</title><rect x="415" y="228" width="102" height="15" fill="rgb(208,3,39)"/><text x="418.00" y="238.50">_run (mlprod..</text></g><g><title>cdist (scipy/spatial/distance.py) (18 samples, 8.14%)</title><rect x="421" y="244" width="96" height="15" fill="rgb(229,45,48)"/><text x="424.00" y="254.50">cdist (scip..</text></g><g><title>callable (scipy/_lib/six.py) (1 samples, 0.45%)</title><rect x="511" y="260" width="6" height="15" fill="rgb(244,97,43)"/><text x="514.00" y="270.50"></text></g><g><title>&lt;genexpr&gt; (scipy/_lib/six.py) (1 samples, 0.45%)</title><rect x="511" y="276" width="6" height="15" fill="rgb(232,119,36)"/><text x="514.00" y="286.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.45%)</title><rect x="538" y="340" width="5" height="15" fill="rgb(248,161,12)"/><text x="541.00" y="350.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.45%)</title><rect x="538" y="356" width="5" height="15" fill="rgb(249,46,15)"/><text x="541.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.45%)</title><rect x="538" y="372" width="5" height="15" fill="rgb(243,173,13)"/><text x="541.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.45%)</title><rect x="538" y="388" width="5" height="15" fill="rgb(234,191,45)"/><text x="541.00" y="398.50"></text></g><g><title>_set_out_array (ufunc_object.c) (1 samples, 0.45%)</title><rect x="549" y="356" width="5" height="15" fill="rgb(237,170,42)"/><text x="552.00" y="366.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.45%)</title><rect x="549" y="372" width="5" height="15" fill="rgb(217,41,43)"/><text x="552.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 1.81%)</title><rect x="538" y="324" width="21" height="15" fill="rgb(206,212,12)"/><text x="541.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 1.36%)</title><rect x="543" y="340" width="16" height="15" fill="rgb(248,47,50)"/><text x="546.00" y="350.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.45%)</title><rect x="554" y="356" width="5" height="15" fill="rgb(251,138,49)"/><text x="557.00" y="366.50"></text></g><g><title>PyArray_CastingConverter (conversion_utils.c) (1 samples, 0.45%)</title><rect x="554" y="372" width="5" height="15" fill="rgb(233,88,43)"/><text x="557.00" y="382.50"></text></g><g><title>PyArray_CastingConverter (conversion_utils.c) (1 samples, 0.45%)</title><rect x="554" y="388" width="5" height="15" fill="rgb(211,89,9)"/><text x="557.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 2.26%)</title><rect x="538" y="308" width="27" height="15" fill="rgb(236,123,5)"/><text x="541.00" y="318.50">u..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.45%)</title><rect x="559" y="324" width="6" height="15" fill="rgb(247,8,52)"/><text x="562.00" y="334.50"></text></g><g><title>0x7fc9ea8d3120 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="559" y="340" width="6" height="15" fill="rgb(233,124,6)"/><text x="562.00" y="350.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.45%)</title><rect x="565" y="372" width="5" height="15" fill="rgb(248,30,33)"/><text x="568.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.45%)</title><rect x="565" y="388" width="5" height="15" fill="rgb(217,100,2)"/><text x="568.00" y="398.50"></text></g><g><title>0x7fc9e9ad51c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="565" y="404" width="5" height="15" fill="rgb(213,212,20)"/><text x="568.00" y="414.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (67 samples, 30.32%)</title><rect x="218" y="132" width="357" height="15" fill="rgb(229,149,24)"/><text x="221.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (66 samples, 29.86%)</title><rect x="223" y="148" width="352" height="15" fill="rgb(249,222,0)"/><text x="226.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (65 samples, 29.41%)</title><rect x="228" y="164" width="347" height="15" fill="rgb(249,170,48)"/><text x="231.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_in..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (65 samples, 29.41%)</title><rect x="228" y="180" width="347" height="15" fill="rgb(219,93,50)"/><text x="231.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (51 samples, 23.08%)</title><rect x="303" y="196" width="272" height="15" fill="rgb(209,109,50)"/><text x="306.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (31 samples, 14.03%)</title><rect x="410" y="212" width="165" height="15" fill="rgb(240,174,43)"/><text x="413.00" y="222.50">run (mlprodict/onnxrt..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_mean.py) (11 samples, 4.98%)</title><rect x="517" y="228" width="58" height="15" fill="rgb(232,211,34)"/><text x="520.00" y="238.50">_run (..</text></g><g><title>mean (&lt;__array_function__ internals&gt;) (11 samples, 4.98%)</title><rect x="517" y="244" width="58" height="15" fill="rgb(235,25,30)"/><text x="520.00" y="254.50">mean (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (10 samples, 4.52%)</title><rect x="522" y="260" width="53" height="15" fill="rgb(225,163,1)"/><text x="525.00" y="270.50">array..</text></g><g><title>mean (numpy/core/fromnumeric.py) (9 samples, 4.07%)</title><rect x="527" y="276" width="48" height="15" fill="rgb(214,202,31)"/><text x="530.00" y="286.50">mean..</text></g><g><title>_mean (numpy/core/_methods.py) (9 samples, 4.07%)</title><rect x="527" y="292" width="48" height="15" fill="rgb(217,98,16)"/><text x="530.00" y="302.50">_mea..</text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.90%)</title><rect x="565" y="308" width="10" height="15" fill="rgb(237,129,28)"/><text x="568.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.90%)</title><rect x="565" y="324" width="10" height="15" fill="rgb(227,212,45)"/><text x="568.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.90%)</title><rect x="565" y="340" width="10" height="15" fill="rgb(219,26,37)"/><text x="568.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.90%)</title><rect x="565" y="356" width="10" height="15" fill="rgb(230,21,2)"/><text x="568.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.45%)</title><rect x="570" y="372" width="5" height="15" fill="rgb(241,166,40)"/><text x="573.00" y="382.50"></text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (69 samples, 31.22%)</title><rect x="212" y="100" width="369" height="15" fill="rgb(216,119,17)"/><text x="215.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_b_re..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (68 samples, 30.77%)</title><rect x="218" y="116" width="363" height="15" fill="rgb(224,223,29)"/><text x="221.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.45%)</title><rect x="575" y="132" width="6" height="15" fill="rgb(216,193,5)"/><text x="578.00" y="142.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.45%)</title><rect x="581" y="564" width="5" height="15" fill="rgb(225,201,22)"/><text x="584.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.45%)</title><rect x="581" y="580" width="5" height="15" fill="rgb(214,160,48)"/><text x="584.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.45%)</title><rect x="581" y="596" width="5" height="15" fill="rgb(206,222,1)"/><text x="584.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.45%)</title><rect x="581" y="612" width="5" height="15" fill="rgb(212,119,27)"/><text x="584.00" y="622.50"></text></g><g><title>find_undeclared (jinja2/compiler.py) (1 samples, 0.45%)</title><rect x="581" y="628" width="5" height="15" fill="rgb(226,192,31)"/><text x="584.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.45%)</title><rect x="581" y="644" width="5" height="15" fill="rgb(207,186,53)"/><text x="584.00" y="654.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.45%)</title><rect x="581" y="660" width="5" height="15" fill="rgb(214,83,31)"/><text x="584.00" y="670.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.45%)</title><rect x="581" y="676" width="5" height="15" fill="rgb(212,210,38)"/><text x="584.00" y="686.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.45%)</title><rect x="581" y="692" width="5" height="15" fill="rgb(244,1,22)"/><text x="584.00" y="702.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.45%)</title><rect x="581" y="708" width="5" height="15" fill="rgb(237,96,49)"/><text x="584.00" y="718.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.45%)</title><rect x="581" y="724" width="5" height="15" fill="rgb(209,30,20)"/><text x="584.00" y="734.50"></text></g><g><title>profile_pyrt (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (71 samples, 32.13%)</title><rect x="212" y="68" width="379" height="15" fill="rgb(239,85,17)"/><text x="215.00" y="78.50">profile_pyrt (bench_KNeighborsRegressor_default_k3_..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (71 samples, 32.13%)</title><rect x="212" y="84" width="379" height="15" fill="rgb(206,161,11)"/><text x="215.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default_k3..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.90%)</title><rect x="581" y="100" width="10" height="15" fill="rgb(228,173,40)"/><text x="584.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.90%)</title><rect x="581" y="116" width="10" height="15" fill="rgb(251,162,50)"/><text x="584.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.90%)</title><rect x="581" y="132" width="10" height="15" fill="rgb(248,178,2)"/><text x="584.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.90%)</title><rect x="581" y="148" width="10" height="15" fill="rgb(253,185,8)"/><text x="584.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.90%)</title><rect x="581" y="164" width="10" height="15" fill="rgb(227,104,12)"/><text x="584.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.90%)</title><rect x="581" y="180" width="10" height="15" fill="rgb(207,54,35)"/><text x="584.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.90%)</title><rect x="581" y="196" width="10" height="15" fill="rgb(240,99,17)"/><text x="584.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="581" y="212" width="10" height="15" fill="rgb(214,4,44)"/><text x="584.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="581" y="228" width="10" height="15" fill="rgb(214,1,43)"/><text x="584.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="581" y="244" width="10" height="15" fill="rgb(210,4,23)"/><text x="584.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="581" y="260" width="10" height="15" fill="rgb(220,13,17)"/><text x="584.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="581" y="276" width="10" height="15" fill="rgb(207,43,43)"/><text x="584.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.90%)</title><rect x="581" y="292" width="10" height="15" fill="rgb(226,51,22)"/><text x="584.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="581" y="308" width="10" height="15" fill="rgb(231,199,12)"/><text x="584.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="581" y="324" width="10" height="15" fill="rgb(235,11,10)"/><text x="584.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="581" y="340" width="10" height="15" fill="rgb(211,217,6)"/><text x="584.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="581" y="356" width="10" height="15" fill="rgb(220,186,27)"/><text x="584.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="581" y="372" width="10" height="15" fill="rgb(245,193,29)"/><text x="584.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.90%)</title><rect x="581" y="388" width="10" height="15" fill="rgb(223,98,35)"/><text x="584.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="581" y="404" width="10" height="15" fill="rgb(223,76,5)"/><text x="584.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="581" y="420" width="10" height="15" fill="rgb(235,208,50)"/><text x="584.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="581" y="436" width="10" height="15" fill="rgb(233,100,18)"/><text x="584.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="581" y="452" width="10" height="15" fill="rgb(236,16,3)"/><text x="584.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="581" y="468" width="10" height="15" fill="rgb(226,124,11)"/><text x="584.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (2 samples, 0.90%)</title><rect x="581" y="484" width="10" height="15" fill="rgb(238,52,26)"/><text x="584.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (2 samples, 0.90%)</title><rect x="581" y="500" width="10" height="15" fill="rgb(223,132,15)"/><text x="584.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (2 samples, 0.90%)</title><rect x="581" y="516" width="10" height="15" fill="rgb(218,208,36)"/><text x="584.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (2 samples, 0.90%)</title><rect x="581" y="532" width="10" height="15" fill="rgb(222,207,42)"/><text x="584.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (2 samples, 0.90%)</title><rect x="581" y="548" width="10" height="15" fill="rgb(237,42,5)"/><text x="584.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.45%)</title><rect x="586" y="564" width="5" height="15" fill="rgb(234,151,6)"/><text x="589.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.45%)</title><rect x="586" y="580" width="5" height="15" fill="rgb(235,146,27)"/><text x="589.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.45%)</title><rect x="586" y="596" width="5" height="15" fill="rgb(231,208,15)"/><text x="589.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.45%)</title><rect x="586" y="612" width="5" height="15" fill="rgb(210,90,17)"/><text x="589.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.45%)</title><rect x="586" y="628" width="5" height="15" fill="rgb(251,139,22)"/><text x="589.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.45%)</title><rect x="586" y="644" width="5" height="15" fill="rgb(206,56,0)"/><text x="589.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.45%)</title><rect x="586" y="660" width="5" height="15" fill="rgb(228,77,9)"/><text x="589.00" y="670.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.45%)</title><rect x="586" y="676" width="5" height="15" fill="rgb(252,173,25)"/><text x="589.00" y="686.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.45%)</title><rect x="586" y="692" width="5" height="15" fill="rgb(211,211,19)"/><text x="589.00" y="702.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.45%)</title><rect x="586" y="708" width="5" height="15" fill="rgb(209,101,10)"/><text x="589.00" y="718.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.45%)</title><rect x="586" y="724" width="5" height="15" fill="rgb(228,133,6)"/><text x="589.00" y="734.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.45%)</title><rect x="586" y="740" width="5" height="15" fill="rgb(221,84,19)"/><text x="589.00" y="750.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.45%)</title><rect x="586" y="756" width="5" height="15" fill="rgb(210,111,11)"/><text x="589.00" y="766.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.45%)</title><rect x="586" y="772" width="5" height="15" fill="rgb(219,177,31)"/><text x="589.00" y="782.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.45%)</title><rect x="586" y="788" width="5" height="15" fill="rgb(231,48,19)"/><text x="589.00" y="798.50"></text></g><g><title>__next__ (jinja2/lexer.py) (1 samples, 0.45%)</title><rect x="586" y="804" width="5" height="15" fill="rgb(209,4,54)"/><text x="589.00" y="814.50"></text></g><g><title>wrap (jinja2/lexer.py) (1 samples, 0.45%)</title><rect x="586" y="820" width="5" height="15" fill="rgb(209,124,53)"/><text x="589.00" y="830.50"></text></g><g><title>tokeniter (jinja2/lexer.py) (1 samples, 0.45%)</title><rect x="586" y="836" width="5" height="15" fill="rgb(225,127,3)"/><text x="589.00" y="846.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.45%)</title><rect x="602" y="212" width="6" height="15" fill="rgb(237,177,19)"/><text x="605.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.90%)</title><rect x="602" y="196" width="11" height="15" fill="rgb(242,179,47)"/><text x="605.00" y="206.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.45%)</title><rect x="608" y="212" width="5" height="15" fill="rgb(245,120,9)"/><text x="611.00" y="222.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.45%)</title><rect x="618" y="228" width="6" height="15" fill="rgb(223,86,19)"/><text x="621.00" y="238.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (3 samples, 1.36%)</title><rect x="613" y="196" width="16" height="15" fill="rgb(238,113,36)"/><text x="616.00" y="206.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.36%)</title><rect x="613" y="212" width="16" height="15" fill="rgb(245,221,32)"/><text x="616.00" y="222.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.45%)</title><rect x="624" y="228" width="5" height="15" fill="rgb(246,224,16)"/><text x="627.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (6 samples, 2.71%)</title><rect x="602" y="180" width="32" height="15" fill="rgb(221,67,2)"/><text x="605.00" y="190.50">Py..</text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.45%)</title><rect x="629" y="196" width="5" height="15" fill="rgb(230,50,30)"/><text x="632.00" y="206.50"></text></g><g><title>0x7fc9ea8b4700 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="629" y="212" width="5" height="15" fill="rgb(217,1,41)"/><text x="632.00" y="222.50"></text></g><g><title>0x7fc9ea8b1b0a (libc-2.29.so) (1 samples, 0.45%)</title><rect x="629" y="228" width="5" height="15" fill="rgb(231,200,5)"/><text x="632.00" y="238.50"></text></g><g><title>array_subscript (mapping.c) (7 samples, 3.17%)</title><rect x="602" y="164" width="38" height="15" fill="rgb(237,198,54)"/><text x="605.00" y="174.50">arr..</text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.45%)</title><rect x="634" y="180" width="6" height="15" fill="rgb(210,190,5)"/><text x="637.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.45%)</title><rect x="634" y="196" width="6" height="15" fill="rgb(231,69,39)"/><text x="637.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.45%)</title><rect x="634" y="212" width="6" height="15" fill="rgb(222,191,23)"/><text x="637.00" y="222.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.45%)</title><rect x="634" y="228" width="6" height="15" fill="rgb(214,195,7)"/><text x="637.00" y="238.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.45%)</title><rect x="650" y="180" width="6" height="15" fill="rgb(222,205,8)"/><text x="653.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (2 samples, 0.90%)</title><rect x="656" y="180" width="10" height="15" fill="rgb(205,192,12)"/><text x="659.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="661" y="196" width="5" height="15" fill="rgb(206,127,26)"/><text x="664.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.45%)</title><rect x="666" y="180" width="6" height="15" fill="rgb(215,74,42)"/><text x="669.00" y="190.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.45%)</title><rect x="666" y="196" width="6" height="15" fill="rgb(217,219,23)"/><text x="669.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.90%)</title><rect x="672" y="180" width="10" height="15" fill="rgb(231,163,5)"/><text x="675.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.45%)</title><rect x="677" y="196" width="5" height="15" fill="rgb(228,109,47)"/><text x="680.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (11 samples, 4.98%)</title><rect x="640" y="164" width="58" height="15" fill="rgb(218,214,9)"/><text x="643.00" y="174.50">check_..</text></g><g><title>simplefilter (warnings.py) (3 samples, 1.36%)</title><rect x="682" y="180" width="16" height="15" fill="rgb(216,225,35)"/><text x="685.00" y="190.50"></text></g><g><title>_add_filter (warnings.py) (3 samples, 1.36%)</title><rect x="682" y="196" width="16" height="15" fill="rgb(253,214,21)"/><text x="685.00" y="206.50"></text></g><g><title>0x7fc9ea8d3120 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="709" y="180" width="5" height="15" fill="rgb(243,122,29)"/><text x="712.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.45%)</title><rect x="714" y="196" width="6" height="15" fill="rgb(237,139,5)"/><text x="717.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.45%)</title><rect x="714" y="212" width="6" height="15" fill="rgb(246,193,8)"/><text x="717.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.45%)</title><rect x="720" y="196" width="5" height="15" fill="rgb(227,3,54)"/><text x="723.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (3 samples, 1.36%)</title><rect x="714" y="180" width="16" height="15" fill="rgb(237,65,49)"/><text x="717.00" y="190.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.45%)</title><rect x="725" y="196" width="5" height="15" fill="rgb(212,59,1)"/><text x="728.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.45%)</title><rect x="725" y="212" width="5" height="15" fill="rgb(229,92,22)"/><text x="728.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (2 samples, 0.90%)</title><rect x="730" y="180" width="11" height="15" fill="rgb(224,97,14)"/><text x="733.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.90%)</title><rect x="730" y="196" width="11" height="15" fill="rgb(226,32,26)"/><text x="733.00" y="206.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py) (4 samples, 1.81%)</title><rect x="741" y="180" width="21" height="15" fill="rgb(237,216,41)"/><text x="744.00" y="190.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (2 samples, 0.90%)</title><rect x="752" y="196" width="10" height="15" fill="rgb(243,34,31)"/><text x="755.00" y="206.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.45%)</title><rect x="757" y="212" width="5" height="15" fill="rgb(211,17,38)"/><text x="760.00" y="222.50"></text></g><g><title>0x7fc9ea8d31ef (libc-2.29.so) (1 samples, 0.45%)</title><rect x="800" y="244" width="5" height="15" fill="rgb(225,51,50)"/><text x="803.00" y="254.50"></text></g><g><title>_check_chunk_size (sklearn/metrics/pairwise.py) (5 samples, 2.26%)</title><rect x="789" y="196" width="27" height="15" fill="rgb(231,191,36)"/><text x="792.00" y="206.50">_..</text></g><g><title>&lt;genexpr&gt; (sklearn/metrics/pairwise.py) (4 samples, 1.81%)</title><rect x="794" y="212" width="22" height="15" fill="rgb(221,206,54)"/><text x="797.00" y="222.50">&lt;..</text></g><g><title>_num_samples (sklearn/utils/validation.py) (4 samples, 1.81%)</title><rect x="794" y="228" width="22" height="15" fill="rgb(229,106,29)"/><text x="797.00" y="238.50">_..</text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.90%)</title><rect x="805" y="244" width="11" height="15" fill="rgb(226,84,45)"/><text x="808.00" y="254.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.45%)</title><rect x="810" y="260" width="6" height="15" fill="rgb(230,158,39)"/><text x="813.00" y="270.50"></text></g><g><title>PyArray_IterAllButAxis (iterators.c) (2 samples, 0.90%)</title><rect x="821" y="324" width="11" height="15" fill="rgb(219,226,49)"/><text x="824.00" y="334.50"></text></g><g><title>PyArray_IterNew (iterators.c) (1 samples, 0.45%)</title><rect x="826" y="340" width="6" height="15" fill="rgb(213,48,16)"/><text x="829.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.45%)</title><rect x="826" y="356" width="6" height="15" fill="rgb(250,95,25)"/><text x="829.00" y="366.50"></text></g><g><title>0x7fc9ea8b3b12 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="826" y="372" width="6" height="15" fill="rgb(252,178,43)"/><text x="829.00" y="382.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (3 samples, 1.36%)</title><rect x="821" y="212" width="16" height="15" fill="rgb(213,51,5)"/><text x="824.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.36%)</title><rect x="821" y="228" width="16" height="15" fill="rgb(223,167,5)"/><text x="824.00" y="238.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py) (3 samples, 1.36%)</title><rect x="821" y="244" width="16" height="15" fill="rgb(233,54,0)"/><text x="824.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 1.36%)</title><rect x="821" y="260" width="16" height="15" fill="rgb(216,36,40)"/><text x="824.00" y="270.50"></text></g><g><title>array_argpartition (methods.c) (3 samples, 1.36%)</title><rect x="821" y="276" width="16" height="15" fill="rgb(253,66,29)"/><text x="824.00" y="286.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c) (3 samples, 1.36%)</title><rect x="821" y="292" width="16" height="15" fill="rgb(209,180,9)"/><text x="824.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c) (3 samples, 1.36%)</title><rect x="821" y="308" width="16" height="15" fill="rgb(208,78,48)"/><text x="824.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.45%)</title><rect x="832" y="324" width="5" height="15" fill="rgb(235,177,34)"/><text x="835.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.45%)</title><rect x="832" y="340" width="5" height="15" fill="rgb(236,30,38)"/><text x="835.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.45%)</title><rect x="832" y="356" width="5" height="15" fill="rgb(229,44,27)"/><text x="835.00" y="366.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (3 samples, 1.36%)</title><rect x="837" y="212" width="16" height="15" fill="rgb(224,83,44)"/><text x="840.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.36%)</title><rect x="837" y="228" width="16" height="15" fill="rgb(234,222,48)"/><text x="840.00" y="238.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (3 samples, 1.36%)</title><rect x="837" y="244" width="16" height="15" fill="rgb(230,1,10)"/><text x="840.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.90%)</title><rect x="842" y="260" width="11" height="15" fill="rgb(205,125,33)"/><text x="845.00" y="270.50"></text></g><g><title>array_argsort (methods.c) (2 samples, 0.90%)</title><rect x="842" y="276" width="11" height="15" fill="rgb(242,85,6)"/><text x="845.00" y="286.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (2 samples, 0.90%)</title><rect x="842" y="292" width="11" height="15" fill="rgb(206,138,8)"/><text x="845.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c) (2 samples, 0.90%)</title><rect x="842" y="308" width="11" height="15" fill="rgb(209,99,17)"/><text x="845.00" y="318.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.45%)</title><rect x="853" y="244" width="5" height="15" fill="rgb(250,204,0)"/><text x="856.00" y="254.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.45%)</title><rect x="853" y="260" width="5" height="15" fill="rgb(222,218,34)"/><text x="856.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c) (2 samples, 0.90%)</title><rect x="853" y="228" width="11" height="15" fill="rgb(221,164,5)"/><text x="856.00" y="238.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="858" y="244" width="6" height="15" fill="rgb(222,75,26)"/><text x="861.00" y="254.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (1 samples, 0.45%)</title><rect x="864" y="244" width="5" height="15" fill="rgb(223,162,47)"/><text x="867.00" y="254.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (3 samples, 1.36%)</title><rect x="864" y="228" width="16" height="15" fill="rgb(223,108,13)"/><text x="867.00" y="238.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (2 samples, 0.90%)</title><rect x="869" y="244" width="11" height="15" fill="rgb(248,104,25)"/><text x="872.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.90%)</title><rect x="869" y="260" width="11" height="15" fill="rgb(216,224,32)"/><text x="872.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.90%)</title><rect x="869" y="276" width="11" height="15" fill="rgb(221,37,31)"/><text x="872.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.45%)</title><rect x="874" y="292" width="6" height="15" fill="rgb(239,7,22)"/><text x="877.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.45%)</title><rect x="880" y="228" width="5" height="15" fill="rgb(243,216,14)"/><text x="883.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.45%)</title><rect x="880" y="244" width="5" height="15" fill="rgb(250,37,31)"/><text x="883.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.45%)</title><rect x="880" y="260" width="5" height="15" fill="rgb(241,10,29)"/><text x="883.00" y="270.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.45%)</title><rect x="880" y="276" width="5" height="15" fill="rgb(239,147,6)"/><text x="883.00" y="286.50"></text></g><g><title>array_subscript (mapping.c) (7 samples, 3.17%)</title><rect x="853" y="212" width="37" height="15" fill="rgb(240,115,13)"/><text x="856.00" y="222.50">arr..</text></g><g><title>prepare_index (mapping.c) (1 samples, 0.45%)</title><rect x="885" y="228" width="5" height="15" fill="rgb(240,7,31)"/><text x="888.00" y="238.50"></text></g><g><title>multi_DECREF (mapping.c) (1 samples, 0.45%)</title><rect x="885" y="244" width="5" height="15" fill="rgb(208,106,41)"/><text x="888.00" y="254.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py) (15 samples, 6.79%)</title><rect x="816" y="196" width="80" height="15" fill="rgb(221,167,22)"/><text x="819.00" y="206.50">_kneighbo..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.45%)</title><rect x="890" y="212" width="6" height="15" fill="rgb(210,192,45)"/><text x="893.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.45%)</title><rect x="890" y="228" width="6" height="15" fill="rgb(246,8,37)"/><text x="893.00" y="238.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.45%)</title><rect x="890" y="244" width="6" height="15" fill="rgb(251,35,36)"/><text x="893.00" y="254.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.45%)</title><rect x="890" y="260" width="6" height="15" fill="rgb(247,69,54)"/><text x="893.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.45%)</title><rect x="901" y="212" width="6" height="15" fill="rgb(213,41,41)"/><text x="904.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 1.36%)</title><rect x="896" y="196" width="16" height="15" fill="rgb(228,214,18)"/><text x="899.00" y="206.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.45%)</title><rect x="907" y="212" width="5" height="15" fill="rgb(214,156,46)"/><text x="910.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.45%)</title><rect x="912" y="196" width="5" height="15" fill="rgb(231,208,10)"/><text x="915.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.45%)</title><rect x="912" y="212" width="5" height="15" fill="rgb(245,177,23)"/><text x="915.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.45%)</title><rect x="912" y="228" width="5" height="15" fill="rgb(235,142,7)"/><text x="915.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.45%)</title><rect x="939" y="292" width="5" height="15" fill="rgb(240,195,7)"/><text x="942.00" y="302.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.45%)</title><rect x="939" y="308" width="5" height="15" fill="rgb(230,139,47)"/><text x="942.00" y="318.50"></text></g><g><title>array_multiply (number.c) (2 samples, 0.90%)</title><rect x="939" y="244" width="10" height="15" fill="rgb(231,59,52)"/><text x="942.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.90%)</title><rect x="939" y="260" width="10" height="15" fill="rgb(231,206,22)"/><text x="942.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.90%)</title><rect x="939" y="276" width="10" height="15" fill="rgb(245,34,52)"/><text x="942.00" y="286.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.45%)</title><rect x="944" y="292" width="5" height="15" fill="rgb(222,193,45)"/><text x="947.00" y="302.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.45%)</title><rect x="981" y="276" width="6" height="15" fill="rgb(228,108,52)"/><text x="984.00" y="286.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.45%)</title><rect x="987" y="276" width="5" height="15" fill="rgb(208,10,5)"/><text x="990.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.45%)</title><rect x="992" y="276" width="5" height="15" fill="rgb(234,37,16)"/><text x="995.00" y="286.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.90%)</title><rect x="997" y="276" width="11" height="15" fill="rgb(211,106,0)"/><text x="1000.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 1.36%)</title><rect x="1008" y="276" width="16" height="15" fill="rgb(247,180,35)"/><text x="1011.00" y="286.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.45%)</title><rect x="1019" y="292" width="5" height="15" fill="rgb(237,48,27)"/><text x="1022.00" y="302.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c) (1 samples, 0.45%)</title><rect x="1024" y="308" width="5" height="15" fill="rgb(231,62,5)"/><text x="1027.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.45%)</title><rect x="1029" y="388" width="6" height="15" fill="rgb(228,190,7)"/><text x="1032.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1029" y="404" width="6" height="15" fill="rgb(211,2,6)"/><text x="1032.00" y="414.50"></text></g><g><title>0x7fc9ea8d2d50 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1029" y="420" width="6" height="15" fill="rgb(231,221,27)"/><text x="1032.00" y="430.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (3 samples, 1.36%)</title><rect x="1024" y="276" width="16" height="15" fill="rgb(240,76,39)"/><text x="1027.00" y="286.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 1.36%)</title><rect x="1024" y="292" width="16" height="15" fill="rgb(227,80,13)"/><text x="1027.00" y="302.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.90%)</title><rect x="1029" y="308" width="11" height="15" fill="rgb(249,71,8)"/><text x="1032.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.90%)</title><rect x="1029" y="324" width="11" height="15" fill="rgb(222,13,14)"/><text x="1032.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c) (2 samples, 0.90%)</title><rect x="1029" y="340" width="11" height="15" fill="rgb(222,116,18)"/><text x="1032.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.90%)</title><rect x="1029" y="356" width="11" height="15" fill="rgb(249,165,43)"/><text x="1032.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.90%)</title><rect x="1029" y="372" width="11" height="15" fill="rgb(223,180,30)"/><text x="1032.00" y="382.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.45%)</title><rect x="1035" y="388" width="5" height="15" fill="rgb(227,24,16)"/><text x="1038.00" y="398.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.45%)</title><rect x="1035" y="404" width="5" height="15" fill="rgb(236,47,20)"/><text x="1038.00" y="414.50"></text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py) (20 samples, 9.05%)</title><rect x="949" y="244" width="107" height="15" fill="rgb(246,151,17)"/><text x="952.00" y="254.50">check_pairwis..</text></g><g><title>check_array (sklearn/utils/validation.py) (19 samples, 8.60%)</title><rect x="955" y="260" width="101" height="15" fill="rgb(245,28,46)"/><text x="958.00" y="270.50">check_array ..</text></g><g><title>simplefilter (warnings.py) (3 samples, 1.36%)</title><rect x="1040" y="276" width="16" height="15" fill="rgb(221,191,27)"/><text x="1043.00" y="286.50"></text></g><g><title>_add_filter (warnings.py) (3 samples, 1.36%)</title><rect x="1040" y="292" width="16" height="15" fill="rgb(221,155,21)"/><text x="1043.00" y="302.50"></text></g><g><title>_einsum_dispatcher (numpy/core/einsumfunc.py) (1 samples, 0.45%)</title><rect x="1056" y="292" width="5" height="15" fill="rgb(217,197,48)"/><text x="1059.00" y="302.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src) (1 samples, 0.45%)</title><rect x="1061" y="324" width="6" height="15" fill="rgb(244,6,13)"/><text x="1064.00" y="334.50"></text></g><g><title>parse_output_subscripts (einsum.c.src) (1 samples, 0.45%)</title><rect x="1061" y="340" width="6" height="15" fill="rgb(224,122,35)"/><text x="1064.00" y="350.50"></text></g><g><title>0x7fc9ea8c8e6d (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1061" y="356" width="6" height="15" fill="rgb(212,128,32)"/><text x="1064.00" y="366.50"></text></g><g><title>row_norms (sklearn/utils/extmath.py) (3 samples, 1.36%)</title><rect x="1056" y="244" width="16" height="15" fill="rgb(221,153,42)"/><text x="1059.00" y="254.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;) (3 samples, 1.36%)</title><rect x="1056" y="260" width="16" height="15" fill="rgb(252,211,39)"/><text x="1059.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.36%)</title><rect x="1056" y="276" width="16" height="15" fill="rgb(252,41,31)"/><text x="1059.00" y="286.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py) (2 samples, 0.90%)</title><rect x="1061" y="292" width="11" height="15" fill="rgb(237,98,25)"/><text x="1064.00" y="302.50"></text></g><g><title>array_einsum (multiarraymodule.c) (2 samples, 0.90%)</title><rect x="1061" y="308" width="11" height="15" fill="rgb(214,189,22)"/><text x="1064.00" y="318.50"></text></g><g><title>einsum_sub_op_from_str (multiarraymodule.c) (1 samples, 0.45%)</title><rect x="1067" y="324" width="5" height="15" fill="rgb(219,73,52)"/><text x="1070.00" y="334.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (2 samples, 0.90%)</title><rect x="1072" y="244" width="11" height="15" fill="rgb(242,1,8)"/><text x="1075.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.45%)</title><rect x="1077" y="260" width="6" height="15" fill="rgb(217,193,1)"/><text x="1080.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.45%)</title><rect x="1077" y="276" width="6" height="15" fill="rgb(221,107,49)"/><text x="1080.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (1 samples, 0.45%)</title><rect x="1077" y="292" width="6" height="15" fill="rgb(245,211,49)"/><text x="1080.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.45%)</title><rect x="1077" y="308" width="6" height="15" fill="rgb(219,104,22)"/><text x="1080.00" y="318.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.45%)</title><rect x="1077" y="324" width="6" height="15" fill="rgb(247,86,47)"/><text x="1080.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.45%)</title><rect x="1083" y="276" width="5" height="15" fill="rgb(222,103,29)"/><text x="1086.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.45%)</title><rect x="1083" y="292" width="5" height="15" fill="rgb(241,91,31)"/><text x="1086.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.45%)</title><rect x="1088" y="276" width="5" height="15" fill="rgb(246,154,16)"/><text x="1091.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.45%)</title><rect x="1088" y="292" width="5" height="15" fill="rgb(244,158,35)"/><text x="1091.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.45%)</title><rect x="1088" y="308" width="5" height="15" fill="rgb(214,135,41)"/><text x="1091.00" y="318.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py) (64 samples, 28.96%)</title><rect x="762" y="180" width="342" height="15" fill="rgb(234,214,17)"/><text x="765.00" y="190.50">pairwise_distances_chunked (sklearn/metrics/pa..</text></g><g><title>pairwise_distances (sklearn/metrics/pairwise.py) (35 samples, 15.84%)</title><rect x="917" y="196" width="187" height="15" fill="rgb(226,192,15)"/><text x="920.00" y="206.50">pairwise_distances (skle..</text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py) (35 samples, 15.84%)</title><rect x="917" y="212" width="187" height="15" fill="rgb(230,34,43)"/><text x="920.00" y="222.50">_parallel_pairwise (skle..</text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py) (33 samples, 14.93%)</title><rect x="928" y="228" width="176" height="15" fill="rgb(250,14,50)"/><text x="931.00" y="238.50">euclidean_distances (s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 1.81%)</title><rect x="1083" y="244" width="21" height="15" fill="rgb(225,94,6)"/><text x="1086.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 1.81%)</title><rect x="1083" y="260" width="21" height="15" fill="rgb(206,138,40)"/><text x="1086.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (2 samples, 0.90%)</title><rect x="1093" y="276" width="11" height="15" fill="rgb(221,31,18)"/><text x="1096.00" y="286.50"></text></g><g><title>_vhstack_dispatcher (numpy/core/shape_base.py) (1 samples, 0.45%)</title><rect x="1109" y="196" width="6" height="15" fill="rgb(208,53,11)"/><text x="1112.00" y="206.50"></text></g><g><title>_arrays_for_stack_dispatcher (numpy/core/shape_base.py) (1 samples, 0.45%)</title><rect x="1109" y="212" width="6" height="15" fill="rgb(249,206,6)"/><text x="1112.00" y="222.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.45%)</title><rect x="1115" y="212" width="5" height="15" fill="rgb(236,220,2)"/><text x="1118.00" y="222.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py) (82 samples, 37.10%)</title><rect x="698" y="164" width="438" height="15" fill="rgb(222,19,22)"/><text x="701.00" y="174.50">kneighbors (sklearn/neighbors/_base.py)</text></g><g><title>vstack (&lt;__array_function__ internals&gt;) (6 samples, 2.71%)</title><rect x="1104" y="180" width="32" height="15" fill="rgb(245,167,6)"/><text x="1107.00" y="190.50">vs..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.81%)</title><rect x="1115" y="196" width="21" height="15" fill="rgb(219,168,35)"/><text x="1118.00" y="206.50"></text></g><g><title>vstack (numpy/core/shape_base.py) (3 samples, 1.36%)</title><rect x="1120" y="212" width="16" height="15" fill="rgb(249,7,51)"/><text x="1123.00" y="222.50"></text></g><g><title>concatenate (&lt;__array_function__ internals&gt;) (2 samples, 0.90%)</title><rect x="1125" y="228" width="11" height="15" fill="rgb(237,7,20)"/><text x="1128.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.90%)</title><rect x="1125" y="244" width="11" height="15" fill="rgb(251,23,21)"/><text x="1128.00" y="254.50"></text></g><g><title>array_concatenate (multiarraymodule.c) (2 samples, 0.90%)</title><rect x="1125" y="260" width="11" height="15" fill="rgb(234,106,48)"/><text x="1128.00" y="270.50"></text></g><g><title>PyArray_ConcatenateInto (multiarraymodule.c) (1 samples, 0.45%)</title><rect x="1131" y="276" width="5" height="15" fill="rgb(254,136,30)"/><text x="1134.00" y="286.50"></text></g><g><title>PyArray_ConcatenateArrays (multiarraymodule.c) (1 samples, 0.45%)</title><rect x="1131" y="292" width="5" height="15" fill="rgb(237,98,33)"/><text x="1134.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.45%)</title><rect x="1131" y="308" width="5" height="15" fill="rgb(227,154,3)"/><text x="1134.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.45%)</title><rect x="1131" y="324" width="5" height="15" fill="rgb(249,22,28)"/><text x="1134.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.45%)</title><rect x="1131" y="340" width="5" height="15" fill="rgb(254,199,52)"/><text x="1134.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.45%)</title><rect x="1147" y="244" width="5" height="15" fill="rgb(223,81,51)"/><text x="1150.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.45%)</title><rect x="1147" y="260" width="5" height="15" fill="rgb(229,75,28)"/><text x="1150.00" y="270.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.45%)</title><rect x="1147" y="276" width="5" height="15" fill="rgb(215,56,48)"/><text x="1150.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.90%)</title><rect x="1147" y="228" width="10" height="15" fill="rgb(216,26,52)"/><text x="1150.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.45%)</title><rect x="1152" y="244" width="5" height="15" fill="rgb(228,7,42)"/><text x="1155.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.45%)</title><rect x="1152" y="260" width="5" height="15" fill="rgb(217,130,12)"/><text x="1155.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.45%)</title><rect x="1152" y="276" width="5" height="15" fill="rgb(227,72,12)"/><text x="1155.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.90%)</title><rect x="1157" y="244" width="11" height="15" fill="rgb(221,79,33)"/><text x="1160.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.90%)</title><rect x="1157" y="260" width="11" height="15" fill="rgb(238,57,6)"/><text x="1160.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.90%)</title><rect x="1157" y="276" width="11" height="15" fill="rgb(207,209,42)"/><text x="1160.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.90%)</title><rect x="1157" y="292" width="11" height="15" fill="rgb(226,117,46)"/><text x="1160.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.90%)</title><rect x="1157" y="308" width="11" height="15" fill="rgb(215,9,46)"/><text x="1160.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.90%)</title><rect x="1168" y="292" width="11" height="15" fill="rgb(245,196,33)"/><text x="1171.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.90%)</title><rect x="1168" y="308" width="11" height="15" fill="rgb(224,211,49)"/><text x="1171.00" y="318.50"></text></g><g><title>profile_skl (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (111 samples, 50.23%)</title><rect x="591" y="68" width="593" height="15" fill="rgb(214,180,0)"/><text x="594.00" y="78.50">profile_skl (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbor..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (111 samples, 50.23%)</title><rect x="591" y="84" width="593" height="15" fill="rgb(235,182,35)"/><text x="594.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighb..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (111 samples, 50.23%)</title><rect x="591" y="100" width="593" height="15" fill="rgb(224,97,32)"/><text x="594.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (110 samples, 49.77%)</title><rect x="597" y="116" width="587" height="15" fill="rgb(230,216,38)"/><text x="600.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (110 samples, 49.77%)</title><rect x="597" y="132" width="587" height="15" fill="rgb(228,2,21)"/><text x="600.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/neighbors/_regression.py) (109 samples, 49.32%)</title><rect x="602" y="148" width="582" height="15" fill="rgb(218,102,1)"/><text x="605.00" y="158.50">predict (sklearn/neighbors/_regression.py)</text></g><g><title>mean (&lt;__array_function__ internals&gt;) (9 samples, 4.07%)</title><rect x="1136" y="164" width="48" height="15" fill="rgb(237,111,38)"/><text x="1139.00" y="174.50">mean..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 3.62%)</title><rect x="1141" y="180" width="43" height="15" fill="rgb(227,142,54)"/><text x="1144.00" y="190.50">arra..</text></g><g><title>mean (numpy/core/fromnumeric.py) (8 samples, 3.62%)</title><rect x="1141" y="196" width="43" height="15" fill="rgb(248,147,34)"/><text x="1144.00" y="206.50">mean..</text></g><g><title>_mean (numpy/core/_methods.py) (7 samples, 3.17%)</title><rect x="1147" y="212" width="37" height="15" fill="rgb(246,24,36)"/><text x="1150.00" y="222.50">_me..</text></g><g><title>ufunc_reduce (ufunc_object.c) (5 samples, 2.26%)</title><rect x="1157" y="228" width="27" height="15" fill="rgb(234,171,29)"/><text x="1160.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (3 samples, 1.36%)</title><rect x="1168" y="244" width="16" height="15" fill="rgb(219,219,33)"/><text x="1171.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (3 samples, 1.36%)</title><rect x="1168" y="260" width="16" height="15" fill="rgb(235,117,27)"/><text x="1171.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (3 samples, 1.36%)</title><rect x="1168" y="276" width="16" height="15" fill="rgb(220,187,5)"/><text x="1171.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.45%)</title><rect x="1179" y="292" width="5" height="15" fill="rgb(241,117,12)"/><text x="1182.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.45%)</title><rect x="1179" y="308" width="5" height="15" fill="rgb(229,180,28)"/><text x="1182.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.45%)</title><rect x="1179" y="324" width="5" height="15" fill="rgb(250,156,52)"/><text x="1182.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.45%)</title><rect x="1179" y="340" width="5" height="15" fill="rgb(241,42,3)"/><text x="1182.00" y="350.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.45%)</title><rect x="1179" y="356" width="5" height="15" fill="rgb(236,179,50)"/><text x="1182.00" y="366.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.45%)</title><rect x="1179" y="372" width="5" height="15" fill="rgb(220,226,20)"/><text x="1182.00" y="382.50"></text></g><g><title>all (221 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(210,205,5)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (221 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(227,80,50)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py)</text></g><g><title>start (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (1 samples, 0.45%)</title><rect x="1184" y="68" width="6" height="15" fill="rgb(235,178,21)"/><text x="1187.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3.py) (1 samples, 0.45%)</title><rect x="1184" y="84" width="6" height="15" fill="rgb(220,165,48)"/><text x="1187.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="1184" y="100" width="6" height="15" fill="rgb(244,65,42)"/><text x="1187.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="1184" y="116" width="6" height="15" fill="rgb(227,38,19)"/><text x="1187.00" y="126.50"></text></g><g><title>_get_xdtype (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="1184" y="132" width="6" height="15" fill="rgb(251,114,23)"/><text x="1187.00" y="142.50"></text></g></g></svg>