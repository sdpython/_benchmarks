<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2118" onload="init(evt)" viewBox="0 0 1200 2118" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2118" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2101.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2101.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.88%)</title><rect x="10" y="868" width="10" height="15" fill="rgb(239,25,2)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.88%)</title><rect x="10" y="884" width="10" height="15" fill="rgb(230,6,17)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.88%)</title><rect x="10" y="900" width="10" height="15" fill="rgb(245,184,7)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.88%)</title><rect x="10" y="916" width="10" height="15" fill="rgb(211,0,46)"/><text x="13.00" y="926.50"></text></g><g><title>simplefilter (warnings.py) (2 samples, 0.88%)</title><rect x="10" y="932" width="10" height="15" fill="rgb(248,173,46)"/><text x="13.00" y="942.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.88%)</title><rect x="10" y="948" width="10" height="15" fill="rgb(247,16,42)"/><text x="13.00" y="958.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="20" y="868" width="5" height="15" fill="rgb(223,137,3)"/><text x="23.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="20" y="884" width="5" height="15" fill="rgb(207,141,13)"/><text x="23.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="20" y="900" width="5" height="15" fill="rgb(233,183,45)"/><text x="23.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="20" y="916" width="5" height="15" fill="rgb(251,78,31)"/><text x="23.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="20" y="932" width="5" height="15" fill="rgb(235,212,24)"/><text x="23.00" y="942.50"></text></g><g><title>isdir (genericpath.py) (1 samples, 0.44%)</title><rect x="20" y="948" width="5" height="15" fill="rgb(218,17,14)"/><text x="23.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.44%)</title><rect x="20" y="964" width="5" height="15" fill="rgb(251,92,32)"/><text x="23.00" y="974.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.44%)</title><rect x="20" y="980" width="5" height="15" fill="rgb(223,21,16)"/><text x="23.00" y="990.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="25" y="900" width="5" height="15" fill="rgb(228,12,51)"/><text x="28.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="25" y="916" width="5" height="15" fill="rgb(242,5,23)"/><text x="28.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="25" y="932" width="5" height="15" fill="rgb(232,212,14)"/><text x="28.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.44%)</title><rect x="25" y="948" width="5" height="15" fill="rgb(219,156,39)"/><text x="28.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.44%)</title><rect x="25" y="964" width="5" height="15" fill="rgb(228,157,33)"/><text x="28.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.44%)</title><rect x="25" y="980" width="5" height="15" fill="rgb(220,137,27)"/><text x="28.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.44%)</title><rect x="25" y="996" width="5" height="15" fill="rgb(247,119,24)"/><text x="28.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.44%)</title><rect x="25" y="1012" width="5" height="15" fill="rgb(219,127,11)"/><text x="28.00" y="1022.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (6 samples, 2.65%)</title><rect x="10" y="836" width="31" height="15" fill="rgb(224,213,21)"/><text x="13.00" y="846.50">_c..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (6 samples, 2.65%)</title><rect x="10" y="852" width="31" height="15" fill="rgb(240,70,41)"/><text x="13.00" y="862.50">_i..</text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 1.33%)</title><rect x="25" y="868" width="16" height="15" fill="rgb(217,129,36)"/><text x="28.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 1.33%)</title><rect x="25" y="884" width="16" height="15" fill="rgb(245,171,46)"/><text x="28.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.88%)</title><rect x="30" y="900" width="11" height="15" fill="rgb(227,1,19)"/><text x="33.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.88%)</title><rect x="30" y="916" width="11" height="15" fill="rgb(229,143,39)"/><text x="33.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.88%)</title><rect x="30" y="932" width="11" height="15" fill="rgb(232,119,47)"/><text x="33.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (2 samples, 0.88%)</title><rect x="30" y="948" width="11" height="15" fill="rgb(222,223,22)"/><text x="33.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.88%)</title><rect x="30" y="964" width="11" height="15" fill="rgb(245,25,3)"/><text x="33.00" y="974.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (7 samples, 3.10%)</title><rect x="10" y="292" width="36" height="15" fill="rgb(244,37,11)"/><text x="13.00" y="302.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="308" width="36" height="15" fill="rgb(230,17,49)"/><text x="13.00" y="318.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="324" width="36" height="15" fill="rgb(245,82,12)"/><text x="13.00" y="334.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="340" width="36" height="15" fill="rgb(225,203,19)"/><text x="13.00" y="350.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 3.10%)</title><rect x="10" y="356" width="36" height="15" fill="rgb(240,200,2)"/><text x="13.00" y="366.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="372" width="36" height="15" fill="rgb(246,40,25)"/><text x="13.00" y="382.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (7 samples, 3.10%)</title><rect x="10" y="388" width="36" height="15" fill="rgb(217,99,26)"/><text x="13.00" y="398.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="404" width="36" height="15" fill="rgb(223,34,46)"/><text x="13.00" y="414.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="420" width="36" height="15" fill="rgb(216,101,1)"/><text x="13.00" y="430.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="436" width="36" height="15" fill="rgb(223,190,27)"/><text x="13.00" y="446.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 3.10%)</title><rect x="10" y="452" width="36" height="15" fill="rgb(217,50,53)"/><text x="13.00" y="462.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="468" width="36" height="15" fill="rgb(243,111,31)"/><text x="13.00" y="478.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (7 samples, 3.10%)</title><rect x="10" y="484" width="36" height="15" fill="rgb(250,224,52)"/><text x="13.00" y="494.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="500" width="36" height="15" fill="rgb(214,8,3)"/><text x="13.00" y="510.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="516" width="36" height="15" fill="rgb(251,134,4)"/><text x="13.00" y="526.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="532" width="36" height="15" fill="rgb(250,110,37)"/><text x="13.00" y="542.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 3.10%)</title><rect x="10" y="548" width="36" height="15" fill="rgb(215,185,18)"/><text x="13.00" y="558.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="564" width="36" height="15" fill="rgb(240,191,39)"/><text x="13.00" y="574.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (7 samples, 3.10%)</title><rect x="10" y="580" width="36" height="15" fill="rgb(234,227,2)"/><text x="13.00" y="590.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="596" width="36" height="15" fill="rgb(237,16,26)"/><text x="13.00" y="606.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="612" width="36" height="15" fill="rgb(230,185,15)"/><text x="13.00" y="622.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="628" width="36" height="15" fill="rgb(214,185,30)"/><text x="13.00" y="638.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="644" width="36" height="15" fill="rgb(215,56,1)"/><text x="13.00" y="654.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="660" width="36" height="15" fill="rgb(210,59,15)"/><text x="13.00" y="670.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="676" width="36" height="15" fill="rgb(205,126,20)"/><text x="13.00" y="686.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 3.10%)</title><rect x="10" y="692" width="36" height="15" fill="rgb(211,38,4)"/><text x="13.00" y="702.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="708" width="36" height="15" fill="rgb(239,22,24)"/><text x="13.00" y="718.50">_ca..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (7 samples, 3.10%)</title><rect x="10" y="724" width="36" height="15" fill="rgb(238,46,53)"/><text x="13.00" y="734.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="740" width="36" height="15" fill="rgb(249,30,19)"/><text x="13.00" y="750.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="756" width="36" height="15" fill="rgb(237,50,9)"/><text x="13.00" y="766.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="772" width="36" height="15" fill="rgb(232,83,24)"/><text x="13.00" y="782.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 3.10%)</title><rect x="10" y="788" width="36" height="15" fill="rgb(228,154,12)"/><text x="13.00" y="798.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="10" y="804" width="36" height="15" fill="rgb(250,88,4)"/><text x="13.00" y="814.50">_ca..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (7 samples, 3.10%)</title><rect x="10" y="820" width="36" height="15" fill="rgb(219,136,14)"/><text x="13.00" y="830.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="41" y="836" width="5" height="15" fill="rgb(208,196,6)"/><text x="44.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="41" y="852" width="5" height="15" fill="rgb(222,22,19)"/><text x="44.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="41" y="868" width="5" height="15" fill="rgb(230,172,7)"/><text x="44.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="41" y="884" width="5" height="15" fill="rgb(213,175,25)"/><text x="44.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="41" y="900" width="5" height="15" fill="rgb(236,151,21)"/><text x="44.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.44%)</title><rect x="41" y="916" width="5" height="15" fill="rgb(212,108,20)"/><text x="44.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.44%)</title><rect x="41" y="932" width="5" height="15" fill="rgb(225,197,32)"/><text x="44.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.44%)</title><rect x="41" y="948" width="5" height="15" fill="rgb(226,173,50)"/><text x="44.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.44%)</title><rect x="41" y="964" width="5" height="15" fill="rgb(216,227,19)"/><text x="44.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.44%)</title><rect x="41" y="980" width="5" height="15" fill="rgb(218,48,17)"/><text x="44.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.44%)</title><rect x="41" y="996" width="5" height="15" fill="rgb(216,60,33)"/><text x="44.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.44%)</title><rect x="41" y="1012" width="5" height="15" fill="rgb(238,131,5)"/><text x="44.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.44%)</title><rect x="41" y="1028" width="5" height="15" fill="rgb(214,223,45)"/><text x="44.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.44%)</title><rect x="41" y="1044" width="5" height="15" fill="rgb(248,108,30)"/><text x="44.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.44%)</title><rect x="41" y="1060" width="5" height="15" fill="rgb(237,140,31)"/><text x="44.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.44%)</title><rect x="41" y="1076" width="5" height="15" fill="rgb(244,204,34)"/><text x="44.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.44%)</title><rect x="41" y="1092" width="5" height="15" fill="rgb(211,68,47)"/><text x="44.00" y="1102.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.44%)</title><rect x="41" y="1108" width="5" height="15" fill="rgb(243,55,35)"/><text x="44.00" y="1118.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.44%)</title><rect x="41" y="1124" width="5" height="15" fill="rgb(212,107,27)"/><text x="44.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="628" width="5" height="15" fill="rgb(236,50,5)"/><text x="49.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="644" width="5" height="15" fill="rgb(233,208,44)"/><text x="49.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="660" width="5" height="15" fill="rgb(223,133,50)"/><text x="49.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="676" width="5" height="15" fill="rgb(227,218,23)"/><text x="49.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="46" y="692" width="5" height="15" fill="rgb(207,158,28)"/><text x="49.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="708" width="5" height="15" fill="rgb(238,5,24)"/><text x="49.00" y="718.50"></text></g><g><title>&lt;module&gt; (distutils/__init__.py) (1 samples, 0.44%)</title><rect x="46" y="724" width="5" height="15" fill="rgb(223,142,34)"/><text x="49.00" y="734.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="740" width="5" height="15" fill="rgb(251,69,16)"/><text x="49.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="756" width="5" height="15" fill="rgb(224,212,19)"/><text x="49.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="772" width="5" height="15" fill="rgb(248,200,2)"/><text x="49.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="788" width="5" height="15" fill="rgb(245,161,3)"/><text x="49.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="804" width="5" height="15" fill="rgb(250,92,7)"/><text x="49.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="46" y="820" width="5" height="15" fill="rgb(237,84,51)"/><text x="49.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="836" width="5" height="15" fill="rgb(221,156,18)"/><text x="49.00" y="846.50"></text></g><g><title>&lt;module&gt; (distutils/dist.py) (1 samples, 0.44%)</title><rect x="46" y="852" width="5" height="15" fill="rgb(237,118,14)"/><text x="49.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="868" width="5" height="15" fill="rgb(230,165,35)"/><text x="49.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="884" width="5" height="15" fill="rgb(229,47,38)"/><text x="49.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="900" width="5" height="15" fill="rgb(244,140,2)"/><text x="49.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="46" y="916" width="5" height="15" fill="rgb(210,41,12)"/><text x="49.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="932" width="5" height="15" fill="rgb(222,88,33)"/><text x="49.00" y="942.50"></text></g><g><title>&lt;module&gt; (distutils/util.py) (1 samples, 0.44%)</title><rect x="46" y="948" width="5" height="15" fill="rgb(241,2,40)"/><text x="49.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="964" width="5" height="15" fill="rgb(238,74,10)"/><text x="49.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="980" width="5" height="15" fill="rgb(220,128,36)"/><text x="49.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="996" width="5" height="15" fill="rgb(245,221,9)"/><text x="49.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="46" y="1012" width="5" height="15" fill="rgb(207,89,9)"/><text x="49.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="1028" width="5" height="15" fill="rgb(234,134,47)"/><text x="49.00" y="1038.50"></text></g><g><title>&lt;module&gt; (distutils/spawn.py) (1 samples, 0.44%)</title><rect x="46" y="1044" width="5" height="15" fill="rgb(254,201,22)"/><text x="49.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="1060" width="5" height="15" fill="rgb(219,163,18)"/><text x="49.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="1076" width="5" height="15" fill="rgb(236,186,28)"/><text x="49.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="1092" width="5" height="15" fill="rgb(229,111,38)"/><text x="49.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="1108" width="5" height="15" fill="rgb(212,6,15)"/><text x="49.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="1124" width="5" height="15" fill="rgb(238,108,50)"/><text x="49.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="46" y="1140" width="5" height="15" fill="rgb(224,48,29)"/><text x="49.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="1156" width="5" height="15" fill="rgb(254,93,42)"/><text x="49.00" y="1166.50"></text></g><g><title>&lt;module&gt; (distutils/log.py) (1 samples, 0.44%)</title><rect x="46" y="1172" width="5" height="15" fill="rgb(254,186,1)"/><text x="49.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="916" width="5" height="15" fill="rgb(236,80,12)"/><text x="54.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="932" width="5" height="15" fill="rgb(252,94,34)"/><text x="54.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="948" width="5" height="15" fill="rgb(220,80,8)"/><text x="54.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="51" y="964" width="5" height="15" fill="rgb(245,2,36)"/><text x="54.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="980" width="5" height="15" fill="rgb(240,104,36)"/><text x="54.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.44%)</title><rect x="51" y="996" width="5" height="15" fill="rgb(215,35,12)"/><text x="54.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1012" width="5" height="15" fill="rgb(211,197,13)"/><text x="54.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1028" width="5" height="15" fill="rgb(254,54,41)"/><text x="54.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1044" width="5" height="15" fill="rgb(245,11,11)"/><text x="54.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1060" width="5" height="15" fill="rgb(240,28,18)"/><text x="54.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1076" width="5" height="15" fill="rgb(251,47,24)"/><text x="54.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="51" y="1092" width="5" height="15" fill="rgb(252,15,29)"/><text x="54.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1108" width="5" height="15" fill="rgb(224,146,16)"/><text x="54.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.44%)</title><rect x="51" y="1124" width="5" height="15" fill="rgb(244,30,22)"/><text x="54.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1140" width="5" height="15" fill="rgb(223,219,35)"/><text x="54.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1156" width="5" height="15" fill="rgb(217,26,18)"/><text x="54.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1172" width="5" height="15" fill="rgb(233,91,46)"/><text x="54.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="51" y="1188" width="5" height="15" fill="rgb(209,211,42)"/><text x="54.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1204" width="5" height="15" fill="rgb(218,6,47)"/><text x="54.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.44%)</title><rect x="51" y="1220" width="5" height="15" fill="rgb(210,171,52)"/><text x="54.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1236" width="5" height="15" fill="rgb(217,193,23)"/><text x="54.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1252" width="5" height="15" fill="rgb(212,177,15)"/><text x="54.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1268" width="5" height="15" fill="rgb(241,29,36)"/><text x="54.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="51" y="1284" width="5" height="15" fill="rgb(214,194,37)"/><text x="54.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1300" width="5" height="15" fill="rgb(224,161,26)"/><text x="54.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py) (1 samples, 0.44%)</title><rect x="51" y="1316" width="5" height="15" fill="rgb(217,159,37)"/><text x="54.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1332" width="5" height="15" fill="rgb(253,139,27)"/><text x="54.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1348" width="5" height="15" fill="rgb(250,147,11)"/><text x="54.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1364" width="5" height="15" fill="rgb(215,152,52)"/><text x="54.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="51" y="1380" width="5" height="15" fill="rgb(207,111,44)"/><text x="54.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1396" width="5" height="15" fill="rgb(235,139,27)"/><text x="54.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py) (1 samples, 0.44%)</title><rect x="51" y="1412" width="5" height="15" fill="rgb(232,208,49)"/><text x="54.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.42%)</title><rect x="10" y="196" width="52" height="15" fill="rgb(235,57,52)"/><text x="13.00" y="206.50">_call..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.42%)</title><rect x="10" y="212" width="52" height="15" fill="rgb(253,48,43)"/><text x="13.00" y="222.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.42%)</title><rect x="10" y="228" width="52" height="15" fill="rgb(220,46,10)"/><text x="13.00" y="238.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.42%)</title><rect x="10" y="244" width="52" height="15" fill="rgb(234,130,51)"/><text x="13.00" y="254.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 4.42%)</title><rect x="10" y="260" width="52" height="15" fill="rgb(209,163,19)"/><text x="13.00" y="270.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.42%)</title><rect x="10" y="276" width="52" height="15" fill="rgb(226,205,52)"/><text x="13.00" y="286.50">_call..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 1.33%)</title><rect x="46" y="292" width="16" height="15" fill="rgb(241,168,52)"/><text x="49.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="46" y="308" width="16" height="15" fill="rgb(242,163,49)"/><text x="49.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="46" y="324" width="16" height="15" fill="rgb(215,169,33)"/><text x="49.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="46" y="340" width="16" height="15" fill="rgb(216,214,8)"/><text x="49.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.33%)</title><rect x="46" y="356" width="16" height="15" fill="rgb(223,38,43)"/><text x="49.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="46" y="372" width="16" height="15" fill="rgb(210,111,28)"/><text x="49.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 1.33%)</title><rect x="46" y="388" width="16" height="15" fill="rgb(207,28,12)"/><text x="49.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="46" y="404" width="16" height="15" fill="rgb(209,100,27)"/><text x="49.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="46" y="420" width="16" height="15" fill="rgb(254,75,33)"/><text x="49.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="46" y="436" width="16" height="15" fill="rgb(211,101,44)"/><text x="49.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.33%)</title><rect x="46" y="452" width="16" height="15" fill="rgb(219,34,43)"/><text x="49.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="46" y="468" width="16" height="15" fill="rgb(222,95,14)"/><text x="49.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 1.33%)</title><rect x="46" y="484" width="16" height="15" fill="rgb(232,138,30)"/><text x="49.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="46" y="500" width="16" height="15" fill="rgb(246,68,7)"/><text x="49.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="46" y="516" width="16" height="15" fill="rgb(215,22,42)"/><text x="49.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="46" y="532" width="16" height="15" fill="rgb(223,103,19)"/><text x="49.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.33%)</title><rect x="46" y="548" width="16" height="15" fill="rgb(229,171,45)"/><text x="49.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="46" y="564" width="16" height="15" fill="rgb(236,163,26)"/><text x="49.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (3 samples, 1.33%)</title><rect x="46" y="580" width="16" height="15" fill="rgb(237,121,35)"/><text x="49.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="46" y="596" width="16" height="15" fill="rgb(229,95,12)"/><text x="49.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="46" y="612" width="16" height="15" fill="rgb(253,39,14)"/><text x="49.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="51" y="628" width="11" height="15" fill="rgb(239,174,8)"/><text x="54.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="51" y="644" width="11" height="15" fill="rgb(207,143,9)"/><text x="54.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="51" y="660" width="11" height="15" fill="rgb(224,195,27)"/><text x="54.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.88%)</title><rect x="51" y="676" width="11" height="15" fill="rgb(240,168,7)"/><text x="54.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="51" y="692" width="11" height="15" fill="rgb(254,85,24)"/><text x="54.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="51" y="708" width="11" height="15" fill="rgb(229,21,36)"/><text x="54.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="51" y="724" width="11" height="15" fill="rgb(249,90,37)"/><text x="54.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="51" y="740" width="11" height="15" fill="rgb(241,221,6)"/><text x="54.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="51" y="756" width="11" height="15" fill="rgb(228,39,44)"/><text x="54.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.88%)</title><rect x="51" y="772" width="11" height="15" fill="rgb(236,0,41)"/><text x="54.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="51" y="788" width="11" height="15" fill="rgb(248,210,31)"/><text x="54.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="51" y="804" width="11" height="15" fill="rgb(236,38,35)"/><text x="54.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="51" y="820" width="11" height="15" fill="rgb(228,114,28)"/><text x="54.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="51" y="836" width="11" height="15" fill="rgb(220,211,10)"/><text x="54.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="51" y="852" width="11" height="15" fill="rgb(230,223,22)"/><text x="54.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="51" y="868" width="11" height="15" fill="rgb(224,107,20)"/><text x="54.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="51" y="884" width="11" height="15" fill="rgb(233,16,43)"/><text x="54.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.88%)</title><rect x="51" y="900" width="11" height="15" fill="rgb(253,73,47)"/><text x="54.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="916" width="6" height="15" fill="rgb(237,51,16)"/><text x="59.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="932" width="6" height="15" fill="rgb(210,55,17)"/><text x="59.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="948" width="6" height="15" fill="rgb(229,210,2)"/><text x="59.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="964" width="6" height="15" fill="rgb(210,222,5)"/><text x="59.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="980" width="6" height="15" fill="rgb(254,213,16)"/><text x="59.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="56" y="996" width="6" height="15" fill="rgb(219,225,19)"/><text x="59.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="1012" width="6" height="15" fill="rgb(218,206,24)"/><text x="59.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.44%)</title><rect x="56" y="1028" width="6" height="15" fill="rgb(224,208,17)"/><text x="59.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.44%)</title><rect x="56" y="1044" width="6" height="15" fill="rgb(251,49,7)"/><text x="59.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.44%)</title><rect x="56" y="1060" width="6" height="15" fill="rgb(241,35,16)"/><text x="59.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="484" width="5" height="15" fill="rgb(233,125,27)"/><text x="65.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="500" width="5" height="15" fill="rgb(207,142,36)"/><text x="65.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="516" width="5" height="15" fill="rgb(229,191,25)"/><text x="65.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="532" width="5" height="15" fill="rgb(224,166,22)"/><text x="65.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="62" y="548" width="5" height="15" fill="rgb(206,133,31)"/><text x="65.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="564" width="5" height="15" fill="rgb(240,41,22)"/><text x="65.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.44%)</title><rect x="62" y="580" width="5" height="15" fill="rgb(248,209,1)"/><text x="65.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="596" width="5" height="15" fill="rgb(215,143,6)"/><text x="65.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="612" width="5" height="15" fill="rgb(227,50,8)"/><text x="65.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="628" width="5" height="15" fill="rgb(214,158,5)"/><text x="65.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="62" y="644" width="5" height="15" fill="rgb(226,6,0)"/><text x="65.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="660" width="5" height="15" fill="rgb(227,160,30)"/><text x="65.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.44%)</title><rect x="62" y="676" width="5" height="15" fill="rgb(239,159,11)"/><text x="65.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="692" width="5" height="15" fill="rgb(229,129,12)"/><text x="65.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="708" width="5" height="15" fill="rgb(249,228,6)"/><text x="65.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="724" width="5" height="15" fill="rgb(216,116,31)"/><text x="65.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="62" y="740" width="5" height="15" fill="rgb(220,125,28)"/><text x="65.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="756" width="5" height="15" fill="rgb(217,197,5)"/><text x="65.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.44%)</title><rect x="62" y="772" width="5" height="15" fill="rgb(217,136,4)"/><text x="65.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="788" width="5" height="15" fill="rgb(215,69,3)"/><text x="65.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="804" width="5" height="15" fill="rgb(223,2,19)"/><text x="65.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="820" width="5" height="15" fill="rgb(237,222,15)"/><text x="65.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="62" y="836" width="5" height="15" fill="rgb(218,25,43)"/><text x="65.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="852" width="5" height="15" fill="rgb(228,84,8)"/><text x="65.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.44%)</title><rect x="62" y="868" width="5" height="15" fill="rgb(241,201,10)"/><text x="65.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="884" width="5" height="15" fill="rgb(207,42,47)"/><text x="65.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="900" width="5" height="15" fill="rgb(205,88,36)"/><text x="65.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="916" width="5" height="15" fill="rgb(228,196,12)"/><text x="65.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="932" width="5" height="15" fill="rgb(223,94,29)"/><text x="65.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="948" width="5" height="15" fill="rgb(250,90,20)"/><text x="65.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="964" width="5" height="15" fill="rgb(229,35,36)"/><text x="65.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="62" y="980" width="5" height="15" fill="rgb(229,1,49)"/><text x="65.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="996" width="5" height="15" fill="rgb(207,200,28)"/><text x="65.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.44%)</title><rect x="62" y="1012" width="5" height="15" fill="rgb(215,111,7)"/><text x="65.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="1028" width="5" height="15" fill="rgb(219,138,17)"/><text x="65.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="1044" width="5" height="15" fill="rgb(245,7,33)"/><text x="65.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="1060" width="5" height="15" fill="rgb(234,212,27)"/><text x="65.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="62" y="1076" width="5" height="15" fill="rgb(232,91,12)"/><text x="65.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="1092" width="5" height="15" fill="rgb(227,55,8)"/><text x="65.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.44%)</title><rect x="62" y="1108" width="5" height="15" fill="rgb(248,192,23)"/><text x="65.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="1124" width="5" height="15" fill="rgb(248,212,51)"/><text x="65.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="1140" width="5" height="15" fill="rgb(220,129,30)"/><text x="65.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="1156" width="5" height="15" fill="rgb(244,106,47)"/><text x="65.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="62" y="1172" width="5" height="15" fill="rgb(245,53,4)"/><text x="65.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="1188" width="5" height="15" fill="rgb(209,103,1)"/><text x="65.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.44%)</title><rect x="62" y="1204" width="5" height="15" fill="rgb(205,203,46)"/><text x="65.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="1220" width="5" height="15" fill="rgb(254,122,44)"/><text x="65.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="1236" width="5" height="15" fill="rgb(209,87,37)"/><text x="65.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="1252" width="5" height="15" fill="rgb(238,137,0)"/><text x="65.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="62" y="1268" width="5" height="15" fill="rgb(209,228,11)"/><text x="65.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="1284" width="5" height="15" fill="rgb(251,198,24)"/><text x="65.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/gaussian_process/__init__.py) (1 samples, 0.44%)</title><rect x="62" y="1300" width="5" height="15" fill="rgb(242,178,16)"/><text x="65.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="1316" width="5" height="15" fill="rgb(225,176,24)"/><text x="65.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="1332" width="5" height="15" fill="rgb(207,53,25)"/><text x="65.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="1348" width="5" height="15" fill="rgb(216,195,36)"/><text x="65.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="62" y="1364" width="5" height="15" fill="rgb(210,225,30)"/><text x="65.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="1380" width="5" height="15" fill="rgb(219,215,5)"/><text x="65.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/gaussian_process/_gpr.py) (1 samples, 0.44%)</title><rect x="62" y="1396" width="5" height="15" fill="rgb(254,154,5)"/><text x="65.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="1412" width="5" height="15" fill="rgb(227,201,31)"/><text x="65.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="1428" width="5" height="15" fill="rgb(225,157,54)"/><text x="65.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="1444" width="5" height="15" fill="rgb(237,150,48)"/><text x="65.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="62" y="1460" width="5" height="15" fill="rgb(221,149,25)"/><text x="65.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="62" y="1476" width="5" height="15" fill="rgb(235,227,47)"/><text x="65.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/gaussian_process/kernels.py) (1 samples, 0.44%)</title><rect x="62" y="1492" width="5" height="15" fill="rgb(244,66,46)"/><text x="65.00" y="1502.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.44%)</title><rect x="62" y="1508" width="5" height="15" fill="rgb(230,43,0)"/><text x="65.00" y="1518.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py) (1 samples, 0.44%)</title><rect x="67" y="628" width="5" height="15" fill="rgb(230,227,38)"/><text x="70.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="67" y="644" width="5" height="15" fill="rgb(211,119,18)"/><text x="70.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="67" y="660" width="5" height="15" fill="rgb(247,207,1)"/><text x="70.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="67" y="676" width="5" height="15" fill="rgb(248,222,3)"/><text x="70.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="67" y="692" width="5" height="15" fill="rgb(231,22,32)"/><text x="70.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="67" y="708" width="5" height="15" fill="rgb(236,92,6)"/><text x="70.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="67" y="724" width="5" height="15" fill="rgb(245,134,14)"/><text x="70.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="67" y="740" width="5" height="15" fill="rgb(243,80,40)"/><text x="70.00" y="750.50"></text></g><g><title>&lt;module&gt; (onnx/numpy_helper.py) (1 samples, 0.44%)</title><rect x="67" y="756" width="5" height="15" fill="rgb(243,182,0)"/><text x="70.00" y="766.50"></text></g><g><title>system (platform.py) (1 samples, 0.44%)</title><rect x="67" y="772" width="5" height="15" fill="rgb(252,138,41)"/><text x="70.00" y="782.50"></text></g><g><title>uname (platform.py) (1 samples, 0.44%)</title><rect x="67" y="788" width="5" height="15" fill="rgb(227,9,24)"/><text x="70.00" y="798.50"></text></g><g><title>_syscmd_uname (platform.py) (1 samples, 0.44%)</title><rect x="67" y="804" width="5" height="15" fill="rgb(208,73,21)"/><text x="70.00" y="814.50"></text></g><g><title>popen (os.py) (1 samples, 0.44%)</title><rect x="67" y="820" width="5" height="15" fill="rgb(214,9,11)"/><text x="70.00" y="830.50"></text></g><g><title>__init__ (subprocess.py) (1 samples, 0.44%)</title><rect x="67" y="836" width="5" height="15" fill="rgb(239,6,9)"/><text x="70.00" y="846.50"></text></g><g><title>_execute_child (subprocess.py) (1 samples, 0.44%)</title><rect x="67" y="852" width="5" height="15" fill="rgb(244,169,41)"/><text x="70.00" y="862.50"></text></g><g><title>subprocess_fork_exec (_posixsubprocess.c) (1 samples, 0.44%)</title><rect x="67" y="868" width="5" height="15" fill="rgb(244,84,44)"/><text x="70.00" y="878.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.44%)</title><rect x="67" y="884" width="5" height="15" fill="rgb(209,111,48)"/><text x="70.00" y="894.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.44%)</title><rect x="72" y="724" width="5" height="15" fill="rgb(208,206,38)"/><text x="75.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="72" y="740" width="5" height="15" fill="rgb(223,188,15)"/><text x="75.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="72" y="756" width="5" height="15" fill="rgb(250,177,20)"/><text x="75.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="72" y="772" width="5" height="15" fill="rgb(206,3,3)"/><text x="75.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="72" y="788" width="5" height="15" fill="rgb(222,120,52)"/><text x="75.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="72" y="804" width="5" height="15" fill="rgb(216,78,21)"/><text x="75.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.44%)</title><rect x="72" y="820" width="5" height="15" fill="rgb(207,157,43)"/><text x="75.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="72" y="836" width="5" height="15" fill="rgb(243,134,47)"/><text x="75.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="72" y="852" width="5" height="15" fill="rgb(218,180,27)"/><text x="75.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="72" y="868" width="5" height="15" fill="rgb(244,59,50)"/><text x="75.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="72" y="884" width="5" height="15" fill="rgb(246,156,52)"/><text x="75.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="72" y="900" width="5" height="15" fill="rgb(215,138,50)"/><text x="75.00" y="910.50"></text></g><g><title>0x7f3effd6467b (pandas/_libs/tslibs/period.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="72" y="916" width="5" height="15" fill="rgb(207,110,53)"/><text x="75.00" y="926.50"></text></g><g><title>0x7f3effd68d4a (pandas/_libs/tslibs/period.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="72" y="932" width="5" height="15" fill="rgb(207,190,3)"/><text x="75.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="72" y="948" width="5" height="15" fill="rgb(244,168,3)"/><text x="75.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="72" y="964" width="5" height="15" fill="rgb(253,224,1)"/><text x="75.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="72" y="980" width="5" height="15" fill="rgb(212,75,48)"/><text x="75.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="72" y="996" width="5" height="15" fill="rgb(221,17,44)"/><text x="75.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="72" y="1012" width="5" height="15" fill="rgb(228,61,16)"/><text x="75.00" y="1022.50"></text></g><g><title>0x7f3eff6677d1 (pandas/_libs/tslibs/resolution.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="72" y="1028" width="5" height="15" fill="rgb(233,47,38)"/><text x="75.00" y="1038.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="72" y="1044" width="5" height="15" fill="rgb(240,93,49)"/><text x="75.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.44%)</title><rect x="77" y="1108" width="6" height="15" fill="rgb(237,111,29)"/><text x="80.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="77" y="1124" width="6" height="15" fill="rgb(244,47,5)"/><text x="80.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="77" y="1140" width="6" height="15" fill="rgb(237,28,5)"/><text x="80.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="77" y="1156" width="6" height="15" fill="rgb(253,144,9)"/><text x="80.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="77" y="1172" width="6" height="15" fill="rgb(230,205,13)"/><text x="80.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="77" y="1188" width="6" height="15" fill="rgb(239,64,43)"/><text x="80.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.44%)</title><rect x="77" y="1204" width="6" height="15" fill="rgb(247,74,3)"/><text x="80.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="77" y="1220" width="6" height="15" fill="rgb(232,77,47)"/><text x="80.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="77" y="1236" width="6" height="15" fill="rgb(249,50,41)"/><text x="80.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="77" y="1252" width="6" height="15" fill="rgb(208,38,27)"/><text x="80.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="77" y="1268" width="6" height="15" fill="rgb(237,138,31)"/><text x="80.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="77" y="1284" width="6" height="15" fill="rgb(254,102,11)"/><text x="80.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.44%)</title><rect x="77" y="1300" width="6" height="15" fill="rgb(227,50,0)"/><text x="80.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="77" y="1316" width="6" height="15" fill="rgb(252,216,17)"/><text x="80.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="77" y="1332" width="6" height="15" fill="rgb(225,125,11)"/><text x="80.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="77" y="1348" width="6" height="15" fill="rgb(208,59,22)"/><text x="80.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="77" y="1364" width="6" height="15" fill="rgb(237,71,7)"/><text x="80.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="77" y="1380" width="6" height="15" fill="rgb(224,25,45)"/><text x="80.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py) (1 samples, 0.44%)</title><rect x="77" y="1396" width="6" height="15" fill="rgb(215,6,10)"/><text x="80.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="77" y="1412" width="6" height="15" fill="rgb(224,116,20)"/><text x="80.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="77" y="1428" width="6" height="15" fill="rgb(235,52,0)"/><text x="80.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="77" y="1444" width="6" height="15" fill="rgb(219,223,15)"/><text x="80.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="77" y="1460" width="6" height="15" fill="rgb(222,114,29)"/><text x="80.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="77" y="1476" width="6" height="15" fill="rgb(217,171,6)"/><text x="80.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/multi.py) (1 samples, 0.44%)</title><rect x="77" y="1492" width="6" height="15" fill="rgb(244,28,3)"/><text x="80.00" y="1502.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="77" y="1508" width="6" height="15" fill="rgb(232,53,6)"/><text x="80.00" y="1518.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="77" y="1524" width="6" height="15" fill="rgb(217,32,40)"/><text x="80.00" y="1534.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 2.65%)</title><rect x="62" y="340" width="31" height="15" fill="rgb(252,95,6)"/><text x="65.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.65%)</title><rect x="62" y="356" width="31" height="15" fill="rgb(232,147,37)"/><text x="65.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.65%)</title><rect x="62" y="372" width="31" height="15" fill="rgb(220,153,14)"/><text x="65.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.65%)</title><rect x="62" y="388" width="31" height="15" fill="rgb(225,161,21)"/><text x="65.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.65%)</title><rect x="62" y="404" width="31" height="15" fill="rgb(249,127,4)"/><text x="65.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.65%)</title><rect x="62" y="420" width="31" height="15" fill="rgb(254,155,1)"/><text x="65.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 2.65%)</title><rect x="62" y="436" width="31" height="15" fill="rgb(228,46,5)"/><text x="65.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.65%)</title><rect x="62" y="452" width="31" height="15" fill="rgb(228,147,34)"/><text x="65.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.65%)</title><rect x="62" y="468" width="31" height="15" fill="rgb(236,90,33)"/><text x="65.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.21%)</title><rect x="67" y="484" width="26" height="15" fill="rgb(254,203,25)"/><text x="70.00" y="494.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.21%)</title><rect x="67" y="500" width="26" height="15" fill="rgb(211,169,2)"/><text x="70.00" y="510.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.21%)</title><rect x="67" y="516" width="26" height="15" fill="rgb(212,186,13)"/><text x="70.00" y="526.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (5 samples, 2.21%)</title><rect x="67" y="532" width="26" height="15" fill="rgb(239,218,39)"/><text x="70.00" y="542.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.21%)</title><rect x="67" y="548" width="26" height="15" fill="rgb(246,8,25)"/><text x="70.00" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.21%)</title><rect x="67" y="564" width="26" height="15" fill="rgb(213,126,26)"/><text x="70.00" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.21%)</title><rect x="67" y="580" width="26" height="15" fill="rgb(213,110,25)"/><text x="70.00" y="590.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.21%)</title><rect x="67" y="596" width="26" height="15" fill="rgb(211,170,15)"/><text x="70.00" y="606.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.21%)</title><rect x="67" y="612" width="26" height="15" fill="rgb(239,2,30)"/><text x="70.00" y="622.50">_..</text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 1.77%)</title><rect x="72" y="628" width="21" height="15" fill="rgb(245,222,12)"/><text x="75.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.77%)</title><rect x="72" y="644" width="21" height="15" fill="rgb(205,159,17)"/><text x="75.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.77%)</title><rect x="72" y="660" width="21" height="15" fill="rgb(221,104,49)"/><text x="75.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.77%)</title><rect x="72" y="676" width="21" height="15" fill="rgb(244,65,8)"/><text x="75.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.77%)</title><rect x="72" y="692" width="21" height="15" fill="rgb(208,10,24)"/><text x="75.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.77%)</title><rect x="72" y="708" width="21" height="15" fill="rgb(246,194,47)"/><text x="75.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 1.33%)</title><rect x="77" y="724" width="16" height="15" fill="rgb(209,136,8)"/><text x="80.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="77" y="740" width="16" height="15" fill="rgb(236,2,10)"/><text x="80.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="77" y="756" width="16" height="15" fill="rgb(241,136,35)"/><text x="80.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="77" y="772" width="16" height="15" fill="rgb(216,42,16)"/><text x="80.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.33%)</title><rect x="77" y="788" width="16" height="15" fill="rgb(207,150,39)"/><text x="80.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="77" y="804" width="16" height="15" fill="rgb(233,196,40)"/><text x="80.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 1.33%)</title><rect x="77" y="820" width="16" height="15" fill="rgb(226,43,29)"/><text x="80.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="77" y="836" width="16" height="15" fill="rgb(222,66,44)"/><text x="80.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="77" y="852" width="16" height="15" fill="rgb(243,180,47)"/><text x="80.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="77" y="868" width="16" height="15" fill="rgb(245,152,36)"/><text x="80.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.33%)</title><rect x="77" y="884" width="16" height="15" fill="rgb(217,48,34)"/><text x="80.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="77" y="900" width="16" height="15" fill="rgb(239,157,54)"/><text x="80.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 1.33%)</title><rect x="77" y="916" width="16" height="15" fill="rgb(250,224,23)"/><text x="80.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="77" y="932" width="16" height="15" fill="rgb(245,43,30)"/><text x="80.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="77" y="948" width="16" height="15" fill="rgb(233,218,9)"/><text x="80.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="77" y="964" width="16" height="15" fill="rgb(254,41,48)"/><text x="80.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.33%)</title><rect x="77" y="980" width="16" height="15" fill="rgb(237,134,29)"/><text x="80.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="77" y="996" width="16" height="15" fill="rgb(218,195,2)"/><text x="80.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 1.33%)</title><rect x="77" y="1012" width="16" height="15" fill="rgb(214,117,36)"/><text x="80.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="77" y="1028" width="16" height="15" fill="rgb(205,170,24)"/><text x="80.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="77" y="1044" width="16" height="15" fill="rgb(208,228,25)"/><text x="80.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="77" y="1060" width="16" height="15" fill="rgb(211,209,29)"/><text x="80.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.33%)</title><rect x="77" y="1076" width="16" height="15" fill="rgb(240,48,47)"/><text x="80.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.33%)</title><rect x="77" y="1092" width="16" height="15" fill="rgb(223,203,13)"/><text x="80.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.88%)</title><rect x="83" y="1108" width="10" height="15" fill="rgb(210,143,40)"/><text x="86.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1124" width="10" height="15" fill="rgb(242,106,15)"/><text x="86.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1140" width="10" height="15" fill="rgb(246,202,7)"/><text x="86.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1156" width="10" height="15" fill="rgb(237,13,0)"/><text x="86.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="83" y="1172" width="10" height="15" fill="rgb(211,11,34)"/><text x="86.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1188" width="10" height="15" fill="rgb(234,123,29)"/><text x="86.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.88%)</title><rect x="83" y="1204" width="10" height="15" fill="rgb(217,77,10)"/><text x="86.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1220" width="10" height="15" fill="rgb(249,80,22)"/><text x="86.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1236" width="10" height="15" fill="rgb(234,108,23)"/><text x="86.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1252" width="10" height="15" fill="rgb(241,101,54)"/><text x="86.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="83" y="1268" width="10" height="15" fill="rgb(231,23,7)"/><text x="86.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1284" width="10" height="15" fill="rgb(244,158,48)"/><text x="86.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.88%)</title><rect x="83" y="1300" width="10" height="15" fill="rgb(226,190,2)"/><text x="86.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1316" width="10" height="15" fill="rgb(221,78,12)"/><text x="86.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1332" width="10" height="15" fill="rgb(224,152,31)"/><text x="86.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1348" width="10" height="15" fill="rgb(216,188,50)"/><text x="86.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="83" y="1364" width="10" height="15" fill="rgb(230,19,21)"/><text x="86.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1380" width="10" height="15" fill="rgb(253,149,44)"/><text x="86.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.88%)</title><rect x="83" y="1396" width="10" height="15" fill="rgb(235,110,48)"/><text x="86.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1412" width="10" height="15" fill="rgb(248,124,38)"/><text x="86.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1428" width="10" height="15" fill="rgb(218,3,11)"/><text x="86.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1444" width="10" height="15" fill="rgb(222,100,20)"/><text x="86.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="83" y="1460" width="10" height="15" fill="rgb(248,164,7)"/><text x="86.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1476" width="10" height="15" fill="rgb(216,94,27)"/><text x="86.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.88%)</title><rect x="83" y="1492" width="10" height="15" fill="rgb(222,158,54)"/><text x="86.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1508" width="10" height="15" fill="rgb(222,62,23)"/><text x="86.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1524" width="10" height="15" fill="rgb(235,185,32)"/><text x="86.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1540" width="10" height="15" fill="rgb(237,65,30)"/><text x="86.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="83" y="1556" width="10" height="15" fill="rgb(213,186,33)"/><text x="86.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1572" width="10" height="15" fill="rgb(237,148,25)"/><text x="86.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (2 samples, 0.88%)</title><rect x="83" y="1588" width="10" height="15" fill="rgb(234,113,35)"/><text x="86.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1604" width="10" height="15" fill="rgb(239,104,49)"/><text x="86.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1620" width="10" height="15" fill="rgb(244,129,23)"/><text x="86.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1636" width="10" height="15" fill="rgb(207,21,27)"/><text x="86.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="83" y="1652" width="10" height="15" fill="rgb(215,146,39)"/><text x="86.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1668" width="10" height="15" fill="rgb(212,209,42)"/><text x="86.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (2 samples, 0.88%)</title><rect x="83" y="1684" width="10" height="15" fill="rgb(219,19,45)"/><text x="86.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1700" width="10" height="15" fill="rgb(254,25,2)"/><text x="86.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1716" width="10" height="15" fill="rgb(232,90,1)"/><text x="86.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1732" width="10" height="15" fill="rgb(213,169,29)"/><text x="86.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="83" y="1748" width="10" height="15" fill="rgb(239,50,38)"/><text x="86.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1764" width="10" height="15" fill="rgb(231,53,17)"/><text x="86.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (2 samples, 0.88%)</title><rect x="83" y="1780" width="10" height="15" fill="rgb(246,85,18)"/><text x="86.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1796" width="10" height="15" fill="rgb(246,41,22)"/><text x="86.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1812" width="10" height="15" fill="rgb(231,66,39)"/><text x="86.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1828" width="10" height="15" fill="rgb(227,192,2)"/><text x="86.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="83" y="1844" width="10" height="15" fill="rgb(221,91,5)"/><text x="86.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1860" width="10" height="15" fill="rgb(219,106,19)"/><text x="86.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (2 samples, 0.88%)</title><rect x="83" y="1876" width="10" height="15" fill="rgb(254,39,24)"/><text x="86.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1892" width="10" height="15" fill="rgb(251,220,2)"/><text x="86.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1908" width="10" height="15" fill="rgb(241,154,20)"/><text x="86.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1924" width="10" height="15" fill="rgb(224,8,19)"/><text x="86.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="83" y="1940" width="10" height="15" fill="rgb(247,104,28)"/><text x="86.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1956" width="10" height="15" fill="rgb(252,44,16)"/><text x="86.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/textpath.py) (2 samples, 0.88%)</title><rect x="83" y="1972" width="10" height="15" fill="rgb(234,65,17)"/><text x="86.00" y="1982.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="1988" width="10" height="15" fill="rgb(245,228,34)"/><text x="86.00" y="1998.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="2004" width="10" height="15" fill="rgb(234,121,15)"/><text x="86.00" y="2014.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="83" y="2020" width="10" height="15" fill="rgb(245,60,3)"/><text x="86.00" y="2030.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="83" y="2036" width="10" height="15" fill="rgb(246,101,43)"/><text x="86.00" y="2046.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="83" y="2052" width="10" height="15" fill="rgb(223,129,46)"/><text x="86.00" y="2062.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="83" y="2068" width="10" height="15" fill="rgb(205,80,44)"/><text x="86.00" y="2078.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 3.10%)</title><rect x="62" y="244" width="36" height="15" fill="rgb(252,100,43)"/><text x="65.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="62" y="260" width="36" height="15" fill="rgb(219,47,43)"/><text x="65.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="62" y="276" width="36" height="15" fill="rgb(223,186,31)"/><text x="65.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="62" y="292" width="36" height="15" fill="rgb(233,169,11)"/><text x="65.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 3.10%)</title><rect x="62" y="308" width="36" height="15" fill="rgb(221,109,35)"/><text x="65.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.10%)</title><rect x="62" y="324" width="36" height="15" fill="rgb(214,11,25)"/><text x="65.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.44%)</title><rect x="93" y="340" width="5" height="15" fill="rgb(242,83,18)"/><text x="96.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="93" y="356" width="5" height="15" fill="rgb(236,22,41)"/><text x="96.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="93" y="372" width="5" height="15" fill="rgb(209,37,20)"/><text x="96.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="93" y="388" width="5" height="15" fill="rgb(216,41,51)"/><text x="96.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="93" y="404" width="5" height="15" fill="rgb(242,213,21)"/><text x="96.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="93" y="420" width="5" height="15" fill="rgb(240,143,49)"/><text x="96.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="93" y="436" width="5" height="15" fill="rgb(252,70,12)"/><text x="96.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="93" y="452" width="5" height="15" fill="rgb(232,110,40)"/><text x="96.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="93" y="468" width="5" height="15" fill="rgb(240,95,17)"/><text x="96.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.44%)</title><rect x="93" y="484" width="5" height="15" fill="rgb(219,197,8)"/><text x="96.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="93" y="500" width="5" height="15" fill="rgb(211,145,5)"/><text x="96.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="93" y="516" width="5" height="15" fill="rgb(220,8,49)"/><text x="96.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="93" y="532" width="5" height="15" fill="rgb(232,89,2)"/><text x="96.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="93" y="548" width="5" height="15" fill="rgb(230,227,50)"/><text x="96.00" y="558.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="93" y="564" width="5" height="15" fill="rgb(233,210,14)"/><text x="96.00" y="574.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="93" y="580" width="5" height="15" fill="rgb(253,75,20)"/><text x="96.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 7.96%)</title><rect x="10" y="68" width="93" height="15" fill="rgb(253,85,50)"/><text x="13.00" y="78.50">_find_and_l..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 7.96%)</title><rect x="10" y="84" width="93" height="15" fill="rgb(245,26,1)"/><text x="13.00" y="94.50">_find_and_l..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 7.96%)</title><rect x="10" y="100" width="93" height="15" fill="rgb(223,147,37)"/><text x="13.00" y="110.50">_load_unloc..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 7.96%)</title><rect x="10" y="116" width="93" height="15" fill="rgb(237,103,28)"/><text x="13.00" y="126.50">exec_module..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 7.96%)</title><rect x="10" y="132" width="93" height="15" fill="rgb(207,166,3)"/><text x="13.00" y="142.50">_call_with_..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py) (18 samples, 7.96%)</title><rect x="10" y="148" width="93" height="15" fill="rgb(240,72,34)"/><text x="13.00" y="158.50">&lt;module&gt; (p..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 7.96%)</title><rect x="10" y="164" width="93" height="15" fill="rgb(206,53,27)"/><text x="13.00" y="174.50">_find_and_l..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 7.96%)</title><rect x="10" y="180" width="93" height="15" fill="rgb(239,47,24)"/><text x="13.00" y="190.50">_find_and_l..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.54%)</title><rect x="62" y="196" width="41" height="15" fill="rgb(228,214,33)"/><text x="65.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.54%)</title><rect x="62" y="212" width="41" height="15" fill="rgb(226,185,12)"/><text x="65.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.54%)</title><rect x="62" y="228" width="41" height="15" fill="rgb(249,147,36)"/><text x="65.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py) (1 samples, 0.44%)</title><rect x="98" y="244" width="5" height="15" fill="rgb(213,113,23)"/><text x="101.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="260" width="5" height="15" fill="rgb(226,147,54)"/><text x="101.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="276" width="5" height="15" fill="rgb(227,152,20)"/><text x="101.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="292" width="5" height="15" fill="rgb(232,208,33)"/><text x="101.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="98" y="308" width="5" height="15" fill="rgb(214,86,31)"/><text x="101.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="324" width="5" height="15" fill="rgb(205,228,53)"/><text x="101.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py) (1 samples, 0.44%)</title><rect x="98" y="340" width="5" height="15" fill="rgb(239,162,26)"/><text x="101.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="356" width="5" height="15" fill="rgb(239,43,35)"/><text x="101.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="372" width="5" height="15" fill="rgb(205,104,50)"/><text x="101.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="388" width="5" height="15" fill="rgb(247,134,21)"/><text x="101.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="98" y="404" width="5" height="15" fill="rgb(245,196,0)"/><text x="101.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="420" width="5" height="15" fill="rgb(251,198,18)"/><text x="101.00" y="430.50"></text></g><g><title>0x7f3f06c9a373 (?) (1 samples, 0.44%)</title><rect x="98" y="436" width="5" height="15" fill="rgb(217,200,2)"/><text x="101.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="452" width="5" height="15" fill="rgb(253,84,9)"/><text x="101.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="468" width="5" height="15" fill="rgb(230,14,39)"/><text x="101.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="484" width="5" height="15" fill="rgb(222,126,12)"/><text x="101.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="98" y="500" width="5" height="15" fill="rgb(223,41,17)"/><text x="101.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="516" width="5" height="15" fill="rgb(247,171,34)"/><text x="101.00" y="526.50"></text></g><g><title>0x7f3f06a5deea (?) (1 samples, 0.44%)</title><rect x="98" y="532" width="5" height="15" fill="rgb(216,122,6)"/><text x="101.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="548" width="5" height="15" fill="rgb(232,167,12)"/><text x="101.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="564" width="5" height="15" fill="rgb(231,227,1)"/><text x="101.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="580" width="5" height="15" fill="rgb(250,178,41)"/><text x="101.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="98" y="596" width="5" height="15" fill="rgb(254,181,14)"/><text x="101.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="612" width="5" height="15" fill="rgb(252,103,9)"/><text x="101.00" y="622.50"></text></g><g><title>0x7f3f067f6887 (?) (1 samples, 0.44%)</title><rect x="98" y="628" width="5" height="15" fill="rgb(243,137,28)"/><text x="101.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="644" width="5" height="15" fill="rgb(235,100,16)"/><text x="101.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="660" width="5" height="15" fill="rgb(240,132,2)"/><text x="101.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="676" width="5" height="15" fill="rgb(234,106,23)"/><text x="101.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="692" width="5" height="15" fill="rgb(215,181,23)"/><text x="101.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="708" width="5" height="15" fill="rgb(229,140,1)"/><text x="101.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="724" width="5" height="15" fill="rgb(214,159,14)"/><text x="101.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="98" y="740" width="5" height="15" fill="rgb(229,167,19)"/><text x="101.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="756" width="5" height="15" fill="rgb(241,57,7)"/><text x="101.00" y="766.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.44%)</title><rect x="98" y="772" width="5" height="15" fill="rgb(212,225,7)"/><text x="101.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="788" width="5" height="15" fill="rgb(246,3,20)"/><text x="101.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="804" width="5" height="15" fill="rgb(240,60,37)"/><text x="101.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="820" width="5" height="15" fill="rgb(207,215,34)"/><text x="101.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="98" y="836" width="5" height="15" fill="rgb(224,131,53)"/><text x="101.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="852" width="5" height="15" fill="rgb(241,59,35)"/><text x="101.00" y="862.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_graph.py) (1 samples, 0.44%)</title><rect x="98" y="868" width="5" height="15" fill="rgb(253,33,42)"/><text x="101.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="884" width="5" height="15" fill="rgb(206,161,16)"/><text x="101.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="900" width="5" height="15" fill="rgb(211,57,50)"/><text x="101.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="916" width="5" height="15" fill="rgb(224,164,46)"/><text x="101.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="98" y="932" width="5" height="15" fill="rgb(214,61,31)"/><text x="101.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="948" width="5" height="15" fill="rgb(225,143,50)"/><text x="101.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_base.py) (1 samples, 0.44%)</title><rect x="98" y="964" width="5" height="15" fill="rgb(225,227,14)"/><text x="101.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="980" width="5" height="15" fill="rgb(214,176,39)"/><text x="101.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="996" width="5" height="15" fill="rgb(239,205,2)"/><text x="101.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="1012" width="5" height="15" fill="rgb(237,200,25)"/><text x="101.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="98" y="1028" width="5" height="15" fill="rgb(248,154,36)"/><text x="101.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="1044" width="5" height="15" fill="rgb(236,4,51)"/><text x="101.00" y="1054.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py) (1 samples, 0.44%)</title><rect x="98" y="1060" width="5" height="15" fill="rgb(230,44,21)"/><text x="101.00" y="1070.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="1076" width="5" height="15" fill="rgb(207,48,19)"/><text x="101.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="1092" width="5" height="15" fill="rgb(231,83,35)"/><text x="101.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="1108" width="5" height="15" fill="rgb(238,59,8)"/><text x="101.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="1124" width="5" height="15" fill="rgb(217,156,32)"/><text x="101.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="1140" width="5" height="15" fill="rgb(237,1,32)"/><text x="101.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="98" y="1156" width="5" height="15" fill="rgb(227,95,32)"/><text x="101.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="1172" width="5" height="15" fill="rgb(219,34,2)"/><text x="101.00" y="1182.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/cluster/__init__.py) (1 samples, 0.44%)</title><rect x="98" y="1188" width="5" height="15" fill="rgb(244,106,13)"/><text x="101.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="1204" width="5" height="15" fill="rgb(206,212,33)"/><text x="101.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="1220" width="5" height="15" fill="rgb(213,91,12)"/><text x="101.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="1236" width="5" height="15" fill="rgb(239,205,27)"/><text x="101.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="98" y="1252" width="5" height="15" fill="rgb(222,165,38)"/><text x="101.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="1268" width="5" height="15" fill="rgb(251,148,49)"/><text x="101.00" y="1278.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/cluster/_unsupervised.py) (1 samples, 0.44%)</title><rect x="98" y="1284" width="5" height="15" fill="rgb(238,155,49)"/><text x="101.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="1300" width="5" height="15" fill="rgb(227,74,27)"/><text x="101.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="1316" width="5" height="15" fill="rgb(220,17,14)"/><text x="101.00" y="1326.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="1332" width="5" height="15" fill="rgb(222,100,6)"/><text x="101.00" y="1342.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="98" y="1348" width="5" height="15" fill="rgb(231,135,41)"/><text x="101.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="1364" width="5" height="15" fill="rgb(213,183,34)"/><text x="101.00" y="1374.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/pairwise.py) (1 samples, 0.44%)</title><rect x="98" y="1380" width="5" height="15" fill="rgb(240,119,6)"/><text x="101.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="1396" width="5" height="15" fill="rgb(208,205,34)"/><text x="101.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="1412" width="5" height="15" fill="rgb(231,131,1)"/><text x="101.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="1428" width="5" height="15" fill="rgb(242,112,11)"/><text x="101.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="98" y="1444" width="5" height="15" fill="rgb(251,122,20)"/><text x="101.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="98" y="1460" width="5" height="15" fill="rgb(207,193,4)"/><text x="101.00" y="1470.50"></text></g><g><title>0x7f3f0527e42f (?) (1 samples, 0.44%)</title><rect x="98" y="1476" width="5" height="15" fill="rgb(246,115,3)"/><text x="101.00" y="1486.50"></text></g><g><title>0x7f3f0528109f (?) (1 samples, 0.44%)</title><rect x="98" y="1492" width="5" height="15" fill="rgb(212,86,35)"/><text x="101.00" y="1502.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.88%)</title><rect x="140" y="180" width="10" height="15" fill="rgb(250,64,11)"/><text x="143.00" y="190.50"></text></g><g><title>0x7f3eec269ff9 (?) (1 samples, 0.44%)</title><rect x="187" y="228" width="5" height="15" fill="rgb(248,84,2)"/><text x="190.00" y="238.50"></text></g><g><title>0x7f3eec263968 (?) (1 samples, 0.44%)</title><rect x="187" y="244" width="5" height="15" fill="rgb(215,191,28)"/><text x="190.00" y="254.50"></text></g><g><title>0x7f3eec24f47b (?) (1 samples, 0.44%)</title><rect x="187" y="260" width="5" height="15" fill="rgb(214,63,42)"/><text x="190.00" y="270.50"></text></g><g><title>0x7f3eec276b9a (?) (1 samples, 0.44%)</title><rect x="187" y="276" width="5" height="15" fill="rgb(227,143,39)"/><text x="190.00" y="286.50"></text></g><g><title>0x7f3eec27c1a9 (?) (1 samples, 0.44%)</title><rect x="187" y="292" width="5" height="15" fill="rgb(215,172,43)"/><text x="190.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (3 samples, 1.33%)</title><rect x="182" y="212" width="15" height="15" fill="rgb(222,162,14)"/><text x="185.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="192" y="228" width="5" height="15" fill="rgb(239,84,2)"/><text x="195.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="192" y="244" width="5" height="15" fill="rgb(246,82,8)"/><text x="195.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="192" y="260" width="5" height="15" fill="rgb(236,192,32)"/><text x="195.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="197" y="260" width="6" height="15" fill="rgb(230,32,36)"/><text x="200.00" y="270.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="197" y="276" width="6" height="15" fill="rgb(211,185,24)"/><text x="200.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.44%)</title><rect x="197" y="292" width="6" height="15" fill="rgb(205,30,6)"/><text x="200.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.44%)</title><rect x="203" y="308" width="5" height="15" fill="rgb(211,6,48)"/><text x="206.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.88%)</title><rect x="203" y="292" width="10" height="15" fill="rgb(230,147,44)"/><text x="206.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="208" y="308" width="5" height="15" fill="rgb(244,120,12)"/><text x="211.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.44%)</title><rect x="208" y="324" width="5" height="15" fill="rgb(237,116,31)"/><text x="211.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.44%)</title><rect x="208" y="340" width="5" height="15" fill="rgb(209,27,0)"/><text x="211.00" y="350.50"></text></g><g><title>0x7f3f2c1acc41 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="208" y="356" width="5" height="15" fill="rgb(211,193,38)"/><text x="211.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.88%)</title><rect x="213" y="292" width="11" height="15" fill="rgb(222,229,0)"/><text x="216.00" y="302.50"></text></g><g><title>0x7f3f2c289166 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="218" y="308" width="6" height="15" fill="rgb(236,201,24)"/><text x="221.00" y="318.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="229" y="356" width="5" height="15" fill="rgb(215,48,13)"/><text x="232.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="229" y="372" width="5" height="15" fill="rgb(253,220,22)"/><text x="232.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="229" y="388" width="5" height="15" fill="rgb(244,103,11)"/><text x="232.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="234" y="372" width="5" height="15" fill="rgb(213,209,48)"/><text x="237.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="234" y="388" width="5" height="15" fill="rgb(250,5,28)"/><text x="237.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.88%)</title><rect x="234" y="356" width="10" height="15" fill="rgb(254,215,10)"/><text x="237.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.44%)</title><rect x="239" y="372" width="5" height="15" fill="rgb(213,117,40)"/><text x="242.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.44%)</title><rect x="239" y="388" width="5" height="15" fill="rgb(209,88,46)"/><text x="242.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.77%)</title><rect x="229" y="340" width="21" height="15" fill="rgb(230,106,4)"/><text x="232.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetInitializedTensors (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="244" y="356" width="6" height="15" fill="rgb(234,189,33)"/><text x="247.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="250" y="340" width="5" height="15" fill="rgb(230,85,41)"/><text x="253.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::Profiler (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="255" y="340" width="5" height="15" fill="rgb(236,41,50)"/><text x="258.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="260" y="356" width="5" height="15" fill="rgb(224,52,36)"/><text x="263.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="260" y="372" width="5" height="15" fill="rgb(253,194,39)"/><text x="263.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="260" y="388" width="5" height="15" fill="rgb(240,50,15)"/><text x="263.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="260" y="404" width="5" height="15" fill="rgb(249,146,13)"/><text x="263.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="260" y="420" width="5" height="15" fill="rgb(227,199,27)"/><text x="263.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="260" y="436" width="5" height="15" fill="rgb(248,218,43)"/><text x="263.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="260" y="452" width="5" height="15" fill="rgb(252,221,45)"/><text x="263.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="260" y="468" width="5" height="15" fill="rgb(234,227,16)"/><text x="263.00" y="478.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="260" y="484" width="5" height="15" fill="rgb(231,113,7)"/><text x="263.00" y="494.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 3.54%)</title><rect x="229" y="308" width="42" height="15" fill="rgb(209,48,29)"/><text x="232.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 3.54%)</title><rect x="229" y="324" width="42" height="15" fill="rgb(254,180,10)"/><text x="232.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.88%)</title><rect x="260" y="340" width="11" height="15" fill="rgb(241,124,34)"/><text x="263.00" y="350.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="265" y="356" width="6" height="15" fill="rgb(225,221,9)"/><text x="268.00" y="366.50"></text></g><g><title>0x7f3f2c289130 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="271" y="356" width="5" height="15" fill="rgb(229,10,11)"/><text x="274.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 6.64%)</title><rect x="203" y="260" width="78" height="15" fill="rgb(246,174,51)"/><text x="206.00" y="270.50">onnxrunti..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 6.64%)</title><rect x="203" y="276" width="78" height="15" fill="rgb(243,66,18)"/><text x="206.00" y="286.50">onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 4.87%)</title><rect x="224" y="292" width="57" height="15" fill="rgb(225,161,0)"/><text x="227.00" y="302.50">onnxru..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.88%)</title><rect x="271" y="308" width="10" height="15" fill="rgb(250,182,26)"/><text x="274.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.88%)</title><rect x="271" y="324" width="10" height="15" fill="rgb(215,146,33)"/><text x="274.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (2 samples, 0.88%)</title><rect x="271" y="340" width="10" height="15" fill="rgb(244,190,19)"/><text x="274.00" y="350.50"></text></g><g><title>0x7f3f2c28a066 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="276" y="356" width="5" height="15" fill="rgb(242,101,3)"/><text x="279.00" y="366.50"></text></g><g><title>0x7f3f2c1ab97c (libc-2.29.so) (1 samples, 0.44%)</title><rect x="286" y="292" width="5" height="15" fill="rgb(247,33,33)"/><text x="289.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.44%)</title><rect x="291" y="292" width="6" height="15" fill="rgb(245,12,27)"/><text x="294.00" y="302.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 8.85%)</title><rect x="197" y="244" width="105" height="15" fill="rgb(252,96,30)"/><text x="200.00" y="254.50">onnxruntime:..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.77%)</title><rect x="281" y="260" width="21" height="15" fill="rgb(205,108,13)"/><text x="284.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.33%)</title><rect x="286" y="276" width="16" height="15" fill="rgb(221,131,32)"/><text x="289.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="297" y="292" width="5" height="15" fill="rgb(217,110,46)"/><text x="300.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="297" y="308" width="5" height="15" fill="rgb(251,174,19)"/><text x="300.00" y="318.50"></text></g><g><title>onnxruntime::PrimitiveDataTypeBase::AsPrimitiveDataType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="297" y="324" width="5" height="15" fill="rgb(250,228,26)"/><text x="300.00" y="334.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="302" y="244" width="5" height="15" fill="rgb(211,81,27)"/><text x="305.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (40 samples, 17.70%)</title><rect x="103" y="132" width="209" height="15" fill="rgb(222,157,0)"/><text x="106.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (38 samples, 16.81%)</title><rect x="114" y="148" width="198" height="15" fill="rgb(248,12,46)"/><text x="117.00" y="158.50">run (mlprodict/onnxrt/onn..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (34 samples, 15.04%)</title><rect x="135" y="164" width="177" height="15" fill="rgb(222,164,25)"/><text x="138.00" y="174.50">_run_whole_runtime (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (31 samples, 13.72%)</title><rect x="150" y="180" width="162" height="15" fill="rgb(222,180,23)"/><text x="153.00" y="190.50">run (mlprodict/onnxr..</text></g><g><title>run (onnxruntime/capi/session.py) (31 samples, 13.72%)</title><rect x="150" y="196" width="162" height="15" fill="rgb(244,57,51)"/><text x="153.00" y="206.50">run (onnxruntime/cap..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 9.73%)</title><rect x="197" y="212" width="115" height="15" fill="rgb(250,46,54)"/><text x="200.00" y="222.50">pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 9.73%)</title><rect x="197" y="228" width="115" height="15" fill="rgb(230,38,1)"/><text x="200.00" y="238.50">void pybind11:..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="307" y="244" width="5" height="15" fill="rgb(206,153,26)"/><text x="310.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="307" y="260" width="5" height="15" fill="rgb(239,90,15)"/><text x="310.00" y="270.50"></text></g><g><title>std::type_info::hash_code (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="307" y="276" width="5" height="15" fill="rgb(209,180,27)"/><text x="310.00" y="286.50"></text></g><g><title>0x7f3f2c1c1e82 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="307" y="292" width="5" height="15" fill="rgb(244,195,26)"/><text x="310.00" y="302.50"></text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py) (42 samples, 18.58%)</title><rect x="103" y="68" width="220" height="15" fill="rgb(228,50,32)"/><text x="106.00" y="78.50">profile_ort (bench_DecisionTr..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py) (42 samples, 18.58%)</title><rect x="103" y="84" width="220" height="15" fill="rgb(205,12,31)"/><text x="106.00" y="94.50">setup_profile (bench_Decision..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py) (42 samples, 18.58%)</title><rect x="103" y="100" width="220" height="15" fill="rgb(210,133,38)"/><text x="106.00" y="110.50">profile (bench_DecisionTreeRe..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (42 samples, 18.58%)</title><rect x="103" y="116" width="220" height="15" fill="rgb(219,77,14)"/><text x="106.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>unicode_concatenate (python3.7) (2 samples, 0.88%)</title><rect x="312" y="132" width="11" height="15" fill="rgb(207,156,11)"/><text x="315.00" y="142.50"></text></g><g><title>0x7f3eecc8454f (?) (1 samples, 0.44%)</title><rect x="328" y="244" width="5" height="15" fill="rgb(221,43,9)"/><text x="331.00" y="254.50"></text></g><g><title>0x7f3eecc8a65e (?) (1 samples, 0.44%)</title><rect x="328" y="260" width="5" height="15" fill="rgb(211,142,7)"/><text x="331.00" y="270.50"></text></g><g><title>0x7f3eecc8a50f (?) (1 samples, 0.44%)</title><rect x="328" y="276" width="5" height="15" fill="rgb(208,206,25)"/><text x="331.00" y="286.50"></text></g><g><title>0x7f3eecc90d6c (?) (1 samples, 0.44%)</title><rect x="328" y="292" width="5" height="15" fill="rgb(241,163,4)"/><text x="331.00" y="302.50"></text></g><g><title>0x7f3ef61b1ab9 (?) (1 samples, 0.44%)</title><rect x="328" y="308" width="5" height="15" fill="rgb(216,25,16)"/><text x="331.00" y="318.50"></text></g><g><title>0x7f3ef61b2ea9 (?) (1 samples, 0.44%)</title><rect x="328" y="324" width="5" height="15" fill="rgb(245,16,2)"/><text x="331.00" y="334.50"></text></g><g><title>0x7f3ef61b2ea0 (libgomp.so.1.0.0) (2 samples, 0.88%)</title><rect x="333" y="484" width="11" height="15" fill="rgb(218,48,19)"/><text x="336.00" y="494.50"></text></g><g><title>0x7f3ef61b2ea9 (libgomp.so.1.0.0) (10 samples, 4.42%)</title><rect x="344" y="484" width="52" height="15" fill="rgb(248,143,11)"/><text x="347.00" y="494.50">0x7f3..</text></g><g><title>0x7f3ef61b2eab (libgomp.so.1.0.0) (8 samples, 3.54%)</title><rect x="396" y="484" width="42" height="15" fill="rgb(229,145,44)"/><text x="399.00" y="494.50">0x7..</text></g><g><title>0x7f3ef61b1ab9 (libgomp.so.1.0.0) (31 samples, 13.72%)</title><rect x="333" y="468" width="162" height="15" fill="rgb(239,95,43)"/><text x="336.00" y="478.50">0x7f3ef61b1ab9 (libg..</text></g><g><title>0x7f3ef61b2ead (libgomp.so.1.0.0) (11 samples, 4.87%)</title><rect x="438" y="484" width="57" height="15" fill="rgb(210,10,50)"/><text x="441.00" y="494.50">0x7f3e..</text></g><g><title>0x7f3ef61b2cf0 (libgomp.so.1.0.0) (2 samples, 0.88%)</title><rect x="495" y="500" width="11" height="15" fill="rgb(239,225,50)"/><text x="498.00" y="510.50"></text></g><g><title>0x7f3ef61b2cf9 (libgomp.so.1.0.0) (1 samples, 0.44%)</title><rect x="506" y="500" width="5" height="15" fill="rgb(226,37,14)"/><text x="509.00" y="510.50"></text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py) (38 samples, 16.81%)</title><rect x="323" y="68" width="198" height="15" fill="rgb(244,84,31)"/><text x="326.00" y="78.50">profile_pyrt (bench_Decis..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py) (38 samples, 16.81%)</title><rect x="323" y="84" width="198" height="15" fill="rgb(222,137,2)"/><text x="326.00" y="94.50">setup_profile (bench_Deci..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py) (38 samples, 16.81%)</title><rect x="323" y="100" width="198" height="15" fill="rgb(244,149,13)"/><text x="326.00" y="110.50">profile (bench_DecisionTr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (38 samples, 16.81%)</title><rect x="323" y="116" width="198" height="15" fill="rgb(218,31,3)"/><text x="326.00" y="126.50">time_predict (mlprodict/a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (38 samples, 16.81%)</title><rect x="323" y="132" width="198" height="15" fill="rgb(245,108,50)"/><text x="326.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_b..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (38 samples, 16.81%)</title><rect x="323" y="148" width="198" height="15" fill="rgb(250,139,45)"/><text x="326.00" y="158.50">run (mlprodict/onnxrt/onn..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (38 samples, 16.81%)</title><rect x="323" y="164" width="198" height="15" fill="rgb(213,109,17)"/><text x="326.00" y="174.50">_run_sequence_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (38 samples, 16.81%)</title><rect x="323" y="180" width="198" height="15" fill="rgb(225,197,29)"/><text x="326.00" y="190.50">run (mlprodict/onnxrt/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (38 samples, 16.81%)</title><rect x="323" y="196" width="198" height="15" fill="rgb(229,211,27)"/><text x="326.00" y="206.50">run (mlprodict/onnxrt/ops..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (38 samples, 16.81%)</title><rect x="323" y="212" width="198" height="15" fill="rgb(245,223,38)"/><text x="326.00" y="222.50">run (mlprodict/onnxrt/ops..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (38 samples, 16.81%)</title><rect x="323" y="228" width="198" height="15" fill="rgb(249,132,31)"/><text x="326.00" y="238.50">_run (mlprodict/onnxrt/op..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (36 samples, 15.93%)</title><rect x="333" y="244" width="188" height="15" fill="rgb(234,228,44)"/><text x="336.00" y="254.50">pybind11::cpp_function::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (36 samples, 15.93%)</title><rect x="333" y="260" width="188" height="15" fill="rgb(243,166,36)"/><text x="336.00" y="270.50">void pybind11::cpp_funct..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (36 samples, 15.93%)</title><rect x="333" y="276" width="188" height="15" fill="rgb(225,209,32)"/><text x="336.00" y="286.50">void pybind11::cpp_funct..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (36 samples, 15.93%)</title><rect x="333" y="292" width="188" height="15" fill="rgb(239,215,7)"/><text x="336.00" y="302.50">pybind11::detail::argume..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (36 samples, 15.93%)</title><rect x="333" y="308" width="188" height="15" fill="rgb(250,140,9)"/><text x="336.00" y="318.50">pybind11::detail::argume..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (36 samples, 15.93%)</title><rect x="333" y="324" width="188" height="15" fill="rgb(218,187,37)"/><text x="336.00" y="334.50">pybind11::cpp_function::..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (36 samples, 15.93%)</title><rect x="333" y="340" width="188" height="15" fill="rgb(254,38,52)"/><text x="336.00" y="350.50">pybind11::array_t&lt;float,..</text></g><g><title>pybind11::array::~array (numpy.h) (36 samples, 15.93%)</title><rect x="333" y="356" width="188" height="15" fill="rgb(219,179,19)"/><text x="336.00" y="366.50">pybind11::array::~array ..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (36 samples, 15.93%)</title><rect x="333" y="372" width="188" height="15" fill="rgb(206,99,47)"/><text x="336.00" y="382.50">pybind11::buffer::~buffe..</text></g><g><title>pybind11::object::~object (pytypes.h) (36 samples, 15.93%)</title><rect x="333" y="388" width="188" height="15" fill="rgb(240,213,12)"/><text x="336.00" y="398.50">pybind11::object::~objec..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (36 samples, 15.93%)</title><rect x="333" y="404" width="188" height="15" fill="rgb(211,96,24)"/><text x="336.00" y="414.50">pybind11::handle::dec_re..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (36 samples, 15.93%)</title><rect x="333" y="420" width="188" height="15" fill="rgb(208,60,52)"/><text x="336.00" y="430.50">RuntimeTreeEnsembleRegre..</text></g><g><title>pybind11::array::size (numpy.h) (36 samples, 15.93%)</title><rect x="333" y="436" width="188" height="15" fill="rgb(212,75,3)"/><text x="336.00" y="446.50">pybind11::array::size (n..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (36 samples, 15.93%)</title><rect x="333" y="452" width="188" height="15" fill="rgb(234,43,31)"/><text x="336.00" y="462.50">std::accumulate&lt;long con..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (5 samples, 2.21%)</title><rect x="495" y="468" width="26" height="15" fill="rgb(231,175,43)"/><text x="498.00" y="478.50">G..</text></g><g><title>0x7f3ef61b0daa (libgomp.so.1.0.0) (5 samples, 2.21%)</title><rect x="495" y="484" width="26" height="15" fill="rgb(216,17,17)"/><text x="498.00" y="494.50">0..</text></g><g><title>0x7f3ef61b2cfb (libgomp.so.1.0.0) (2 samples, 0.88%)</title><rect x="511" y="500" width="10" height="15" fill="rgb(234,222,33)"/><text x="514.00" y="510.50"></text></g><g><title>0x7f3f06816f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="542" y="180" width="5" height="15" fill="rgb(206,30,33)"/><text x="545.00" y="190.50"></text></g><g><title>0x7f3f06806d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="542" y="196" width="5" height="15" fill="rgb(214,175,26)"/><text x="545.00" y="206.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.44%)</title><rect x="542" y="212" width="5" height="15" fill="rgb(223,184,32)"/><text x="545.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.44%)</title><rect x="542" y="228" width="5" height="15" fill="rgb(223,7,20)"/><text x="545.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.44%)</title><rect x="542" y="244" width="5" height="15" fill="rgb(241,142,6)"/><text x="545.00" y="254.50"></text></g><g><title>0x7f3f06825225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.88%)</title><rect x="547" y="212" width="11" height="15" fill="rgb(220,68,36)"/><text x="550.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (2 samples, 0.88%)</title><rect x="547" y="228" width="11" height="15" fill="rgb(212,73,21)"/><text x="550.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.44%)</title><rect x="553" y="244" width="5" height="15" fill="rgb(250,198,24)"/><text x="556.00" y="254.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.44%)</title><rect x="573" y="308" width="6" height="15" fill="rgb(238,44,4)"/><text x="576.00" y="318.50"></text></g><g><title>0x7f3f2c1ba6a2 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="573" y="324" width="6" height="15" fill="rgb(238,36,12)"/><text x="576.00" y="334.50"></text></g><g><title>0x7f3f06809666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.65%)</title><rect x="558" y="244" width="31" height="15" fill="rgb(224,35,48)"/><text x="561.00" y="254.50">0x..</text></g><g><title>0x7f3f067ff2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.65%)</title><rect x="558" y="260" width="31" height="15" fill="rgb(219,191,23)"/><text x="561.00" y="270.50">0x..</text></g><g><title>array_getbuffer (buffer.c) (6 samples, 2.65%)</title><rect x="558" y="276" width="31" height="15" fill="rgb(240,153,33)"/><text x="561.00" y="286.50">ar..</text></g><g><title>_buffer_get_info (buffer.c) (6 samples, 2.65%)</title><rect x="558" y="292" width="31" height="15" fill="rgb(212,103,45)"/><text x="561.00" y="302.50">_b..</text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.88%)</title><rect x="579" y="308" width="10" height="15" fill="rgb(237,100,24)"/><text x="582.00" y="318.50"></text></g><g><title>_buffer_format_string (buffer.c) (2 samples, 0.88%)</title><rect x="579" y="324" width="10" height="15" fill="rgb(237,38,6)"/><text x="582.00" y="334.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.44%)</title><rect x="584" y="340" width="5" height="15" fill="rgb(216,34,3)"/><text x="587.00" y="350.50"></text></g><g><title>0x7f3f06809d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 3.10%)</title><rect x="558" y="228" width="36" height="15" fill="rgb(240,107,1)"/><text x="561.00" y="238.50">0x7..</text></g><g><title>0x7f3f068096fa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="589" y="244" width="5" height="15" fill="rgb(222,177,27)"/><text x="592.00" y="254.50"></text></g><g><title>0x7f3f068252df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 3.54%)</title><rect x="558" y="212" width="42" height="15" fill="rgb(251,52,24)"/><text x="561.00" y="222.50">0x7..</text></g><g><title>0x7f3f06809e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="594" y="228" width="6" height="15" fill="rgb(221,97,5)"/><text x="597.00" y="238.50"></text></g><g><title>0x7f3f067fd2bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="594" y="244" width="6" height="15" fill="rgb(238,14,20)"/><text x="597.00" y="254.50"></text></g><g><title>0x7f3f067fca62 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="594" y="260" width="6" height="15" fill="rgb(211,224,10)"/><text x="597.00" y="270.50"></text></g><g><title>0x7f3f06825592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="600" y="212" width="5" height="15" fill="rgb(226,79,38)"/><text x="603.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c) (1 samples, 0.44%)</title><rect x="600" y="228" width="5" height="15" fill="rgb(205,57,26)"/><text x="603.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.44%)</title><rect x="600" y="244" width="5" height="15" fill="rgb(212,107,54)"/><text x="603.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.44%)</title><rect x="600" y="260" width="5" height="15" fill="rgb(244,37,52)"/><text x="603.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.44%)</title><rect x="600" y="276" width="5" height="15" fill="rgb(236,115,25)"/><text x="603.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.44%)</title><rect x="600" y="292" width="5" height="15" fill="rgb(223,149,43)"/><text x="603.00" y="302.50"></text></g><g><title>0x7f3f068256fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="605" y="212" width="5" height="15" fill="rgb(234,17,50)"/><text x="608.00" y="222.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.44%)</title><rect x="605" y="228" width="5" height="15" fill="rgb(206,158,17)"/><text x="608.00" y="238.50"></text></g><g><title>0x7f3f06826405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (13 samples, 5.75%)</title><rect x="547" y="196" width="68" height="15" fill="rgb(239,28,10)"/><text x="550.00" y="206.50">0x7f3f0..</text></g><g><title>0x7f3f06825c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="610" y="212" width="5" height="15" fill="rgb(225,198,13)"/><text x="613.00" y="222.50"></text></g><g><title>0x7f3f067fd529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="610" y="228" width="5" height="15" fill="rgb(233,72,51)"/><text x="613.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.44%)</title><rect x="610" y="244" width="5" height="15" fill="rgb(253,157,44)"/><text x="613.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.44%)</title><rect x="610" y="260" width="5" height="15" fill="rgb(234,95,49)"/><text x="613.00" y="270.50"></text></g><g><title>0x7f3f06816fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 6.19%)</title><rect x="547" y="180" width="73" height="15" fill="rgb(209,156,51)"/><text x="550.00" y="190.50">0x7f3f06..</text></g><g><title>0x7f3f06826540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="615" y="196" width="5" height="15" fill="rgb(238,9,10)"/><text x="618.00" y="206.50"></text></g><g><title>0x7f3f067fb2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="615" y="212" width="5" height="15" fill="rgb(235,39,45)"/><text x="618.00" y="222.50"></text></g><g><title>0x7f3f067fa508 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="615" y="228" width="5" height="15" fill="rgb(234,14,2)"/><text x="618.00" y="238.50"></text></g><g><title>0x7f3f06817002 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.88%)</title><rect x="620" y="180" width="11" height="15" fill="rgb(253,174,30)"/><text x="623.00" y="190.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.44%)</title><rect x="641" y="212" width="5" height="15" fill="rgb(228,53,35)"/><text x="644.00" y="222.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.44%)</title><rect x="646" y="244" width="6" height="15" fill="rgb(211,139,35)"/><text x="649.00" y="254.50"></text></g><g><title>0x7f3f0681705a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.21%)</title><rect x="631" y="180" width="26" height="15" fill="rgb(218,128,28)"/><text x="634.00" y="190.50">0..</text></g><g><title>array_take (methods.c) (3 samples, 1.33%)</title><rect x="641" y="196" width="16" height="15" fill="rgb(233,228,50)"/><text x="644.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (2 samples, 0.88%)</title><rect x="646" y="212" width="11" height="15" fill="rgb(251,116,8)"/><text x="649.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (2 samples, 0.88%)</title><rect x="646" y="228" width="11" height="15" fill="rgb(253,75,24)"/><text x="649.00" y="238.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.44%)</title><rect x="652" y="244" width="5" height="15" fill="rgb(205,12,24)"/><text x="655.00" y="254.50"></text></g><g><title>0x7f3f0681714f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.33%)</title><rect x="657" y="180" width="16" height="15" fill="rgb(246,161,51)"/><text x="660.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 1.33%)</title><rect x="657" y="196" width="16" height="15" fill="rgb(221,225,49)"/><text x="660.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (3 samples, 1.33%)</title><rect x="657" y="212" width="16" height="15" fill="rgb(251,19,29)"/><text x="660.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (3 samples, 1.33%)</title><rect x="657" y="228" width="16" height="15" fill="rgb(236,158,49)"/><text x="660.00" y="238.50"></text></g><g><title>_buffer_info_free (buffer.c) (2 samples, 0.88%)</title><rect x="662" y="244" width="11" height="15" fill="rgb(205,202,22)"/><text x="665.00" y="254.50"></text></g><g><title>0x7f3f2c1ab902 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="667" y="260" width="6" height="15" fill="rgb(252,103,26)"/><text x="670.00" y="270.50"></text></g><g><title>0x7f3f06817163 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="673" y="180" width="5" height="15" fill="rgb(233,28,44)"/><text x="676.00" y="190.50"></text></g><g><title>0x7f3f068171bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="678" y="180" width="5" height="15" fill="rgb(213,127,37)"/><text x="681.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.44%)</title><rect x="678" y="196" width="5" height="15" fill="rgb(227,131,50)"/><text x="681.00" y="206.50"></text></g><g><title>0x7f3f06817328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="683" y="180" width="5" height="15" fill="rgb(223,227,51)"/><text x="686.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.44%)</title><rect x="683" y="196" width="5" height="15" fill="rgb(233,184,36)"/><text x="686.00" y="206.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.44%)</title><rect x="683" y="212" width="5" height="15" fill="rgb(230,70,46)"/><text x="686.00" y="222.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.44%)</title><rect x="683" y="228" width="5" height="15" fill="rgb(214,21,29)"/><text x="686.00" y="238.50"></text></g><g><title>0x7f3f06817d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (29 samples, 12.83%)</title><rect x="542" y="164" width="151" height="15" fill="rgb(206,58,14)"/><text x="545.00" y="174.50">0x7f3f06817d2e (skl..</text></g><g><title>0x7f3f06817384 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="688" y="180" width="5" height="15" fill="rgb(217,75,20)"/><text x="691.00" y="190.50"></text></g><g><title>__enter__ (warnings.py) (4 samples, 1.77%)</title><rect x="803" y="196" width="21" height="15" fill="rgb(234,69,14)"/><text x="806.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.88%)</title><rect x="824" y="196" width="10" height="15" fill="rgb(233,128,1)"/><text x="827.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (3 samples, 1.33%)</title><rect x="834" y="196" width="16" height="15" fill="rgb(239,216,32)"/><text x="837.00" y="206.50"></text></g><g><title>0x7f3f2c1cc186 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="845" y="212" width="5" height="15" fill="rgb(225,149,6)"/><text x="848.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.65%)</title><rect x="861" y="212" width="31" height="15" fill="rgb(235,194,46)"/><text x="864.00" y="222.50">_h..</text></g><g><title>0x7f3f2c1c1e7a (libc-2.29.so) (2 samples, 0.88%)</title><rect x="881" y="228" width="11" height="15" fill="rgb(249,176,52)"/><text x="884.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (10 samples, 4.42%)</title><rect x="850" y="196" width="52" height="15" fill="rgb(236,164,28)"/><text x="853.00" y="206.50">_asse..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="892" y="212" width="10" height="15" fill="rgb(250,174,5)"/><text x="895.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.44%)</title><rect x="902" y="196" width="6" height="15" fill="rgb(252,115,23)"/><text x="905.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.44%)</title><rect x="944" y="212" width="5" height="15" fill="rgb(225,54,31)"/><text x="947.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (13 samples, 5.75%)</title><rect x="908" y="196" width="67" height="15" fill="rgb(208,88,34)"/><text x="911.00" y="206.50">_num_sa..</text></g><g><title>__instancecheck__ (abc.py) (5 samples, 2.21%)</title><rect x="949" y="212" width="26" height="15" fill="rgb(235,79,21)"/><text x="952.00" y="222.50">_..</text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.88%)</title><rect x="965" y="228" width="10" height="15" fill="rgb(231,145,1)"/><text x="968.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (4 samples, 1.77%)</title><rect x="975" y="196" width="21" height="15" fill="rgb(233,201,22)"/><text x="978.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.88%)</title><rect x="986" y="212" width="10" height="15" fill="rgb(220,33,29)"/><text x="989.00" y="222.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (67 samples, 29.65%)</title><rect x="693" y="164" width="350" height="15" fill="rgb(238,217,50)"/><text x="696.00" y="174.50">_validate_X_predict (sklearn/tree/_classes.py)</text></g><g><title>check_array (sklearn/utils/validation.py) (64 samples, 28.32%)</title><rect x="709" y="180" width="334" height="15" fill="rgb(220,151,45)"/><text x="712.00" y="190.50">check_array (sklearn/utils/validation.py)</text></g><g><title>simplefilter (warnings.py) (9 samples, 3.98%)</title><rect x="996" y="196" width="47" height="15" fill="rgb(226,209,36)"/><text x="999.00" y="206.50">simp..</text></g><g><title>_add_filter (warnings.py) (8 samples, 3.54%)</title><rect x="1002" y="212" width="41" height="15" fill="rgb(254,35,12)"/><text x="1005.00" y="222.50">_ad..</text></g><g><title>array_subscript (mapping.c) (1 samples, 0.44%)</title><rect x="1043" y="164" width="6" height="15" fill="rgb(232,191,32)"/><text x="1046.00" y="174.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.44%)</title><rect x="1043" y="180" width="6" height="15" fill="rgb(231,75,24)"/><text x="1046.00" y="190.50"></text></g><g><title>unpack_indices (mapping.c) (1 samples, 0.44%)</title><rect x="1043" y="196" width="6" height="15" fill="rgb(207,34,0)"/><text x="1046.00" y="206.50"></text></g><g><title>0x7f3f2c1cc12f (libc-2.29.so) (1 samples, 0.44%)</title><rect x="1111" y="196" width="5" height="15" fill="rgb(216,8,12)"/><text x="1114.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (9 samples, 3.98%)</title><rect x="1116" y="196" width="47" height="15" fill="rgb(239,227,45)"/><text x="1119.00" y="206.50">unic..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (24 samples, 10.62%)</title><rect x="1049" y="164" width="125" height="15" fill="rgb(252,4,8)"/><text x="1052.00" y="174.50">check_is_fitted..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (19 samples, 8.41%)</title><rect x="1075" y="180" width="99" height="15" fill="rgb(225,120,36)"/><text x="1078.00" y="190.50">&lt;listcomp&gt; ..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.88%)</title><rect x="1163" y="196" width="11" height="15" fill="rgb(240,107,21)"/><text x="1166.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (125 samples, 55.31%)</title><rect x="526" y="132" width="653" height="15" fill="rgb(253,105,32)"/><text x="529.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/tree/_classes.py) (124 samples, 54.87%)</title><rect x="532" y="148" width="647" height="15" fill="rgb(214,169,11)"/><text x="535.00" y="158.50">predict (sklearn/tree/_classes.py)</text></g><g><title>is_classifier (sklearn/base.py) (1 samples, 0.44%)</title><rect x="1174" y="164" width="5" height="15" fill="rgb(221,62,48)"/><text x="1177.00" y="174.50"></text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py) (127 samples, 56.19%)</title><rect x="521" y="68" width="663" height="15" fill="rgb(237,30,31)"/><text x="524.00" y="78.50">profile_skl (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py) (127 samples, 56.19%)</title><rect x="521" y="84" width="663" height="15" fill="rgb(231,176,0)"/><text x="524.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py) (127 samples, 56.19%)</title><rect x="521" y="100" width="663" height="15" fill="rgb(230,213,45)"/><text x="524.00" y="110.50">profile (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (126 samples, 55.75%)</title><rect x="526" y="116" width="658" height="15" fill="rgb(209,155,33)"/><text x="529.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.44%)</title><rect x="1179" y="132" width="5" height="15" fill="rgb(236,20,24)"/><text x="1182.00" y="142.50"></text></g><g><title>all (226 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(229,150,3)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py) (226 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(235,180,35)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py)</text></g><g><title>start (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py) (1 samples, 0.44%)</title><rect x="1184" y="68" width="6" height="15" fill="rgb(250,0,50)"/><text x="1187.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py) (1 samples, 0.44%)</title><rect x="1184" y="84" width="6" height="15" fill="rgb(226,30,2)"/><text x="1187.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.44%)</title><rect x="1184" y="100" width="6" height="15" fill="rgb(242,219,21)"/><text x="1187.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.44%)</title><rect x="1184" y="116" width="6" height="15" fill="rgb(208,20,22)"/><text x="1187.00" y="126.50"></text></g><g><title>_modify_dimension (mlprodict/onnxrt/validate/validate_problems.py) (1 samples, 0.44%)</title><rect x="1184" y="132" width="6" height="15" fill="rgb(254,162,25)"/><text x="1187.00" y="142.50"></text></g><g><title>array_true_divide (number.c) (1 samples, 0.44%)</title><rect x="1184" y="148" width="6" height="15" fill="rgb(221,16,0)"/><text x="1187.00" y="158.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.44%)</title><rect x="1184" y="164" width="6" height="15" fill="rgb(206,155,6)"/><text x="1187.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.44%)</title><rect x="1184" y="180" width="6" height="15" fill="rgb(228,9,35)"/><text x="1187.00" y="190.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.44%)</title><rect x="1184" y="196" width="6" height="15" fill="rgb(247,198,45)"/><text x="1187.00" y="206.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.44%)</title><rect x="1184" y="212" width="6" height="15" fill="rgb(233,217,12)"/><text x="1187.00" y="222.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.44%)</title><rect x="1184" y="228" width="6" height="15" fill="rgb(234,4,30)"/><text x="1187.00" y="238.50"></text></g></g></svg>