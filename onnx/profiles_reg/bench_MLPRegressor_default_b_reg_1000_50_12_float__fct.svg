<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.57%)</title><rect x="10" y="868" width="6" height="15" fill="rgb(242,19,8)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.57%)</title><rect x="10" y="884" width="6" height="15" fill="rgb(223,90,14)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.57%)</title><rect x="10" y="900" width="6" height="15" fill="rgb(211,20,45)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.57%)</title><rect x="10" y="916" width="6" height="15" fill="rgb(237,223,36)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.57%)</title><rect x="10" y="932" width="6" height="15" fill="rgb(245,214,0)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.57%)</title><rect x="10" y="948" width="6" height="15" fill="rgb(241,228,47)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.57%)</title><rect x="10" y="964" width="6" height="15" fill="rgb(248,161,46)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="13" y="980" width="3" height="15" fill="rgb(211,62,14)"/><text x="16.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="13" y="996" width="3" height="15" fill="rgb(218,49,24)"/><text x="16.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="13" y="1012" width="3" height="15" fill="rgb(222,157,43)"/><text x="16.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.28%)</title><rect x="13" y="1028" width="3" height="15" fill="rgb(249,30,24)"/><text x="16.00" y="1038.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="16" y="868" width="4" height="15" fill="rgb(242,132,52)"/><text x="19.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="16" y="884" width="4" height="15" fill="rgb(215,216,50)"/><text x="19.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="16" y="900" width="4" height="15" fill="rgb(235,47,14)"/><text x="19.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="16" y="916" width="4" height="15" fill="rgb(253,66,8)"/><text x="19.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="16" y="932" width="4" height="15" fill="rgb(249,179,27)"/><text x="19.00" y="942.50"></text></g><g><title>isdir (genericpath.py) (1 samples, 0.28%)</title><rect x="16" y="948" width="4" height="15" fill="rgb(245,191,9)"/><text x="19.00" y="958.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.14%)</title><rect x="10" y="836" width="13" height="15" fill="rgb(222,24,21)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.14%)</title><rect x="10" y="852" width="13" height="15" fill="rgb(226,93,48)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="20" y="868" width="3" height="15" fill="rgb(206,80,14)"/><text x="23.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="20" y="884" width="3" height="15" fill="rgb(237,145,54)"/><text x="23.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="20" y="900" width="3" height="15" fill="rgb(209,118,18)"/><text x="23.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="20" y="916" width="3" height="15" fill="rgb(206,180,53)"/><text x="23.00" y="926.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 1.42%)</title><rect x="10" y="292" width="16" height="15" fill="rgb(240,107,25)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="308" width="16" height="15" fill="rgb(246,164,7)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="324" width="16" height="15" fill="rgb(232,146,19)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="340" width="16" height="15" fill="rgb(219,192,45)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.42%)</title><rect x="10" y="356" width="16" height="15" fill="rgb(208,154,34)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="372" width="16" height="15" fill="rgb(228,172,41)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 1.42%)</title><rect x="10" y="388" width="16" height="15" fill="rgb(229,151,33)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="404" width="16" height="15" fill="rgb(222,65,41)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="420" width="16" height="15" fill="rgb(208,112,38)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="436" width="16" height="15" fill="rgb(216,229,6)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.42%)</title><rect x="10" y="452" width="16" height="15" fill="rgb(219,213,1)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="468" width="16" height="15" fill="rgb(253,176,42)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 1.42%)</title><rect x="10" y="484" width="16" height="15" fill="rgb(212,103,34)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="500" width="16" height="15" fill="rgb(252,42,33)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="516" width="16" height="15" fill="rgb(207,9,43)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="532" width="16" height="15" fill="rgb(238,86,33)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.42%)</title><rect x="10" y="548" width="16" height="15" fill="rgb(233,192,37)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="564" width="16" height="15" fill="rgb(205,6,41)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 1.42%)</title><rect x="10" y="580" width="16" height="15" fill="rgb(229,154,8)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="596" width="16" height="15" fill="rgb(219,169,52)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="612" width="16" height="15" fill="rgb(209,199,45)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="628" width="16" height="15" fill="rgb(225,57,33)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="644" width="16" height="15" fill="rgb(236,72,41)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="660" width="16" height="15" fill="rgb(212,126,1)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="676" width="16" height="15" fill="rgb(212,30,36)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.42%)</title><rect x="10" y="692" width="16" height="15" fill="rgb(215,85,27)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="708" width="16" height="15" fill="rgb(209,194,41)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 1.42%)</title><rect x="10" y="724" width="16" height="15" fill="rgb(219,104,13)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="740" width="16" height="15" fill="rgb(254,90,51)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="756" width="16" height="15" fill="rgb(224,14,8)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="772" width="16" height="15" fill="rgb(224,229,18)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.42%)</title><rect x="10" y="788" width="16" height="15" fill="rgb(235,195,31)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.42%)</title><rect x="10" y="804" width="16" height="15" fill="rgb(243,156,4)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 1.42%)</title><rect x="10" y="820" width="16" height="15" fill="rgb(233,210,34)"/><text x="13.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="836" width="3" height="15" fill="rgb(236,53,28)"/><text x="26.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="852" width="3" height="15" fill="rgb(233,132,16)"/><text x="26.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="868" width="3" height="15" fill="rgb(230,196,3)"/><text x="26.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="884" width="3" height="15" fill="rgb(248,22,27)"/><text x="26.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="900" width="3" height="15" fill="rgb(244,139,21)"/><text x="26.00" y="910.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="916" width="3" height="15" fill="rgb(224,47,46)"/><text x="26.00" y="926.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.28%)</title><rect x="23" y="932" width="3" height="15" fill="rgb(211,57,33)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="948" width="3" height="15" fill="rgb(217,150,46)"/><text x="26.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="964" width="3" height="15" fill="rgb(250,147,33)"/><text x="26.00" y="974.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="980" width="3" height="15" fill="rgb(245,72,40)"/><text x="26.00" y="990.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="23" y="996" width="3" height="15" fill="rgb(215,8,4)"/><text x="26.00" y="1006.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="23" y="1012" width="3" height="15" fill="rgb(237,10,40)"/><text x="26.00" y="1022.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="23" y="1028" width="3" height="15" fill="rgb(239,194,27)"/><text x="26.00" y="1038.50"></text></g><g><title>_fill_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="23" y="1044" width="3" height="15" fill="rgb(245,36,7)"/><text x="26.00" y="1054.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.28%)</title><rect x="23" y="1060" width="3" height="15" fill="rgb(228,123,27)"/><text x="26.00" y="1070.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.28%)</title><rect x="23" y="1076" width="3" height="15" fill="rgb(249,140,9)"/><text x="26.00" y="1086.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.28%)</title><rect x="23" y="1092" width="3" height="15" fill="rgb(235,111,41)"/><text x="26.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.70%)</title><rect x="10" y="196" width="20" height="15" fill="rgb(238,83,8)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.70%)</title><rect x="10" y="212" width="20" height="15" fill="rgb(230,11,1)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.70%)</title><rect x="10" y="228" width="20" height="15" fill="rgb(213,16,54)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.70%)</title><rect x="10" y="244" width="20" height="15" fill="rgb(225,74,33)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.70%)</title><rect x="10" y="260" width="20" height="15" fill="rgb(238,108,26)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.70%)</title><rect x="10" y="276" width="20" height="15" fill="rgb(249,102,35)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.28%)</title><rect x="26" y="292" width="4" height="15" fill="rgb(229,101,10)"/><text x="29.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="308" width="4" height="15" fill="rgb(214,24,3)"/><text x="29.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="324" width="4" height="15" fill="rgb(234,110,50)"/><text x="29.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="340" width="4" height="15" fill="rgb(248,159,17)"/><text x="29.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="26" y="356" width="4" height="15" fill="rgb(239,31,42)"/><text x="29.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="372" width="4" height="15" fill="rgb(227,198,8)"/><text x="29.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.28%)</title><rect x="26" y="388" width="4" height="15" fill="rgb(228,3,28)"/><text x="29.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="404" width="4" height="15" fill="rgb(250,106,32)"/><text x="29.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="420" width="4" height="15" fill="rgb(222,214,18)"/><text x="29.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="436" width="4" height="15" fill="rgb(228,219,18)"/><text x="29.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="26" y="452" width="4" height="15" fill="rgb(220,106,8)"/><text x="29.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="468" width="4" height="15" fill="rgb(232,208,48)"/><text x="29.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.28%)</title><rect x="26" y="484" width="4" height="15" fill="rgb(242,188,27)"/><text x="29.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="500" width="4" height="15" fill="rgb(246,86,46)"/><text x="29.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="516" width="4" height="15" fill="rgb(219,164,16)"/><text x="29.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="532" width="4" height="15" fill="rgb(249,133,54)"/><text x="29.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="26" y="548" width="4" height="15" fill="rgb(220,14,15)"/><text x="29.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="564" width="4" height="15" fill="rgb(210,12,17)"/><text x="29.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.28%)</title><rect x="26" y="580" width="4" height="15" fill="rgb(230,145,14)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="596" width="4" height="15" fill="rgb(230,105,39)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="612" width="4" height="15" fill="rgb(228,190,25)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="628" width="4" height="15" fill="rgb(229,14,29)"/><text x="29.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="26" y="644" width="4" height="15" fill="rgb(209,134,42)"/><text x="29.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="660" width="4" height="15" fill="rgb(234,128,28)"/><text x="29.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.28%)</title><rect x="26" y="676" width="4" height="15" fill="rgb(246,213,54)"/><text x="29.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="692" width="4" height="15" fill="rgb(207,143,49)"/><text x="29.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="708" width="4" height="15" fill="rgb(236,170,8)"/><text x="29.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="724" width="4" height="15" fill="rgb(238,136,19)"/><text x="29.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="26" y="740" width="4" height="15" fill="rgb(248,24,53)"/><text x="29.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="756" width="4" height="15" fill="rgb(237,64,5)"/><text x="29.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.28%)</title><rect x="26" y="772" width="4" height="15" fill="rgb(238,114,29)"/><text x="29.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="788" width="4" height="15" fill="rgb(219,175,33)"/><text x="29.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="804" width="4" height="15" fill="rgb(219,205,8)"/><text x="29.00" y="814.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="820" width="4" height="15" fill="rgb(224,11,50)"/><text x="29.00" y="830.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="26" y="836" width="4" height="15" fill="rgb(209,229,4)"/><text x="29.00" y="846.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="26" y="852" width="4" height="15" fill="rgb(223,63,53)"/><text x="29.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="30" y="1124" width="3" height="15" fill="rgb(245,181,50)"/><text x="33.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="30" y="1140" width="3" height="15" fill="rgb(227,85,16)"/><text x="33.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="30" y="1156" width="3" height="15" fill="rgb(247,53,42)"/><text x="33.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="30" y="1172" width="3" height="15" fill="rgb(225,107,5)"/><text x="33.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="30" y="1188" width="3" height="15" fill="rgb(225,117,39)"/><text x="33.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.28%)</title><rect x="30" y="1204" width="3" height="15" fill="rgb(212,94,12)"/><text x="33.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="30" y="1220" width="3" height="15" fill="rgb(231,79,32)"/><text x="33.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="30" y="1236" width="3" height="15" fill="rgb(236,127,36)"/><text x="33.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="30" y="1252" width="3" height="15" fill="rgb(231,72,51)"/><text x="33.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="30" y="1268" width="3" height="15" fill="rgb(244,154,51)"/><text x="33.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="30" y="1284" width="3" height="15" fill="rgb(229,167,22)"/><text x="33.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.28%)</title><rect x="30" y="1300" width="3" height="15" fill="rgb(247,86,44)"/><text x="33.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.28%)</title><rect x="30" y="1316" width="3" height="15" fill="rgb(237,117,39)"/><text x="33.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.28%)</title><rect x="30" y="1332" width="3" height="15" fill="rgb(206,160,43)"/><text x="33.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.28%)</title><rect x="30" y="1348" width="3" height="15" fill="rgb(211,217,33)"/><text x="33.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.28%)</title><rect x="30" y="1364" width="3" height="15" fill="rgb(213,120,4)"/><text x="33.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.28%)</title><rect x="30" y="1380" width="3" height="15" fill="rgb(252,35,28)"/><text x="33.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.28%)</title><rect x="30" y="1396" width="3" height="15" fill="rgb(225,31,35)"/><text x="33.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.28%)</title><rect x="30" y="1412" width="3" height="15" fill="rgb(248,168,9)"/><text x="33.00" y="1422.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.28%)</title><rect x="36" y="1588" width="4" height="15" fill="rgb(224,106,42)"/><text x="39.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="36" y="1604" width="4" height="15" fill="rgb(231,171,12)"/><text x="39.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="484" width="13" height="15" fill="rgb(242,128,8)"/><text x="33.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="500" width="13" height="15" fill="rgb(249,31,31)"/><text x="33.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="516" width="13" height="15" fill="rgb(224,228,24)"/><text x="33.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="532" width="13" height="15" fill="rgb(219,156,15)"/><text x="33.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.14%)</title><rect x="30" y="548" width="13" height="15" fill="rgb(220,83,45)"/><text x="33.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="564" width="13" height="15" fill="rgb(216,73,27)"/><text x="33.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 1.14%)</title><rect x="30" y="580" width="13" height="15" fill="rgb(253,134,22)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="596" width="13" height="15" fill="rgb(206,222,23)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="612" width="13" height="15" fill="rgb(253,78,38)"/><text x="33.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="628" width="13" height="15" fill="rgb(226,2,5)"/><text x="33.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.14%)</title><rect x="30" y="644" width="13" height="15" fill="rgb(232,20,27)"/><text x="33.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="660" width="13" height="15" fill="rgb(220,167,18)"/><text x="33.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 1.14%)</title><rect x="30" y="676" width="13" height="15" fill="rgb(232,77,12)"/><text x="33.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="692" width="13" height="15" fill="rgb(235,185,47)"/><text x="33.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="708" width="13" height="15" fill="rgb(242,181,10)"/><text x="33.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="724" width="13" height="15" fill="rgb(209,124,12)"/><text x="33.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.14%)</title><rect x="30" y="740" width="13" height="15" fill="rgb(238,171,48)"/><text x="33.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="756" width="13" height="15" fill="rgb(221,200,6)"/><text x="33.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 1.14%)</title><rect x="30" y="772" width="13" height="15" fill="rgb(229,164,9)"/><text x="33.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="788" width="13" height="15" fill="rgb(216,10,8)"/><text x="33.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="804" width="13" height="15" fill="rgb(205,150,18)"/><text x="33.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="820" width="13" height="15" fill="rgb(229,122,2)"/><text x="33.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.14%)</title><rect x="30" y="836" width="13" height="15" fill="rgb(208,212,41)"/><text x="33.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="852" width="13" height="15" fill="rgb(227,148,17)"/><text x="33.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 1.14%)</title><rect x="30" y="868" width="13" height="15" fill="rgb(230,137,54)"/><text x="33.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="884" width="13" height="15" fill="rgb(236,199,13)"/><text x="33.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="900" width="13" height="15" fill="rgb(212,37,13)"/><text x="33.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="916" width="13" height="15" fill="rgb(217,227,50)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="932" width="13" height="15" fill="rgb(231,225,25)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="948" width="13" height="15" fill="rgb(238,217,10)"/><text x="33.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="964" width="13" height="15" fill="rgb(237,138,24)"/><text x="33.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.14%)</title><rect x="30" y="980" width="13" height="15" fill="rgb(250,114,1)"/><text x="33.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="996" width="13" height="15" fill="rgb(242,57,5)"/><text x="33.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 1.14%)</title><rect x="30" y="1012" width="13" height="15" fill="rgb(217,112,14)"/><text x="33.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="1028" width="13" height="15" fill="rgb(212,73,22)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="1044" width="13" height="15" fill="rgb(230,12,29)"/><text x="33.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="1060" width="13" height="15" fill="rgb(247,129,11)"/><text x="33.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.14%)</title><rect x="30" y="1076" width="13" height="15" fill="rgb(214,16,33)"/><text x="33.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="1092" width="13" height="15" fill="rgb(222,180,22)"/><text x="33.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 1.14%)</title><rect x="30" y="1108" width="13" height="15" fill="rgb(244,66,3)"/><text x="33.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="33" y="1124" width="10" height="15" fill="rgb(229,153,40)"/><text x="36.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="33" y="1140" width="10" height="15" fill="rgb(252,23,52)"/><text x="36.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="33" y="1156" width="10" height="15" fill="rgb(212,104,18)"/><text x="36.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="33" y="1172" width="10" height="15" fill="rgb(221,52,26)"/><text x="36.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="33" y="1188" width="10" height="15" fill="rgb(232,215,5)"/><text x="36.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.85%)</title><rect x="33" y="1204" width="10" height="15" fill="rgb(237,194,38)"/><text x="36.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="33" y="1220" width="10" height="15" fill="rgb(241,142,25)"/><text x="36.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 0.85%)</title><rect x="33" y="1236" width="10" height="15" fill="rgb(228,225,53)"/><text x="36.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="33" y="1252" width="10" height="15" fill="rgb(217,97,23)"/><text x="36.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="33" y="1268" width="10" height="15" fill="rgb(219,42,3)"/><text x="36.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="33" y="1284" width="10" height="15" fill="rgb(240,152,29)"/><text x="36.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="33" y="1300" width="10" height="15" fill="rgb(223,34,44)"/><text x="36.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="33" y="1316" width="10" height="15" fill="rgb(246,49,7)"/><text x="36.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.85%)</title><rect x="33" y="1332" width="10" height="15" fill="rgb(205,26,39)"/><text x="36.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="33" y="1348" width="10" height="15" fill="rgb(217,103,1)"/><text x="36.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 0.85%)</title><rect x="33" y="1364" width="10" height="15" fill="rgb(240,160,5)"/><text x="36.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="33" y="1380" width="10" height="15" fill="rgb(253,186,50)"/><text x="36.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="33" y="1396" width="10" height="15" fill="rgb(215,0,49)"/><text x="36.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="33" y="1412" width="10" height="15" fill="rgb(247,221,39)"/><text x="36.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.85%)</title><rect x="33" y="1428" width="10" height="15" fill="rgb(223,193,16)"/><text x="36.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="33" y="1444" width="10" height="15" fill="rgb(241,206,24)"/><text x="36.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.85%)</title><rect x="33" y="1460" width="10" height="15" fill="rgb(223,57,14)"/><text x="36.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.85%)</title><rect x="33" y="1476" width="10" height="15" fill="rgb(229,69,53)"/><text x="36.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.85%)</title><rect x="33" y="1492" width="10" height="15" fill="rgb(223,210,20)"/><text x="36.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.57%)</title><rect x="36" y="1508" width="7" height="15" fill="rgb(246,28,35)"/><text x="39.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.57%)</title><rect x="36" y="1524" width="7" height="15" fill="rgb(207,74,2)"/><text x="39.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.57%)</title><rect x="36" y="1540" width="7" height="15" fill="rgb(225,221,22)"/><text x="39.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.57%)</title><rect x="36" y="1556" width="7" height="15" fill="rgb(252,12,21)"/><text x="39.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.57%)</title><rect x="36" y="1572" width="7" height="15" fill="rgb(253,115,52)"/><text x="39.00" y="1582.50"></text></g><g><title>resolve_or_missing (jinja2/runtime.py) (1 samples, 0.28%)</title><rect x="40" y="1588" width="3" height="15" fill="rgb(252,153,49)"/><text x="43.00" y="1598.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.28%)</title><rect x="43" y="628" width="3" height="15" fill="rgb(232,123,13)"/><text x="46.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="43" y="644" width="3" height="15" fill="rgb(228,141,32)"/><text x="46.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="43" y="660" width="3" height="15" fill="rgb(225,100,51)"/><text x="46.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="43" y="676" width="3" height="15" fill="rgb(230,128,27)"/><text x="46.00" y="686.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="43" y="692" width="3" height="15" fill="rgb(228,65,33)"/><text x="46.00" y="702.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="43" y="708" width="3" height="15" fill="rgb(212,107,5)"/><text x="46.00" y="718.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="43" y="724" width="3" height="15" fill="rgb(217,137,7)"/><text x="46.00" y="734.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="43" y="740" width="3" height="15" fill="rgb(223,37,13)"/><text x="46.00" y="750.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="43" y="756" width="3" height="15" fill="rgb(225,190,14)"/><text x="46.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.28%)</title><rect x="46" y="724" width="4" height="15" fill="rgb(212,213,13)"/><text x="49.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="740" width="4" height="15" fill="rgb(217,45,38)"/><text x="49.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="756" width="4" height="15" fill="rgb(205,121,22)"/><text x="49.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="772" width="4" height="15" fill="rgb(209,35,37)"/><text x="49.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="46" y="788" width="4" height="15" fill="rgb(208,14,34)"/><text x="49.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="804" width="4" height="15" fill="rgb(244,66,5)"/><text x="49.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.28%)</title><rect x="46" y="820" width="4" height="15" fill="rgb(219,138,11)"/><text x="49.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="836" width="4" height="15" fill="rgb(209,115,31)"/><text x="49.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="852" width="4" height="15" fill="rgb(224,190,29)"/><text x="49.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="868" width="4" height="15" fill="rgb(254,178,24)"/><text x="49.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="46" y="884" width="4" height="15" fill="rgb(238,127,28)"/><text x="49.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="900" width="4" height="15" fill="rgb(254,187,53)"/><text x="49.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.28%)</title><rect x="46" y="916" width="4" height="15" fill="rgb(248,55,31)"/><text x="49.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="932" width="4" height="15" fill="rgb(234,131,32)"/><text x="49.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="948" width="4" height="15" fill="rgb(217,31,8)"/><text x="49.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="964" width="4" height="15" fill="rgb(207,83,47)"/><text x="49.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="46" y="980" width="4" height="15" fill="rgb(251,112,14)"/><text x="49.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="996" width="4" height="15" fill="rgb(247,63,34)"/><text x="49.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.28%)</title><rect x="46" y="1012" width="4" height="15" fill="rgb(234,56,38)"/><text x="49.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1028" width="4" height="15" fill="rgb(219,57,4)"/><text x="49.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1044" width="4" height="15" fill="rgb(233,151,50)"/><text x="49.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1060" width="4" height="15" fill="rgb(250,64,2)"/><text x="49.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="46" y="1076" width="4" height="15" fill="rgb(217,15,32)"/><text x="49.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1092" width="4" height="15" fill="rgb(230,186,3)"/><text x="49.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.28%)</title><rect x="46" y="1108" width="4" height="15" fill="rgb(246,0,24)"/><text x="49.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1124" width="4" height="15" fill="rgb(250,81,4)"/><text x="49.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1140" width="4" height="15" fill="rgb(238,44,3)"/><text x="49.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1156" width="4" height="15" fill="rgb(223,33,53)"/><text x="49.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="46" y="1172" width="4" height="15" fill="rgb(233,186,3)"/><text x="49.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1188" width="4" height="15" fill="rgb(217,182,16)"/><text x="49.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.28%)</title><rect x="46" y="1204" width="4" height="15" fill="rgb(247,190,13)"/><text x="49.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1220" width="4" height="15" fill="rgb(247,18,49)"/><text x="49.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1236" width="4" height="15" fill="rgb(220,106,47)"/><text x="49.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1252" width="4" height="15" fill="rgb(212,135,52)"/><text x="49.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="46" y="1268" width="4" height="15" fill="rgb(249,48,35)"/><text x="49.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1284" width="4" height="15" fill="rgb(212,185,32)"/><text x="49.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.28%)</title><rect x="46" y="1300" width="4" height="15" fill="rgb(207,37,37)"/><text x="49.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1316" width="4" height="15" fill="rgb(221,133,16)"/><text x="49.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1332" width="4" height="15" fill="rgb(224,136,41)"/><text x="49.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1348" width="4" height="15" fill="rgb(248,218,50)"/><text x="49.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="46" y="1364" width="4" height="15" fill="rgb(206,133,7)"/><text x="49.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1380" width="4" height="15" fill="rgb(230,83,8)"/><text x="49.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.28%)</title><rect x="46" y="1396" width="4" height="15" fill="rgb(225,204,32)"/><text x="49.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1412" width="4" height="15" fill="rgb(242,105,46)"/><text x="49.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1428" width="4" height="15" fill="rgb(228,88,33)"/><text x="49.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1444" width="4" height="15" fill="rgb(224,192,32)"/><text x="49.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="46" y="1460" width="4" height="15" fill="rgb(222,159,9)"/><text x="49.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1476" width="4" height="15" fill="rgb(247,32,25)"/><text x="49.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.28%)</title><rect x="46" y="1492" width="4" height="15" fill="rgb(248,125,33)"/><text x="49.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1508" width="4" height="15" fill="rgb(219,27,21)"/><text x="49.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1524" width="4" height="15" fill="rgb(217,141,7)"/><text x="49.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1540" width="4" height="15" fill="rgb(249,134,18)"/><text x="49.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1556" width="4" height="15" fill="rgb(223,13,49)"/><text x="49.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1572" width="4" height="15" fill="rgb(247,48,8)"/><text x="49.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1588" width="4" height="15" fill="rgb(254,75,40)"/><text x="49.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="46" y="1604" width="4" height="15" fill="rgb(227,50,10)"/><text x="49.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1620" width="4" height="15" fill="rgb(240,188,18)"/><text x="49.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.28%)</title><rect x="46" y="1636" width="4" height="15" fill="rgb(223,11,33)"/><text x="49.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1652" width="4" height="15" fill="rgb(222,223,46)"/><text x="49.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1668" width="4" height="15" fill="rgb(205,91,38)"/><text x="49.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1684" width="4" height="15" fill="rgb(216,133,27)"/><text x="49.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1700" width="4" height="15" fill="rgb(222,22,48)"/><text x="49.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1716" width="4" height="15" fill="rgb(232,133,29)"/><text x="49.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="46" y="1732" width="4" height="15" fill="rgb(209,26,48)"/><text x="49.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1748" width="4" height="15" fill="rgb(254,108,21)"/><text x="49.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.28%)</title><rect x="46" y="1764" width="4" height="15" fill="rgb(232,3,46)"/><text x="49.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1780" width="4" height="15" fill="rgb(249,23,25)"/><text x="49.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1796" width="4" height="15" fill="rgb(247,77,7)"/><text x="49.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1812" width="4" height="15" fill="rgb(236,41,7)"/><text x="49.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="46" y="1828" width="4" height="15" fill="rgb(219,11,46)"/><text x="49.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1844" width="4" height="15" fill="rgb(245,87,23)"/><text x="49.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.28%)</title><rect x="46" y="1860" width="4" height="15" fill="rgb(246,207,1)"/><text x="49.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1876" width="4" height="15" fill="rgb(242,32,4)"/><text x="49.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1892" width="4" height="15" fill="rgb(209,81,30)"/><text x="49.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1908" width="4" height="15" fill="rgb(238,3,49)"/><text x="49.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="46" y="1924" width="4" height="15" fill="rgb(235,114,27)"/><text x="49.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1940" width="4" height="15" fill="rgb(206,49,16)"/><text x="49.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py) (1 samples, 0.28%)</title><rect x="46" y="1956" width="4" height="15" fill="rgb(234,88,23)"/><text x="49.00" y="1966.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (7 samples, 1.99%)</title><rect x="30" y="340" width="23" height="15" fill="rgb(226,198,10)"/><text x="33.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.99%)</title><rect x="30" y="356" width="23" height="15" fill="rgb(220,117,30)"/><text x="33.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.99%)</title><rect x="30" y="372" width="23" height="15" fill="rgb(238,9,43)"/><text x="33.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.99%)</title><rect x="30" y="388" width="23" height="15" fill="rgb(206,59,17)"/><text x="33.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.99%)</title><rect x="30" y="404" width="23" height="15" fill="rgb(227,0,2)"/><text x="33.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.99%)</title><rect x="30" y="420" width="23" height="15" fill="rgb(221,186,8)"/><text x="33.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (7 samples, 1.99%)</title><rect x="30" y="436" width="23" height="15" fill="rgb(216,22,20)"/><text x="33.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.99%)</title><rect x="30" y="452" width="23" height="15" fill="rgb(228,94,30)"/><text x="33.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.99%)</title><rect x="30" y="468" width="23" height="15" fill="rgb(244,126,19)"/><text x="33.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="43" y="484" width="10" height="15" fill="rgb(238,80,34)"/><text x="46.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.85%)</title><rect x="43" y="500" width="10" height="15" fill="rgb(238,35,25)"/><text x="46.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="43" y="516" width="10" height="15" fill="rgb(223,33,48)"/><text x="46.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.85%)</title><rect x="43" y="532" width="10" height="15" fill="rgb(234,132,27)"/><text x="46.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="43" y="548" width="10" height="15" fill="rgb(222,190,32)"/><text x="46.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="43" y="564" width="10" height="15" fill="rgb(208,208,31)"/><text x="46.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="43" y="580" width="10" height="15" fill="rgb(252,75,49)"/><text x="46.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.85%)</title><rect x="43" y="596" width="10" height="15" fill="rgb(243,154,28)"/><text x="46.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="43" y="612" width="10" height="15" fill="rgb(226,62,14)"/><text x="46.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.57%)</title><rect x="46" y="628" width="7" height="15" fill="rgb(243,165,27)"/><text x="49.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="46" y="644" width="7" height="15" fill="rgb(227,108,39)"/><text x="49.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="46" y="660" width="7" height="15" fill="rgb(252,212,12)"/><text x="49.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="46" y="676" width="7" height="15" fill="rgb(219,59,20)"/><text x="49.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.57%)</title><rect x="46" y="692" width="7" height="15" fill="rgb(213,171,52)"/><text x="49.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="46" y="708" width="7" height="15" fill="rgb(218,141,21)"/><text x="49.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.28%)</title><rect x="50" y="724" width="3" height="15" fill="rgb(214,118,7)"/><text x="53.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="50" y="740" width="3" height="15" fill="rgb(236,94,44)"/><text x="53.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="50" y="756" width="3" height="15" fill="rgb(218,48,51)"/><text x="53.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="50" y="772" width="3" height="15" fill="rgb(218,198,30)"/><text x="53.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="50" y="788" width="3" height="15" fill="rgb(251,208,9)"/><text x="53.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="50" y="804" width="3" height="15" fill="rgb(244,45,37)"/><text x="53.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/packers.py) (1 samples, 0.28%)</title><rect x="50" y="820" width="3" height="15" fill="rgb(241,223,10)"/><text x="53.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="50" y="836" width="3" height="15" fill="rgb(212,69,36)"/><text x="53.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="50" y="852" width="3" height="15" fill="rgb(207,12,18)"/><text x="53.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="50" y="868" width="3" height="15" fill="rgb(211,23,18)"/><text x="53.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="50" y="884" width="3" height="15" fill="rgb(219,79,40)"/><text x="53.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="50" y="900" width="3" height="15" fill="rgb(227,10,54)"/><text x="53.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/msgpack/__init__.py) (1 samples, 0.28%)</title><rect x="50" y="916" width="3" height="15" fill="rgb(246,218,18)"/><text x="53.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="50" y="932" width="3" height="15" fill="rgb(250,39,2)"/><text x="53.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="50" y="948" width="3" height="15" fill="rgb(252,48,15)"/><text x="53.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="50" y="964" width="3" height="15" fill="rgb(233,108,40)"/><text x="53.00" y="974.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="50" y="980" width="3" height="15" fill="rgb(222,109,11)"/><text x="53.00" y="990.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="50" y="996" width="3" height="15" fill="rgb(242,23,1)"/><text x="53.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="50" y="1012" width="3" height="15" fill="rgb(225,41,5)"/><text x="53.00" y="1022.50"></text></g><g><title>0x7f0d9892943a (?) (1 samples, 0.28%)</title><rect x="50" y="1028" width="3" height="15" fill="rgb(247,67,29)"/><text x="53.00" y="1038.50"></text></g><g><title>0x7f0dc822ee76 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="50" y="1044" width="3" height="15" fill="rgb(212,94,5)"/><text x="53.00" y="1054.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 2.27%)</title><rect x="30" y="244" width="26" height="15" fill="rgb(243,169,29)"/><text x="33.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.27%)</title><rect x="30" y="260" width="26" height="15" fill="rgb(224,141,29)"/><text x="33.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.27%)</title><rect x="30" y="276" width="26" height="15" fill="rgb(219,108,29)"/><text x="33.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.27%)</title><rect x="30" y="292" width="26" height="15" fill="rgb(238,113,52)"/><text x="33.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.27%)</title><rect x="30" y="308" width="26" height="15" fill="rgb(229,127,7)"/><text x="33.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.27%)</title><rect x="30" y="324" width="26" height="15" fill="rgb(212,201,25)"/><text x="33.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.28%)</title><rect x="53" y="340" width="3" height="15" fill="rgb(228,213,16)"/><text x="56.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="356" width="3" height="15" fill="rgb(215,169,5)"/><text x="56.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="372" width="3" height="15" fill="rgb(226,108,8)"/><text x="56.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="388" width="3" height="15" fill="rgb(252,44,39)"/><text x="56.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="404" width="3" height="15" fill="rgb(238,215,31)"/><text x="56.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="420" width="3" height="15" fill="rgb(246,98,28)"/><text x="56.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="436" width="3" height="15" fill="rgb(210,102,49)"/><text x="56.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="53" y="452" width="3" height="15" fill="rgb(227,89,44)"/><text x="56.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="468" width="3" height="15" fill="rgb(240,147,23)"/><text x="56.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.28%)</title><rect x="53" y="484" width="3" height="15" fill="rgb(242,6,6)"/><text x="56.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="500" width="3" height="15" fill="rgb(233,178,39)"/><text x="56.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="516" width="3" height="15" fill="rgb(226,187,22)"/><text x="56.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="532" width="3" height="15" fill="rgb(235,108,37)"/><text x="56.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="53" y="548" width="3" height="15" fill="rgb(237,34,12)"/><text x="56.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="564" width="3" height="15" fill="rgb(227,91,32)"/><text x="56.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.28%)</title><rect x="53" y="580" width="3" height="15" fill="rgb(233,66,7)"/><text x="56.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="596" width="3" height="15" fill="rgb(251,19,9)"/><text x="56.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="612" width="3" height="15" fill="rgb(244,54,41)"/><text x="56.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="628" width="3" height="15" fill="rgb(211,69,48)"/><text x="56.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="644" width="3" height="15" fill="rgb(213,220,18)"/><text x="56.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="660" width="3" height="15" fill="rgb(218,199,1)"/><text x="56.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="676" width="3" height="15" fill="rgb(226,18,16)"/><text x="56.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="53" y="692" width="3" height="15" fill="rgb(227,196,10)"/><text x="56.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="708" width="3" height="15" fill="rgb(254,202,48)"/><text x="56.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.28%)</title><rect x="53" y="724" width="3" height="15" fill="rgb(208,4,19)"/><text x="56.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="740" width="3" height="15" fill="rgb(237,118,26)"/><text x="56.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="756" width="3" height="15" fill="rgb(233,75,14)"/><text x="56.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="772" width="3" height="15" fill="rgb(230,159,51)"/><text x="56.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="53" y="788" width="3" height="15" fill="rgb(242,115,28)"/><text x="56.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="804" width="3" height="15" fill="rgb(238,147,24)"/><text x="56.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.28%)</title><rect x="53" y="820" width="3" height="15" fill="rgb(226,87,44)"/><text x="56.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="836" width="3" height="15" fill="rgb(249,78,9)"/><text x="56.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="852" width="3" height="15" fill="rgb(234,181,38)"/><text x="56.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="868" width="3" height="15" fill="rgb(238,82,5)"/><text x="56.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="53" y="884" width="3" height="15" fill="rgb(212,153,46)"/><text x="56.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="900" width="3" height="15" fill="rgb(227,164,46)"/><text x="56.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.28%)</title><rect x="53" y="916" width="3" height="15" fill="rgb(230,198,0)"/><text x="56.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="932" width="3" height="15" fill="rgb(210,71,31)"/><text x="56.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="948" width="3" height="15" fill="rgb(253,142,15)"/><text x="56.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="964" width="3" height="15" fill="rgb(242,164,5)"/><text x="56.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="980" width="3" height="15" fill="rgb(242,175,14)"/><text x="56.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="996" width="3" height="15" fill="rgb(212,26,29)"/><text x="56.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="1012" width="3" height="15" fill="rgb(227,8,53)"/><text x="56.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="53" y="1028" width="3" height="15" fill="rgb(233,93,25)"/><text x="56.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="1044" width="3" height="15" fill="rgb(217,97,44)"/><text x="56.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.28%)</title><rect x="53" y="1060" width="3" height="15" fill="rgb(206,110,5)"/><text x="56.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="1076" width="3" height="15" fill="rgb(238,162,46)"/><text x="56.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="1092" width="3" height="15" fill="rgb(246,84,37)"/><text x="56.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="1108" width="3" height="15" fill="rgb(228,99,20)"/><text x="56.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="53" y="1124" width="3" height="15" fill="rgb(206,122,41)"/><text x="56.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="1140" width="3" height="15" fill="rgb(247,29,17)"/><text x="56.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py) (1 samples, 0.28%)</title><rect x="53" y="1156" width="3" height="15" fill="rgb(249,186,26)"/><text x="56.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="1172" width="3" height="15" fill="rgb(252,166,37)"/><text x="56.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="1188" width="3" height="15" fill="rgb(215,203,37)"/><text x="56.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="53" y="1204" width="3" height="15" fill="rgb(235,182,42)"/><text x="56.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="53" y="1220" width="3" height="15" fill="rgb(215,225,46)"/><text x="56.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="53" y="1236" width="3" height="15" fill="rgb(232,134,40)"/><text x="56.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="53" y="1252" width="3" height="15" fill="rgb(239,80,1)"/><text x="56.00" y="1262.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.28%)</title><rect x="56" y="372" width="4" height="15" fill="rgb(221,109,29)"/><text x="59.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="56" y="388" width="4" height="15" fill="rgb(222,125,30)"/><text x="59.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="56" y="404" width="4" height="15" fill="rgb(239,204,50)"/><text x="59.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="56" y="420" width="4" height="15" fill="rgb(222,72,24)"/><text x="59.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="56" y="436" width="4" height="15" fill="rgb(221,138,7)"/><text x="59.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="56" y="452" width="4" height="15" fill="rgb(213,156,7)"/><text x="59.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="56" y="468" width="4" height="15" fill="rgb(237,47,17)"/><text x="59.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="56" y="484" width="4" height="15" fill="rgb(216,75,44)"/><text x="59.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.28%)</title><rect x="56" y="500" width="4" height="15" fill="rgb(226,78,5)"/><text x="59.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="56" y="516" width="4" height="15" fill="rgb(214,108,24)"/><text x="59.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="56" y="532" width="4" height="15" fill="rgb(243,78,19)"/><text x="59.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="56" y="548" width="4" height="15" fill="rgb(239,209,26)"/><text x="59.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="56" y="564" width="4" height="15" fill="rgb(211,146,44)"/><text x="59.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="56" y="580" width="4" height="15" fill="rgb(211,2,16)"/><text x="59.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (1 samples, 0.28%)</title><rect x="56" y="596" width="4" height="15" fill="rgb(242,220,7)"/><text x="59.00" y="606.50"></text></g><g><title>compile (re.py) (1 samples, 0.28%)</title><rect x="56" y="612" width="4" height="15" fill="rgb(213,221,36)"/><text x="59.00" y="622.50"></text></g><g><title>_compile (re.py) (1 samples, 0.28%)</title><rect x="56" y="628" width="4" height="15" fill="rgb(218,28,25)"/><text x="59.00" y="638.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.28%)</title><rect x="56" y="644" width="4" height="15" fill="rgb(242,154,16)"/><text x="59.00" y="654.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.28%)</title><rect x="56" y="660" width="4" height="15" fill="rgb(213,108,48)"/><text x="59.00" y="670.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.28%)</title><rect x="56" y="676" width="4" height="15" fill="rgb(244,210,11)"/><text x="59.00" y="686.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.28%)</title><rect x="56" y="692" width="4" height="15" fill="rgb(218,57,6)"/><text x="59.00" y="702.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.28%)</title><rect x="56" y="708" width="4" height="15" fill="rgb(240,33,0)"/><text x="59.00" y="718.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.28%)</title><rect x="56" y="724" width="4" height="15" fill="rgb(249,222,27)"/><text x="59.00" y="734.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.28%)</title><rect x="56" y="740" width="4" height="15" fill="rgb(212,5,45)"/><text x="59.00" y="750.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.28%)</title><rect x="56" y="756" width="4" height="15" fill="rgb(215,203,53)"/><text x="59.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/__init__.py) (1 samples, 0.28%)</title><rect x="60" y="372" width="3" height="15" fill="rgb(208,32,11)"/><text x="63.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="60" y="388" width="3" height="15" fill="rgb(243,94,17)"/><text x="63.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="60" y="404" width="3" height="15" fill="rgb(228,194,17)"/><text x="63.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="60" y="420" width="3" height="15" fill="rgb(244,88,45)"/><text x="63.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="60" y="436" width="3" height="15" fill="rgb(230,179,44)"/><text x="63.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="60" y="452" width="3" height="15" fill="rgb(205,203,9)"/><text x="63.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/polynomial.py) (1 samples, 0.28%)</title><rect x="60" y="468" width="3" height="15" fill="rgb(224,153,26)"/><text x="63.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="60" y="484" width="3" height="15" fill="rgb(242,119,9)"/><text x="63.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="60" y="500" width="3" height="15" fill="rgb(209,205,23)"/><text x="63.00" y="510.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="60" y="516" width="3" height="15" fill="rgb(211,170,16)"/><text x="63.00" y="526.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="60" y="532" width="3" height="15" fill="rgb(243,193,9)"/><text x="63.00" y="542.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="60" y="548" width="3" height="15" fill="rgb(242,37,39)"/><text x="63.00" y="558.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="60" y="564" width="3" height="15" fill="rgb(227,215,51)"/><text x="63.00" y="574.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="60" y="580" width="3" height="15" fill="rgb(218,99,6)"/><text x="63.00" y="590.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="60" y="596" width="3" height="15" fill="rgb(249,184,3)"/><text x="63.00" y="606.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="60" y="612" width="3" height="15" fill="rgb(241,49,9)"/><text x="63.00" y="622.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.28%)</title><rect x="60" y="628" width="3" height="15" fill="rgb(211,98,36)"/><text x="63.00" y="638.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.28%)</title><rect x="60" y="644" width="3" height="15" fill="rgb(239,201,39)"/><text x="63.00" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.83%)</title><rect x="10" y="68" width="56" height="15" fill="rgb(249,174,52)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.83%)</title><rect x="10" y="84" width="56" height="15" fill="rgb(238,156,35)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.83%)</title><rect x="10" y="100" width="56" height="15" fill="rgb(210,106,26)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 4.83%)</title><rect x="10" y="116" width="56" height="15" fill="rgb(235,133,4)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.83%)</title><rect x="10" y="132" width="56" height="15" fill="rgb(246,163,48)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_b_reg.py) (17 samples, 4.83%)</title><rect x="10" y="148" width="56" height="15" fill="rgb(215,189,3)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.83%)</title><rect x="10" y="164" width="56" height="15" fill="rgb(213,228,10)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.83%)</title><rect x="10" y="180" width="56" height="15" fill="rgb(248,205,32)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.12%)</title><rect x="30" y="196" width="36" height="15" fill="rgb(235,165,52)"/><text x="33.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 3.12%)</title><rect x="30" y="212" width="36" height="15" fill="rgb(251,120,43)"/><text x="33.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.12%)</title><rect x="30" y="228" width="36" height="15" fill="rgb(232,22,41)"/><text x="33.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 0.85%)</title><rect x="56" y="244" width="10" height="15" fill="rgb(215,163,6)"/><text x="59.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="56" y="260" width="10" height="15" fill="rgb(232,170,49)"/><text x="59.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="56" y="276" width="10" height="15" fill="rgb(229,101,44)"/><text x="59.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="56" y="292" width="10" height="15" fill="rgb(244,25,12)"/><text x="59.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="56" y="308" width="10" height="15" fill="rgb(216,8,2)"/><text x="59.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="56" y="324" width="10" height="15" fill="rgb(209,100,28)"/><text x="59.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.85%)</title><rect x="56" y="340" width="10" height="15" fill="rgb(222,45,49)"/><text x="59.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.85%)</title><rect x="56" y="356" width="10" height="15" fill="rgb(211,193,39)"/><text x="59.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py) (1 samples, 0.28%)</title><rect x="63" y="372" width="3" height="15" fill="rgb(220,74,17)"/><text x="66.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="63" y="388" width="3" height="15" fill="rgb(243,212,34)"/><text x="66.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="63" y="404" width="3" height="15" fill="rgb(236,192,49)"/><text x="66.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="63" y="420" width="3" height="15" fill="rgb(224,169,46)"/><text x="66.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="63" y="436" width="3" height="15" fill="rgb(243,222,36)"/><text x="66.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="63" y="452" width="3" height="15" fill="rgb(221,209,44)"/><text x="66.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="63" y="468" width="3" height="15" fill="rgb(244,90,29)"/><text x="66.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="63" y="484" width="3" height="15" fill="rgb(214,153,32)"/><text x="66.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py) (1 samples, 0.28%)</title><rect x="63" y="500" width="3" height="15" fill="rgb(236,171,28)"/><text x="66.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="63" y="516" width="3" height="15" fill="rgb(221,117,32)"/><text x="66.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="63" y="532" width="3" height="15" fill="rgb(240,7,3)"/><text x="66.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="63" y="548" width="3" height="15" fill="rgb(244,155,20)"/><text x="66.00" y="558.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="63" y="564" width="3" height="15" fill="rgb(222,65,29)"/><text x="66.00" y="574.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="63" y="580" width="3" height="15" fill="rgb(241,197,49)"/><text x="66.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="63" y="596" width="3" height="15" fill="rgb(212,25,9)"/><text x="66.00" y="606.50"></text></g><g><title>0x7f0dbaadc593 (?) (1 samples, 0.28%)</title><rect x="63" y="612" width="3" height="15" fill="rgb(247,117,34)"/><text x="66.00" y="622.50"></text></g><g><title>0x7f0dbaadc3dc (?) (1 samples, 0.28%)</title><rect x="63" y="628" width="3" height="15" fill="rgb(243,20,19)"/><text x="66.00" y="638.50"></text></g><g><title>profile0_skl (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py) (1 samples, 0.28%)</title><rect x="66" y="68" width="4" height="15" fill="rgb(249,201,22)"/><text x="69.00" y="78.50"></text></g><g><title>setup_profile0 (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py) (1 samples, 0.28%)</title><rect x="66" y="84" width="4" height="15" fill="rgb(212,226,7)"/><text x="69.00" y="94.50"></text></g><g><title>profile0 (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py) (1 samples, 0.28%)</title><rect x="66" y="100" width="4" height="15" fill="rgb(227,24,40)"/><text x="69.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="66" y="116" width="4" height="15" fill="rgb(208,62,24)"/><text x="69.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="66" y="132" width="4" height="15" fill="rgb(205,207,12)"/><text x="69.00" y="142.50"></text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.28%)</title><rect x="66" y="148" width="4" height="15" fill="rgb(222,80,18)"/><text x="69.00" y="158.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.28%)</title><rect x="66" y="164" width="4" height="15" fill="rgb(244,161,30)"/><text x="69.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.28%)</title><rect x="66" y="180" width="4" height="15" fill="rgb(230,169,33)"/><text x="69.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (1 samples, 0.28%)</title><rect x="66" y="196" width="4" height="15" fill="rgb(226,1,21)"/><text x="69.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.28%)</title><rect x="66" y="212" width="4" height="15" fill="rgb(227,101,20)"/><text x="69.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.28%)</title><rect x="66" y="228" width="4" height="15" fill="rgb(253,130,24)"/><text x="69.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (1 samples, 0.28%)</title><rect x="66" y="244" width="4" height="15" fill="rgb(216,86,7)"/><text x="69.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.28%)</title><rect x="66" y="260" width="4" height="15" fill="rgb(236,67,36)"/><text x="69.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="66" y="276" width="4" height="15" fill="rgb(213,47,29)"/><text x="69.00" y="286.50"></text></g><g><title>dgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="66" y="292" width="4" height="15" fill="rgb(253,150,51)"/><text x="69.00" y="302.50"></text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="66" y="308" width="4" height="15" fill="rgb(224,93,40)"/><text x="69.00" y="318.50"></text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="66" y="324" width="4" height="15" fill="rgb(244,125,31)"/><text x="69.00" y="334.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="66" y="340" width="4" height="15" fill="rgb(209,53,29)"/><text x="69.00" y="350.50"></text></g><g><title>sched_yield (libc-2.29.so) (1 samples, 0.28%)</title><rect x="66" y="356" width="4" height="15" fill="rgb(222,148,15)"/><text x="69.00" y="366.50"></text></g><g><title>0x7f0d8625bff9 (?) (1 samples, 0.28%)</title><rect x="70" y="212" width="3" height="15" fill="rgb(247,127,39)"/><text x="73.00" y="222.50"></text></g><g><title>0x7f0d86256ef6 (?) (1 samples, 0.28%)</title><rect x="70" y="228" width="3" height="15" fill="rgb(209,194,26)"/><text x="73.00" y="238.50"></text></g><g><title>0x7f0d8624b962 (?) (1 samples, 0.28%)</title><rect x="70" y="244" width="3" height="15" fill="rgb(211,86,7)"/><text x="73.00" y="254.50"></text></g><g><title>0x7f0d8627f7a7 (?) (1 samples, 0.28%)</title><rect x="70" y="260" width="3" height="15" fill="rgb(205,213,24)"/><text x="73.00" y="270.50"></text></g><g><title>0x7f0d8627f379 (?) (1 samples, 0.28%)</title><rect x="70" y="276" width="3" height="15" fill="rgb(226,213,45)"/><text x="73.00" y="286.50"></text></g><g><title>0x7f0d866dd8b8 (?) (1 samples, 0.28%)</title><rect x="70" y="292" width="3" height="15" fill="rgb(251,118,48)"/><text x="73.00" y="302.50"></text></g><g><title>0x7f0d866dbc7f (?) (1 samples, 0.28%)</title><rect x="70" y="308" width="3" height="15" fill="rgb(226,183,17)"/><text x="73.00" y="318.50"></text></g><g><title>0x7f0d866ee99c (?) (1 samples, 0.28%)</title><rect x="70" y="324" width="3" height="15" fill="rgb(207,190,12)"/><text x="73.00" y="334.50"></text></g><g><title>0x7f0d863737c3 (?) (1 samples, 0.28%)</title><rect x="70" y="340" width="3" height="15" fill="rgb(207,189,14)"/><text x="73.00" y="350.50"></text></g><g><title>0x7f0d8665cfac (?) (1 samples, 0.28%)</title><rect x="70" y="356" width="3" height="15" fill="rgb(234,169,13)"/><text x="73.00" y="366.50"></text></g><g><title>0x7f0d7e3d40f1 (?) (1 samples, 0.28%)</title><rect x="70" y="372" width="3" height="15" fill="rgb(211,52,21)"/><text x="73.00" y="382.50"></text></g><g><title>0x7f0d7e41a5a7 (?) (1 samples, 0.28%)</title><rect x="70" y="388" width="3" height="15" fill="rgb(244,58,33)"/><text x="73.00" y="398.50"></text></g><g><title>0x7f0d7e4ac30f (?) (1 samples, 0.28%)</title><rect x="70" y="404" width="3" height="15" fill="rgb(246,57,50)"/><text x="73.00" y="414.50"></text></g><g><title>0x7f0d7e5d1d0e (?) (1 samples, 0.28%)</title><rect x="70" y="420" width="3" height="15" fill="rgb(213,165,47)"/><text x="73.00" y="430.50"></text></g><g><title>0x7f0d7deac9ee (?) (1 samples, 0.28%)</title><rect x="70" y="436" width="3" height="15" fill="rgb(206,16,44)"/><text x="73.00" y="446.50"></text></g><g><title>0x7f0d7decaf98 (?) (1 samples, 0.28%)</title><rect x="70" y="452" width="3" height="15" fill="rgb(213,21,12)"/><text x="73.00" y="462.50"></text></g><g><title>0x7f0d7de46d8b (?) (1 samples, 0.28%)</title><rect x="70" y="468" width="3" height="15" fill="rgb(241,138,51)"/><text x="73.00" y="478.50"></text></g><g><title>0x7f0d7de477b5 (?) (1 samples, 0.28%)</title><rect x="70" y="484" width="3" height="15" fill="rgb(217,165,49)"/><text x="73.00" y="494.50"></text></g><g><title>0x7f0d7de51c5d (?) (1 samples, 0.28%)</title><rect x="70" y="500" width="3" height="15" fill="rgb(234,197,37)"/><text x="73.00" y="510.50"></text></g><g><title>0x7f0d7df07517 (?) (1 samples, 0.28%)</title><rect x="70" y="516" width="3" height="15" fill="rgb(214,27,12)"/><text x="73.00" y="526.50"></text></g><g><title>0x7f0d7de593fa (?) (1 samples, 0.28%)</title><rect x="70" y="532" width="3" height="15" fill="rgb(233,56,48)"/><text x="73.00" y="542.50"></text></g><g><title>syscall (libc-2.29.so) (1 samples, 0.28%)</title><rect x="70" y="548" width="3" height="15" fill="rgb(207,180,33)"/><text x="73.00" y="558.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.28%)</title><rect x="73" y="212" width="4" height="15" fill="rgb(224,47,14)"/><text x="76.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="73" y="228" width="4" height="15" fill="rgb(216,148,49)"/><text x="76.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="73" y="244" width="4" height="15" fill="rgb(205,155,16)"/><text x="76.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="73" y="260" width="4" height="15" fill="rgb(248,134,3)"/><text x="76.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="73" y="276" width="4" height="15" fill="rgb(244,183,2)"/><text x="76.00" y="286.50"></text></g><g><title>mkl_blas_avx_sgemm_kernel_0 (onnxruntime/capi/libmklml_intel.so) (11 samples, 3.12%)</title><rect x="77" y="212" width="36" height="15" fill="rgb(230,64,18)"/><text x="80.00" y="222.50">mkl..</text></g><g><title>mkl_blas_avx_sgemm_copyan (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.85%)</title><rect x="117" y="564" width="10" height="15" fill="rgb(249,54,15)"/><text x="120.00" y="574.50"></text></g><g><title>mkl_blas_avx_sgemm_copybn (onnxruntime/capi/libmklml_intel.so) (4 samples, 1.14%)</title><rect x="127" y="564" width="13" height="15" fill="rgb(242,186,54)"/><text x="130.00" y="574.50"></text></g><g><title>mkl_blas_avx_sgemm_get_bufs (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.28%)</title><rect x="140" y="564" width="4" height="15" fill="rgb(254,229,6)"/><text x="143.00" y="574.50"></text></g><g><title>mkl_serv_allocate (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.28%)</title><rect x="140" y="580" width="4" height="15" fill="rgb(250,152,51)"/><text x="143.00" y="590.50"></text></g><g><title>0x7f0d7e3960c0 (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.28%)</title><rect x="140" y="596" width="4" height="15" fill="rgb(245,71,19)"/><text x="143.00" y="606.50"></text></g><g><title>__kmp_fork_call (libiomp5.so) (11 samples, 3.12%)</title><rect x="113" y="452" width="37" height="15" fill="rgb(211,50,51)"/><text x="116.00" y="462.50">__k..</text></g><g><title>__kmp_invoke_task_func (libiomp5.so) (11 samples, 3.12%)</title><rect x="113" y="468" width="37" height="15" fill="rgb(218,188,4)"/><text x="116.00" y="478.50">__k..</text></g><g><title>__kmp_invoke_microtask (libiomp5.so) (11 samples, 3.12%)</title><rect x="113" y="484" width="37" height="15" fill="rgb(238,162,12)"/><text x="116.00" y="494.50">__k..</text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (11 samples, 3.12%)</title><rect x="113" y="500" width="37" height="15" fill="rgb(220,112,8)"/><text x="116.00" y="510.50">mkl..</text></g><g><title>mkl_blas_sgemm_2D_bsrc (onnxruntime/capi/libmklml_intel.so) (10 samples, 2.84%)</title><rect x="117" y="516" width="33" height="15" fill="rgb(214,5,37)"/><text x="120.00" y="526.50">mk..</text></g><g><title>mkl_blas_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (10 samples, 2.84%)</title><rect x="117" y="532" width="33" height="15" fill="rgb(208,103,48)"/><text x="120.00" y="542.50">mk..</text></g><g><title>mkl_blas_avx_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (10 samples, 2.84%)</title><rect x="117" y="548" width="33" height="15" fill="rgb(217,58,31)"/><text x="120.00" y="558.50">mk..</text></g><g><title>mkl_blas_avx_sgemm_ker0 (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.57%)</title><rect x="144" y="564" width="6" height="15" fill="rgb(219,15,10)"/><text x="147.00" y="574.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0_pst (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.57%)</title><rect x="144" y="580" width="6" height="15" fill="rgb(253,124,36)"/><text x="147.00" y="590.50"></text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (31 samples, 8.81%)</title><rect x="113" y="420" width="104" height="15" fill="rgb(253,63,45)"/><text x="116.00" y="430.50">mkl_blas_sge..</text></g><g><title>__kmpc_fork_call (libiomp5.so) (31 samples, 8.81%)</title><rect x="113" y="436" width="104" height="15" fill="rgb(227,201,18)"/><text x="116.00" y="446.50">__kmpc_fork_..</text></g><g><title>__kmp_join_call (libiomp5.so) (20 samples, 5.68%)</title><rect x="150" y="452" width="67" height="15" fill="rgb(222,112,18)"/><text x="153.00" y="462.50">__kmp_j..</text></g><g><title>__kmp_internal_join (libiomp5.so) (20 samples, 5.68%)</title><rect x="150" y="468" width="67" height="15" fill="rgb(227,146,24)"/><text x="153.00" y="478.50">__kmp_i..</text></g><g><title>__kmp_join_barrier (libiomp5.so) (20 samples, 5.68%)</title><rect x="150" y="484" width="67" height="15" fill="rgb(222,21,41)"/><text x="153.00" y="494.50">__kmp_j..</text></g><g><title>_INTERNAL_25_______src_kmp_barrier_cpp_50ae66a0::__kmp_hyper_barrier_gather (libiomp5.so) (20 samples, 5.68%)</title><rect x="150" y="500" width="67" height="15" fill="rgb(207,67,47)"/><text x="153.00" y="510.50">_INTERN..</text></g><g><title>sched_yield (libc-2.29.so) (4 samples, 1.14%)</title><rect x="204" y="516" width="13" height="15" fill="rgb(246,110,32)"/><text x="207.00" y="526.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (50 samples, 14.20%)</title><rect x="113" y="340" width="168" height="15" fill="rgb(231,211,51)"/><text x="116.00" y="350.50">onnxruntime::Gemm&lt;flo..</text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (50 samples, 14.20%)</title><rect x="113" y="356" width="168" height="15" fill="rgb(248,49,13)"/><text x="116.00" y="366.50">onnxruntime::math::Ge..</text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (50 samples, 14.20%)</title><rect x="113" y="372" width="168" height="15" fill="rgb(241,97,49)"/><text x="116.00" y="382.50">cblas_sgemm (onnxrunt..</text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (50 samples, 14.20%)</title><rect x="113" y="388" width="168" height="15" fill="rgb(246,74,11)"/><text x="116.00" y="398.50">sgemm_ (onnxruntime/c..</text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (50 samples, 14.20%)</title><rect x="113" y="404" width="168" height="15" fill="rgb(240,31,8)"/><text x="116.00" y="414.50">mkl_blas_sgemm (onnxr..</text></g><g><title>mkl_blas_sgemv (onnxruntime/capi/libmklml_intel.so) (19 samples, 5.40%)</title><rect x="217" y="420" width="64" height="15" fill="rgb(237,129,9)"/><text x="220.00" y="430.50">mkl_bla..</text></g><g><title>mkl_blas_sgemv_omp (onnxruntime/capi/libmklml_intel.so) (19 samples, 5.40%)</title><rect x="217" y="436" width="64" height="15" fill="rgb(217,218,3)"/><text x="220.00" y="446.50">mkl_bla..</text></g><g><title>__kmpc_fork_call (libiomp5.so) (19 samples, 5.40%)</title><rect x="217" y="452" width="64" height="15" fill="rgb(216,143,36)"/><text x="220.00" y="462.50">__kmpc_..</text></g><g><title>__kmp_join_call (libiomp5.so) (19 samples, 5.40%)</title><rect x="217" y="468" width="64" height="15" fill="rgb(211,52,41)"/><text x="220.00" y="478.50">__kmp_j..</text></g><g><title>__kmp_internal_join (libiomp5.so) (19 samples, 5.40%)</title><rect x="217" y="484" width="64" height="15" fill="rgb(214,147,30)"/><text x="220.00" y="494.50">__kmp_i..</text></g><g><title>__kmp_join_barrier (libiomp5.so) (19 samples, 5.40%)</title><rect x="217" y="500" width="64" height="15" fill="rgb(209,97,13)"/><text x="220.00" y="510.50">__kmp_j..</text></g><g><title>_INTERNAL_25_______src_kmp_barrier_cpp_50ae66a0::__kmp_hyper_barrier_gather (libiomp5.so) (19 samples, 5.40%)</title><rect x="217" y="516" width="64" height="15" fill="rgb(240,218,13)"/><text x="220.00" y="526.50">_INTERN..</text></g><g><title>sched_yield (libc-2.29.so) (2 samples, 0.57%)</title><rect x="274" y="532" width="7" height="15" fill="rgb(220,137,41)"/><text x="277.00" y="542.50"></text></g><g><title>profile (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py) (64 samples, 18.18%)</title><rect x="70" y="100" width="214" height="15" fill="rgb(205,83,49)"/><text x="73.00" y="110.50">profile (bench_MLPRegressor_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (64 samples, 18.18%)</title><rect x="70" y="116" width="214" height="15" fill="rgb(246,147,2)"/><text x="73.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (64 samples, 18.18%)</title><rect x="70" y="132" width="214" height="15" fill="rgb(239,128,30)"/><text x="73.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (64 samples, 18.18%)</title><rect x="70" y="148" width="214" height="15" fill="rgb(227,62,44)"/><text x="73.00" y="158.50">run (mlprodict/onnxrt/onnx_i..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (64 samples, 18.18%)</title><rect x="70" y="164" width="214" height="15" fill="rgb(240,35,51)"/><text x="73.00" y="174.50">_run_whole_runtime (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (64 samples, 18.18%)</title><rect x="70" y="180" width="214" height="15" fill="rgb(236,10,32)"/><text x="73.00" y="190.50">run (mlprodict/onnxrt/ops_wh..</text></g><g><title>run (onnxruntime/capi/session.py) (64 samples, 18.18%)</title><rect x="70" y="196" width="214" height="15" fill="rgb(208,137,28)"/><text x="73.00" y="206.50">run (onnxruntime/capi/sessio..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 14.49%)</title><rect x="113" y="212" width="171" height="15" fill="rgb(232,59,22)"/><text x="116.00" y="222.50">pybind11::cpp_function..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 14.49%)</title><rect x="113" y="228" width="171" height="15" fill="rgb(232,216,52)"/><text x="116.00" y="238.50">void pybind11::cpp_fun..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 14.49%)</title><rect x="113" y="244" width="171" height="15" fill="rgb(221,24,38)"/><text x="116.00" y="254.50">onnxruntime::python::a..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 14.49%)</title><rect x="113" y="260" width="171" height="15" fill="rgb(234,205,51)"/><text x="116.00" y="270.50">onnxruntime::Inference..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 14.49%)</title><rect x="113" y="276" width="171" height="15" fill="rgb(239,228,36)"/><text x="116.00" y="286.50">onnxruntime::Inference..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 14.49%)</title><rect x="113" y="292" width="171" height="15" fill="rgb(231,1,17)"/><text x="116.00" y="302.50">onnxruntime::utils::Ex..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 14.49%)</title><rect x="113" y="308" width="171" height="15" fill="rgb(235,183,24)"/><text x="116.00" y="318.50">onnxruntime::utils::Ex..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 14.49%)</title><rect x="113" y="324" width="171" height="15" fill="rgb(210,119,32)"/><text x="116.00" y="334.50">onnxruntime::Sequentia..</text></g><g><title>onnxruntime::Relu&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="281" y="340" width="3" height="15" fill="rgb(225,160,30)"/><text x="284.00" y="350.50"></text></g><g><title>profile_ort (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py) (65 samples, 18.47%)</title><rect x="70" y="68" width="218" height="15" fill="rgb(218,172,48)"/><text x="73.00" y="78.50">profile_ort (bench_MLPRegres..</text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py) (65 samples, 18.47%)</title><rect x="70" y="84" width="218" height="15" fill="rgb(232,5,31)"/><text x="73.00" y="94.50">setup_profile (bench_MLPRegr..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="284" y="100" width="4" height="15" fill="rgb(254,36,32)"/><text x="287.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="284" y="116" width="4" height="15" fill="rgb(221,109,2)"/><text x="287.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="284" y="132" width="4" height="15" fill="rgb(247,195,2)"/><text x="287.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.28%)</title><rect x="284" y="148" width="4" height="15" fill="rgb(253,164,12)"/><text x="287.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.28%)</title><rect x="284" y="164" width="4" height="15" fill="rgb(205,189,28)"/><text x="287.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="284" y="180" width="4" height="15" fill="rgb(224,196,16)"/><text x="287.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="284" y="196" width="4" height="15" fill="rgb(246,200,26)"/><text x="287.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="284" y="212" width="4" height="15" fill="rgb(253,186,30)"/><text x="287.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="284" y="228" width="4" height="15" fill="rgb(224,68,4)"/><text x="287.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="284" y="244" width="4" height="15" fill="rgb(234,65,8)"/><text x="287.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.28%)</title><rect x="284" y="260" width="4" height="15" fill="rgb(213,101,47)"/><text x="287.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="284" y="276" width="4" height="15" fill="rgb(231,177,19)"/><text x="287.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="284" y="292" width="4" height="15" fill="rgb(205,201,1)"/><text x="287.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="284" y="308" width="4" height="15" fill="rgb(217,2,34)"/><text x="287.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="284" y="324" width="4" height="15" fill="rgb(236,66,45)"/><text x="287.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="284" y="340" width="4" height="15" fill="rgb(241,83,7)"/><text x="287.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.28%)</title><rect x="284" y="356" width="4" height="15" fill="rgb(248,188,10)"/><text x="287.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="284" y="372" width="4" height="15" fill="rgb(242,152,0)"/><text x="287.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="284" y="388" width="4" height="15" fill="rgb(250,106,21)"/><text x="287.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="284" y="404" width="4" height="15" fill="rgb(215,73,14)"/><text x="287.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="284" y="420" width="4" height="15" fill="rgb(213,182,48)"/><text x="287.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="284" y="436" width="4" height="15" fill="rgb(239,224,26)"/><text x="287.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (1 samples, 0.28%)</title><rect x="284" y="452" width="4" height="15" fill="rgb(212,213,17)"/><text x="287.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="284" y="468" width="4" height="15" fill="rgb(214,174,46)"/><text x="287.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="284" y="484" width="4" height="15" fill="rgb(205,116,1)"/><text x="287.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="284" y="500" width="4" height="15" fill="rgb(234,120,31)"/><text x="287.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="284" y="516" width="4" height="15" fill="rgb(213,84,30)"/><text x="287.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="284" y="532" width="4" height="15" fill="rgb(213,29,40)"/><text x="287.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="284" y="548" width="4" height="15" fill="rgb(206,136,24)"/><text x="287.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.28%)</title><rect x="284" y="564" width="4" height="15" fill="rgb(250,68,14)"/><text x="287.00" y="574.50"></text></g><g><title>0x7f0dc84a0995 (libdl-2.29.so) (1 samples, 0.28%)</title><rect x="284" y="580" width="4" height="15" fill="rgb(239,34,13)"/><text x="287.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.28%)</title><rect x="284" y="596" width="4" height="15" fill="rgb(244,199,0)"/><text x="287.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.28%)</title><rect x="284" y="612" width="4" height="15" fill="rgb(207,191,34)"/><text x="287.00" y="622.50"></text></g><g><title>0x7f0dc84a0258 (libdl-2.29.so) (1 samples, 0.28%)</title><rect x="284" y="628" width="4" height="15" fill="rgb(207,11,1)"/><text x="287.00" y="638.50"></text></g><g><title>0x7f0dc84edd7a (ld-2.29.so) (1 samples, 0.28%)</title><rect x="284" y="644" width="4" height="15" fill="rgb(210,185,23)"/><text x="287.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.28%)</title><rect x="284" y="660" width="4" height="15" fill="rgb(236,76,8)"/><text x="287.00" y="670.50"></text></g><g><title>0x7f0dc84ee345 (ld-2.29.so) (1 samples, 0.28%)</title><rect x="284" y="676" width="4" height="15" fill="rgb(237,70,11)"/><text x="287.00" y="686.50"></text></g><g><title>0x7f0dc84e6fec (ld-2.29.so) (1 samples, 0.28%)</title><rect x="284" y="692" width="4" height="15" fill="rgb(212,145,1)"/><text x="287.00" y="702.50"></text></g><g><title>0x7f0dc84e556b (ld-2.29.so) (1 samples, 0.28%)</title><rect x="284" y="708" width="4" height="15" fill="rgb(243,160,13)"/><text x="287.00" y="718.50"></text></g><g><title>0x7f0dc84e4c9e (ld-2.29.so) (1 samples, 0.28%)</title><rect x="284" y="724" width="4" height="15" fill="rgb(241,28,9)"/><text x="287.00" y="734.50"></text></g><g><title>0x7f0dc8239124 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="294" y="276" width="4" height="15" fill="rgb(224,118,23)"/><text x="297.00" y="286.50"></text></g><g><title>_mm_add_ps (xmmintrin.h) (1 samples, 0.28%)</title><rect x="298" y="356" width="3" height="15" fill="rgb(233,13,51)"/><text x="301.00" y="366.50"></text></g><g><title>FLOAT_add (loops.c.src) (2 samples, 0.57%)</title><rect x="298" y="308" width="7" height="15" fill="rgb(227,71,6)"/><text x="301.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (2 samples, 0.57%)</title><rect x="298" y="324" width="7" height="15" fill="rgb(243,213,20)"/><text x="301.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (2 samples, 0.57%)</title><rect x="298" y="340" width="7" height="15" fill="rgb(254,12,15)"/><text x="301.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.28%)</title><rect x="301" y="356" width="4" height="15" fill="rgb(253,94,18)"/><text x="304.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.28%)</title><rect x="305" y="308" width="3" height="15" fill="rgb(209,29,34)"/><text x="308.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.28%)</title><rect x="305" y="324" width="3" height="15" fill="rgb(210,204,45)"/><text x="308.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.28%)</title><rect x="305" y="340" width="3" height="15" fill="rgb(245,98,24)"/><text x="308.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (5 samples, 1.42%)</title><rect x="294" y="228" width="17" height="15" fill="rgb(210,193,20)"/><text x="297.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.42%)</title><rect x="294" y="244" width="17" height="15" fill="rgb(205,58,20)"/><text x="297.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.42%)</title><rect x="294" y="260" width="17" height="15" fill="rgb(236,12,38)"/><text x="297.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.14%)</title><rect x="298" y="276" width="13" height="15" fill="rgb(254,62,40)"/><text x="301.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.14%)</title><rect x="298" y="292" width="13" height="15" fill="rgb(223,214,30)"/><text x="301.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.28%)</title><rect x="308" y="308" width="3" height="15" fill="rgb(228,182,5)"/><text x="311.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.28%)</title><rect x="308" y="324" width="3" height="15" fill="rgb(233,4,44)"/><text x="311.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.28%)</title><rect x="308" y="340" width="3" height="15" fill="rgb(229,222,29)"/><text x="311.00" y="350.50"></text></g><g><title>0x7f0dc8238f4a (libc-2.29.so) (1 samples, 0.28%)</title><rect x="308" y="356" width="3" height="15" fill="rgb(250,44,29)"/><text x="311.00" y="366.50"></text></g><g><title>0x7f0dc743ad70 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="325" y="340" width="3" height="15" fill="rgb(225,96,34)"/><text x="328.00" y="350.50"></text></g><g><title>0x7f0dc8239103 (libc-2.29.so) (4 samples, 1.14%)</title><rect x="328" y="340" width="13" height="15" fill="rgb(232,36,2)"/><text x="331.00" y="350.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="341" y="420" width="4" height="15" fill="rgb(225,38,36)"/><text x="344.00" y="430.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="341" y="436" width="4" height="15" fill="rgb(252,34,3)"/><text x="344.00" y="446.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="345" y="436" width="3" height="15" fill="rgb(220,218,12)"/><text x="348.00" y="446.50"></text></g><g><title>__lll_unlock_wake (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="345" y="452" width="3" height="15" fill="rgb(237,58,46)"/><text x="348.00" y="462.50"></text></g><g><title>gemm (cblasfuncs.c) (11 samples, 3.12%)</title><rect x="341" y="340" width="37" height="15" fill="rgb(222,184,49)"/><text x="344.00" y="350.50">gem..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 3.12%)</title><rect x="341" y="356" width="37" height="15" fill="rgb(216,210,17)"/><text x="344.00" y="366.50">cbl..</text></g><g><title>sgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 3.12%)</title><rect x="341" y="372" width="37" height="15" fill="rgb(226,132,14)"/><text x="344.00" y="382.50">sge..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 3.12%)</title><rect x="341" y="388" width="37" height="15" fill="rgb(229,212,19)"/><text x="344.00" y="398.50">gem..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 3.12%)</title><rect x="341" y="404" width="37" height="15" fill="rgb(245,119,2)"/><text x="344.00" y="414.50">exe..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (10 samples, 2.84%)</title><rect x="345" y="420" width="33" height="15" fill="rgb(231,139,32)"/><text x="348.00" y="430.50">ex..</text></g><g><title>sched_yield (libc-2.29.so) (9 samples, 2.56%)</title><rect x="348" y="436" width="30" height="15" fill="rgb(220,160,11)"/><text x="351.00" y="446.50">sc..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (31 samples, 8.81%)</title><rect x="325" y="276" width="104" height="15" fill="rgb(254,138,53)"/><text x="328.00" y="286.50">array_implem..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (31 samples, 8.81%)</title><rect x="325" y="292" width="104" height="15" fill="rgb(228,68,54)"/><text x="328.00" y="302.50">array_matrix..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (31 samples, 8.81%)</title><rect x="325" y="308" width="104" height="15" fill="rgb(246,178,4)"/><text x="328.00" y="318.50">PyArray_Matr..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (31 samples, 8.81%)</title><rect x="325" y="324" width="104" height="15" fill="rgb(221,202,44)"/><text x="328.00" y="334.50">cblas_matrix..</text></g><g><title>gemv (cblasfuncs.c) (15 samples, 4.26%)</title><rect x="378" y="340" width="51" height="15" fill="rgb(229,84,31)"/><text x="381.00" y="350.50">gemv ..</text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 4.26%)</title><rect x="378" y="356" width="51" height="15" fill="rgb(231,69,42)"/><text x="381.00" y="366.50">cblas..</text></g><g><title>sgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 4.26%)</title><rect x="378" y="372" width="51" height="15" fill="rgb(210,42,47)"/><text x="381.00" y="382.50">sgemv..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 4.26%)</title><rect x="378" y="388" width="51" height="15" fill="rgb(220,217,15)"/><text x="381.00" y="398.50">exec_..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 4.26%)</title><rect x="378" y="404" width="51" height="15" fill="rgb(246,127,20)"/><text x="381.00" y="414.50">exec_..</text></g><g><title>sched_yield (libc-2.29.so) (15 samples, 4.26%)</title><rect x="378" y="420" width="51" height="15" fill="rgb(227,52,52)"/><text x="381.00" y="430.50">sched..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (55 samples, 15.62%)</title><rect x="311" y="228" width="185" height="15" fill="rgb(245,146,26)"/><text x="314.00" y="238.50">_run (mlprodict/onnxrt/o..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (55 samples, 15.62%)</title><rect x="311" y="244" width="185" height="15" fill="rgb(210,65,52)"/><text x="314.00" y="254.50">numpy_dot_inplace (mlpro..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (54 samples, 15.34%)</title><rect x="315" y="260" width="181" height="15" fill="rgb(212,2,46)"/><text x="318.00" y="270.50">dot (&lt;__array_function_..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 5.68%)</title><rect x="429" y="276" width="67" height="15" fill="rgb(237,220,15)"/><text x="432.00" y="286.50">sgemm_k..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (44 samples, 12.50%)</title><rect x="496" y="276" width="147" height="15" fill="rgb(248,121,36)"/><text x="499.00" y="286.50">execute_legacy_ufu..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (44 samples, 12.50%)</title><rect x="496" y="292" width="147" height="15" fill="rgb(226,140,33)"/><text x="499.00" y="302.50">trivial_three_oper..</text></g><g><title>FLOAT_maximum (loops.c.src) (44 samples, 12.50%)</title><rect x="496" y="308" width="147" height="15" fill="rgb(249,38,12)"/><text x="499.00" y="318.50">FLOAT_maximum (loo..</text></g><g><title>profile (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py) (107 samples, 30.40%)</title><rect x="288" y="100" width="358" height="15" fill="rgb(220,128,45)"/><text x="291.00" y="110.50">profile (bench_MLPRegressor_default_b_reg_1000_5..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (107 samples, 30.40%)</title><rect x="288" y="116" width="358" height="15" fill="rgb(245,41,50)"/><text x="291.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (107 samples, 30.40%)</title><rect x="288" y="132" width="358" height="15" fill="rgb(250,77,11)"/><text x="291.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (107 samples, 30.40%)</title><rect x="288" y="148" width="358" height="15" fill="rgb(220,7,33)"/><text x="291.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (107 samples, 30.40%)</title><rect x="288" y="164" width="358" height="15" fill="rgb(230,153,1)"/><text x="291.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (107 samples, 30.40%)</title><rect x="288" y="180" width="358" height="15" fill="rgb(208,202,45)"/><text x="291.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (105 samples, 29.83%)</title><rect x="294" y="196" width="352" height="15" fill="rgb(243,146,53)"/><text x="297.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (105 samples, 29.83%)</title><rect x="294" y="212" width="352" height="15" fill="rgb(250,167,52)"/><text x="297.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py) (45 samples, 12.78%)</title><rect x="496" y="228" width="150" height="15" fill="rgb(238,132,26)"/><text x="499.00" y="238.50">_run (mlprodict/onn..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (45 samples, 12.78%)</title><rect x="496" y="244" width="150" height="15" fill="rgb(253,65,40)"/><text x="499.00" y="254.50">ufunc_generic_call ..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (45 samples, 12.78%)</title><rect x="496" y="260" width="150" height="15" fill="rgb(222,89,33)"/><text x="499.00" y="270.50">PyUFunc_GenericFunc..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.28%)</title><rect x="643" y="276" width="3" height="15" fill="rgb(205,170,35)"/><text x="646.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.28%)</title><rect x="643" y="292" width="3" height="15" fill="rgb(244,103,48)"/><text x="646.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="643" y="308" width="3" height="15" fill="rgb(254,163,11)"/><text x="646.00" y="318.50"></text></g><g><title>profile_pyrt (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py) (108 samples, 30.68%)</title><rect x="288" y="68" width="362" height="15" fill="rgb(221,14,7)"/><text x="291.00" y="78.50">profile_pyrt (bench_MLPRegressor_default_b_reg_10..</text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py) (108 samples, 30.68%)</title><rect x="288" y="84" width="362" height="15" fill="rgb(207,213,8)"/><text x="291.00" y="94.50">setup_profile (bench_MLPRegressor_default_b_reg_1..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="646" y="100" width="4" height="15" fill="rgb(253,99,42)"/><text x="649.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="646" y="116" width="4" height="15" fill="rgb(216,159,2)"/><text x="649.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="646" y="132" width="4" height="15" fill="rgb(206,212,49)"/><text x="649.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.28%)</title><rect x="646" y="148" width="4" height="15" fill="rgb(253,27,48)"/><text x="649.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.28%)</title><rect x="646" y="164" width="4" height="15" fill="rgb(223,102,2)"/><text x="649.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.28%)</title><rect x="646" y="180" width="4" height="15" fill="rgb(222,228,6)"/><text x="649.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.28%)</title><rect x="646" y="196" width="4" height="15" fill="rgb(224,90,18)"/><text x="649.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="646" y="212" width="4" height="15" fill="rgb(229,21,41)"/><text x="649.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="646" y="228" width="4" height="15" fill="rgb(242,136,4)"/><text x="649.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="646" y="244" width="4" height="15" fill="rgb(219,3,19)"/><text x="649.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="646" y="260" width="4" height="15" fill="rgb(249,41,11)"/><text x="649.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="646" y="276" width="4" height="15" fill="rgb(206,173,7)"/><text x="649.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.28%)</title><rect x="646" y="292" width="4" height="15" fill="rgb(221,211,44)"/><text x="649.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="646" y="308" width="4" height="15" fill="rgb(227,76,52)"/><text x="649.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="646" y="324" width="4" height="15" fill="rgb(250,49,30)"/><text x="649.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="646" y="340" width="4" height="15" fill="rgb(251,162,48)"/><text x="649.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="646" y="356" width="4" height="15" fill="rgb(211,58,47)"/><text x="649.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="646" y="372" width="4" height="15" fill="rgb(234,68,42)"/><text x="649.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.28%)</title><rect x="646" y="388" width="4" height="15" fill="rgb(211,91,13)"/><text x="649.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.28%)</title><rect x="646" y="404" width="4" height="15" fill="rgb(218,214,38)"/><text x="649.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.28%)</title><rect x="646" y="420" width="4" height="15" fill="rgb(218,114,46)"/><text x="649.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.28%)</title><rect x="646" y="436" width="4" height="15" fill="rgb(244,185,21)"/><text x="649.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.28%)</title><rect x="646" y="452" width="4" height="15" fill="rgb(205,89,51)"/><text x="649.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.28%)</title><rect x="646" y="468" width="4" height="15" fill="rgb(234,150,53)"/><text x="649.00" y="478.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.28%)</title><rect x="646" y="484" width="4" height="15" fill="rgb(217,212,22)"/><text x="649.00" y="494.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="646" y="500" width="4" height="15" fill="rgb(239,26,43)"/><text x="649.00" y="510.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.28%)</title><rect x="667" y="388" width="3" height="15" fill="rgb(222,67,16)"/><text x="670.00" y="398.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (42 samples, 11.93%)</title><rect x="667" y="324" width="140" height="15" fill="rgb(226,14,54)"/><text x="670.00" y="334.50">_clip_dep_invoke_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (42 samples, 11.93%)</title><rect x="667" y="340" width="140" height="15" fill="rgb(250,41,10)"/><text x="670.00" y="350.50">ufunc_generic_cal..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (42 samples, 11.93%)</title><rect x="667" y="356" width="140" height="15" fill="rgb(205,171,40)"/><text x="670.00" y="366.50">PyUFunc_GenericFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (42 samples, 11.93%)</title><rect x="667" y="372" width="140" height="15" fill="rgb(223,179,54)"/><text x="670.00" y="382.50">execute_legacy_uf..</text></g><g><title>iterator_loop (ufunc_object.c) (41 samples, 11.65%)</title><rect x="670" y="388" width="137" height="15" fill="rgb(251,137,49)"/><text x="673.00" y="398.50">iterator_loop (uf..</text></g><g><title>DOUBLE_clip (clip.c.src) (41 samples, 11.65%)</title><rect x="670" y="404" width="137" height="15" fill="rgb(224,8,37)"/><text x="673.00" y="414.50">DOUBLE_clip (clip..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="811" y="340" width="3" height="15" fill="rgb(207,223,3)"/><text x="814.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (1 samples, 0.28%)</title><rect x="814" y="340" width="3" height="15" fill="rgb(239,133,6)"/><text x="817.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.28%)</title><rect x="814" y="356" width="3" height="15" fill="rgb(247,58,20)"/><text x="817.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (1 samples, 0.28%)</title><rect x="814" y="372" width="3" height="15" fill="rgb(207,226,31)"/><text x="817.00" y="382.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.28%)</title><rect x="817" y="372" width="4" height="15" fill="rgb(251,195,40)"/><text x="820.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.57%)</title><rect x="817" y="356" width="7" height="15" fill="rgb(222,150,25)"/><text x="820.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.28%)</title><rect x="821" y="372" width="3" height="15" fill="rgb(205,212,13)"/><text x="824.00" y="382.50"></text></g><g><title>relu (sklearn/neural_network/_base.py) (50 samples, 14.20%)</title><rect x="660" y="196" width="167" height="15" fill="rgb(228,163,48)"/><text x="663.00" y="206.50">relu (sklearn/neural_..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (49 samples, 13.92%)</title><rect x="663" y="212" width="164" height="15" fill="rgb(232,129,4)"/><text x="666.00" y="222.50">clip (&lt;__array_functi..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (49 samples, 13.92%)</title><rect x="663" y="228" width="164" height="15" fill="rgb(245,0,16)"/><text x="666.00" y="238.50">array_implement_array..</text></g><g><title>clip (numpy/core/fromnumeric.py) (49 samples, 13.92%)</title><rect x="663" y="244" width="164" height="15" fill="rgb(238,83,29)"/><text x="666.00" y="254.50">clip (numpy/core/from..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (49 samples, 13.92%)</title><rect x="663" y="260" width="164" height="15" fill="rgb(222,72,3)"/><text x="666.00" y="270.50">_wrapfunc (numpy/core..</text></g><g><title>array_clip (methods.c) (49 samples, 13.92%)</title><rect x="663" y="276" width="164" height="15" fill="rgb(224,132,23)"/><text x="666.00" y="286.50">array_clip (methods.c)</text></g><g><title>forward_ndarray_method (methods.c) (49 samples, 13.92%)</title><rect x="663" y="292" width="164" height="15" fill="rgb(243,154,1)"/><text x="666.00" y="302.50">forward_ndarray_metho..</text></g><g><title>_clip (numpy/core/_methods.py) (49 samples, 13.92%)</title><rect x="663" y="308" width="164" height="15" fill="rgb(237,180,8)"/><text x="666.00" y="318.50">_clip (numpy/core/_me..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (6 samples, 1.70%)</title><rect x="807" y="324" width="20" height="15" fill="rgb(220,143,10)"/><text x="810.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.85%)</title><rect x="817" y="340" width="10" height="15" fill="rgb(207,3,14)"/><text x="820.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.28%)</title><rect x="824" y="356" width="3" height="15" fill="rgb(205,83,33)"/><text x="827.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.28%)</title><rect x="824" y="372" width="3" height="15" fill="rgb(227,69,22)"/><text x="827.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.28%)</title><rect x="824" y="388" width="3" height="15" fill="rgb(237,160,6)"/><text x="827.00" y="398.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 1.42%)</title><rect x="831" y="212" width="17" height="15" fill="rgb(249,172,32)"/><text x="834.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (33 samples, 9.38%)</title><rect x="848" y="212" width="110" height="15" fill="rgb(245,130,53)"/><text x="851.00" y="222.50">dgemm_kernel_..</text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="958" y="340" width="4" height="15" fill="rgb(208,108,44)"/><text x="961.00" y="350.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="958" y="356" width="4" height="15" fill="rgb(250,3,52)"/><text x="961.00" y="366.50"></text></g><g><title>__lll_unlock_wake (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="958" y="372" width="4" height="15" fill="rgb(217,38,10)"/><text x="961.00" y="382.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (18 samples, 5.11%)</title><rect x="958" y="276" width="61" height="15" fill="rgb(225,171,14)"/><text x="961.00" y="286.50">DOUBLE..</text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 5.11%)</title><rect x="958" y="292" width="61" height="15" fill="rgb(212,215,12)"/><text x="961.00" y="302.50">cblas_..</text></g><g><title>dgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 5.11%)</title><rect x="958" y="308" width="61" height="15" fill="rgb(235,223,14)"/><text x="961.00" y="318.50">dgemv_..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 5.11%)</title><rect x="958" y="324" width="61" height="15" fill="rgb(251,148,41)"/><text x="961.00" y="334.50">exec_b..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (17 samples, 4.83%)</title><rect x="962" y="340" width="57" height="15" fill="rgb(242,115,49)"/><text x="965.00" y="350.50">exec_b..</text></g><g><title>sched_yield (libc-2.29.so) (17 samples, 4.83%)</title><rect x="962" y="356" width="57" height="15" fill="rgb(250,66,4)"/><text x="965.00" y="366.50">sched_..</text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.57%)</title><rect x="1019" y="340" width="6" height="15" fill="rgb(254,166,54)"/><text x="1022.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (2 samples, 0.57%)</title><rect x="1019" y="356" width="6" height="15" fill="rgb(206,177,19)"/><text x="1022.00" y="366.50"></text></g><g><title>__lll_lock_wait (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="1022" y="372" width="3" height="15" fill="rgb(207,198,47)"/><text x="1025.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="1025" y="356" width="4" height="15" fill="rgb(221,160,29)"/><text x="1028.00" y="366.50"></text></g><g><title>__lll_lock_wait (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="1025" y="372" width="4" height="15" fill="rgb(228,188,27)"/><text x="1028.00" y="382.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 3.98%)</title><rect x="1025" y="340" width="47" height="15" fill="rgb(233,179,33)"/><text x="1028.00" y="350.50">exec..</text></g><g><title>sched_yield (libc-2.29.so) (13 samples, 3.69%)</title><rect x="1029" y="356" width="43" height="15" fill="rgb(242,147,40)"/><text x="1032.00" y="366.50">sche..</text></g><g><title>dgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="1072" y="356" width="4" height="15" fill="rgb(207,44,27)"/><text x="1075.00" y="366.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (36 samples, 10.23%)</title><rect x="958" y="260" width="121" height="15" fill="rgb(226,213,44)"/><text x="961.00" y="270.50">DOUBLE_matmul (..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 5.11%)</title><rect x="1019" y="276" width="60" height="15" fill="rgb(222,72,1)"/><text x="1022.00" y="286.50">cblas_..</text></g><g><title>dgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 5.11%)</title><rect x="1019" y="292" width="60" height="15" fill="rgb(223,3,36)"/><text x="1022.00" y="302.50">dgemm_..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 5.11%)</title><rect x="1019" y="308" width="60" height="15" fill="rgb(226,202,7)"/><text x="1022.00" y="318.50">gemm_d..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 5.11%)</title><rect x="1019" y="324" width="60" height="15" fill="rgb(237,10,49)"/><text x="1022.00" y="334.50">exec_b..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.57%)</title><rect x="1072" y="340" width="7" height="15" fill="rgb(217,146,28)"/><text x="1075.00" y="350.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="1076" y="356" width="3" height="15" fill="rgb(234,121,10)"/><text x="1079.00" y="366.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (12 samples, 3.41%)</title><rect x="1079" y="324" width="40" height="15" fill="rgb(219,134,11)"/><text x="1082.00" y="334.50">_al..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (13 samples, 3.69%)</title><rect x="1079" y="276" width="43" height="15" fill="rgb(231,108,10)"/><text x="1082.00" y="286.50">npyi..</text></g><g><title>PyArray_AssignArray (array_assign_array.c) (13 samples, 3.69%)</title><rect x="1079" y="292" width="43" height="15" fill="rgb(253,197,26)"/><text x="1082.00" y="302.50">PyAr..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (13 samples, 3.69%)</title><rect x="1079" y="308" width="43" height="15" fill="rgb(210,180,8)"/><text x="1082.00" y="318.50">raw_..</text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.28%)</title><rect x="1119" y="324" width="3" height="15" fill="rgb(240,57,15)"/><text x="1122.00" y="334.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.28%)</title><rect x="1119" y="340" width="3" height="15" fill="rgb(246,163,3)"/><text x="1122.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (14 samples, 3.98%)</title><rect x="1079" y="260" width="47" height="15" fill="rgb(206,7,14)"/><text x="1082.00" y="270.50">NpyI..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.28%)</title><rect x="1122" y="276" width="4" height="15" fill="rgb(223,108,34)"/><text x="1125.00" y="286.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.28%)</title><rect x="1122" y="292" width="4" height="15" fill="rgb(250,62,5)"/><text x="1125.00" y="302.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (90 samples, 25.57%)</title><rect x="827" y="196" width="302" height="15" fill="rgb(216,68,44)"/><text x="830.00" y="206.50">safe_sparse_dot (sklearn/utils/extmath.p..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (51 samples, 14.49%)</title><rect x="958" y="212" width="171" height="15" fill="rgb(214,2,14)"/><text x="961.00" y="222.50">ufunc_generic_call (uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (51 samples, 14.49%)</title><rect x="958" y="228" width="171" height="15" fill="rgb(226,170,35)"/><text x="961.00" y="238.50">PyUFunc_GenericFunctio..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (51 samples, 14.49%)</title><rect x="958" y="244" width="171" height="15" fill="rgb(213,119,15)"/><text x="961.00" y="254.50">PyUFunc_GeneralizedFun..</text></g><g><title>NpyIter_RemoveAxis (nditer_api.c) (1 samples, 0.28%)</title><rect x="1126" y="260" width="3" height="15" fill="rgb(244,54,29)"/><text x="1129.00" y="270.50"></text></g><g><title>0x7f0dc8239120 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1126" y="276" width="3" height="15" fill="rgb(231,11,21)"/><text x="1129.00" y="286.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (7 samples, 1.99%)</title><rect x="1129" y="308" width="24" height="15" fill="rgb(243,169,16)"/><text x="1132.00" y="318.50">_..</text></g><g><title>DOUBLE_add (loops.c.src) (13 samples, 3.69%)</title><rect x="1129" y="260" width="44" height="15" fill="rgb(211,56,4)"/><text x="1132.00" y="270.50">DOUB..</text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (13 samples, 3.69%)</title><rect x="1129" y="276" width="44" height="15" fill="rgb(213,72,27)"/><text x="1132.00" y="286.50">run_..</text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (13 samples, 3.69%)</title><rect x="1129" y="292" width="44" height="15" fill="rgb(219,21,0)"/><text x="1132.00" y="302.50">sse2..</text></g><g><title>_mm_store_pd (emmintrin.h) (6 samples, 1.70%)</title><rect x="1153" y="308" width="20" height="15" fill="rgb(238,68,48)"/><text x="1156.00" y="318.50"></text></g><g><title>0x7f0dc8238eba (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1173" y="308" width="3" height="15" fill="rgb(226,13,51)"/><text x="1176.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (15 samples, 4.26%)</title><rect x="1129" y="212" width="50" height="15" fill="rgb(252,52,28)"/><text x="1132.00" y="222.50">PyUFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (15 samples, 4.26%)</title><rect x="1129" y="228" width="50" height="15" fill="rgb(226,85,54)"/><text x="1132.00" y="238.50">execu..</text></g><g><title>iterator_loop (ufunc_object.c) (15 samples, 4.26%)</title><rect x="1129" y="244" width="50" height="15" fill="rgb(220,45,19)"/><text x="1132.00" y="254.50">itera..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (2 samples, 0.57%)</title><rect x="1173" y="260" width="6" height="15" fill="rgb(241,94,19)"/><text x="1176.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.57%)</title><rect x="1173" y="276" width="6" height="15" fill="rgb(234,15,28)"/><text x="1176.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.57%)</title><rect x="1173" y="292" width="6" height="15" fill="rgb(223,62,12)"/><text x="1176.00" y="302.50"></text></g><g><title>0x7f0dc8238ec9 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1176" y="308" width="3" height="15" fill="rgb(210,79,27)"/><text x="1179.00" y="318.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (158 samples, 44.89%)</title><rect x="653" y="180" width="530" height="15" fill="rgb(210,83,14)"/><text x="656.00" y="190.50">_forward_pass (sklearn/neural_network/_multilayer_perceptron.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (16 samples, 4.55%)</title><rect x="1129" y="196" width="54" height="15" fill="rgb(236,27,16)"/><text x="1132.00" y="206.50">ufunc..</text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.28%)</title><rect x="1179" y="212" width="4" height="15" fill="rgb(216,170,12)"/><text x="1182.00" y="222.50"></text></g><g><title>profile_skl (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py) (160 samples, 45.45%)</title><rect x="650" y="68" width="536" height="15" fill="rgb(208,31,19)"/><text x="653.00" y="78.50">profile_skl (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py)</text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py) (160 samples, 45.45%)</title><rect x="650" y="84" width="536" height="15" fill="rgb(247,38,28)"/><text x="653.00" y="94.50">setup_profile (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py)</text></g><g><title>profile (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py) (160 samples, 45.45%)</title><rect x="650" y="100" width="536" height="15" fill="rgb(251,129,20)"/><text x="653.00" y="110.50">profile (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (160 samples, 45.45%)</title><rect x="650" y="116" width="536" height="15" fill="rgb(214,22,24)"/><text x="653.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (160 samples, 45.45%)</title><rect x="650" y="132" width="536" height="15" fill="rgb(220,213,11)"/><text x="653.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py) (160 samples, 45.45%)</title><rect x="650" y="148" width="536" height="15" fill="rgb(209,52,47)"/><text x="653.00" y="158.50">predict (sklearn/neural_network/_multilayer_perceptron.py)</text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py) (160 samples, 45.45%)</title><rect x="650" y="164" width="536" height="15" fill="rgb(221,219,9)"/><text x="653.00" y="174.50">_predict (sklearn/neural_network/_multilayer_perceptron.py)</text></g><g><title>array_empty (multiarraymodule.c) (1 samples, 0.28%)</title><rect x="1183" y="180" width="3" height="15" fill="rgb(229,16,21)"/><text x="1186.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.28%)</title><rect x="1183" y="196" width="3" height="15" fill="rgb(233,144,7)"/><text x="1186.00" y="206.50"></text></g><g><title>PyArray_Empty (ctors.c) (1 samples, 0.28%)</title><rect x="1183" y="212" width="3" height="15" fill="rgb(215,216,11)"/><text x="1186.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="1183" y="228" width="3" height="15" fill="rgb(224,97,22)"/><text x="1186.00" y="238.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.28%)</title><rect x="1183" y="244" width="3" height="15" fill="rgb(212,183,20)"/><text x="1186.00" y="254.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.28%)</title><rect x="1183" y="260" width="3" height="15" fill="rgb(248,95,18)"/><text x="1186.00" y="270.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.28%)</title><rect x="1183" y="276" width="3" height="15" fill="rgb(213,18,23)"/><text x="1186.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1183" y="292" width="3" height="15" fill="rgb(236,53,34)"/><text x="1186.00" y="302.50"></text></g><g><title>all (352 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(213,144,52)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py) (352 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(211,206,29)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py)</text></g><g><title>start (bench_MLPRegressor_default_b_reg_1000_50_12_float_.py) (1 samples, 0.28%)</title><rect x="1186" y="68" width="4" height="15" fill="rgb(205,50,20)"/><text x="1189.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_b_reg.py) (1 samples, 0.28%)</title><rect x="1186" y="84" width="4" height="15" fill="rgb(206,208,25)"/><text x="1189.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="1186" y="100" width="4" height="15" fill="rgb(252,116,39)"/><text x="1189.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.28%)</title><rect x="1186" y="116" width="4" height="15" fill="rgb(210,181,13)"/><text x="1189.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.28%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(222,211,42)"/><text x="1189.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.28%)</title><rect x="1186" y="148" width="4" height="15" fill="rgb(242,172,1)"/><text x="1189.00" y="158.50"></text></g><g><title>shuffle (sklearn/utils/__init__.py) (1 samples, 0.28%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(205,198,23)"/><text x="1189.00" y="174.50"></text></g><g><title>resample (sklearn/utils/__init__.py) (1 samples, 0.28%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(218,55,48)"/><text x="1189.00" y="190.50"></text></g><g><title>check_consistent_length (sklearn/utils/validation.py) (1 samples, 0.28%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(228,57,41)"/><text x="1189.00" y="206.50"></text></g><g><title>unique (&lt;__array_function__ internals&gt;) (1 samples, 0.28%)</title><rect x="1186" y="212" width="4" height="15" fill="rgb(212,90,18)"/><text x="1189.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.28%)</title><rect x="1186" y="228" width="4" height="15" fill="rgb(216,154,20)"/><text x="1189.00" y="238.50"></text></g><g><title>unique (numpy/lib/arraysetops.py) (1 samples, 0.28%)</title><rect x="1186" y="244" width="4" height="15" fill="rgb(246,147,21)"/><text x="1189.00" y="254.50"></text></g><g><title>_unique1d (numpy/lib/arraysetops.py) (1 samples, 0.28%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(217,159,35)"/><text x="1189.00" y="270.50"></text></g><g><title>array_richcompare (arrayobject.c) (1 samples, 0.28%)</title><rect x="1186" y="276" width="4" height="15" fill="rgb(253,5,10)"/><text x="1189.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.28%)</title><rect x="1186" y="292" width="4" height="15" fill="rgb(222,101,21)"/><text x="1189.00" y="302.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.28%)</title><rect x="1186" y="308" width="4" height="15" fill="rgb(243,205,0)"/><text x="1189.00" y="318.50"></text></g></g></svg>