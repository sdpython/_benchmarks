<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2102" onload="init(evt)" viewBox="0 0 1200 2102" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2102" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2085.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2085.00"> </text><g id="frames"><g><title>&lt;module&gt; (pkg_resources/__init__.py:31) (1 samples, 0.20%)</title><rect x="10" y="820" width="2" height="15" fill="rgb(216,200,0)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="10" y="836" width="2" height="15" fill="rgb(245,39,51)"/><text x="13.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.20%)</title><rect x="10" y="852" width="2" height="15" fill="rgb(253,37,23)"/><text x="13.00" y="862.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.20%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(231,32,22)"/><text x="13.00" y="878.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.20%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(238,16,53)"/><text x="13.00" y="894.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.20%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(240,163,21)"/><text x="13.00" y="910.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.20%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(249,120,13)"/><text x="13.00" y="926.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.20%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(218,129,38)"/><text x="13.00" y="942.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.20%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(243,62,7)"/><text x="13.00" y="958.50"></text></g><g><title>__munmap (libc-2.29.so) (1 samples, 0.20%)</title><rect x="10" y="964" width="2" height="15" fill="rgb(239,130,28)"/><text x="13.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.20%)</title><rect x="12" y="852" width="2" height="15" fill="rgb(213,191,7)"/><text x="15.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.20%)</title><rect x="12" y="868" width="2" height="15" fill="rgb(213,145,23)"/><text x="15.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.20%)</title><rect x="12" y="884" width="2" height="15" fill="rgb(224,153,32)"/><text x="15.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.20%)</title><rect x="12" y="900" width="2" height="15" fill="rgb(245,189,23)"/><text x="15.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.20%)</title><rect x="12" y="916" width="2" height="15" fill="rgb(213,105,54)"/><text x="15.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.20%)</title><rect x="12" y="932" width="2" height="15" fill="rgb(233,174,32)"/><text x="15.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.20%)</title><rect x="12" y="948" width="2" height="15" fill="rgb(240,75,45)"/><text x="15.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.20%)</title><rect x="12" y="964" width="2" height="15" fill="rgb(211,164,43)"/><text x="15.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.20%)</title><rect x="12" y="980" width="2" height="15" fill="rgb(231,180,39)"/><text x="15.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:220) (1 samples, 0.20%)</title><rect x="12" y="996" width="2" height="15" fill="rgb(223,61,30)"/><text x="15.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3.py:2) (3 samples, 0.59%)</title><rect x="10" y="148" width="6" height="15" fill="rgb(219,140,41)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.59%)</title><rect x="10" y="164" width="6" height="15" fill="rgb(238,184,14)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.59%)</title><rect x="10" y="180" width="6" height="15" fill="rgb(208,27,12)"/><text x="13.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.59%)</title><rect x="10" y="196" width="6" height="15" fill="rgb(242,0,21)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.59%)</title><rect x="10" y="212" width="6" height="15" fill="rgb(249,136,20)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.59%)</title><rect x="10" y="228" width="6" height="15" fill="rgb(222,226,12)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.59%)</title><rect x="10" y="244" width="6" height="15" fill="rgb(223,162,45)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.59%)</title><rect x="10" y="260" width="6" height="15" fill="rgb(253,100,45)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.59%)</title><rect x="10" y="276" width="6" height="15" fill="rgb(235,98,19)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 0.59%)</title><rect x="10" y="292" width="6" height="15" fill="rgb(246,158,9)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.59%)</title><rect x="10" y="308" width="6" height="15" fill="rgb(228,82,16)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.59%)</title><rect x="10" y="324" width="6" height="15" fill="rgb(247,189,20)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.59%)</title><rect x="10" y="340" width="6" height="15" fill="rgb(246,83,40)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.59%)</title><rect x="10" y="356" width="6" height="15" fill="rgb(206,30,6)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.59%)</title><rect x="10" y="372" width="6" height="15" fill="rgb(221,40,30)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 0.59%)</title><rect x="10" y="388" width="6" height="15" fill="rgb(224,198,16)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.59%)</title><rect x="10" y="404" width="6" height="15" fill="rgb(218,13,26)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.59%)</title><rect x="10" y="420" width="6" height="15" fill="rgb(248,185,13)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.59%)</title><rect x="10" y="436" width="6" height="15" fill="rgb(217,186,52)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.59%)</title><rect x="10" y="452" width="6" height="15" fill="rgb(241,5,15)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.59%)</title><rect x="10" y="468" width="6" height="15" fill="rgb(220,180,36)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 0.59%)</title><rect x="10" y="484" width="6" height="15" fill="rgb(210,100,26)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.59%)</title><rect x="10" y="500" width="6" height="15" fill="rgb(235,210,6)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.59%)</title><rect x="10" y="516" width="6" height="15" fill="rgb(253,125,12)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.59%)</title><rect x="10" y="532" width="6" height="15" fill="rgb(230,193,32)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.59%)</title><rect x="10" y="548" width="6" height="15" fill="rgb(219,70,47)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.59%)</title><rect x="10" y="564" width="6" height="15" fill="rgb(227,98,23)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 0.59%)</title><rect x="10" y="580" width="6" height="15" fill="rgb(233,196,23)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.59%)</title><rect x="10" y="596" width="6" height="15" fill="rgb(213,211,38)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.59%)</title><rect x="10" y="612" width="6" height="15" fill="rgb(243,181,3)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.59%)</title><rect x="10" y="628" width="6" height="15" fill="rgb(240,133,22)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.59%)</title><rect x="10" y="644" width="6" height="15" fill="rgb(243,201,48)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.59%)</title><rect x="10" y="660" width="6" height="15" fill="rgb(222,73,47)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.59%)</title><rect x="10" y="676" width="6" height="15" fill="rgb(224,135,39)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.59%)</title><rect x="10" y="692" width="6" height="15" fill="rgb(250,181,8)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.59%)</title><rect x="10" y="708" width="6" height="15" fill="rgb(238,58,13)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 0.59%)</title><rect x="10" y="724" width="6" height="15" fill="rgb(246,107,45)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.59%)</title><rect x="10" y="740" width="6" height="15" fill="rgb(229,74,38)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.59%)</title><rect x="10" y="756" width="6" height="15" fill="rgb(222,57,50)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.59%)</title><rect x="10" y="772" width="6" height="15" fill="rgb(227,81,48)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.59%)</title><rect x="10" y="788" width="6" height="15" fill="rgb(238,32,28)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.59%)</title><rect x="10" y="804" width="6" height="15" fill="rgb(233,78,40)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.39%)</title><rect x="12" y="820" width="4" height="15" fill="rgb(217,219,22)"/><text x="15.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.39%)</title><rect x="12" y="836" width="4" height="15" fill="rgb(246,124,38)"/><text x="15.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.20%)</title><rect x="14" y="852" width="2" height="15" fill="rgb(205,114,25)"/><text x="17.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.20%)</title><rect x="14" y="868" width="2" height="15" fill="rgb(251,145,48)"/><text x="17.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.20%)</title><rect x="14" y="884" width="2" height="15" fill="rgb(213,105,16)"/><text x="17.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.20%)</title><rect x="14" y="900" width="2" height="15" fill="rgb(226,116,27)"/><text x="17.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.20%)</title><rect x="14" y="916" width="2" height="15" fill="rgb(241,174,41)"/><text x="17.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.20%)</title><rect x="14" y="932" width="2" height="15" fill="rgb(241,131,30)"/><text x="17.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.20%)</title><rect x="14" y="948" width="2" height="15" fill="rgb(254,21,14)"/><text x="17.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.20%)</title><rect x="14" y="964" width="2" height="15" fill="rgb(211,224,45)"/><text x="17.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:142) (1 samples, 0.20%)</title><rect x="14" y="980" width="2" height="15" fill="rgb(226,218,47)"/><text x="17.00" y="990.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:18) (1 samples, 0.20%)</title><rect x="16" y="484" width="3" height="15" fill="rgb(221,2,25)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="16" y="500" width="3" height="15" fill="rgb(223,215,17)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="16" y="516" width="3" height="15" fill="rgb(253,79,34)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="16" y="532" width="3" height="15" fill="rgb(250,158,6)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="16" y="548" width="3" height="15" fill="rgb(254,43,14)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="16" y="564" width="3" height="15" fill="rgb(242,179,1)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py:230) (1 samples, 0.20%)</title><rect x="16" y="580" width="3" height="15" fill="rgb(205,69,7)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="16" y="596" width="3" height="15" fill="rgb(211,64,22)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="16" y="612" width="3" height="15" fill="rgb(254,215,12)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="16" y="628" width="3" height="15" fill="rgb(221,48,34)"/><text x="19.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="16" y="644" width="3" height="15" fill="rgb(213,62,22)"/><text x="19.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="16" y="660" width="3" height="15" fill="rgb(226,225,32)"/><text x="19.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csr.py:17) (1 samples, 0.20%)</title><rect x="16" y="676" width="3" height="15" fill="rgb(249,192,15)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="16" y="692" width="3" height="15" fill="rgb(218,85,37)"/><text x="19.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="16" y="708" width="3" height="15" fill="rgb(227,4,15)"/><text x="19.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="16" y="724" width="3" height="15" fill="rgb(223,221,8)"/><text x="19.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="16" y="740" width="3" height="15" fill="rgb(250,30,2)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="16" y="756" width="3" height="15" fill="rgb(230,10,36)"/><text x="19.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/compressed.py:11) (1 samples, 0.20%)</title><rect x="16" y="772" width="3" height="15" fill="rgb(221,0,45)"/><text x="19.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="16" y="788" width="3" height="15" fill="rgb(205,74,11)"/><text x="19.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="16" y="804" width="3" height="15" fill="rgb(232,71,30)"/><text x="19.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="16" y="820" width="3" height="15" fill="rgb(210,68,36)"/><text x="19.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="16" y="836" width="3" height="15" fill="rgb(254,11,22)"/><text x="19.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="16" y="852" width="3" height="15" fill="rgb(206,93,20)"/><text x="19.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/_lib/_util.py:9) (1 samples, 0.20%)</title><rect x="16" y="868" width="3" height="15" fill="rgb(207,89,45)"/><text x="19.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="16" y="884" width="3" height="15" fill="rgb(240,99,14)"/><text x="19.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="16" y="900" width="3" height="15" fill="rgb(238,196,37)"/><text x="19.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="16" y="916" width="3" height="15" fill="rgb(228,138,32)"/><text x="19.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="16" y="932" width="3" height="15" fill="rgb(235,146,17)"/><text x="19.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="16" y="948" width="3" height="15" fill="rgb(222,82,45)"/><text x="19.00" y="958.50"></text></g><g><title>&lt;module&gt; (multiprocessing/__init__.py:16) (1 samples, 0.20%)</title><rect x="16" y="964" width="3" height="15" fill="rgb(223,121,15)"/><text x="19.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="16" y="980" width="3" height="15" fill="rgb(248,94,30)"/><text x="19.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="16" y="996" width="3" height="15" fill="rgb(234,99,21)"/><text x="19.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="16" y="1012" width="3" height="15" fill="rgb(206,170,46)"/><text x="19.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="16" y="1028" width="3" height="15" fill="rgb(219,139,24)"/><text x="19.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="16" y="1044" width="3" height="15" fill="rgb(208,211,27)"/><text x="19.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="16" y="1060" width="3" height="15" fill="rgb(224,135,31)"/><text x="19.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="16" y="1076" width="3" height="15" fill="rgb(221,221,10)"/><text x="19.00" y="1086.50"></text></g><g><title>&lt;module&gt; (multiprocessing/context.py:5) (1 samples, 0.20%)</title><rect x="16" y="1092" width="3" height="15" fill="rgb(232,12,48)"/><text x="19.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="16" y="1108" width="3" height="15" fill="rgb(252,29,4)"/><text x="19.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="16" y="1124" width="3" height="15" fill="rgb(214,99,50)"/><text x="19.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="16" y="1140" width="3" height="15" fill="rgb(240,81,35)"/><text x="19.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="16" y="1156" width="3" height="15" fill="rgb(216,169,16)"/><text x="19.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.20%)</title><rect x="16" y="1172" width="3" height="15" fill="rgb(218,199,5)"/><text x="19.00" y="1182.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:587) (1 samples, 0.20%)</title><rect x="16" y="1188" width="3" height="15" fill="rgb(211,162,4)"/><text x="19.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.39%)</title><rect x="16" y="180" width="5" height="15" fill="rgb(207,176,39)"/><text x="19.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="16" y="196" width="5" height="15" fill="rgb(226,36,42)"/><text x="19.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="16" y="212" width="5" height="15" fill="rgb(217,135,12)"/><text x="19.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="16" y="228" width="5" height="15" fill="rgb(211,90,29)"/><text x="19.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="16" y="244" width="5" height="15" fill="rgb(210,152,43)"/><text x="19.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="16" y="260" width="5" height="15" fill="rgb(226,98,14)"/><text x="19.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="16" y="276" width="5" height="15" fill="rgb(248,89,39)"/><text x="19.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.39%)</title><rect x="16" y="292" width="5" height="15" fill="rgb(246,102,14)"/><text x="19.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="16" y="308" width="5" height="15" fill="rgb(241,129,35)"/><text x="19.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="16" y="324" width="5" height="15" fill="rgb(217,34,38)"/><text x="19.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="16" y="340" width="5" height="15" fill="rgb(253,24,54)"/><text x="19.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="16" y="356" width="5" height="15" fill="rgb(252,38,17)"/><text x="19.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="16" y="372" width="5" height="15" fill="rgb(247,155,40)"/><text x="19.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.39%)</title><rect x="16" y="388" width="5" height="15" fill="rgb(251,146,10)"/><text x="19.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="16" y="404" width="5" height="15" fill="rgb(208,208,8)"/><text x="19.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="16" y="420" width="5" height="15" fill="rgb(227,202,16)"/><text x="19.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="16" y="436" width="5" height="15" fill="rgb(247,155,19)"/><text x="19.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="16" y="452" width="5" height="15" fill="rgb(252,130,3)"/><text x="19.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="16" y="468" width="5" height="15" fill="rgb(238,31,3)"/><text x="19.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.20%)</title><rect x="19" y="484" width="2" height="15" fill="rgb(208,185,35)"/><text x="22.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="19" y="500" width="2" height="15" fill="rgb(245,187,20)"/><text x="22.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="19" y="516" width="2" height="15" fill="rgb(247,169,36)"/><text x="22.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="19" y="532" width="2" height="15" fill="rgb(241,189,4)"/><text x="22.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="19" y="548" width="2" height="15" fill="rgb(205,3,1)"/><text x="22.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="19" y="564" width="2" height="15" fill="rgb(234,190,12)"/><text x="22.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.20%)</title><rect x="19" y="580" width="2" height="15" fill="rgb(217,19,11)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="19" y="596" width="2" height="15" fill="rgb(233,204,9)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="19" y="612" width="2" height="15" fill="rgb(240,70,26)"/><text x="22.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="19" y="628" width="2" height="15" fill="rgb(252,111,24)"/><text x="22.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="19" y="644" width="2" height="15" fill="rgb(233,102,15)"/><text x="22.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="19" y="660" width="2" height="15" fill="rgb(238,198,27)"/><text x="22.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.20%)</title><rect x="19" y="676" width="2" height="15" fill="rgb(211,75,41)"/><text x="22.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="19" y="692" width="2" height="15" fill="rgb(234,130,1)"/><text x="22.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="19" y="708" width="2" height="15" fill="rgb(210,48,10)"/><text x="22.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="19" y="724" width="2" height="15" fill="rgb(208,175,14)"/><text x="22.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="19" y="740" width="2" height="15" fill="rgb(248,48,32)"/><text x="22.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="19" y="756" width="2" height="15" fill="rgb(228,12,16)"/><text x="22.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.20%)</title><rect x="19" y="772" width="2" height="15" fill="rgb(245,27,42)"/><text x="22.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="19" y="788" width="2" height="15" fill="rgb(232,181,48)"/><text x="22.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="19" y="804" width="2" height="15" fill="rgb(235,63,28)"/><text x="22.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="19" y="820" width="2" height="15" fill="rgb(219,176,34)"/><text x="22.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="19" y="836" width="2" height="15" fill="rgb(209,142,9)"/><text x="22.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="19" y="852" width="2" height="15" fill="rgb(216,47,54)"/><text x="22.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="19" y="868" width="2" height="15" fill="rgb(237,13,38)"/><text x="22.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="19" y="884" width="2" height="15" fill="rgb(205,129,47)"/><text x="22.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.20%)</title><rect x="19" y="900" width="2" height="15" fill="rgb(222,149,36)"/><text x="22.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="19" y="916" width="2" height="15" fill="rgb(234,190,51)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="19" y="932" width="2" height="15" fill="rgb(254,205,42)"/><text x="22.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="19" y="948" width="2" height="15" fill="rgb(214,98,11)"/><text x="22.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="19" y="964" width="2" height="15" fill="rgb(249,26,14)"/><text x="22.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="19" y="980" width="2" height="15" fill="rgb(244,164,27)"/><text x="22.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.20%)</title><rect x="19" y="996" width="2" height="15" fill="rgb(250,170,39)"/><text x="22.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="19" y="1012" width="2" height="15" fill="rgb(232,192,22)"/><text x="22.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="19" y="1028" width="2" height="15" fill="rgb(226,117,38)"/><text x="22.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="19" y="1044" width="2" height="15" fill="rgb(210,24,36)"/><text x="22.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="19" y="1060" width="2" height="15" fill="rgb(251,76,46)"/><text x="22.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="19" y="1076" width="2" height="15" fill="rgb(231,78,48)"/><text x="22.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="19" y="1092" width="2" height="15" fill="rgb(205,201,0)"/><text x="22.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="19" y="1108" width="2" height="15" fill="rgb(250,189,7)"/><text x="22.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:392) (1 samples, 0.20%)</title><rect x="19" y="1124" width="2" height="15" fill="rgb(208,185,30)"/><text x="22.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="19" y="1140" width="2" height="15" fill="rgb(225,218,16)"/><text x="22.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="19" y="1156" width="2" height="15" fill="rgb(239,163,48)"/><text x="22.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="19" y="1172" width="2" height="15" fill="rgb(249,155,28)"/><text x="22.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="19" y="1188" width="2" height="15" fill="rgb(206,191,45)"/><text x="22.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="19" y="1204" width="2" height="15" fill="rgb(215,67,51)"/><text x="22.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_root.py:19) (1 samples, 0.20%)</title><rect x="19" y="1220" width="2" height="15" fill="rgb(235,38,33)"/><text x="22.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="19" y="1236" width="2" height="15" fill="rgb(217,38,46)"/><text x="22.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="19" y="1252" width="2" height="15" fill="rgb(207,88,40)"/><text x="22.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="19" y="1268" width="2" height="15" fill="rgb(210,69,28)"/><text x="22.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="19" y="1284" width="2" height="15" fill="rgb(229,75,2)"/><text x="22.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="19" y="1300" width="2" height="15" fill="rgb(217,155,3)"/><text x="22.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/minpack.py:15) (1 samples, 0.20%)</title><rect x="19" y="1316" width="2" height="15" fill="rgb(219,228,47)"/><text x="22.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="19" y="1332" width="2" height="15" fill="rgb(217,55,8)"/><text x="22.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="19" y="1348" width="2" height="15" fill="rgb(223,58,47)"/><text x="22.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="19" y="1364" width="2" height="15" fill="rgb(219,67,3)"/><text x="22.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="19" y="1380" width="2" height="15" fill="rgb(248,35,45)"/><text x="22.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="19" y="1396" width="2" height="15" fill="rgb(216,218,11)"/><text x="22.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/__init__.py:5) (1 samples, 0.20%)</title><rect x="19" y="1412" width="2" height="15" fill="rgb(250,155,24)"/><text x="22.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="19" y="1428" width="2" height="15" fill="rgb(241,42,51)"/><text x="22.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="19" y="1444" width="2" height="15" fill="rgb(247,199,2)"/><text x="22.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="19" y="1460" width="2" height="15" fill="rgb(240,40,7)"/><text x="22.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="19" y="1476" width="2" height="15" fill="rgb(233,208,35)"/><text x="22.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="19" y="1492" width="2" height="15" fill="rgb(231,53,51)"/><text x="22.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/lsq_linear.py:11) (1 samples, 0.20%)</title><rect x="19" y="1508" width="2" height="15" fill="rgb(238,48,32)"/><text x="22.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="19" y="1524" width="2" height="15" fill="rgb(246,163,41)"/><text x="22.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="19" y="1540" width="2" height="15" fill="rgb(250,199,26)"/><text x="22.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="19" y="1556" width="2" height="15" fill="rgb(214,186,21)"/><text x="22.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="19" y="1572" width="2" height="15" fill="rgb(230,54,20)"/><text x="22.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="19" y="1588" width="2" height="15" fill="rgb(207,193,51)"/><text x="22.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/trf_linear.py:11) (1 samples, 0.20%)</title><rect x="19" y="1604" width="2" height="15" fill="rgb(252,3,15)"/><text x="22.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="19" y="1620" width="2" height="15" fill="rgb(209,115,22)"/><text x="22.00" y="1630.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="19" y="1636" width="2" height="15" fill="rgb(218,101,38)"/><text x="22.00" y="1646.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.20%)</title><rect x="19" y="1652" width="2" height="15" fill="rgb(221,216,47)"/><text x="22.00" y="1662.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.20%)</title><rect x="19" y="1668" width="2" height="15" fill="rgb(210,8,4)"/><text x="22.00" y="1678.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.20%)</title><rect x="19" y="1684" width="2" height="15" fill="rgb(240,35,33)"/><text x="22.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="19" y="1700" width="2" height="15" fill="rgb(230,50,30)"/><text x="22.00" y="1710.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.20%)</title><rect x="19" y="1716" width="2" height="15" fill="rgb(213,93,15)"/><text x="22.00" y="1726.50"></text></g><g><title>0x7f1caf277995 (libdl-2.29.so) (1 samples, 0.20%)</title><rect x="19" y="1732" width="2" height="15" fill="rgb(216,190,8)"/><text x="22.00" y="1742.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.20%)</title><rect x="19" y="1748" width="2" height="15" fill="rgb(234,225,25)"/><text x="22.00" y="1758.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.20%)</title><rect x="19" y="1764" width="2" height="15" fill="rgb(245,155,4)"/><text x="22.00" y="1774.50"></text></g><g><title>0x7f1caf277258 (libdl-2.29.so) (1 samples, 0.20%)</title><rect x="19" y="1780" width="2" height="15" fill="rgb(237,173,25)"/><text x="22.00" y="1790.50"></text></g><g><title>0x7f1caf2c4d7a (ld-2.29.so) (1 samples, 0.20%)</title><rect x="19" y="1796" width="2" height="15" fill="rgb(233,93,32)"/><text x="22.00" y="1806.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.20%)</title><rect x="19" y="1812" width="2" height="15" fill="rgb(241,83,32)"/><text x="22.00" y="1822.50"></text></g><g><title>0x7f1caf2c518b (ld-2.29.so) (1 samples, 0.20%)</title><rect x="19" y="1828" width="2" height="15" fill="rgb(240,115,43)"/><text x="22.00" y="1838.50"></text></g><g><title>0x7f1caf2bac1a (ld-2.29.so) (1 samples, 0.20%)</title><rect x="19" y="1844" width="2" height="15" fill="rgb(248,28,40)"/><text x="22.00" y="1854.50"></text></g><g><title>0x7f1caf2b85e1 (ld-2.29.so) (1 samples, 0.20%)</title><rect x="19" y="1860" width="2" height="15" fill="rgb(205,143,53)"/><text x="22.00" y="1870.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3.py:4) (3 samples, 0.59%)</title><rect x="16" y="148" width="7" height="15" fill="rgb(238,0,1)"/><text x="19.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.59%)</title><rect x="16" y="164" width="7" height="15" fill="rgb(211,114,31)"/><text x="19.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="21" y="180" width="2" height="15" fill="rgb(243,62,6)"/><text x="24.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="21" y="196" width="2" height="15" fill="rgb(244,16,0)"/><text x="24.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="21" y="212" width="2" height="15" fill="rgb(242,197,32)"/><text x="24.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="21" y="228" width="2" height="15" fill="rgb(218,173,2)"/><text x="24.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:17) (1 samples, 0.20%)</title><rect x="21" y="244" width="2" height="15" fill="rgb(233,106,21)"/><text x="24.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="21" y="260" width="2" height="15" fill="rgb(251,157,8)"/><text x="24.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="21" y="276" width="2" height="15" fill="rgb(235,54,52)"/><text x="24.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="21" y="292" width="2" height="15" fill="rgb(221,93,42)"/><text x="24.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="21" y="308" width="2" height="15" fill="rgb(237,42,21)"/><text x="24.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="21" y="324" width="2" height="15" fill="rgb(232,108,7)"/><text x="24.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py:22) (1 samples, 0.20%)</title><rect x="21" y="340" width="2" height="15" fill="rgb(213,38,38)"/><text x="24.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="21" y="356" width="2" height="15" fill="rgb(244,5,47)"/><text x="24.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="21" y="372" width="2" height="15" fill="rgb(220,6,12)"/><text x="24.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="21" y="388" width="2" height="15" fill="rgb(219,61,11)"/><text x="24.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="21" y="404" width="2" height="15" fill="rgb(254,159,28)"/><text x="24.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="21" y="420" width="2" height="15" fill="rgb(242,98,36)"/><text x="24.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py:11) (1 samples, 0.20%)</title><rect x="21" y="436" width="2" height="15" fill="rgb(245,24,9)"/><text x="24.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="21" y="452" width="2" height="15" fill="rgb(230,72,39)"/><text x="24.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="21" y="468" width="2" height="15" fill="rgb(209,143,2)"/><text x="24.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="21" y="484" width="2" height="15" fill="rgb(212,121,49)"/><text x="24.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="21" y="500" width="2" height="15" fill="rgb(211,98,20)"/><text x="24.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="21" y="516" width="2" height="15" fill="rgb(250,216,18)"/><text x="24.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py:11) (1 samples, 0.20%)</title><rect x="21" y="532" width="2" height="15" fill="rgb(229,16,17)"/><text x="24.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="21" y="548" width="2" height="15" fill="rgb(235,95,14)"/><text x="24.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="21" y="564" width="2" height="15" fill="rgb(214,208,21)"/><text x="24.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="21" y="580" width="2" height="15" fill="rgb(220,5,0)"/><text x="24.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="21" y="596" width="2" height="15" fill="rgb(233,178,28)"/><text x="24.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="21" y="612" width="2" height="15" fill="rgb(226,6,26)"/><text x="24.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:19) (1 samples, 0.20%)</title><rect x="21" y="628" width="2" height="15" fill="rgb(212,206,11)"/><text x="24.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="21" y="644" width="2" height="15" fill="rgb(247,199,44)"/><text x="24.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="21" y="660" width="2" height="15" fill="rgb(223,21,52)"/><text x="24.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="21" y="676" width="2" height="15" fill="rgb(227,225,28)"/><text x="24.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.20%)</title><rect x="21" y="692" width="2" height="15" fill="rgb(228,27,24)"/><text x="24.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="21" y="708" width="2" height="15" fill="rgb(250,149,11)"/><text x="24.00" y="718.50"></text></g><g><title>0x7f1c87714a5b (?) (1 samples, 0.20%)</title><rect x="21" y="724" width="2" height="15" fill="rgb(241,26,2)"/><text x="24.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="21" y="740" width="2" height="15" fill="rgb(232,172,45)"/><text x="24.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="21" y="756" width="2" height="15" fill="rgb(207,91,52)"/><text x="24.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="21" y="772" width="2" height="15" fill="rgb(237,199,41)"/><text x="24.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.20%)</title><rect x="21" y="788" width="2" height="15" fill="rgb(252,94,13)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="21" y="804" width="2" height="15" fill="rgb(227,25,45)"/><text x="24.00" y="814.50"></text></g><g><title>0x7f1c874e0eaa (?) (1 samples, 0.20%)</title><rect x="21" y="820" width="2" height="15" fill="rgb(250,17,1)"/><text x="24.00" y="830.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:11) (1 samples, 0.20%)</title><rect x="23" y="628" width="3" height="15" fill="rgb(222,23,53)"/><text x="26.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="23" y="644" width="3" height="15" fill="rgb(230,150,31)"/><text x="26.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="23" y="660" width="3" height="15" fill="rgb(251,159,5)"/><text x="26.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="23" y="676" width="3" height="15" fill="rgb(250,1,1)"/><text x="26.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="23" y="692" width="3" height="15" fill="rgb(250,48,53)"/><text x="26.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="23" y="708" width="3" height="15" fill="rgb(245,161,45)"/><text x="26.00" y="718.50"></text></g><g><title>&lt;module&gt; (pytz/__init__.py:15) (1 samples, 0.20%)</title><rect x="23" y="724" width="3" height="15" fill="rgb(210,119,3)"/><text x="26.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="23" y="740" width="3" height="15" fill="rgb(227,184,34)"/><text x="26.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.20%)</title><rect x="23" y="756" width="3" height="15" fill="rgb(223,43,53)"/><text x="26.00" y="766.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.20%)</title><rect x="23" y="772" width="3" height="15" fill="rgb(235,17,43)"/><text x="26.00" y="782.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.20%)</title><rect x="23" y="788" width="3" height="15" fill="rgb(212,34,0)"/><text x="26.00" y="798.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1249) (1 samples, 0.20%)</title><rect x="23" y="804" width="3" height="15" fill="rgb(224,187,18)"/><text x="26.00" y="814.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;:1221) (1 samples, 0.20%)</title><rect x="23" y="820" width="3" height="15" fill="rgb(240,70,2)"/><text x="26.00" y="830.50"></text></g><g><title>_path_hooks (&lt;frozen importlib._bootstrap_external&gt;:1197) (1 samples, 0.20%)</title><rect x="23" y="836" width="3" height="15" fill="rgb(212,54,7)"/><text x="26.00" y="846.50"></text></g><g><title>path_hook_for_FileFinder (&lt;frozen importlib._bootstrap_external&gt;:1449) (1 samples, 0.20%)</title><rect x="23" y="852" width="3" height="15" fill="rgb(243,210,6)"/><text x="26.00" y="862.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap_external&gt;:1325) (1 samples, 0.20%)</title><rect x="23" y="868" width="3" height="15" fill="rgb(229,17,50)"/><text x="26.00" y="878.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.20%)</title><rect x="26" y="1492" width="2" height="15" fill="rgb(229,165,18)"/><text x="29.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="26" y="1508" width="2" height="15" fill="rgb(233,42,33)"/><text x="29.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="26" y="1524" width="2" height="15" fill="rgb(227,144,47)"/><text x="29.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="26" y="1540" width="2" height="15" fill="rgb(245,44,17)"/><text x="29.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="26" y="1556" width="2" height="15" fill="rgb(244,25,33)"/><text x="29.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="26" y="1572" width="2" height="15" fill="rgb(246,16,20)"/><text x="29.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.20%)</title><rect x="26" y="1588" width="2" height="15" fill="rgb(239,113,13)"/><text x="29.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="26" y="1604" width="2" height="15" fill="rgb(239,134,35)"/><text x="29.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="26" y="1620" width="2" height="15" fill="rgb(216,213,32)"/><text x="29.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="26" y="1636" width="2" height="15" fill="rgb(221,129,18)"/><text x="29.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="26" y="1652" width="2" height="15" fill="rgb(250,56,10)"/><text x="29.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="26" y="1668" width="2" height="15" fill="rgb(235,171,47)"/><text x="29.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.20%)</title><rect x="26" y="1684" width="2" height="15" fill="rgb(239,6,18)"/><text x="29.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="26" y="1700" width="2" height="15" fill="rgb(245,43,5)"/><text x="29.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="26" y="1716" width="2" height="15" fill="rgb(225,116,33)"/><text x="29.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="26" y="1732" width="2" height="15" fill="rgb(240,229,43)"/><text x="29.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="26" y="1748" width="2" height="15" fill="rgb(218,20,50)"/><text x="29.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="26" y="1764" width="2" height="15" fill="rgb(246,103,16)"/><text x="29.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.20%)</title><rect x="26" y="1780" width="2" height="15" fill="rgb(226,89,42)"/><text x="29.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="26" y="1796" width="2" height="15" fill="rgb(226,49,25)"/><text x="29.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="26" y="1812" width="2" height="15" fill="rgb(217,110,24)"/><text x="29.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="26" y="1828" width="2" height="15" fill="rgb(219,130,45)"/><text x="29.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="26" y="1844" width="2" height="15" fill="rgb(247,156,8)"/><text x="29.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="26" y="1860" width="2" height="15" fill="rgb(237,43,54)"/><text x="29.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:17) (1 samples, 0.20%)</title><rect x="26" y="1876" width="2" height="15" fill="rgb(249,206,15)"/><text x="29.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="26" y="1892" width="2" height="15" fill="rgb(212,37,5)"/><text x="29.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.20%)</title><rect x="26" y="1908" width="2" height="15" fill="rgb(251,47,53)"/><text x="29.00" y="1918.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.20%)</title><rect x="26" y="1924" width="2" height="15" fill="rgb(245,85,50)"/><text x="29.00" y="1934.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.20%)</title><rect x="26" y="1940" width="2" height="15" fill="rgb(205,8,54)"/><text x="29.00" y="1950.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.20%)</title><rect x="26" y="1956" width="2" height="15" fill="rgb(253,38,32)"/><text x="29.00" y="1966.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.20%)</title><rect x="26" y="1972" width="2" height="15" fill="rgb(220,196,2)"/><text x="29.00" y="1982.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.20%)</title><rect x="26" y="1988" width="2" height="15" fill="rgb(221,104,29)"/><text x="29.00" y="1998.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.20%)</title><rect x="28" y="1924" width="2" height="15" fill="rgb(218,162,1)"/><text x="31.00" y="1934.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.20%)</title><rect x="28" y="1940" width="2" height="15" fill="rgb(231,178,29)"/><text x="31.00" y="1950.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.20%)</title><rect x="28" y="1956" width="2" height="15" fill="rgb(205,64,53)"/><text x="31.00" y="1966.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 0.59%)</title><rect x="26" y="916" width="7" height="15" fill="rgb(237,154,36)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.59%)</title><rect x="26" y="932" width="7" height="15" fill="rgb(216,158,53)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.59%)</title><rect x="26" y="948" width="7" height="15" fill="rgb(243,141,29)"/><text x="29.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.59%)</title><rect x="26" y="964" width="7" height="15" fill="rgb(240,162,23)"/><text x="29.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.59%)</title><rect x="26" y="980" width="7" height="15" fill="rgb(218,127,43)"/><text x="29.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.59%)</title><rect x="26" y="996" width="7" height="15" fill="rgb(240,159,13)"/><text x="29.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (3 samples, 0.59%)</title><rect x="26" y="1012" width="7" height="15" fill="rgb(215,222,41)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.59%)</title><rect x="26" y="1028" width="7" height="15" fill="rgb(245,32,9)"/><text x="29.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.59%)</title><rect x="26" y="1044" width="7" height="15" fill="rgb(229,90,47)"/><text x="29.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.59%)</title><rect x="26" y="1060" width="7" height="15" fill="rgb(226,46,18)"/><text x="29.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.59%)</title><rect x="26" y="1076" width="7" height="15" fill="rgb(237,18,30)"/><text x="29.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.59%)</title><rect x="26" y="1092" width="7" height="15" fill="rgb(205,94,48)"/><text x="29.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (3 samples, 0.59%)</title><rect x="26" y="1108" width="7" height="15" fill="rgb(233,79,46)"/><text x="29.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.59%)</title><rect x="26" y="1124" width="7" height="15" fill="rgb(229,222,18)"/><text x="29.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.59%)</title><rect x="26" y="1140" width="7" height="15" fill="rgb(253,77,11)"/><text x="29.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.59%)</title><rect x="26" y="1156" width="7" height="15" fill="rgb(233,38,25)"/><text x="29.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.59%)</title><rect x="26" y="1172" width="7" height="15" fill="rgb(245,75,16)"/><text x="29.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.59%)</title><rect x="26" y="1188" width="7" height="15" fill="rgb(247,44,39)"/><text x="29.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (3 samples, 0.59%)</title><rect x="26" y="1204" width="7" height="15" fill="rgb(214,194,8)"/><text x="29.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.59%)</title><rect x="26" y="1220" width="7" height="15" fill="rgb(222,38,2)"/><text x="29.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.59%)</title><rect x="26" y="1236" width="7" height="15" fill="rgb(248,193,46)"/><text x="29.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.59%)</title><rect x="26" y="1252" width="7" height="15" fill="rgb(250,71,8)"/><text x="29.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.59%)</title><rect x="26" y="1268" width="7" height="15" fill="rgb(215,40,36)"/><text x="29.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.59%)</title><rect x="26" y="1284" width="7" height="15" fill="rgb(226,18,39)"/><text x="29.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (3 samples, 0.59%)</title><rect x="26" y="1300" width="7" height="15" fill="rgb(239,142,3)"/><text x="29.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.59%)</title><rect x="26" y="1316" width="7" height="15" fill="rgb(233,89,6)"/><text x="29.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.59%)</title><rect x="26" y="1332" width="7" height="15" fill="rgb(227,86,2)"/><text x="29.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.59%)</title><rect x="26" y="1348" width="7" height="15" fill="rgb(222,175,7)"/><text x="29.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.59%)</title><rect x="26" y="1364" width="7" height="15" fill="rgb(213,213,4)"/><text x="29.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.59%)</title><rect x="26" y="1380" width="7" height="15" fill="rgb(234,137,27)"/><text x="29.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (3 samples, 0.59%)</title><rect x="26" y="1396" width="7" height="15" fill="rgb(214,64,33)"/><text x="29.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.59%)</title><rect x="26" y="1412" width="7" height="15" fill="rgb(239,187,21)"/><text x="29.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.59%)</title><rect x="26" y="1428" width="7" height="15" fill="rgb(217,70,20)"/><text x="29.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.59%)</title><rect x="26" y="1444" width="7" height="15" fill="rgb(227,86,5)"/><text x="29.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.59%)</title><rect x="26" y="1460" width="7" height="15" fill="rgb(246,79,12)"/><text x="29.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.59%)</title><rect x="26" y="1476" width="7" height="15" fill="rgb(252,141,18)"/><text x="29.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (2 samples, 0.39%)</title><rect x="28" y="1492" width="5" height="15" fill="rgb(228,204,15)"/><text x="31.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="28" y="1508" width="5" height="15" fill="rgb(214,87,27)"/><text x="31.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.39%)</title><rect x="28" y="1524" width="5" height="15" fill="rgb(240,24,7)"/><text x="31.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="28" y="1540" width="5" height="15" fill="rgb(229,106,16)"/><text x="31.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="28" y="1556" width="5" height="15" fill="rgb(208,184,19)"/><text x="31.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="28" y="1572" width="5" height="15" fill="rgb(237,126,24)"/><text x="31.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="28" y="1588" width="5" height="15" fill="rgb(235,123,51)"/><text x="31.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="28" y="1604" width="5" height="15" fill="rgb(224,28,53)"/><text x="31.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="28" y="1620" width="5" height="15" fill="rgb(207,81,23)"/><text x="31.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (2 samples, 0.39%)</title><rect x="28" y="1636" width="5" height="15" fill="rgb(207,195,45)"/><text x="31.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.39%)</title><rect x="28" y="1652" width="5" height="15" fill="rgb(244,211,13)"/><text x="31.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="28" y="1668" width="5" height="15" fill="rgb(206,11,2)"/><text x="31.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="28" y="1684" width="5" height="15" fill="rgb(223,206,14)"/><text x="31.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="28" y="1700" width="5" height="15" fill="rgb(232,110,31)"/><text x="31.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="28" y="1716" width="5" height="15" fill="rgb(249,159,0)"/><text x="31.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="28" y="1732" width="5" height="15" fill="rgb(212,97,41)"/><text x="31.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="28" y="1748" width="5" height="15" fill="rgb(250,144,5)"/><text x="31.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (2 samples, 0.39%)</title><rect x="28" y="1764" width="5" height="15" fill="rgb(238,52,32)"/><text x="31.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="28" y="1780" width="5" height="15" fill="rgb(213,147,16)"/><text x="31.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="28" y="1796" width="5" height="15" fill="rgb(229,193,24)"/><text x="31.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="28" y="1812" width="5" height="15" fill="rgb(251,28,22)"/><text x="31.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="28" y="1828" width="5" height="15" fill="rgb(223,67,6)"/><text x="31.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="28" y="1844" width="5" height="15" fill="rgb(237,172,52)"/><text x="31.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (2 samples, 0.39%)</title><rect x="28" y="1860" width="5" height="15" fill="rgb(251,150,0)"/><text x="31.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="28" y="1876" width="5" height="15" fill="rgb(244,213,26)"/><text x="31.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="28" y="1892" width="5" height="15" fill="rgb(229,174,48)"/><text x="31.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="28" y="1908" width="5" height="15" fill="rgb(252,54,47)"/><text x="31.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="30" y="1924" width="3" height="15" fill="rgb(215,125,27)"/><text x="33.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="30" y="1940" width="3" height="15" fill="rgb(241,3,17)"/><text x="33.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py:6341) (1 samples, 0.20%)</title><rect x="30" y="1956" width="3" height="15" fill="rgb(207,158,6)"/><text x="33.00" y="1966.50"></text></g><g><title>makeHTMLTags (pyparsing.py:5846) (1 samples, 0.20%)</title><rect x="30" y="1972" width="3" height="15" fill="rgb(241,110,14)"/><text x="33.00" y="1982.50"></text></g><g><title>_makeTags (pyparsing.py:5812) (1 samples, 0.20%)</title><rect x="30" y="1988" width="3" height="15" fill="rgb(246,123,35)"/><text x="33.00" y="1998.50"></text></g><g><title>__init__ (pyparsing.py:4757) (1 samples, 0.20%)</title><rect x="30" y="2004" width="3" height="15" fill="rgb(205,226,3)"/><text x="33.00" y="2014.50"></text></g><g><title>__init__ (pyparsing.py:4654) (1 samples, 0.20%)</title><rect x="30" y="2020" width="3" height="15" fill="rgb(252,159,46)"/><text x="33.00" y="2030.50"></text></g><g><title>__init__ (pyparsing.py:4424) (1 samples, 0.20%)</title><rect x="30" y="2036" width="3" height="15" fill="rgb(241,102,9)"/><text x="33.00" y="2046.50"></text></g><g><title>__init__ (pyparsing.py:1393) (1 samples, 0.20%)</title><rect x="30" y="2052" width="3" height="15" fill="rgb(237,54,31)"/><text x="33.00" y="2062.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (4 samples, 0.78%)</title><rect x="26" y="724" width="9" height="15" fill="rgb(247,75,40)"/><text x="29.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.78%)</title><rect x="26" y="740" width="9" height="15" fill="rgb(212,184,37)"/><text x="29.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.78%)</title><rect x="26" y="756" width="9" height="15" fill="rgb(229,118,18)"/><text x="29.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.78%)</title><rect x="26" y="772" width="9" height="15" fill="rgb(237,68,44)"/><text x="29.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.78%)</title><rect x="26" y="788" width="9" height="15" fill="rgb(226,164,22)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.78%)</title><rect x="26" y="804" width="9" height="15" fill="rgb(242,223,31)"/><text x="29.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (4 samples, 0.78%)</title><rect x="26" y="820" width="9" height="15" fill="rgb(250,120,12)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.78%)</title><rect x="26" y="836" width="9" height="15" fill="rgb(222,55,49)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.78%)</title><rect x="26" y="852" width="9" height="15" fill="rgb(209,34,15)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.78%)</title><rect x="26" y="868" width="9" height="15" fill="rgb(216,202,4)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.78%)</title><rect x="26" y="884" width="9" height="15" fill="rgb(238,44,54)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.78%)</title><rect x="26" y="900" width="9" height="15" fill="rgb(251,219,15)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:52) (1 samples, 0.20%)</title><rect x="33" y="916" width="2" height="15" fill="rgb(247,159,3)"/><text x="36.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="33" y="932" width="2" height="15" fill="rgb(205,91,11)"/><text x="36.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="33" y="948" width="2" height="15" fill="rgb(254,20,45)"/><text x="36.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="33" y="964" width="2" height="15" fill="rgb(233,225,22)"/><text x="36.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="33" y="980" width="2" height="15" fill="rgb(225,177,4)"/><text x="36.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="33" y="996" width="2" height="15" fill="rgb(220,72,14)"/><text x="36.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py:28) (1 samples, 0.20%)</title><rect x="33" y="1012" width="2" height="15" fill="rgb(217,153,35)"/><text x="36.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="33" y="1028" width="2" height="15" fill="rgb(207,57,2)"/><text x="36.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.20%)</title><rect x="33" y="1044" width="2" height="15" fill="rgb(219,147,8)"/><text x="36.00" y="1054.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.20%)</title><rect x="33" y="1060" width="2" height="15" fill="rgb(208,19,53)"/><text x="36.00" y="1070.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.20%)</title><rect x="33" y="1076" width="2" height="15" fill="rgb(230,120,44)"/><text x="36.00" y="1086.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.20%)</title><rect x="33" y="1092" width="2" height="15" fill="rgb(247,120,5)"/><text x="36.00" y="1102.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.20%)</title><rect x="33" y="1108" width="2" height="15" fill="rgb(214,9,20)"/><text x="36.00" y="1118.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.20%)</title><rect x="33" y="1124" width="2" height="15" fill="rgb(252,208,12)"/><text x="36.00" y="1134.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.20%)</title><rect x="33" y="1140" width="2" height="15" fill="rgb(209,184,27)"/><text x="36.00" y="1150.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="33" y="1156" width="2" height="15" fill="rgb(235,127,25)"/><text x="36.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (6 samples, 1.17%)</title><rect x="23" y="436" width="14" height="15" fill="rgb(247,22,51)"/><text x="26.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.17%)</title><rect x="23" y="452" width="14" height="15" fill="rgb(239,186,2)"/><text x="26.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.17%)</title><rect x="23" y="468" width="14" height="15" fill="rgb(253,17,0)"/><text x="26.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.17%)</title><rect x="23" y="484" width="14" height="15" fill="rgb(246,39,39)"/><text x="26.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.17%)</title><rect x="23" y="500" width="14" height="15" fill="rgb(210,127,41)"/><text x="26.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.17%)</title><rect x="23" y="516" width="14" height="15" fill="rgb(233,9,1)"/><text x="26.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (6 samples, 1.17%)</title><rect x="23" y="532" width="14" height="15" fill="rgb(234,148,2)"/><text x="26.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.17%)</title><rect x="23" y="548" width="14" height="15" fill="rgb(206,110,3)"/><text x="26.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.17%)</title><rect x="23" y="564" width="14" height="15" fill="rgb(208,163,30)"/><text x="26.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.17%)</title><rect x="23" y="580" width="14" height="15" fill="rgb(214,217,42)"/><text x="26.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.17%)</title><rect x="23" y="596" width="14" height="15" fill="rgb(247,35,43)"/><text x="26.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.17%)</title><rect x="23" y="612" width="14" height="15" fill="rgb(230,9,1)"/><text x="26.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (5 samples, 0.98%)</title><rect x="26" y="628" width="11" height="15" fill="rgb(240,178,43)"/><text x="29.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.98%)</title><rect x="26" y="644" width="11" height="15" fill="rgb(218,28,38)"/><text x="29.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.98%)</title><rect x="26" y="660" width="11" height="15" fill="rgb(220,75,19)"/><text x="29.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.98%)</title><rect x="26" y="676" width="11" height="15" fill="rgb(247,42,27)"/><text x="29.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.98%)</title><rect x="26" y="692" width="11" height="15" fill="rgb(223,85,0)"/><text x="29.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.98%)</title><rect x="26" y="708" width="11" height="15" fill="rgb(212,53,40)"/><text x="29.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.20%)</title><rect x="35" y="724" width="2" height="15" fill="rgb(209,8,48)"/><text x="38.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="35" y="740" width="2" height="15" fill="rgb(220,209,19)"/><text x="38.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.20%)</title><rect x="35" y="756" width="2" height="15" fill="rgb(219,162,53)"/><text x="38.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="35" y="772" width="2" height="15" fill="rgb(241,74,31)"/><text x="38.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="35" y="788" width="2" height="15" fill="rgb(250,35,23)"/><text x="38.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="35" y="804" width="2" height="15" fill="rgb(218,99,15)"/><text x="38.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="35" y="820" width="2" height="15" fill="rgb(222,178,43)"/><text x="38.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="35" y="836" width="2" height="15" fill="rgb(229,131,0)"/><text x="38.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="35" y="852" width="2" height="15" fill="rgb(253,190,33)"/><text x="38.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:1) (1 samples, 0.20%)</title><rect x="35" y="868" width="2" height="15" fill="rgb(213,163,37)"/><text x="38.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="35" y="884" width="2" height="15" fill="rgb(219,61,12)"/><text x="38.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="35" y="900" width="2" height="15" fill="rgb(239,211,41)"/><text x="38.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="35" y="916" width="2" height="15" fill="rgb(239,40,5)"/><text x="38.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="35" y="932" width="2" height="15" fill="rgb(237,111,51)"/><text x="38.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="35" y="948" width="2" height="15" fill="rgb(219,172,4)"/><text x="38.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/array_.py:7) (1 samples, 0.20%)</title><rect x="35" y="964" width="2" height="15" fill="rgb(249,150,5)"/><text x="38.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="35" y="980" width="2" height="15" fill="rgb(213,215,7)"/><text x="38.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="35" y="996" width="2" height="15" fill="rgb(224,72,11)"/><text x="38.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="35" y="1012" width="2" height="15" fill="rgb(243,130,14)"/><text x="38.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="35" y="1028" width="2" height="15" fill="rgb(253,137,3)"/><text x="38.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="35" y="1044" width="2" height="15" fill="rgb(211,139,15)"/><text x="38.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/common.py:11) (1 samples, 0.20%)</title><rect x="35" y="1060" width="2" height="15" fill="rgb(238,5,17)"/><text x="38.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="35" y="1076" width="2" height="15" fill="rgb(223,29,13)"/><text x="38.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="35" y="1092" width="2" height="15" fill="rgb(241,195,25)"/><text x="38.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="35" y="1108" width="2" height="15" fill="rgb(227,222,30)"/><text x="38.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="35" y="1124" width="2" height="15" fill="rgb(206,145,9)"/><text x="38.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="35" y="1140" width="2" height="15" fill="rgb(212,121,18)"/><text x="38.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/dtypes.py:14) (1 samples, 0.20%)</title><rect x="35" y="1156" width="2" height="15" fill="rgb(246,86,46)"/><text x="38.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="35" y="1172" width="2" height="15" fill="rgb(208,173,4)"/><text x="38.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="35" y="1188" width="2" height="15" fill="rgb(251,170,30)"/><text x="38.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="35" y="1204" width="2" height="15" fill="rgb(214,68,34)"/><text x="38.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="35" y="1220" width="2" height="15" fill="rgb(236,212,51)"/><text x="38.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="35" y="1236" width="2" height="15" fill="rgb(215,151,29)"/><text x="38.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/base.py:6) (1 samples, 0.20%)</title><rect x="35" y="1252" width="2" height="15" fill="rgb(218,80,32)"/><text x="38.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="35" y="1268" width="2" height="15" fill="rgb(244,58,32)"/><text x="38.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="35" y="1284" width="2" height="15" fill="rgb(244,7,39)"/><text x="38.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="35" y="1300" width="2" height="15" fill="rgb(247,146,37)"/><text x="38.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="35" y="1316" width="2" height="15" fill="rgb(248,28,38)"/><text x="38.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="35" y="1332" width="2" height="15" fill="rgb(226,116,17)"/><text x="38.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/errors/__init__.py:168) (1 samples, 0.20%)</title><rect x="35" y="1348" width="2" height="15" fill="rgb(232,42,27)"/><text x="38.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.20%)</title><rect x="37" y="644" width="3" height="15" fill="rgb(211,156,48)"/><text x="40.00" y="654.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.20%)</title><rect x="37" y="660" width="3" height="15" fill="rgb(220,18,20)"/><text x="40.00" y="670.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.20%)</title><rect x="37" y="676" width="3" height="15" fill="rgb(241,134,24)"/><text x="40.00" y="686.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.20%)</title><rect x="40" y="1108" width="2" height="15" fill="rgb(246,74,2)"/><text x="43.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="40" y="1124" width="2" height="15" fill="rgb(215,221,16)"/><text x="43.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="40" y="1140" width="2" height="15" fill="rgb(230,183,27)"/><text x="43.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="40" y="1156" width="2" height="15" fill="rgb(205,54,26)"/><text x="43.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="40" y="1172" width="2" height="15" fill="rgb(235,124,3)"/><text x="43.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="40" y="1188" width="2" height="15" fill="rgb(234,57,53)"/><text x="43.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:33) (1 samples, 0.20%)</title><rect x="40" y="1204" width="2" height="15" fill="rgb(246,115,7)"/><text x="43.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="40" y="1220" width="2" height="15" fill="rgb(219,166,53)"/><text x="43.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="40" y="1236" width="2" height="15" fill="rgb(233,161,16)"/><text x="43.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="40" y="1252" width="2" height="15" fill="rgb(230,213,9)"/><text x="43.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="40" y="1268" width="2" height="15" fill="rgb(248,174,39)"/><text x="43.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="40" y="1284" width="2" height="15" fill="rgb(215,208,23)"/><text x="43.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py:42) (1 samples, 0.20%)</title><rect x="40" y="1300" width="2" height="15" fill="rgb(234,72,39)"/><text x="43.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="40" y="1316" width="2" height="15" fill="rgb(218,101,29)"/><text x="43.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="40" y="1332" width="2" height="15" fill="rgb(244,34,10)"/><text x="43.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="40" y="1348" width="2" height="15" fill="rgb(210,55,43)"/><text x="43.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="40" y="1364" width="2" height="15" fill="rgb(221,195,34)"/><text x="43.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="40" y="1380" width="2" height="15" fill="rgb(206,87,3)"/><text x="43.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/discriminant_analysis.py:20) (1 samples, 0.20%)</title><rect x="40" y="1396" width="2" height="15" fill="rgb(224,183,1)"/><text x="43.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="40" y="1412" width="2" height="15" fill="rgb(223,110,32)"/><text x="43.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="40" y="1428" width="2" height="15" fill="rgb(245,103,20)"/><text x="43.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="40" y="1444" width="2" height="15" fill="rgb(206,167,26)"/><text x="43.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="40" y="1460" width="2" height="15" fill="rgb(214,177,28)"/><text x="43.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="40" y="1476" width="2" height="15" fill="rgb(230,37,28)"/><text x="43.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/covariance/__init__.py:16) (1 samples, 0.20%)</title><rect x="40" y="1492" width="2" height="15" fill="rgb(225,64,50)"/><text x="43.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="40" y="1508" width="2" height="15" fill="rgb(216,46,23)"/><text x="43.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.20%)</title><rect x="40" y="1524" width="2" height="15" fill="rgb(206,196,50)"/><text x="43.00" y="1534.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.20%)</title><rect x="40" y="1540" width="2" height="15" fill="rgb(218,103,29)"/><text x="43.00" y="1550.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.20%)</title><rect x="40" y="1556" width="2" height="15" fill="rgb(250,22,8)"/><text x="43.00" y="1566.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.20%)</title><rect x="40" y="1572" width="2" height="15" fill="rgb(211,150,14)"/><text x="43.00" y="1582.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1394) (1 samples, 0.20%)</title><rect x="40" y="1588" width="2" height="15" fill="rgb(230,58,43)"/><text x="43.00" y="1598.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.20%)</title><rect x="40" y="1604" width="2" height="15" fill="rgb(240,122,5)"/><text x="43.00" y="1614.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:90) (1 samples, 0.20%)</title><rect x="40" y="1620" width="2" height="15" fill="rgb(217,188,37)"/><text x="43.00" y="1630.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.39%)</title><rect x="40" y="676" width="4" height="15" fill="rgb(216,50,44)"/><text x="43.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="40" y="692" width="4" height="15" fill="rgb(252,212,2)"/><text x="43.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="40" y="708" width="4" height="15" fill="rgb(229,25,48)"/><text x="43.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="40" y="724" width="4" height="15" fill="rgb(232,152,35)"/><text x="43.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="40" y="740" width="4" height="15" fill="rgb(236,191,18)"/><text x="43.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="40" y="756" width="4" height="15" fill="rgb(206,180,45)"/><text x="43.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.39%)</title><rect x="40" y="772" width="4" height="15" fill="rgb(212,99,8)"/><text x="43.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="40" y="788" width="4" height="15" fill="rgb(252,48,32)"/><text x="43.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="40" y="804" width="4" height="15" fill="rgb(233,194,43)"/><text x="43.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="40" y="820" width="4" height="15" fill="rgb(207,26,46)"/><text x="43.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="40" y="836" width="4" height="15" fill="rgb(241,117,20)"/><text x="43.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="40" y="852" width="4" height="15" fill="rgb(234,153,24)"/><text x="43.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.39%)</title><rect x="40" y="868" width="4" height="15" fill="rgb(242,191,13)"/><text x="43.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="40" y="884" width="4" height="15" fill="rgb(223,11,8)"/><text x="43.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.39%)</title><rect x="40" y="900" width="4" height="15" fill="rgb(229,99,45)"/><text x="43.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="40" y="916" width="4" height="15" fill="rgb(209,53,3)"/><text x="43.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="40" y="932" width="4" height="15" fill="rgb(211,171,39)"/><text x="43.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="40" y="948" width="4" height="15" fill="rgb(210,225,25)"/><text x="43.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="40" y="964" width="4" height="15" fill="rgb(223,87,28)"/><text x="43.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="40" y="980" width="4" height="15" fill="rgb(244,150,33)"/><text x="43.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="40" y="996" width="4" height="15" fill="rgb(244,166,31)"/><text x="43.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.39%)</title><rect x="40" y="1012" width="4" height="15" fill="rgb(209,0,40)"/><text x="43.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="40" y="1028" width="4" height="15" fill="rgb(209,227,5)"/><text x="43.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="40" y="1044" width="4" height="15" fill="rgb(247,142,48)"/><text x="43.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="40" y="1060" width="4" height="15" fill="rgb(219,163,6)"/><text x="43.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="40" y="1076" width="4" height="15" fill="rgb(242,42,44)"/><text x="43.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="40" y="1092" width="4" height="15" fill="rgb(207,156,14)"/><text x="43.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.20%)</title><rect x="42" y="1108" width="2" height="15" fill="rgb(235,72,18)"/><text x="45.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="42" y="1124" width="2" height="15" fill="rgb(239,20,7)"/><text x="45.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="42" y="1140" width="2" height="15" fill="rgb(250,32,20)"/><text x="45.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="42" y="1156" width="2" height="15" fill="rgb(237,17,0)"/><text x="45.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="42" y="1172" width="2" height="15" fill="rgb(229,145,40)"/><text x="45.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="42" y="1188" width="2" height="15" fill="rgb(228,55,9)"/><text x="45.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="42" y="1204" width="2" height="15" fill="rgb(220,152,53)"/><text x="45.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="42" y="1220" width="2" height="15" fill="rgb(221,228,42)"/><text x="45.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.20%)</title><rect x="42" y="1236" width="2" height="15" fill="rgb(233,225,50)"/><text x="45.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="42" y="1252" width="2" height="15" fill="rgb(228,160,11)"/><text x="45.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="42" y="1268" width="2" height="15" fill="rgb(214,82,15)"/><text x="45.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="42" y="1284" width="2" height="15" fill="rgb(240,178,34)"/><text x="45.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="42" y="1300" width="2" height="15" fill="rgb(211,113,24)"/><text x="45.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="42" y="1316" width="2" height="15" fill="rgb(222,2,40)"/><text x="45.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="42" y="1332" width="2" height="15" fill="rgb(216,84,18)"/><text x="45.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="42" y="1348" width="2" height="15" fill="rgb(238,182,16)"/><text x="45.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.20%)</title><rect x="42" y="1364" width="2" height="15" fill="rgb(225,101,48)"/><text x="45.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="42" y="1380" width="2" height="15" fill="rgb(251,67,17)"/><text x="45.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="42" y="1396" width="2" height="15" fill="rgb(224,74,16)"/><text x="45.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="42" y="1412" width="2" height="15" fill="rgb(210,60,49)"/><text x="45.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="42" y="1428" width="2" height="15" fill="rgb(250,121,0)"/><text x="45.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="42" y="1444" width="2" height="15" fill="rgb(231,83,36)"/><text x="45.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.20%)</title><rect x="42" y="1460" width="2" height="15" fill="rgb(221,124,11)"/><text x="45.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.20%)</title><rect x="42" y="1476" width="2" height="15" fill="rgb(250,162,39)"/><text x="45.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.20%)</title><rect x="42" y="1492" width="2" height="15" fill="rgb(205,178,44)"/><text x="45.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.20%)</title><rect x="42" y="1508" width="2" height="15" fill="rgb(247,201,28)"/><text x="45.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.20%)</title><rect x="42" y="1524" width="2" height="15" fill="rgb(226,200,27)"/><text x="45.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.20%)</title><rect x="42" y="1540" width="2" height="15" fill="rgb(231,30,12)"/><text x="45.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.20%)</title><rect x="42" y="1556" width="2" height="15" fill="rgb(224,161,16)"/><text x="45.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:23) (1 samples, 0.20%)</title><rect x="42" y="1572" width="2" height="15" fill="rgb(237,221,4)"/><text x="45.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:250) (1 samples, 0.20%)</title><rect x="42" y="1588" width="2" height="15" fill="rgb(254,227,43)"/><text x="45.00" y="1598.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:4) (16 samples, 3.13%)</title><rect x="10" y="52" width="36" height="15" fill="rgb(220,148,12)"/><text x="13.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (16 samples, 3.13%)</title><rect x="10" y="68" width="36" height="15" fill="rgb(236,18,26)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (16 samples, 3.13%)</title><rect x="10" y="84" width="36" height="15" fill="rgb(213,208,54)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (16 samples, 3.13%)</title><rect x="10" y="100" width="36" height="15" fill="rgb(210,168,3)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (16 samples, 3.13%)</title><rect x="10" y="116" width="36" height="15" fill="rgb(239,153,27)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 3.13%)</title><rect x="10" y="132" width="36" height="15" fill="rgb(210,207,37)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3.py:7) (10 samples, 1.96%)</title><rect x="23" y="148" width="23" height="15" fill="rgb(250,101,54)"/><text x="26.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 1.96%)</title><rect x="23" y="164" width="23" height="15" fill="rgb(245,150,8)"/><text x="26.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 1.96%)</title><rect x="23" y="180" width="23" height="15" fill="rgb(206,199,35)"/><text x="26.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 1.96%)</title><rect x="23" y="196" width="23" height="15" fill="rgb(213,207,0)"/><text x="26.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 1.96%)</title><rect x="23" y="212" width="23" height="15" fill="rgb(240,157,5)"/><text x="26.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 1.96%)</title><rect x="23" y="228" width="23" height="15" fill="rgb(208,6,11)"/><text x="26.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (10 samples, 1.96%)</title><rect x="23" y="244" width="23" height="15" fill="rgb(237,57,2)"/><text x="26.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 1.96%)</title><rect x="23" y="260" width="23" height="15" fill="rgb(231,75,14)"/><text x="26.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 1.96%)</title><rect x="23" y="276" width="23" height="15" fill="rgb(244,165,37)"/><text x="26.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 1.96%)</title><rect x="23" y="292" width="23" height="15" fill="rgb(237,44,52)"/><text x="26.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 1.96%)</title><rect x="23" y="308" width="23" height="15" fill="rgb(252,174,2)"/><text x="26.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 1.96%)</title><rect x="23" y="324" width="23" height="15" fill="rgb(216,105,36)"/><text x="26.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (10 samples, 1.96%)</title><rect x="23" y="340" width="23" height="15" fill="rgb(228,157,33)"/><text x="26.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 1.96%)</title><rect x="23" y="356" width="23" height="15" fill="rgb(237,29,6)"/><text x="26.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 1.96%)</title><rect x="23" y="372" width="23" height="15" fill="rgb(209,219,37)"/><text x="26.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 1.96%)</title><rect x="23" y="388" width="23" height="15" fill="rgb(250,27,2)"/><text x="26.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 1.96%)</title><rect x="23" y="404" width="23" height="15" fill="rgb(217,14,32)"/><text x="26.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 1.96%)</title><rect x="23" y="420" width="23" height="15" fill="rgb(245,153,50)"/><text x="26.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 0.78%)</title><rect x="37" y="436" width="9" height="15" fill="rgb(240,102,46)"/><text x="40.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.78%)</title><rect x="37" y="452" width="9" height="15" fill="rgb(212,218,6)"/><text x="40.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.78%)</title><rect x="37" y="468" width="9" height="15" fill="rgb(250,216,28)"/><text x="40.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.78%)</title><rect x="37" y="484" width="9" height="15" fill="rgb(253,173,25)"/><text x="40.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.78%)</title><rect x="37" y="500" width="9" height="15" fill="rgb(236,120,19)"/><text x="40.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.78%)</title><rect x="37" y="516" width="9" height="15" fill="rgb(216,78,38)"/><text x="40.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.78%)</title><rect x="37" y="532" width="9" height="15" fill="rgb(247,53,50)"/><text x="40.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.78%)</title><rect x="37" y="548" width="9" height="15" fill="rgb(213,85,19)"/><text x="40.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.78%)</title><rect x="37" y="564" width="9" height="15" fill="rgb(227,204,3)"/><text x="40.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 0.78%)</title><rect x="37" y="580" width="9" height="15" fill="rgb(224,196,33)"/><text x="40.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.78%)</title><rect x="37" y="596" width="9" height="15" fill="rgb(213,43,36)"/><text x="40.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.78%)</title><rect x="37" y="612" width="9" height="15" fill="rgb(253,166,37)"/><text x="40.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.78%)</title><rect x="37" y="628" width="9" height="15" fill="rgb(215,110,54)"/><text x="40.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.59%)</title><rect x="40" y="644" width="6" height="15" fill="rgb(215,155,14)"/><text x="43.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.59%)</title><rect x="40" y="660" width="6" height="15" fill="rgb(209,188,50)"/><text x="43.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:17) (1 samples, 0.20%)</title><rect x="44" y="676" width="2" height="15" fill="rgb(229,189,47)"/><text x="47.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="44" y="692" width="2" height="15" fill="rgb(244,3,26)"/><text x="47.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.20%)</title><rect x="44" y="708" width="2" height="15" fill="rgb(217,147,31)"/><text x="47.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="44" y="724" width="2" height="15" fill="rgb(221,93,0)"/><text x="47.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="44" y="740" width="2" height="15" fill="rgb(230,112,17)"/><text x="47.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="44" y="756" width="2" height="15" fill="rgb(235,49,2)"/><text x="47.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="44" y="772" width="2" height="15" fill="rgb(206,29,49)"/><text x="47.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="44" y="788" width="2" height="15" fill="rgb(251,99,20)"/><text x="47.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="44" y="804" width="2" height="15" fill="rgb(217,196,53)"/><text x="47.00" y="814.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/optim/__init__.py:5) (1 samples, 0.20%)</title><rect x="44" y="820" width="2" height="15" fill="rgb(228,5,25)"/><text x="47.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="44" y="836" width="2" height="15" fill="rgb(254,192,8)"/><text x="47.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="44" y="852" width="2" height="15" fill="rgb(218,228,4)"/><text x="47.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="44" y="868" width="2" height="15" fill="rgb(246,122,31)"/><text x="47.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.20%)</title><rect x="44" y="884" width="2" height="15" fill="rgb(220,227,25)"/><text x="47.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.20%)</title><rect x="44" y="900" width="2" height="15" fill="rgb(211,85,51)"/><text x="47.00" y="910.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.20%)</title><rect x="44" y="916" width="2" height="15" fill="rgb(231,184,50)"/><text x="47.00" y="926.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:47) (1 samples, 0.20%)</title><rect x="46" y="52" width="3" height="15" fill="rgb(250,216,12)"/><text x="49.00" y="62.50"></text></g><g><title>profile0_skl (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:46) (1 samples, 0.20%)</title><rect x="46" y="68" width="3" height="15" fill="rgb(218,174,51)"/><text x="49.00" y="78.50"></text></g><g><title>setup_profile0 (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:26) (1 samples, 0.20%)</title><rect x="46" y="84" width="3" height="15" fill="rgb(252,219,20)"/><text x="49.00" y="94.50"></text></g><g><title>profile0 (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:18) (1 samples, 0.20%)</title><rect x="46" y="100" width="3" height="15" fill="rgb(223,33,41)"/><text x="49.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.20%)</title><rect x="46" y="116" width="3" height="15" fill="rgb(206,198,5)"/><text x="49.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (1 samples, 0.20%)</title><rect x="46" y="132" width="3" height="15" fill="rgb(225,194,29)"/><text x="49.00" y="142.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:174) (1 samples, 0.20%)</title><rect x="46" y="148" width="3" height="15" fill="rgb(241,44,47)"/><text x="49.00" y="158.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:642) (1 samples, 0.20%)</title><rect x="46" y="164" width="3" height="15" fill="rgb(229,37,49)"/><text x="49.00" y="174.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1601) (1 samples, 0.20%)</title><rect x="46" y="180" width="3" height="15" fill="rgb(213,176,39)"/><text x="49.00" y="190.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:517) (1 samples, 0.20%)</title><rect x="46" y="196" width="3" height="15" fill="rgb(248,209,16)"/><text x="49.00" y="206.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (1 samples, 0.20%)</title><rect x="46" y="212" width="3" height="15" fill="rgb(214,211,1)"/><text x="49.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.20%)</title><rect x="46" y="228" width="3" height="15" fill="rgb(209,102,40)"/><text x="49.00" y="238.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (1 samples, 0.20%)</title><rect x="46" y="244" width="3" height="15" fill="rgb(230,111,54)"/><text x="49.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.20%)</title><rect x="46" y="260" width="3" height="15" fill="rgb(231,153,40)"/><text x="49.00" y="270.50"></text></g><g><title>array_argpartition (methods.c:1454) (1 samples, 0.20%)</title><rect x="46" y="276" width="3" height="15" fill="rgb(242,31,49)"/><text x="49.00" y="286.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (1 samples, 0.20%)</title><rect x="46" y="292" width="3" height="15" fill="rgb(206,149,10)"/><text x="49.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c:1084) (1 samples, 0.20%)</title><rect x="46" y="308" width="3" height="15" fill="rgb(206,28,5)"/><text x="49.00" y="318.50"></text></g><g><title>aintroselect_double (selection.c.src:322) (1 samples, 0.20%)</title><rect x="46" y="324" width="3" height="15" fill="rgb(229,21,26)"/><text x="49.00" y="334.50"></text></g><g><title>adumb_select_double (selection.c.src:258) (1 samples, 0.20%)</title><rect x="46" y="340" width="3" height="15" fill="rgb(206,184,48)"/><text x="49.00" y="350.50"></text></g><g><title>DOUBLE_LT (npysort_common.h:130) (1 samples, 0.20%)</title><rect x="46" y="356" width="3" height="15" fill="rgb(205,139,36)"/><text x="49.00" y="366.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:172) (1 samples, 0.20%)</title><rect x="49" y="148" width="2" height="15" fill="rgb(223,137,25)"/><text x="52.00" y="158.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.20%)</title><rect x="49" y="164" width="2" height="15" fill="rgb(226,40,35)"/><text x="52.00" y="174.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.20%)</title><rect x="49" y="180" width="2" height="15" fill="rgb(216,135,48)"/><text x="52.00" y="190.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:583) (1 samples, 0.20%)</title><rect x="51" y="164" width="2" height="15" fill="rgb(238,159,41)"/><text x="54.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.20%)</title><rect x="51" y="180" width="2" height="15" fill="rgb(216,87,1)"/><text x="54.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.20%)</title><rect x="51" y="196" width="2" height="15" fill="rgb(227,32,18)"/><text x="54.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:481) (1 samples, 0.20%)</title><rect x="53" y="180" width="3" height="15" fill="rgb(225,125,1)"/><text x="56.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.20%)</title><rect x="56" y="180" width="2" height="15" fill="rgb(219,218,35)"/><text x="59.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.20%)</title><rect x="56" y="196" width="2" height="15" fill="rgb(210,136,22)"/><text x="59.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.20%)</title><rect x="56" y="212" width="2" height="15" fill="rgb(232,92,22)"/><text x="59.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.20%)</title><rect x="58" y="180" width="2" height="15" fill="rgb(240,27,6)"/><text x="61.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.20%)</title><rect x="58" y="196" width="2" height="15" fill="rgb(245,85,38)"/><text x="61.00" y="206.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:604) (4 samples, 0.78%)</title><rect x="53" y="164" width="10" height="15" fill="rgb(236,25,22)"/><text x="56.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.20%)</title><rect x="60" y="180" width="3" height="15" fill="rgb(234,172,36)"/><text x="63.00" y="190.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (1 samples, 0.20%)</title><rect x="63" y="196" width="2" height="15" fill="rgb(229,225,48)"/><text x="66.00" y="206.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (1 samples, 0.20%)</title><rect x="63" y="212" width="2" height="15" fill="rgb(224,224,4)"/><text x="66.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:39) (1 samples, 0.20%)</title><rect x="63" y="228" width="2" height="15" fill="rgb(218,17,16)"/><text x="66.00" y="238.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:620) (2 samples, 0.39%)</title><rect x="63" y="164" width="4" height="15" fill="rgb(230,157,38)"/><text x="66.00" y="174.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py:388) (2 samples, 0.39%)</title><rect x="63" y="180" width="4" height="15" fill="rgb(229,31,53)"/><text x="66.00" y="190.50"></text></g><g><title>get_active_backend (joblib/parallel.py:118) (1 samples, 0.20%)</title><rect x="65" y="196" width="2" height="15" fill="rgb(249,113,2)"/><text x="68.00" y="206.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:622) (1 samples, 0.20%)</title><rect x="67" y="164" width="3" height="15" fill="rgb(223,132,35)"/><text x="70.00" y="174.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1584) (1 samples, 0.20%)</title><rect x="70" y="180" width="2" height="15" fill="rgb(226,137,38)"/><text x="73.00" y="190.50"></text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py:1347) (1 samples, 0.20%)</title><rect x="74" y="212" width="2" height="15" fill="rgb(226,72,30)"/><text x="77.00" y="222.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py:389) (1 samples, 0.20%)</title><rect x="74" y="228" width="2" height="15" fill="rgb(247,62,8)"/><text x="77.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.20%)</title><rect x="76" y="260" width="3" height="15" fill="rgb(222,20,37)"/><text x="79.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.20%)</title><rect x="79" y="260" width="2" height="15" fill="rgb(246,144,6)"/><text x="82.00" y="270.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.20%)</title><rect x="79" y="276" width="2" height="15" fill="rgb(224,170,40)"/><text x="82.00" y="286.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.20%)</title><rect x="79" y="292" width="2" height="15" fill="rgb(210,124,39)"/><text x="82.00" y="302.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.20%)</title><rect x="79" y="308" width="2" height="15" fill="rgb(211,152,25)"/><text x="82.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.20%)</title><rect x="79" y="324" width="2" height="15" fill="rgb(253,106,47)"/><text x="82.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (1 samples, 0.20%)</title><rect x="79" y="340" width="2" height="15" fill="rgb(235,185,52)"/><text x="82.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.20%)</title><rect x="79" y="356" width="2" height="15" fill="rgb(217,84,22)"/><text x="82.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.20%)</title><rect x="79" y="372" width="2" height="15" fill="rgb(222,29,8)"/><text x="82.00" y="382.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.20%)</title><rect x="79" y="388" width="2" height="15" fill="rgb(236,148,17)"/><text x="82.00" y="398.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.20%)</title><rect x="81" y="260" width="2" height="15" fill="rgb(231,213,13)"/><text x="84.00" y="270.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.20%)</title><rect x="81" y="276" width="2" height="15" fill="rgb(227,108,27)"/><text x="84.00" y="286.50"></text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py:141) (4 samples, 0.78%)</title><rect x="76" y="244" width="10" height="15" fill="rgb(234,200,7)"/><text x="79.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.20%)</title><rect x="83" y="260" width="3" height="15" fill="rgb(215,132,31)"/><text x="86.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.20%)</title><rect x="83" y="276" width="3" height="15" fill="rgb(208,1,28)"/><text x="86.00" y="286.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.20%)</title><rect x="86" y="276" width="2" height="15" fill="rgb(241,48,53)"/><text x="89.00" y="286.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:262) (6 samples, 1.17%)</title><rect x="76" y="228" width="14" height="15" fill="rgb(214,82,7)"/><text x="79.00" y="238.50"></text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py:144) (2 samples, 0.39%)</title><rect x="86" y="244" width="4" height="15" fill="rgb(241,118,31)"/><text x="89.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.39%)</title><rect x="86" y="260" width="4" height="15" fill="rgb(219,220,47)"/><text x="89.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.20%)</title><rect x="88" y="276" width="2" height="15" fill="rgb(232,100,45)"/><text x="91.00" y="286.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:279) (1 samples, 0.20%)</title><rect x="90" y="228" width="3" height="15" fill="rgb(215,221,54)"/><text x="93.00" y="238.50"></text></g><g><title>row_norms (sklearn/utils/extmath.py:74) (1 samples, 0.20%)</title><rect x="90" y="244" width="3" height="15" fill="rgb(254,32,19)"/><text x="93.00" y="254.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.20%)</title><rect x="90" y="260" width="3" height="15" fill="rgb(212,68,15)"/><text x="93.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.20%)</title><rect x="90" y="276" width="3" height="15" fill="rgb(253,120,52)"/><text x="93.00" y="286.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py:1356) (1 samples, 0.20%)</title><rect x="90" y="292" width="3" height="15" fill="rgb(253,130,41)"/><text x="93.00" y="302.50"></text></g><g><title>array_einsum (multiarraymodule.c:2693) (1 samples, 0.20%)</title><rect x="90" y="308" width="3" height="15" fill="rgb(212,134,52)"/><text x="93.00" y="318.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src:2768) (1 samples, 0.20%)</title><rect x="90" y="324" width="3" height="15" fill="rgb(220,123,34)"/><text x="93.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:176) (1 samples, 0.20%)</title><rect x="90" y="340" width="3" height="15" fill="rgb(217,217,26)"/><text x="93.00" y="350.50"></text></g><g><title>npyiter_check_op_axes (nditer_constr.c:809) (1 samples, 0.20%)</title><rect x="90" y="356" width="3" height="15" fill="rgb(252,114,25)"/><text x="93.00" y="366.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;:4) (1 samples, 0.20%)</title><rect x="93" y="260" width="2" height="15" fill="rgb(244,132,37)"/><text x="96.00" y="270.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:295) (2 samples, 0.39%)</title><rect x="93" y="228" width="4" height="15" fill="rgb(246,43,1)"/><text x="96.00" y="238.50"></text></g><g><title>row_norms (sklearn/utils/extmath.py:74) (2 samples, 0.39%)</title><rect x="93" y="244" width="4" height="15" fill="rgb(230,137,22)"/><text x="96.00" y="254.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.20%)</title><rect x="95" y="260" width="2" height="15" fill="rgb(252,115,38)"/><text x="98.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.20%)</title><rect x="95" y="276" width="2" height="15" fill="rgb(233,211,16)"/><text x="98.00" y="286.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py:1356) (1 samples, 0.20%)</title><rect x="95" y="292" width="2" height="15" fill="rgb(250,17,24)"/><text x="98.00" y="302.50"></text></g><g><title>array_einsum (multiarraymodule.c:2693) (1 samples, 0.20%)</title><rect x="95" y="308" width="2" height="15" fill="rgb(216,171,37)"/><text x="98.00" y="318.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src:2768) (1 samples, 0.20%)</title><rect x="95" y="324" width="2" height="15" fill="rgb(241,53,0)"/><text x="98.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:232) (1 samples, 0.20%)</title><rect x="95" y="340" width="2" height="15" fill="rgb(241,114,53)"/><text x="98.00" y="350.50"></text></g><g><title>sse2_binary_scalar2_multiply_DOUBLE (simd.inc.src:765) (4 samples, 0.78%)</title><rect x="97" y="340" width="9" height="15" fill="rgb(211,163,10)"/><text x="100.00" y="350.50"></text></g><g><title>_mm_mul_pd (emmintrin.h:253) (4 samples, 0.78%)</title><rect x="97" y="356" width="9" height="15" fill="rgb(216,32,17)"/><text x="100.00" y="366.50"></text></g><g><title>array_multiply (number.c:350) (7 samples, 1.37%)</title><rect x="97" y="244" width="16" height="15" fill="rgb(245,179,24)"/><text x="100.00" y="254.50"></text></g><g><title>try_binary_elide (temp_elide.c:350) (7 samples, 1.37%)</title><rect x="97" y="260" width="16" height="15" fill="rgb(237,108,9)"/><text x="100.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.37%)</title><rect x="97" y="276" width="16" height="15" fill="rgb(243,79,27)"/><text x="100.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.37%)</title><rect x="97" y="292" width="16" height="15" fill="rgb(206,27,2)"/><text x="100.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (7 samples, 1.37%)</title><rect x="97" y="308" width="16" height="15" fill="rgb(208,94,21)"/><text x="100.00" y="318.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (7 samples, 1.37%)</title><rect x="97" y="324" width="16" height="15" fill="rgb(236,39,25)"/><text x="100.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_multiply_DOUBLE (simd.inc.src:766) (3 samples, 0.59%)</title><rect x="106" y="340" width="7" height="15" fill="rgb(239,176,50)"/><text x="109.00" y="350.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (3 samples, 0.59%)</title><rect x="106" y="356" width="7" height="15" fill="rgb(217,204,39)"/><text x="109.00" y="366.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.39%)</title><rect x="113" y="260" width="5" height="15" fill="rgb(223,75,1)"/><text x="116.00" y="270.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.78%)</title><rect x="118" y="260" width="9" height="15" fill="rgb(244,209,0)"/><text x="121.00" y="270.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 2.15%)</title><rect x="132" y="388" width="25" height="15" fill="rgb(238,204,53)"/><text x="135.00" y="398.50">e..</text></g><g><title>sched_yield (libc-2.29.so) (11 samples, 2.15%)</title><rect x="132" y="404" width="25" height="15" fill="rgb(211,160,7)"/><text x="135.00" y="414.50">s..</text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:303) (27 samples, 5.28%)</title><rect x="97" y="228" width="63" height="15" fill="rgb(250,155,20)"/><text x="100.00" y="238.50">euclid..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (20 samples, 3.91%)</title><rect x="113" y="244" width="47" height="15" fill="rgb(240,17,22)"/><text x="116.00" y="254.50">safe..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (14 samples, 2.74%)</title><rect x="127" y="260" width="33" height="15" fill="rgb(214,82,49)"/><text x="130.00" y="270.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (14 samples, 2.74%)</title><rect x="127" y="276" width="33" height="15" fill="rgb(215,136,38)"/><text x="130.00" y="286.50">Py..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (14 samples, 2.74%)</title><rect x="127" y="292" width="33" height="15" fill="rgb(205,123,25)"/><text x="130.00" y="302.50">Py..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (14 samples, 2.74%)</title><rect x="127" y="308" width="33" height="15" fill="rgb(241,176,18)"/><text x="130.00" y="318.50">DO..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 2.74%)</title><rect x="127" y="324" width="33" height="15" fill="rgb(227,173,6)"/><text x="130.00" y="334.50">cb..</text></g><g><title>dgemm_thread_tn (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 2.74%)</title><rect x="127" y="340" width="33" height="15" fill="rgb(248,91,45)"/><text x="130.00" y="350.50">dg..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 2.54%)</title><rect x="130" y="356" width="30" height="15" fill="rgb(236,200,5)"/><text x="133.00" y="366.50">ge..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 2.35%)</title><rect x="132" y="372" width="28" height="15" fill="rgb(211,14,51)"/><text x="135.00" y="382.50">e..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.20%)</title><rect x="157" y="388" width="3" height="15" fill="rgb(206,203,7)"/><text x="160.00" y="398.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.20%)</title><rect x="157" y="404" width="3" height="15" fill="rgb(239,15,44)"/><text x="160.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="160" y="260" width="2" height="15" fill="rgb(224,70,5)"/><text x="163.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.20%)</title><rect x="160" y="276" width="2" height="15" fill="rgb(245,6,52)"/><text x="163.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.20%)</title><rect x="160" y="292" width="2" height="15" fill="rgb(248,19,37)"/><text x="163.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.20%)</title><rect x="160" y="308" width="2" height="15" fill="rgb(215,136,9)"/><text x="163.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.39%)</title><rect x="162" y="292" width="5" height="15" fill="rgb(215,34,17)"/><text x="165.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.39%)</title><rect x="162" y="308" width="5" height="15" fill="rgb(231,187,53)"/><text x="165.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.39%)</title><rect x="162" y="324" width="5" height="15" fill="rgb(241,102,54)"/><text x="165.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.39%)</title><rect x="162" y="340" width="5" height="15" fill="rgb(236,227,1)"/><text x="165.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (2 samples, 0.39%)</title><rect x="162" y="356" width="5" height="15" fill="rgb(211,198,8)"/><text x="165.00" y="366.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (2 samples, 0.39%)</title><rect x="167" y="340" width="4" height="15" fill="rgb(252,167,36)"/><text x="170.00" y="350.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (2 samples, 0.39%)</title><rect x="167" y="356" width="4" height="15" fill="rgb(237,54,9)"/><text x="170.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (4 samples, 0.78%)</title><rect x="167" y="308" width="9" height="15" fill="rgb(217,175,41)"/><text x="170.00" y="318.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (4 samples, 0.78%)</title><rect x="167" y="324" width="9" height="15" fill="rgb(235,226,39)"/><text x="170.00" y="334.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (2 samples, 0.39%)</title><rect x="171" y="340" width="5" height="15" fill="rgb(241,98,34)"/><text x="174.00" y="350.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.39%)</title><rect x="171" y="356" width="5" height="15" fill="rgb(234,127,16)"/><text x="174.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.20%)</title><rect x="176" y="340" width="2" height="15" fill="rgb(248,96,33)"/><text x="179.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.20%)</title><rect x="178" y="356" width="2" height="15" fill="rgb(245,3,53)"/><text x="181.00" y="366.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:304) (15 samples, 2.94%)</title><rect x="160" y="228" width="34" height="15" fill="rgb(254,25,23)"/><text x="163.00" y="238.50">eu..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (15 samples, 2.94%)</title><rect x="160" y="244" width="34" height="15" fill="rgb(243,43,40)"/><text x="163.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (14 samples, 2.74%)</title><rect x="162" y="260" width="32" height="15" fill="rgb(215,11,14)"/><text x="165.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (14 samples, 2.74%)</title><rect x="162" y="276" width="32" height="15" fill="rgb(247,4,14)"/><text x="165.00" y="286.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (12 samples, 2.35%)</title><rect x="167" y="292" width="27" height="15" fill="rgb(209,80,20)"/><text x="170.00" y="302.50">i..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:322) (8 samples, 1.57%)</title><rect x="176" y="308" width="18" height="15" fill="rgb(216,200,13)"/><text x="179.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (8 samples, 1.57%)</title><rect x="176" y="324" width="18" height="15" fill="rgb(240,229,45)"/><text x="179.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (7 samples, 1.37%)</title><rect x="178" y="340" width="16" height="15" fill="rgb(221,133,44)"/><text x="181.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (6 samples, 1.17%)</title><rect x="180" y="356" width="14" height="15" fill="rgb(215,116,19)"/><text x="183.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.20%)</title><rect x="194" y="292" width="3" height="15" fill="rgb(208,184,26)"/><text x="197.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.20%)</title><rect x="194" y="308" width="3" height="15" fill="rgb(207,53,48)"/><text x="197.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.20%)</title><rect x="194" y="324" width="3" height="15" fill="rgb(228,186,11)"/><text x="197.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.20%)</title><rect x="194" y="340" width="3" height="15" fill="rgb(234,139,15)"/><text x="197.00" y="350.50"></text></g><g><title>0x7f1caf00ff4a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="194" y="356" width="3" height="15" fill="rgb(205,132,53)"/><text x="197.00" y="366.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:600) (2 samples, 0.39%)</title><rect x="197" y="340" width="4" height="15" fill="rgb(210,147,30)"/><text x="200.00" y="350.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (3 samples, 0.59%)</title><rect x="201" y="340" width="7" height="15" fill="rgb(236,119,3)"/><text x="204.00" y="350.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (3 samples, 0.59%)</title><rect x="201" y="356" width="7" height="15" fill="rgb(230,77,30)"/><text x="204.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (6 samples, 1.17%)</title><rect x="197" y="308" width="13" height="15" fill="rgb(224,203,52)"/><text x="200.00" y="318.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (6 samples, 1.17%)</title><rect x="197" y="324" width="13" height="15" fill="rgb(208,161,19)"/><text x="200.00" y="334.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.20%)</title><rect x="208" y="340" width="2" height="15" fill="rgb(227,59,54)"/><text x="211.00" y="350.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.20%)</title><rect x="208" y="356" width="2" height="15" fill="rgb(242,87,10)"/><text x="211.00" y="366.50"></text></g><g><title>0x7f1caf00ff03 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="210" y="356" width="3" height="15" fill="rgb(228,206,24)"/><text x="213.00" y="366.50"></text></g><g><title>0x7f1caf00ff16 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="213" y="356" width="2" height="15" fill="rgb(223,56,30)"/><text x="216.00" y="366.50"></text></g><g><title>0x7f1caf00ff3a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="215" y="356" width="2" height="15" fill="rgb(237,169,32)"/><text x="218.00" y="366.50"></text></g><g><title>0x7f1caf00ff4e (libc-2.29.so) (1 samples, 0.20%)</title><rect x="217" y="356" width="3" height="15" fill="rgb(211,228,39)"/><text x="220.00" y="366.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:305) (13 samples, 2.54%)</title><rect x="194" y="228" width="30" height="15" fill="rgb(232,39,37)"/><text x="197.00" y="238.50">eu..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 2.54%)</title><rect x="194" y="244" width="30" height="15" fill="rgb(223,167,34)"/><text x="197.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (13 samples, 2.54%)</title><rect x="194" y="260" width="30" height="15" fill="rgb(219,199,6)"/><text x="197.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (13 samples, 2.54%)</title><rect x="194" y="276" width="30" height="15" fill="rgb(221,11,16)"/><text x="197.00" y="286.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (12 samples, 2.35%)</title><rect x="197" y="292" width="27" height="15" fill="rgb(220,226,46)"/><text x="200.00" y="302.50">i..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:322) (6 samples, 1.17%)</title><rect x="210" y="308" width="14" height="15" fill="rgb(217,72,10)"/><text x="213.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 1.17%)</title><rect x="210" y="324" width="14" height="15" fill="rgb(243,228,21)"/><text x="213.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (6 samples, 1.17%)</title><rect x="210" y="340" width="14" height="15" fill="rgb(250,11,41)"/><text x="213.00" y="350.50"></text></g><g><title>0x7f1caf00ff58 (libc-2.29.so) (2 samples, 0.39%)</title><rect x="220" y="356" width="4" height="15" fill="rgb(205,220,20)"/><text x="223.00" y="366.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1867) (7 samples, 1.37%)</title><rect x="227" y="308" width="16" height="15" fill="rgb(219,135,23)"/><text x="230.00" y="318.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1868) (2 samples, 0.39%)</title><rect x="243" y="308" width="4" height="15" fill="rgb(233,168,36)"/><text x="246.00" y="318.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (4 samples, 0.78%)</title><rect x="247" y="308" width="10" height="15" fill="rgb(219,197,34)"/><text x="250.00" y="318.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1592) (84 samples, 16.44%)</title><rect x="72" y="180" width="194" height="15" fill="rgb(235,39,5)"/><text x="75.00" y="190.50">pairwise_distances_chunke..</text></g><g><title>pairwise_distances (sklearn/metrics/pairwise.py:1749) (84 samples, 16.44%)</title><rect x="72" y="196" width="194" height="15" fill="rgb(214,39,22)"/><text x="75.00" y="206.50">pairwise_distances (sklea..</text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py:1348) (82 samples, 16.05%)</title><rect x="76" y="212" width="190" height="15" fill="rgb(236,189,53)"/><text x="79.00" y="222.50">_parallel_pairwise (skle..</text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:306) (18 samples, 3.52%)</title><rect x="224" y="228" width="42" height="15" fill="rgb(229,106,43)"/><text x="227.00" y="238.50">euc..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (17 samples, 3.33%)</title><rect x="227" y="244" width="39" height="15" fill="rgb(214,115,3)"/><text x="230.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (17 samples, 3.33%)</title><rect x="227" y="260" width="39" height="15" fill="rgb(247,223,24)"/><text x="230.00" y="270.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (17 samples, 3.33%)</title><rect x="227" y="276" width="39" height="15" fill="rgb(208,202,28)"/><text x="230.00" y="286.50">exe..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (17 samples, 3.33%)</title><rect x="227" y="292" width="39" height="15" fill="rgb(220,112,33)"/><text x="230.00" y="302.50">tri..</text></g><g><title>DOUBLE_maximum (loops.c.src:1872) (4 samples, 0.78%)</title><rect x="257" y="308" width="9" height="15" fill="rgb(225,68,11)"/><text x="260.00" y="318.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:516) (1 samples, 0.20%)</title><rect x="266" y="196" width="2" height="15" fill="rgb(244,54,6)"/><text x="269.00" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c:2763) (1 samples, 0.20%)</title><rect x="266" y="212" width="2" height="15" fill="rgb(254,131,3)"/><text x="269.00" y="222.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3473) (1 samples, 0.20%)</title><rect x="266" y="228" width="2" height="15" fill="rgb(253,164,38)"/><text x="269.00" y="238.50"></text></g><g><title>array_argpartition (methods.c:1414) (1 samples, 0.20%)</title><rect x="268" y="276" width="2" height="15" fill="rgb(229,126,2)"/><text x="271.00" y="286.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.20%)</title><rect x="268" y="292" width="2" height="15" fill="rgb(236,105,49)"/><text x="271.00" y="302.50"></text></g><g><title>0x7f1caf0cd134 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="268" y="308" width="2" height="15" fill="rgb(210,150,15)"/><text x="271.00" y="318.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c:1365) (1 samples, 0.20%)</title><rect x="270" y="292" width="3" height="15" fill="rgb(225,136,5)"/><text x="273.00" y="302.50"></text></g><g><title>partition_prep_kth_array (item_selection.c:1197) (1 samples, 0.20%)</title><rect x="270" y="308" width="3" height="15" fill="rgb(253,87,18)"/><text x="273.00" y="318.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.20%)</title><rect x="270" y="324" width="3" height="15" fill="rgb(226,64,11)"/><text x="273.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.20%)</title><rect x="270" y="340" width="3" height="15" fill="rgb(230,41,11)"/><text x="273.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.20%)</title><rect x="270" y="356" width="3" height="15" fill="rgb(227,119,9)"/><text x="273.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:53) (1 samples, 0.20%)</title><rect x="270" y="372" width="3" height="15" fill="rgb(241,36,16)"/><text x="273.00" y="382.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.20%)</title><rect x="270" y="388" width="3" height="15" fill="rgb(216,146,31)"/><text x="273.00" y="398.50"></text></g><g><title>_new_argsortlike (item_selection.c:1022) (1 samples, 0.20%)</title><rect x="273" y="308" width="2" height="15" fill="rgb(208,105,3)"/><text x="276.00" y="318.50"></text></g><g><title>_new_argsortlike (item_selection.c:1057) (2 samples, 0.39%)</title><rect x="275" y="308" width="5" height="15" fill="rgb(221,43,54)"/><text x="278.00" y="318.50"></text></g><g><title>_new_argsortlike (item_selection.c:1074) (1 samples, 0.20%)</title><rect x="280" y="308" width="2" height="15" fill="rgb(238,11,38)"/><text x="283.00" y="318.50"></text></g><g><title>_new_argsortlike (item_selection.c:1077) (1 samples, 0.20%)</title><rect x="282" y="308" width="2" height="15" fill="rgb(206,92,22)"/><text x="285.00" y="318.50"></text></g><g><title>adumb_select_double (selection.c.src:257) (9 samples, 1.76%)</title><rect x="284" y="340" width="21" height="15" fill="rgb(227,49,51)"/><text x="287.00" y="350.50"></text></g><g><title>adumb_select_double (selection.c.src:258) (54 samples, 10.57%)</title><rect x="305" y="340" width="125" height="15" fill="rgb(234,100,20)"/><text x="308.00" y="350.50">adumb_select_do..</text></g><g><title>DOUBLE_LT (npysort_common.h:130) (49 samples, 9.59%)</title><rect x="317" y="356" width="113" height="15" fill="rgb(212,68,8)"/><text x="320.00" y="366.50">DOUBLE_LT (np..</text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:517) (71 samples, 13.89%)</title><rect x="268" y="196" width="164" height="15" fill="rgb(231,212,2)"/><text x="271.00" y="206.50">_kneighbors_reduce_fu..</text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (71 samples, 13.89%)</title><rect x="268" y="212" width="164" height="15" fill="rgb(254,168,9)"/><text x="271.00" y="222.50">argpartition (&lt;__arra..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (71 samples, 13.89%)</title><rect x="268" y="228" width="164" height="15" fill="rgb(251,140,43)"/><text x="271.00" y="238.50">array_implement_array..</text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (71 samples, 13.89%)</title><rect x="268" y="244" width="164" height="15" fill="rgb(233,112,44)"/><text x="271.00" y="254.50">argpartition (numpy/c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (71 samples, 13.89%)</title><rect x="268" y="260" width="164" height="15" fill="rgb(217,68,29)"/><text x="271.00" y="270.50">_wrapfunc (numpy/core..</text></g><g><title>array_argpartition (methods.c:1454) (70 samples, 13.70%)</title><rect x="270" y="276" width="162" height="15" fill="rgb(211,162,24)"/><text x="273.00" y="286.50">array_argpartition (..</text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (69 samples, 13.50%)</title><rect x="273" y="292" width="159" height="15" fill="rgb(253,167,9)"/><text x="276.00" y="302.50">PyArray_ArgPartition..</text></g><g><title>_new_argsortlike (item_selection.c:1084) (64 samples, 12.52%)</title><rect x="284" y="308" width="148" height="15" fill="rgb(248,103,18)"/><text x="287.00" y="318.50">_new_argsortlike (..</text></g><g><title>aintroselect_double (selection.c.src:322) (64 samples, 12.52%)</title><rect x="284" y="324" width="148" height="15" fill="rgb(245,212,20)"/><text x="287.00" y="334.50">aintroselect_doubl..</text></g><g><title>adumb_select_double (selection.c.src:260) (1 samples, 0.20%)</title><rect x="430" y="340" width="2" height="15" fill="rgb(213,129,40)"/><text x="433.00" y="350.50"></text></g><g><title>array_argsort (methods.c:1360) (1 samples, 0.20%)</title><rect x="432" y="276" width="2" height="15" fill="rgb(208,36,22)"/><text x="435.00" y="286.50"></text></g><g><title>_new_argsortlike (item_selection.c:1020) (1 samples, 0.20%)</title><rect x="434" y="308" width="3" height="15" fill="rgb(249,113,31)"/><text x="437.00" y="318.50"></text></g><g><title>_new_argsortlike (item_selection.c:1023) (1 samples, 0.20%)</title><rect x="437" y="308" width="2" height="15" fill="rgb(211,94,27)"/><text x="440.00" y="318.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (1 samples, 0.20%)</title><rect x="439" y="308" width="2" height="15" fill="rgb(210,157,4)"/><text x="442.00" y="318.50"></text></g><g><title>aquicksort_double (quicksort.c.src:237) (1 samples, 0.20%)</title><rect x="439" y="324" width="2" height="15" fill="rgb(211,66,13)"/><text x="442.00" y="334.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (5 samples, 0.98%)</title><rect x="432" y="212" width="12" height="15" fill="rgb(254,203,42)"/><text x="435.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 0.98%)</title><rect x="432" y="228" width="12" height="15" fill="rgb(244,177,38)"/><text x="435.00" y="238.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (5 samples, 0.98%)</title><rect x="432" y="244" width="12" height="15" fill="rgb(215,95,26)"/><text x="435.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (5 samples, 0.98%)</title><rect x="432" y="260" width="12" height="15" fill="rgb(227,28,50)"/><text x="435.00" y="270.50"></text></g><g><title>array_argsort (methods.c:1395) (4 samples, 0.78%)</title><rect x="434" y="276" width="10" height="15" fill="rgb(219,40,48)"/><text x="437.00" y="286.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (4 samples, 0.78%)</title><rect x="434" y="292" width="10" height="15" fill="rgb(208,145,3)"/><text x="437.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c:984) (1 samples, 0.20%)</title><rect x="441" y="308" width="3" height="15" fill="rgb(238,168,6)"/><text x="444.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.20%)</title><rect x="441" y="324" width="3" height="15" fill="rgb(238,46,28)"/><text x="444.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.20%)</title><rect x="441" y="340" width="3" height="15" fill="rgb(250,130,52)"/><text x="444.00" y="350.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.20%)</title><rect x="441" y="356" width="3" height="15" fill="rgb(226,50,20)"/><text x="444.00" y="366.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (1 samples, 0.20%)</title><rect x="444" y="228" width="2" height="15" fill="rgb(242,69,29)"/><text x="447.00" y="238.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.20%)</title><rect x="444" y="244" width="2" height="15" fill="rgb(230,52,0)"/><text x="447.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.20%)</title><rect x="444" y="260" width="2" height="15" fill="rgb(228,222,21)"/><text x="447.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.20%)</title><rect x="444" y="276" width="2" height="15" fill="rgb(234,120,38)"/><text x="447.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1656) (2 samples, 0.39%)</title><rect x="444" y="212" width="4" height="15" fill="rgb(219,115,3)"/><text x="447.00" y="222.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (1 samples, 0.20%)</title><rect x="446" y="228" width="2" height="15" fill="rgb(222,167,34)"/><text x="449.00" y="238.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (1 samples, 0.20%)</title><rect x="446" y="244" width="2" height="15" fill="rgb(225,199,11)"/><text x="449.00" y="254.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (1 samples, 0.20%)</title><rect x="446" y="260" width="2" height="15" fill="rgb(212,162,24)"/><text x="449.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.20%)</title><rect x="446" y="276" width="2" height="15" fill="rgb(223,35,7)"/><text x="449.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.20%)</title><rect x="446" y="292" width="2" height="15" fill="rgb(230,54,43)"/><text x="449.00" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.20%)</title><rect x="446" y="308" width="2" height="15" fill="rgb(241,78,16)"/><text x="449.00" y="318.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2515) (1 samples, 0.20%)</title><rect x="448" y="228" width="3" height="15" fill="rgb(234,170,11)"/><text x="451.00" y="238.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2535) (1 samples, 0.20%)</title><rect x="451" y="228" width="2" height="15" fill="rgb(245,177,2)"/><text x="454.00" y="238.50"></text></g><g><title>NpyIter_New (nditer_constr.c:534) (1 samples, 0.20%)</title><rect x="451" y="244" width="2" height="15" fill="rgb(217,85,10)"/><text x="454.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.20%)</title><rect x="451" y="260" width="2" height="15" fill="rgb(209,198,42)"/><text x="454.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.20%)</title><rect x="451" y="276" width="2" height="15" fill="rgb(212,110,48)"/><text x="454.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.20%)</title><rect x="451" y="292" width="2" height="15" fill="rgb(221,138,19)"/><text x="454.00" y="302.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (1 samples, 0.20%)</title><rect x="451" y="308" width="2" height="15" fill="rgb(210,26,27)"/><text x="454.00" y="318.50"></text></g><g><title>array_subscript (mapping.c:1666) (3 samples, 0.59%)</title><rect x="448" y="212" width="7" height="15" fill="rgb(219,50,54)"/><text x="451.00" y="222.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2553) (1 samples, 0.20%)</title><rect x="453" y="228" width="2" height="15" fill="rgb(249,159,11)"/><text x="456.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1564) (1 samples, 0.20%)</title><rect x="455" y="228" width="2" height="15" fill="rgb(245,120,3)"/><text x="458.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1577) (2 samples, 0.39%)</title><rect x="457" y="228" width="5" height="15" fill="rgb(206,88,48)"/><text x="460.00" y="238.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:521) (14 samples, 2.74%)</title><rect x="432" y="196" width="32" height="15" fill="rgb(212,35,50)"/><text x="435.00" y="206.50">_k..</text></g><g><title>array_subscript (mapping.c:1676) (4 samples, 0.78%)</title><rect x="455" y="212" width="9" height="15" fill="rgb(213,196,4)"/><text x="458.00" y="222.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.20%)</title><rect x="462" y="228" width="2" height="15" fill="rgb(233,203,28)"/><text x="465.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1564) (1 samples, 0.20%)</title><rect x="464" y="228" width="3" height="15" fill="rgb(221,147,33)"/><text x="467.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1676) (2 samples, 0.39%)</title><rect x="464" y="212" width="5" height="15" fill="rgb(224,0,19)"/><text x="467.00" y="222.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1581) (1 samples, 0.20%)</title><rect x="467" y="228" width="2" height="15" fill="rgb(214,43,50)"/><text x="470.00" y="238.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:524) (3 samples, 0.59%)</title><rect x="464" y="196" width="7" height="15" fill="rgb(242,90,14)"/><text x="467.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4757) (1 samples, 0.20%)</title><rect x="469" y="212" width="2" height="15" fill="rgb(206,164,41)"/><text x="472.00" y="222.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:174) (183 samples, 35.81%)</title><rect x="51" y="148" width="423" height="15" fill="rgb(214,41,19)"/><text x="54.00" y="158.50">predict (sklearn/neighbors/_regression.py:174)</text></g><g><title>kneighbors (sklearn/neighbors/_base.py:642) (175 samples, 34.25%)</title><rect x="70" y="164" width="404" height="15" fill="rgb(238,88,37)"/><text x="73.00" y="174.50">kneighbors (sklearn/neighbors/_base.py:642)</text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1601) (90 samples, 17.61%)</title><rect x="266" y="180" width="208" height="15" fill="rgb(234,198,41)"/><text x="269.00" y="190.50">pairwise_distances_chunked ..</text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:529) (1 samples, 0.20%)</title><rect x="471" y="196" width="3" height="15" fill="rgb(242,130,13)"/><text x="474.00" y="206.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:176) (1 samples, 0.20%)</title><rect x="474" y="148" width="2" height="15" fill="rgb(206,130,6)"/><text x="477.00" y="158.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:182) (1 samples, 0.20%)</title><rect x="476" y="148" width="2" height="15" fill="rgb(225,135,3)"/><text x="479.00" y="158.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.20%)</title><rect x="478" y="164" width="3" height="15" fill="rgb(218,220,13)"/><text x="481.00" y="174.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.20%)</title><rect x="478" y="180" width="3" height="15" fill="rgb(217,219,2)"/><text x="481.00" y="190.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.20%)</title><rect x="481" y="228" width="2" height="15" fill="rgb(224,189,5)"/><text x="484.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="481" y="244" width="2" height="15" fill="rgb(218,140,4)"/><text x="484.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.20%)</title><rect x="481" y="260" width="2" height="15" fill="rgb(207,128,7)"/><text x="484.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.20%)</title><rect x="481" y="276" width="2" height="15" fill="rgb(210,164,28)"/><text x="484.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.20%)</title><rect x="481" y="292" width="2" height="15" fill="rgb(231,154,0)"/><text x="484.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.20%)</title><rect x="481" y="308" width="2" height="15" fill="rgb(216,215,47)"/><text x="484.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.39%)</title><rect x="483" y="276" width="5" height="15" fill="rgb(207,153,27)"/><text x="486.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (2 samples, 0.39%)</title><rect x="483" y="292" width="5" height="15" fill="rgb(209,159,27)"/><text x="486.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.39%)</title><rect x="483" y="308" width="5" height="15" fill="rgb(224,99,14)"/><text x="486.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.39%)</title><rect x="483" y="324" width="5" height="15" fill="rgb(249,153,25)"/><text x="486.00" y="334.50"></text></g><g><title>_aligned_contig_cast_long_to_double (lowlevel_strided_loops.c.src:816) (1 samples, 0.20%)</title><rect x="485" y="340" width="3" height="15" fill="rgb(224,21,9)"/><text x="488.00" y="350.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:54) (191 samples, 37.38%)</title><rect x="49" y="52" width="441" height="15" fill="rgb(217,50,11)"/><text x="52.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorit..</text></g><g><title>profile_skl (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:53) (191 samples, 37.38%)</title><rect x="49" y="68" width="441" height="15" fill="rgb(227,27,21)"/><text x="52.00" y="78.50">profile_skl (bench_KNeighborsRegressor_default_k3_m_reg_algo..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:37) (191 samples, 37.38%)</title><rect x="49" y="84" width="441" height="15" fill="rgb(239,99,40)"/><text x="52.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_al..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:31) (191 samples, 37.38%)</title><rect x="49" y="100" width="441" height="15" fill="rgb(221,227,11)"/><text x="52.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_m_reg_algorith..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (191 samples, 37.38%)</title><rect x="49" y="116" width="441" height="15" fill="rgb(222,64,9)"/><text x="52.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (191 samples, 37.38%)</title><rect x="49" y="132" width="441" height="15" fill="rgb(232,120,32)"/><text x="52.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/neighbors/_regression.py:183) (5 samples, 0.98%)</title><rect x="478" y="148" width="12" height="15" fill="rgb(242,81,12)"/><text x="481.00" y="158.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:6) (4 samples, 0.78%)</title><rect x="481" y="164" width="9" height="15" fill="rgb(229,7,16)"/><text x="484.00" y="174.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.78%)</title><rect x="481" y="180" width="9" height="15" fill="rgb(214,6,11)"/><text x="484.00" y="190.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3257) (4 samples, 0.78%)</title><rect x="481" y="196" width="9" height="15" fill="rgb(209,6,19)"/><text x="484.00" y="206.50"></text></g><g><title>_mean (numpy/core/_methods.py:151) (4 samples, 0.78%)</title><rect x="481" y="212" width="9" height="15" fill="rgb(222,46,29)"/><text x="484.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.59%)</title><rect x="483" y="228" width="7" height="15" fill="rgb(238,198,52)"/><text x="486.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.59%)</title><rect x="483" y="244" width="7" height="15" fill="rgb(206,52,14)"/><text x="486.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.59%)</title><rect x="483" y="260" width="7" height="15" fill="rgb(223,186,30)"/><text x="486.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.20%)</title><rect x="488" y="276" width="2" height="15" fill="rgb(206,104,29)"/><text x="491.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.20%)</title><rect x="488" y="292" width="2" height="15" fill="rgb(211,225,35)"/><text x="491.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.20%)</title><rect x="488" y="308" width="2" height="15" fill="rgb(242,176,5)"/><text x="491.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.20%)</title><rect x="492" y="180" width="2" height="15" fill="rgb(229,137,14)"/><text x="495.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.20%)</title><rect x="494" y="180" width="3" height="15" fill="rgb(220,50,38)"/><text x="497.00" y="190.50"></text></g><g><title>LONG_getitem (arraytypes.c.src:204) (1 samples, 0.20%)</title><rect x="499" y="260" width="2" height="15" fill="rgb(215,125,23)"/><text x="502.00" y="270.50"></text></g><g><title>recursive_tolist (convert.c:112) (1 samples, 0.20%)</title><rect x="501" y="260" width="3" height="15" fill="rgb(237,228,52)"/><text x="504.00" y="270.50"></text></g><g><title>recursive_tolist (convert.c:102) (3 samples, 0.59%)</title><rect x="499" y="244" width="7" height="15" fill="rgb(240,223,53)"/><text x="502.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c:83) (1 samples, 0.20%)</title><rect x="504" y="260" width="2" height="15" fill="rgb(227,20,30)"/><text x="507.00" y="270.50"></text></g><g><title>0x7f1caeff1428 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="506" y="276" width="2" height="15" fill="rgb(223,70,52)"/><text x="509.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (5 samples, 0.98%)</title><rect x="499" y="212" width="12" height="15" fill="rgb(237,102,0)"/><text x="502.00" y="222.50"></text></g><g><title>PyArray_ToList (convert.c:120) (5 samples, 0.98%)</title><rect x="499" y="228" width="12" height="15" fill="rgb(243,154,36)"/><text x="502.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:96) (2 samples, 0.39%)</title><rect x="506" y="244" width="5" height="15" fill="rgb(245,177,47)"/><text x="509.00" y="254.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (2 samples, 0.39%)</title><rect x="506" y="260" width="5" height="15" fill="rgb(221,145,1)"/><text x="509.00" y="270.50"></text></g><g><title>0x7f1caf010103 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="508" y="276" width="3" height="15" fill="rgb(222,16,30)"/><text x="511.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:138) (1 samples, 0.20%)</title><rect x="511" y="308" width="2" height="15" fill="rgb(207,47,18)"/><text x="514.00" y="318.50"></text></g><g><title>0x7f1cae2120a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="511" y="324" width="2" height="15" fill="rgb(243,27,23)"/><text x="514.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:138) (3 samples, 0.59%)</title><rect x="513" y="324" width="7" height="15" fill="rgb(233,70,30)"/><text x="516.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:44) (3 samples, 0.59%)</title><rect x="520" y="340" width="7" height="15" fill="rgb(226,169,9)"/><text x="523.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (1 samples, 0.20%)</title><rect x="527" y="340" width="2" height="15" fill="rgb(252,203,46)"/><text x="530.00" y="350.50"></text></g><g><title>PyInt_Check (npy_3kcompat.h:37) (1 samples, 0.20%)</title><rect x="527" y="356" width="2" height="15" fill="rgb(232,198,24)"/><text x="530.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.20%)</title><rect x="529" y="356" width="2" height="15" fill="rgb(213,150,52)"/><text x="532.00" y="366.50"></text></g><g><title>_array_find_python_scalar_type (common.c:53) (2 samples, 0.39%)</title><rect x="529" y="340" width="5" height="15" fill="rgb(254,110,44)"/><text x="532.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.20%)</title><rect x="531" y="356" width="3" height="15" fill="rgb(209,85,33)"/><text x="534.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (8 samples, 1.57%)</title><rect x="520" y="324" width="18" height="15" fill="rgb(227,225,29)"/><text x="523.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:77) (2 samples, 0.39%)</title><rect x="534" y="340" width="4" height="15" fill="rgb(245,73,3)"/><text x="537.00" y="350.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (14 samples, 2.74%)</title><rect x="511" y="276" width="32" height="15" fill="rgb(253,139,53)"/><text x="514.00" y="286.50">Py..</text></g><g><title>PyArray_DTypeFromObject (common.c:108) (14 samples, 2.74%)</title><rect x="511" y="292" width="32" height="15" fill="rgb(210,215,53)"/><text x="514.00" y="302.50">Py..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (13 samples, 2.54%)</title><rect x="513" y="308" width="30" height="15" fill="rgb(253,142,41)"/><text x="516.00" y="318.50">Py..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (2 samples, 0.39%)</title><rect x="538" y="324" width="5" height="15" fill="rgb(219,168,32)"/><text x="541.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (2 samples, 0.39%)</title><rect x="538" y="340" width="5" height="15" fill="rgb(235,138,52)"/><text x="541.00" y="350.50"></text></g><g><title>discover_dimensions (ctors.c:883) (2 samples, 0.39%)</title><rect x="543" y="292" width="5" height="15" fill="rgb(230,208,21)"/><text x="546.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:699) (1 samples, 0.20%)</title><rect x="550" y="308" width="2" height="15" fill="rgb(241,136,36)"/><text x="553.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (19 samples, 3.72%)</title><rect x="511" y="260" width="43" height="15" fill="rgb(207,149,7)"/><text x="514.00" y="270.50">PyAr..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (5 samples, 0.98%)</title><rect x="543" y="276" width="11" height="15" fill="rgb(215,129,33)"/><text x="546.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:884) (3 samples, 0.59%)</title><rect x="548" y="292" width="6" height="15" fill="rgb(221,205,48)"/><text x="551.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:703) (1 samples, 0.20%)</title><rect x="552" y="308" width="2" height="15" fill="rgb(217,112,23)"/><text x="555.00" y="318.50"></text></g><g><title>setArrayFromSequence (ctors.c:536) (1 samples, 0.20%)</title><rect x="554" y="292" width="3" height="15" fill="rgb(252,127,45)"/><text x="557.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1539) (21 samples, 4.11%)</title><rect x="511" y="228" width="48" height="15" fill="rgb(214,70,10)"/><text x="514.00" y="238.50">arra..</text></g><g><title>prepare_index (mapping.c:516) (21 samples, 4.11%)</title><rect x="511" y="244" width="48" height="15" fill="rgb(236,155,9)"/><text x="514.00" y="254.50">prep..</text></g><g><title>PyArray_FromAny (ctors.c:1938) (2 samples, 0.39%)</title><rect x="554" y="260" width="5" height="15" fill="rgb(224,166,41)"/><text x="557.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (2 samples, 0.39%)</title><rect x="554" y="276" width="5" height="15" fill="rgb(227,116,25)"/><text x="557.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c:550) (1 samples, 0.20%)</title><rect x="557" y="292" width="2" height="15" fill="rgb(223,139,44)"/><text x="560.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.20%)</title><rect x="557" y="308" width="2" height="15" fill="rgb(224,210,40)"/><text x="560.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:212) (1 samples, 0.20%)</title><rect x="557" y="324" width="2" height="15" fill="rgb(220,56,9)"/><text x="560.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (22 samples, 4.31%)</title><rect x="511" y="212" width="50" height="15" fill="rgb(250,22,39)"/><text x="514.00" y="222.50">_run ..</text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.20%)</title><rect x="559" y="228" width="2" height="15" fill="rgb(239,193,36)"/><text x="562.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.20%)</title><rect x="559" y="244" width="2" height="15" fill="rgb(231,117,50)"/><text x="562.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (2 samples, 0.39%)</title><rect x="561" y="212" width="5" height="15" fill="rgb(247,57,33)"/><text x="564.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (2 samples, 0.39%)</title><rect x="561" y="228" width="5" height="15" fill="rgb(242,140,48)"/><text x="564.00" y="238.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.20%)</title><rect x="564" y="244" width="2" height="15" fill="rgb(234,65,16)"/><text x="567.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.20%)</title><rect x="564" y="260" width="2" height="15" fill="rgb(226,69,23)"/><text x="567.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.20%)</title><rect x="564" y="276" width="2" height="15" fill="rgb(235,164,22)"/><text x="567.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.20%)</title><rect x="564" y="292" width="2" height="15" fill="rgb(221,206,35)"/><text x="567.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.20%)</title><rect x="564" y="308" width="2" height="15" fill="rgb(247,163,26)"/><text x="567.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.20%)</title><rect x="564" y="324" width="2" height="15" fill="rgb(229,164,49)"/><text x="567.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.20%)</title><rect x="564" y="340" width="2" height="15" fill="rgb(222,170,44)"/><text x="567.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.20%)</title><rect x="564" y="356" width="2" height="15" fill="rgb(236,221,31)"/><text x="567.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="564" y="372" width="2" height="15" fill="rgb(229,135,22)"/><text x="567.00" y="382.50"></text></g><g><title>0x7f1caeff0b12 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="564" y="388" width="2" height="15" fill="rgb(232,60,44)"/><text x="567.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (1 samples, 0.20%)</title><rect x="566" y="212" width="2" height="15" fill="rgb(206,55,24)"/><text x="569.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.20%)</title><rect x="566" y="228" width="2" height="15" fill="rgb(226,218,6)"/><text x="569.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.20%)</title><rect x="568" y="308" width="3" height="15" fill="rgb(233,198,15)"/><text x="571.00" y="318.50"></text></g><g><title>array_argpartition (methods.c:1414) (1 samples, 0.20%)</title><rect x="571" y="324" width="2" height="15" fill="rgb(248,119,19)"/><text x="574.00" y="334.50"></text></g><g><title>PyArray_SelectkindConverter (conversion_utils.c:469) (1 samples, 0.20%)</title><rect x="571" y="340" width="2" height="15" fill="rgb(231,26,53)"/><text x="574.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1057) (3 samples, 0.59%)</title><rect x="575" y="356" width="7" height="15" fill="rgb(225,34,27)"/><text x="578.00" y="366.50"></text></g><g><title>adumb_select_float (selection.c.src:257) (11 samples, 2.15%)</title><rect x="582" y="388" width="26" height="15" fill="rgb(251,3,20)"/><text x="585.00" y="398.50">a..</text></g><g><title>aintroselect_float (selection.c.src:322) (51 samples, 9.98%)</title><rect x="582" y="372" width="118" height="15" fill="rgb(237,168,14)"/><text x="585.00" y="382.50">aintroselect_f..</text></g><g><title>adumb_select_float (selection.c.src:258) (40 samples, 7.83%)</title><rect x="608" y="388" width="92" height="15" fill="rgb(240,142,38)"/><text x="611.00" y="398.50">adumb_sele..</text></g><g><title>FLOAT_LT (npysort_common.h:123) (34 samples, 6.65%)</title><rect x="621" y="404" width="79" height="15" fill="rgb(217,175,5)"/><text x="624.00" y="414.50">FLOAT_LT ..</text></g><g><title>_new_argsortlike (item_selection.c:1084) (53 samples, 10.37%)</title><rect x="582" y="356" width="123" height="15" fill="rgb(217,55,54)"/><text x="585.00" y="366.50">_new_argsortlik..</text></g><g><title>aintroselect_float (selection.c.src:402) (2 samples, 0.39%)</title><rect x="700" y="372" width="5" height="15" fill="rgb(230,4,28)"/><text x="703.00" y="382.50"></text></g><g><title>store_pivot (selection.c.src:47) (2 samples, 0.39%)</title><rect x="700" y="388" width="5" height="15" fill="rgb(232,168,22)"/><text x="703.00" y="398.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (61 samples, 11.94%)</title><rect x="568" y="260" width="141" height="15" fill="rgb(212,89,6)"/><text x="571.00" y="270.50">argpartition (&lt;__..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (61 samples, 11.94%)</title><rect x="568" y="276" width="141" height="15" fill="rgb(247,183,53)"/><text x="571.00" y="286.50">array_implement_a..</text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (61 samples, 11.94%)</title><rect x="568" y="292" width="141" height="15" fill="rgb(206,64,31)"/><text x="571.00" y="302.50">argpartition (num..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (60 samples, 11.74%)</title><rect x="571" y="308" width="138" height="15" fill="rgb(227,203,39)"/><text x="574.00" y="318.50">_wrapfunc (numpy/..</text></g><g><title>array_argpartition (methods.c:1454) (59 samples, 11.55%)</title><rect x="573" y="324" width="136" height="15" fill="rgb(233,57,21)"/><text x="576.00" y="334.50">array_argpartitio..</text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (58 samples, 11.35%)</title><rect x="575" y="340" width="134" height="15" fill="rgb(218,93,24)"/><text x="578.00" y="350.50">PyArray_ArgParti..</text></g><g><title>_new_argsortlike (item_selection.c:1100) (2 samples, 0.39%)</title><rect x="705" y="356" width="4" height="15" fill="rgb(254,21,22)"/><text x="708.00" y="366.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:28) (62 samples, 12.13%)</title><rect x="568" y="244" width="143" height="15" fill="rgb(247,140,22)"/><text x="571.00" y="254.50">topk_sorted_implem..</text></g><g><title>long_subtract (scalarmath.c.src:825) (1 samples, 0.20%)</title><rect x="709" y="260" width="2" height="15" fill="rgb(237,114,39)"/><text x="712.00" y="270.50"></text></g><g><title>binop_should_defer (binop_override.h:97) (1 samples, 0.20%)</title><rect x="709" y="276" width="2" height="15" fill="rgb(210,75,0)"/><text x="712.00" y="286.50"></text></g><g><title>array_argsort (methods.c:1360) (1 samples, 0.20%)</title><rect x="711" y="324" width="3" height="15" fill="rgb(243,8,23)"/><text x="714.00" y="334.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (1 samples, 0.20%)</title><rect x="714" y="356" width="2" height="15" fill="rgb(220,178,0)"/><text x="717.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src:171) (1 samples, 0.20%)</title><rect x="714" y="372" width="2" height="15" fill="rgb(218,190,10)"/><text x="717.00" y="382.50"></text></g><g><title>_new_argsortlike (item_selection.c:1100) (1 samples, 0.20%)</title><rect x="716" y="356" width="2" height="15" fill="rgb(218,40,43)"/><text x="719.00" y="366.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (4 samples, 0.78%)</title><rect x="711" y="260" width="10" height="15" fill="rgb(214,56,49)"/><text x="714.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.78%)</title><rect x="711" y="276" width="10" height="15" fill="rgb(210,153,26)"/><text x="714.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (4 samples, 0.78%)</title><rect x="711" y="292" width="10" height="15" fill="rgb(231,104,48)"/><text x="714.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (4 samples, 0.78%)</title><rect x="711" y="308" width="10" height="15" fill="rgb(228,67,38)"/><text x="714.00" y="318.50"></text></g><g><title>array_argsort (methods.c:1395) (3 samples, 0.59%)</title><rect x="714" y="324" width="7" height="15" fill="rgb(215,13,6)"/><text x="717.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (3 samples, 0.59%)</title><rect x="714" y="340" width="7" height="15" fill="rgb(229,132,31)"/><text x="717.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:966) (1 samples, 0.20%)</title><rect x="718" y="356" width="3" height="15" fill="rgb(245,52,47)"/><text x="721.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.20%)</title><rect x="721" y="308" width="2" height="15" fill="rgb(214,136,21)"/><text x="724.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.20%)</title><rect x="721" y="324" width="2" height="15" fill="rgb(231,184,21)"/><text x="724.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="721" y="340" width="2" height="15" fill="rgb(222,176,6)"/><text x="724.00" y="350.50"></text></g><g><title>0x7f1caeff16df (libc-2.29.so) (1 samples, 0.20%)</title><rect x="721" y="356" width="2" height="15" fill="rgb(223,116,13)"/><text x="724.00" y="366.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2535) (2 samples, 0.39%)</title><rect x="721" y="276" width="4" height="15" fill="rgb(217,16,49)"/><text x="724.00" y="286.50"></text></g><g><title>NpyIter_New (nditer_constr.c:534) (2 samples, 0.39%)</title><rect x="721" y="292" width="4" height="15" fill="rgb(225,141,54)"/><text x="724.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.20%)</title><rect x="723" y="308" width="2" height="15" fill="rgb(246,73,6)"/><text x="726.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.20%)</title><rect x="723" y="324" width="2" height="15" fill="rgb(246,162,34)"/><text x="726.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.20%)</title><rect x="723" y="340" width="2" height="15" fill="rgb(235,62,18)"/><text x="726.00" y="350.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:32) (7 samples, 1.37%)</title><rect x="711" y="244" width="17" height="15" fill="rgb(242,42,19)"/><text x="714.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1666) (3 samples, 0.59%)</title><rect x="721" y="260" width="7" height="15" fill="rgb(215,143,15)"/><text x="724.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2547) (1 samples, 0.20%)</title><rect x="725" y="276" width="3" height="15" fill="rgb(217,150,30)"/><text x="728.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.20%)</title><rect x="728" y="260" width="2" height="15" fill="rgb(220,138,26)"/><text x="731.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (1 samples, 0.20%)</title><rect x="728" y="276" width="2" height="15" fill="rgb(209,121,12)"/><text x="731.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (1 samples, 0.20%)</title><rect x="728" y="292" width="2" height="15" fill="rgb(232,195,4)"/><text x="731.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (1 samples, 0.20%)</title><rect x="728" y="308" width="2" height="15" fill="rgb(249,67,32)"/><text x="731.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.20%)</title><rect x="728" y="324" width="2" height="15" fill="rgb(225,111,33)"/><text x="731.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.20%)</title><rect x="728" y="340" width="2" height="15" fill="rgb(252,54,47)"/><text x="731.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.20%)</title><rect x="728" y="356" width="2" height="15" fill="rgb(215,128,42)"/><text x="731.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (101 samples, 19.77%)</title><rect x="499" y="196" width="233" height="15" fill="rgb(220,122,31)"/><text x="502.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py:137) (71 samples, 13.89%)</title><rect x="568" y="212" width="164" height="15" fill="rgb(239,176,54)"/><text x="571.00" y="222.50">_run (mlprodict/onnxr..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:75) (71 samples, 13.89%)</title><rect x="568" y="228" width="164" height="15" fill="rgb(212,50,37)"/><text x="571.00" y="238.50">_common_run (mlprodic..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:39) (2 samples, 0.39%)</title><rect x="728" y="244" width="4" height="15" fill="rgb(222,150,18)"/><text x="731.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.20%)</title><rect x="730" y="260" width="2" height="15" fill="rgb(207,179,35)"/><text x="733.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1584) (1 samples, 0.20%)</title><rect x="730" y="276" width="2" height="15" fill="rgb(245,126,2)"/><text x="733.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.20%)</title><rect x="732" y="196" width="3" height="15" fill="rgb(205,10,43)"/><text x="735.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_flatten.py:24) (1 samples, 0.20%)</title><rect x="732" y="212" width="3" height="15" fill="rgb(211,228,51)"/><text x="735.00" y="222.50"></text></g><g><title>prod (&lt;__array_function__ internals&gt;:6) (1 samples, 0.20%)</title><rect x="732" y="228" width="3" height="15" fill="rgb(213,44,3)"/><text x="735.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.20%)</title><rect x="732" y="244" width="3" height="15" fill="rgb(233,75,10)"/><text x="735.00" y="254.50"></text></g><g><title>prod (numpy/core/fromnumeric.py:2911) (1 samples, 0.20%)</title><rect x="732" y="260" width="3" height="15" fill="rgb(218,20,53)"/><text x="735.00" y="270.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:79) (1 samples, 0.20%)</title><rect x="732" y="276" width="3" height="15" fill="rgb(211,128,39)"/><text x="735.00" y="286.50"></text></g><g><title>_mean (numpy/core/_methods.py:135) (1 samples, 0.20%)</title><rect x="735" y="292" width="2" height="15" fill="rgb(227,113,53)"/><text x="738.00" y="302.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.20%)</title><rect x="735" y="308" width="2" height="15" fill="rgb(231,172,5)"/><text x="738.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (2 samples, 0.39%)</title><rect x="735" y="196" width="4" height="15" fill="rgb(213,10,30)"/><text x="738.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (2 samples, 0.39%)</title><rect x="735" y="212" width="4" height="15" fill="rgb(224,211,17)"/><text x="738.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_mean.py:29) (2 samples, 0.39%)</title><rect x="735" y="228" width="4" height="15" fill="rgb(245,100,26)"/><text x="738.00" y="238.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:6) (2 samples, 0.39%)</title><rect x="735" y="244" width="4" height="15" fill="rgb(239,131,0)"/><text x="738.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.39%)</title><rect x="735" y="260" width="4" height="15" fill="rgb(210,105,6)"/><text x="738.00" y="270.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3257) (2 samples, 0.39%)</title><rect x="735" y="276" width="4" height="15" fill="rgb(226,67,42)"/><text x="738.00" y="286.50"></text></g><g><title>_mean (numpy/core/_methods.py:151) (1 samples, 0.20%)</title><rect x="737" y="292" width="2" height="15" fill="rgb(251,53,32)"/><text x="740.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.20%)</title><rect x="737" y="308" width="2" height="15" fill="rgb(238,104,31)"/><text x="740.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.20%)</title><rect x="737" y="324" width="2" height="15" fill="rgb(232,81,44)"/><text x="740.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.20%)</title><rect x="737" y="340" width="2" height="15" fill="rgb(242,120,53)"/><text x="740.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.20%)</title><rect x="737" y="356" width="2" height="15" fill="rgb(245,62,21)"/><text x="740.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.20%)</title><rect x="737" y="372" width="2" height="15" fill="rgb(253,76,44)"/><text x="740.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.20%)</title><rect x="742" y="244" width="2" height="15" fill="rgb(228,102,30)"/><text x="745.00" y="254.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.20%)</title><rect x="742" y="260" width="2" height="15" fill="rgb(216,69,2)"/><text x="745.00" y="270.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.20%)</title><rect x="742" y="276" width="2" height="15" fill="rgb(218,138,49)"/><text x="745.00" y="286.50"></text></g><g><title>PyDataMem_FREE (alloc.c:273) (1 samples, 0.20%)</title><rect x="742" y="292" width="2" height="15" fill="rgb(236,61,38)"/><text x="745.00" y="302.50"></text></g><g><title>0x7f1cae211380 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="742" y="308" width="2" height="15" fill="rgb(219,18,28)"/><text x="745.00" y="318.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2771) (1 samples, 0.20%)</title><rect x="744" y="244" width="2" height="15" fill="rgb(245,140,36)"/><text x="747.00" y="254.50"></text></g><g><title>_select_weighted_metric (scipy/spatial/distance.py:1720) (1 samples, 0.20%)</title><rect x="744" y="260" width="2" height="15" fill="rgb(212,23,20)"/><text x="747.00" y="270.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2776) (1 samples, 0.20%)</title><rect x="746" y="244" width="2" height="15" fill="rgb(250,13,11)"/><text x="749.00" y="254.50"></text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py:251) (1 samples, 0.20%)</title><rect x="746" y="260" width="2" height="15" fill="rgb(251,153,32)"/><text x="749.00" y="270.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2778) (1 samples, 0.20%)</title><rect x="748" y="244" width="3" height="15" fill="rgb(246,176,44)"/><text x="751.00" y="254.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2779) (1 samples, 0.20%)</title><rect x="751" y="244" width="2" height="15" fill="rgb(246,118,13)"/><text x="754.00" y="254.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="751" y="260" width="2" height="15" fill="rgb(253,226,48)"/><text x="754.00" y="270.50"></text></g><g><title>0x7f1c8c215680 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="753" y="260" width="5" height="15" fill="rgb(229,50,14)"/><text x="756.00" y="270.50"></text></g><g><title>0x7f1c8c2156cf (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.59%)</title><rect x="758" y="260" width="7" height="15" fill="rgb(246,26,49)"/><text x="761.00" y="270.50"></text></g><g><title>0x7f1c8c2156e0 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.98%)</title><rect x="765" y="260" width="11" height="15" fill="rgb(239,142,51)"/><text x="768.00" y="270.50"></text></g><g><title>0x7f1c8c2156ef (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="776" y="260" width="5" height="15" fill="rgb(246,1,35)"/><text x="779.00" y="270.50"></text></g><g><title>0x7f1c8c2156fe (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="781" y="260" width="4" height="15" fill="rgb(250,33,14)"/><text x="784.00" y="270.50"></text></g><g><title>0x7f1c8c215710 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="785" y="260" width="3" height="15" fill="rgb(216,169,13)"/><text x="788.00" y="270.50"></text></g><g><title>0x7f1c8c21571a (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="788" y="260" width="2" height="15" fill="rgb(252,179,2)"/><text x="791.00" y="270.50"></text></g><g><title>0x7f1c8c215730 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="790" y="260" width="5" height="15" fill="rgb(212,47,6)"/><text x="793.00" y="270.50"></text></g><g><title>0x7f1c8c2159f9 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.78%)</title><rect x="795" y="260" width="9" height="15" fill="rgb(236,1,54)"/><text x="798.00" y="270.50"></text></g><g><title>0x7f1c8c2159fd (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.96%)</title><rect x="804" y="260" width="23" height="15" fill="rgb(248,5,23)"/><text x="807.00" y="270.50">0..</text></g><g><title>0x7f1c8c215a03 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="827" y="260" width="5" height="15" fill="rgb(205,64,47)"/><text x="830.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cdist.py:27) (44 samples, 8.61%)</title><rect x="739" y="228" width="102" height="15" fill="rgb(250,90,52)"/><text x="742.00" y="238.50">_run (mlprod..</text></g><g><title>cdist (scipy/spatial/distance.py:2780) (38 samples, 7.44%)</title><rect x="753" y="244" width="88" height="15" fill="rgb(248,209,35)"/><text x="756.00" y="254.50">cdist (sci..</text></g><g><title>0x7f1c8c215a12 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.78%)</title><rect x="832" y="260" width="9" height="15" fill="rgb(245,194,20)"/><text x="835.00" y="270.50"></text></g><g><title>array_astype (methods.c:845) (3 samples, 0.59%)</title><rect x="841" y="244" width="7" height="15" fill="rgb(248,60,47)"/><text x="844.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.59%)</title><rect x="841" y="260" width="7" height="15" fill="rgb(218,125,47)"/><text x="844.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (3 samples, 0.59%)</title><rect x="841" y="276" width="7" height="15" fill="rgb(221,228,26)"/><text x="844.00" y="286.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src:855) (3 samples, 0.59%)</title><rect x="841" y="292" width="7" height="15" fill="rgb(244,131,19)"/><text x="844.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (153 samples, 29.94%)</title><rect x="497" y="180" width="353" height="15" fill="rgb(220,226,17)"/><text x="500.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:13..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (48 samples, 9.39%)</title><rect x="739" y="196" width="111" height="15" fill="rgb(210,211,1)"/><text x="742.00" y="206.50">run (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (48 samples, 9.39%)</title><rect x="739" y="212" width="111" height="15" fill="rgb(222,124,11)"/><text x="742.00" y="222.50">run (mlprodic..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cdist.py:29) (4 samples, 0.78%)</title><rect x="841" y="228" width="9" height="15" fill="rgb(248,140,29)"/><text x="844.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="848" y="244" width="2" height="15" fill="rgb(218,78,30)"/><text x="851.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="848" y="260" width="2" height="15" fill="rgb(218,100,50)"/><text x="851.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.20%)</title><rect x="848" y="276" width="2" height="15" fill="rgb(230,4,10)"/><text x="851.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:61) (157 samples, 30.72%)</title><rect x="490" y="52" width="362" height="15" fill="rgb(225,85,12)"/><text x="493.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_..</text></g><g><title>profile_pyrt (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:60) (157 samples, 30.72%)</title><rect x="490" y="68" width="362" height="15" fill="rgb(208,162,45)"/><text x="493.00" y="78.50">profile_pyrt (bench_KNeighborsRegressor_default_k..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:37) (157 samples, 30.72%)</title><rect x="490" y="84" width="362" height="15" fill="rgb(237,184,36)"/><text x="493.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default_..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:31) (157 samples, 30.72%)</title><rect x="490" y="100" width="362" height="15" fill="rgb(205,133,50)"/><text x="493.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_m_r..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (157 samples, 30.72%)</title><rect x="490" y="116" width="362" height="15" fill="rgb(241,3,35)"/><text x="493.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (157 samples, 30.72%)</title><rect x="490" y="132" width="362" height="15" fill="rgb(228,167,49)"/><text x="493.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (157 samples, 30.72%)</title><rect x="490" y="148" width="362" height="15" fill="rgb(235,90,14)"/><text x="493.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (156 samples, 30.53%)</title><rect x="492" y="164" width="360" height="15" fill="rgb(235,160,27)"/><text x="495.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.20%)</title><rect x="850" y="180" width="2" height="15" fill="rgb(246,58,5)"/><text x="853.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.20%)</title><rect x="855" y="196" width="2" height="15" fill="rgb(251,189,26)"/><text x="858.00" y="206.50"></text></g><g><title>0x7f1c6d022ff9 (?) (1 samples, 0.20%)</title><rect x="857" y="212" width="2" height="15" fill="rgb(232,24,47)"/><text x="860.00" y="222.50"></text></g><g><title>0x7f1c6d01def6 (?) (1 samples, 0.20%)</title><rect x="857" y="228" width="2" height="15" fill="rgb(245,22,0)"/><text x="860.00" y="238.50"></text></g><g><title>0x7f1c6d012962 (?) (1 samples, 0.20%)</title><rect x="857" y="244" width="2" height="15" fill="rgb(244,9,54)"/><text x="860.00" y="254.50"></text></g><g><title>0x7f1c6d0467a7 (?) (1 samples, 0.20%)</title><rect x="857" y="260" width="2" height="15" fill="rgb(243,155,47)"/><text x="860.00" y="270.50"></text></g><g><title>0x7f1c6d046379 (?) (1 samples, 0.20%)</title><rect x="857" y="276" width="2" height="15" fill="rgb(218,1,52)"/><text x="860.00" y="286.50"></text></g><g><title>0x7f1c6d4a48b8 (?) (1 samples, 0.20%)</title><rect x="857" y="292" width="2" height="15" fill="rgb(226,36,40)"/><text x="860.00" y="302.50"></text></g><g><title>0x7f1c6d4a2c7f (?) (1 samples, 0.20%)</title><rect x="857" y="308" width="2" height="15" fill="rgb(244,37,9)"/><text x="860.00" y="318.50"></text></g><g><title>0x7f1c6d4b599c (?) (1 samples, 0.20%)</title><rect x="857" y="324" width="2" height="15" fill="rgb(206,175,42)"/><text x="860.00" y="334.50"></text></g><g><title>0x7f1c6d16de79 (?) (1 samples, 0.20%)</title><rect x="857" y="340" width="2" height="15" fill="rgb(223,14,53)"/><text x="860.00" y="350.50"></text></g><g><title>0x7f1c6d16c006 (?) (1 samples, 0.20%)</title><rect x="857" y="356" width="2" height="15" fill="rgb(249,218,38)"/><text x="860.00" y="366.50"></text></g><g><title>0x7f1caefefa33 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1155" y="372" width="2" height="15" fill="rgb(208,161,13)"/><text x="1158.00" y="382.50"></text></g><g><title>0x7f1caf1c1ef6 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1157" y="372" width="2" height="15" fill="rgb(246,196,6)"/><text x="1160.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.59%)</title><rect x="1159" y="372" width="7" height="15" fill="rgb(242,99,3)"/><text x="1162.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.59%)</title><rect x="1159" y="388" width="7" height="15" fill="rgb(212,169,2)"/><text x="1162.00" y="398.50"></text></g><g><title>0x7f1caeff12d0 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1164" y="404" width="2" height="15" fill="rgb(219,42,34)"/><text x="1167.00" y="414.50"></text></g><g><title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::LesserValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1166" y="372" width="3" height="15" fill="rgb(229,182,27)"/><text x="1169.00" y="382.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (135 samples, 26.42%)</title><rect x="862" y="340" width="311" height="15" fill="rgb(242,223,5)"/><text x="865.00" y="350.50">onnxruntime::TopK&lt;11, float&gt;::Compute (on..</text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (135 samples, 26.42%)</title><rect x="862" y="356" width="311" height="15" fill="rgb(206,170,39)"/><text x="865.00" y="366.50">onnxruntime::TopKImpl (onnxruntime/capi/o..</text></g><g><title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::LesserValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="1169" y="372" width="4" height="15" fill="rgb(218,41,7)"/><text x="1172.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1173" y="356" width="3" height="15" fill="rgb(237,35,37)"/><text x="1176.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1173" y="372" width="3" height="15" fill="rgb(212,91,3)"/><text x="1176.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1173" y="388" width="3" height="15" fill="rgb(246,135,53)"/><text x="1176.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1173" y="404" width="3" height="15" fill="rgb(251,64,47)"/><text x="1176.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1173" y="420" width="3" height="15" fill="rgb(253,141,28)"/><text x="1176.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1173" y="436" width="3" height="15" fill="rgb(206,171,2)"/><text x="1176.00" y="446.50"></text></g><g><title>Eigen::ThreadPoolTempl&lt;Eigen::StlThreadEnvironment&gt;::Schedule (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1176" y="404" width="2" height="15" fill="rgb(206,217,14)"/><text x="1179.00" y="414.50"></text></g><g><title>Eigen::ThreadPoolTempl&lt;Eigen::StlThreadEnvironment&gt;::ScheduleWithHint (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1176" y="420" width="2" height="15" fill="rgb(207,207,22)"/><text x="1179.00" y="430.50"></text></g><g><title>Eigen::EventCount::Unpark [clone .isra.126] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1176" y="436" width="2" height="15" fill="rgb(235,5,20)"/><text x="1179.00" y="446.50"></text></g><g><title>std::condition_variable::notify_one (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="1176" y="452" width="2" height="15" fill="rgb(234,23,1)"/><text x="1179.00" y="462.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="1176" y="468" width="2" height="15" fill="rgb(217,44,0)"/><text x="1179.00" y="478.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 27.59%)</title><rect x="859" y="260" width="326" height="15" fill="rgb(253,69,28)"/><text x="862.00" y="270.50">onnxruntime::InferenceSession::Run (onnxrunt..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 27.59%)</title><rect x="859" y="276" width="326" height="15" fill="rgb(250,13,33)"/><text x="862.00" y="286.50">onnxruntime::InferenceSession::Run (onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 27.59%)</title><rect x="859" y="292" width="326" height="15" fill="rgb(215,127,44)"/><text x="862.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntim..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 27.59%)</title><rect x="859" y="308" width="326" height="15" fill="rgb(244,46,38)"/><text x="862.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxru..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 27.59%)</title><rect x="859" y="324" width="326" height="15" fill="rgb(230,186,27)"/><text x="862.00" y="334.50">onnxruntime::SequentialExecutor::Execute (on..</text></g><g><title>onnxruntime::contrib::CDist&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.98%)</title><rect x="1173" y="340" width="12" height="15" fill="rgb(239,120,9)"/><text x="1176.00" y="350.50"></text></g><g><title>onnxruntime::contrib::cdist&lt;float, onnxruntime::Euclidean&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.78%)</title><rect x="1176" y="356" width="9" height="15" fill="rgb(222,121,43)"/><text x="1179.00" y="366.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.78%)</title><rect x="1176" y="372" width="9" height="15" fill="rgb(209,82,51)"/><text x="1179.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.78%)</title><rect x="1176" y="388" width="9" height="15" fill="rgb(230,222,33)"/><text x="1179.00" y="398.50"></text></g><g><title>std::condition_variable::wait (libstdc++.so.6.0.28) (3 samples, 0.59%)</title><rect x="1178" y="404" width="7" height="15" fill="rgb(238,218,31)"/><text x="1181.00" y="414.50"></text></g><g><title>__pthread_cond_wait (libpthread-2.29.so) (3 samples, 0.59%)</title><rect x="1178" y="420" width="7" height="15" fill="rgb(212,82,23)"/><text x="1181.00" y="430.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (144 samples, 28.18%)</title><rect x="855" y="132" width="332" height="15" fill="rgb(252,40,37)"/><text x="858.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (144 samples, 28.18%)</title><rect x="855" y="148" width="332" height="15" fill="rgb(216,221,23)"/><text x="858.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (144 samples, 28.18%)</title><rect x="855" y="164" width="332" height="15" fill="rgb(220,162,49)"/><text x="858.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_in..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (144 samples, 28.18%)</title><rect x="855" y="180" width="332" height="15" fill="rgb(246,12,0)"/><text x="858.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:6..</text></g><g><title>run (onnxruntime/capi/session.py:136) (143 samples, 27.98%)</title><rect x="857" y="196" width="330" height="15" fill="rgb(234,156,4)"/><text x="860.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (142 samples, 27.79%)</title><rect x="859" y="212" width="328" height="15" fill="rgb(206,89,16)"/><text x="862.00" y="222.50">pybind11::cpp_function::dispatcher (onnxrunt..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (142 samples, 27.79%)</title><rect x="859" y="228" width="328" height="15" fill="rgb(236,142,26)"/><text x="862.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnx..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (142 samples, 27.79%)</title><rect x="859" y="244" width="328" height="15" fill="rgb(244,159,25)"/><text x="862.00" y="254.50">onnxruntime::python::addObjectMethods(pybind..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1185" y="260" width="2" height="15" fill="rgb(239,52,22)"/><text x="1188.00" y="270.50"></text></g><g><title>all (511 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(252,153,25)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:68) (146 samples, 28.57%)</title><rect x="852" y="52" width="338" height="15" fill="rgb(227,86,9)"/><text x="855.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_default_k..</text></g><g><title>profile_ort (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:67) (146 samples, 28.57%)</title><rect x="852" y="68" width="338" height="15" fill="rgb(243,19,1)"/><text x="855.00" y="78.50">profile_ort (bench_KNeighborsRegressor_defaul..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:37) (146 samples, 28.57%)</title><rect x="852" y="84" width="338" height="15" fill="rgb(229,209,20)"/><text x="855.00" y="94.50">setup_profile (bench_KNeighborsRegressor_defa..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py:31) (146 samples, 28.57%)</title><rect x="852" y="100" width="338" height="15" fill="rgb(222,2,20)"/><text x="855.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (145 samples, 28.38%)</title><rect x="855" y="116" width="335" height="15" fill="rgb(247,109,15)"/><text x="858.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.20%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(235,31,19)"/><text x="1190.00" y="142.50"></text></g><g><title>0x7f1caf0cd134 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1187" y="148" width="3" height="15" fill="rgb(219,84,23)"/><text x="1190.00" y="158.50"></text></g></g></svg>