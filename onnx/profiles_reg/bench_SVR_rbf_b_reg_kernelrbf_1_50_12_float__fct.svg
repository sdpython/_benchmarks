<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1830" onload="init(evt)" viewBox="0 0 1200 1830" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1830" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1813.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1813.00"> </text><g id="frames"><g><title>&lt;module&gt; (onnx/__init__.py) (1 samples, 0.43%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(248,215,46)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(241,78,17)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(251,146,45)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(224,173,9)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(230,115,30)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(211,78,49)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (1 samples, 0.43%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(207,90,9)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(220,177,53)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(235,130,49)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(218,121,43)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(221,61,31)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(251,29,48)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (1 samples, 0.43%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(207,160,0)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(224,121,43)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(206,126,45)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(220,57,51)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="10" y="548" width="5" height="15" fill="rgb(243,176,27)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="564" width="5" height="15" fill="rgb(235,152,39)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (1 samples, 0.43%)</title><rect x="10" y="580" width="5" height="15" fill="rgb(235,183,27)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="596" width="5" height="15" fill="rgb(229,22,51)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="612" width="5" height="15" fill="rgb(211,57,11)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(249,25,19)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(211,166,34)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(217,128,35)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(240,38,10)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(240,98,19)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(211,61,31)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (1 samples, 0.43%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(223,71,2)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(205,4,41)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(215,109,5)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(206,178,25)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(234,6,49)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(227,160,17)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (1 samples, 0.43%)</title><rect x="10" y="820" width="5" height="15" fill="rgb(227,109,30)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (1 samples, 0.43%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(247,34,39)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (1 samples, 0.43%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(218,141,42)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.43%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(213,47,47)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.43%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(213,24,5)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.43%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(205,65,20)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.43%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(247,178,2)"/><text x="13.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.43%)</title><rect x="10" y="932" width="5" height="15" fill="rgb(226,206,28)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.43%)</title><rect x="10" y="948" width="5" height="15" fill="rgb(209,161,5)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.43%)</title><rect x="10" y="964" width="5" height="15" fill="rgb(234,167,24)"/><text x="13.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.43%)</title><rect x="10" y="980" width="5" height="15" fill="rgb(241,142,13)"/><text x="13.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="10" y="196" width="10" height="15" fill="rgb(211,0,4)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="10" y="212" width="10" height="15" fill="rgb(242,103,18)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="10" y="228" width="10" height="15" fill="rgb(237,220,51)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="10" y="244" width="10" height="15" fill="rgb(226,92,4)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="10" y="260" width="10" height="15" fill="rgb(213,114,53)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="10" y="276" width="10" height="15" fill="rgb(247,26,39)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.43%)</title><rect x="15" y="292" width="5" height="15" fill="rgb(236,132,11)"/><text x="18.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="308" width="5" height="15" fill="rgb(247,117,49)"/><text x="18.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="324" width="5" height="15" fill="rgb(254,194,25)"/><text x="18.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="340" width="5" height="15" fill="rgb(206,174,53)"/><text x="18.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="15" y="356" width="5" height="15" fill="rgb(231,190,45)"/><text x="18.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="372" width="5" height="15" fill="rgb(249,3,36)"/><text x="18.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.43%)</title><rect x="15" y="388" width="5" height="15" fill="rgb(239,190,41)"/><text x="18.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="404" width="5" height="15" fill="rgb(206,149,14)"/><text x="18.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="420" width="5" height="15" fill="rgb(249,112,2)"/><text x="18.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="436" width="5" height="15" fill="rgb(207,111,41)"/><text x="18.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="15" y="452" width="5" height="15" fill="rgb(241,90,50)"/><text x="18.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="468" width="5" height="15" fill="rgb(214,133,46)"/><text x="18.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.43%)</title><rect x="15" y="484" width="5" height="15" fill="rgb(220,10,11)"/><text x="18.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="500" width="5" height="15" fill="rgb(212,211,43)"/><text x="18.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="516" width="5" height="15" fill="rgb(246,81,44)"/><text x="18.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="532" width="5" height="15" fill="rgb(231,93,43)"/><text x="18.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="548" width="5" height="15" fill="rgb(207,108,34)"/><text x="18.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="564" width="5" height="15" fill="rgb(228,226,12)"/><text x="18.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="15" y="580" width="5" height="15" fill="rgb(247,200,35)"/><text x="18.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="596" width="5" height="15" fill="rgb(222,37,36)"/><text x="18.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.43%)</title><rect x="15" y="612" width="5" height="15" fill="rgb(247,156,41)"/><text x="18.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="628" width="5" height="15" fill="rgb(210,158,45)"/><text x="18.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="644" width="5" height="15" fill="rgb(218,49,48)"/><text x="18.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="660" width="5" height="15" fill="rgb(253,16,28)"/><text x="18.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="15" y="676" width="5" height="15" fill="rgb(220,226,11)"/><text x="18.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="692" width="5" height="15" fill="rgb(250,47,5)"/><text x="18.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.43%)</title><rect x="15" y="708" width="5" height="15" fill="rgb(215,226,39)"/><text x="18.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="724" width="5" height="15" fill="rgb(226,202,33)"/><text x="18.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="740" width="5" height="15" fill="rgb(253,19,38)"/><text x="18.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="756" width="5" height="15" fill="rgb(253,130,2)"/><text x="18.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="15" y="772" width="5" height="15" fill="rgb(213,157,25)"/><text x="18.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="788" width="5" height="15" fill="rgb(240,47,16)"/><text x="18.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.43%)</title><rect x="15" y="804" width="5" height="15" fill="rgb(206,48,52)"/><text x="18.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="820" width="5" height="15" fill="rgb(213,76,45)"/><text x="18.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="836" width="5" height="15" fill="rgb(246,7,21)"/><text x="18.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="852" width="5" height="15" fill="rgb(212,0,17)"/><text x="18.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="15" y="868" width="5" height="15" fill="rgb(222,224,45)"/><text x="18.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="15" y="884" width="5" height="15" fill="rgb(213,226,0)"/><text x="18.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_multiprocessing_helpers.py) (1 samples, 0.43%)</title><rect x="15" y="900" width="5" height="15" fill="rgb(234,216,30)"/><text x="18.00" y="910.50"></text></g><g><title>0x7f38ef260276 (?) (1 samples, 0.43%)</title><rect x="15" y="916" width="5" height="15" fill="rgb(244,73,54)"/><text x="18.00" y="926.50"></text></g><g><title>sem_close (libpthread-2.29.so) (1 samples, 0.43%)</title><rect x="15" y="932" width="5" height="15" fill="rgb(232,209,36)"/><text x="18.00" y="942.50"></text></g><g><title>__munmap (libc-2.29.so) (1 samples, 0.43%)</title><rect x="15" y="948" width="5" height="15" fill="rgb(211,94,5)"/><text x="18.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="20" y="1476" width="5" height="15" fill="rgb(224,0,32)"/><text x="23.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="20" y="1492" width="5" height="15" fill="rgb(236,14,10)"/><text x="23.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="20" y="1508" width="5" height="15" fill="rgb(232,222,21)"/><text x="23.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="20" y="1524" width="5" height="15" fill="rgb(245,23,24)"/><text x="23.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="20" y="1540" width="5" height="15" fill="rgb(236,225,13)"/><text x="23.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.43%)</title><rect x="20" y="1556" width="5" height="15" fill="rgb(206,14,33)"/><text x="23.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.43%)</title><rect x="20" y="1572" width="5" height="15" fill="rgb(250,147,5)"/><text x="23.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.43%)</title><rect x="20" y="1588" width="5" height="15" fill="rgb(224,67,28)"/><text x="23.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.43%)</title><rect x="20" y="1604" width="5" height="15" fill="rgb(245,7,20)"/><text x="23.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.43%)</title><rect x="20" y="1620" width="5" height="15" fill="rgb(252,217,8)"/><text x="23.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.43%)</title><rect x="20" y="1636" width="5" height="15" fill="rgb(233,222,51)"/><text x="23.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.43%)</title><rect x="20" y="1652" width="5" height="15" fill="rgb(230,95,24)"/><text x="23.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.43%)</title><rect x="20" y="1668" width="5" height="15" fill="rgb(224,123,0)"/><text x="23.00" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.43%)</title><rect x="20" y="1684" width="5" height="15" fill="rgb(235,183,8)"/><text x="23.00" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.43%)</title><rect x="20" y="1700" width="5" height="15" fill="rgb(205,212,23)"/><text x="23.00" y="1710.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.43%)</title><rect x="20" y="1716" width="5" height="15" fill="rgb(213,155,2)"/><text x="23.00" y="1726.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.43%)</title><rect x="20" y="1732" width="5" height="15" fill="rgb(219,164,54)"/><text x="23.00" y="1742.50"></text></g><g><title>__next__ (jinja2/lexer.py) (1 samples, 0.43%)</title><rect x="20" y="1748" width="5" height="15" fill="rgb(211,161,31)"/><text x="23.00" y="1758.50"></text></g><g><title>wrap (jinja2/lexer.py) (1 samples, 0.43%)</title><rect x="20" y="1764" width="5" height="15" fill="rgb(205,107,4)"/><text x="23.00" y="1774.50"></text></g><g><title>__new__ (jinja2/lexer.py) (1 samples, 0.43%)</title><rect x="20" y="1780" width="5" height="15" fill="rgb(210,98,12)"/><text x="23.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="484" width="10" height="15" fill="rgb(213,65,40)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="500" width="10" height="15" fill="rgb(219,124,31)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="516" width="10" height="15" fill="rgb(229,78,10)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="532" width="10" height="15" fill="rgb(205,225,20)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="20" y="548" width="10" height="15" fill="rgb(226,12,4)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="564" width="10" height="15" fill="rgb(246,133,22)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.87%)</title><rect x="20" y="580" width="10" height="15" fill="rgb(212,46,51)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="596" width="10" height="15" fill="rgb(216,42,12)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="612" width="10" height="15" fill="rgb(225,179,13)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="628" width="10" height="15" fill="rgb(224,125,2)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="20" y="644" width="10" height="15" fill="rgb(252,118,5)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="660" width="10" height="15" fill="rgb(222,211,19)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.87%)</title><rect x="20" y="676" width="10" height="15" fill="rgb(233,176,41)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="692" width="10" height="15" fill="rgb(251,10,35)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="708" width="10" height="15" fill="rgb(251,170,11)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="724" width="10" height="15" fill="rgb(253,50,42)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="20" y="740" width="10" height="15" fill="rgb(249,206,54)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="756" width="10" height="15" fill="rgb(231,40,39)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.87%)</title><rect x="20" y="772" width="10" height="15" fill="rgb(205,187,28)"/><text x="23.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="788" width="10" height="15" fill="rgb(214,159,0)"/><text x="23.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="804" width="10" height="15" fill="rgb(220,159,11)"/><text x="23.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="820" width="10" height="15" fill="rgb(211,1,16)"/><text x="23.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="20" y="836" width="10" height="15" fill="rgb(210,19,10)"/><text x="23.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="852" width="10" height="15" fill="rgb(229,146,44)"/><text x="23.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.87%)</title><rect x="20" y="868" width="10" height="15" fill="rgb(209,172,30)"/><text x="23.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="884" width="10" height="15" fill="rgb(238,18,36)"/><text x="23.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="900" width="10" height="15" fill="rgb(207,157,22)"/><text x="23.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="916" width="10" height="15" fill="rgb(252,0,41)"/><text x="23.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="932" width="10" height="15" fill="rgb(222,106,31)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="948" width="10" height="15" fill="rgb(241,125,3)"/><text x="23.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="964" width="10" height="15" fill="rgb(226,10,35)"/><text x="23.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="20" y="980" width="10" height="15" fill="rgb(241,112,45)"/><text x="23.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="996" width="10" height="15" fill="rgb(232,52,20)"/><text x="23.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.87%)</title><rect x="20" y="1012" width="10" height="15" fill="rgb(244,144,35)"/><text x="23.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="1028" width="10" height="15" fill="rgb(214,97,40)"/><text x="23.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="1044" width="10" height="15" fill="rgb(226,165,15)"/><text x="23.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="1060" width="10" height="15" fill="rgb(254,176,16)"/><text x="23.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="20" y="1076" width="10" height="15" fill="rgb(234,197,54)"/><text x="23.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="1092" width="10" height="15" fill="rgb(250,167,35)"/><text x="23.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.87%)</title><rect x="20" y="1108" width="10" height="15" fill="rgb(224,207,9)"/><text x="23.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="1124" width="10" height="15" fill="rgb(231,150,19)"/><text x="23.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="1140" width="10" height="15" fill="rgb(254,60,26)"/><text x="23.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="1156" width="10" height="15" fill="rgb(247,13,1)"/><text x="23.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="1172" width="10" height="15" fill="rgb(210,223,2)"/><text x="23.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="1188" width="10" height="15" fill="rgb(248,193,27)"/><text x="23.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="20" y="1204" width="10" height="15" fill="rgb(219,130,49)"/><text x="23.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="1220" width="10" height="15" fill="rgb(248,206,31)"/><text x="23.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.87%)</title><rect x="20" y="1236" width="10" height="15" fill="rgb(221,158,32)"/><text x="23.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="1252" width="10" height="15" fill="rgb(234,162,23)"/><text x="23.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="1268" width="10" height="15" fill="rgb(229,74,49)"/><text x="23.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="1284" width="10" height="15" fill="rgb(243,161,16)"/><text x="23.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="1300" width="10" height="15" fill="rgb(250,213,27)"/><text x="23.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="1316" width="10" height="15" fill="rgb(241,48,29)"/><text x="23.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="20" y="1332" width="10" height="15" fill="rgb(253,75,20)"/><text x="23.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="1348" width="10" height="15" fill="rgb(224,53,9)"/><text x="23.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.87%)</title><rect x="20" y="1364" width="10" height="15" fill="rgb(231,106,23)"/><text x="23.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="1380" width="10" height="15" fill="rgb(226,63,54)"/><text x="23.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="1396" width="10" height="15" fill="rgb(224,190,26)"/><text x="23.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="1412" width="10" height="15" fill="rgb(244,56,30)"/><text x="23.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="20" y="1428" width="10" height="15" fill="rgb(241,157,36)"/><text x="23.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="20" y="1444" width="10" height="15" fill="rgb(249,73,18)"/><text x="23.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.87%)</title><rect x="20" y="1460" width="10" height="15" fill="rgb(225,79,22)"/><text x="23.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.43%)</title><rect x="25" y="1476" width="5" height="15" fill="rgb(205,78,48)"/><text x="28.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.43%)</title><rect x="25" y="1492" width="5" height="15" fill="rgb(252,18,30)"/><text x="28.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.43%)</title><rect x="25" y="1508" width="5" height="15" fill="rgb(230,7,26)"/><text x="28.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.43%)</title><rect x="25" y="1524" width="5" height="15" fill="rgb(237,207,18)"/><text x="28.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.43%)</title><rect x="25" y="1540" width="5" height="15" fill="rgb(230,141,7)"/><text x="28.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.43%)</title><rect x="25" y="1556" width="5" height="15" fill="rgb(250,27,10)"/><text x="28.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.43%)</title><rect x="25" y="1572" width="5" height="15" fill="rgb(253,9,20)"/><text x="28.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.43%)</title><rect x="25" y="1588" width="5" height="15" fill="rgb(250,66,21)"/><text x="28.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.43%)</title><rect x="25" y="1604" width="5" height="15" fill="rgb(230,68,39)"/><text x="28.00" y="1614.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.43%)</title><rect x="30" y="724" width="5" height="15" fill="rgb(243,99,53)"/><text x="33.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="740" width="5" height="15" fill="rgb(237,107,50)"/><text x="33.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="756" width="5" height="15" fill="rgb(238,50,48)"/><text x="33.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="772" width="5" height="15" fill="rgb(233,208,52)"/><text x="33.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="30" y="788" width="5" height="15" fill="rgb(224,104,32)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="804" width="5" height="15" fill="rgb(214,145,0)"/><text x="33.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.43%)</title><rect x="30" y="820" width="5" height="15" fill="rgb(243,25,18)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="836" width="5" height="15" fill="rgb(242,225,41)"/><text x="33.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="852" width="5" height="15" fill="rgb(238,51,5)"/><text x="33.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="868" width="5" height="15" fill="rgb(237,14,49)"/><text x="33.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="30" y="884" width="5" height="15" fill="rgb(250,155,5)"/><text x="33.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="900" width="5" height="15" fill="rgb(205,213,40)"/><text x="33.00" y="910.50"></text></g><g><title>0x7f38da3de40e (?) (1 samples, 0.43%)</title><rect x="30" y="916" width="5" height="15" fill="rgb(229,45,14)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="932" width="5" height="15" fill="rgb(240,93,19)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="948" width="5" height="15" fill="rgb(216,10,38)"/><text x="33.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="964" width="5" height="15" fill="rgb(214,115,48)"/><text x="33.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="30" y="980" width="5" height="15" fill="rgb(234,156,0)"/><text x="33.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="996" width="5" height="15" fill="rgb(241,84,51)"/><text x="33.00" y="1006.50"></text></g><g><title>0x7f38da197cd2 (?) (1 samples, 0.43%)</title><rect x="30" y="1012" width="5" height="15" fill="rgb(205,130,20)"/><text x="33.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="1028" width="5" height="15" fill="rgb(206,109,6)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="1044" width="5" height="15" fill="rgb(238,154,31)"/><text x="33.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="1060" width="5" height="15" fill="rgb(235,17,10)"/><text x="33.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="30" y="1076" width="5" height="15" fill="rgb(226,91,31)"/><text x="33.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="1092" width="5" height="15" fill="rgb(247,14,34)"/><text x="33.00" y="1102.50"></text></g><g><title>0x7f38d988d0e5 (?) (1 samples, 0.43%)</title><rect x="30" y="1108" width="5" height="15" fill="rgb(224,84,31)"/><text x="33.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="1124" width="5" height="15" fill="rgb(232,164,5)"/><text x="33.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="1140" width="5" height="15" fill="rgb(209,149,22)"/><text x="33.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="1156" width="5" height="15" fill="rgb(223,62,3)"/><text x="33.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="30" y="1172" width="5" height="15" fill="rgb(237,171,33)"/><text x="33.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="1188" width="5" height="15" fill="rgb(238,171,52)"/><text x="33.00" y="1198.50"></text></g><g><title>0x7f38d9611e68 (?) (1 samples, 0.43%)</title><rect x="30" y="1204" width="5" height="15" fill="rgb(212,50,34)"/><text x="33.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="1220" width="5" height="15" fill="rgb(208,91,33)"/><text x="33.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="1236" width="5" height="15" fill="rgb(239,110,53)"/><text x="33.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="1252" width="5" height="15" fill="rgb(219,151,25)"/><text x="33.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="30" y="1268" width="5" height="15" fill="rgb(213,137,42)"/><text x="33.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="30" y="1284" width="5" height="15" fill="rgb(253,83,25)"/><text x="33.00" y="1294.50"></text></g><g><title>0x7f38d939dc50 (?) (1 samples, 0.43%)</title><rect x="30" y="1300" width="5" height="15" fill="rgb(234,211,34)"/><text x="33.00" y="1310.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/array_.py) (1 samples, 0.43%)</title><rect x="35" y="964" width="5" height="15" fill="rgb(209,49,41)"/><text x="38.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="35" y="980" width="5" height="15" fill="rgb(218,78,11)"/><text x="38.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="35" y="996" width="5" height="15" fill="rgb(205,6,30)"/><text x="38.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="35" y="1012" width="5" height="15" fill="rgb(219,208,16)"/><text x="38.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="35" y="1028" width="5" height="15" fill="rgb(219,226,11)"/><text x="38.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="35" y="1044" width="5" height="15" fill="rgb(213,29,4)"/><text x="38.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/common.py) (1 samples, 0.43%)</title><rect x="35" y="1060" width="5" height="15" fill="rgb(254,165,45)"/><text x="38.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="35" y="1076" width="5" height="15" fill="rgb(250,177,37)"/><text x="38.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="35" y="1092" width="5" height="15" fill="rgb(215,62,19)"/><text x="38.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="35" y="1108" width="5" height="15" fill="rgb(207,155,1)"/><text x="38.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="35" y="1124" width="5" height="15" fill="rgb(212,184,49)"/><text x="38.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="35" y="1140" width="5" height="15" fill="rgb(212,149,28)"/><text x="38.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/dtypes.py) (1 samples, 0.43%)</title><rect x="35" y="1156" width="5" height="15" fill="rgb(243,95,29)"/><text x="38.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="35" y="1172" width="5" height="15" fill="rgb(252,50,14)"/><text x="38.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="35" y="1188" width="5" height="15" fill="rgb(241,117,43)"/><text x="38.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="35" y="1204" width="5" height="15" fill="rgb(229,191,32)"/><text x="38.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="35" y="1220" width="5" height="15" fill="rgb(237,62,36)"/><text x="38.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="35" y="1236" width="5" height="15" fill="rgb(214,179,6)"/><text x="38.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/inference.py) (1 samples, 0.43%)</title><rect x="35" y="1252" width="5" height="15" fill="rgb(220,96,4)"/><text x="38.00" y="1262.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 2.17%)</title><rect x="20" y="436" width="25" height="15" fill="rgb(229,162,50)"/><text x="23.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.17%)</title><rect x="20" y="452" width="25" height="15" fill="rgb(211,25,1)"/><text x="23.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.17%)</title><rect x="20" y="468" width="25" height="15" fill="rgb(239,228,49)"/><text x="23.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.30%)</title><rect x="30" y="484" width="15" height="15" fill="rgb(215,219,52)"/><text x="33.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.30%)</title><rect x="30" y="500" width="15" height="15" fill="rgb(225,35,27)"/><text x="33.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.30%)</title><rect x="30" y="516" width="15" height="15" fill="rgb(250,33,10)"/><text x="33.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.30%)</title><rect x="30" y="532" width="15" height="15" fill="rgb(225,50,37)"/><text x="33.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.30%)</title><rect x="30" y="548" width="15" height="15" fill="rgb(249,214,9)"/><text x="33.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.30%)</title><rect x="30" y="564" width="15" height="15" fill="rgb(226,17,49)"/><text x="33.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.30%)</title><rect x="30" y="580" width="15" height="15" fill="rgb(217,120,29)"/><text x="33.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.30%)</title><rect x="30" y="596" width="15" height="15" fill="rgb(223,59,46)"/><text x="33.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.30%)</title><rect x="30" y="612" width="15" height="15" fill="rgb(211,60,32)"/><text x="33.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 1.30%)</title><rect x="30" y="628" width="15" height="15" fill="rgb(206,29,48)"/><text x="33.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.30%)</title><rect x="30" y="644" width="15" height="15" fill="rgb(212,42,4)"/><text x="33.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.30%)</title><rect x="30" y="660" width="15" height="15" fill="rgb(216,196,30)"/><text x="33.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.30%)</title><rect x="30" y="676" width="15" height="15" fill="rgb(227,76,35)"/><text x="33.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.30%)</title><rect x="30" y="692" width="15" height="15" fill="rgb(219,80,49)"/><text x="33.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.30%)</title><rect x="30" y="708" width="15" height="15" fill="rgb(247,125,26)"/><text x="33.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.87%)</title><rect x="35" y="724" width="10" height="15" fill="rgb(247,49,23)"/><text x="38.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="35" y="740" width="10" height="15" fill="rgb(219,134,1)"/><text x="38.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="35" y="756" width="10" height="15" fill="rgb(244,76,51)"/><text x="38.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="35" y="772" width="10" height="15" fill="rgb(206,148,49)"/><text x="38.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="35" y="788" width="10" height="15" fill="rgb(242,143,43)"/><text x="38.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="35" y="804" width="10" height="15" fill="rgb(224,205,44)"/><text x="38.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="35" y="820" width="10" height="15" fill="rgb(230,168,10)"/><text x="38.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="35" y="836" width="10" height="15" fill="rgb(207,128,31)"/><text x="38.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="35" y="852" width="10" height="15" fill="rgb(251,108,49)"/><text x="38.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (2 samples, 0.87%)</title><rect x="35" y="868" width="10" height="15" fill="rgb(216,88,44)"/><text x="38.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="35" y="884" width="10" height="15" fill="rgb(222,163,52)"/><text x="38.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="35" y="900" width="10" height="15" fill="rgb(250,4,33)"/><text x="38.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="35" y="916" width="10" height="15" fill="rgb(244,61,12)"/><text x="38.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="35" y="932" width="10" height="15" fill="rgb(208,27,2)"/><text x="38.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="35" y="948" width="10" height="15" fill="rgb(208,117,24)"/><text x="38.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py) (1 samples, 0.43%)</title><rect x="40" y="964" width="5" height="15" fill="rgb(207,138,13)"/><text x="43.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="40" y="980" width="5" height="15" fill="rgb(247,52,21)"/><text x="43.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="40" y="996" width="5" height="15" fill="rgb(246,130,42)"/><text x="43.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="40" y="1012" width="5" height="15" fill="rgb(213,16,37)"/><text x="43.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="40" y="1028" width="5" height="15" fill="rgb(253,110,15)"/><text x="43.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="40" y="1044" width="5" height="15" fill="rgb(239,31,20)"/><text x="43.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/base.py) (1 samples, 0.43%)</title><rect x="40" y="1060" width="5" height="15" fill="rgb(242,17,27)"/><text x="43.00" y="1070.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="40" y="1076" width="5" height="15" fill="rgb(222,144,3)"/><text x="43.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="40" y="1092" width="5" height="15" fill="rgb(210,99,45)"/><text x="43.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="40" y="1108" width="5" height="15" fill="rgb(226,62,49)"/><text x="43.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="40" y="1124" width="5" height="15" fill="rgb(253,98,34)"/><text x="43.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="40" y="1140" width="5" height="15" fill="rgb(233,98,13)"/><text x="43.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="40" y="1156" width="5" height="15" fill="rgb(253,178,23)"/><text x="43.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="40" y="1172" width="5" height="15" fill="rgb(246,182,16)"/><text x="43.00" y="1182.50"></text></g><g><title>0x7f38d5b3b554 (?) (1 samples, 0.43%)</title><rect x="40" y="1188" width="5" height="15" fill="rgb(218,29,41)"/><text x="43.00" y="1198.50"></text></g><g><title>0x7f38d5b3812d (?) (1 samples, 0.43%)</title><rect x="40" y="1204" width="5" height="15" fill="rgb(229,87,24)"/><text x="43.00" y="1214.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 2.61%)</title><rect x="20" y="340" width="31" height="15" fill="rgb(222,143,30)"/><text x="23.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.61%)</title><rect x="20" y="356" width="31" height="15" fill="rgb(212,108,49)"/><text x="23.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.61%)</title><rect x="20" y="372" width="31" height="15" fill="rgb(243,172,49)"/><text x="23.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.61%)</title><rect x="20" y="388" width="31" height="15" fill="rgb(223,176,5)"/><text x="23.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.61%)</title><rect x="20" y="404" width="31" height="15" fill="rgb(216,51,26)"/><text x="23.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.61%)</title><rect x="20" y="420" width="31" height="15" fill="rgb(242,180,44)"/><text x="23.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.43%)</title><rect x="45" y="436" width="6" height="15" fill="rgb(247,144,46)"/><text x="48.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="45" y="452" width="6" height="15" fill="rgb(230,68,48)"/><text x="48.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="45" y="468" width="6" height="15" fill="rgb(215,148,21)"/><text x="48.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="45" y="484" width="6" height="15" fill="rgb(241,140,38)"/><text x="48.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="45" y="500" width="6" height="15" fill="rgb(228,99,51)"/><text x="48.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="45" y="516" width="6" height="15" fill="rgb(229,136,0)"/><text x="48.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py) (1 samples, 0.43%)</title><rect x="45" y="532" width="6" height="15" fill="rgb(246,9,33)"/><text x="48.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="45" y="548" width="6" height="15" fill="rgb(239,30,5)"/><text x="48.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="45" y="564" width="6" height="15" fill="rgb(217,229,38)"/><text x="48.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="45" y="580" width="6" height="15" fill="rgb(217,108,23)"/><text x="48.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="45" y="596" width="6" height="15" fill="rgb(251,104,0)"/><text x="48.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="45" y="612" width="6" height="15" fill="rgb(254,66,20)"/><text x="48.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py) (1 samples, 0.43%)</title><rect x="45" y="628" width="6" height="15" fill="rgb(219,162,38)"/><text x="48.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="45" y="644" width="6" height="15" fill="rgb(229,16,24)"/><text x="48.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="45" y="660" width="6" height="15" fill="rgb(246,51,18)"/><text x="48.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="45" y="676" width="6" height="15" fill="rgb(251,64,46)"/><text x="48.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="45" y="692" width="6" height="15" fill="rgb(206,5,9)"/><text x="48.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="45" y="708" width="6" height="15" fill="rgb(251,224,38)"/><text x="48.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="45" y="724" width="6" height="15" fill="rgb(227,8,53)"/><text x="48.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="45" y="740" width="6" height="15" fill="rgb(223,147,47)"/><text x="48.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="45" y="756" width="6" height="15" fill="rgb(253,43,18)"/><text x="48.00" y="766.50"></text></g><g><title>&lt;module&gt; (http/__init__.py) (1 samples, 0.43%)</title><rect x="45" y="772" width="6" height="15" fill="rgb(245,221,14)"/><text x="48.00" y="782.50"></text></g><g><title>HTTPStatus (http/__init__.py) (1 samples, 0.43%)</title><rect x="45" y="788" width="6" height="15" fill="rgb(227,148,3)"/><text x="48.00" y="798.50"></text></g><g><title>__setitem__ (enum.py) (1 samples, 0.43%)</title><rect x="45" y="804" width="6" height="15" fill="rgb(234,95,38)"/><text x="48.00" y="814.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 3.48%)</title><rect x="20" y="244" width="41" height="15" fill="rgb(217,78,11)"/><text x="23.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.48%)</title><rect x="20" y="260" width="41" height="15" fill="rgb(207,118,12)"/><text x="23.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.48%)</title><rect x="20" y="276" width="41" height="15" fill="rgb(210,135,26)"/><text x="23.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.48%)</title><rect x="20" y="292" width="41" height="15" fill="rgb(224,212,18)"/><text x="23.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.48%)</title><rect x="20" y="308" width="41" height="15" fill="rgb(214,54,25)"/><text x="23.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.48%)</title><rect x="20" y="324" width="41" height="15" fill="rgb(232,181,21)"/><text x="23.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.87%)</title><rect x="51" y="340" width="10" height="15" fill="rgb(249,137,9)"/><text x="54.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="356" width="10" height="15" fill="rgb(253,180,18)"/><text x="54.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="372" width="10" height="15" fill="rgb(221,221,26)"/><text x="54.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="388" width="10" height="15" fill="rgb(224,2,31)"/><text x="54.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="404" width="10" height="15" fill="rgb(216,177,48)"/><text x="54.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="420" width="10" height="15" fill="rgb(238,188,50)"/><text x="54.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="436" width="10" height="15" fill="rgb(242,74,38)"/><text x="54.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="51" y="452" width="10" height="15" fill="rgb(251,0,53)"/><text x="54.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="468" width="10" height="15" fill="rgb(217,202,33)"/><text x="54.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.87%)</title><rect x="51" y="484" width="10" height="15" fill="rgb(238,50,24)"/><text x="54.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="500" width="10" height="15" fill="rgb(226,80,54)"/><text x="54.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="516" width="10" height="15" fill="rgb(252,123,17)"/><text x="54.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="532" width="10" height="15" fill="rgb(240,206,12)"/><text x="54.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="51" y="548" width="10" height="15" fill="rgb(213,219,17)"/><text x="54.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="564" width="10" height="15" fill="rgb(216,106,2)"/><text x="54.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.87%)</title><rect x="51" y="580" width="10" height="15" fill="rgb(221,212,31)"/><text x="54.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="596" width="10" height="15" fill="rgb(242,0,5)"/><text x="54.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="612" width="10" height="15" fill="rgb(251,225,39)"/><text x="54.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="628" width="10" height="15" fill="rgb(252,134,42)"/><text x="54.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="51" y="644" width="10" height="15" fill="rgb(213,217,36)"/><text x="54.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="660" width="10" height="15" fill="rgb(217,190,37)"/><text x="54.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.87%)</title><rect x="51" y="676" width="10" height="15" fill="rgb(211,123,8)"/><text x="54.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="692" width="10" height="15" fill="rgb(216,105,33)"/><text x="54.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="708" width="10" height="15" fill="rgb(220,64,41)"/><text x="54.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="724" width="10" height="15" fill="rgb(220,222,23)"/><text x="54.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="51" y="740" width="10" height="15" fill="rgb(238,178,38)"/><text x="54.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="756" width="10" height="15" fill="rgb(243,86,48)"/><text x="54.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.87%)</title><rect x="51" y="772" width="10" height="15" fill="rgb(248,143,45)"/><text x="54.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="788" width="10" height="15" fill="rgb(249,128,31)"/><text x="54.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="804" width="10" height="15" fill="rgb(221,12,28)"/><text x="54.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="820" width="10" height="15" fill="rgb(223,159,25)"/><text x="54.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="51" y="836" width="10" height="15" fill="rgb(241,8,14)"/><text x="54.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="852" width="10" height="15" fill="rgb(253,162,23)"/><text x="54.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (2 samples, 0.87%)</title><rect x="51" y="868" width="10" height="15" fill="rgb(233,191,26)"/><text x="54.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="884" width="10" height="15" fill="rgb(235,99,8)"/><text x="54.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="900" width="10" height="15" fill="rgb(218,139,25)"/><text x="54.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="916" width="10" height="15" fill="rgb(206,118,0)"/><text x="54.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="51" y="932" width="10" height="15" fill="rgb(248,49,29)"/><text x="54.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="948" width="10" height="15" fill="rgb(250,221,54)"/><text x="54.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (2 samples, 0.87%)</title><rect x="51" y="964" width="10" height="15" fill="rgb(206,125,35)"/><text x="54.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="980" width="10" height="15" fill="rgb(247,151,11)"/><text x="54.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="996" width="10" height="15" fill="rgb(224,195,36)"/><text x="54.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="1012" width="10" height="15" fill="rgb(232,34,12)"/><text x="54.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="51" y="1028" width="10" height="15" fill="rgb(208,120,13)"/><text x="54.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="1044" width="10" height="15" fill="rgb(239,181,22)"/><text x="54.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (2 samples, 0.87%)</title><rect x="51" y="1060" width="10" height="15" fill="rgb(222,17,54)"/><text x="54.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="1076" width="10" height="15" fill="rgb(254,55,13)"/><text x="54.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="1092" width="10" height="15" fill="rgb(250,174,43)"/><text x="54.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="1108" width="10" height="15" fill="rgb(222,20,54)"/><text x="54.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="1124" width="10" height="15" fill="rgb(248,220,48)"/><text x="54.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="1140" width="10" height="15" fill="rgb(246,101,11)"/><text x="54.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="1156" width="10" height="15" fill="rgb(213,110,12)"/><text x="54.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="51" y="1172" width="10" height="15" fill="rgb(207,201,39)"/><text x="54.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="1188" width="10" height="15" fill="rgb(219,6,42)"/><text x="54.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (2 samples, 0.87%)</title><rect x="51" y="1204" width="10" height="15" fill="rgb(218,14,35)"/><text x="54.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="1220" width="10" height="15" fill="rgb(253,152,8)"/><text x="54.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="1236" width="10" height="15" fill="rgb(237,85,40)"/><text x="54.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="1252" width="10" height="15" fill="rgb(229,133,42)"/><text x="54.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="51" y="1268" width="10" height="15" fill="rgb(205,223,46)"/><text x="54.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="1284" width="10" height="15" fill="rgb(254,173,34)"/><text x="54.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py) (2 samples, 0.87%)</title><rect x="51" y="1300" width="10" height="15" fill="rgb(205,140,21)"/><text x="54.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="1316" width="10" height="15" fill="rgb(243,176,30)"/><text x="54.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="1332" width="10" height="15" fill="rgb(249,225,33)"/><text x="54.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="1348" width="10" height="15" fill="rgb(211,211,17)"/><text x="54.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="51" y="1364" width="10" height="15" fill="rgb(209,69,23)"/><text x="54.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="51" y="1380" width="10" height="15" fill="rgb(243,212,6)"/><text x="54.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py) (2 samples, 0.87%)</title><rect x="51" y="1396" width="10" height="15" fill="rgb(250,71,19)"/><text x="54.00" y="1406.50"></text></g><g><title>compile (re.py) (2 samples, 0.87%)</title><rect x="51" y="1412" width="10" height="15" fill="rgb(245,30,44)"/><text x="54.00" y="1422.50"></text></g><g><title>_compile (re.py) (2 samples, 0.87%)</title><rect x="51" y="1428" width="10" height="15" fill="rgb(225,202,35)"/><text x="54.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (2 samples, 0.87%)</title><rect x="51" y="1444" width="10" height="15" fill="rgb(206,33,19)"/><text x="54.00" y="1454.50"></text></g><g><title>parse (sre_parse.py) (2 samples, 0.87%)</title><rect x="51" y="1460" width="10" height="15" fill="rgb(228,202,17)"/><text x="54.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py) (2 samples, 0.87%)</title><rect x="51" y="1476" width="10" height="15" fill="rgb(227,154,31)"/><text x="54.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py) (2 samples, 0.87%)</title><rect x="51" y="1492" width="10" height="15" fill="rgb(210,130,25)"/><text x="54.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py) (2 samples, 0.87%)</title><rect x="51" y="1508" width="10" height="15" fill="rgb(217,38,48)"/><text x="54.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py) (2 samples, 0.87%)</title><rect x="51" y="1524" width="10" height="15" fill="rgb(252,194,44)"/><text x="54.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py) (2 samples, 0.87%)</title><rect x="51" y="1540" width="10" height="15" fill="rgb(224,72,20)"/><text x="54.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py) (2 samples, 0.87%)</title><rect x="51" y="1556" width="10" height="15" fill="rgb(254,63,33)"/><text x="54.00" y="1566.50"></text></g><g><title>_uniq (sre_parse.py) (1 samples, 0.43%)</title><rect x="56" y="1572" width="5" height="15" fill="rgb(223,103,40)"/><text x="59.00" y="1582.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.43%)</title><rect x="61" y="244" width="5" height="15" fill="rgb(252,105,30)"/><text x="64.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="61" y="260" width="5" height="15" fill="rgb(233,129,42)"/><text x="64.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="61" y="276" width="5" height="15" fill="rgb(213,120,28)"/><text x="64.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="61" y="292" width="5" height="15" fill="rgb(215,177,22)"/><text x="64.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="61" y="308" width="5" height="15" fill="rgb(232,110,27)"/><text x="64.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="61" y="324" width="5" height="15" fill="rgb(253,14,12)"/><text x="64.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="61" y="340" width="5" height="15" fill="rgb(234,196,36)"/><text x="64.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="61" y="356" width="5" height="15" fill="rgb(231,95,13)"/><text x="64.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.43%)</title><rect x="61" y="372" width="5" height="15" fill="rgb(244,30,6)"/><text x="64.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="61" y="388" width="5" height="15" fill="rgb(219,19,44)"/><text x="64.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="61" y="404" width="5" height="15" fill="rgb(207,3,34)"/><text x="64.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="61" y="420" width="5" height="15" fill="rgb(206,17,6)"/><text x="64.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="61" y="436" width="5" height="15" fill="rgb(212,192,13)"/><text x="64.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="61" y="452" width="5" height="15" fill="rgb(232,89,31)"/><text x="64.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="61" y="468" width="5" height="15" fill="rgb(224,197,10)"/><text x="64.00" y="478.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="61" y="484" width="5" height="15" fill="rgb(241,185,9)"/><text x="64.00" y="494.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="61" y="500" width="5" height="15" fill="rgb(254,215,16)"/><text x="64.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="66" y="564" width="5" height="15" fill="rgb(215,125,26)"/><text x="69.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_omp.py) (1 samples, 0.43%)</title><rect x="66" y="580" width="5" height="15" fill="rgb(216,168,24)"/><text x="69.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="66" y="596" width="5" height="15" fill="rgb(245,46,40)"/><text x="69.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.65%)</title><rect x="10" y="68" width="66" height="15" fill="rgb(248,159,31)"/><text x="13.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.65%)</title><rect x="10" y="84" width="66" height="15" fill="rgb(210,124,15)"/><text x="13.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.65%)</title><rect x="10" y="100" width="66" height="15" fill="rgb(237,64,4)"/><text x="13.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 5.65%)</title><rect x="10" y="116" width="66" height="15" fill="rgb(240,42,46)"/><text x="13.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.65%)</title><rect x="10" y="132" width="66" height="15" fill="rgb(253,136,45)"/><text x="13.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVR/bench_SVR_rbf_b_reg_kernelrbf.py) (13 samples, 5.65%)</title><rect x="10" y="148" width="66" height="15" fill="rgb(241,73,29)"/><text x="13.00" y="158.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.65%)</title><rect x="10" y="164" width="66" height="15" fill="rgb(238,186,31)"/><text x="13.00" y="174.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.65%)</title><rect x="10" y="180" width="66" height="15" fill="rgb(209,113,0)"/><text x="13.00" y="190.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.78%)</title><rect x="20" y="196" width="56" height="15" fill="rgb(253,103,34)"/><text x="23.00" y="206.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 4.78%)</title><rect x="20" y="212" width="56" height="15" fill="rgb(217,124,25)"/><text x="23.00" y="222.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.78%)</title><rect x="20" y="228" width="56" height="15" fill="rgb(214,160,44)"/><text x="23.00" y="238.50">_call..</text></g><g><title>&lt;module&gt; (sklearn/svm/__init__.py) (2 samples, 0.87%)</title><rect x="66" y="244" width="10" height="15" fill="rgb(205,35,3)"/><text x="69.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="66" y="260" width="10" height="15" fill="rgb(217,149,37)"/><text x="69.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="66" y="276" width="10" height="15" fill="rgb(250,39,29)"/><text x="69.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="66" y="292" width="10" height="15" fill="rgb(241,208,33)"/><text x="69.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="66" y="308" width="10" height="15" fill="rgb(219,25,30)"/><text x="69.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="66" y="324" width="10" height="15" fill="rgb(209,91,46)"/><text x="69.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/svm/_classes.py) (2 samples, 0.87%)</title><rect x="66" y="340" width="10" height="15" fill="rgb(243,25,35)"/><text x="69.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="66" y="356" width="10" height="15" fill="rgb(229,178,38)"/><text x="69.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="66" y="372" width="10" height="15" fill="rgb(226,38,8)"/><text x="69.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="66" y="388" width="10" height="15" fill="rgb(247,23,11)"/><text x="69.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="66" y="404" width="10" height="15" fill="rgb(239,53,18)"/><text x="69.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="66" y="420" width="10" height="15" fill="rgb(205,190,5)"/><text x="69.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="66" y="436" width="10" height="15" fill="rgb(214,88,14)"/><text x="69.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="66" y="452" width="10" height="15" fill="rgb(244,127,24)"/><text x="69.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="66" y="468" width="10" height="15" fill="rgb(236,139,1)"/><text x="69.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (2 samples, 0.87%)</title><rect x="66" y="484" width="10" height="15" fill="rgb(245,74,8)"/><text x="69.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="66" y="500" width="10" height="15" fill="rgb(237,220,1)"/><text x="69.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="66" y="516" width="10" height="15" fill="rgb(207,142,0)"/><text x="69.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="66" y="532" width="10" height="15" fill="rgb(249,139,53)"/><text x="69.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="66" y="548" width="10" height="15" fill="rgb(219,59,40)"/><text x="69.00" y="558.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="71" y="564" width="5" height="15" fill="rgb(239,13,21)"/><text x="74.00" y="574.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="71" y="580" width="5" height="15" fill="rgb(222,127,43)"/><text x="74.00" y="590.50"></text></g><g><title>0x7f390247a9c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="81" y="116" width="5" height="15" fill="rgb(235,32,12)"/><text x="84.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.43%)</title><rect x="86" y="116" width="6" height="15" fill="rgb(239,130,27)"/><text x="89.00" y="126.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.43%)</title><rect x="138" y="180" width="5" height="15" fill="rgb(249,80,54)"/><text x="141.00" y="190.50"></text></g><g><title>0x7f38c3307ff9 (?) (1 samples, 0.43%)</title><rect x="143" y="212" width="5" height="15" fill="rgb(247,66,53)"/><text x="146.00" y="222.50"></text></g><g><title>0x7f38c3302ef6 (?) (1 samples, 0.43%)</title><rect x="143" y="228" width="5" height="15" fill="rgb(243,77,43)"/><text x="146.00" y="238.50"></text></g><g><title>0x7f38c32f7962 (?) (1 samples, 0.43%)</title><rect x="143" y="244" width="5" height="15" fill="rgb(229,11,31)"/><text x="146.00" y="254.50"></text></g><g><title>0x7f38c332b7a7 (?) (1 samples, 0.43%)</title><rect x="143" y="260" width="5" height="15" fill="rgb(220,170,7)"/><text x="146.00" y="270.50"></text></g><g><title>0x7f38c332b379 (?) (1 samples, 0.43%)</title><rect x="143" y="276" width="5" height="15" fill="rgb(254,98,32)"/><text x="146.00" y="286.50"></text></g><g><title>0x7f38c37898b8 (?) (1 samples, 0.43%)</title><rect x="143" y="292" width="5" height="15" fill="rgb(235,149,49)"/><text x="146.00" y="302.50"></text></g><g><title>0x7f38c3787c7f (?) (1 samples, 0.43%)</title><rect x="143" y="308" width="5" height="15" fill="rgb(251,51,32)"/><text x="146.00" y="318.50"></text></g><g><title>0x7f38c379a99c (?) (1 samples, 0.43%)</title><rect x="143" y="324" width="5" height="15" fill="rgb(211,86,31)"/><text x="146.00" y="334.50"></text></g><g><title>0x7f38c34a596f (?) (1 samples, 0.43%)</title><rect x="143" y="340" width="5" height="15" fill="rgb(212,147,43)"/><text x="146.00" y="350.50"></text></g><g><title>expf32x (libm-2.29.so) (1 samples, 0.43%)</title><rect x="143" y="356" width="5" height="15" fill="rgb(226,120,50)"/><text x="146.00" y="366.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="163" y="292" width="6" height="15" fill="rgb(226,179,18)"/><text x="166.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="163" y="308" width="6" height="15" fill="rgb(247,190,2)"/><text x="166.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.87%)</title><rect x="169" y="292" width="10" height="15" fill="rgb(215,172,50)"/><text x="172.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.87%)</title><rect x="169" y="308" width="10" height="15" fill="rgb(209,28,40)"/><text x="172.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.87%)</title><rect x="169" y="324" width="10" height="15" fill="rgb(207,84,0)"/><text x="172.00" y="334.50"></text></g><g><title>0x7f3903258c38 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="174" y="340" width="5" height="15" fill="rgb(246,216,39)"/><text x="177.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="179" y="292" width="5" height="15" fill="rgb(221,87,39)"/><text x="182.00" y="302.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="189" y="356" width="5" height="15" fill="rgb(205,103,38)"/><text x="192.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="189" y="372" width="5" height="15" fill="rgb(249,149,21)"/><text x="192.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="189" y="388" width="5" height="15" fill="rgb(211,40,8)"/><text x="192.00" y="398.50"></text></g><g><title>0x7f39032666a2 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="189" y="404" width="5" height="15" fill="rgb(247,77,17)"/><text x="192.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.30%)</title><rect x="184" y="340" width="15" height="15" fill="rgb(209,154,20)"/><text x="187.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="194" y="356" width="5" height="15" fill="rgb(227,25,53)"/><text x="197.00" y="366.50"></text></g><g><title>0x7f3903429bba (libm-2.29.so) (1 samples, 0.43%)</title><rect x="230" y="372" width="5" height="15" fill="rgb(233,148,17)"/><text x="233.00" y="382.50"></text></g><g><title>0x7f3903429bc3 (libm-2.29.so) (1 samples, 0.43%)</title><rect x="235" y="372" width="5" height="15" fill="rgb(213,45,3)"/><text x="238.00" y="382.50"></text></g><g><title>expf32x (libm-2.29.so) (4 samples, 1.74%)</title><rect x="225" y="356" width="21" height="15" fill="rgb(219,128,10)"/><text x="228.00" y="366.50"></text></g><g><title>0x7f3903429c0c (libm-2.29.so) (1 samples, 0.43%)</title><rect x="240" y="372" width="6" height="15" fill="rgb(210,31,21)"/><text x="243.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 8.70%)</title><rect x="153" y="260" width="103" height="15" fill="rgb(242,138,45)"/><text x="156.00" y="270.50">onnxruntime:..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 8.26%)</title><rect x="158" y="276" width="98" height="15" fill="rgb(233,137,12)"/><text x="161.00" y="286.50">onnxruntime..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 6.09%)</title><rect x="184" y="292" width="72" height="15" fill="rgb(208,74,4)"/><text x="187.00" y="302.50">onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 6.09%)</title><rect x="184" y="308" width="72" height="15" fill="rgb(230,55,7)"/><text x="187.00" y="318.50">onnxrunt..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 6.09%)</title><rect x="184" y="324" width="72" height="15" fill="rgb(247,115,13)"/><text x="187.00" y="334.50">onnxrunt..</text></g><g><title>onnxruntime::ml::SVMRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 4.78%)</title><rect x="199" y="340" width="57" height="15" fill="rgb(218,51,4)"/><text x="202.00" y="350.50">onnxru..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.87%)</title><rect x="246" y="356" width="10" height="15" fill="rgb(242,168,28)"/><text x="249.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.87%)</title><rect x="246" y="372" width="10" height="15" fill="rgb(209,14,49)"/><text x="249.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.87%)</title><rect x="246" y="388" width="10" height="15" fill="rgb(206,192,45)"/><text x="249.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="251" y="404" width="5" height="15" fill="rgb(238,224,1)"/><text x="254.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="251" y="420" width="5" height="15" fill="rgb(244,124,43)"/><text x="254.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="251" y="436" width="5" height="15" fill="rgb(229,27,21)"/><text x="254.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="251" y="452" width="5" height="15" fill="rgb(226,155,36)"/><text x="254.00" y="462.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.17%)</title><rect x="256" y="260" width="25" height="15" fill="rgb(225,5,46)"/><text x="259.00" y="270.50">o..</text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.87%)</title><rect x="271" y="276" width="10" height="15" fill="rgb(205,9,13)"/><text x="274.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.87%)</title><rect x="271" y="292" width="10" height="15" fill="rgb(242,104,32)"/><text x="274.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="276" y="308" width="5" height="15" fill="rgb(219,170,37)"/><text x="279.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.43%)</title><rect x="281" y="292" width="6" height="15" fill="rgb(207,135,23)"/><text x="284.00" y="302.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.30%)</title><rect x="281" y="260" width="16" height="15" fill="rgb(244,182,40)"/><text x="284.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (3 samples, 1.30%)</title><rect x="281" y="276" width="16" height="15" fill="rgb(218,222,44)"/><text x="284.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.87%)</title><rect x="287" y="292" width="10" height="15" fill="rgb(243,22,3)"/><text x="290.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.43%)</title><rect x="292" y="308" width="5" height="15" fill="rgb(238,120,42)"/><text x="295.00" y="318.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (39 samples, 16.96%)</title><rect x="102" y="132" width="200" height="15" fill="rgb(230,227,34)"/><text x="105.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_be..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (38 samples, 16.52%)</title><rect x="107" y="148" width="195" height="15" fill="rgb(213,137,54)"/><text x="110.00" y="158.50">run (mlprodict/onnxrt/onn..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (36 samples, 15.65%)</title><rect x="117" y="164" width="185" height="15" fill="rgb(225,158,53)"/><text x="120.00" y="174.50">_run_whole_runtime (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (31 samples, 13.48%)</title><rect x="143" y="180" width="159" height="15" fill="rgb(234,149,1)"/><text x="146.00" y="190.50">run (mlprodict/onnxr..</text></g><g><title>run (onnxruntime/capi/session.py) (31 samples, 13.48%)</title><rect x="143" y="196" width="159" height="15" fill="rgb(237,138,7)"/><text x="146.00" y="206.50">run (onnxruntime/cap..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 13.04%)</title><rect x="148" y="212" width="154" height="15" fill="rgb(247,77,20)"/><text x="151.00" y="222.50">pybind11::cpp_funct..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 12.61%)</title><rect x="153" y="228" width="149" height="15" fill="rgb(240,27,36)"/><text x="156.00" y="238.50">void pybind11::cpp_..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 12.61%)</title><rect x="153" y="244" width="149" height="15" fill="rgb(233,100,35)"/><text x="156.00" y="254.50">onnxruntime::python..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.43%)</title><rect x="297" y="260" width="5" height="15" fill="rgb(243,61,28)"/><text x="300.00" y="270.50"></text></g><g><title>profile_ort (bench_SVR_rbf_b_reg_kernelrbf_1_50_12_float_.py) (45 samples, 19.57%)</title><rect x="76" y="68" width="231" height="15" fill="rgb(251,67,1)"/><text x="79.00" y="78.50">profile_ort (bench_SVR_rbf_b_r..</text></g><g><title>setup_profile (bench_SVR_rbf_b_reg_kernelrbf_1_50_12_float_.py) (45 samples, 19.57%)</title><rect x="76" y="84" width="231" height="15" fill="rgb(249,60,9)"/><text x="79.00" y="94.50">setup_profile (bench_SVR_rbf_b..</text></g><g><title>profile (bench_SVR_rbf_b_reg_kernelrbf_1_50_12_float_.py) (45 samples, 19.57%)</title><rect x="76" y="100" width="231" height="15" fill="rgb(216,176,49)"/><text x="79.00" y="110.50">profile (bench_SVR_rbf_b_reg_k..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (42 samples, 18.26%)</title><rect x="92" y="116" width="215" height="15" fill="rgb(227,190,26)"/><text x="95.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.43%)</title><rect x="302" y="132" width="5" height="15" fill="rgb(228,47,54)"/><text x="305.00" y="142.50"></text></g><g><title>0x7f38c41e18f0 (?) (1 samples, 0.43%)</title><rect x="307" y="244" width="5" height="15" fill="rgb(252,207,12)"/><text x="310.00" y="254.50"></text></g><g><title>0x7f38c41e564e (?) (1 samples, 0.43%)</title><rect x="307" y="260" width="5" height="15" fill="rgb(237,185,10)"/><text x="310.00" y="270.50"></text></g><g><title>0x7f38c41e5506 (?) (1 samples, 0.43%)</title><rect x="307" y="276" width="5" height="15" fill="rgb(214,23,31)"/><text x="310.00" y="286.50"></text></g><g><title>0x7f38c41dcb9b (?) (1 samples, 0.43%)</title><rect x="307" y="292" width="5" height="15" fill="rgb(219,203,28)"/><text x="310.00" y="302.50"></text></g><g><title>0x7f38cd24fab9 (?) (1 samples, 0.43%)</title><rect x="307" y="308" width="5" height="15" fill="rgb(224,138,0)"/><text x="310.00" y="318.50"></text></g><g><title>0x7f38cd250eab (?) (1 samples, 0.43%)</title><rect x="307" y="324" width="5" height="15" fill="rgb(254,176,43)"/><text x="310.00" y="334.50"></text></g><g><title>0x7f38cd250ea0 (libgomp.so.1.0.0) (3 samples, 1.30%)</title><rect x="312" y="468" width="16" height="15" fill="rgb(239,28,14)"/><text x="315.00" y="478.50"></text></g><g><title>0x7f38cd250ea9 (libgomp.so.1.0.0) (6 samples, 2.61%)</title><rect x="328" y="468" width="30" height="15" fill="rgb(216,155,41)"/><text x="331.00" y="478.50">0x..</text></g><g><title>0x7f38cd250eab (libgomp.so.1.0.0) (11 samples, 4.78%)</title><rect x="358" y="468" width="57" height="15" fill="rgb(217,196,29)"/><text x="361.00" y="478.50">0x7f38..</text></g><g><title>0x7f38cd24fab9 (libgomp.so.1.0.0) (27 samples, 11.74%)</title><rect x="312" y="452" width="139" height="15" fill="rgb(205,185,12)"/><text x="315.00" y="462.50">0x7f38cd24fab9 (l..</text></g><g><title>0x7f38cd250ead (libgomp.so.1.0.0) (7 samples, 3.04%)</title><rect x="415" y="468" width="36" height="15" fill="rgb(249,105,37)"/><text x="418.00" y="478.50">0x7..</text></g><g><title>0x7f38cd250cf9 (libgomp.so.1.0.0) (4 samples, 1.74%)</title><rect x="451" y="484" width="20" height="15" fill="rgb(225,143,52)"/><text x="454.00" y="494.50"></text></g><g><title>0x7f38cd250cfb (libgomp.so.1.0.0) (1 samples, 0.43%)</title><rect x="471" y="484" width="5" height="15" fill="rgb(240,22,17)"/><text x="474.00" y="494.50"></text></g><g><title>profile (bench_SVR_rbf_b_reg_kernelrbf_1_50_12_float_.py) (35 samples, 15.22%)</title><rect x="307" y="100" width="180" height="15" fill="rgb(246,212,26)"/><text x="310.00" y="110.50">profile (bench_SVR_rbf_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (35 samples, 15.22%)</title><rect x="307" y="116" width="180" height="15" fill="rgb(244,217,54)"/><text x="310.00" y="126.50">time_predict (mlprodict..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (35 samples, 15.22%)</title><rect x="307" y="132" width="180" height="15" fill="rgb(250,177,28)"/><text x="310.00" y="142.50">&lt;lambda&gt; (mlprodict/asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (35 samples, 15.22%)</title><rect x="307" y="148" width="180" height="15" fill="rgb(226,84,28)"/><text x="310.00" y="158.50">run (mlprodict/onnxrt/o..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (35 samples, 15.22%)</title><rect x="307" y="164" width="180" height="15" fill="rgb(242,16,9)"/><text x="310.00" y="174.50">_run_sequence_runtime (..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (35 samples, 15.22%)</title><rect x="307" y="180" width="180" height="15" fill="rgb(206,26,31)"/><text x="310.00" y="190.50">run (mlprodict/onnxrt/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (35 samples, 15.22%)</title><rect x="307" y="196" width="180" height="15" fill="rgb(217,170,18)"/><text x="310.00" y="206.50">run (mlprodict/onnxrt/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (35 samples, 15.22%)</title><rect x="307" y="212" width="180" height="15" fill="rgb(215,146,28)"/><text x="310.00" y="222.50">run (mlprodict/onnxrt/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_regressor.py) (35 samples, 15.22%)</title><rect x="307" y="228" width="180" height="15" fill="rgb(242,29,37)"/><text x="310.00" y="238.50">_run (mlprodict/onnxrt/..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (34 samples, 14.78%)</title><rect x="312" y="244" width="175" height="15" fill="rgb(216,41,48)"/><text x="315.00" y="254.50">pybind11::cpp_function..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (34 samples, 14.78%)</title><rect x="312" y="260" width="175" height="15" fill="rgb(208,228,23)"/><text x="315.00" y="270.50">void pybind11::cpp_fun..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (34 samples, 14.78%)</title><rect x="312" y="276" width="175" height="15" fill="rgb(215,157,26)"/><text x="315.00" y="286.50">void pybind11::cpp_fun..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (34 samples, 14.78%)</title><rect x="312" y="292" width="175" height="15" fill="rgb(254,154,7)"/><text x="315.00" y="302.50">pybind11::detail::argu..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (34 samples, 14.78%)</title><rect x="312" y="308" width="175" height="15" fill="rgb(243,78,20)"/><text x="315.00" y="318.50">pybind11::detail::argu..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (34 samples, 14.78%)</title><rect x="312" y="324" width="175" height="15" fill="rgb(220,87,20)"/><text x="315.00" y="334.50">pybind11::cpp_function..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (34 samples, 14.78%)</title><rect x="312" y="340" width="175" height="15" fill="rgb(250,150,3)"/><text x="315.00" y="350.50">pybind11::array_t&lt;floa..</text></g><g><title>pybind11::array::~array (numpy.h) (34 samples, 14.78%)</title><rect x="312" y="356" width="175" height="15" fill="rgb(224,27,28)"/><text x="315.00" y="366.50">pybind11::array::~arra..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (34 samples, 14.78%)</title><rect x="312" y="372" width="175" height="15" fill="rgb(210,88,21)"/><text x="315.00" y="382.50">pybind11::buffer::~buf..</text></g><g><title>pybind11::object::~object (pytypes.h) (34 samples, 14.78%)</title><rect x="312" y="388" width="175" height="15" fill="rgb(249,64,45)"/><text x="315.00" y="398.50">pybind11::object::~obj..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (34 samples, 14.78%)</title><rect x="312" y="404" width="175" height="15" fill="rgb(234,50,7)"/><text x="315.00" y="414.50">pybind11::handle::dec_..</text></g><g><title>RuntimeSVMRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_regressor_.cpp) (34 samples, 14.78%)</title><rect x="312" y="420" width="175" height="15" fill="rgb(251,205,7)"/><text x="315.00" y="430.50">RuntimeSVMRegressor&lt;fl..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (34 samples, 14.78%)</title><rect x="312" y="436" width="175" height="15" fill="rgb(234,205,6)"/><text x="315.00" y="446.50">pybind11::gil_scoped_r..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (7 samples, 3.04%)</title><rect x="451" y="452" width="36" height="15" fill="rgb(221,3,54)"/><text x="454.00" y="462.50">GOM..</text></g><g><title>0x7f38cd24edaa (libgomp.so.1.0.0) (7 samples, 3.04%)</title><rect x="451" y="468" width="36" height="15" fill="rgb(211,176,23)"/><text x="454.00" y="478.50">0x7..</text></g><g><title>0x7f38cd250cfd (libgomp.so.1.0.0) (2 samples, 0.87%)</title><rect x="476" y="484" width="11" height="15" fill="rgb(231,157,30)"/><text x="479.00" y="494.50"></text></g><g><title>profile_pyrt (bench_SVR_rbf_b_reg_kernelrbf_1_50_12_float_.py) (36 samples, 15.65%)</title><rect x="307" y="68" width="185" height="15" fill="rgb(234,98,35)"/><text x="310.00" y="78.50">profile_pyrt (bench_SVR_..</text></g><g><title>setup_profile (bench_SVR_rbf_b_reg_kernelrbf_1_50_12_float_.py) (36 samples, 15.65%)</title><rect x="307" y="84" width="185" height="15" fill="rgb(210,62,46)"/><text x="310.00" y="94.50">setup_profile (bench_SVR..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.43%)</title><rect x="487" y="100" width="5" height="15" fill="rgb(250,4,18)"/><text x="490.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.43%)</title><rect x="487" y="116" width="5" height="15" fill="rgb(251,59,15)"/><text x="490.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.43%)</title><rect x="487" y="132" width="5" height="15" fill="rgb(239,106,39)"/><text x="490.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.43%)</title><rect x="487" y="148" width="5" height="15" fill="rgb(217,167,3)"/><text x="490.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.43%)</title><rect x="487" y="164" width="5" height="15" fill="rgb(226,109,22)"/><text x="490.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.43%)</title><rect x="487" y="180" width="5" height="15" fill="rgb(218,11,27)"/><text x="490.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.43%)</title><rect x="487" y="196" width="5" height="15" fill="rgb(210,194,32)"/><text x="490.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="487" y="212" width="5" height="15" fill="rgb(220,82,10)"/><text x="490.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="487" y="228" width="5" height="15" fill="rgb(213,26,35)"/><text x="490.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="487" y="244" width="5" height="15" fill="rgb(226,207,45)"/><text x="490.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="487" y="260" width="5" height="15" fill="rgb(228,108,40)"/><text x="490.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="487" y="276" width="5" height="15" fill="rgb(214,89,9)"/><text x="490.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.43%)</title><rect x="487" y="292" width="5" height="15" fill="rgb(251,40,3)"/><text x="490.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="487" y="308" width="5" height="15" fill="rgb(249,147,47)"/><text x="490.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="487" y="324" width="5" height="15" fill="rgb(208,225,38)"/><text x="490.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="487" y="340" width="5" height="15" fill="rgb(222,63,52)"/><text x="490.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.43%)</title><rect x="487" y="356" width="5" height="15" fill="rgb(216,186,28)"/><text x="490.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="487" y="372" width="5" height="15" fill="rgb(243,71,7)"/><text x="490.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.43%)</title><rect x="487" y="388" width="5" height="15" fill="rgb(213,3,13)"/><text x="490.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.43%)</title><rect x="487" y="404" width="5" height="15" fill="rgb(247,139,21)"/><text x="490.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.43%)</title><rect x="487" y="420" width="5" height="15" fill="rgb(240,200,10)"/><text x="490.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.43%)</title><rect x="487" y="436" width="5" height="15" fill="rgb(231,200,9)"/><text x="490.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.43%)</title><rect x="487" y="452" width="5" height="15" fill="rgb(208,201,8)"/><text x="490.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.43%)</title><rect x="487" y="468" width="5" height="15" fill="rgb(236,23,44)"/><text x="490.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.43%)</title><rect x="487" y="484" width="5" height="15" fill="rgb(237,81,29)"/><text x="490.00" y="494.50"></text></g><g><title>process_documentation (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.43%)</title><rect x="487" y="500" width="5" height="15" fill="rgb(205,117,36)"/><text x="490.00" y="510.50"></text></g><g><title>unicode_replace (python3.7) (1 samples, 0.43%)</title><rect x="487" y="516" width="5" height="15" fill="rgb(207,41,2)"/><text x="490.00" y="526.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.43%)</title><rect x="497" y="116" width="5" height="15" fill="rgb(244,136,21)"/><text x="500.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.43%)</title><rect x="517" y="148" width="6" height="15" fill="rgb(205,42,39)"/><text x="520.00" y="158.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.43%)</title><rect x="517" y="164" width="6" height="15" fill="rgb(222,43,36)"/><text x="520.00" y="174.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.43%)</title><rect x="517" y="180" width="6" height="15" fill="rgb(211,39,11)"/><text x="520.00" y="190.50"></text></g><g><title>0x7f3903257d07 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="517" y="196" width="6" height="15" fill="rgb(206,91,29)"/><text x="520.00" y="206.50"></text></g><g><title>0x7f38ddd4c0ce (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="564" y="180" width="5" height="15" fill="rgb(252,199,19)"/><text x="567.00" y="190.50"></text></g><g><title>0x7f38ddd49d86 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.30%)</title><rect x="569" y="196" width="15" height="15" fill="rgb(224,79,19)"/><text x="572.00" y="206.50"></text></g><g><title>0x7f38ddd2fe39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.30%)</title><rect x="569" y="212" width="15" height="15" fill="rgb(226,20,21)"/><text x="572.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 1.30%)</title><rect x="569" y="228" width="15" height="15" fill="rgb(228,201,3)"/><text x="572.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.87%)</title><rect x="574" y="244" width="10" height="15" fill="rgb(246,67,20)"/><text x="577.00" y="254.50"></text></g><g><title>0x7f38ddd49e0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="584" y="196" width="5" height="15" fill="rgb(241,62,20)"/><text x="587.00" y="206.50"></text></g><g><title>0x7f38ddd2fe39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="584" y="212" width="5" height="15" fill="rgb(214,181,7)"/><text x="587.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.43%)</title><rect x="584" y="228" width="5" height="15" fill="rgb(229,1,43)"/><text x="587.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.43%)</title><rect x="584" y="244" width="5" height="15" fill="rgb(254,47,27)"/><text x="587.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.43%)</title><rect x="584" y="260" width="5" height="15" fill="rgb(206,106,27)"/><text x="587.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.43%)</title><rect x="584" y="276" width="5" height="15" fill="rgb(233,138,28)"/><text x="587.00" y="286.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.43%)</title><rect x="584" y="292" width="5" height="15" fill="rgb(250,137,53)"/><text x="587.00" y="302.50"></text></g><g><title>0x7f38ddd49f67 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="589" y="196" width="11" height="15" fill="rgb(247,29,17)"/><text x="592.00" y="206.50"></text></g><g><title>0x7f38ddd2fe39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="589" y="212" width="11" height="15" fill="rgb(238,211,6)"/><text x="592.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.87%)</title><rect x="589" y="228" width="11" height="15" fill="rgb(249,129,53)"/><text x="592.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.43%)</title><rect x="594" y="244" width="6" height="15" fill="rgb(209,218,48)"/><text x="597.00" y="254.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.43%)</title><rect x="594" y="260" width="6" height="15" fill="rgb(205,53,39)"/><text x="597.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.43%)</title><rect x="594" y="276" width="6" height="15" fill="rgb(215,199,21)"/><text x="597.00" y="286.50"></text></g><g><title>0x7f38ddd49fed (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="600" y="196" width="5" height="15" fill="rgb(247,8,10)"/><text x="603.00" y="206.50"></text></g><g><title>0x7f38ddd2ff13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="600" y="212" width="5" height="15" fill="rgb(207,0,6)"/><text x="603.00" y="222.50"></text></g><g><title>0x7f38ddd2f33c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="600" y="228" width="5" height="15" fill="rgb(222,142,8)"/><text x="603.00" y="238.50"></text></g><g><title>0x7f38ddd2e993 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="600" y="244" width="5" height="15" fill="rgb(238,153,48)"/><text x="603.00" y="254.50"></text></g><g><title>0x7f38ddd4a042 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="605" y="196" width="5" height="15" fill="rgb(211,30,20)"/><text x="608.00" y="206.50"></text></g><g><title>0x7f38ddd4a17f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.17%)</title><rect x="610" y="196" width="25" height="15" fill="rgb(252,53,12)"/><text x="613.00" y="206.50">0..</text></g><g><title>array_arange (multiarraymodule.c) (5 samples, 2.17%)</title><rect x="610" y="212" width="25" height="15" fill="rgb(249,221,29)"/><text x="613.00" y="222.50">a..</text></g><g><title>PyArray_ArangeObj (ctors.c) (2 samples, 0.87%)</title><rect x="625" y="228" width="10" height="15" fill="rgb(213,83,13)"/><text x="628.00" y="238.50"></text></g><g><title>_calc_length (ctors.c) (2 samples, 0.87%)</title><rect x="625" y="244" width="10" height="15" fill="rgb(233,160,19)"/><text x="628.00" y="254.50"></text></g><g><title>0x7f38ddd4a281 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="635" y="196" width="6" height="15" fill="rgb(213,56,43)"/><text x="638.00" y="206.50"></text></g><g><title>0x7f38ddd30ce3 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="635" y="212" width="6" height="15" fill="rgb(248,43,16)"/><text x="638.00" y="222.50"></text></g><g><title>0x7f3903336004 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="635" y="228" width="6" height="15" fill="rgb(226,197,51)"/><text x="638.00" y="238.50"></text></g><g><title>0x7f38ddd4a307 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="641" y="196" width="10" height="15" fill="rgb(222,101,6)"/><text x="644.00" y="206.50"></text></g><g><title>set_model (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="641" y="212" width="10" height="15" fill="rgb(232,191,26)"/><text x="644.00" y="222.50"></text></g><g><title>dense_to_libsvm (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="641" y="228" width="10" height="15" fill="rgb(237,11,27)"/><text x="644.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.43%)</title><rect x="646" y="244" width="5" height="15" fill="rgb(229,197,37)"/><text x="649.00" y="254.50"></text></g><g><title>0x7f38ddd4a357 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="651" y="196" width="5" height="15" fill="rgb(250,69,45)"/><text x="654.00" y="206.50"></text></g><g><title>0x7f38ddd4a4c8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="656" y="196" width="10" height="15" fill="rgb(206,67,49)"/><text x="659.00" y="206.50"></text></g><g><title>0x7f38ddd2fe39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="656" y="212" width="10" height="15" fill="rgb(227,205,4)"/><text x="659.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.87%)</title><rect x="656" y="228" width="10" height="15" fill="rgb(220,124,18)"/><text x="659.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.87%)</title><rect x="656" y="244" width="10" height="15" fill="rgb(252,128,28)"/><text x="659.00" y="254.50"></text></g><g><title>dense_to_libsvm (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="666" y="228" width="5" height="15" fill="rgb(228,59,9)"/><text x="669.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.43%)</title><rect x="666" y="244" width="5" height="15" fill="rgb(242,222,21)"/><text x="669.00" y="254.50"></text></g><g><title>0x7f3903258f2e (libc-2.29.so) (1 samples, 0.43%)</title><rect x="666" y="260" width="5" height="15" fill="rgb(238,48,19)"/><text x="669.00" y="270.50"></text></g><g><title>0x7f3903257bc0 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="671" y="244" width="5" height="15" fill="rgb(254,3,37)"/><text x="674.00" y="254.50"></text></g><g><title>0x7f3903429c0c (libm-2.29.so) (1 samples, 0.43%)</title><rect x="687" y="276" width="5" height="15" fill="rgb(223,184,17)"/><text x="690.00" y="286.50"></text></g><g><title>0x7f3903429c3a (libm-2.29.so) (1 samples, 0.43%)</title><rect x="692" y="276" width="5" height="15" fill="rgb(223,26,15)"/><text x="695.00" y="286.50"></text></g><g><title>exp (libm-2.29.so) (3 samples, 1.30%)</title><rect x="687" y="260" width="15" height="15" fill="rgb(205,103,34)"/><text x="690.00" y="270.50"></text></g><g><title>0x7f3903429c5a (libm-2.29.so) (1 samples, 0.43%)</title><rect x="697" y="276" width="5" height="15" fill="rgb(208,136,34)"/><text x="700.00" y="286.50"></text></g><g><title>0x7f38ddd4a4f1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (14 samples, 6.09%)</title><rect x="666" y="196" width="72" height="15" fill="rgb(235,36,29)"/><text x="669.00" y="206.50">0x7f38dd..</text></g><g><title>copy_predict (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (14 samples, 6.09%)</title><rect x="666" y="212" width="72" height="15" fill="rgb(207,132,35)"/><text x="669.00" y="222.50">copy_pre..</text></g><g><title>svm_predict (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (13 samples, 5.65%)</title><rect x="671" y="228" width="67" height="15" fill="rgb(213,67,48)"/><text x="674.00" y="238.50">svm_pre..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (12 samples, 5.22%)</title><rect x="676" y="244" width="62" height="15" fill="rgb(228,180,37)"/><text x="679.00" y="254.50">svm_pr..</text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 3.04%)</title><rect x="702" y="260" width="36" height="15" fill="rgb(225,178,39)"/><text x="705.00" y="270.50">svm..</text></g><g><title>0x7f38ddd4a67a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="738" y="196" width="5" height="15" fill="rgb(244,101,9)"/><text x="741.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.87%)</title><rect x="743" y="260" width="10" height="15" fill="rgb(244,58,49)"/><text x="746.00" y="270.50"></text></g><g><title>0x7f38ddd4acec (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.30%)</title><rect x="743" y="196" width="16" height="15" fill="rgb(241,41,6)"/><text x="746.00" y="206.50"></text></g><g><title>0x7f38ddd299a1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.30%)</title><rect x="743" y="212" width="16" height="15" fill="rgb(241,32,24)"/><text x="746.00" y="222.50"></text></g><g><title>0x7f38ddd2dfdf (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.30%)</title><rect x="743" y="228" width="16" height="15" fill="rgb(231,145,42)"/><text x="746.00" y="238.50"></text></g><g><title>array_empty (multiarraymodule.c) (3 samples, 1.30%)</title><rect x="743" y="244" width="16" height="15" fill="rgb(215,11,21)"/><text x="746.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.43%)</title><rect x="753" y="260" width="6" height="15" fill="rgb(234,125,50)"/><text x="756.00" y="270.50"></text></g><g><title>PyArray_Empty (ctors.c) (1 samples, 0.43%)</title><rect x="753" y="276" width="6" height="15" fill="rgb(254,116,28)"/><text x="756.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.43%)</title><rect x="753" y="292" width="6" height="15" fill="rgb(238,167,53)"/><text x="756.00" y="302.50"></text></g><g><title>0x7f3903257b21 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="759" y="260" width="5" height="15" fill="rgb(206,224,10)"/><text x="762.00" y="270.50"></text></g><g><title>0x7f38ddd4c1dd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (39 samples, 16.96%)</title><rect x="569" y="180" width="200" height="15" fill="rgb(242,102,8)"/><text x="572.00" y="190.50">0x7f38ddd4c1dd (sklearn/sv..</text></g><g><title>0x7f38ddd4b26c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="759" y="196" width="10" height="15" fill="rgb(236,47,9)"/><text x="762.00" y="206.50"></text></g><g><title>0x7f38ddd2f5ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="759" y="212" width="10" height="15" fill="rgb(250,10,31)"/><text x="762.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.87%)</title><rect x="759" y="228" width="10" height="15" fill="rgb(229,79,23)"/><text x="762.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.87%)</title><rect x="759" y="244" width="10" height="15" fill="rgb(254,1,37)"/><text x="762.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.43%)</title><rect x="764" y="260" width="5" height="15" fill="rgb(224,17,17)"/><text x="767.00" y="270.50"></text></g><g><title>0x7f3903258dc2 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="764" y="276" width="5" height="15" fill="rgb(207,210,11)"/><text x="767.00" y="286.50"></text></g><g><title>0x7f38ddd4d005 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="769" y="180" width="5" height="15" fill="rgb(229,19,17)"/><text x="772.00" y="190.50"></text></g><g><title>_dense_predict (sklearn/svm/_base.py) (49 samples, 21.30%)</title><rect x="528" y="164" width="251" height="15" fill="rgb(242,206,44)"/><text x="531.00" y="174.50">_dense_predict (sklearn/svm/_base..</text></g><g><title>_compute_kernel (sklearn/svm/_base.py) (1 samples, 0.43%)</title><rect x="774" y="180" width="5" height="15" fill="rgb(212,71,31)"/><text x="777.00" y="190.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 1.30%)</title><rect x="830" y="196" width="16" height="15" fill="rgb(247,51,20)"/><text x="833.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (4 samples, 1.74%)</title><rect x="846" y="196" width="20" height="15" fill="rgb(253,32,6)"/><text x="849.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.87%)</title><rect x="866" y="196" width="11" height="15" fill="rgb(248,116,50)"/><text x="869.00" y="206.50"></text></g><g><title>0x7f390333514d (libc-2.29.so) (1 samples, 0.43%)</title><rect x="907" y="212" width="5" height="15" fill="rgb(212,125,9)"/><text x="910.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="912" y="212" width="11" height="15" fill="rgb(229,34,39)"/><text x="915.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (10 samples, 4.35%)</title><rect x="877" y="196" width="51" height="15" fill="rgb(229,88,34)"/><text x="880.00" y="206.50">_asse..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.43%)</title><rect x="923" y="212" width="5" height="15" fill="rgb(225,94,51)"/><text x="926.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.87%)</title><rect x="928" y="196" width="10" height="15" fill="rgb(243,118,25)"/><text x="931.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (2 samples, 0.87%)</title><rect x="979" y="212" width="10" height="15" fill="rgb(229,6,5)"/><text x="982.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (15 samples, 6.52%)</title><rect x="938" y="196" width="77" height="15" fill="rgb(210,107,39)"/><text x="941.00" y="206.50">_num_sam..</text></g><g><title>__instancecheck__ (abc.py) (5 samples, 2.17%)</title><rect x="989" y="212" width="26" height="15" fill="rgb(232,11,25)"/><text x="992.00" y="222.50">_..</text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.87%)</title><rect x="1005" y="228" width="10" height="15" fill="rgb(252,51,13)"/><text x="1008.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (2 samples, 0.87%)</title><rect x="1015" y="196" width="10" height="15" fill="rgb(223,85,31)"/><text x="1018.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.43%)</title><rect x="1020" y="212" width="5" height="15" fill="rgb(227,76,32)"/><text x="1023.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.43%)</title><rect x="1025" y="228" width="5" height="15" fill="rgb(213,216,14)"/><text x="1028.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.43%)</title><rect x="1025" y="244" width="5" height="15" fill="rgb(225,63,43)"/><text x="1028.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.43%)</title><rect x="1025" y="260" width="5" height="15" fill="rgb(219,213,30)"/><text x="1028.00" y="270.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.43%)</title><rect x="1025" y="276" width="5" height="15" fill="rgb(213,226,53)"/><text x="1028.00" y="286.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.43%)</title><rect x="1025" y="292" width="5" height="15" fill="rgb(235,221,17)"/><text x="1028.00" y="302.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.87%)</title><rect x="1025" y="196" width="11" height="15" fill="rgb(224,1,25)"/><text x="1028.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.87%)</title><rect x="1025" y="212" width="11" height="15" fill="rgb(236,32,48)"/><text x="1028.00" y="222.50"></text></g><g><title>PyArray_OrderConverter (conversion_utils.c) (1 samples, 0.43%)</title><rect x="1030" y="228" width="6" height="15" fill="rgb(223,56,6)"/><text x="1033.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (54 samples, 23.48%)</title><rect x="784" y="180" width="277" height="15" fill="rgb(251,118,39)"/><text x="787.00" y="190.50">check_array (sklearn/utils/validation..</text></g><g><title>simplefilter (warnings.py) (5 samples, 2.17%)</title><rect x="1036" y="196" width="25" height="15" fill="rgb(219,129,37)"/><text x="1039.00" y="206.50">s..</text></g><g><title>_add_filter (warnings.py) (5 samples, 2.17%)</title><rect x="1036" y="212" width="25" height="15" fill="rgb(237,198,46)"/><text x="1039.00" y="222.50">_..</text></g><g><title>0x7f39032781d1 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="1082" y="196" width="5" height="15" fill="rgb(218,53,26)"/><text x="1085.00" y="206.50"></text></g><g><title>0x7f3903278120 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="1143" y="212" width="5" height="15" fill="rgb(219,134,31)"/><text x="1146.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 1.30%)</title><rect x="1148" y="212" width="16" height="15" fill="rgb(247,49,37)"/><text x="1151.00" y="222.50"></text></g><g><title>all (230 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(250,38,18)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVR_rbf_b_reg_kernelrbf_1_50_12_float_.py) (230 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(229,198,48)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVR_rbf_b_reg_kernelrbf_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_SVR_rbf_b_reg_kernelrbf_1_50_12_float_.py) (136 samples, 59.13%)</title><rect x="492" y="68" width="698" height="15" fill="rgb(217,43,36)"/><text x="495.00" y="78.50">profile_skl (bench_SVR_rbf_b_reg_kernelrbf_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_SVR_rbf_b_reg_kernelrbf_1_50_12_float_.py) (136 samples, 59.13%)</title><rect x="492" y="84" width="698" height="15" fill="rgb(207,122,15)"/><text x="495.00" y="94.50">setup_profile (bench_SVR_rbf_b_reg_kernelrbf_1_50_12_float_.py)</text></g><g><title>profile (bench_SVR_rbf_b_reg_kernelrbf_1_50_12_float_.py) (136 samples, 59.13%)</title><rect x="492" y="100" width="698" height="15" fill="rgb(237,191,2)"/><text x="495.00" y="110.50">profile (bench_SVR_rbf_b_reg_kernelrbf_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (134 samples, 58.26%)</title><rect x="502" y="116" width="688" height="15" fill="rgb(244,209,29)"/><text x="505.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (132 samples, 57.39%)</title><rect x="512" y="132" width="678" height="15" fill="rgb(244,115,44)"/><text x="515.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/svm/_base.py) (130 samples, 56.52%)</title><rect x="523" y="148" width="667" height="15" fill="rgb(215,48,39)"/><text x="526.00" y="158.50">predict (sklearn/svm/_base.py)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (80 samples, 34.78%)</title><rect x="779" y="164" width="411" height="15" fill="rgb(235,10,28)"/><text x="782.00" y="174.50">_validate_for_predict (sklearn/svm/_base.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (25 samples, 10.87%)</title><rect x="1061" y="180" width="129" height="15" fill="rgb(242,113,38)"/><text x="1064.00" y="190.50">check_is_fitted ..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (20 samples, 8.70%)</title><rect x="1087" y="196" width="103" height="15" fill="rgb(221,154,50)"/><text x="1090.00" y="206.50">&lt;listcomp&gt; (..</text></g><g><title>unicode_startswith (python3.7) (5 samples, 2.17%)</title><rect x="1164" y="212" width="26" height="15" fill="rgb(234,87,12)"/><text x="1167.00" y="222.50">u..</text></g></g></svg>