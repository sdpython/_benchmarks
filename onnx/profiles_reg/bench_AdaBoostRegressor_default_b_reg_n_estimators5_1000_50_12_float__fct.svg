<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2182" onload="init(evt)" viewBox="0 0 1200 2182" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2182" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2165.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2165.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(214,0,38)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(205,175,45)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(208,28,0)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(238,36,33)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(251,31,16)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(236,34,4)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(242,149,36)"/><text x="13.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(208,112,41)"/><text x="13.00" y="990.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.13%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(239,114,15)"/><text x="13.00" y="1006.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="11" y="948" width="1" height="15" fill="rgb(228,37,41)"/><text x="14.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="11" y="964" width="1" height="15" fill="rgb(251,138,7)"/><text x="14.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="11" y="980" width="1" height="15" fill="rgb(213,34,29)"/><text x="14.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.13%)</title><rect x="11" y="996" width="1" height="15" fill="rgb(241,33,38)"/><text x="14.00" y="1006.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.13%)</title><rect x="11" y="1012" width="1" height="15" fill="rgb(212,211,10)"/><text x="14.00" y="1022.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.25%)</title><rect x="11" y="868" width="3" height="15" fill="rgb(226,54,27)"/><text x="14.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.25%)</title><rect x="11" y="884" width="3" height="15" fill="rgb(206,221,32)"/><text x="14.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.25%)</title><rect x="11" y="900" width="3" height="15" fill="rgb(231,83,25)"/><text x="14.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.25%)</title><rect x="11" y="916" width="3" height="15" fill="rgb(243,126,54)"/><text x="14.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.25%)</title><rect x="11" y="932" width="3" height="15" fill="rgb(242,76,49)"/><text x="14.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.13%)</title><rect x="12" y="948" width="2" height="15" fill="rgb(237,199,23)"/><text x="15.00" y="958.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.13%)</title><rect x="12" y="964" width="2" height="15" fill="rgb(208,222,39)"/><text x="15.00" y="974.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.13%)</title><rect x="12" y="980" width="2" height="15" fill="rgb(219,1,12)"/><text x="15.00" y="990.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="14" y="900" width="1" height="15" fill="rgb(233,178,44)"/><text x="17.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="14" y="916" width="1" height="15" fill="rgb(211,185,35)"/><text x="17.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="14" y="932" width="1" height="15" fill="rgb(217,14,14)"/><text x="17.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.13%)</title><rect x="14" y="948" width="1" height="15" fill="rgb(250,210,15)"/><text x="17.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.13%)</title><rect x="14" y="964" width="1" height="15" fill="rgb(221,45,52)"/><text x="17.00" y="974.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 0.63%)</title><rect x="10" y="836" width="7" height="15" fill="rgb(247,220,32)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 0.63%)</title><rect x="10" y="852" width="7" height="15" fill="rgb(224,141,47)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.25%)</title><rect x="14" y="868" width="3" height="15" fill="rgb(220,77,53)"/><text x="17.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.25%)</title><rect x="14" y="884" width="3" height="15" fill="rgb(217,140,13)"/><text x="17.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="15" y="900" width="2" height="15" fill="rgb(207,75,20)"/><text x="18.00" y="910.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.13%)</title><rect x="17" y="996" width="1" height="15" fill="rgb(253,181,3)"/><text x="20.00" y="1006.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.13%)</title><rect x="17" y="1012" width="1" height="15" fill="rgb(213,224,49)"/><text x="20.00" y="1022.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.13%)</title><rect x="17" y="1028" width="1" height="15" fill="rgb(242,100,12)"/><text x="20.00" y="1038.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.13%)</title><rect x="17" y="1044" width="1" height="15" fill="rgb(211,136,20)"/><text x="20.00" y="1054.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (7 samples, 0.89%)</title><rect x="10" y="292" width="10" height="15" fill="rgb(238,100,47)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="308" width="10" height="15" fill="rgb(217,157,34)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="324" width="10" height="15" fill="rgb(223,15,50)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="340" width="10" height="15" fill="rgb(206,211,34)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.89%)</title><rect x="10" y="356" width="10" height="15" fill="rgb(251,147,17)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="372" width="10" height="15" fill="rgb(247,140,9)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (7 samples, 0.89%)</title><rect x="10" y="388" width="10" height="15" fill="rgb(249,213,50)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="404" width="10" height="15" fill="rgb(214,8,30)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="420" width="10" height="15" fill="rgb(254,229,17)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="436" width="10" height="15" fill="rgb(244,153,26)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.89%)</title><rect x="10" y="452" width="10" height="15" fill="rgb(206,213,47)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="468" width="10" height="15" fill="rgb(217,31,18)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (7 samples, 0.89%)</title><rect x="10" y="484" width="10" height="15" fill="rgb(226,30,20)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="500" width="10" height="15" fill="rgb(208,187,16)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="516" width="10" height="15" fill="rgb(228,199,8)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="532" width="10" height="15" fill="rgb(220,193,28)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.89%)</title><rect x="10" y="548" width="10" height="15" fill="rgb(248,219,53)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="564" width="10" height="15" fill="rgb(238,88,27)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (7 samples, 0.89%)</title><rect x="10" y="580" width="10" height="15" fill="rgb(235,204,49)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="596" width="10" height="15" fill="rgb(227,204,32)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="612" width="10" height="15" fill="rgb(220,219,45)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="628" width="10" height="15" fill="rgb(222,133,20)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="644" width="10" height="15" fill="rgb(229,229,27)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="660" width="10" height="15" fill="rgb(213,226,36)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="676" width="10" height="15" fill="rgb(216,200,4)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.89%)</title><rect x="10" y="692" width="10" height="15" fill="rgb(215,141,20)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="708" width="10" height="15" fill="rgb(221,14,14)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (7 samples, 0.89%)</title><rect x="10" y="724" width="10" height="15" fill="rgb(248,51,26)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="740" width="10" height="15" fill="rgb(208,178,22)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="756" width="10" height="15" fill="rgb(212,213,33)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="772" width="10" height="15" fill="rgb(210,127,12)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.89%)</title><rect x="10" y="788" width="10" height="15" fill="rgb(227,201,37)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.89%)</title><rect x="10" y="804" width="10" height="15" fill="rgb(252,146,2)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (7 samples, 0.89%)</title><rect x="10" y="820" width="10" height="15" fill="rgb(245,192,8)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="17" y="836" width="3" height="15" fill="rgb(213,96,35)"/><text x="20.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="17" y="852" width="3" height="15" fill="rgb(248,154,25)"/><text x="20.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="17" y="868" width="3" height="15" fill="rgb(212,171,4)"/><text x="20.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="17" y="884" width="3" height="15" fill="rgb(216,138,3)"/><text x="20.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="17" y="900" width="3" height="15" fill="rgb(246,5,20)"/><text x="20.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py) (2 samples, 0.25%)</title><rect x="17" y="916" width="3" height="15" fill="rgb(230,32,7)"/><text x="20.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py) (2 samples, 0.25%)</title><rect x="17" y="932" width="3" height="15" fill="rgb(228,139,42)"/><text x="20.00" y="942.50"></text></g><g><title>compile (re.py) (2 samples, 0.25%)</title><rect x="17" y="948" width="3" height="15" fill="rgb(246,22,1)"/><text x="20.00" y="958.50"></text></g><g><title>_compile (re.py) (2 samples, 0.25%)</title><rect x="17" y="964" width="3" height="15" fill="rgb(237,93,13)"/><text x="20.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (2 samples, 0.25%)</title><rect x="17" y="980" width="3" height="15" fill="rgb(220,206,11)"/><text x="20.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.13%)</title><rect x="18" y="996" width="2" height="15" fill="rgb(206,219,21)"/><text x="21.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.13%)</title><rect x="18" y="1012" width="2" height="15" fill="rgb(232,128,14)"/><text x="21.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.13%)</title><rect x="18" y="1028" width="2" height="15" fill="rgb(215,13,5)"/><text x="21.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.13%)</title><rect x="18" y="1044" width="2" height="15" fill="rgb(253,76,23)"/><text x="21.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.13%)</title><rect x="18" y="1060" width="2" height="15" fill="rgb(246,199,7)"/><text x="21.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.13%)</title><rect x="18" y="1076" width="2" height="15" fill="rgb(248,198,49)"/><text x="21.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.13%)</title><rect x="18" y="1092" width="2" height="15" fill="rgb(232,123,0)"/><text x="21.00" y="1102.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.13%)</title><rect x="18" y="1108" width="2" height="15" fill="rgb(229,82,9)"/><text x="21.00" y="1118.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.13%)</title><rect x="18" y="1124" width="2" height="15" fill="rgb(211,172,50)"/><text x="21.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="532" width="1" height="15" fill="rgb(236,13,4)"/><text x="23.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="548" width="1" height="15" fill="rgb(227,29,50)"/><text x="23.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="564" width="1" height="15" fill="rgb(213,85,32)"/><text x="23.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="580" width="1" height="15" fill="rgb(224,224,9)"/><text x="23.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="20" y="596" width="1" height="15" fill="rgb(211,54,37)"/><text x="23.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="612" width="1" height="15" fill="rgb(238,80,13)"/><text x="23.00" y="622.50"></text></g><g><title>&lt;module&gt; (scipy/__init__.py) (1 samples, 0.13%)</title><rect x="20" y="628" width="1" height="15" fill="rgb(208,214,13)"/><text x="23.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="644" width="1" height="15" fill="rgb(251,130,26)"/><text x="23.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="660" width="1" height="15" fill="rgb(245,99,49)"/><text x="23.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="676" width="1" height="15" fill="rgb(240,101,14)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="692" width="1" height="15" fill="rgb(217,141,12)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="708" width="1" height="15" fill="rgb(245,84,43)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="724" width="1" height="15" fill="rgb(211,37,12)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="20" y="740" width="1" height="15" fill="rgb(222,67,7)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="756" width="1" height="15" fill="rgb(225,225,44)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/_lib/__init__.py) (1 samples, 0.13%)</title><rect x="20" y="772" width="1" height="15" fill="rgb(229,3,44)"/><text x="23.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="788" width="1" height="15" fill="rgb(229,137,0)"/><text x="23.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="804" width="1" height="15" fill="rgb(254,145,17)"/><text x="23.00" y="814.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="820" width="1" height="15" fill="rgb(213,31,34)"/><text x="23.00" y="830.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="20" y="836" width="1" height="15" fill="rgb(209,228,4)"/><text x="23.00" y="846.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="20" y="852" width="1" height="15" fill="rgb(205,33,26)"/><text x="23.00" y="862.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="20" y="868" width="1" height="15" fill="rgb(217,95,37)"/><text x="23.00" y="878.50"></text></g><g><title>_fill_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="20" y="884" width="1" height="15" fill="rgb(218,176,16)"/><text x="23.00" y="894.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.13%)</title><rect x="20" y="900" width="1" height="15" fill="rgb(249,96,47)"/><text x="23.00" y="910.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="20" y="916" width="1" height="15" fill="rgb(244,96,53)"/><text x="23.00" y="926.50"></text></g><g><title>0x7ff881e2b237 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="20" y="932" width="1" height="15" fill="rgb(248,224,7)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="500" width="3" height="15" fill="rgb(247,75,27)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="516" width="3" height="15" fill="rgb(226,146,50)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="532" width="2" height="15" fill="rgb(226,129,11)"/><text x="24.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="548" width="2" height="15" fill="rgb(244,218,41)"/><text x="24.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="564" width="2" height="15" fill="rgb(240,70,20)"/><text x="24.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.13%)</title><rect x="21" y="580" width="2" height="15" fill="rgb(228,115,50)"/><text x="24.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="596" width="2" height="15" fill="rgb(206,0,23)"/><text x="24.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="612" width="2" height="15" fill="rgb(236,222,34)"/><text x="24.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="628" width="2" height="15" fill="rgb(232,80,38)"/><text x="24.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="644" width="2" height="15" fill="rgb(212,176,7)"/><text x="24.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="660" width="2" height="15" fill="rgb(229,59,43)"/><text x="24.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.13%)</title><rect x="21" y="676" width="2" height="15" fill="rgb(219,199,14)"/><text x="24.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="692" width="2" height="15" fill="rgb(226,221,11)"/><text x="24.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="708" width="2" height="15" fill="rgb(209,166,46)"/><text x="24.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="724" width="2" height="15" fill="rgb(230,142,40)"/><text x="24.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="740" width="2" height="15" fill="rgb(229,127,46)"/><text x="24.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="756" width="2" height="15" fill="rgb(216,79,16)"/><text x="24.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.13%)</title><rect x="21" y="772" width="2" height="15" fill="rgb(245,90,38)"/><text x="24.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="788" width="2" height="15" fill="rgb(246,184,3)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="804" width="2" height="15" fill="rgb(233,169,32)"/><text x="24.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="820" width="2" height="15" fill="rgb(219,155,20)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="836" width="2" height="15" fill="rgb(211,209,48)"/><text x="24.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="852" width="2" height="15" fill="rgb(225,204,13)"/><text x="24.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="868" width="2" height="15" fill="rgb(221,103,50)"/><text x="24.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="884" width="2" height="15" fill="rgb(239,11,4)"/><text x="24.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.13%)</title><rect x="21" y="900" width="2" height="15" fill="rgb(231,77,22)"/><text x="24.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="916" width="2" height="15" fill="rgb(212,130,32)"/><text x="24.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="932" width="2" height="15" fill="rgb(244,131,38)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="948" width="2" height="15" fill="rgb(245,185,41)"/><text x="24.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="964" width="2" height="15" fill="rgb(243,66,18)"/><text x="24.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="980" width="2" height="15" fill="rgb(220,48,26)"/><text x="24.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="996" width="2" height="15" fill="rgb(231,98,31)"/><text x="24.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1012" width="2" height="15" fill="rgb(231,86,48)"/><text x="24.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.13%)</title><rect x="21" y="1028" width="2" height="15" fill="rgb(206,163,8)"/><text x="24.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.13%)</title><rect x="21" y="1044" width="2" height="15" fill="rgb(237,198,9)"/><text x="24.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.27%)</title><rect x="10" y="196" width="14" height="15" fill="rgb(225,32,21)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.27%)</title><rect x="10" y="212" width="14" height="15" fill="rgb(228,91,0)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.27%)</title><rect x="10" y="228" width="14" height="15" fill="rgb(246,96,0)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.27%)</title><rect x="10" y="244" width="14" height="15" fill="rgb(240,135,28)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.27%)</title><rect x="10" y="260" width="14" height="15" fill="rgb(223,125,1)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.27%)</title><rect x="10" y="276" width="14" height="15" fill="rgb(212,152,25)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.38%)</title><rect x="20" y="292" width="4" height="15" fill="rgb(249,194,51)"/><text x="23.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="20" y="308" width="4" height="15" fill="rgb(237,60,27)"/><text x="23.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="20" y="324" width="4" height="15" fill="rgb(248,42,30)"/><text x="23.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="20" y="340" width="4" height="15" fill="rgb(208,221,35)"/><text x="23.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.38%)</title><rect x="20" y="356" width="4" height="15" fill="rgb(242,104,31)"/><text x="23.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="20" y="372" width="4" height="15" fill="rgb(246,4,45)"/><text x="23.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.38%)</title><rect x="20" y="388" width="4" height="15" fill="rgb(247,165,22)"/><text x="23.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="20" y="404" width="4" height="15" fill="rgb(230,176,34)"/><text x="23.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="20" y="420" width="4" height="15" fill="rgb(241,155,4)"/><text x="23.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="20" y="436" width="4" height="15" fill="rgb(210,38,54)"/><text x="23.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.38%)</title><rect x="20" y="452" width="4" height="15" fill="rgb(207,141,49)"/><text x="23.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="20" y="468" width="4" height="15" fill="rgb(213,57,4)"/><text x="23.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.38%)</title><rect x="20" y="484" width="4" height="15" fill="rgb(243,147,10)"/><text x="23.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="500" width="1" height="15" fill="rgb(251,61,4)"/><text x="26.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="516" width="1" height="15" fill="rgb(250,47,7)"/><text x="26.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="532" width="1" height="15" fill="rgb(206,139,35)"/><text x="26.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="548" width="1" height="15" fill="rgb(250,58,49)"/><text x="26.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="564" width="1" height="15" fill="rgb(224,204,20)"/><text x="26.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="23" y="580" width="1" height="15" fill="rgb(244,197,11)"/><text x="26.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="596" width="1" height="15" fill="rgb(241,227,9)"/><text x="26.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.13%)</title><rect x="23" y="612" width="1" height="15" fill="rgb(212,117,7)"/><text x="26.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="628" width="1" height="15" fill="rgb(248,133,22)"/><text x="26.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="644" width="1" height="15" fill="rgb(215,222,32)"/><text x="26.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="660" width="1" height="15" fill="rgb(216,149,38)"/><text x="26.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="23" y="676" width="1" height="15" fill="rgb(251,184,15)"/><text x="26.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="692" width="1" height="15" fill="rgb(246,125,13)"/><text x="26.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.13%)</title><rect x="23" y="708" width="1" height="15" fill="rgb(250,32,50)"/><text x="26.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="724" width="1" height="15" fill="rgb(209,210,52)"/><text x="26.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="740" width="1" height="15" fill="rgb(216,107,21)"/><text x="26.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="756" width="1" height="15" fill="rgb(231,55,21)"/><text x="26.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="23" y="772" width="1" height="15" fill="rgb(243,212,20)"/><text x="26.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="788" width="1" height="15" fill="rgb(227,148,29)"/><text x="26.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.13%)</title><rect x="23" y="804" width="1" height="15" fill="rgb(208,216,48)"/><text x="26.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="820" width="1" height="15" fill="rgb(205,93,22)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="836" width="1" height="15" fill="rgb(248,23,26)"/><text x="26.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="852" width="1" height="15" fill="rgb(234,34,13)"/><text x="26.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="23" y="868" width="1" height="15" fill="rgb(226,209,36)"/><text x="26.00" y="878.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="23" y="884" width="1" height="15" fill="rgb(230,24,43)"/><text x="26.00" y="894.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="23" y="900" width="1" height="15" fill="rgb(222,172,8)"/><text x="26.00" y="910.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="23" y="916" width="1" height="15" fill="rgb(253,114,32)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1124" width="2" height="15" fill="rgb(209,95,8)"/><text x="27.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1140" width="2" height="15" fill="rgb(234,147,12)"/><text x="27.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1156" width="2" height="15" fill="rgb(243,12,54)"/><text x="27.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="24" y="1172" width="2" height="15" fill="rgb(221,164,36)"/><text x="27.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1188" width="2" height="15" fill="rgb(208,1,54)"/><text x="27.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.13%)</title><rect x="24" y="1204" width="2" height="15" fill="rgb(254,160,37)"/><text x="27.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1220" width="2" height="15" fill="rgb(248,118,47)"/><text x="27.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1236" width="2" height="15" fill="rgb(220,81,6)"/><text x="27.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1252" width="2" height="15" fill="rgb(252,228,1)"/><text x="27.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="24" y="1268" width="2" height="15" fill="rgb(238,10,27)"/><text x="27.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1284" width="2" height="15" fill="rgb(249,27,19)"/><text x="27.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.13%)</title><rect x="24" y="1300" width="2" height="15" fill="rgb(218,155,53)"/><text x="27.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.13%)</title><rect x="24" y="1316" width="2" height="15" fill="rgb(215,50,8)"/><text x="27.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.13%)</title><rect x="24" y="1332" width="2" height="15" fill="rgb(208,1,18)"/><text x="27.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.13%)</title><rect x="24" y="1348" width="2" height="15" fill="rgb(253,195,40)"/><text x="27.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.13%)</title><rect x="24" y="1364" width="2" height="15" fill="rgb(220,162,40)"/><text x="27.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.13%)</title><rect x="24" y="1380" width="2" height="15" fill="rgb(243,44,41)"/><text x="27.00" y="1390.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1300" width="1" height="15" fill="rgb(215,63,22)"/><text x="29.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1476" width="2" height="15" fill="rgb(210,83,49)"/><text x="30.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1492" width="2" height="15" fill="rgb(235,219,42)"/><text x="30.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1508" width="2" height="15" fill="rgb(207,96,41)"/><text x="30.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="27" y="1524" width="2" height="15" fill="rgb(207,36,16)"/><text x="30.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1540" width="2" height="15" fill="rgb(214,170,37)"/><text x="30.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.13%)</title><rect x="27" y="1556" width="2" height="15" fill="rgb(221,194,52)"/><text x="30.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.13%)</title><rect x="27" y="1572" width="2" height="15" fill="rgb(245,144,41)"/><text x="30.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1588" width="2" height="15" fill="rgb(249,159,43)"/><text x="30.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1604" width="2" height="15" fill="rgb(216,140,24)"/><text x="30.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1620" width="2" height="15" fill="rgb(224,111,21)"/><text x="30.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="27" y="1636" width="2" height="15" fill="rgb(228,95,0)"/><text x="30.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1652" width="2" height="15" fill="rgb(237,126,51)"/><text x="30.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.13%)</title><rect x="27" y="1668" width="2" height="15" fill="rgb(236,228,7)"/><text x="30.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py) (1 samples, 0.13%)</title><rect x="27" y="1684" width="2" height="15" fill="rgb(221,177,41)"/><text x="30.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1700" width="2" height="15" fill="rgb(219,179,9)"/><text x="30.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1716" width="2" height="15" fill="rgb(226,35,24)"/><text x="30.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1732" width="2" height="15" fill="rgb(249,216,22)"/><text x="30.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="27" y="1748" width="2" height="15" fill="rgb(207,130,36)"/><text x="30.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1764" width="2" height="15" fill="rgb(234,76,3)"/><text x="30.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py) (1 samples, 0.13%)</title><rect x="27" y="1780" width="2" height="15" fill="rgb(206,152,43)"/><text x="30.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1796" width="2" height="15" fill="rgb(239,167,30)"/><text x="30.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1812" width="2" height="15" fill="rgb(253,190,35)"/><text x="30.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1828" width="2" height="15" fill="rgb(220,118,9)"/><text x="30.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="27" y="1844" width="2" height="15" fill="rgb(241,136,34)"/><text x="30.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1860" width="2" height="15" fill="rgb(241,226,15)"/><text x="30.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py) (1 samples, 0.13%)</title><rect x="27" y="1876" width="2" height="15" fill="rgb(223,101,23)"/><text x="30.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1892" width="2" height="15" fill="rgb(221,122,12)"/><text x="30.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1908" width="2" height="15" fill="rgb(216,74,43)"/><text x="30.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1924" width="2" height="15" fill="rgb(235,133,12)"/><text x="30.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="27" y="1940" width="2" height="15" fill="rgb(244,117,54)"/><text x="30.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1956" width="2" height="15" fill="rgb(251,6,19)"/><text x="30.00" y="1966.50"></text></g><g><title>&lt;module&gt; (asyncio/base_events.py) (1 samples, 0.13%)</title><rect x="27" y="1972" width="2" height="15" fill="rgb(224,113,33)"/><text x="30.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1988" width="2" height="15" fill="rgb(223,103,7)"/><text x="30.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="2004" width="2" height="15" fill="rgb(253,50,53)"/><text x="30.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="2020" width="2" height="15" fill="rgb(242,66,48)"/><text x="30.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="2036" width="2" height="15" fill="rgb(215,108,41)"/><text x="30.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="2052" width="2" height="15" fill="rgb(210,50,37)"/><text x="30.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="27" y="2068" width="2" height="15" fill="rgb(246,111,42)"/><text x="30.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="2084" width="2" height="15" fill="rgb(213,191,20)"/><text x="30.00" y="2094.50"></text></g><g><title>&lt;module&gt; (asyncio/futures.py) (1 samples, 0.13%)</title><rect x="27" y="2100" width="2" height="15" fill="rgb(228,187,21)"/><text x="30.00" y="2110.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="2116" width="2" height="15" fill="rgb(235,36,43)"/><text x="30.00" y="2126.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="2132" width="2" height="15" fill="rgb(242,219,16)"/><text x="30.00" y="2142.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.13%)</title><rect x="29" y="1508" width="1" height="15" fill="rgb(228,44,11)"/><text x="32.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="484" width="8" height="15" fill="rgb(247,64,52)"/><text x="27.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="500" width="8" height="15" fill="rgb(216,55,28)"/><text x="27.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="516" width="8" height="15" fill="rgb(217,205,44)"/><text x="27.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="532" width="8" height="15" fill="rgb(238,167,10)"/><text x="27.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.63%)</title><rect x="24" y="548" width="8" height="15" fill="rgb(221,75,46)"/><text x="27.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="564" width="8" height="15" fill="rgb(239,162,53)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (5 samples, 0.63%)</title><rect x="24" y="580" width="8" height="15" fill="rgb(208,73,41)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="596" width="8" height="15" fill="rgb(230,7,24)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="612" width="8" height="15" fill="rgb(234,158,47)"/><text x="27.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="628" width="8" height="15" fill="rgb(214,116,11)"/><text x="27.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.63%)</title><rect x="24" y="644" width="8" height="15" fill="rgb(222,139,21)"/><text x="27.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="660" width="8" height="15" fill="rgb(248,174,49)"/><text x="27.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (5 samples, 0.63%)</title><rect x="24" y="676" width="8" height="15" fill="rgb(228,55,21)"/><text x="27.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="692" width="8" height="15" fill="rgb(251,215,3)"/><text x="27.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="708" width="8" height="15" fill="rgb(209,26,49)"/><text x="27.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="724" width="8" height="15" fill="rgb(228,206,54)"/><text x="27.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.63%)</title><rect x="24" y="740" width="8" height="15" fill="rgb(226,119,46)"/><text x="27.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="756" width="8" height="15" fill="rgb(226,222,53)"/><text x="27.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (5 samples, 0.63%)</title><rect x="24" y="772" width="8" height="15" fill="rgb(248,142,32)"/><text x="27.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="788" width="8" height="15" fill="rgb(250,5,14)"/><text x="27.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="804" width="8" height="15" fill="rgb(240,193,27)"/><text x="27.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="820" width="8" height="15" fill="rgb(212,227,22)"/><text x="27.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.63%)</title><rect x="24" y="836" width="8" height="15" fill="rgb(245,41,21)"/><text x="27.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="852" width="8" height="15" fill="rgb(213,176,4)"/><text x="27.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (5 samples, 0.63%)</title><rect x="24" y="868" width="8" height="15" fill="rgb(206,36,49)"/><text x="27.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="884" width="8" height="15" fill="rgb(254,183,41)"/><text x="27.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="900" width="8" height="15" fill="rgb(236,154,51)"/><text x="27.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="916" width="8" height="15" fill="rgb(225,36,5)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="932" width="8" height="15" fill="rgb(212,50,25)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="948" width="8" height="15" fill="rgb(237,157,25)"/><text x="27.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="964" width="8" height="15" fill="rgb(233,16,25)"/><text x="27.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.63%)</title><rect x="24" y="980" width="8" height="15" fill="rgb(244,143,35)"/><text x="27.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="996" width="8" height="15" fill="rgb(234,142,0)"/><text x="27.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (5 samples, 0.63%)</title><rect x="24" y="1012" width="8" height="15" fill="rgb(230,193,25)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="1028" width="8" height="15" fill="rgb(230,229,42)"/><text x="27.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="1044" width="8" height="15" fill="rgb(216,167,43)"/><text x="27.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="1060" width="8" height="15" fill="rgb(220,69,37)"/><text x="27.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.63%)</title><rect x="24" y="1076" width="8" height="15" fill="rgb(208,177,39)"/><text x="27.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="24" y="1092" width="8" height="15" fill="rgb(208,124,49)"/><text x="27.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (5 samples, 0.63%)</title><rect x="24" y="1108" width="8" height="15" fill="rgb(211,102,31)"/><text x="27.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.51%)</title><rect x="26" y="1124" width="6" height="15" fill="rgb(249,165,14)"/><text x="29.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.51%)</title><rect x="26" y="1140" width="6" height="15" fill="rgb(210,118,43)"/><text x="29.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.51%)</title><rect x="26" y="1156" width="6" height="15" fill="rgb(221,55,35)"/><text x="29.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.51%)</title><rect x="26" y="1172" width="6" height="15" fill="rgb(246,186,16)"/><text x="29.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.51%)</title><rect x="26" y="1188" width="6" height="15" fill="rgb(241,134,16)"/><text x="29.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.51%)</title><rect x="26" y="1204" width="6" height="15" fill="rgb(214,192,2)"/><text x="29.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.51%)</title><rect x="26" y="1220" width="6" height="15" fill="rgb(226,169,44)"/><text x="29.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (4 samples, 0.51%)</title><rect x="26" y="1236" width="6" height="15" fill="rgb(216,45,9)"/><text x="29.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.51%)</title><rect x="26" y="1252" width="6" height="15" fill="rgb(208,55,31)"/><text x="29.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.51%)</title><rect x="26" y="1268" width="6" height="15" fill="rgb(222,0,1)"/><text x="29.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.51%)</title><rect x="26" y="1284" width="6" height="15" fill="rgb(238,63,3)"/><text x="29.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="27" y="1300" width="5" height="15" fill="rgb(232,102,9)"/><text x="30.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="27" y="1316" width="5" height="15" fill="rgb(248,209,34)"/><text x="30.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.38%)</title><rect x="27" y="1332" width="5" height="15" fill="rgb(207,229,25)"/><text x="30.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="27" y="1348" width="5" height="15" fill="rgb(239,98,35)"/><text x="30.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 0.38%)</title><rect x="27" y="1364" width="5" height="15" fill="rgb(235,38,38)"/><text x="30.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="27" y="1380" width="5" height="15" fill="rgb(208,153,23)"/><text x="30.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="27" y="1396" width="5" height="15" fill="rgb(208,134,16)"/><text x="30.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="27" y="1412" width="5" height="15" fill="rgb(226,199,15)"/><text x="30.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.38%)</title><rect x="27" y="1428" width="5" height="15" fill="rgb(229,59,30)"/><text x="30.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="27" y="1444" width="5" height="15" fill="rgb(214,138,11)"/><text x="30.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.38%)</title><rect x="27" y="1460" width="5" height="15" fill="rgb(245,180,41)"/><text x="30.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.25%)</title><rect x="29" y="1476" width="3" height="15" fill="rgb(237,106,40)"/><text x="32.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.25%)</title><rect x="29" y="1492" width="3" height="15" fill="rgb(212,50,11)"/><text x="32.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.13%)</title><rect x="30" y="1508" width="2" height="15" fill="rgb(231,3,14)"/><text x="33.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.13%)</title><rect x="30" y="1524" width="2" height="15" fill="rgb(208,218,43)"/><text x="33.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.13%)</title><rect x="30" y="1540" width="2" height="15" fill="rgb(207,61,51)"/><text x="33.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.13%)</title><rect x="30" y="1556" width="2" height="15" fill="rgb(231,214,41)"/><text x="33.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.13%)</title><rect x="30" y="1572" width="2" height="15" fill="rgb(222,126,28)"/><text x="33.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.13%)</title><rect x="30" y="1588" width="2" height="15" fill="rgb(252,172,21)"/><text x="33.00" y="1598.50"></text></g><g><title>format_name_with_domain (skl2onnx/algebra/automation.py) (1 samples, 0.13%)</title><rect x="30" y="1604" width="2" height="15" fill="rgb(223,207,38)"/><text x="33.00" y="1614.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.13%)</title><rect x="32" y="724" width="1" height="15" fill="rgb(235,45,11)"/><text x="35.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="740" width="1" height="15" fill="rgb(232,26,46)"/><text x="35.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="756" width="1" height="15" fill="rgb(206,219,18)"/><text x="35.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="772" width="1" height="15" fill="rgb(247,158,16)"/><text x="35.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="32" y="788" width="1" height="15" fill="rgb(209,61,50)"/><text x="35.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="804" width="1" height="15" fill="rgb(246,135,20)"/><text x="35.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.13%)</title><rect x="32" y="820" width="1" height="15" fill="rgb(211,142,39)"/><text x="35.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="836" width="1" height="15" fill="rgb(223,208,11)"/><text x="35.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="852" width="1" height="15" fill="rgb(243,128,2)"/><text x="35.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="868" width="1" height="15" fill="rgb(236,7,32)"/><text x="35.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="32" y="884" width="1" height="15" fill="rgb(250,25,31)"/><text x="35.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="900" width="1" height="15" fill="rgb(234,75,45)"/><text x="35.00" y="910.50"></text></g><g><title>0x7ff85731c40e (?) (1 samples, 0.13%)</title><rect x="32" y="916" width="1" height="15" fill="rgb(236,127,14)"/><text x="35.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="932" width="1" height="15" fill="rgb(227,139,54)"/><text x="35.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="948" width="1" height="15" fill="rgb(247,68,21)"/><text x="35.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="964" width="1" height="15" fill="rgb(218,160,37)"/><text x="35.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="32" y="980" width="1" height="15" fill="rgb(252,213,4)"/><text x="35.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="996" width="1" height="15" fill="rgb(210,26,54)"/><text x="35.00" y="1006.50"></text></g><g><title>0x7ff8570d5cd2 (?) (1 samples, 0.13%)</title><rect x="32" y="1012" width="1" height="15" fill="rgb(253,181,9)"/><text x="35.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1028" width="1" height="15" fill="rgb(210,41,46)"/><text x="35.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1044" width="1" height="15" fill="rgb(247,133,1)"/><text x="35.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1060" width="1" height="15" fill="rgb(253,18,31)"/><text x="35.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="32" y="1076" width="1" height="15" fill="rgb(222,160,48)"/><text x="35.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1092" width="1" height="15" fill="rgb(253,14,18)"/><text x="35.00" y="1102.50"></text></g><g><title>0x7ff8567cb0e5 (?) (1 samples, 0.13%)</title><rect x="32" y="1108" width="1" height="15" fill="rgb(243,149,44)"/><text x="35.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1124" width="1" height="15" fill="rgb(248,110,35)"/><text x="35.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1140" width="1" height="15" fill="rgb(221,119,14)"/><text x="35.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1156" width="1" height="15" fill="rgb(233,149,22)"/><text x="35.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="32" y="1172" width="1" height="15" fill="rgb(218,114,29)"/><text x="35.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1188" width="1" height="15" fill="rgb(232,15,13)"/><text x="35.00" y="1198.50"></text></g><g><title>0x7ff85654fe68 (?) (1 samples, 0.13%)</title><rect x="32" y="1204" width="1" height="15" fill="rgb(239,151,53)"/><text x="35.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1220" width="1" height="15" fill="rgb(232,141,50)"/><text x="35.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1236" width="1" height="15" fill="rgb(218,49,48)"/><text x="35.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1252" width="1" height="15" fill="rgb(221,33,44)"/><text x="35.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="32" y="1268" width="1" height="15" fill="rgb(234,156,1)"/><text x="35.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1284" width="1" height="15" fill="rgb(211,210,37)"/><text x="35.00" y="1294.50"></text></g><g><title>0x7ff8562e02fb (?) (1 samples, 0.13%)</title><rect x="32" y="1300" width="1" height="15" fill="rgb(219,27,6)"/><text x="35.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1316" width="1" height="15" fill="rgb(218,152,5)"/><text x="35.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1332" width="1" height="15" fill="rgb(246,147,23)"/><text x="35.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1348" width="1" height="15" fill="rgb(232,21,8)"/><text x="35.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="32" y="1364" width="1" height="15" fill="rgb(224,138,52)"/><text x="35.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1380" width="1" height="15" fill="rgb(242,2,51)"/><text x="35.00" y="1390.50"></text></g><g><title>0x7ff8560c4153 (?) (1 samples, 0.13%)</title><rect x="32" y="1396" width="1" height="15" fill="rgb(249,181,40)"/><text x="35.00" y="1406.50"></text></g><g><title>0x7ff8560c2c13 (?) (1 samples, 0.13%)</title><rect x="32" y="1412" width="1" height="15" fill="rgb(226,153,2)"/><text x="35.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1428" width="1" height="15" fill="rgb(223,27,7)"/><text x="35.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1444" width="1" height="15" fill="rgb(240,134,36)"/><text x="35.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1460" width="1" height="15" fill="rgb(226,116,18)"/><text x="35.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="32" y="1476" width="1" height="15" fill="rgb(209,192,39)"/><text x="35.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1492" width="1" height="15" fill="rgb(231,173,41)"/><text x="35.00" y="1502.50"></text></g><g><title>0x7ff855e5f181 (?) (1 samples, 0.13%)</title><rect x="32" y="1508" width="1" height="15" fill="rgb(234,162,16)"/><text x="35.00" y="1518.50"></text></g><g><title>0x7ff855e621c9 (?) (1 samples, 0.13%)</title><rect x="32" y="1524" width="1" height="15" fill="rgb(218,147,44)"/><text x="35.00" y="1534.50"></text></g><g><title>0x7ff855e8e167 (?) (1 samples, 0.13%)</title><rect x="32" y="1540" width="1" height="15" fill="rgb(228,223,7)"/><text x="35.00" y="1550.50"></text></g><g><title>0x7ff855e89b64 (?) (1 samples, 0.13%)</title><rect x="32" y="1556" width="1" height="15" fill="rgb(251,195,7)"/><text x="35.00" y="1566.50"></text></g><g><title>0x7ff855e6d07b (?) (1 samples, 0.13%)</title><rect x="32" y="1572" width="1" height="15" fill="rgb(236,93,36)"/><text x="35.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.13%)</title><rect x="32" y="1588" width="1" height="15" fill="rgb(213,61,3)"/><text x="35.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.13%)</title><rect x="32" y="1604" width="1" height="15" fill="rgb(224,201,9)"/><text x="35.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.13%)</title><rect x="32" y="1620" width="1" height="15" fill="rgb(215,84,28)"/><text x="35.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.13%)</title><rect x="32" y="1636" width="1" height="15" fill="rgb(219,21,10)"/><text x="35.00" y="1646.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="32" y="1652" width="1" height="15" fill="rgb(248,147,27)"/><text x="35.00" y="1662.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.13%)</title><rect x="33" y="724" width="2" height="15" fill="rgb(211,0,14)"/><text x="36.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="740" width="2" height="15" fill="rgb(240,184,12)"/><text x="36.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="756" width="2" height="15" fill="rgb(205,26,39)"/><text x="36.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="772" width="2" height="15" fill="rgb(206,118,7)"/><text x="36.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="33" y="788" width="2" height="15" fill="rgb(248,221,1)"/><text x="36.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="804" width="2" height="15" fill="rgb(222,143,41)"/><text x="36.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.13%)</title><rect x="33" y="820" width="2" height="15" fill="rgb(221,218,21)"/><text x="36.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="836" width="2" height="15" fill="rgb(232,153,18)"/><text x="36.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="852" width="2" height="15" fill="rgb(229,195,15)"/><text x="36.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="868" width="2" height="15" fill="rgb(213,7,42)"/><text x="36.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="33" y="884" width="2" height="15" fill="rgb(212,228,3)"/><text x="36.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="900" width="2" height="15" fill="rgb(215,135,34)"/><text x="36.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.13%)</title><rect x="33" y="916" width="2" height="15" fill="rgb(220,30,53)"/><text x="36.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="932" width="2" height="15" fill="rgb(236,9,13)"/><text x="36.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="948" width="2" height="15" fill="rgb(246,210,1)"/><text x="36.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="964" width="2" height="15" fill="rgb(249,108,52)"/><text x="36.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="33" y="980" width="2" height="15" fill="rgb(206,149,41)"/><text x="36.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="996" width="2" height="15" fill="rgb(236,158,3)"/><text x="36.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.13%)</title><rect x="33" y="1012" width="2" height="15" fill="rgb(212,91,25)"/><text x="36.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1028" width="2" height="15" fill="rgb(241,229,25)"/><text x="36.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1044" width="2" height="15" fill="rgb(211,107,31)"/><text x="36.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1060" width="2" height="15" fill="rgb(253,192,2)"/><text x="36.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="33" y="1076" width="2" height="15" fill="rgb(219,76,54)"/><text x="36.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1092" width="2" height="15" fill="rgb(223,196,18)"/><text x="36.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.13%)</title><rect x="33" y="1108" width="2" height="15" fill="rgb(237,105,3)"/><text x="36.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1124" width="2" height="15" fill="rgb(252,129,3)"/><text x="36.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1140" width="2" height="15" fill="rgb(230,147,35)"/><text x="36.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1156" width="2" height="15" fill="rgb(240,200,52)"/><text x="36.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="33" y="1172" width="2" height="15" fill="rgb(207,181,50)"/><text x="36.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1188" width="2" height="15" fill="rgb(238,18,43)"/><text x="36.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.13%)</title><rect x="33" y="1204" width="2" height="15" fill="rgb(217,188,44)"/><text x="36.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1220" width="2" height="15" fill="rgb(244,35,41)"/><text x="36.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1236" width="2" height="15" fill="rgb(249,187,27)"/><text x="36.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1252" width="2" height="15" fill="rgb(229,132,27)"/><text x="36.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="33" y="1268" width="2" height="15" fill="rgb(221,48,17)"/><text x="36.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1284" width="2" height="15" fill="rgb(228,104,53)"/><text x="36.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.13%)</title><rect x="33" y="1300" width="2" height="15" fill="rgb(224,79,43)"/><text x="36.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1316" width="2" height="15" fill="rgb(209,36,28)"/><text x="36.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1332" width="2" height="15" fill="rgb(230,97,15)"/><text x="36.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1348" width="2" height="15" fill="rgb(224,170,45)"/><text x="36.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="33" y="1364" width="2" height="15" fill="rgb(217,199,9)"/><text x="36.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1380" width="2" height="15" fill="rgb(207,67,4)"/><text x="36.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.13%)</title><rect x="33" y="1396" width="2" height="15" fill="rgb(229,121,34)"/><text x="36.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1412" width="2" height="15" fill="rgb(208,214,45)"/><text x="36.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1428" width="2" height="15" fill="rgb(252,156,4)"/><text x="36.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1444" width="2" height="15" fill="rgb(224,46,25)"/><text x="36.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="33" y="1460" width="2" height="15" fill="rgb(228,183,24)"/><text x="36.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1476" width="2" height="15" fill="rgb(252,171,31)"/><text x="36.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.13%)</title><rect x="33" y="1492" width="2" height="15" fill="rgb(242,61,23)"/><text x="36.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1508" width="2" height="15" fill="rgb(215,117,28)"/><text x="36.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1524" width="2" height="15" fill="rgb(226,37,42)"/><text x="36.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1540" width="2" height="15" fill="rgb(208,31,47)"/><text x="36.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="33" y="1556" width="2" height="15" fill="rgb(230,15,31)"/><text x="36.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1572" width="2" height="15" fill="rgb(214,115,44)"/><text x="36.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.13%)</title><rect x="33" y="1588" width="2" height="15" fill="rgb(221,161,1)"/><text x="36.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1604" width="2" height="15" fill="rgb(216,22,34)"/><text x="36.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1620" width="2" height="15" fill="rgb(246,155,0)"/><text x="36.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1636" width="2" height="15" fill="rgb(254,114,15)"/><text x="36.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="33" y="1652" width="2" height="15" fill="rgb(248,156,41)"/><text x="36.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1668" width="2" height="15" fill="rgb(243,60,50)"/><text x="36.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.13%)</title><rect x="33" y="1684" width="2" height="15" fill="rgb(249,63,33)"/><text x="36.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1700" width="2" height="15" fill="rgb(211,224,47)"/><text x="36.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1716" width="2" height="15" fill="rgb(245,18,1)"/><text x="36.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1732" width="2" height="15" fill="rgb(223,54,4)"/><text x="36.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="33" y="1748" width="2" height="15" fill="rgb(216,169,2)"/><text x="36.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1764" width="2" height="15" fill="rgb(210,169,40)"/><text x="36.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.13%)</title><rect x="33" y="1780" width="2" height="15" fill="rgb(245,117,45)"/><text x="36.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1796" width="2" height="15" fill="rgb(244,170,52)"/><text x="36.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1812" width="2" height="15" fill="rgb(245,165,28)"/><text x="36.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1828" width="2" height="15" fill="rgb(209,122,9)"/><text x="36.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="33" y="1844" width="2" height="15" fill="rgb(217,103,10)"/><text x="36.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1860" width="2" height="15" fill="rgb(214,193,29)"/><text x="36.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.13%)</title><rect x="33" y="1876" width="2" height="15" fill="rgb(211,41,39)"/><text x="36.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1892" width="2" height="15" fill="rgb(222,217,1)"/><text x="36.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1908" width="2" height="15" fill="rgb(238,8,14)"/><text x="36.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1924" width="2" height="15" fill="rgb(214,62,16)"/><text x="36.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="33" y="1940" width="2" height="15" fill="rgb(221,64,4)"/><text x="36.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1956" width="2" height="15" fill="rgb(226,44,44)"/><text x="36.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py) (1 samples, 0.13%)</title><rect x="33" y="1972" width="2" height="15" fill="rgb(235,94,0)"/><text x="36.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="1988" width="2" height="15" fill="rgb(213,74,43)"/><text x="36.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="2004" width="2" height="15" fill="rgb(225,155,2)"/><text x="36.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="2020" width="2" height="15" fill="rgb(245,194,20)"/><text x="36.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="2036" width="2" height="15" fill="rgb(236,105,35)"/><text x="36.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="2052" width="2" height="15" fill="rgb(236,218,4)"/><text x="36.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="33" y="2068" width="2" height="15" fill="rgb(241,8,7)"/><text x="36.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="33" y="2084" width="2" height="15" fill="rgb(234,46,54)"/><text x="36.00" y="2094.50"></text></g><g><title>&lt;module&gt; (matplotlib/afm.py) (1 samples, 0.13%)</title><rect x="33" y="2100" width="2" height="15" fill="rgb(218,41,13)"/><text x="36.00" y="2110.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.13%)</title><rect x="33" y="2116" width="2" height="15" fill="rgb(253,66,40)"/><text x="36.00" y="2126.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="33" y="2132" width="2" height="15" fill="rgb(224,102,1)"/><text x="36.00" y="2142.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 1.01%)</title><rect x="24" y="244" width="12" height="15" fill="rgb(226,164,35)"/><text x="27.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.01%)</title><rect x="24" y="260" width="12" height="15" fill="rgb(220,87,0)"/><text x="27.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.01%)</title><rect x="24" y="276" width="12" height="15" fill="rgb(217,172,31)"/><text x="27.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.01%)</title><rect x="24" y="292" width="12" height="15" fill="rgb(251,97,30)"/><text x="27.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.01%)</title><rect x="24" y="308" width="12" height="15" fill="rgb(223,113,37)"/><text x="27.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.01%)</title><rect x="24" y="324" width="12" height="15" fill="rgb(206,19,13)"/><text x="27.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 1.01%)</title><rect x="24" y="340" width="12" height="15" fill="rgb(229,22,33)"/><text x="27.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.01%)</title><rect x="24" y="356" width="12" height="15" fill="rgb(234,164,48)"/><text x="27.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.01%)</title><rect x="24" y="372" width="12" height="15" fill="rgb(221,198,39)"/><text x="27.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.01%)</title><rect x="24" y="388" width="12" height="15" fill="rgb(229,178,22)"/><text x="27.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.01%)</title><rect x="24" y="404" width="12" height="15" fill="rgb(246,131,44)"/><text x="27.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.01%)</title><rect x="24" y="420" width="12" height="15" fill="rgb(251,33,18)"/><text x="27.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 1.01%)</title><rect x="24" y="436" width="12" height="15" fill="rgb(221,62,7)"/><text x="27.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.01%)</title><rect x="24" y="452" width="12" height="15" fill="rgb(242,192,39)"/><text x="27.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.01%)</title><rect x="24" y="468" width="12" height="15" fill="rgb(253,0,22)"/><text x="27.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="32" y="484" width="4" height="15" fill="rgb(249,37,21)"/><text x="35.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.38%)</title><rect x="32" y="500" width="4" height="15" fill="rgb(220,9,53)"/><text x="35.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="32" y="516" width="4" height="15" fill="rgb(234,194,16)"/><text x="35.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.38%)</title><rect x="32" y="532" width="4" height="15" fill="rgb(248,3,40)"/><text x="35.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="32" y="548" width="4" height="15" fill="rgb(248,23,9)"/><text x="35.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="32" y="564" width="4" height="15" fill="rgb(217,201,4)"/><text x="35.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="32" y="580" width="4" height="15" fill="rgb(249,28,43)"/><text x="35.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.38%)</title><rect x="32" y="596" width="4" height="15" fill="rgb(236,186,0)"/><text x="35.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="32" y="612" width="4" height="15" fill="rgb(251,214,42)"/><text x="35.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.38%)</title><rect x="32" y="628" width="4" height="15" fill="rgb(241,3,0)"/><text x="35.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="32" y="644" width="4" height="15" fill="rgb(215,92,10)"/><text x="35.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="32" y="660" width="4" height="15" fill="rgb(211,191,27)"/><text x="35.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="32" y="676" width="4" height="15" fill="rgb(217,131,24)"/><text x="35.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.38%)</title><rect x="32" y="692" width="4" height="15" fill="rgb(245,28,15)"/><text x="35.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="32" y="708" width="4" height="15" fill="rgb(223,148,39)"/><text x="35.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/config_init.py) (1 samples, 0.13%)</title><rect x="35" y="724" width="1" height="15" fill="rgb(248,158,4)"/><text x="38.00" y="734.50"></text></g><g><title>inner (pandas/_config/config.py) (1 samples, 0.13%)</title><rect x="35" y="740" width="1" height="15" fill="rgb(237,143,50)"/><text x="38.00" y="750.50"></text></g><g><title>register_option (pandas/_config/config.py) (1 samples, 0.13%)</title><rect x="35" y="756" width="1" height="15" fill="rgb(222,15,21)"/><text x="38.00" y="766.50"></text></g><g><title>match (re.py) (1 samples, 0.13%)</title><rect x="35" y="772" width="1" height="15" fill="rgb(216,59,43)"/><text x="38.00" y="782.50"></text></g><g><title>_compile (re.py) (1 samples, 0.13%)</title><rect x="35" y="788" width="1" height="15" fill="rgb(253,204,40)"/><text x="38.00" y="798.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.13%)</title><rect x="36" y="372" width="2" height="15" fill="rgb(211,156,17)"/><text x="39.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="388" width="2" height="15" fill="rgb(229,84,8)"/><text x="39.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="404" width="2" height="15" fill="rgb(230,165,51)"/><text x="39.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="420" width="2" height="15" fill="rgb(240,75,19)"/><text x="39.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="436" width="2" height="15" fill="rgb(218,117,29)"/><text x="39.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="452" width="2" height="15" fill="rgb(236,148,2)"/><text x="39.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="36" y="468" width="2" height="15" fill="rgb(238,127,45)"/><text x="39.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="484" width="2" height="15" fill="rgb(226,191,53)"/><text x="39.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.13%)</title><rect x="36" y="500" width="2" height="15" fill="rgb(253,130,13)"/><text x="39.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="516" width="2" height="15" fill="rgb(233,116,25)"/><text x="39.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="532" width="2" height="15" fill="rgb(217,4,21)"/><text x="39.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="548" width="2" height="15" fill="rgb(207,73,16)"/><text x="39.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="36" y="564" width="2" height="15" fill="rgb(211,12,19)"/><text x="39.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="580" width="2" height="15" fill="rgb(216,80,11)"/><text x="39.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (1 samples, 0.13%)</title><rect x="36" y="596" width="2" height="15" fill="rgb(253,94,7)"/><text x="39.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="612" width="2" height="15" fill="rgb(220,217,0)"/><text x="39.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="628" width="2" height="15" fill="rgb(244,148,20)"/><text x="39.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="644" width="2" height="15" fill="rgb(250,37,23)"/><text x="39.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="36" y="660" width="2" height="15" fill="rgb(243,71,7)"/><text x="39.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="676" width="2" height="15" fill="rgb(226,200,13)"/><text x="39.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py) (1 samples, 0.13%)</title><rect x="36" y="692" width="2" height="15" fill="rgb(238,53,23)"/><text x="39.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="708" width="2" height="15" fill="rgb(233,172,36)"/><text x="39.00" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="724" width="2" height="15" fill="rgb(240,3,52)"/><text x="39.00" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="740" width="2" height="15" fill="rgb(213,125,1)"/><text x="39.00" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="36" y="756" width="2" height="15" fill="rgb(229,149,0)"/><text x="39.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="772" width="2" height="15" fill="rgb(246,140,3)"/><text x="39.00" y="782.50"></text></g><g><title>&lt;module&gt; (threading.py) (1 samples, 0.13%)</title><rect x="36" y="788" width="2" height="15" fill="rgb(237,43,54)"/><text x="39.00" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="804" width="2" height="15" fill="rgb(208,134,22)"/><text x="39.00" y="814.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="820" width="2" height="15" fill="rgb(234,158,47)"/><text x="39.00" y="830.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="836" width="2" height="15" fill="rgb(239,40,39)"/><text x="39.00" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 2.53%)</title><rect x="10" y="68" width="29" height="15" fill="rgb(251,176,24)"/><text x="13.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 2.53%)</title><rect x="10" y="84" width="29" height="15" fill="rgb(223,46,51)"/><text x="13.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 2.53%)</title><rect x="10" y="100" width="29" height="15" fill="rgb(229,203,23)"/><text x="13.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (20 samples, 2.53%)</title><rect x="10" y="116" width="29" height="15" fill="rgb(232,134,47)"/><text x="13.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (20 samples, 2.53%)</title><rect x="10" y="132" width="29" height="15" fill="rgb(209,123,27)"/><text x="13.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py) (20 samples, 2.53%)</title><rect x="10" y="148" width="29" height="15" fill="rgb(233,21,4)"/><text x="13.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 2.53%)</title><rect x="10" y="164" width="29" height="15" fill="rgb(246,26,27)"/><text x="13.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 2.53%)</title><rect x="10" y="180" width="29" height="15" fill="rgb(248,133,44)"/><text x="13.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.27%)</title><rect x="24" y="196" width="15" height="15" fill="rgb(224,87,17)"/><text x="27.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.27%)</title><rect x="24" y="212" width="15" height="15" fill="rgb(222,70,13)"/><text x="27.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.27%)</title><rect x="24" y="228" width="15" height="15" fill="rgb(218,17,9)"/><text x="27.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.25%)</title><rect x="36" y="244" width="3" height="15" fill="rgb(212,191,43)"/><text x="39.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="260" width="3" height="15" fill="rgb(218,227,27)"/><text x="39.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="276" width="3" height="15" fill="rgb(248,228,46)"/><text x="39.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="292" width="3" height="15" fill="rgb(240,220,45)"/><text x="39.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="308" width="3" height="15" fill="rgb(241,169,21)"/><text x="39.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="324" width="3" height="15" fill="rgb(248,92,24)"/><text x="39.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="36" y="340" width="3" height="15" fill="rgb(217,195,13)"/><text x="39.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="356" width="3" height="15" fill="rgb(227,87,39)"/><text x="39.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.13%)</title><rect x="38" y="372" width="1" height="15" fill="rgb(222,184,9)"/><text x="41.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="388" width="1" height="15" fill="rgb(231,140,9)"/><text x="41.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="404" width="1" height="15" fill="rgb(223,119,25)"/><text x="41.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="420" width="1" height="15" fill="rgb(239,176,9)"/><text x="41.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="38" y="436" width="1" height="15" fill="rgb(230,179,4)"/><text x="41.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="452" width="1" height="15" fill="rgb(244,180,22)"/><text x="41.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.13%)</title><rect x="38" y="468" width="1" height="15" fill="rgb(250,148,19)"/><text x="41.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="484" width="1" height="15" fill="rgb(218,180,46)"/><text x="41.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="500" width="1" height="15" fill="rgb(219,76,21)"/><text x="41.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="516" width="1" height="15" fill="rgb(218,196,49)"/><text x="41.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="38" y="532" width="1" height="15" fill="rgb(250,20,14)"/><text x="41.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="548" width="1" height="15" fill="rgb(242,189,16)"/><text x="41.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/function_base.py) (1 samples, 0.13%)</title><rect x="38" y="564" width="1" height="15" fill="rgb(217,75,12)"/><text x="41.00" y="574.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.13%)</title><rect x="38" y="580" width="1" height="15" fill="rgb(209,221,35)"/><text x="41.00" y="590.50"></text></g><g><title>profile0 (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (1 samples, 0.13%)</title><rect x="39" y="100" width="2" height="15" fill="rgb(220,116,18)"/><text x="42.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.13%)</title><rect x="39" y="116" width="2" height="15" fill="rgb(226,24,8)"/><text x="42.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.13%)</title><rect x="39" y="132" width="2" height="15" fill="rgb(243,191,35)"/><text x="42.00" y="142.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.13%)</title><rect x="39" y="148" width="2" height="15" fill="rgb(218,182,48)"/><text x="42.00" y="158.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.13%)</title><rect x="39" y="164" width="2" height="15" fill="rgb(217,208,27)"/><text x="42.00" y="174.50"></text></g><g><title>profile0_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (2 samples, 0.25%)</title><rect x="39" y="68" width="3" height="15" fill="rgb(242,19,9)"/><text x="42.00" y="78.50"></text></g><g><title>setup_profile0 (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (2 samples, 0.25%)</title><rect x="39" y="84" width="3" height="15" fill="rgb(222,84,30)"/><text x="42.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.13%)</title><rect x="41" y="100" width="1" height="15" fill="rgb(222,182,7)"/><text x="44.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (1 samples, 0.13%)</title><rect x="41" y="116" width="1" height="15" fill="rgb(244,18,52)"/><text x="44.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py) (1 samples, 0.13%)</title><rect x="41" y="132" width="1" height="15" fill="rgb(221,9,0)"/><text x="44.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="41" y="148" width="1" height="15" fill="rgb(253,81,23)"/><text x="44.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="41" y="164" width="1" height="15" fill="rgb(206,79,51)"/><text x="44.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="41" y="180" width="1" height="15" fill="rgb(245,49,18)"/><text x="44.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="41" y="196" width="1" height="15" fill="rgb(231,151,51)"/><text x="44.00" y="206.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="41" y="212" width="1" height="15" fill="rgb(214,51,32)"/><text x="44.00" y="222.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="41" y="228" width="1" height="15" fill="rgb(206,185,31)"/><text x="44.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="42" y="116" width="2" height="15" fill="rgb(207,152,37)"/><text x="45.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.13%)</title><rect x="42" y="132" width="2" height="15" fill="rgb(229,113,17)"/><text x="45.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.13%)</title><rect x="42" y="148" width="2" height="15" fill="rgb(206,68,34)"/><text x="45.00" y="158.50"></text></g><g><title>0x7ff841e29ff9 (?) (1 samples, 0.13%)</title><rect x="48" y="212" width="2" height="15" fill="rgb(239,215,37)"/><text x="51.00" y="222.50"></text></g><g><title>0x7ff841e24ef6 (?) (1 samples, 0.13%)</title><rect x="48" y="228" width="2" height="15" fill="rgb(213,124,25)"/><text x="51.00" y="238.50"></text></g><g><title>0x7ff841e19962 (?) (1 samples, 0.13%)</title><rect x="48" y="244" width="2" height="15" fill="rgb(242,155,25)"/><text x="51.00" y="254.50"></text></g><g><title>0x7ff841e4d7a7 (?) (1 samples, 0.13%)</title><rect x="48" y="260" width="2" height="15" fill="rgb(211,8,44)"/><text x="51.00" y="270.50"></text></g><g><title>0x7ff841e4d379 (?) (1 samples, 0.13%)</title><rect x="48" y="276" width="2" height="15" fill="rgb(222,99,32)"/><text x="51.00" y="286.50"></text></g><g><title>0x7ff8422ab8b8 (?) (1 samples, 0.13%)</title><rect x="48" y="292" width="2" height="15" fill="rgb(221,129,14)"/><text x="51.00" y="302.50"></text></g><g><title>0x7ff8422a9c7f (?) (1 samples, 0.13%)</title><rect x="48" y="308" width="2" height="15" fill="rgb(252,153,18)"/><text x="51.00" y="318.50"></text></g><g><title>0x7ff8422bc99c (?) (1 samples, 0.13%)</title><rect x="48" y="324" width="2" height="15" fill="rgb(235,68,10)"/><text x="51.00" y="334.50"></text></g><g><title>0x7ff842057a70 (?) (1 samples, 0.13%)</title><rect x="48" y="340" width="2" height="15" fill="rgb(210,217,17)"/><text x="51.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.13%)</title><rect x="50" y="212" width="1" height="15" fill="rgb(217,180,1)"/><text x="53.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="50" y="228" width="1" height="15" fill="rgb(230,218,28)"/><text x="53.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="50" y="244" width="1" height="15" fill="rgb(217,102,31)"/><text x="53.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="50" y="260" width="1" height="15" fill="rgb(213,39,38)"/><text x="53.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="51" y="292" width="2" height="15" fill="rgb(212,12,28)"/><text x="54.00" y="302.50"></text></g><g><title>0x7ff881deb9a1 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="51" y="308" width="2" height="15" fill="rgb(222,61,42)"/><text x="54.00" y="318.50"></text></g><g><title>onnxruntime::ArgMin&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.89%)</title><rect x="53" y="340" width="10" height="15" fill="rgb(235,37,22)"/><text x="56.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.76%)</title><rect x="54" y="356" width="9" height="15" fill="rgb(209,131,29)"/><text x="57.00" y="366.50"></text></g><g><title>onnxruntime::Cast&lt;bool&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.25%)</title><rect x="63" y="340" width="3" height="15" fill="rgb(230,41,45)"/><text x="66.00" y="350.50"></text></g><g><title>onnxruntime::ConcatBase::ComputeImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.01%)</title><rect x="66" y="356" width="12" height="15" fill="rgb(229,7,52)"/><text x="69.00" y="366.50"></text></g><g><title>0x7ff881e0bdc9 (libc-2.29.so) (4 samples, 0.51%)</title><rect x="72" y="372" width="6" height="15" fill="rgb(254,135,48)"/><text x="75.00" y="382.50"></text></g><g><title>onnxruntime::Concat::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.14%)</title><rect x="66" y="340" width="14" height="15" fill="rgb(231,34,23)"/><text x="69.00" y="350.50"></text></g><g><title>onnxruntime::ConcatBase::PrepareForCompute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="78" y="356" width="2" height="15" fill="rgb(216,118,24)"/><text x="81.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="78" y="372" width="2" height="15" fill="rgb(219,113,36)"/><text x="81.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="78" y="388" width="2" height="15" fill="rgb(247,202,44)"/><text x="81.00" y="398.50"></text></g><g><title>0x7ff881ded700 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="78" y="404" width="2" height="15" fill="rgb(205,98,34)"/><text x="81.00" y="414.50"></text></g><g><title>0x7ff881deaaa4 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="78" y="420" width="2" height="15" fill="rgb(243,64,43)"/><text x="81.00" y="430.50"></text></g><g><title>(anonymous namespace)::CopySlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.25%)</title><rect x="80" y="356" width="3" height="15" fill="rgb(254,178,2)"/><text x="83.00" y="366.50"></text></g><g><title>onnxruntime::CumSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.76%)</title><rect x="80" y="340" width="9" height="15" fill="rgb(245,91,6)"/><text x="83.00" y="350.50"></text></g><g><title>(anonymous namespace)::SumSlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.51%)</title><rect x="83" y="356" width="6" height="15" fill="rgb(238,22,16)"/><text x="86.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="89" y="340" width="1" height="15" fill="rgb(244,154,46)"/><text x="92.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="89" y="356" width="1" height="15" fill="rgb(210,156,33)"/><text x="92.00" y="366.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="89" y="372" width="1" height="15" fill="rgb(240,174,0)"/><text x="92.00" y="382.50"></text></g><g><title>0x7ff881e0bdbb (libc-2.29.so) (1 samples, 0.13%)</title><rect x="96" y="356" width="2" height="15" fill="rgb(205,48,32)"/><text x="99.00" y="366.50"></text></g><g><title>0x7ff881e0bdcb (libc-2.29.so) (1 samples, 0.13%)</title><rect x="98" y="356" width="1" height="15" fill="rgb(251,71,8)"/><text x="101.00" y="366.50"></text></g><g><title>onnxruntime::GatherElements::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.89%)</title><rect x="90" y="340" width="11" height="15" fill="rgb(252,192,28)"/><text x="93.00" y="350.50"></text></g><g><title>onnxruntime::parse_and_validate_indices_tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="99" y="356" width="2" height="15" fill="rgb(235,57,49)"/><text x="102.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.25%)</title><rect x="101" y="340" width="3" height="15" fill="rgb(241,133,17)"/><text x="104.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.25%)</title><rect x="101" y="356" width="3" height="15" fill="rgb(223,172,3)"/><text x="104.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.25%)</title><rect x="101" y="372" width="3" height="15" fill="rgb(218,130,6)"/><text x="104.00" y="382.50"></text></g><g><title>0x7ff881deb971 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="102" y="388" width="2" height="15" fill="rgb(237,131,5)"/><text x="105.00" y="398.50"></text></g><g><title>onnxruntime::Less&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.25%)</title><rect x="104" y="340" width="3" height="15" fill="rgb(216,116,49)"/><text x="107.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.25%)</title><rect x="104" y="356" width="3" height="15" fill="rgb(224,63,17)"/><text x="107.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="105" y="372" width="2" height="15" fill="rgb(253,2,16)"/><text x="108.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="105" y="388" width="2" height="15" fill="rgb(254,102,22)"/><text x="108.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="105" y="404" width="2" height="15" fill="rgb(221,128,32)"/><text x="108.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="105" y="420" width="2" height="15" fill="rgb(232,62,34)"/><text x="108.00" y="430.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.38%)</title><rect x="107" y="340" width="4" height="15" fill="rgb(212,152,54)"/><text x="110.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.38%)</title><rect x="107" y="356" width="4" height="15" fill="rgb(240,6,20)"/><text x="110.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.38%)</title><rect x="107" y="372" width="4" height="15" fill="rgb(210,201,11)"/><text x="110.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="110" y="388" width="1" height="15" fill="rgb(242,131,45)"/><text x="113.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="111" y="372" width="2" height="15" fill="rgb(235,105,4)"/><text x="114.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="111" y="388" width="2" height="15" fill="rgb(234,208,14)"/><text x="114.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="111" y="404" width="2" height="15" fill="rgb(226,164,43)"/><text x="114.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="111" y="420" width="2" height="15" fill="rgb(208,205,52)"/><text x="114.00" y="430.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="111" y="436" width="2" height="15" fill="rgb(216,76,35)"/><text x="114.00" y="446.50"></text></g><g><title>0x7ff881deb961 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="128" y="388" width="1" height="15" fill="rgb(217,111,1)"/><text x="131.00" y="398.50"></text></g><g><title>0x7ff881fbde25 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="129" y="388" width="2" height="15" fill="rgb(215,103,25)"/><text x="132.00" y="398.50"></text></g><g><title>0x7ff881fbde61 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="131" y="388" width="1" height="15" fill="rgb(206,12,35)"/><text x="134.00" y="398.50"></text></g><g><title>0x7ff881fbde91 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="132" y="388" width="2" height="15" fill="rgb(219,92,41)"/><text x="135.00" y="398.50"></text></g><g><title>0x7ff881fbdeee (libm-2.29.so) (2 samples, 0.25%)</title><rect x="134" y="388" width="3" height="15" fill="rgb(250,224,36)"/><text x="137.00" y="398.50"></text></g><g><title>0x7ff881fbdef6 (libm-2.29.so) (3 samples, 0.38%)</title><rect x="137" y="388" width="4" height="15" fill="rgb(228,164,39)"/><text x="140.00" y="398.50"></text></g><g><title>0x7ff881fbdefa (libm-2.29.so) (1 samples, 0.13%)</title><rect x="141" y="388" width="2" height="15" fill="rgb(211,77,51)"/><text x="144.00" y="398.50"></text></g><g><title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, long, std::pair&lt;float, long&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::GreaterValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.63%)</title><rect x="143" y="388" width="7" height="15" fill="rgb(211,222,25)"/><text x="146.00" y="398.50"></text></g><g><title>0x7ff8718b87a0 (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="159" y="404" width="2" height="15" fill="rgb(252,61,17)"/><text x="162.00" y="414.50"></text></g><g><title>0x7ff881deb906 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="161" y="404" width="1" height="15" fill="rgb(217,219,28)"/><text x="164.00" y="414.50"></text></g><g><title>0x7ff881deb961 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="162" y="404" width="2" height="15" fill="rgb(236,8,27)"/><text x="165.00" y="414.50"></text></g><g><title>0x7ff881deba4c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="164" y="404" width="1" height="15" fill="rgb(211,110,33)"/><text x="167.00" y="414.50"></text></g><g><title>0x7ff881debbe4 (libc-2.29.so) (2 samples, 0.25%)</title><rect x="165" y="404" width="3" height="15" fill="rgb(207,228,45)"/><text x="168.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (5 samples, 0.63%)</title><rect x="168" y="404" width="8" height="15" fill="rgb(223,64,18)"/><text x="171.00" y="414.50"></text></g><g><title>0x7ff8718b7d50 (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="177" y="420" width="1" height="15" fill="rgb(242,212,30)"/><text x="180.00" y="430.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (50 samples, 6.34%)</title><rect x="111" y="340" width="75" height="15" fill="rgb(253,67,14)"/><text x="114.00" y="350.50">onnxrunt..</text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (50 samples, 6.34%)</title><rect x="111" y="356" width="75" height="15" fill="rgb(240,198,52)"/><text x="114.00" y="366.50">onnxrunt..</text></g><g><title>onnxruntime::extract_top_k_elements&lt;true, true, onnxruntime::GreaterValueCmp&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (49 samples, 6.21%)</title><rect x="113" y="372" width="73" height="15" fill="rgb(238,18,40)"/><text x="116.00" y="382.50">onnxrunt..</text></g><g><title>std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt;::_M_emplace_back_aux&lt;std::pair&lt;float, long&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 3.04%)</title><rect x="150" y="388" width="36" height="15" fill="rgb(213,184,9)"/><text x="153.00" y="398.50">std..</text></g><g><title>operator new (libstdc++.so.6.0.28) (7 samples, 0.89%)</title><rect x="176" y="404" width="10" height="15" fill="rgb(239,197,5)"/><text x="179.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.63%)</title><rect x="178" y="420" width="8" height="15" fill="rgb(218,110,23)"/><text x="181.00" y="430.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.25%)</title><rect x="186" y="340" width="3" height="15" fill="rgb(211,190,26)"/><text x="189.00" y="350.50"></text></g><g><title>0x7ff841df10f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="235" y="356" width="2" height="15" fill="rgb(224,142,14)"/><text x="238.00" y="366.50"></text></g><g><title>0x7ff881deb900 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="237" y="356" width="1" height="15" fill="rgb(252,213,11)"/><text x="240.00" y="366.50"></text></g><g><title>0x7ff881deb906 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="238" y="356" width="2" height="15" fill="rgb(208,155,27)"/><text x="241.00" y="366.50"></text></g><g><title>0x7ff881deb908 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="240" y="356" width="1" height="15" fill="rgb(238,219,19)"/><text x="243.00" y="366.50"></text></g><g><title>0x7ff881deb90e (libc-2.29.so) (3 samples, 0.38%)</title><rect x="241" y="356" width="5" height="15" fill="rgb(228,211,40)"/><text x="244.00" y="366.50"></text></g><g><title>0x7ff881deb929 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="246" y="356" width="1" height="15" fill="rgb(231,10,15)"/><text x="249.00" y="366.50"></text></g><g><title>0x7ff881deb965 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="247" y="356" width="2" height="15" fill="rgb(243,94,27)"/><text x="250.00" y="366.50"></text></g><g><title>0x7ff881deb982 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="249" y="356" width="1" height="15" fill="rgb(243,41,1)"/><text x="252.00" y="366.50"></text></g><g><title>0x7ff881deb991 (libc-2.29.so) (6 samples, 0.76%)</title><rect x="250" y="356" width="9" height="15" fill="rgb(247,82,30)"/><text x="253.00" y="366.50"></text></g><g><title>0x7ff881deb998 (libc-2.29.so) (3 samples, 0.38%)</title><rect x="259" y="356" width="5" height="15" fill="rgb(229,19,54)"/><text x="262.00" y="366.50"></text></g><g><title>0x7ff881deba41 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="264" y="356" width="1" height="15" fill="rgb(238,7,16)"/><text x="267.00" y="366.50"></text></g><g><title>0x7ff881deba55 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="265" y="356" width="2" height="15" fill="rgb(215,31,5)"/><text x="268.00" y="366.50"></text></g><g><title>0x7ff881debbd8 (libc-2.29.so) (4 samples, 0.51%)</title><rect x="267" y="356" width="6" height="15" fill="rgb(207,13,42)"/><text x="270.00" y="366.50"></text></g><g><title>0x7ff881debbe8 (libc-2.29.so) (2 samples, 0.25%)</title><rect x="273" y="356" width="3" height="15" fill="rgb(211,137,23)"/><text x="276.00" y="366.50"></text></g><g><title>0x7ff881e0c120 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="276" y="356" width="1" height="15" fill="rgb(211,168,21)"/><text x="279.00" y="366.50"></text></g><g><title>0x7ff881e0c12b (libc-2.29.so) (1 samples, 0.13%)</title><rect x="277" y="356" width="2" height="15" fill="rgb(250,139,49)"/><text x="280.00" y="366.50"></text></g><g><title>0x7ff881e0c144 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="279" y="356" width="1" height="15" fill="rgb(237,88,37)"/><text x="282.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (12 samples, 1.52%)</title><rect x="280" y="356" width="18" height="15" fill="rgb(228,121,5)"/><text x="283.00" y="366.50"></text></g><g><title>0x7ff841df0930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="395" y="388" width="2" height="15" fill="rgb(228,1,29)"/><text x="398.00" y="398.50"></text></g><g><title>0x7ff8718b7d50 (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="398" y="404" width="2" height="15" fill="rgb(215,35,27)"/><text x="401.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (6 samples, 0.76%)</title><rect x="397" y="388" width="9" height="15" fill="rgb(214,79,49)"/><text x="400.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.51%)</title><rect x="400" y="404" width="6" height="15" fill="rgb(234,87,38)"/><text x="403.00" y="414.50"></text></g><g><title>0x7ff8718b7d50 (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="424" y="436" width="1" height="15" fill="rgb(235,171,7)"/><text x="427.00" y="446.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.65%)</title><rect x="413" y="404" width="20" height="15" fill="rgb(252,27,32)"/><text x="416.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (7 samples, 0.89%)</title><rect x="422" y="420" width="11" height="15" fill="rgb(228,191,27)"/><text x="425.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.63%)</title><rect x="425" y="436" width="8" height="15" fill="rgb(231,32,5)"/><text x="428.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (120 samples, 15.21%)</title><rect x="298" y="356" width="180" height="15" fill="rgb(210,147,50)"/><text x="301.00" y="366.50">onnxruntime::ml::TreeEn..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (63 samples, 7.98%)</title><rect x="383" y="372" width="95" height="15" fill="rgb(209,198,35)"/><text x="386.00" y="382.50">std::_Hasht..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (48 samples, 6.08%)</title><rect x="406" y="388" width="72" height="15" fill="rgb(218,104,43)"/><text x="409.00" y="398.50">std::_Ha..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (30 samples, 3.80%)</title><rect x="433" y="404" width="45" height="15" fill="rgb(246,164,5)"/><text x="436.00" y="414.50">std:..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (16 samples, 2.03%)</title><rect x="454" y="420" width="24" height="15" fill="rgb(252,223,14)"/><text x="457.00" y="430.50">s..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.27%)</title><rect x="478" y="356" width="15" height="15" fill="rgb(251,88,20)"/><text x="481.00" y="366.50"></text></g><g><title>0x7ff881e0bdc9 (libc-2.29.so) (2 samples, 0.25%)</title><rect x="490" y="372" width="3" height="15" fill="rgb(219,21,3)"/><text x="493.00" y="382.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.89%)</title><rect x="493" y="356" width="10" height="15" fill="rgb(213,223,5)"/><text x="496.00" y="366.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (312 samples, 39.54%)</title><rect x="51" y="244" width="467" height="15" fill="rgb(229,130,6)"/><text x="54.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lamb..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (312 samples, 39.54%)</title><rect x="51" y="260" width="467" height="15" fill="rgb(220,174,53)"/><text x="54.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntim..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (312 samples, 39.54%)</title><rect x="51" y="276" width="467" height="15" fill="rgb(237,102,2)"/><text x="54.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntim..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (311 samples, 39.42%)</title><rect x="53" y="292" width="465" height="15" fill="rgb(250,151,44)"/><text x="56.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (311 samples, 39.42%)</title><rect x="53" y="308" width="465" height="15" fill="rgb(227,93,40)"/><text x="56.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxrunt..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (311 samples, 39.42%)</title><rect x="53" y="324" width="465" height="15" fill="rgb(221,20,37)"/><text x="56.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnx..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (220 samples, 27.88%)</title><rect x="189" y="340" width="329" height="15" fill="rgb(253,225,7)"/><text x="192.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.27%)</title><rect x="503" y="356" width="15" height="15" fill="rgb(226,69,12)"/><text x="506.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (6 samples, 0.76%)</title><rect x="509" y="372" width="9" height="15" fill="rgb(235,39,35)"/><text x="512.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.51%)</title><rect x="512" y="388" width="6" height="15" fill="rgb(222,81,28)"/><text x="515.00" y="398.50"></text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (319 samples, 40.43%)</title><rect x="42" y="68" width="477" height="15" fill="rgb(244,170,16)"/><text x="45.00" y="78.50">profile_ort (bench_AdaBoostRegressor_default_b_reg_n_estimators5_..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (319 samples, 40.43%)</title><rect x="42" y="84" width="477" height="15" fill="rgb(218,175,29)"/><text x="45.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (319 samples, 40.43%)</title><rect x="42" y="100" width="477" height="15" fill="rgb(254,26,1)"/><text x="45.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (318 samples, 40.30%)</title><rect x="44" y="116" width="475" height="15" fill="rgb(218,138,41)"/><text x="47.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (318 samples, 40.30%)</title><rect x="44" y="132" width="475" height="15" fill="rgb(221,139,34)"/><text x="47.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (317 samples, 40.18%)</title><rect x="45" y="148" width="474" height="15" fill="rgb(211,119,11)"/><text x="48.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (317 samples, 40.18%)</title><rect x="45" y="164" width="474" height="15" fill="rgb(226,197,29)"/><text x="48.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (315 samples, 39.92%)</title><rect x="48" y="180" width="471" height="15" fill="rgb(213,116,26)"/><text x="51.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (315 samples, 39.92%)</title><rect x="48" y="196" width="471" height="15" fill="rgb(236,30,9)"/><text x="51.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (313 samples, 39.67%)</title><rect x="51" y="212" width="468" height="15" fill="rgb(238,62,49)"/><text x="54.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (313 samples, 39.67%)</title><rect x="51" y="228" width="468" height="15" fill="rgb(242,171,30)"/><text x="54.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::add..</text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="518" y="244" width="1" height="15" fill="rgb(215,59,15)"/><text x="521.00" y="254.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="518" y="260" width="1" height="15" fill="rgb(250,74,19)"/><text x="521.00" y="270.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.13%)</title><rect x="536" y="196" width="1" height="15" fill="rgb(213,198,51)"/><text x="539.00" y="206.50"></text></g><g><title>LONG_getitem (arraytypes.c.src) (5 samples, 0.63%)</title><rect x="549" y="260" width="8" height="15" fill="rgb(233,41,33)"/><text x="552.00" y="270.50"></text></g><g><title>0x7ff88100e800 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="555" y="276" width="2" height="15" fill="rgb(235,49,9)"/><text x="558.00" y="286.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="557" y="260" width="1" height="15" fill="rgb(228,185,9)"/><text x="560.00" y="270.50"></text></g><g><title>0x7ff881e0c103 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="557" y="276" width="1" height="15" fill="rgb(254,138,3)"/><text x="560.00" y="286.50"></text></g><g><title>PyArray_ToList (convert.c) (15 samples, 1.90%)</title><rect x="545" y="228" width="22" height="15" fill="rgb(253,131,14)"/><text x="548.00" y="238.50">P..</text></g><g><title>recursive_tolist (convert.c) (15 samples, 1.90%)</title><rect x="545" y="244" width="22" height="15" fill="rgb(217,216,36)"/><text x="548.00" y="254.50">r..</text></g><g><title>recursive_tolist (convert.c) (6 samples, 0.76%)</title><rect x="558" y="260" width="9" height="15" fill="rgb(249,142,23)"/><text x="561.00" y="270.50"></text></g><g><title>PyArray_GETITEM (ndarraytypes.h) (1 samples, 0.13%)</title><rect x="566" y="276" width="1" height="15" fill="rgb(243,39,40)"/><text x="569.00" y="286.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (1 samples, 0.13%)</title><rect x="567" y="244" width="2" height="15" fill="rgb(223,164,24)"/><text x="570.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.13%)</title><rect x="567" y="260" width="2" height="15" fill="rgb(230,141,38)"/><text x="570.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (2 samples, 0.25%)</title><rect x="569" y="244" width="3" height="15" fill="rgb(237,62,34)"/><text x="572.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.25%)</title><rect x="569" y="260" width="3" height="15" fill="rgb(248,177,45)"/><text x="572.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.13%)</title><rect x="570" y="276" width="2" height="15" fill="rgb(250,153,41)"/><text x="573.00" y="286.50"></text></g><g><title>PyArray_MapIterSwapAxes (mapping.c) (2 samples, 0.25%)</title><rect x="572" y="244" width="3" height="15" fill="rgb(227,218,16)"/><text x="575.00" y="254.50"></text></g><g><title>PyArray_Transpose (shape.c) (2 samples, 0.25%)</title><rect x="572" y="260" width="3" height="15" fill="rgb(238,215,15)"/><text x="575.00" y="270.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.13%)</title><rect x="573" y="276" width="2" height="15" fill="rgb(223,114,31)"/><text x="576.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.13%)</title><rect x="573" y="292" width="2" height="15" fill="rgb(227,91,38)"/><text x="576.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.13%)</title><rect x="573" y="308" width="2" height="15" fill="rgb(218,52,32)"/><text x="576.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.13%)</title><rect x="573" y="324" width="2" height="15" fill="rgb(230,213,19)"/><text x="576.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="573" y="340" width="2" height="15" fill="rgb(216,22,1)"/><text x="576.00" y="350.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="576" y="260" width="2" height="15" fill="rgb(222,45,24)"/><text x="579.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (3 samples, 0.38%)</title><rect x="575" y="244" width="4" height="15" fill="rgb(250,179,18)"/><text x="578.00" y="254.50"></text></g><g><title>check_and_adjust_index (common.h) (1 samples, 0.13%)</title><rect x="578" y="260" width="1" height="15" fill="rgb(221,218,54)"/><text x="581.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (29 samples, 3.68%)</title><rect x="582" y="276" width="44" height="15" fill="rgb(207,76,37)"/><text x="585.00" y="286.50">PyAr..</text></g><g><title>setArrayFromSequence (ctors.c) (29 samples, 3.68%)</title><rect x="582" y="292" width="44" height="15" fill="rgb(246,73,41)"/><text x="585.00" y="302.50">setA..</text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (25 samples, 3.17%)</title><rect x="588" y="308" width="38" height="15" fill="rgb(223,40,44)"/><text x="591.00" y="318.50">PyA..</text></g><g><title>LONG_setitem (arraytypes.c.src) (24 samples, 3.04%)</title><rect x="590" y="324" width="36" height="15" fill="rgb(229,146,38)"/><text x="593.00" y="334.50">LON..</text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (9 samples, 1.14%)</title><rect x="612" y="340" width="14" height="15" fill="rgb(206,86,22)"/><text x="615.00" y="350.50"></text></g><g><title>0x7ff88100d740 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="624" y="356" width="2" height="15" fill="rgb(209,19,30)"/><text x="627.00" y="366.50"></text></g><g><title>0x7ff88100e0a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="651" y="340" width="2" height="15" fill="rgb(248,129,13)"/><text x="654.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (12 samples, 1.52%)</title><rect x="653" y="340" width="18" height="15" fill="rgb(241,44,8)"/><text x="656.00" y="350.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c) (2 samples, 0.25%)</title><rect x="668" y="356" width="3" height="15" fill="rgb(214,148,38)"/><text x="671.00" y="366.50"></text></g><g><title>0x7ff88100e0a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="696" y="356" width="1" height="15" fill="rgb(217,215,35)"/><text x="699.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (51 samples, 6.46%)</title><rect x="629" y="324" width="76" height="15" fill="rgb(237,30,53)"/><text x="632.00" y="334.50">PyArray_..</text></g><g><title>_array_find_python_scalar_type (common.c) (23 samples, 2.92%)</title><rect x="671" y="340" width="34" height="15" fill="rgb(224,27,35)"/><text x="674.00" y="350.50">_a..</text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (5 samples, 0.63%)</title><rect x="697" y="356" width="8" height="15" fill="rgb(253,223,28)"/><text x="700.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (53 samples, 6.72%)</title><rect x="627" y="292" width="79" height="15" fill="rgb(213,167,37)"/><text x="630.00" y="302.50">PyArray_D..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (53 samples, 6.72%)</title><rect x="627" y="308" width="79" height="15" fill="rgb(221,169,47)"/><text x="630.00" y="318.50">PyArray_D..</text></g><g><title>PyArray_LookupSpecial_OnInstance (get_attr_string.h) (1 samples, 0.13%)</title><rect x="705" y="324" width="1" height="15" fill="rgb(220,111,24)"/><text x="708.00" y="334.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (77 samples, 9.76%)</title><rect x="626" y="276" width="115" height="15" fill="rgb(212,129,24)"/><text x="629.00" y="286.50">PyArray_GetArr..</text></g><g><title>discover_dimensions (ctors.c) (23 samples, 2.92%)</title><rect x="706" y="292" width="35" height="15" fill="rgb(208,137,3)"/><text x="709.00" y="302.50">di..</text></g><g><title>discover_dimensions (ctors.c) (16 samples, 2.03%)</title><rect x="717" y="308" width="24" height="15" fill="rgb(224,16,50)"/><text x="720.00" y="318.50">d..</text></g><g><title>0x7ff88100ea40 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.38%)</title><rect x="736" y="324" width="5" height="15" fill="rgb(223,3,40)"/><text x="739.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="741" y="292" width="1" height="15" fill="rgb(205,127,0)"/><text x="744.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c) (108 samples, 13.69%)</title><rect x="582" y="260" width="162" height="15" fill="rgb(226,163,35)"/><text x="585.00" y="270.50">PyArray_FromAny (cto..</text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.25%)</title><rect x="741" y="276" width="3" height="15" fill="rgb(247,212,22)"/><text x="744.00" y="286.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.13%)</title><rect x="742" y="292" width="2" height="15" fill="rgb(205,221,6)"/><text x="745.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.13%)</title><rect x="742" y="308" width="2" height="15" fill="rgb(229,180,20)"/><text x="745.00" y="318.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.13%)</title><rect x="742" y="324" width="2" height="15" fill="rgb(232,100,31)"/><text x="745.00" y="334.50"></text></g><g><title>0x7ff88100d2d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="742" y="340" width="2" height="15" fill="rgb(218,161,40)"/><text x="745.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (136 samples, 17.24%)</title><rect x="542" y="212" width="203" height="15" fill="rgb(217,129,7)"/><text x="545.00" y="222.50">_run (mlprodict/onnxrt/ops..</text></g><g><title>array_subscript (mapping.c) (119 samples, 15.08%)</title><rect x="567" y="228" width="178" height="15" fill="rgb(232,113,19)"/><text x="570.00" y="238.50">array_subscript (mappin..</text></g><g><title>prepare_index (mapping.c) (111 samples, 14.07%)</title><rect x="579" y="244" width="166" height="15" fill="rgb(223,24,2)"/><text x="582.00" y="254.50">prepare_index (mappin..</text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.13%)</title><rect x="744" y="260" width="1" height="15" fill="rgb(251,229,48)"/><text x="747.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.13%)</title><rect x="744" y="276" width="1" height="15" fill="rgb(220,17,46)"/><text x="747.00" y="286.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.13%)</title><rect x="745" y="228" width="2" height="15" fill="rgb(245,72,40)"/><text x="748.00" y="238.50"></text></g><g><title>0x7ff881e0c1ef (libc-2.29.so) (1 samples, 0.13%)</title><rect x="745" y="244" width="2" height="15" fill="rgb(231,193,1)"/><text x="748.00" y="254.50"></text></g><g><title>FLOAT_add (loops.c.src) (4 samples, 0.51%)</title><rect x="751" y="388" width="6" height="15" fill="rgb(233,29,13)"/><text x="754.00" y="398.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.13%)</title><rect x="756" y="404" width="1" height="15" fill="rgb(217,83,33)"/><text x="759.00" y="414.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c) (1 samples, 0.13%)</title><rect x="757" y="388" width="2" height="15" fill="rgb(252,206,7)"/><text x="760.00" y="398.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src) (1 samples, 0.13%)</title><rect x="757" y="404" width="2" height="15" fill="rgb(228,20,24)"/><text x="760.00" y="414.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py) (10 samples, 1.27%)</title><rect x="745" y="212" width="15" height="15" fill="rgb(217,5,0)"/><text x="748.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (9 samples, 1.14%)</title><rect x="747" y="228" width="13" height="15" fill="rgb(222,197,42)"/><text x="750.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 1.14%)</title><rect x="747" y="244" width="13" height="15" fill="rgb(212,209,52)"/><text x="750.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (9 samples, 1.14%)</title><rect x="747" y="260" width="13" height="15" fill="rgb(225,149,49)"/><text x="750.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (9 samples, 1.14%)</title><rect x="747" y="276" width="13" height="15" fill="rgb(231,227,28)"/><text x="750.00" y="286.50"></text></g><g><title>array_cumsum (methods.c) (8 samples, 1.01%)</title><rect x="748" y="292" width="12" height="15" fill="rgb(222,138,42)"/><text x="751.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c) (7 samples, 0.89%)</title><rect x="750" y="308" width="10" height="15" fill="rgb(213,200,39)"/><text x="753.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (7 samples, 0.89%)</title><rect x="750" y="324" width="10" height="15" fill="rgb(226,68,8)"/><text x="753.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (7 samples, 0.89%)</title><rect x="750" y="340" width="10" height="15" fill="rgb(209,216,26)"/><text x="753.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (7 samples, 0.89%)</title><rect x="750" y="356" width="10" height="15" fill="rgb(222,198,5)"/><text x="753.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (7 samples, 0.89%)</title><rect x="750" y="372" width="10" height="15" fill="rgb(248,81,26)"/><text x="753.00" y="382.50"></text></g><g><title>npyiter_iternext_itflags0_dims1_iters2 (nditer_templ.c.src) (1 samples, 0.13%)</title><rect x="759" y="388" width="1" height="15" fill="rgb(217,110,46)"/><text x="762.00" y="398.50"></text></g><g><title>_choose_dispatcher (numpy/core/fromnumeric.py) (2 samples, 0.25%)</title><rect x="763" y="260" width="3" height="15" fill="rgb(250,76,47)"/><text x="766.00" y="270.50"></text></g><g><title>array_item (mapping.c) (2 samples, 0.25%)</title><rect x="763" y="276" width="3" height="15" fill="rgb(230,159,31)"/><text x="766.00" y="286.50"></text></g><g><title>array_item_asarray (mapping.c) (1 samples, 0.13%)</title><rect x="765" y="292" width="1" height="15" fill="rgb(207,152,18)"/><text x="768.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.13%)</title><rect x="765" y="308" width="1" height="15" fill="rgb(254,14,32)"/><text x="768.00" y="318.50"></text></g><g><title>sprintf (libc-2.29.so) (1 samples, 0.13%)</title><rect x="765" y="324" width="1" height="15" fill="rgb(233,95,9)"/><text x="768.00" y="334.50"></text></g><g><title>0x7ff881ddcab0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="765" y="340" width="1" height="15" fill="rgb(251,141,4)"/><text x="768.00" y="350.50"></text></g><g><title>0x7ff881dcfc6e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="765" y="356" width="1" height="15" fill="rgb(253,68,48)"/><text x="768.00" y="366.50"></text></g><g><title>0x7ff881e0bdc9 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="790" y="324" width="2" height="15" fill="rgb(248,70,34)"/><text x="793.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size4 (lowlevel_strided_loops.c.src) (2 samples, 0.25%)</title><rect x="792" y="388" width="3" height="15" fill="rgb(229,215,34)"/><text x="795.00" y="398.50"></text></g><g><title>PyArray_NewCopy (convert.c) (4 samples, 0.51%)</title><rect x="792" y="340" width="6" height="15" fill="rgb(222,42,9)"/><text x="795.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (4 samples, 0.51%)</title><rect x="792" y="356" width="6" height="15" fill="rgb(247,81,15)"/><text x="795.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (4 samples, 0.51%)</title><rect x="792" y="372" width="6" height="15" fill="rgb(220,81,17)"/><text x="795.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size8 (lowlevel_strided_loops.c.src) (2 samples, 0.25%)</title><rect x="795" y="388" width="3" height="15" fill="rgb(240,33,42)"/><text x="798.00" y="398.50"></text></g><g><title>PyArray_ConvertToCommonType (convert_datatype.c) (5 samples, 0.63%)</title><rect x="792" y="324" width="7" height="15" fill="rgb(253,226,37)"/><text x="795.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="798" y="340" width="1" height="15" fill="rgb(239,62,49)"/><text x="801.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.13%)</title><rect x="798" y="356" width="1" height="15" fill="rgb(218,84,30)"/><text x="801.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.13%)</title><rect x="798" y="372" width="1" height="15" fill="rgb(248,102,14)"/><text x="801.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="799" y="324" width="2" height="15" fill="rgb(244,167,21)"/><text x="802.00" y="334.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.13%)</title><rect x="799" y="340" width="2" height="15" fill="rgb(226,27,10)"/><text x="802.00" y="350.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.13%)</title><rect x="799" y="356" width="2" height="15" fill="rgb(232,71,24)"/><text x="802.00" y="366.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.13%)</title><rect x="799" y="372" width="2" height="15" fill="rgb(252,111,50)"/><text x="802.00" y="382.50"></text></g><g><title>0x7ff881debf71 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="799" y="388" width="2" height="15" fill="rgb(241,159,29)"/><text x="802.00" y="398.50"></text></g><g><title>0x7ff881debf71 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="801" y="340" width="1" height="15" fill="rgb(209,34,51)"/><text x="804.00" y="350.50"></text></g><g><title>choose (&lt;__array_function__ internals&gt;) (27 samples, 3.42%)</title><rect x="763" y="228" width="41" height="15" fill="rgb(231,10,7)"/><text x="766.00" y="238.50">cho..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (27 samples, 3.42%)</title><rect x="763" y="244" width="41" height="15" fill="rgb(248,67,36)"/><text x="766.00" y="254.50">arr..</text></g><g><title>choose (numpy/core/fromnumeric.py) (25 samples, 3.17%)</title><rect x="766" y="260" width="38" height="15" fill="rgb(220,123,41)"/><text x="769.00" y="270.50">cho..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (24 samples, 3.04%)</title><rect x="768" y="276" width="36" height="15" fill="rgb(236,118,30)"/><text x="771.00" y="286.50">_wr..</text></g><g><title>array_choose (methods.c) (23 samples, 2.92%)</title><rect x="769" y="292" width="35" height="15" fill="rgb(208,66,9)"/><text x="772.00" y="302.50">ar..</text></g><g><title>PyArray_Choose (item_selection.c) (23 samples, 2.92%)</title><rect x="769" y="308" width="35" height="15" fill="rgb(232,184,30)"/><text x="772.00" y="318.50">Py..</text></g><g><title>arraymultiter_dealloc (iterators.c) (2 samples, 0.25%)</title><rect x="801" y="324" width="3" height="15" fill="rgb(218,16,40)"/><text x="804.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="802" y="340" width="2" height="15" fill="rgb(250,127,38)"/><text x="805.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py) (31 samples, 3.93%)</title><rect x="760" y="212" width="47" height="15" fill="rgb(223,89,12)"/><text x="763.00" y="222.50">_run..</text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;) (2 samples, 0.25%)</title><rect x="804" y="228" width="3" height="15" fill="rgb(215,205,44)"/><text x="807.00" y="238.50"></text></g><g><title>_swapaxes_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.13%)</title><rect x="805" y="244" width="2" height="15" fill="rgb(253,148,51)"/><text x="808.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_less.py) (3 samples, 0.38%)</title><rect x="807" y="212" width="4" height="15" fill="rgb(229,35,40)"/><text x="810.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.25%)</title><rect x="808" y="228" width="3" height="15" fill="rgb(223,140,5)"/><text x="811.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.25%)</title><rect x="808" y="244" width="3" height="15" fill="rgb(236,65,45)"/><text x="811.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.25%)</title><rect x="808" y="260" width="3" height="15" fill="rgb(224,8,7)"/><text x="811.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.25%)</title><rect x="808" y="276" width="3" height="15" fill="rgb(219,106,30)"/><text x="811.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.13%)</title><rect x="810" y="292" width="1" height="15" fill="rgb(243,64,25)"/><text x="813.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.13%)</title><rect x="810" y="308" width="1" height="15" fill="rgb(210,99,41)"/><text x="813.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="810" y="324" width="1" height="15" fill="rgb(240,120,37)"/><text x="813.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="810" y="340" width="1" height="15" fill="rgb(241,145,28)"/><text x="813.00" y="350.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.25%)</title><rect x="811" y="244" width="3" height="15" fill="rgb(234,184,47)"/><text x="814.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.25%)</title><rect x="811" y="260" width="3" height="15" fill="rgb(226,13,29)"/><text x="814.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.25%)</title><rect x="811" y="276" width="3" height="15" fill="rgb(220,139,46)"/><text x="814.00" y="286.50"></text></g><g><title>0x7ff881e0bd94 (libc-2.29.so) (2 samples, 0.25%)</title><rect x="811" y="292" width="3" height="15" fill="rgb(237,126,54)"/><text x="814.00" y="302.50"></text></g><g><title>PyArray_IterAllButAxis (iterators.c) (1 samples, 0.13%)</title><rect x="823" y="372" width="2" height="15" fill="rgb(243,196,45)"/><text x="826.00" y="382.50"></text></g><g><title>PyArray_DIM (ndarraytypes.h) (1 samples, 0.13%)</title><rect x="823" y="388" width="2" height="15" fill="rgb(250,129,27)"/><text x="826.00" y="398.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (8 samples, 1.01%)</title><rect x="816" y="260" width="12" height="15" fill="rgb(245,168,20)"/><text x="819.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 0.89%)</title><rect x="817" y="276" width="11" height="15" fill="rgb(213,228,44)"/><text x="820.00" y="286.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py) (7 samples, 0.89%)</title><rect x="817" y="292" width="11" height="15" fill="rgb(244,76,37)"/><text x="820.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (7 samples, 0.89%)</title><rect x="817" y="308" width="11" height="15" fill="rgb(216,32,50)"/><text x="820.00" y="318.50"></text></g><g><title>array_argpartition (methods.c) (7 samples, 0.89%)</title><rect x="817" y="324" width="11" height="15" fill="rgb(219,37,13)"/><text x="820.00" y="334.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c) (7 samples, 0.89%)</title><rect x="817" y="340" width="11" height="15" fill="rgb(222,63,6)"/><text x="820.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c) (7 samples, 0.89%)</title><rect x="817" y="356" width="11" height="15" fill="rgb(207,198,25)"/><text x="820.00" y="366.50"></text></g><g><title>aintroselect_float (selection.c.src) (2 samples, 0.25%)</title><rect x="825" y="372" width="3" height="15" fill="rgb(212,113,50)"/><text x="828.00" y="382.50"></text></g><g><title>FLOAT_LT (npysort_common.h) (1 samples, 0.13%)</title><rect x="826" y="388" width="2" height="15" fill="rgb(243,41,1)"/><text x="829.00" y="398.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (8 samples, 1.01%)</title><rect x="828" y="260" width="12" height="15" fill="rgb(235,80,15)"/><text x="831.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 1.01%)</title><rect x="828" y="276" width="12" height="15" fill="rgb(225,4,8)"/><text x="831.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (8 samples, 1.01%)</title><rect x="828" y="292" width="12" height="15" fill="rgb(207,134,44)"/><text x="831.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (8 samples, 1.01%)</title><rect x="828" y="308" width="12" height="15" fill="rgb(219,138,5)"/><text x="831.00" y="318.50"></text></g><g><title>array_argsort (methods.c) (8 samples, 1.01%)</title><rect x="828" y="324" width="12" height="15" fill="rgb(240,115,25)"/><text x="831.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (7 samples, 0.89%)</title><rect x="829" y="340" width="11" height="15" fill="rgb(220,19,50)"/><text x="832.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c) (7 samples, 0.89%)</title><rect x="829" y="356" width="11" height="15" fill="rgb(210,109,8)"/><text x="832.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src) (2 samples, 0.25%)</title><rect x="837" y="372" width="3" height="15" fill="rgb(239,158,4)"/><text x="840.00" y="382.50"></text></g><g><title>FLOAT_LT (npysort_common.h) (1 samples, 0.13%)</title><rect x="838" y="388" width="2" height="15" fill="rgb(215,154,46)"/><text x="841.00" y="398.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c) (10 samples, 1.27%)</title><rect x="840" y="276" width="14" height="15" fill="rgb(230,46,41)"/><text x="843.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h) (5 samples, 0.63%)</title><rect x="847" y="292" width="7" height="15" fill="rgb(254,212,5)"/><text x="850.00" y="302.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (5 samples, 0.63%)</title><rect x="854" y="292" width="8" height="15" fill="rgb(211,136,5)"/><text x="857.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (5 samples, 0.63%)</title><rect x="854" y="308" width="8" height="15" fill="rgb(209,50,34)"/><text x="857.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 0.63%)</title><rect x="854" y="324" width="8" height="15" fill="rgb(231,144,11)"/><text x="857.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 0.63%)</title><rect x="854" y="340" width="8" height="15" fill="rgb(228,220,39)"/><text x="857.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.25%)</title><rect x="859" y="356" width="3" height="15" fill="rgb(247,227,50)"/><text x="862.00" y="366.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.13%)</title><rect x="862" y="292" width="1" height="15" fill="rgb(214,101,24)"/><text x="865.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.13%)</title><rect x="862" y="308" width="1" height="15" fill="rgb(243,88,53)"/><text x="865.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.13%)</title><rect x="862" y="324" width="1" height="15" fill="rgb(247,148,23)"/><text x="865.00" y="334.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.13%)</title><rect x="862" y="340" width="1" height="15" fill="rgb(223,108,47)"/><text x="865.00" y="350.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.13%)</title><rect x="862" y="356" width="1" height="15" fill="rgb(251,114,1)"/><text x="865.00" y="366.50"></text></g><g><title>npy_is_aligned (common.h) (1 samples, 0.13%)</title><rect x="862" y="372" width="1" height="15" fill="rgb(220,210,1)"/><text x="865.00" y="382.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (7 samples, 0.89%)</title><rect x="854" y="276" width="11" height="15" fill="rgb(245,214,18)"/><text x="857.00" y="286.50"></text></g><g><title>mapiter_fill_info (mapping.c) (1 samples, 0.13%)</title><rect x="863" y="292" width="2" height="15" fill="rgb(221,65,4)"/><text x="866.00" y="302.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="904" y="292" width="1" height="15" fill="rgb(232,161,29)"/><text x="907.00" y="302.50"></text></g><g><title>array_subscript (mapping.c) (45 samples, 5.70%)</title><rect x="840" y="260" width="67" height="15" fill="rgb(220,202,36)"/><text x="843.00" y="270.50">array_s..</text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (28 samples, 3.55%)</title><rect x="865" y="276" width="42" height="15" fill="rgb(232,216,45)"/><text x="868.00" y="286.50">map..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.13%)</title><rect x="905" y="292" width="2" height="15" fill="rgb(216,105,30)"/><text x="908.00" y="302.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.13%)</title><rect x="905" y="308" width="2" height="15" fill="rgb(238,147,6)"/><text x="908.00" y="318.50"></text></g><g><title>long_subtract (scalarmath.c.src) (1 samples, 0.13%)</title><rect x="907" y="260" width="1" height="15" fill="rgb(222,109,27)"/><text x="910.00" y="270.50"></text></g><g><title>binop_should_defer (binop_override.h) (1 samples, 0.13%)</title><rect x="907" y="276" width="1" height="15" fill="rgb(230,201,36)"/><text x="910.00" y="286.50"></text></g><g><title>PyArray_GetPriority (multiarraymodule.c) (1 samples, 0.13%)</title><rect x="907" y="292" width="1" height="15" fill="rgb(247,105,32)"/><text x="910.00" y="302.50"></text></g><g><title>is_anyscalar_exact (scalartypes.c.src) (1 samples, 0.13%)</title><rect x="907" y="308" width="1" height="15" fill="rgb(207,34,44)"/><text x="910.00" y="318.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.13%)</title><rect x="907" y="324" width="1" height="15" fill="rgb(238,93,28)"/><text x="910.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="908" y="292" width="2" height="15" fill="rgb(209,101,22)"/><text x="911.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="908" y="308" width="2" height="15" fill="rgb(223,75,46)"/><text x="911.00" y="318.50"></text></g><g><title>FLOAT_negative (loops.c.src) (1 samples, 0.13%)</title><rect x="908" y="324" width="2" height="15" fill="rgb(205,133,31)"/><text x="911.00" y="334.50"></text></g><g><title>run_unary_simd_negative_FLOAT (simd.inc.src) (1 samples, 0.13%)</title><rect x="908" y="340" width="2" height="15" fill="rgb(226,133,34)"/><text x="911.00" y="350.50"></text></g><g><title>sse2_negative_FLOAT (simd.inc.src) (1 samples, 0.13%)</title><rect x="908" y="356" width="2" height="15" fill="rgb(219,25,3)"/><text x="911.00" y="366.50"></text></g><g><title>_mm_xor_ps (xmmintrin.h) (1 samples, 0.13%)</title><rect x="908" y="372" width="2" height="15" fill="rgb(251,138,31)"/><text x="911.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (67 samples, 8.49%)</title><rect x="811" y="212" width="100" height="15" fill="rgb(253,154,36)"/><text x="814.00" y="222.50">_run (mlprod..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (67 samples, 8.49%)</title><rect x="811" y="228" width="100" height="15" fill="rgb(254,12,15)"/><text x="814.00" y="238.50">_common_run ..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py) (65 samples, 8.24%)</title><rect x="814" y="244" width="97" height="15" fill="rgb(230,87,51)"/><text x="817.00" y="254.50">topk_sorted..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.25%)</title><rect x="908" y="260" width="3" height="15" fill="rgb(226,72,1)"/><text x="911.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.25%)</title><rect x="908" y="276" width="3" height="15" fill="rgb(226,160,1)"/><text x="911.00" y="286.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.13%)</title><rect x="910" y="292" width="1" height="15" fill="rgb(212,74,32)"/><text x="913.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.13%)</title><rect x="911" y="228" width="2" height="15" fill="rgb(226,116,24)"/><text x="914.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.13%)</title><rect x="911" y="244" width="2" height="15" fill="rgb(218,0,46)"/><text x="914.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.13%)</title><rect x="911" y="260" width="2" height="15" fill="rgb(254,32,36)"/><text x="914.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="911" y="276" width="2" height="15" fill="rgb(206,220,48)"/><text x="914.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="911" y="292" width="2" height="15" fill="rgb(214,171,34)"/><text x="914.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.13%)</title><rect x="911" y="308" width="2" height="15" fill="rgb(251,130,46)"/><text x="914.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.13%)</title><rect x="911" y="324" width="2" height="15" fill="rgb(241,211,26)"/><text x="914.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.13%)</title><rect x="911" y="340" width="2" height="15" fill="rgb(212,195,51)"/><text x="914.00" y="350.50"></text></g><g><title>argmin (&lt;__array_function__ internals&gt;) (1 samples, 0.13%)</title><rect x="914" y="276" width="2" height="15" fill="rgb(249,165,7)"/><text x="917.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.13%)</title><rect x="914" y="292" width="2" height="15" fill="rgb(214,68,33)"/><text x="917.00" y="302.50"></text></g><g><title>argmin (numpy/core/fromnumeric.py) (1 samples, 0.13%)</title><rect x="914" y="308" width="2" height="15" fill="rgb(240,134,13)"/><text x="917.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.13%)</title><rect x="914" y="324" width="2" height="15" fill="rgb(251,1,16)"/><text x="917.00" y="334.50"></text></g><g><title>array_argmin (methods.c) (1 samples, 0.13%)</title><rect x="914" y="340" width="2" height="15" fill="rgb(245,115,40)"/><text x="917.00" y="350.50"></text></g><g><title>PyArray_ArgMin (calculation.c) (1 samples, 0.13%)</title><rect x="914" y="356" width="2" height="15" fill="rgb(238,127,12)"/><text x="917.00" y="366.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="914" y="372" width="2" height="15" fill="rgb(235,223,15)"/><text x="917.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (3 samples, 0.38%)</title><rect x="913" y="228" width="4" height="15" fill="rgb(216,136,50)"/><text x="916.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (3 samples, 0.38%)</title><rect x="913" y="244" width="4" height="15" fill="rgb(249,8,20)"/><text x="916.00" y="254.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py) (3 samples, 0.38%)</title><rect x="913" y="260" width="4" height="15" fill="rgb(231,150,45)"/><text x="916.00" y="270.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.13%)</title><rect x="916" y="276" width="1" height="15" fill="rgb(254,167,36)"/><text x="919.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.13%)</title><rect x="916" y="292" width="1" height="15" fill="rgb(223,18,15)"/><text x="919.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.13%)</title><rect x="916" y="308" width="1" height="15" fill="rgb(253,83,10)"/><text x="919.00" y="318.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="916" y="324" width="1" height="15" fill="rgb(235,139,13)"/><text x="919.00" y="334.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h) (1 samples, 0.13%)</title><rect x="917" y="292" width="2" height="15" fill="rgb(231,41,12)"/><text x="920.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple) (1 samples, 0.13%)</title><rect x="917" y="308" width="2" height="15" fill="rgb(229,89,48)"/><text x="920.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple) (1 samples, 0.13%)</title><rect x="917" y="324" width="2" height="15" fill="rgb(240,20,20)"/><text x="920.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;, false&gt;::_Head_base (tuple) (1 samples, 0.13%)</title><rect x="917" y="340" width="2" height="15" fill="rgb(234,145,14)"/><text x="920.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;::type_caster (cast.h) (1 samples, 0.13%)</title><rect x="917" y="356" width="2" height="15" fill="rgb(241,229,40)"/><text x="920.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeTreeEnsembleRegressorFloat&gt;::type_caster_base (cast.h) (1 samples, 0.13%)</title><rect x="917" y="372" width="2" height="15" fill="rgb(217,37,35)"/><text x="920.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeTreeEnsembleRegressorFloat&gt;::type_caster_base (cast.h) (1 samples, 0.13%)</title><rect x="917" y="388" width="2" height="15" fill="rgb(244,205,45)"/><text x="920.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (1 samples, 0.13%)</title><rect x="917" y="404" width="2" height="15" fill="rgb(221,12,32)"/><text x="920.00" y="414.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h) (1 samples, 0.13%)</title><rect x="917" y="420" width="2" height="15" fill="rgb(229,117,25)"/><text x="920.00" y="430.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.13%)</title><rect x="917" y="436" width="2" height="15" fill="rgb(207,45,5)"/><text x="920.00" y="446.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (1 samples, 0.13%)</title><rect x="917" y="452" width="2" height="15" fill="rgb(231,206,1)"/><text x="920.00" y="462.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h) (1 samples, 0.13%)</title><rect x="917" y="468" width="2" height="15" fill="rgb(216,129,51)"/><text x="920.00" y="478.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 0.13%)</title><rect x="917" y="484" width="2" height="15" fill="rgb(226,173,27)"/><text x="920.00" y="494.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.13%)</title><rect x="917" y="500" width="2" height="15" fill="rgb(207,170,18)"/><text x="920.00" y="510.50"></text></g><g><title>pybind11::array::array (numpy.h) (1 samples, 0.13%)</title><rect x="917" y="516" width="2" height="15" fill="rgb(226,103,21)"/><text x="920.00" y="526.50"></text></g><g><title>pybind11::array::c_strides (numpy.h) (1 samples, 0.13%)</title><rect x="917" y="532" width="2" height="15" fill="rgb(219,47,37)"/><text x="920.00" y="542.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (stl_vector.h) (1 samples, 0.13%)</title><rect x="917" y="548" width="2" height="15" fill="rgb(224,144,13)"/><text x="920.00" y="558.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_initialize (stl_vector.h) (1 samples, 0.13%)</title><rect x="917" y="564" width="2" height="15" fill="rgb(250,14,15)"/><text x="920.00" y="574.50"></text></g><g><title>std::__uninitialized_fill_n_a&lt;long*, unsigned long, long, long&gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="917" y="580" width="2" height="15" fill="rgb(221,57,27)"/><text x="920.00" y="590.50"></text></g><g><title>std::uninitialized_fill_n&lt;long*, unsigned long, long&gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="917" y="596" width="2" height="15" fill="rgb(207,32,6)"/><text x="920.00" y="606.50"></text></g><g><title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;long*, unsigned long, long&gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="917" y="612" width="2" height="15" fill="rgb(207,90,9)"/><text x="920.00" y="622.50"></text></g><g><title>std::fill_n&lt;long*, unsigned long, long&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="917" y="628" width="2" height="15" fill="rgb(227,65,34)"/><text x="920.00" y="638.50"></text></g><g><title>std::__fill_n_a&lt;long*, unsigned long, long&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="917" y="644" width="2" height="15" fill="rgb(242,163,33)"/><text x="920.00" y="654.50"></text></g><g><title>0x7ff84bdf2ea0 (libgomp.so.1.0.0) (2 samples, 0.25%)</title><rect x="919" y="484" width="3" height="15" fill="rgb(215,226,31)"/><text x="922.00" y="494.50"></text></g><g><title>0x7ff84bdf2ea9 (libgomp.so.1.0.0) (11 samples, 1.39%)</title><rect x="922" y="484" width="16" height="15" fill="rgb(249,4,42)"/><text x="925.00" y="494.50"></text></g><g><title>0x7ff84bdf2eab (libgomp.so.1.0.0) (8 samples, 1.01%)</title><rect x="938" y="484" width="12" height="15" fill="rgb(209,126,17)"/><text x="941.00" y="494.50"></text></g><g><title>0x7ff84bdf2ead (libgomp.so.1.0.0) (11 samples, 1.39%)</title><rect x="950" y="484" width="17" height="15" fill="rgb(244,74,54)"/><text x="953.00" y="494.50"></text></g><g><title>0x7ff84bdf1ab9 (libgomp.so.1.0.0) (33 samples, 4.18%)</title><rect x="919" y="468" width="49" height="15" fill="rgb(244,49,0)"/><text x="922.00" y="478.50">0x7f..</text></g><g><title>0x7ff84bdf3001 (libgomp.so.1.0.0) (1 samples, 0.13%)</title><rect x="967" y="484" width="1" height="15" fill="rgb(234,49,17)"/><text x="970.00" y="494.50"></text></g><g><title>0x7ff84bdf2cfb (libgomp.so.1.0.0) (1 samples, 0.13%)</title><rect x="968" y="500" width="2" height="15" fill="rgb(212,92,48)"/><text x="971.00" y="510.50"></text></g><g><title>0x7ff84bdf0daa (libgomp.so.1.0.0) (3 samples, 0.38%)</title><rect x="968" y="484" width="5" height="15" fill="rgb(253,187,15)"/><text x="971.00" y="494.50"></text></g><g><title>0x7ff84bdf2cfd (libgomp.so.1.0.0) (2 samples, 0.25%)</title><rect x="970" y="500" width="3" height="15" fill="rgb(207,117,37)"/><text x="973.00" y="510.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (38 samples, 4.82%)</title><rect x="919" y="292" width="57" height="15" fill="rgb(234,203,54)"/><text x="922.00" y="302.50">pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (38 samples, 4.82%)</title><rect x="919" y="308" width="57" height="15" fill="rgb(215,195,25)"/><text x="922.00" y="318.50">pybind..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (38 samples, 4.82%)</title><rect x="919" y="324" width="57" height="15" fill="rgb(246,128,15)"/><text x="922.00" y="334.50">pybind..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (38 samples, 4.82%)</title><rect x="919" y="340" width="57" height="15" fill="rgb(250,69,20)"/><text x="922.00" y="350.50">pybind..</text></g><g><title>pybind11::array::~array (numpy.h) (38 samples, 4.82%)</title><rect x="919" y="356" width="57" height="15" fill="rgb(217,111,27)"/><text x="922.00" y="366.50">pybind..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (38 samples, 4.82%)</title><rect x="919" y="372" width="57" height="15" fill="rgb(239,60,19)"/><text x="922.00" y="382.50">pybind..</text></g><g><title>pybind11::object::~object (pytypes.h) (38 samples, 4.82%)</title><rect x="919" y="388" width="57" height="15" fill="rgb(253,92,36)"/><text x="922.00" y="398.50">pybind..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (38 samples, 4.82%)</title><rect x="919" y="404" width="57" height="15" fill="rgb(233,59,52)"/><text x="922.00" y="414.50">pybind..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (38 samples, 4.82%)</title><rect x="919" y="420" width="57" height="15" fill="rgb(239,204,0)"/><text x="922.00" y="430.50">Runtim..</text></g><g><title>pybind11::array::size (numpy.h) (38 samples, 4.82%)</title><rect x="919" y="436" width="57" height="15" fill="rgb(248,76,39)"/><text x="922.00" y="446.50">pybind..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (38 samples, 4.82%)</title><rect x="919" y="452" width="57" height="15" fill="rgb(223,120,36)"/><text x="922.00" y="462.50">std::a..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (5 samples, 0.63%)</title><rect x="968" y="468" width="8" height="15" fill="rgb(240,70,49)"/><text x="971.00" y="478.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (2 samples, 0.25%)</title><rect x="973" y="484" width="3" height="15" fill="rgb(242,29,5)"/><text x="976.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h) (2 samples, 0.25%)</title><rect x="973" y="500" width="3" height="15" fill="rgb(213,182,4)"/><text x="976.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (2 samples, 0.25%)</title><rect x="973" y="516" width="3" height="15" fill="rgb(241,216,25)"/><text x="976.00" y="526.50"></text></g><g><title>std::unordered_map&lt;long, unsigned long, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt; &gt;::find (unordered_map.h) (2 samples, 0.25%)</title><rect x="973" y="532" width="3" height="15" fill="rgb(215,116,14)"/><text x="976.00" y="542.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h) (2 samples, 0.25%)</title><rect x="973" y="548" width="3" height="15" fill="rgb(226,167,18)"/><text x="976.00" y="558.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (hashtable.h) (2 samples, 0.25%)</title><rect x="973" y="564" width="3" height="15" fill="rgb(221,121,29)"/><text x="976.00" y="574.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h) (2 samples, 0.25%)</title><rect x="973" y="580" width="3" height="15" fill="rgb(222,41,48)"/><text x="976.00" y="590.50"></text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (306 samples, 38.78%)</title><rect x="519" y="100" width="458" height="15" fill="rgb(230,4,18)"/><text x="522.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (306 samples, 38.78%)</title><rect x="519" y="116" width="458" height="15" fill="rgb(230,142,3)"/><text x="522.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (305 samples, 38.66%)</title><rect x="521" y="132" width="456" height="15" fill="rgb(212,226,2)"/><text x="524.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (305 samples, 38.66%)</title><rect x="521" y="148" width="456" height="15" fill="rgb(232,62,2)"/><text x="524.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (305 samples, 38.66%)</title><rect x="521" y="164" width="456" height="15" fill="rgb(206,128,0)"/><text x="524.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (303 samples, 38.40%)</title><rect x="524" y="180" width="453" height="15" fill="rgb(206,188,47)"/><text x="527.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (294 samples, 37.26%)</title><rect x="537" y="196" width="440" height="15" fill="rgb(252,101,27)"/><text x="540.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (44 samples, 5.58%)</title><rect x="911" y="212" width="66" height="15" fill="rgb(212,94,20)"/><text x="914.00" y="222.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (40 samples, 5.07%)</title><rect x="917" y="228" width="60" height="15" fill="rgb(247,53,34)"/><text x="920.00" y="238.50">_run (..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (40 samples, 5.07%)</title><rect x="917" y="244" width="60" height="15" fill="rgb(240,46,36)"/><text x="920.00" y="254.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (40 samples, 5.07%)</title><rect x="917" y="260" width="60" height="15" fill="rgb(226,181,24)"/><text x="920.00" y="270.50">void p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (40 samples, 5.07%)</title><rect x="917" y="276" width="60" height="15" fill="rgb(210,109,40)"/><text x="920.00" y="286.50">void p..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h) (1 samples, 0.13%)</title><rect x="976" y="292" width="1" height="15" fill="rgb(239,33,7)"/><text x="979.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h) (1 samples, 0.13%)</title><rect x="976" y="308" width="1" height="15" fill="rgb(224,79,6)"/><text x="979.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h) (1 samples, 0.13%)</title><rect x="976" y="324" width="1" height="15" fill="rgb(245,58,12)"/><text x="979.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::ensure (numpy.h) (1 samples, 0.13%)</title><rect x="976" y="340" width="1" height="15" fill="rgb(231,35,4)"/><text x="979.00" y="350.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::raw_array_t (numpy.h) (1 samples, 0.13%)</title><rect x="976" y="356" width="1" height="15" fill="rgb(241,148,40)"/><text x="979.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.13%)</title><rect x="976" y="372" width="1" height="15" fill="rgb(210,45,24)"/><text x="979.00" y="382.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.13%)</title><rect x="976" y="388" width="1" height="15" fill="rgb(215,78,13)"/><text x="979.00" y="398.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.13%)</title><rect x="976" y="404" width="1" height="15" fill="rgb(228,13,8)"/><text x="979.00" y="414.50"></text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (307 samples, 38.91%)</title><rect x="519" y="68" width="460" height="15" fill="rgb(247,216,52)"/><text x="522.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_estimato..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (307 samples, 38.91%)</title><rect x="519" y="84" width="460" height="15" fill="rgb(250,97,36)"/><text x="522.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimat..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.13%)</title><rect x="977" y="100" width="2" height="15" fill="rgb(226,130,1)"/><text x="980.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.13%)</title><rect x="977" y="116" width="2" height="15" fill="rgb(243,171,21)"/><text x="980.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.13%)</title><rect x="977" y="132" width="2" height="15" fill="rgb(224,51,5)"/><text x="980.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.13%)</title><rect x="977" y="148" width="2" height="15" fill="rgb(227,54,53)"/><text x="980.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.13%)</title><rect x="977" y="164" width="2" height="15" fill="rgb(241,88,3)"/><text x="980.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.13%)</title><rect x="977" y="180" width="2" height="15" fill="rgb(229,33,34)"/><text x="980.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.13%)</title><rect x="977" y="196" width="2" height="15" fill="rgb(254,118,18)"/><text x="980.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="977" y="212" width="2" height="15" fill="rgb(252,215,20)"/><text x="980.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="977" y="228" width="2" height="15" fill="rgb(227,166,50)"/><text x="980.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="977" y="244" width="2" height="15" fill="rgb(241,136,20)"/><text x="980.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="977" y="260" width="2" height="15" fill="rgb(254,145,10)"/><text x="980.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="977" y="276" width="2" height="15" fill="rgb(245,62,46)"/><text x="980.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.13%)</title><rect x="977" y="292" width="2" height="15" fill="rgb(236,52,40)"/><text x="980.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="977" y="308" width="2" height="15" fill="rgb(239,225,9)"/><text x="980.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="977" y="324" width="2" height="15" fill="rgb(218,10,15)"/><text x="980.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="977" y="340" width="2" height="15" fill="rgb(243,189,29)"/><text x="980.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="977" y="356" width="2" height="15" fill="rgb(209,31,7)"/><text x="980.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="977" y="372" width="2" height="15" fill="rgb(227,83,35)"/><text x="980.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.13%)</title><rect x="977" y="388" width="2" height="15" fill="rgb(232,55,31)"/><text x="980.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="977" y="404" width="2" height="15" fill="rgb(233,121,32)"/><text x="980.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="977" y="420" width="2" height="15" fill="rgb(238,121,51)"/><text x="980.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="977" y="436" width="2" height="15" fill="rgb(228,116,4)"/><text x="980.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="977" y="452" width="2" height="15" fill="rgb(237,97,49)"/><text x="980.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="977" y="468" width="2" height="15" fill="rgb(248,219,28)"/><text x="980.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (1 samples, 0.13%)</title><rect x="977" y="484" width="2" height="15" fill="rgb(243,74,43)"/><text x="980.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="977" y="500" width="2" height="15" fill="rgb(228,40,47)"/><text x="980.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="977" y="516" width="2" height="15" fill="rgb(223,112,6)"/><text x="980.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="977" y="532" width="2" height="15" fill="rgb(250,83,15)"/><text x="980.00" y="542.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="977" y="548" width="2" height="15" fill="rgb(243,219,19)"/><text x="980.00" y="558.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="977" y="564" width="2" height="15" fill="rgb(226,94,50)"/><text x="980.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="977" y="580" width="2" height="15" fill="rgb(220,48,2)"/><text x="980.00" y="590.50"></text></g><g><title>0x7ff842870e83 (?) (1 samples, 0.13%)</title><rect x="977" y="596" width="2" height="15" fill="rgb(229,41,38)"/><text x="980.00" y="606.50"></text></g><g><title>0x7ff84286f95f (?) (1 samples, 0.13%)</title><rect x="977" y="612" width="2" height="15" fill="rgb(246,6,48)"/><text x="980.00" y="622.50"></text></g><g><title>0x7ff842881ed1 (?) (1 samples, 0.13%)</title><rect x="977" y="628" width="2" height="15" fill="rgb(245,158,28)"/><text x="980.00" y="638.50"></text></g><g><title>0x7ff84287fad9 (?) (1 samples, 0.13%)</title><rect x="977" y="644" width="2" height="15" fill="rgb(235,101,40)"/><text x="980.00" y="654.50"></text></g><g><title>0x7ff8428730a1 (?) (1 samples, 0.13%)</title><rect x="977" y="660" width="2" height="15" fill="rgb(222,30,17)"/><text x="980.00" y="670.50"></text></g><g><title>0x7ff85b83d1dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="989" y="260" width="2" height="15" fill="rgb(225,195,10)"/><text x="992.00" y="270.50"></text></g><g><title>0x7ff85b83d225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="991" y="260" width="1" height="15" fill="rgb(214,151,36)"/><text x="994.00" y="270.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.13%)</title><rect x="991" y="276" width="1" height="15" fill="rgb(241,189,14)"/><text x="994.00" y="286.50"></text></g><g><title>0x7ff85b821e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="992" y="276" width="2" height="15" fill="rgb(211,45,8)"/><text x="995.00" y="286.50"></text></g><g><title>0x7ff85b814fda (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="992" y="292" width="2" height="15" fill="rgb(241,48,15)"/><text x="995.00" y="302.50"></text></g><g><title>0x7ff85b814902 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="992" y="308" width="2" height="15" fill="rgb(247,122,16)"/><text x="995.00" y="318.50"></text></g><g><title>0x7ff85b83d2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="992" y="260" width="3" height="15" fill="rgb(245,30,18)"/><text x="995.00" y="270.50"></text></g><g><title>0x7ff85b822085 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="994" y="276" width="1" height="15" fill="rgb(228,18,23)"/><text x="997.00" y="286.50"></text></g><g><title>0x7ff85b83d2fb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="995" y="260" width="2" height="15" fill="rgb(212,111,51)"/><text x="998.00" y="270.50"></text></g><g><title>0x7ff85b83d364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="997" y="260" width="1" height="15" fill="rgb(241,204,53)"/><text x="1000.00" y="270.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.13%)</title><rect x="997" y="276" width="1" height="15" fill="rgb(223,36,4)"/><text x="1000.00" y="286.50"></text></g><g><title>0x7ff85b83d592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="998" y="260" width="3" height="15" fill="rgb(253,150,24)"/><text x="1001.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c) (2 samples, 0.25%)</title><rect x="998" y="276" width="3" height="15" fill="rgb(237,160,37)"/><text x="1001.00" y="286.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.25%)</title><rect x="998" y="292" width="3" height="15" fill="rgb(238,42,10)"/><text x="1001.00" y="302.50"></text></g><g><title>PyArray_Zeros (ctors.c) (2 samples, 0.25%)</title><rect x="998" y="308" width="3" height="15" fill="rgb(221,223,6)"/><text x="1001.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.25%)</title><rect x="998" y="324" width="3" height="15" fill="rgb(241,134,16)"/><text x="1001.00" y="334.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (2 samples, 0.25%)</title><rect x="998" y="340" width="3" height="15" fill="rgb(247,123,44)"/><text x="1001.00" y="350.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (2 samples, 0.25%)</title><rect x="998" y="356" width="3" height="15" fill="rgb(236,214,45)"/><text x="1001.00" y="366.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (2 samples, 0.25%)</title><rect x="998" y="372" width="3" height="15" fill="rgb(218,177,13)"/><text x="1001.00" y="382.50"></text></g><g><title>0x7ff881ded217 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1000" y="388" width="1" height="15" fill="rgb(230,225,14)"/><text x="1003.00" y="398.50"></text></g><g><title>0x7ff85b83d69b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="1001" y="260" width="2" height="15" fill="rgb(242,116,33)"/><text x="1004.00" y="270.50"></text></g><g><title>0x7ff85b83d6a5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="1003" y="260" width="1" height="15" fill="rgb(245,6,6)"/><text x="1006.00" y="270.50"></text></g><g><title>0x7ff85b83d6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="1004" y="260" width="3" height="15" fill="rgb(230,223,43)"/><text x="1007.00" y="270.50"></text></g><g><title>0x7ff85b83d6c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="1007" y="260" width="2" height="15" fill="rgb(220,3,5)"/><text x="1010.00" y="270.50"></text></g><g><title>0x7ff85b83d7a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="1009" y="260" width="1" height="15" fill="rgb(227,141,31)"/><text x="1012.00" y="270.50"></text></g><g><title>0x7ff85b83e405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (16 samples, 2.03%)</title><rect x="989" y="244" width="24" height="15" fill="rgb(247,150,36)"/><text x="992.00" y="254.50">0..</text></g><g><title>0x7ff85b83dc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="1010" y="260" width="3" height="15" fill="rgb(247,18,40)"/><text x="1013.00" y="270.50"></text></g><g><title>0x7ff85b815529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="1010" y="276" width="3" height="15" fill="rgb(243,135,7)"/><text x="1013.00" y="286.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.25%)</title><rect x="1010" y="292" width="3" height="15" fill="rgb(221,12,49)"/><text x="1013.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.13%)</title><rect x="1012" y="308" width="1" height="15" fill="rgb(231,228,13)"/><text x="1015.00" y="318.50"></text></g><g><title>0x7ff85b8131ed (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="1013" y="260" width="2" height="15" fill="rgb(217,229,17)"/><text x="1016.00" y="270.50"></text></g><g><title>0x7ff85b82efa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (18 samples, 2.28%)</title><rect x="989" y="228" width="27" height="15" fill="rgb(206,55,13)"/><text x="992.00" y="238.50">0..</text></g><g><title>0x7ff85b83e540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="1013" y="244" width="3" height="15" fill="rgb(215,124,41)"/><text x="1016.00" y="254.50"></text></g><g><title>0x7ff85b8132f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="1015" y="260" width="1" height="15" fill="rgb(225,38,33)"/><text x="1018.00" y="270.50"></text></g><g><title>0x7ff85b8124dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="1015" y="276" width="1" height="15" fill="rgb(220,131,21)"/><text x="1018.00" y="286.50"></text></g><g><title>0x7ff85b82eff3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="1016" y="228" width="2" height="15" fill="rgb(251,59,23)"/><text x="1019.00" y="238.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (1 samples, 0.13%)</title><rect x="1019" y="276" width="2" height="15" fill="rgb(245,32,36)"/><text x="1022.00" y="286.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.13%)</title><rect x="1021" y="276" width="1" height="15" fill="rgb(212,142,16)"/><text x="1024.00" y="286.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.13%)</title><rect x="1021" y="292" width="1" height="15" fill="rgb(226,7,35)"/><text x="1024.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.13%)</title><rect x="1021" y="308" width="1" height="15" fill="rgb(252,25,49)"/><text x="1024.00" y="318.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.13%)</title><rect x="1021" y="324" width="1" height="15" fill="rgb(223,112,18)"/><text x="1024.00" y="334.50"></text></g><g><title>0x7ff85b82f05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.51%)</title><rect x="1018" y="228" width="5" height="15" fill="rgb(245,32,30)"/><text x="1021.00" y="238.50"></text></g><g><title>array_take (methods.c) (4 samples, 0.51%)</title><rect x="1018" y="244" width="5" height="15" fill="rgb(210,170,15)"/><text x="1021.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (3 samples, 0.38%)</title><rect x="1019" y="260" width="4" height="15" fill="rgb(210,154,27)"/><text x="1022.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.13%)</title><rect x="1022" y="276" width="1" height="15" fill="rgb(233,149,45)"/><text x="1025.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.13%)</title><rect x="1022" y="292" width="1" height="15" fill="rgb(225,221,49)"/><text x="1025.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.13%)</title><rect x="1022" y="308" width="1" height="15" fill="rgb(206,34,13)"/><text x="1025.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.13%)</title><rect x="1022" y="324" width="1" height="15" fill="rgb(218,164,5)"/><text x="1025.00" y="334.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.13%)</title><rect x="1022" y="340" width="1" height="15" fill="rgb(228,99,2)"/><text x="1025.00" y="350.50"></text></g><g><title>0x7ff85b82fd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (24 samples, 3.04%)</title><rect x="989" y="212" width="36" height="15" fill="rgb(232,54,39)"/><text x="992.00" y="222.50">0x7..</text></g><g><title>0x7ff85b82f14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="1023" y="228" width="2" height="15" fill="rgb(217,59,42)"/><text x="1026.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="1023" y="244" width="2" height="15" fill="rgb(229,18,1)"/><text x="1026.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.13%)</title><rect x="1023" y="260" width="2" height="15" fill="rgb(226,33,10)"/><text x="1026.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.13%)</title><rect x="1023" y="276" width="2" height="15" fill="rgb(235,181,0)"/><text x="1026.00" y="286.50"></text></g><g><title>__enter__ (warnings.py) (6 samples, 0.76%)</title><rect x="1034" y="244" width="9" height="15" fill="rgb(224,11,30)"/><text x="1037.00" y="254.50"></text></g><g><title>__exit__ (warnings.py) (3 samples, 0.38%)</title><rect x="1043" y="244" width="4" height="15" fill="rgb(232,7,49)"/><text x="1046.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (4 samples, 0.51%)</title><rect x="1047" y="244" width="6" height="15" fill="rgb(226,227,4)"/><text x="1050.00" y="254.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="1052" y="260" width="1" height="15" fill="rgb(236,58,10)"/><text x="1055.00" y="270.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.25%)</title><rect x="1053" y="244" width="3" height="15" fill="rgb(244,5,33)"/><text x="1056.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 0.38%)</title><rect x="1056" y="244" width="5" height="15" fill="rgb(217,121,41)"/><text x="1059.00" y="254.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.13%)</title><rect x="1059" y="260" width="2" height="15" fill="rgb(241,178,40)"/><text x="1062.00" y="270.50"></text></g><g><title>arraydescr_new (descriptor.c) (2 samples, 0.25%)</title><rect x="1061" y="244" width="3" height="15" fill="rgb(207,0,5)"/><text x="1064.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.13%)</title><rect x="1062" y="260" width="2" height="15" fill="rgb(234,65,20)"/><text x="1065.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.13%)</title><rect x="1062" y="276" width="2" height="15" fill="rgb(239,82,5)"/><text x="1065.00" y="286.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.25%)</title><rect x="1064" y="244" width="3" height="15" fill="rgb(241,120,46)"/><text x="1067.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.13%)</title><rect x="1065" y="260" width="2" height="15" fill="rgb(212,15,34)"/><text x="1068.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (28 samples, 3.55%)</title><rect x="1028" y="228" width="42" height="15" fill="rgb(240,62,49)"/><text x="1031.00" y="238.50">che..</text></g><g><title>simplefilter (warnings.py) (2 samples, 0.25%)</title><rect x="1067" y="244" width="3" height="15" fill="rgb(222,95,25)"/><text x="1070.00" y="254.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.25%)</title><rect x="1067" y="260" width="3" height="15" fill="rgb(230,138,2)"/><text x="1070.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (31 samples, 3.93%)</title><rect x="1025" y="212" width="46" height="15" fill="rgb(211,166,28)"/><text x="1028.00" y="222.50">_val..</text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.13%)</title><rect x="1070" y="228" width="1" height="15" fill="rgb(248,93,51)"/><text x="1073.00" y="238.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.13%)</title><rect x="1071" y="212" width="2" height="15" fill="rgb(240,6,2)"/><text x="1074.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.13%)</title><rect x="1071" y="228" width="2" height="15" fill="rgb(234,87,6)"/><text x="1074.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.13%)</title><rect x="1071" y="244" width="2" height="15" fill="rgb(206,161,44)"/><text x="1074.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.13%)</title><rect x="1071" y="260" width="2" height="15" fill="rgb(254,22,43)"/><text x="1074.00" y="270.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.13%)</title><rect x="1071" y="276" width="2" height="15" fill="rgb(229,214,9)"/><text x="1074.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.13%)</title><rect x="1071" y="292" width="2" height="15" fill="rgb(253,14,39)"/><text x="1074.00" y="302.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.13%)</title><rect x="1082" y="244" width="1" height="15" fill="rgb(232,151,4)"/><text x="1085.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py) (68 samples, 8.62%)</title><rect x="983" y="180" width="102" height="15" fill="rgb(212,168,29)"/><text x="986.00" y="190.50">&lt;listcomp&gt; (..</text></g><g><title>predict (sklearn/tree/_classes.py) (67 samples, 8.49%)</title><rect x="985" y="196" width="100" height="15" fill="rgb(238,101,5)"/><text x="988.00" y="206.50">predict (skl..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (8 samples, 1.01%)</title><rect x="1073" y="212" width="12" height="15" fill="rgb(242,173,10)"/><text x="1076.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (7 samples, 0.89%)</title><rect x="1074" y="228" width="11" height="15" fill="rgb(233,2,22)"/><text x="1077.00" y="238.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.13%)</title><rect x="1083" y="244" width="2" height="15" fill="rgb(212,155,29)"/><text x="1086.00" y="254.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.13%)</title><rect x="1085" y="180" width="1" height="15" fill="rgb(206,215,28)"/><text x="1088.00" y="190.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (1 samples, 0.13%)</title><rect x="1086" y="228" width="2" height="15" fill="rgb(230,111,13)"/><text x="1089.00" y="238.50"></text></g><g><title>setArrayFromSequence (ctors.c) (1 samples, 0.13%)</title><rect x="1086" y="244" width="2" height="15" fill="rgb(212,192,36)"/><text x="1089.00" y="254.50"></text></g><g><title>setArrayFromSequence (ctors.c) (1 samples, 0.13%)</title><rect x="1086" y="260" width="2" height="15" fill="rgb(242,29,14)"/><text x="1089.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.13%)</title><rect x="1086" y="276" width="2" height="15" fill="rgb(220,170,39)"/><text x="1089.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.13%)</title><rect x="1086" y="292" width="2" height="15" fill="rgb(227,187,12)"/><text x="1089.00" y="302.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.25%)</title><rect x="1086" y="180" width="3" height="15" fill="rgb(215,140,42)"/><text x="1089.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.25%)</title><rect x="1086" y="196" width="3" height="15" fill="rgb(241,193,14)"/><text x="1089.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.25%)</title><rect x="1086" y="212" width="3" height="15" fill="rgb(211,204,38)"/><text x="1089.00" y="222.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.13%)</title><rect x="1088" y="228" width="1" height="15" fill="rgb(252,34,14)"/><text x="1091.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.25%)</title><rect x="1089" y="180" width="3" height="15" fill="rgb(211,154,15)"/><text x="1092.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.13%)</title><rect x="1091" y="196" width="1" height="15" fill="rgb(213,217,49)"/><text x="1094.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.13%)</title><rect x="1091" y="212" width="1" height="15" fill="rgb(250,225,21)"/><text x="1094.00" y="222.50"></text></g><g><title>DOUBLE_copyswapn (arraytypes.c.src) (2 samples, 0.25%)</title><rect x="1103" y="292" width="3" height="15" fill="rgb(244,29,31)"/><text x="1106.00" y="302.50"></text></g><g><title>_unaligned_strided_byte_copy (ctors.c) (1 samples, 0.13%)</title><rect x="1104" y="308" width="2" height="15" fill="rgb(206,190,45)"/><text x="1107.00" y="318.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (9 samples, 1.14%)</title><rect x="1094" y="260" width="13" height="15" fill="rgb(246,201,11)"/><text x="1097.00" y="270.50"></text></g><g><title>_new_argsortlike (item_selection.c) (9 samples, 1.14%)</title><rect x="1094" y="276" width="13" height="15" fill="rgb(235,50,11)"/><text x="1097.00" y="286.50"></text></g><g><title>aquicksort_double (quicksort.c.src) (1 samples, 0.13%)</title><rect x="1106" y="292" width="1" height="15" fill="rgb(211,108,48)"/><text x="1109.00" y="302.50"></text></g><g><title>npy_get_msb (npy_sort.h.src) (1 samples, 0.13%)</title><rect x="1106" y="308" width="1" height="15" fill="rgb(221,35,27)"/><text x="1109.00" y="318.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (11 samples, 1.39%)</title><rect x="1092" y="180" width="17" height="15" fill="rgb(228,8,25)"/><text x="1095.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (11 samples, 1.39%)</title><rect x="1092" y="196" width="17" height="15" fill="rgb(236,32,22)"/><text x="1095.00" y="206.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (10 samples, 1.27%)</title><rect x="1094" y="212" width="15" height="15" fill="rgb(249,202,25)"/><text x="1097.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (10 samples, 1.27%)</title><rect x="1094" y="228" width="15" height="15" fill="rgb(224,81,51)"/><text x="1097.00" y="238.50"></text></g><g><title>array_argsort (methods.c) (10 samples, 1.27%)</title><rect x="1094" y="244" width="15" height="15" fill="rgb(233,149,44)"/><text x="1097.00" y="254.50"></text></g><g><title>PyArray_SortkindConverter (conversion_utils.c) (1 samples, 0.13%)</title><rect x="1107" y="260" width="2" height="15" fill="rgb(232,151,29)"/><text x="1110.00" y="270.50"></text></g><g><title>LONG_fill (arraytypes.c.src) (1 samples, 0.13%)</title><rect x="1110" y="212" width="2" height="15" fill="rgb(210,213,39)"/><text x="1113.00" y="222.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="1112" y="212" width="1" height="15" fill="rgb(233,190,6)"/><text x="1115.00" y="222.50"></text></g><g><title>array_arange (multiarraymodule.c) (6 samples, 0.76%)</title><rect x="1109" y="180" width="9" height="15" fill="rgb(220,88,12)"/><text x="1112.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c) (6 samples, 0.76%)</title><rect x="1109" y="196" width="9" height="15" fill="rgb(247,40,37)"/><text x="1112.00" y="206.50"></text></g><g><title>_calc_length (ctors.c) (3 samples, 0.38%)</title><rect x="1113" y="212" width="5" height="15" fill="rgb(226,168,40)"/><text x="1116.00" y="222.50"></text></g><g><title>array_argmax (methods.c) (3 samples, 0.38%)</title><rect x="1118" y="180" width="4" height="15" fill="rgb(251,177,42)"/><text x="1121.00" y="190.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (3 samples, 0.38%)</title><rect x="1118" y="196" width="4" height="15" fill="rgb(253,78,1)"/><text x="1121.00" y="206.50"></text></g><g><title>BOOL_argmax (arraytypes.c.src) (2 samples, 0.25%)</title><rect x="1119" y="212" width="3" height="15" fill="rgb(210,91,7)"/><text x="1122.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.25%)</title><rect x="1122" y="180" width="3" height="15" fill="rgb(218,64,20)"/><text x="1125.00" y="190.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.13%)</title><rect x="1124" y="196" width="1" height="15" fill="rgb(205,198,42)"/><text x="1127.00" y="206.50"></text></g><g><title>array_richcompare (arrayobject.c) (1 samples, 0.13%)</title><rect x="1125" y="180" width="2" height="15" fill="rgb(243,203,33)"/><text x="1128.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1125" y="196" width="2" height="15" fill="rgb(216,140,15)"/><text x="1128.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1125" y="212" width="2" height="15" fill="rgb(234,26,48)"/><text x="1128.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1125" y="228" width="2" height="15" fill="rgb(222,149,24)"/><text x="1128.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1125" y="244" width="2" height="15" fill="rgb(212,37,36)"/><text x="1128.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.13%)</title><rect x="1125" y="260" width="2" height="15" fill="rgb(205,0,44)"/><text x="1128.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.13%)</title><rect x="1125" y="276" width="2" height="15" fill="rgb(222,204,47)"/><text x="1128.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="1125" y="292" width="2" height="15" fill="rgb(245,179,26)"/><text x="1128.00" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="1125" y="308" width="2" height="15" fill="rgb(215,114,47)"/><text x="1128.00" y="318.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c) (3 samples, 0.38%)</title><rect x="1127" y="196" width="4" height="15" fill="rgb(232,126,53)"/><text x="1130.00" y="206.50"></text></g><g><title>check_and_adjust_index (common.h) (2 samples, 0.25%)</title><rect x="1128" y="212" width="3" height="15" fill="rgb(209,198,19)"/><text x="1131.00" y="222.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1131" y="244" width="2" height="15" fill="rgb(213,195,42)"/><text x="1134.00" y="254.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1131" y="260" width="2" height="15" fill="rgb(253,27,35)"/><text x="1134.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (2 samples, 0.25%)</title><rect x="1131" y="196" width="3" height="15" fill="rgb(254,110,7)"/><text x="1134.00" y="206.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (2 samples, 0.25%)</title><rect x="1131" y="212" width="3" height="15" fill="rgb(232,53,43)"/><text x="1134.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.25%)</title><rect x="1131" y="228" width="3" height="15" fill="rgb(254,124,33)"/><text x="1134.00" y="238.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1133" y="244" width="1" height="15" fill="rgb(205,175,54)"/><text x="1136.00" y="254.50"></text></g><g><title>arraymapiter_dealloc (mapping.c) (1 samples, 0.13%)</title><rect x="1134" y="196" width="2" height="15" fill="rgb(229,60,29)"/><text x="1137.00" y="206.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1134" y="212" width="2" height="15" fill="rgb(242,8,2)"/><text x="1137.00" y="222.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (2 samples, 0.25%)</title><rect x="1136" y="196" width="3" height="15" fill="rgb(214,184,23)"/><text x="1139.00" y="206.50"></text></g><g><title>mapiter_trivial_get (lowlevel_strided_loops.c.src) (4 samples, 0.51%)</title><rect x="1139" y="196" width="6" height="15" fill="rgb(249,124,53)"/><text x="1142.00" y="206.50"></text></g><g><title>check_and_adjust_index (common.h) (3 samples, 0.38%)</title><rect x="1140" y="212" width="5" height="15" fill="rgb(221,227,13)"/><text x="1143.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (13 samples, 1.65%)</title><rect x="1127" y="180" width="19" height="15" fill="rgb(244,37,4)"/><text x="1130.00" y="190.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.13%)</title><rect x="1145" y="196" width="1" height="15" fill="rgb(227,31,49)"/><text x="1148.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="1148" y="196" width="1" height="15" fill="rgb(208,44,54)"/><text x="1151.00" y="206.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.13%)</title><rect x="1148" y="212" width="1" height="15" fill="rgb(227,140,34)"/><text x="1151.00" y="222.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.13%)</title><rect x="1148" y="228" width="1" height="15" fill="rgb(246,64,5)"/><text x="1151.00" y="238.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.13%)</title><rect x="1148" y="244" width="1" height="15" fill="rgb(208,191,34)"/><text x="1151.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1148" y="260" width="1" height="15" fill="rgb(222,164,42)"/><text x="1151.00" y="270.50"></text></g><g><title>0x7ff88100e2b0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="1149" y="356" width="2" height="15" fill="rgb(244,18,25)"/><text x="1152.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.13%)</title><rect x="1151" y="356" width="1" height="15" fill="rgb(227,20,9)"/><text x="1154.00" y="366.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (3 samples, 0.38%)</title><rect x="1149" y="196" width="5" height="15" fill="rgb(235,80,16)"/><text x="1152.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.38%)</title><rect x="1149" y="212" width="5" height="15" fill="rgb(235,56,32)"/><text x="1152.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (3 samples, 0.38%)</title><rect x="1149" y="228" width="5" height="15" fill="rgb(223,129,0)"/><text x="1152.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 0.38%)</title><rect x="1149" y="244" width="5" height="15" fill="rgb(243,95,6)"/><text x="1152.00" y="254.50"></text></g><g><title>array_cumsum (methods.c) (3 samples, 0.38%)</title><rect x="1149" y="260" width="5" height="15" fill="rgb(236,84,11)"/><text x="1152.00" y="270.50"></text></g><g><title>PyArray_CumSum (calculation.c) (3 samples, 0.38%)</title><rect x="1149" y="276" width="5" height="15" fill="rgb(236,97,48)"/><text x="1152.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (3 samples, 0.38%)</title><rect x="1149" y="292" width="5" height="15" fill="rgb(254,197,52)"/><text x="1152.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (3 samples, 0.38%)</title><rect x="1149" y="308" width="5" height="15" fill="rgb(219,188,29)"/><text x="1152.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (3 samples, 0.38%)</title><rect x="1149" y="324" width="5" height="15" fill="rgb(236,12,11)"/><text x="1152.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (3 samples, 0.38%)</title><rect x="1149" y="340" width="5" height="15" fill="rgb(210,172,5)"/><text x="1152.00" y="350.50"></text></g><g><title>npyiter_iternext_itflags0_dims1_iters2 (nditer_templ.c.src) (1 samples, 0.13%)</title><rect x="1152" y="356" width="2" height="15" fill="rgb(254,158,46)"/><text x="1155.00" y="366.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.13%)</title><rect x="1157" y="372" width="1" height="15" fill="rgb(211,197,28)"/><text x="1160.00" y="382.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.13%)</title><rect x="1158" y="372" width="2" height="15" fill="rgb(223,129,10)"/><text x="1161.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.13%)</title><rect x="1158" y="388" width="2" height="15" fill="rgb(217,127,26)"/><text x="1161.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.13%)</title><rect x="1158" y="404" width="2" height="15" fill="rgb(208,225,26)"/><text x="1161.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.13%)</title><rect x="1158" y="420" width="2" height="15" fill="rgb(214,29,20)"/><text x="1161.00" y="430.50"></text></g><g><title>0x7ff881e0bdbb (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1158" y="436" width="2" height="15" fill="rgb(208,94,21)"/><text x="1161.00" y="446.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (5 samples, 0.63%)</title><rect x="1154" y="244" width="7" height="15" fill="rgb(252,137,10)"/><text x="1157.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 0.63%)</title><rect x="1154" y="260" width="7" height="15" fill="rgb(210,218,11)"/><text x="1157.00" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py) (5 samples, 0.63%)</title><rect x="1154" y="276" width="7" height="15" fill="rgb(233,50,45)"/><text x="1157.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (5 samples, 0.63%)</title><rect x="1154" y="292" width="7" height="15" fill="rgb(226,68,33)"/><text x="1157.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (3 samples, 0.38%)</title><rect x="1157" y="308" width="4" height="15" fill="rgb(240,15,50)"/><text x="1160.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (3 samples, 0.38%)</title><rect x="1157" y="324" width="4" height="15" fill="rgb(229,158,36)"/><text x="1160.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (3 samples, 0.38%)</title><rect x="1157" y="340" width="4" height="15" fill="rgb(231,225,44)"/><text x="1160.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (3 samples, 0.38%)</title><rect x="1157" y="356" width="4" height="15" fill="rgb(217,221,27)"/><text x="1160.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1160" y="372" width="1" height="15" fill="rgb(240,169,33)"/><text x="1163.00" y="382.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="1160" y="388" width="1" height="15" fill="rgb(206,222,3)"/><text x="1163.00" y="398.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py) (1 samples, 0.13%)</title><rect x="1161" y="244" width="2" height="15" fill="rgb(214,44,9)"/><text x="1164.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1163" y="244" width="1" height="15" fill="rgb(245,136,14)"/><text x="1166.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1163" y="260" width="1" height="15" fill="rgb(214,150,11)"/><text x="1166.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1163" y="276" width="1" height="15" fill="rgb(217,102,22)"/><text x="1166.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.13%)</title><rect x="1163" y="292" width="1" height="15" fill="rgb(218,208,52)"/><text x="1166.00" y="302.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py) (2 samples, 0.25%)</title><rect x="1166" y="260" width="3" height="15" fill="rgb(208,142,2)"/><text x="1169.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (1 samples, 0.13%)</title><rect x="1167" y="276" width="2" height="15" fill="rgb(210,82,20)"/><text x="1170.00" y="286.50"></text></g><g><title>ufunc_seterr (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1167" y="292" width="2" height="15" fill="rgb(235,80,32)"/><text x="1170.00" y="302.50"></text></g><g><title>ufunc_update_use_defaults (extobj.c) (1 samples, 0.13%)</title><rect x="1167" y="308" width="2" height="15" fill="rgb(217,213,11)"/><text x="1170.00" y="318.50"></text></g><g><title>array_subtract (number.c) (1 samples, 0.13%)</title><rect x="1169" y="260" width="1" height="15" fill="rgb(226,142,14)"/><text x="1172.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1169" y="276" width="1" height="15" fill="rgb(240,198,7)"/><text x="1172.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1169" y="292" width="1" height="15" fill="rgb(222,69,41)"/><text x="1172.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1169" y="308" width="1" height="15" fill="rgb(211,197,18)"/><text x="1172.00" y="318.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.13%)</title><rect x="1169" y="324" width="1" height="15" fill="rgb(218,137,52)"/><text x="1172.00" y="334.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;) (12 samples, 1.52%)</title><rect x="1154" y="196" width="18" height="15" fill="rgb(227,13,19)"/><text x="1157.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (12 samples, 1.52%)</title><rect x="1154" y="212" width="18" height="15" fill="rgb(244,164,46)"/><text x="1157.00" y="222.50"></text></g><g><title>isclose (numpy/core/numeric.py) (12 samples, 1.52%)</title><rect x="1154" y="228" width="18" height="15" fill="rgb(241,9,29)"/><text x="1157.00" y="238.50"></text></g><g><title>within_tol (numpy/core/numeric.py) (5 samples, 0.63%)</title><rect x="1164" y="244" width="8" height="15" fill="rgb(216,204,7)"/><text x="1167.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1170" y="260" width="2" height="15" fill="rgb(205,204,51)"/><text x="1173.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1170" y="276" width="2" height="15" fill="rgb(218,131,41)"/><text x="1173.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1170" y="292" width="2" height="15" fill="rgb(250,99,15)"/><text x="1173.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1170" y="308" width="2" height="15" fill="rgb(235,75,40)"/><text x="1173.00" y="318.50"></text></g><g><title>DOUBLE_absolute (loops.c.src) (1 samples, 0.13%)</title><rect x="1170" y="324" width="2" height="15" fill="rgb(238,68,25)"/><text x="1173.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_DOUBLE (simd.inc.src) (1 samples, 0.13%)</title><rect x="1170" y="340" width="2" height="15" fill="rgb(250,84,45)"/><text x="1173.00" y="350.50"></text></g><g><title>sse2_absolute_DOUBLE (simd.inc.src) (1 samples, 0.13%)</title><rect x="1170" y="356" width="2" height="15" fill="rgb(234,134,31)"/><text x="1173.00" y="366.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.13%)</title><rect x="1170" y="372" width="2" height="15" fill="rgb(219,52,25)"/><text x="1173.00" y="382.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (1 samples, 0.13%)</title><rect x="1175" y="260" width="1" height="15" fill="rgb(214,203,20)"/><text x="1178.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1176" y="324" width="2" height="15" fill="rgb(239,101,24)"/><text x="1179.00" y="334.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.13%)</title><rect x="1176" y="340" width="2" height="15" fill="rgb(226,188,27)"/><text x="1179.00" y="350.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.13%)</title><rect x="1178" y="324" width="1" height="15" fill="rgb(213,224,54)"/><text x="1181.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.13%)</title><rect x="1179" y="324" width="2" height="15" fill="rgb(247,223,7)"/><text x="1182.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.25%)</title><rect x="1181" y="340" width="3" height="15" fill="rgb(238,70,11)"/><text x="1184.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.13%)</title><rect x="1182" y="356" width="2" height="15" fill="rgb(210,46,49)"/><text x="1185.00" y="366.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py) (138 samples, 17.49%)</title><rect x="980" y="164" width="207" height="15" fill="rgb(216,162,7)"/><text x="983.00" y="174.50">_get_median_predict (sklear..</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py) (27 samples, 3.42%)</title><rect x="1146" y="180" width="41" height="15" fill="rgb(214,102,9)"/><text x="1149.00" y="190.50">sta..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (10 samples, 1.27%)</title><rect x="1172" y="196" width="15" height="15" fill="rgb(214,228,41)"/><text x="1175.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (10 samples, 1.27%)</title><rect x="1172" y="212" width="15" height="15" fill="rgb(235,44,15)"/><text x="1175.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (9 samples, 1.14%)</title><rect x="1173" y="228" width="14" height="15" fill="rgb(214,123,14)"/><text x="1176.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (9 samples, 1.14%)</title><rect x="1173" y="244" width="14" height="15" fill="rgb(251,148,15)"/><text x="1176.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (7 samples, 0.89%)</title><rect x="1176" y="260" width="11" height="15" fill="rgb(229,10,31)"/><text x="1179.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (7 samples, 0.89%)</title><rect x="1176" y="276" width="11" height="15" fill="rgb(245,59,15)"/><text x="1179.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (7 samples, 0.89%)</title><rect x="1176" y="292" width="11" height="15" fill="rgb(205,80,48)"/><text x="1179.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 0.89%)</title><rect x="1176" y="308" width="11" height="15" fill="rgb(230,186,7)"/><text x="1179.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (4 samples, 0.51%)</title><rect x="1181" y="324" width="6" height="15" fill="rgb(252,145,37)"/><text x="1184.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (2 samples, 0.25%)</title><rect x="1184" y="340" width="3" height="15" fill="rgb(245,151,34)"/><text x="1187.00" y="350.50"></text></g><g><title>all (789 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(225,88,18)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (789 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(208,176,21)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py)</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (141 samples, 17.87%)</title><rect x="979" y="68" width="211" height="15" fill="rgb(225,7,12)"/><text x="982.00" y="78.50">profile_skl (bench_AdaBoost..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (141 samples, 17.87%)</title><rect x="979" y="84" width="211" height="15" fill="rgb(244,205,46)"/><text x="982.00" y="94.50">setup_profile (bench_AdaBoo..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (141 samples, 17.87%)</title><rect x="979" y="100" width="211" height="15" fill="rgb(248,118,15)"/><text x="982.00" y="110.50">profile (bench_AdaBoostRegr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (141 samples, 17.87%)</title><rect x="979" y="116" width="211" height="15" fill="rgb(249,215,33)"/><text x="982.00" y="126.50">time_predict (mlprodict/asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (141 samples, 17.87%)</title><rect x="979" y="132" width="211" height="15" fill="rgb(243,216,10)"/><text x="982.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py) (140 samples, 17.74%)</title><rect x="980" y="148" width="210" height="15" fill="rgb(219,23,3)"/><text x="983.00" y="158.50">predict (sklearn/ensemble/_..</text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.25%)</title><rect x="1187" y="164" width="3" height="15" fill="rgb(244,82,13)"/><text x="1190.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (2 samples, 0.25%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(237,75,42)"/><text x="1190.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.25%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(224,119,0)"/><text x="1190.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.25%)</title><rect x="1187" y="212" width="3" height="15" fill="rgb(229,181,16)"/><text x="1190.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.13%)</title><rect x="1188" y="228" width="2" height="15" fill="rgb(241,36,20)"/><text x="1191.00" y="238.50"></text></g></g></svg>