<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2198" onload="init(evt)" viewBox="0 0 1200 2198" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2198" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2181.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2181.00"> </text><g id="frames"><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(247,121,8)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(215,218,39)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(246,189,40)"/><text x="13.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.16%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(229,36,23)"/><text x="13.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.16%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(240,13,42)"/><text x="13.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.16%)</title><rect x="10" y="1012" width="1" height="15" fill="rgb(242,49,10)"/><text x="13.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.16%)</title><rect x="10" y="1028" width="1" height="15" fill="rgb(235,37,31)"/><text x="13.00" y="1038.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="10" y="836" width="3" height="15" fill="rgb(219,101,6)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(224,82,29)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(243,133,47)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(239,154,13)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(223,159,45)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(230,76,10)"/><text x="13.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="11" y="932" width="2" height="15" fill="rgb(221,43,48)"/><text x="14.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="11" y="948" width="2" height="15" fill="rgb(253,180,51)"/><text x="14.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="11" y="964" width="2" height="15" fill="rgb(245,179,49)"/><text x="14.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="11" y="980" width="2" height="15" fill="rgb(239,134,46)"/><text x="14.00" y="990.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.16%)</title><rect x="11" y="996" width="2" height="15" fill="rgb(226,165,22)"/><text x="14.00" y="1006.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.16%)</title><rect x="11" y="1012" width="2" height="15" fill="rgb(250,175,12)"/><text x="14.00" y="1022.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.16%)</title><rect x="11" y="1028" width="2" height="15" fill="rgb(218,2,27)"/><text x="14.00" y="1038.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.16%)</title><rect x="11" y="1044" width="2" height="15" fill="rgb(208,105,33)"/><text x="14.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="196" width="5" height="15" fill="rgb(247,141,0)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="212" width="5" height="15" fill="rgb(253,34,26)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="228" width="5" height="15" fill="rgb(253,203,43)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="244" width="5" height="15" fill="rgb(220,168,0)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="10" y="260" width="5" height="15" fill="rgb(247,44,51)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="276" width="5" height="15" fill="rgb(216,73,41)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 0.47%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(206,33,36)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(238,128,27)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(228,228,51)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(221,35,11)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(248,0,5)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(226,213,37)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 0.47%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(235,22,48)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(218,181,46)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(228,36,30)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(221,43,16)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(242,122,7)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(222,47,50)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 0.47%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(231,95,42)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(215,157,16)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(253,204,2)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(210,103,51)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="10" y="548" width="5" height="15" fill="rgb(251,89,29)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="564" width="5" height="15" fill="rgb(220,55,40)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 0.47%)</title><rect x="10" y="580" width="5" height="15" fill="rgb(212,217,52)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="596" width="5" height="15" fill="rgb(252,46,31)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="612" width="5" height="15" fill="rgb(215,195,9)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(210,21,36)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(254,35,13)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(247,75,11)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(213,142,27)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(244,124,15)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(240,56,24)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 0.47%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(250,119,23)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(213,217,36)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(249,0,28)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(212,214,52)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(247,30,12)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(230,226,49)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 0.47%)</title><rect x="10" y="820" width="5" height="15" fill="rgb(207,117,52)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="836" width="2" height="15" fill="rgb(238,36,24)"/><text x="16.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="852" width="2" height="15" fill="rgb(212,138,20)"/><text x="16.00" y="862.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="868" width="2" height="15" fill="rgb(242,85,51)"/><text x="16.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1124" width="2" height="15" fill="rgb(216,48,33)"/><text x="18.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1140" width="2" height="15" fill="rgb(210,148,19)"/><text x="18.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1156" width="2" height="15" fill="rgb(215,220,44)"/><text x="18.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="15" y="1172" width="2" height="15" fill="rgb(241,196,25)"/><text x="18.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1188" width="2" height="15" fill="rgb(235,188,47)"/><text x="18.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.16%)</title><rect x="15" y="1204" width="2" height="15" fill="rgb(254,164,50)"/><text x="18.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1220" width="2" height="15" fill="rgb(222,65,32)"/><text x="18.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1236" width="2" height="15" fill="rgb(253,42,50)"/><text x="18.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1252" width="2" height="15" fill="rgb(217,0,14)"/><text x="18.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1268" width="2" height="15" fill="rgb(252,184,40)"/><text x="18.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1284" width="2" height="15" fill="rgb(216,218,49)"/><text x="18.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1300" width="2" height="15" fill="rgb(250,216,10)"/><text x="18.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="15" y="1316" width="2" height="15" fill="rgb(241,206,19)"/><text x="18.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1332" width="2" height="15" fill="rgb(210,36,6)"/><text x="18.00" y="1342.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/__init__.py) (1 samples, 0.16%)</title><rect x="15" y="1348" width="2" height="15" fill="rgb(243,100,42)"/><text x="18.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1364" width="2" height="15" fill="rgb(240,82,38)"/><text x="18.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1380" width="2" height="15" fill="rgb(207,40,26)"/><text x="18.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1396" width="2" height="15" fill="rgb(214,112,48)"/><text x="18.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="15" y="1412" width="2" height="15" fill="rgb(250,143,47)"/><text x="18.00" y="1422.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="15" y="1428" width="2" height="15" fill="rgb(212,168,24)"/><text x="18.00" y="1438.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="15" y="1444" width="2" height="15" fill="rgb(233,137,51)"/><text x="18.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="484" width="4" height="15" fill="rgb(252,79,39)"/><text x="18.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="500" width="4" height="15" fill="rgb(247,71,28)"/><text x="18.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="516" width="4" height="15" fill="rgb(254,202,17)"/><text x="18.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="532" width="4" height="15" fill="rgb(246,170,26)"/><text x="18.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="15" y="548" width="4" height="15" fill="rgb(208,69,26)"/><text x="18.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="564" width="4" height="15" fill="rgb(215,82,2)"/><text x="18.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.31%)</title><rect x="15" y="580" width="4" height="15" fill="rgb(220,4,16)"/><text x="18.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="596" width="4" height="15" fill="rgb(246,81,28)"/><text x="18.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="612" width="4" height="15" fill="rgb(245,149,27)"/><text x="18.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="628" width="4" height="15" fill="rgb(225,133,2)"/><text x="18.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="15" y="644" width="4" height="15" fill="rgb(231,195,22)"/><text x="18.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="660" width="4" height="15" fill="rgb(227,19,42)"/><text x="18.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.31%)</title><rect x="15" y="676" width="4" height="15" fill="rgb(252,164,15)"/><text x="18.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="692" width="4" height="15" fill="rgb(238,86,31)"/><text x="18.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="708" width="4" height="15" fill="rgb(206,18,28)"/><text x="18.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="724" width="4" height="15" fill="rgb(211,73,16)"/><text x="18.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="15" y="740" width="4" height="15" fill="rgb(219,219,44)"/><text x="18.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="756" width="4" height="15" fill="rgb(210,153,20)"/><text x="18.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.31%)</title><rect x="15" y="772" width="4" height="15" fill="rgb(230,121,40)"/><text x="18.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="788" width="4" height="15" fill="rgb(249,3,15)"/><text x="18.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="804" width="4" height="15" fill="rgb(212,127,20)"/><text x="18.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="820" width="4" height="15" fill="rgb(209,154,11)"/><text x="18.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="15" y="836" width="4" height="15" fill="rgb(237,115,33)"/><text x="18.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="852" width="4" height="15" fill="rgb(229,147,15)"/><text x="18.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.31%)</title><rect x="15" y="868" width="4" height="15" fill="rgb(254,90,40)"/><text x="18.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="884" width="4" height="15" fill="rgb(221,79,14)"/><text x="18.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="900" width="4" height="15" fill="rgb(246,132,6)"/><text x="18.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="916" width="4" height="15" fill="rgb(210,198,36)"/><text x="18.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="932" width="4" height="15" fill="rgb(212,138,0)"/><text x="18.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="948" width="4" height="15" fill="rgb(240,165,41)"/><text x="18.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="964" width="4" height="15" fill="rgb(232,114,6)"/><text x="18.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="15" y="980" width="4" height="15" fill="rgb(222,86,39)"/><text x="18.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="996" width="4" height="15" fill="rgb(219,84,4)"/><text x="18.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.31%)</title><rect x="15" y="1012" width="4" height="15" fill="rgb(207,198,39)"/><text x="18.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1028" width="4" height="15" fill="rgb(220,117,9)"/><text x="18.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1044" width="4" height="15" fill="rgb(236,100,4)"/><text x="18.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1060" width="4" height="15" fill="rgb(229,65,2)"/><text x="18.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="15" y="1076" width="4" height="15" fill="rgb(208,108,23)"/><text x="18.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1092" width="4" height="15" fill="rgb(223,27,14)"/><text x="18.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.31%)</title><rect x="15" y="1108" width="4" height="15" fill="rgb(216,229,29)"/><text x="18.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1124" width="2" height="15" fill="rgb(208,26,38)"/><text x="20.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1140" width="2" height="15" fill="rgb(206,84,11)"/><text x="20.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1156" width="2" height="15" fill="rgb(219,48,27)"/><text x="20.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1172" width="2" height="15" fill="rgb(253,130,40)"/><text x="20.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1188" width="2" height="15" fill="rgb(216,48,41)"/><text x="20.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="17" y="1204" width="2" height="15" fill="rgb(212,18,45)"/><text x="20.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1220" width="2" height="15" fill="rgb(248,77,30)"/><text x="20.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.16%)</title><rect x="17" y="1236" width="2" height="15" fill="rgb(244,127,38)"/><text x="20.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1252" width="2" height="15" fill="rgb(218,221,23)"/><text x="20.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1268" width="2" height="15" fill="rgb(230,146,53)"/><text x="20.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1284" width="2" height="15" fill="rgb(225,189,38)"/><text x="20.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1300" width="2" height="15" fill="rgb(246,37,15)"/><text x="20.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1316" width="2" height="15" fill="rgb(214,195,22)"/><text x="20.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="17" y="1332" width="2" height="15" fill="rgb(226,177,24)"/><text x="20.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1348" width="2" height="15" fill="rgb(222,127,34)"/><text x="20.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.16%)</title><rect x="17" y="1364" width="2" height="15" fill="rgb(246,51,10)"/><text x="20.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1380" width="2" height="15" fill="rgb(221,183,12)"/><text x="20.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1396" width="2" height="15" fill="rgb(209,161,34)"/><text x="20.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1412" width="2" height="15" fill="rgb(206,165,10)"/><text x="20.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="17" y="1428" width="2" height="15" fill="rgb(222,134,8)"/><text x="20.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1444" width="2" height="15" fill="rgb(248,46,7)"/><text x="20.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.16%)</title><rect x="17" y="1460" width="2" height="15" fill="rgb(243,217,29)"/><text x="20.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.16%)</title><rect x="17" y="1476" width="2" height="15" fill="rgb(241,5,11)"/><text x="20.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.16%)</title><rect x="17" y="1492" width="2" height="15" fill="rgb(242,30,27)"/><text x="20.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.16%)</title><rect x="17" y="1508" width="2" height="15" fill="rgb(231,37,18)"/><text x="20.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.16%)</title><rect x="17" y="1524" width="2" height="15" fill="rgb(213,155,35)"/><text x="20.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.16%)</title><rect x="17" y="1540" width="2" height="15" fill="rgb(247,150,26)"/><text x="20.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.16%)</title><rect x="17" y="1556" width="2" height="15" fill="rgb(252,131,31)"/><text x="20.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.16%)</title><rect x="17" y="1572" width="2" height="15" fill="rgb(212,186,18)"/><text x="20.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.16%)</title><rect x="17" y="1588" width="2" height="15" fill="rgb(215,124,1)"/><text x="20.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py) (1 samples, 0.16%)</title><rect x="17" y="1604" width="2" height="15" fill="rgb(209,68,3)"/><text x="20.00" y="1614.50"></text></g><g><title>0x7f77bbbf640e (?) (1 samples, 0.16%)</title><rect x="19" y="916" width="2" height="15" fill="rgb(220,20,18)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="932" width="2" height="15" fill="rgb(252,141,31)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="948" width="2" height="15" fill="rgb(254,89,42)"/><text x="22.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="964" width="2" height="15" fill="rgb(231,169,18)"/><text x="22.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="19" y="980" width="2" height="15" fill="rgb(245,210,8)"/><text x="22.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="996" width="2" height="15" fill="rgb(243,119,40)"/><text x="22.00" y="1006.50"></text></g><g><title>0x7f77bb9afcd2 (?) (1 samples, 0.16%)</title><rect x="19" y="1012" width="2" height="15" fill="rgb(226,60,49)"/><text x="22.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1028" width="2" height="15" fill="rgb(226,63,1)"/><text x="22.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1044" width="2" height="15" fill="rgb(218,117,4)"/><text x="22.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1060" width="2" height="15" fill="rgb(231,201,43)"/><text x="22.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="19" y="1076" width="2" height="15" fill="rgb(244,211,47)"/><text x="22.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1092" width="2" height="15" fill="rgb(215,140,42)"/><text x="22.00" y="1102.50"></text></g><g><title>0x7f77bb0a50e5 (?) (1 samples, 0.16%)</title><rect x="19" y="1108" width="2" height="15" fill="rgb(221,79,48)"/><text x="22.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1124" width="2" height="15" fill="rgb(217,119,36)"/><text x="22.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1140" width="2" height="15" fill="rgb(253,124,40)"/><text x="22.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1156" width="2" height="15" fill="rgb(240,221,21)"/><text x="22.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="19" y="1172" width="2" height="15" fill="rgb(209,48,12)"/><text x="22.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1188" width="2" height="15" fill="rgb(234,195,54)"/><text x="22.00" y="1198.50"></text></g><g><title>0x7f77bae29e68 (?) (1 samples, 0.16%)</title><rect x="19" y="1204" width="2" height="15" fill="rgb(224,85,26)"/><text x="22.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1220" width="2" height="15" fill="rgb(247,152,9)"/><text x="22.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1236" width="2" height="15" fill="rgb(241,75,8)"/><text x="22.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1252" width="2" height="15" fill="rgb(248,159,13)"/><text x="22.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="19" y="1268" width="2" height="15" fill="rgb(254,187,5)"/><text x="22.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1284" width="2" height="15" fill="rgb(227,63,46)"/><text x="22.00" y="1294.50"></text></g><g><title>0x7f77babba2fb (?) (1 samples, 0.16%)</title><rect x="19" y="1300" width="2" height="15" fill="rgb(246,16,4)"/><text x="22.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1316" width="2" height="15" fill="rgb(213,222,18)"/><text x="22.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1332" width="2" height="15" fill="rgb(230,57,23)"/><text x="22.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1348" width="2" height="15" fill="rgb(208,11,42)"/><text x="22.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="19" y="1364" width="2" height="15" fill="rgb(220,139,13)"/><text x="22.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1380" width="2" height="15" fill="rgb(211,204,48)"/><text x="22.00" y="1390.50"></text></g><g><title>0x7f77ba99e153 (?) (1 samples, 0.16%)</title><rect x="19" y="1396" width="2" height="15" fill="rgb(241,44,42)"/><text x="22.00" y="1406.50"></text></g><g><title>0x7f77ba99cc13 (?) (1 samples, 0.16%)</title><rect x="19" y="1412" width="2" height="15" fill="rgb(209,59,1)"/><text x="22.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1428" width="2" height="15" fill="rgb(212,158,20)"/><text x="22.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1444" width="2" height="15" fill="rgb(230,107,35)"/><text x="22.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1460" width="2" height="15" fill="rgb(249,150,7)"/><text x="22.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="19" y="1476" width="2" height="15" fill="rgb(220,160,48)"/><text x="22.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1492" width="2" height="15" fill="rgb(252,155,48)"/><text x="22.00" y="1502.50"></text></g><g><title>0x7f77ba739181 (?) (1 samples, 0.16%)</title><rect x="19" y="1508" width="2" height="15" fill="rgb(233,77,19)"/><text x="22.00" y="1518.50"></text></g><g><title>0x7f77ba73c1c9 (?) (1 samples, 0.16%)</title><rect x="19" y="1524" width="2" height="15" fill="rgb(206,146,6)"/><text x="22.00" y="1534.50"></text></g><g><title>0x7f77ba768167 (?) (1 samples, 0.16%)</title><rect x="19" y="1540" width="2" height="15" fill="rgb(253,28,28)"/><text x="22.00" y="1550.50"></text></g><g><title>0x7f77ba763b64 (?) (1 samples, 0.16%)</title><rect x="19" y="1556" width="2" height="15" fill="rgb(252,78,14)"/><text x="22.00" y="1566.50"></text></g><g><title>0x7f77ba74707b (?) (1 samples, 0.16%)</title><rect x="19" y="1572" width="2" height="15" fill="rgb(254,30,16)"/><text x="22.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.16%)</title><rect x="19" y="1588" width="2" height="15" fill="rgb(250,65,24)"/><text x="22.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.16%)</title><rect x="19" y="1604" width="2" height="15" fill="rgb(228,220,32)"/><text x="22.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.16%)</title><rect x="19" y="1620" width="2" height="15" fill="rgb(244,20,19)"/><text x="22.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.16%)</title><rect x="19" y="1636" width="2" height="15" fill="rgb(245,178,25)"/><text x="22.00" y="1646.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (2 samples, 0.31%)</title><rect x="19" y="724" width="3" height="15" fill="rgb(213,14,42)"/><text x="22.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="740" width="3" height="15" fill="rgb(220,148,30)"/><text x="22.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="756" width="3" height="15" fill="rgb(222,77,22)"/><text x="22.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="772" width="3" height="15" fill="rgb(249,1,43)"/><text x="22.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="19" y="788" width="3" height="15" fill="rgb(237,50,26)"/><text x="22.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="804" width="3" height="15" fill="rgb(217,215,9)"/><text x="22.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (2 samples, 0.31%)</title><rect x="19" y="820" width="3" height="15" fill="rgb(208,32,47)"/><text x="22.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="836" width="3" height="15" fill="rgb(230,65,41)"/><text x="22.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="852" width="3" height="15" fill="rgb(225,186,1)"/><text x="22.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="868" width="3" height="15" fill="rgb(240,177,21)"/><text x="22.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="19" y="884" width="3" height="15" fill="rgb(249,209,53)"/><text x="22.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="900" width="3" height="15" fill="rgb(236,103,54)"/><text x="22.00" y="910.50"></text></g><g><title>0x7f77bbbf7403 (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="21" y="916" width="1" height="15" fill="rgb(244,211,35)"/><text x="24.00" y="926.50"></text></g><g><title>0x7f77bbbf9b8a (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="21" y="932" width="1" height="15" fill="rgb(229,32,33)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="948" width="1" height="15" fill="rgb(210,211,13)"/><text x="24.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="964" width="1" height="15" fill="rgb(210,40,49)"/><text x="24.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="980" width="1" height="15" fill="rgb(245,20,19)"/><text x="24.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="996" width="1" height="15" fill="rgb(251,97,7)"/><text x="24.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1012" width="1" height="15" fill="rgb(207,25,28)"/><text x="24.00" y="1022.50"></text></g><g><title>0x7f77ba240d78 (pandas/_libs/tslibs/parsing.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="21" y="1028" width="1" height="15" fill="rgb(210,163,10)"/><text x="24.00" y="1038.50"></text></g><g><title>0x7f77ba245c2a (pandas/_libs/tslibs/parsing.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="21" y="1044" width="1" height="15" fill="rgb(239,158,51)"/><text x="24.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1060" width="1" height="15" fill="rgb(242,75,27)"/><text x="24.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1076" width="1" height="15" fill="rgb(212,164,43)"/><text x="24.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1092" width="1" height="15" fill="rgb(208,108,25)"/><text x="24.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="1108" width="1" height="15" fill="rgb(209,40,19)"/><text x="24.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1124" width="1" height="15" fill="rgb(232,43,38)"/><text x="24.00" y="1134.50"></text></g><g><title>&lt;module&gt; (dateutil/parser/__init__.py) (1 samples, 0.16%)</title><rect x="21" y="1140" width="1" height="15" fill="rgb(237,177,50)"/><text x="24.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1156" width="1" height="15" fill="rgb(219,172,54)"/><text x="24.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1172" width="1" height="15" fill="rgb(215,30,51)"/><text x="24.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1188" width="1" height="15" fill="rgb(224,187,24)"/><text x="24.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="1204" width="1" height="15" fill="rgb(238,122,36)"/><text x="24.00" y="1214.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="1220" width="1" height="15" fill="rgb(225,178,2)"/><text x="24.00" y="1230.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="1236" width="1" height="15" fill="rgb(216,79,0)"/><text x="24.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="772" width="2" height="15" fill="rgb(243,215,9)"/><text x="25.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="788" width="2" height="15" fill="rgb(228,20,1)"/><text x="25.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="804" width="2" height="15" fill="rgb(209,149,7)"/><text x="25.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="820" width="2" height="15" fill="rgb(234,63,39)"/><text x="25.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="22" y="836" width="2" height="15" fill="rgb(239,189,48)"/><text x="25.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="852" width="2" height="15" fill="rgb(223,54,1)"/><text x="25.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.16%)</title><rect x="22" y="868" width="2" height="15" fill="rgb(227,50,26)"/><text x="25.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="884" width="2" height="15" fill="rgb(219,148,4)"/><text x="25.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="900" width="2" height="15" fill="rgb(232,97,35)"/><text x="25.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="916" width="2" height="15" fill="rgb(232,5,10)"/><text x="25.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="22" y="932" width="2" height="15" fill="rgb(252,214,18)"/><text x="25.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="948" width="2" height="15" fill="rgb(222,6,31)"/><text x="25.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimes.py) (1 samples, 0.16%)</title><rect x="22" y="964" width="2" height="15" fill="rgb(243,135,35)"/><text x="25.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="980" width="2" height="15" fill="rgb(251,13,6)"/><text x="25.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="996" width="2" height="15" fill="rgb(237,32,6)"/><text x="25.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1012" width="2" height="15" fill="rgb(222,107,37)"/><text x="25.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1028" width="2" height="15" fill="rgb(246,161,12)"/><text x="25.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1044" width="2" height="15" fill="rgb(250,210,41)"/><text x="25.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="22" y="1060" width="2" height="15" fill="rgb(227,217,3)"/><text x="25.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1076" width="2" height="15" fill="rgb(246,193,39)"/><text x="25.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimelike.py) (1 samples, 0.16%)</title><rect x="22" y="1092" width="2" height="15" fill="rgb(220,76,16)"/><text x="25.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1108" width="2" height="15" fill="rgb(246,123,54)"/><text x="25.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1124" width="2" height="15" fill="rgb(228,84,7)"/><text x="25.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1140" width="2" height="15" fill="rgb(248,180,22)"/><text x="25.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="22" y="1156" width="2" height="15" fill="rgb(229,94,49)"/><text x="25.00" y="1166.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="22" y="1172" width="2" height="15" fill="rgb(252,36,26)"/><text x="25.00" y="1182.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 0.94%)</title><rect x="15" y="340" width="11" height="15" fill="rgb(213,14,11)"/><text x="18.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="15" y="356" width="11" height="15" fill="rgb(248,106,17)"/><text x="18.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="15" y="372" width="11" height="15" fill="rgb(214,167,4)"/><text x="18.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="15" y="388" width="11" height="15" fill="rgb(216,121,42)"/><text x="18.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.94%)</title><rect x="15" y="404" width="11" height="15" fill="rgb(228,12,21)"/><text x="18.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="15" y="420" width="11" height="15" fill="rgb(254,138,9)"/><text x="18.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 0.94%)</title><rect x="15" y="436" width="11" height="15" fill="rgb(239,221,20)"/><text x="18.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="15" y="452" width="11" height="15" fill="rgb(223,188,12)"/><text x="18.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="15" y="468" width="11" height="15" fill="rgb(208,205,22)"/><text x="18.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="19" y="484" width="7" height="15" fill="rgb(212,181,31)"/><text x="22.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.63%)</title><rect x="19" y="500" width="7" height="15" fill="rgb(234,146,31)"/><text x="22.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="19" y="516" width="7" height="15" fill="rgb(251,23,54)"/><text x="22.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 0.63%)</title><rect x="19" y="532" width="7" height="15" fill="rgb(208,218,7)"/><text x="22.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="19" y="548" width="7" height="15" fill="rgb(219,107,54)"/><text x="22.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="19" y="564" width="7" height="15" fill="rgb(247,133,21)"/><text x="22.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="19" y="580" width="7" height="15" fill="rgb(241,85,50)"/><text x="22.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.63%)</title><rect x="19" y="596" width="7" height="15" fill="rgb(242,220,40)"/><text x="22.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="19" y="612" width="7" height="15" fill="rgb(230,36,21)"/><text x="22.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 0.63%)</title><rect x="19" y="628" width="7" height="15" fill="rgb(254,65,35)"/><text x="22.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="19" y="644" width="7" height="15" fill="rgb(228,25,40)"/><text x="22.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="19" y="660" width="7" height="15" fill="rgb(218,63,46)"/><text x="22.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="19" y="676" width="7" height="15" fill="rgb(222,160,24)"/><text x="22.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.63%)</title><rect x="19" y="692" width="7" height="15" fill="rgb(242,206,26)"/><text x="22.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="19" y="708" width="7" height="15" fill="rgb(232,136,38)"/><text x="22.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.31%)</title><rect x="22" y="724" width="4" height="15" fill="rgb(230,223,54)"/><text x="25.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="740" width="4" height="15" fill="rgb(235,106,14)"/><text x="25.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="756" width="4" height="15" fill="rgb(212,37,14)"/><text x="25.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="772" width="2" height="15" fill="rgb(235,69,1)"/><text x="27.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="788" width="2" height="15" fill="rgb(211,143,27)"/><text x="27.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="804" width="2" height="15" fill="rgb(211,73,41)"/><text x="27.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.16%)</title><rect x="24" y="820" width="2" height="15" fill="rgb(252,224,34)"/><text x="27.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="836" width="2" height="15" fill="rgb(249,132,9)"/><text x="27.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="852" width="2" height="15" fill="rgb(253,201,30)"/><text x="27.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="868" width="2" height="15" fill="rgb(227,196,27)"/><text x="27.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="884" width="2" height="15" fill="rgb(206,76,24)"/><text x="27.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="900" width="2" height="15" fill="rgb(216,118,37)"/><text x="27.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.16%)</title><rect x="24" y="916" width="2" height="15" fill="rgb(212,55,9)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="932" width="2" height="15" fill="rgb(222,111,0)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="948" width="2" height="15" fill="rgb(211,54,26)"/><text x="27.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="964" width="2" height="15" fill="rgb(216,94,21)"/><text x="27.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="980" width="2" height="15" fill="rgb(223,46,21)"/><text x="27.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="996" width="2" height="15" fill="rgb(235,46,18)"/><text x="27.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.16%)</title><rect x="24" y="1012" width="2" height="15" fill="rgb(207,214,16)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1028" width="2" height="15" fill="rgb(232,214,6)"/><text x="27.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1044" width="2" height="15" fill="rgb(231,174,3)"/><text x="27.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1060" width="2" height="15" fill="rgb(237,168,10)"/><text x="27.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="1076" width="2" height="15" fill="rgb(209,46,30)"/><text x="27.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1092" width="2" height="15" fill="rgb(213,227,26)"/><text x="27.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.16%)</title><rect x="24" y="1108" width="2" height="15" fill="rgb(238,17,1)"/><text x="27.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1124" width="2" height="15" fill="rgb(213,158,2)"/><text x="27.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1140" width="2" height="15" fill="rgb(246,137,33)"/><text x="27.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1156" width="2" height="15" fill="rgb(208,85,28)"/><text x="27.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="1172" width="2" height="15" fill="rgb(213,122,16)"/><text x="27.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1188" width="2" height="15" fill="rgb(213,131,34)"/><text x="27.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.16%)</title><rect x="24" y="1204" width="2" height="15" fill="rgb(220,27,24)"/><text x="27.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1220" width="2" height="15" fill="rgb(215,74,17)"/><text x="27.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1236" width="2" height="15" fill="rgb(210,221,52)"/><text x="27.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1252" width="2" height="15" fill="rgb(248,182,6)"/><text x="27.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="1268" width="2" height="15" fill="rgb(253,43,43)"/><text x="27.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1284" width="2" height="15" fill="rgb(251,87,1)"/><text x="27.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.16%)</title><rect x="24" y="1300" width="2" height="15" fill="rgb(210,94,16)"/><text x="27.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1316" width="2" height="15" fill="rgb(230,71,43)"/><text x="27.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1332" width="2" height="15" fill="rgb(218,149,2)"/><text x="27.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1348" width="2" height="15" fill="rgb(239,16,50)"/><text x="27.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="1364" width="2" height="15" fill="rgb(225,11,35)"/><text x="27.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1380" width="2" height="15" fill="rgb(249,130,13)"/><text x="27.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.16%)</title><rect x="24" y="1396" width="2" height="15" fill="rgb(214,97,34)"/><text x="27.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1412" width="2" height="15" fill="rgb(218,168,6)"/><text x="27.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1428" width="2" height="15" fill="rgb(205,16,8)"/><text x="27.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1444" width="2" height="15" fill="rgb(211,221,54)"/><text x="27.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="1460" width="2" height="15" fill="rgb(224,152,35)"/><text x="27.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1476" width="2" height="15" fill="rgb(252,106,48)"/><text x="27.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.16%)</title><rect x="24" y="1492" width="2" height="15" fill="rgb(211,174,13)"/><text x="27.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1508" width="2" height="15" fill="rgb(217,127,17)"/><text x="27.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1524" width="2" height="15" fill="rgb(251,188,13)"/><text x="27.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1540" width="2" height="15" fill="rgb(237,119,13)"/><text x="27.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1556" width="2" height="15" fill="rgb(241,138,8)"/><text x="27.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1572" width="2" height="15" fill="rgb(235,189,32)"/><text x="27.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1588" width="2" height="15" fill="rgb(205,186,1)"/><text x="27.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="1604" width="2" height="15" fill="rgb(211,6,36)"/><text x="27.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1620" width="2" height="15" fill="rgb(236,81,4)"/><text x="27.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.16%)</title><rect x="24" y="1636" width="2" height="15" fill="rgb(252,211,20)"/><text x="27.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1652" width="2" height="15" fill="rgb(232,98,43)"/><text x="27.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1668" width="2" height="15" fill="rgb(222,125,48)"/><text x="27.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1684" width="2" height="15" fill="rgb(220,92,13)"/><text x="27.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1700" width="2" height="15" fill="rgb(226,13,54)"/><text x="27.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1716" width="2" height="15" fill="rgb(234,134,43)"/><text x="27.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="1732" width="2" height="15" fill="rgb(244,77,23)"/><text x="27.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1748" width="2" height="15" fill="rgb(254,172,32)"/><text x="27.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.16%)</title><rect x="24" y="1764" width="2" height="15" fill="rgb(212,218,16)"/><text x="27.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1780" width="2" height="15" fill="rgb(206,162,3)"/><text x="27.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1796" width="2" height="15" fill="rgb(231,167,29)"/><text x="27.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1812" width="2" height="15" fill="rgb(220,7,47)"/><text x="27.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="1828" width="2" height="15" fill="rgb(216,161,53)"/><text x="27.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1844" width="2" height="15" fill="rgb(223,176,45)"/><text x="27.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.16%)</title><rect x="24" y="1860" width="2" height="15" fill="rgb(248,228,38)"/><text x="27.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1876" width="2" height="15" fill="rgb(220,221,25)"/><text x="27.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1892" width="2" height="15" fill="rgb(234,66,10)"/><text x="27.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1908" width="2" height="15" fill="rgb(250,208,2)"/><text x="27.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="1924" width="2" height="15" fill="rgb(242,37,20)"/><text x="27.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1940" width="2" height="15" fill="rgb(241,60,12)"/><text x="27.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py) (1 samples, 0.16%)</title><rect x="24" y="1956" width="2" height="15" fill="rgb(208,90,1)"/><text x="27.00" y="1966.50"></text></g><g><title>pyparsing_common (pyparsing.py) (1 samples, 0.16%)</title><rect x="24" y="1972" width="2" height="15" fill="rgb(221,220,35)"/><text x="27.00" y="1982.50"></text></g><g><title>__init__ (pyparsing.py) (1 samples, 0.16%)</title><rect x="24" y="1988" width="2" height="15" fill="rgb(212,80,7)"/><text x="27.00" y="1998.50"></text></g><g><title>compile (re.py) (1 samples, 0.16%)</title><rect x="24" y="2004" width="2" height="15" fill="rgb(234,78,29)"/><text x="27.00" y="2014.50"></text></g><g><title>_compile (re.py) (1 samples, 0.16%)</title><rect x="24" y="2020" width="2" height="15" fill="rgb(241,63,46)"/><text x="27.00" y="2030.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.16%)</title><rect x="24" y="2036" width="2" height="15" fill="rgb(220,60,17)"/><text x="27.00" y="2046.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="24" y="2052" width="2" height="15" fill="rgb(248,189,9)"/><text x="27.00" y="2062.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.16%)</title><rect x="24" y="2068" width="2" height="15" fill="rgb(207,170,40)"/><text x="27.00" y="2078.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="24" y="2084" width="2" height="15" fill="rgb(215,172,9)"/><text x="27.00" y="2094.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.16%)</title><rect x="24" y="2100" width="2" height="15" fill="rgb(210,56,43)"/><text x="27.00" y="2110.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="24" y="2116" width="2" height="15" fill="rgb(217,226,29)"/><text x="27.00" y="2126.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.16%)</title><rect x="24" y="2132" width="2" height="15" fill="rgb(245,47,11)"/><text x="27.00" y="2142.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="24" y="2148" width="2" height="15" fill="rgb(228,37,31)"/><text x="27.00" y="2158.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.16%)</title><rect x="26" y="580" width="2" height="15" fill="rgb(211,95,33)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="596" width="2" height="15" fill="rgb(236,109,51)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="612" width="2" height="15" fill="rgb(245,160,24)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="628" width="2" height="15" fill="rgb(219,86,24)"/><text x="29.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="26" y="644" width="2" height="15" fill="rgb(231,172,35)"/><text x="29.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="660" width="2" height="15" fill="rgb(246,190,3)"/><text x="29.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.16%)</title><rect x="26" y="676" width="2" height="15" fill="rgb(249,80,50)"/><text x="29.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="692" width="2" height="15" fill="rgb(221,212,43)"/><text x="29.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="708" width="2" height="15" fill="rgb(221,201,11)"/><text x="29.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="724" width="2" height="15" fill="rgb(247,85,9)"/><text x="29.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="26" y="740" width="2" height="15" fill="rgb(232,151,25)"/><text x="29.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="756" width="2" height="15" fill="rgb(223,142,23)"/><text x="29.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.16%)</title><rect x="26" y="772" width="2" height="15" fill="rgb(239,32,6)"/><text x="29.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.16%)</title><rect x="26" y="788" width="2" height="15" fill="rgb(252,210,33)"/><text x="29.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.16%)</title><rect x="26" y="804" width="2" height="15" fill="rgb(215,24,42)"/><text x="29.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.16%)</title><rect x="26" y="820" width="2" height="15" fill="rgb(235,115,8)"/><text x="29.00" y="830.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="26" y="836" width="2" height="15" fill="rgb(232,201,25)"/><text x="29.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.16%)</title><rect x="26" y="852" width="2" height="15" fill="rgb(215,78,41)"/><text x="29.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="26" y="868" width="2" height="15" fill="rgb(238,63,33)"/><text x="29.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.16%)</title><rect x="26" y="884" width="2" height="15" fill="rgb(240,189,0)"/><text x="29.00" y="894.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="26" y="900" width="2" height="15" fill="rgb(225,157,47)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 1.26%)</title><rect x="15" y="244" width="15" height="15" fill="rgb(217,121,40)"/><text x="18.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.26%)</title><rect x="15" y="260" width="15" height="15" fill="rgb(245,153,3)"/><text x="18.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.26%)</title><rect x="15" y="276" width="15" height="15" fill="rgb(236,82,0)"/><text x="18.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.26%)</title><rect x="15" y="292" width="15" height="15" fill="rgb(225,221,11)"/><text x="18.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.26%)</title><rect x="15" y="308" width="15" height="15" fill="rgb(236,189,3)"/><text x="18.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.26%)</title><rect x="15" y="324" width="15" height="15" fill="rgb(225,22,33)"/><text x="18.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.31%)</title><rect x="26" y="340" width="4" height="15" fill="rgb(205,137,41)"/><text x="29.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="356" width="4" height="15" fill="rgb(254,110,26)"/><text x="29.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="372" width="4" height="15" fill="rgb(251,98,45)"/><text x="29.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="388" width="4" height="15" fill="rgb(219,221,32)"/><text x="29.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="404" width="4" height="15" fill="rgb(247,128,34)"/><text x="29.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="420" width="4" height="15" fill="rgb(234,168,3)"/><text x="29.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="436" width="4" height="15" fill="rgb(235,41,37)"/><text x="29.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="26" y="452" width="4" height="15" fill="rgb(235,98,28)"/><text x="29.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="468" width="4" height="15" fill="rgb(231,2,42)"/><text x="29.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.31%)</title><rect x="26" y="484" width="4" height="15" fill="rgb(211,95,42)"/><text x="29.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="500" width="4" height="15" fill="rgb(224,119,10)"/><text x="29.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="516" width="4" height="15" fill="rgb(213,102,45)"/><text x="29.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="532" width="4" height="15" fill="rgb(239,46,47)"/><text x="29.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="26" y="548" width="4" height="15" fill="rgb(215,96,47)"/><text x="29.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="564" width="4" height="15" fill="rgb(243,155,41)"/><text x="29.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.16%)</title><rect x="28" y="580" width="2" height="15" fill="rgb(224,160,7)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="596" width="2" height="15" fill="rgb(244,46,37)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="612" width="2" height="15" fill="rgb(211,181,35)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="628" width="2" height="15" fill="rgb(243,101,43)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="28" y="644" width="2" height="15" fill="rgb(234,91,32)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="660" width="2" height="15" fill="rgb(251,92,53)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.16%)</title><rect x="28" y="676" width="2" height="15" fill="rgb(226,76,40)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="692" width="2" height="15" fill="rgb(210,6,16)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="708" width="2" height="15" fill="rgb(245,58,32)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="724" width="2" height="15" fill="rgb(205,45,36)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="28" y="740" width="2" height="15" fill="rgb(214,216,20)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="756" width="2" height="15" fill="rgb(233,123,19)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.16%)</title><rect x="28" y="772" width="2" height="15" fill="rgb(221,12,33)"/><text x="31.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="788" width="2" height="15" fill="rgb(218,49,10)"/><text x="31.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="804" width="2" height="15" fill="rgb(222,82,42)"/><text x="31.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="820" width="2" height="15" fill="rgb(232,40,7)"/><text x="31.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="836" width="2" height="15" fill="rgb(236,172,45)"/><text x="31.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="852" width="2" height="15" fill="rgb(227,131,5)"/><text x="31.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="28" y="868" width="2" height="15" fill="rgb(245,217,18)"/><text x="31.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="884" width="2" height="15" fill="rgb(219,53,36)"/><text x="31.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.16%)</title><rect x="28" y="900" width="2" height="15" fill="rgb(238,195,23)"/><text x="31.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="916" width="2" height="15" fill="rgb(207,166,20)"/><text x="31.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="932" width="2" height="15" fill="rgb(230,110,5)"/><text x="31.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="948" width="2" height="15" fill="rgb(222,76,45)"/><text x="31.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="28" y="964" width="2" height="15" fill="rgb(231,131,30)"/><text x="31.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="980" width="2" height="15" fill="rgb(242,19,5)"/><text x="31.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.16%)</title><rect x="28" y="996" width="2" height="15" fill="rgb(235,89,18)"/><text x="31.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="1012" width="2" height="15" fill="rgb(215,156,32)"/><text x="31.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="1028" width="2" height="15" fill="rgb(229,182,41)"/><text x="31.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="1044" width="2" height="15" fill="rgb(246,185,46)"/><text x="31.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="28" y="1060" width="2" height="15" fill="rgb(250,224,29)"/><text x="31.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="1076" width="2" height="15" fill="rgb(231,162,17)"/><text x="31.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.16%)</title><rect x="28" y="1092" width="2" height="15" fill="rgb(207,113,0)"/><text x="31.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="1108" width="2" height="15" fill="rgb(249,144,2)"/><text x="31.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="1124" width="2" height="15" fill="rgb(252,121,49)"/><text x="31.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="1140" width="2" height="15" fill="rgb(232,57,21)"/><text x="31.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="28" y="1156" width="2" height="15" fill="rgb(213,10,35)"/><text x="31.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="1172" width="2" height="15" fill="rgb(239,164,14)"/><text x="31.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/ciphers.py) (1 samples, 0.16%)</title><rect x="28" y="1188" width="2" height="15" fill="rgb(247,12,5)"/><text x="31.00" y="1198.50"></text></g><g><title>register_decorator (cryptography/utils.py) (1 samples, 0.16%)</title><rect x="28" y="1204" width="2" height="15" fill="rgb(232,155,12)"/><text x="31.00" y="1214.50"></text></g><g><title>verify_interface (cryptography/utils.py) (1 samples, 0.16%)</title><rect x="28" y="1220" width="2" height="15" fill="rgb(217,213,45)"/><text x="31.00" y="1230.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.16%)</title><rect x="28" y="1236" width="2" height="15" fill="rgb(243,137,39)"/><text x="31.00" y="1246.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.16%)</title><rect x="28" y="1252" width="2" height="15" fill="rgb(232,4,20)"/><text x="31.00" y="1262.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.16%)</title><rect x="28" y="1268" width="2" height="15" fill="rgb(252,52,2)"/><text x="31.00" y="1278.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.16%)</title><rect x="28" y="1284" width="2" height="15" fill="rgb(224,44,0)"/><text x="31.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.04%)</title><rect x="10" y="68" width="24" height="15" fill="rgb(206,148,31)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.04%)</title><rect x="10" y="84" width="24" height="15" fill="rgb(216,76,0)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.04%)</title><rect x="10" y="100" width="24" height="15" fill="rgb(248,206,36)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 2.04%)</title><rect x="10" y="116" width="24" height="15" fill="rgb(221,7,8)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.04%)</title><rect x="10" y="132" width="24" height="15" fill="rgb(226,68,35)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py) (13 samples, 2.04%)</title><rect x="10" y="148" width="24" height="15" fill="rgb(253,198,9)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.04%)</title><rect x="10" y="164" width="24" height="15" fill="rgb(224,197,50)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.04%)</title><rect x="10" y="180" width="24" height="15" fill="rgb(226,207,33)"/><text x="13.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.57%)</title><rect x="15" y="196" width="19" height="15" fill="rgb(230,113,27)"/><text x="18.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.57%)</title><rect x="15" y="212" width="19" height="15" fill="rgb(229,145,52)"/><text x="18.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.57%)</title><rect x="15" y="228" width="19" height="15" fill="rgb(218,80,1)"/><text x="18.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.31%)</title><rect x="30" y="244" width="4" height="15" fill="rgb(226,127,49)"/><text x="33.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="30" y="260" width="4" height="15" fill="rgb(224,54,11)"/><text x="33.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="30" y="276" width="4" height="15" fill="rgb(215,170,37)"/><text x="33.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="30" y="292" width="4" height="15" fill="rgb(246,58,44)"/><text x="33.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="30" y="308" width="4" height="15" fill="rgb(237,163,11)"/><text x="33.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="30" y="324" width="4" height="15" fill="rgb(228,144,41)"/><text x="33.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (2 samples, 0.31%)</title><rect x="30" y="340" width="4" height="15" fill="rgb(252,187,17)"/><text x="33.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="30" y="356" width="4" height="15" fill="rgb(243,66,23)"/><text x="33.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="30" y="372" width="4" height="15" fill="rgb(213,37,18)"/><text x="33.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="30" y="388" width="4" height="15" fill="rgb(225,210,3)"/><text x="33.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="30" y="404" width="4" height="15" fill="rgb(232,204,23)"/><text x="33.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="30" y="420" width="4" height="15" fill="rgb(212,102,48)"/><text x="33.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py) (2 samples, 0.31%)</title><rect x="30" y="436" width="4" height="15" fill="rgb(207,185,5)"/><text x="33.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="30" y="452" width="4" height="15" fill="rgb(247,33,49)"/><text x="33.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="30" y="468" width="4" height="15" fill="rgb(205,166,45)"/><text x="33.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="30" y="484" width="4" height="15" fill="rgb(228,151,26)"/><text x="33.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="30" y="500" width="4" height="15" fill="rgb(228,125,7)"/><text x="33.00" y="510.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="30" y="516" width="4" height="15" fill="rgb(209,200,22)"/><text x="33.00" y="526.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="30" y="532" width="4" height="15" fill="rgb(244,204,13)"/><text x="33.00" y="542.50"></text></g><g><title>0x7f77a6703ff9 (?) (1 samples, 0.16%)</title><rect x="35" y="212" width="2" height="15" fill="rgb(242,66,34)"/><text x="38.00" y="222.50"></text></g><g><title>0x7f77a66feef6 (?) (1 samples, 0.16%)</title><rect x="35" y="228" width="2" height="15" fill="rgb(227,150,7)"/><text x="38.00" y="238.50"></text></g><g><title>0x7f77a66f3962 (?) (1 samples, 0.16%)</title><rect x="35" y="244" width="2" height="15" fill="rgb(235,125,38)"/><text x="38.00" y="254.50"></text></g><g><title>0x7f77a67277a7 (?) (1 samples, 0.16%)</title><rect x="35" y="260" width="2" height="15" fill="rgb(218,40,42)"/><text x="38.00" y="270.50"></text></g><g><title>0x7f77a6727379 (?) (1 samples, 0.16%)</title><rect x="35" y="276" width="2" height="15" fill="rgb(213,59,3)"/><text x="38.00" y="286.50"></text></g><g><title>0x7f77a6b858b8 (?) (1 samples, 0.16%)</title><rect x="35" y="292" width="2" height="15" fill="rgb(227,154,10)"/><text x="38.00" y="302.50"></text></g><g><title>0x7f77a6b83c7f (?) (1 samples, 0.16%)</title><rect x="35" y="308" width="2" height="15" fill="rgb(220,0,34)"/><text x="38.00" y="318.50"></text></g><g><title>0x7f77a6b9699c (?) (1 samples, 0.16%)</title><rect x="35" y="324" width="2" height="15" fill="rgb(209,56,33)"/><text x="38.00" y="334.50"></text></g><g><title>0x7f77a68bddc2 (?) (1 samples, 0.16%)</title><rect x="35" y="340" width="2" height="15" fill="rgb(231,107,12)"/><text x="38.00" y="350.50"></text></g><g><title>0x7f77a68bd541 (?) (1 samples, 0.16%)</title><rect x="35" y="356" width="2" height="15" fill="rgb(245,61,42)"/><text x="38.00" y="366.50"></text></g><g><title>onnxruntime::ArgMin&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.94%)</title><rect x="39" y="340" width="11" height="15" fill="rgb(208,123,7)"/><text x="42.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.94%)</title><rect x="39" y="356" width="11" height="15" fill="rgb(254,213,16)"/><text x="42.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="48" y="372" width="2" height="15" fill="rgb(228,180,12)"/><text x="51.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="48" y="388" width="2" height="15" fill="rgb(250,214,13)"/><text x="51.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="48" y="404" width="2" height="15" fill="rgb(209,174,54)"/><text x="51.00" y="414.50"></text></g><g><title>0x7f77e66c7028 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="48" y="420" width="2" height="15" fill="rgb(210,70,23)"/><text x="51.00" y="430.50"></text></g><g><title>0x7f77e66c4b9b (libc-2.29.so) (1 samples, 0.16%)</title><rect x="48" y="436" width="2" height="15" fill="rgb(235,39,10)"/><text x="51.00" y="446.50"></text></g><g><title>onnxruntime::Cast&lt;bool&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="50" y="340" width="4" height="15" fill="rgb(230,162,49)"/><text x="53.00" y="350.50"></text></g><g><title>onnxruntime::Concat::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.63%)</title><rect x="54" y="340" width="7" height="15" fill="rgb(222,78,23)"/><text x="57.00" y="350.50"></text></g><g><title>onnxruntime::ConcatBase::ComputeImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.63%)</title><rect x="54" y="356" width="7" height="15" fill="rgb(248,58,40)"/><text x="57.00" y="366.50"></text></g><g><title>0x7f77e66e5dcb (libc-2.29.so) (1 samples, 0.16%)</title><rect x="60" y="372" width="1" height="15" fill="rgb(236,96,34)"/><text x="63.00" y="382.50"></text></g><g><title>(anonymous namespace)::CopySlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="61" y="356" width="4" height="15" fill="rgb(223,142,49)"/><text x="64.00" y="366.50"></text></g><g><title>(anonymous namespace)::SumSlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.94%)</title><rect x="65" y="356" width="11" height="15" fill="rgb(247,201,45)"/><text x="68.00" y="366.50"></text></g><g><title>onnxruntime::CumSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.42%)</title><rect x="61" y="340" width="17" height="15" fill="rgb(223,111,49)"/><text x="64.00" y="350.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector [clone .constprop.161] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="76" y="356" width="2" height="15" fill="rgb(211,15,45)"/><text x="79.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="76" y="372" width="2" height="15" fill="rgb(246,83,22)"/><text x="79.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="76" y="388" width="2" height="15" fill="rgb(237,192,13)"/><text x="79.00" y="398.50"></text></g><g><title>0x7f77e66c769f (libc-2.29.so) (1 samples, 0.16%)</title><rect x="76" y="404" width="2" height="15" fill="rgb(217,117,50)"/><text x="79.00" y="414.50"></text></g><g><title>onnxruntime::GatherElements::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.26%)</title><rect x="78" y="340" width="15" height="15" fill="rgb(220,130,19)"/><text x="81.00" y="350.50"></text></g><g><title>onnxruntime::parse_and_validate_indices_tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="89" y="356" width="4" height="15" fill="rgb(232,220,44)"/><text x="92.00" y="366.50"></text></g><g><title>onnxruntime::Less&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="93" y="340" width="4" height="15" fill="rgb(248,80,45)"/><text x="96.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="93" y="356" width="4" height="15" fill="rgb(233,88,48)"/><text x="96.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.79%)</title><rect x="97" y="372" width="9" height="15" fill="rgb(214,101,12)"/><text x="100.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.63%)</title><rect x="99" y="388" width="7" height="15" fill="rgb(249,75,9)"/><text x="102.00" y="398.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.94%)</title><rect x="97" y="340" width="11" height="15" fill="rgb(246,127,5)"/><text x="100.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.94%)</title><rect x="97" y="356" width="11" height="15" fill="rgb(252,227,3)"/><text x="100.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="106" y="372" width="2" height="15" fill="rgb(206,98,49)"/><text x="109.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="106" y="388" width="2" height="15" fill="rgb(251,225,8)"/><text x="109.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="106" y="404" width="2" height="15" fill="rgb(225,113,26)"/><text x="109.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="106" y="420" width="2" height="15" fill="rgb(228,113,23)"/><text x="109.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="106" y="436" width="2" height="15" fill="rgb(223,174,29)"/><text x="109.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="106" y="452" width="2" height="15" fill="rgb(235,57,12)"/><text x="109.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="106" y="468" width="2" height="15" fill="rgb(245,176,30)"/><text x="109.00" y="478.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="106" y="484" width="2" height="15" fill="rgb(210,85,15)"/><text x="109.00" y="494.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="108" y="340" width="2" height="15" fill="rgb(252,47,44)"/><text x="111.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="108" y="356" width="2" height="15" fill="rgb(216,99,38)"/><text x="111.00" y="366.50"></text></g><g><title>0x7f77a66cb0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="141" y="388" width="2" height="15" fill="rgb(242,213,17)"/><text x="144.00" y="398.50"></text></g><g><title>0x7f77e66c5945 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="143" y="388" width="2" height="15" fill="rgb(229,20,40)"/><text x="146.00" y="398.50"></text></g><g><title>0x7f77e6897e7e (libm-2.29.so) (1 samples, 0.16%)</title><rect x="145" y="388" width="2" height="15" fill="rgb(206,37,25)"/><text x="148.00" y="398.50"></text></g><g><title>0x7f77e6897ea2 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="147" y="388" width="2" height="15" fill="rgb(235,117,17)"/><text x="150.00" y="398.50"></text></g><g><title>0x7f77e6897eb6 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="149" y="388" width="2" height="15" fill="rgb(251,57,43)"/><text x="152.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.16%)</title><rect x="151" y="388" width="1" height="15" fill="rgb(245,83,40)"/><text x="154.00" y="398.50"></text></g><g><title>logf32x (libm-2.29.so) (2 samples, 0.31%)</title><rect x="152" y="388" width="4" height="15" fill="rgb(229,65,42)"/><text x="155.00" y="398.50"></text></g><g><title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, long, std::pair&lt;float, long&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::GreaterValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.94%)</title><rect x="156" y="388" width="11" height="15" fill="rgb(230,110,14)"/><text x="159.00" y="398.50"></text></g><g><title>0x7f77e66c5945 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="178" y="404" width="2" height="15" fill="rgb(252,185,44)"/><text x="181.00" y="414.50"></text></g><g><title>0x7f77e66c5a38 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="180" y="404" width="2" height="15" fill="rgb(205,44,52)"/><text x="183.00" y="414.50"></text></g><g><title>0x7f77e66c5a55 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="182" y="404" width="2" height="15" fill="rgb(220,5,43)"/><text x="185.00" y="414.50"></text></g><g><title>0x7f77e66c5bd8 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="184" y="404" width="2" height="15" fill="rgb(220,184,51)"/><text x="187.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.31%)</title><rect x="186" y="404" width="3" height="15" fill="rgb(238,219,52)"/><text x="189.00" y="414.50"></text></g><g><title>0x7f77d6191d50 (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="189" y="420" width="2" height="15" fill="rgb(250,135,29)"/><text x="192.00" y="430.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (48 samples, 7.55%)</title><rect x="110" y="340" width="89" height="15" fill="rgb(252,188,49)"/><text x="113.00" y="350.50">onnxruntim..</text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (48 samples, 7.55%)</title><rect x="110" y="356" width="89" height="15" fill="rgb(214,135,19)"/><text x="113.00" y="366.50">onnxruntim..</text></g><g><title>onnxruntime::extract_top_k_elements&lt;true, true, onnxruntime::GreaterValueCmp&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (48 samples, 7.55%)</title><rect x="110" y="372" width="89" height="15" fill="rgb(212,156,24)"/><text x="113.00" y="382.50">onnxruntim..</text></g><g><title>std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt;::_M_emplace_back_aux&lt;std::pair&lt;float, long&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.67%)</title><rect x="167" y="388" width="32" height="15" fill="rgb(214,120,24)"/><text x="170.00" y="398.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.79%)</title><rect x="189" y="404" width="10" height="15" fill="rgb(229,64,15)"/><text x="192.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.63%)</title><rect x="191" y="420" width="8" height="15" fill="rgb(209,194,34)"/><text x="194.00" y="430.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="199" y="340" width="2" height="15" fill="rgb(223,7,11)"/><text x="202.00" y="350.50"></text></g><g><title>0x7f77a66cb0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="236" y="356" width="2" height="15" fill="rgb(237,97,48)"/><text x="239.00" y="366.50"></text></g><g><title>0x7f77e66c5906 (libc-2.29.so) (3 samples, 0.47%)</title><rect x="238" y="356" width="5" height="15" fill="rgb(226,189,52)"/><text x="241.00" y="366.50"></text></g><g><title>0x7f77e66c591c (libc-2.29.so) (1 samples, 0.16%)</title><rect x="243" y="356" width="2" height="15" fill="rgb(223,82,21)"/><text x="246.00" y="366.50"></text></g><g><title>0x7f77e66c5929 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="245" y="356" width="2" height="15" fill="rgb(217,133,12)"/><text x="248.00" y="366.50"></text></g><g><title>0x7f77e66c5957 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="247" y="356" width="2" height="15" fill="rgb(226,225,4)"/><text x="250.00" y="366.50"></text></g><g><title>0x7f77e66c5961 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="249" y="356" width="4" height="15" fill="rgb(220,68,32)"/><text x="252.00" y="366.50"></text></g><g><title>0x7f77e66c5991 (libc-2.29.so) (3 samples, 0.47%)</title><rect x="253" y="356" width="5" height="15" fill="rgb(206,134,47)"/><text x="256.00" y="366.50"></text></g><g><title>0x7f77e66c5998 (libc-2.29.so) (3 samples, 0.47%)</title><rect x="258" y="356" width="6" height="15" fill="rgb(234,146,4)"/><text x="261.00" y="366.50"></text></g><g><title>0x7f77e66c5a41 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="264" y="356" width="2" height="15" fill="rgb(243,180,13)"/><text x="267.00" y="366.50"></text></g><g><title>0x7f77e66c5a4d (libc-2.29.so) (2 samples, 0.31%)</title><rect x="266" y="356" width="3" height="15" fill="rgb(247,30,0)"/><text x="269.00" y="366.50"></text></g><g><title>0x7f77e66c5a55 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="269" y="356" width="2" height="15" fill="rgb(230,89,40)"/><text x="272.00" y="366.50"></text></g><g><title>0x7f77e66c5be4 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="271" y="356" width="2" height="15" fill="rgb(222,68,27)"/><text x="274.00" y="366.50"></text></g><g><title>0x7f77e66c5be8 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="273" y="356" width="2" height="15" fill="rgb(225,91,36)"/><text x="276.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (10 samples, 1.57%)</title><rect x="275" y="356" width="18" height="15" fill="rgb(205,7,53)"/><text x="278.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.63%)</title><rect x="408" y="388" width="8" height="15" fill="rgb(236,208,4)"/><text x="411.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.63%)</title><rect x="408" y="404" width="8" height="15" fill="rgb(227,106,52)"/><text x="411.00" y="414.50"></text></g><g><title>0x7f77e66e612f (libc-2.29.so) (1 samples, 0.16%)</title><rect x="447" y="420" width="2" height="15" fill="rgb(240,73,1)"/><text x="450.00" y="430.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.67%)</title><rect x="436" y="404" width="32" height="15" fill="rgb(216,65,41)"/><text x="439.00" y="414.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (10 samples, 1.57%)</title><rect x="449" y="420" width="19" height="15" fill="rgb(249,99,8)"/><text x="452.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (9 samples, 1.42%)</title><rect x="451" y="436" width="17" height="15" fill="rgb(215,184,49)"/><text x="454.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (129 samples, 20.28%)</title><rect x="293" y="356" width="240" height="15" fill="rgb(213,223,4)"/><text x="296.00" y="366.50">onnxruntime::ml::TreeEnsembleRe..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (77 samples, 12.11%)</title><rect x="390" y="372" width="143" height="15" fill="rgb(245,40,50)"/><text x="393.00" y="382.50">std::_Hashtable&lt;lo..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (63 samples, 9.91%)</title><rect x="416" y="388" width="117" height="15" fill="rgb(232,208,46)"/><text x="419.00" y="398.50">std::_Hashtabl..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (35 samples, 5.50%)</title><rect x="468" y="404" width="65" height="15" fill="rgb(231,147,3)"/><text x="471.00" y="414.50">std::__..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (17 samples, 2.67%)</title><rect x="501" y="420" width="32" height="15" fill="rgb(254,164,47)"/><text x="504.00" y="430.50">st..</text></g><g><title>0x7f77a66ca850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="538" y="372" width="2" height="15" fill="rgb(206,73,28)"/><text x="541.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.79%)</title><rect x="533" y="356" width="9" height="15" fill="rgb(213,222,21)"/><text x="536.00" y="366.50"></text></g><g><title>0x7f77e66e5d50 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="540" y="372" width="2" height="15" fill="rgb(228,168,49)"/><text x="543.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="542" y="356" width="2" height="15" fill="rgb(226,97,50)"/><text x="545.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.57%)</title><rect x="544" y="356" width="18" height="15" fill="rgb(223,30,54)"/><text x="547.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (290 samples, 45.60%)</title><rect x="39" y="260" width="538" height="15" fill="rgb(210,164,48)"/><text x="42.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (290 samples, 45.60%)</title><rect x="39" y="276" width="538" height="15" fill="rgb(228,197,3)"/><text x="42.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (290 samples, 45.60%)</title><rect x="39" y="292" width="538" height="15" fill="rgb(205,104,11)"/><text x="42.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_s..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (290 samples, 45.60%)</title><rect x="39" y="308" width="538" height="15" fill="rgb(230,38,5)"/><text x="42.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (290 samples, 45.60%)</title><rect x="39" y="324" width="538" height="15" fill="rgb(250,2,15)"/><text x="42.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_py..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (203 samples, 31.92%)</title><rect x="201" y="340" width="376" height="15" fill="rgb(214,60,53)"/><text x="204.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Comp..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.26%)</title><rect x="562" y="356" width="15" height="15" fill="rgb(221,97,38)"/><text x="565.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.63%)</title><rect x="570" y="372" width="7" height="15" fill="rgb(225,137,47)"/><text x="573.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.63%)</title><rect x="570" y="388" width="7" height="15" fill="rgb(238,33,42)"/><text x="573.00" y="398.50"></text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (294 samples, 46.23%)</title><rect x="34" y="100" width="545" height="15" fill="rgb(207,104,3)"/><text x="37.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_fl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (294 samples, 46.23%)</title><rect x="34" y="116" width="545" height="15" fill="rgb(241,99,53)"/><text x="37.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (294 samples, 46.23%)</title><rect x="34" y="132" width="545" height="15" fill="rgb(214,228,19)"/><text x="37.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (294 samples, 46.23%)</title><rect x="34" y="148" width="545" height="15" fill="rgb(224,36,4)"/><text x="37.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (294 samples, 46.23%)</title><rect x="34" y="164" width="545" height="15" fill="rgb(232,225,50)"/><text x="37.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (294 samples, 46.23%)</title><rect x="34" y="180" width="545" height="15" fill="rgb(227,107,27)"/><text x="37.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (294 samples, 46.23%)</title><rect x="34" y="196" width="545" height="15" fill="rgb(215,158,16)"/><text x="37.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (292 samples, 45.91%)</title><rect x="37" y="212" width="542" height="15" fill="rgb(249,16,54)"/><text x="40.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (292 samples, 45.91%)</title><rect x="37" y="228" width="542" height="15" fill="rgb(249,194,38)"/><text x="40.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMeth..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (292 samples, 45.91%)</title><rect x="37" y="244" width="542" height="15" fill="rgb(218,203,28)"/><text x="40.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxrunt..</text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="577" y="260" width="2" height="15" fill="rgb(249,1,16)"/><text x="580.00" y="270.50"></text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (295 samples, 46.38%)</title><rect x="34" y="68" width="547" height="15" fill="rgb(224,212,54)"/><text x="37.00" y="78.50">profile_ort (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (295 samples, 46.38%)</title><rect x="34" y="84" width="547" height="15" fill="rgb(215,134,1)"/><text x="37.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.16%)</title><rect x="579" y="100" width="2" height="15" fill="rgb(238,67,34)"/><text x="582.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.16%)</title><rect x="579" y="116" width="2" height="15" fill="rgb(207,124,22)"/><text x="582.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.16%)</title><rect x="579" y="132" width="2" height="15" fill="rgb(239,189,20)"/><text x="582.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.16%)</title><rect x="579" y="148" width="2" height="15" fill="rgb(231,128,25)"/><text x="582.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.16%)</title><rect x="579" y="164" width="2" height="15" fill="rgb(231,114,4)"/><text x="582.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="579" y="180" width="2" height="15" fill="rgb(238,192,44)"/><text x="582.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="579" y="196" width="2" height="15" fill="rgb(250,112,15)"/><text x="582.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="579" y="212" width="2" height="15" fill="rgb(247,47,5)"/><text x="582.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="579" y="228" width="2" height="15" fill="rgb(240,208,30)"/><text x="582.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="579" y="244" width="2" height="15" fill="rgb(217,196,52)"/><text x="582.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.16%)</title><rect x="579" y="260" width="2" height="15" fill="rgb(237,183,10)"/><text x="582.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="579" y="276" width="2" height="15" fill="rgb(208,11,38)"/><text x="582.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="579" y="292" width="2" height="15" fill="rgb(252,118,13)"/><text x="582.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="579" y="308" width="2" height="15" fill="rgb(222,107,19)"/><text x="582.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="579" y="324" width="2" height="15" fill="rgb(231,74,34)"/><text x="582.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="579" y="340" width="2" height="15" fill="rgb(229,141,16)"/><text x="582.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.16%)</title><rect x="579" y="356" width="2" height="15" fill="rgb(214,159,44)"/><text x="582.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="579" y="372" width="2" height="15" fill="rgb(219,2,14)"/><text x="582.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="579" y="388" width="2" height="15" fill="rgb(225,85,29)"/><text x="582.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="579" y="404" width="2" height="15" fill="rgb(248,154,3)"/><text x="582.00" y="414.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="579" y="420" width="2" height="15" fill="rgb(216,177,44)"/><text x="582.00" y="430.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="579" y="436" width="2" height="15" fill="rgb(227,10,43)"/><text x="582.00" y="446.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="579" y="452" width="2" height="15" fill="rgb(250,52,33)"/><text x="582.00" y="462.50"></text></g><g><title>LONG_getitem (arraytypes.c.src) (4 samples, 0.63%)</title><rect x="601" y="260" width="8" height="15" fill="rgb(226,143,27)"/><text x="604.00" y="270.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="609" y="260" width="2" height="15" fill="rgb(254,47,32)"/><text x="612.00" y="270.50"></text></g><g><title>0x7f77e66e6103 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="609" y="276" width="2" height="15" fill="rgb(247,112,18)"/><text x="612.00" y="286.50"></text></g><g><title>PyArray_ToList (convert.c) (9 samples, 1.42%)</title><rect x="600" y="228" width="16" height="15" fill="rgb(220,209,50)"/><text x="603.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (9 samples, 1.42%)</title><rect x="600" y="244" width="16" height="15" fill="rgb(219,190,19)"/><text x="603.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c) (3 samples, 0.47%)</title><rect x="611" y="260" width="5" height="15" fill="rgb(243,75,11)"/><text x="614.00" y="270.50"></text></g><g><title>PyArray_GETITEM (ndarraytypes.h) (1 samples, 0.16%)</title><rect x="614" y="276" width="2" height="15" fill="rgb(210,5,15)"/><text x="617.00" y="286.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.16%)</title><rect x="616" y="244" width="2" height="15" fill="rgb(247,113,36)"/><text x="619.00" y="254.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.16%)</title><rect x="616" y="260" width="2" height="15" fill="rgb(254,87,4)"/><text x="619.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.16%)</title><rect x="616" y="276" width="2" height="15" fill="rgb(212,102,15)"/><text x="619.00" y="286.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.16%)</title><rect x="616" y="292" width="2" height="15" fill="rgb(222,0,32)"/><text x="619.00" y="302.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.16%)</title><rect x="616" y="308" width="2" height="15" fill="rgb(252,97,12)"/><text x="619.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="618" y="244" width="2" height="15" fill="rgb(244,50,21)"/><text x="621.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.16%)</title><rect x="618" y="260" width="2" height="15" fill="rgb(243,85,46)"/><text x="621.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.16%)</title><rect x="618" y="276" width="2" height="15" fill="rgb(218,29,53)"/><text x="621.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (3 samples, 0.47%)</title><rect x="620" y="244" width="5" height="15" fill="rgb(237,53,5)"/><text x="623.00" y="254.50"></text></g><g><title>_aligned_strided_to_contig_size4 (lowlevel_strided_loops.c.src) (1 samples, 0.16%)</title><rect x="624" y="260" width="1" height="15" fill="rgb(240,214,46)"/><text x="627.00" y="270.50"></text></g><g><title>0x7f77e58e80a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="646" y="340" width="2" height="15" fill="rgb(208,34,14)"/><text x="649.00" y="350.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (7 samples, 1.10%)</title><rect x="648" y="340" width="13" height="15" fill="rgb(236,195,43)"/><text x="651.00" y="350.50"></text></g><g><title>0x7f77e58e7740 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="659" y="356" width="2" height="15" fill="rgb(253,155,49)"/><text x="662.00" y="366.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (20 samples, 3.14%)</title><rect x="625" y="276" width="38" height="15" fill="rgb(217,197,18)"/><text x="628.00" y="286.50">PyA..</text></g><g><title>setArrayFromSequence (ctors.c) (20 samples, 3.14%)</title><rect x="625" y="292" width="38" height="15" fill="rgb(254,32,20)"/><text x="628.00" y="302.50">set..</text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (16 samples, 2.52%)</title><rect x="633" y="308" width="30" height="15" fill="rgb(231,39,43)"/><text x="636.00" y="318.50">Py..</text></g><g><title>LONG_setitem (arraytypes.c.src) (15 samples, 2.36%)</title><rect x="635" y="324" width="28" height="15" fill="rgb(217,167,13)"/><text x="638.00" y="334.50">L..</text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.16%)</title><rect x="661" y="340" width="2" height="15" fill="rgb(237,129,6)"/><text x="664.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (3 samples, 0.47%)</title><rect x="700" y="340" width="5" height="15" fill="rgb(218,176,9)"/><text x="703.00" y="350.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c) (1 samples, 0.16%)</title><rect x="703" y="356" width="2" height="15" fill="rgb(217,57,12)"/><text x="706.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (2 samples, 0.31%)</title><rect x="737" y="356" width="4" height="15" fill="rgb(217,176,46)"/><text x="740.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (43 samples, 6.76%)</title><rect x="663" y="292" width="79" height="15" fill="rgb(211,45,52)"/><text x="666.00" y="302.50">PyArray_D..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (43 samples, 6.76%)</title><rect x="663" y="308" width="79" height="15" fill="rgb(217,208,10)"/><text x="666.00" y="318.50">PyArray_D..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (41 samples, 6.45%)</title><rect x="666" y="324" width="76" height="15" fill="rgb(246,100,1)"/><text x="669.00" y="334.50">PyArray_..</text></g><g><title>_array_find_python_scalar_type (common.c) (20 samples, 3.14%)</title><rect x="705" y="340" width="37" height="15" fill="rgb(207,19,7)"/><text x="708.00" y="350.50">_ar..</text></g><g><title>PyInt_Check (npy_3kcompat.h) (1 samples, 0.16%)</title><rect x="741" y="356" width="1" height="15" fill="rgb(234,215,49)"/><text x="744.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (96 samples, 15.09%)</title><rect x="598" y="212" width="178" height="15" fill="rgb(225,170,47)"/><text x="601.00" y="222.50">_run (mlprodict/onnxrt/..</text></g><g><title>array_subscript (mapping.c) (86 samples, 13.52%)</title><rect x="616" y="228" width="160" height="15" fill="rgb(231,120,40)"/><text x="619.00" y="238.50">array_subscript (map..</text></g><g><title>prepare_index (mapping.c) (81 samples, 12.74%)</title><rect x="625" y="244" width="151" height="15" fill="rgb(251,154,51)"/><text x="628.00" y="254.50">prepare_index (mapp..</text></g><g><title>PyArray_FromAny (ctors.c) (81 samples, 12.74%)</title><rect x="625" y="260" width="151" height="15" fill="rgb(241,147,14)"/><text x="628.00" y="270.50">PyArray_FromAny (ct..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (61 samples, 9.59%)</title><rect x="663" y="276" width="113" height="15" fill="rgb(237,76,2)"/><text x="666.00" y="286.50">PyArray_GetAr..</text></g><g><title>discover_dimensions (ctors.c) (18 samples, 2.83%)</title><rect x="742" y="292" width="34" height="15" fill="rgb(208,53,19)"/><text x="745.00" y="302.50">di..</text></g><g><title>discover_dimensions (ctors.c) (12 samples, 1.89%)</title><rect x="753" y="308" width="23" height="15" fill="rgb(212,175,13)"/><text x="756.00" y="318.50">d..</text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.31%)</title><rect x="776" y="260" width="3" height="15" fill="rgb(239,217,30)"/><text x="779.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.31%)</title><rect x="776" y="276" width="3" height="15" fill="rgb(254,84,52)"/><text x="779.00" y="286.50"></text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src) (2 samples, 0.31%)</title><rect x="776" y="292" width="3" height="15" fill="rgb(245,226,17)"/><text x="779.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (3 samples, 0.47%)</title><rect x="776" y="212" width="5" height="15" fill="rgb(254,151,14)"/><text x="779.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (3 samples, 0.47%)</title><rect x="776" y="228" width="5" height="15" fill="rgb(207,52,6)"/><text x="779.00" y="238.50"></text></g><g><title>array_astype (methods.c) (3 samples, 0.47%)</title><rect x="776" y="244" width="5" height="15" fill="rgb(213,73,30)"/><text x="779.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.16%)</title><rect x="779" y="260" width="2" height="15" fill="rgb(232,26,40)"/><text x="782.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.16%)</title><rect x="779" y="276" width="2" height="15" fill="rgb(238,227,54)"/><text x="782.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.16%)</title><rect x="779" y="292" width="2" height="15" fill="rgb(237,7,27)"/><text x="782.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="779" y="308" width="2" height="15" fill="rgb(210,150,33)"/><text x="782.00" y="318.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.16%)</title><rect x="779" y="324" width="2" height="15" fill="rgb(209,122,6)"/><text x="782.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.16%)</title><rect x="779" y="340" width="2" height="15" fill="rgb(232,221,0)"/><text x="782.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="779" y="356" width="2" height="15" fill="rgb(247,182,0)"/><text x="782.00" y="366.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.16%)</title><rect x="781" y="228" width="2" height="15" fill="rgb(210,79,44)"/><text x="784.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.16%)</title><rect x="781" y="244" width="2" height="15" fill="rgb(222,153,0)"/><text x="784.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.16%)</title><rect x="781" y="260" width="2" height="15" fill="rgb(247,84,48)"/><text x="784.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py) (2 samples, 0.31%)</title><rect x="781" y="212" width="4" height="15" fill="rgb(227,182,53)"/><text x="784.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (1 samples, 0.16%)</title><rect x="783" y="228" width="2" height="15" fill="rgb(229,140,40)"/><text x="786.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.16%)</title><rect x="783" y="244" width="2" height="15" fill="rgb(224,0,20)"/><text x="786.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (1 samples, 0.16%)</title><rect x="783" y="260" width="2" height="15" fill="rgb(244,73,11)"/><text x="786.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.16%)</title><rect x="783" y="276" width="2" height="15" fill="rgb(228,61,50)"/><text x="786.00" y="286.50"></text></g><g><title>array_cumsum (methods.c) (1 samples, 0.16%)</title><rect x="783" y="292" width="2" height="15" fill="rgb(250,156,41)"/><text x="786.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c) (1 samples, 0.16%)</title><rect x="783" y="308" width="2" height="15" fill="rgb(252,134,30)"/><text x="786.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (1 samples, 0.16%)</title><rect x="783" y="324" width="2" height="15" fill="rgb(239,85,27)"/><text x="786.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (1 samples, 0.16%)</title><rect x="783" y="340" width="2" height="15" fill="rgb(221,48,15)"/><text x="786.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.16%)</title><rect x="783" y="356" width="2" height="15" fill="rgb(208,50,3)"/><text x="786.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (1 samples, 0.16%)</title><rect x="783" y="372" width="2" height="15" fill="rgb(221,162,47)"/><text x="786.00" y="382.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c) (1 samples, 0.16%)</title><rect x="783" y="388" width="2" height="15" fill="rgb(245,109,49)"/><text x="786.00" y="398.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.16%)</title><rect x="789" y="308" width="2" height="15" fill="rgb(243,125,10)"/><text x="792.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.16%)</title><rect x="804" y="356" width="1" height="15" fill="rgb(231,198,2)"/><text x="807.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.16%)</title><rect x="804" y="372" width="1" height="15" fill="rgb(250,71,41)"/><text x="807.00" y="382.50"></text></g><g><title>PyArray_NewCopy (convert.c) (2 samples, 0.31%)</title><rect x="804" y="340" width="3" height="15" fill="rgb(240,219,49)"/><text x="807.00" y="350.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.16%)</title><rect x="805" y="356" width="2" height="15" fill="rgb(219,208,39)"/><text x="808.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.16%)</title><rect x="805" y="372" width="2" height="15" fill="rgb(217,39,20)"/><text x="808.00" y="382.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.16%)</title><rect x="805" y="388" width="2" height="15" fill="rgb(253,209,15)"/><text x="808.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="805" y="404" width="2" height="15" fill="rgb(242,201,8)"/><text x="808.00" y="414.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.16%)</title><rect x="805" y="420" width="2" height="15" fill="rgb(227,92,39)"/><text x="808.00" y="430.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.16%)</title><rect x="805" y="436" width="2" height="15" fill="rgb(227,27,2)"/><text x="808.00" y="446.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.16%)</title><rect x="805" y="452" width="2" height="15" fill="rgb(253,82,33)"/><text x="808.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="805" y="468" width="2" height="15" fill="rgb(231,13,32)"/><text x="808.00" y="478.50"></text></g><g><title>0x7f77e66c6dd6 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="805" y="484" width="2" height="15" fill="rgb(205,137,47)"/><text x="808.00" y="494.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="807" y="340" width="2" height="15" fill="rgb(243,181,39)"/><text x="810.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.16%)</title><rect x="807" y="356" width="2" height="15" fill="rgb(243,163,15)"/><text x="810.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.16%)</title><rect x="807" y="372" width="2" height="15" fill="rgb(228,178,29)"/><text x="810.00" y="382.50"></text></g><g><title>PyArray_ConvertToCommonType (convert_datatype.c) (4 samples, 0.63%)</title><rect x="804" y="324" width="7" height="15" fill="rgb(230,113,34)"/><text x="807.00" y="334.50"></text></g><g><title>array_item_asarray (mapping.c) (1 samples, 0.16%)</title><rect x="809" y="340" width="2" height="15" fill="rgb(213,170,37)"/><text x="812.00" y="350.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.16%)</title><rect x="809" y="356" width="2" height="15" fill="rgb(254,14,41)"/><text x="812.00" y="366.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.16%)</title><rect x="809" y="372" width="2" height="15" fill="rgb(239,164,1)"/><text x="812.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="809" y="388" width="2" height="15" fill="rgb(249,92,3)"/><text x="812.00" y="398.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.16%)</title><rect x="809" y="404" width="2" height="15" fill="rgb(220,204,52)"/><text x="812.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.16%)</title><rect x="809" y="420" width="2" height="15" fill="rgb(211,17,7)"/><text x="812.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="809" y="436" width="2" height="15" fill="rgb(225,97,42)"/><text x="812.00" y="446.50"></text></g><g><title>0x7f77e66c7550 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="809" y="452" width="2" height="15" fill="rgb(249,121,2)"/><text x="812.00" y="462.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py) (15 samples, 2.36%)</title><rect x="785" y="212" width="28" height="15" fill="rgb(223,36,8)"/><text x="788.00" y="222.50">_..</text></g><g><title>choose (&lt;__array_function__ internals&gt;) (14 samples, 2.20%)</title><rect x="787" y="228" width="26" height="15" fill="rgb(243,60,49)"/><text x="790.00" y="238.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (14 samples, 2.20%)</title><rect x="787" y="244" width="26" height="15" fill="rgb(234,0,6)"/><text x="790.00" y="254.50">a..</text></g><g><title>choose (numpy/core/fromnumeric.py) (13 samples, 2.04%)</title><rect x="789" y="260" width="24" height="15" fill="rgb(252,94,25)"/><text x="792.00" y="270.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (13 samples, 2.04%)</title><rect x="789" y="276" width="24" height="15" fill="rgb(232,89,27)"/><text x="792.00" y="286.50">_..</text></g><g><title>array_choose (methods.c) (13 samples, 2.04%)</title><rect x="789" y="292" width="24" height="15" fill="rgb(226,183,42)"/><text x="792.00" y="302.50">a..</text></g><g><title>PyArray_Choose (item_selection.c) (12 samples, 1.89%)</title><rect x="791" y="308" width="22" height="15" fill="rgb(241,109,19)"/><text x="794.00" y="318.50">P..</text></g><g><title>PyArray_MultiIterFromObjects (iterators.c) (1 samples, 0.16%)</title><rect x="811" y="324" width="2" height="15" fill="rgb(251,166,42)"/><text x="814.00" y="334.50"></text></g><g><title>multiiter_new_impl (iterators.c) (1 samples, 0.16%)</title><rect x="811" y="340" width="2" height="15" fill="rgb(242,188,17)"/><text x="814.00" y="350.50"></text></g><g><title>PyArray_Broadcast (iterators.c) (1 samples, 0.16%)</title><rect x="811" y="356" width="2" height="15" fill="rgb(252,23,44)"/><text x="814.00" y="366.50"></text></g><g><title>FLOAT_less (loops.c.src) (1 samples, 0.16%)</title><rect x="813" y="292" width="2" height="15" fill="rgb(235,220,29)"/><text x="816.00" y="302.50"></text></g><g><title>run_binary_simd_less_FLOAT (simd.inc.src) (1 samples, 0.16%)</title><rect x="813" y="308" width="2" height="15" fill="rgb(237,213,20)"/><text x="816.00" y="318.50"></text></g><g><title>sse2_binary_less_FLOAT (simd.inc.src) (1 samples, 0.16%)</title><rect x="813" y="324" width="2" height="15" fill="rgb(243,177,22)"/><text x="816.00" y="334.50"></text></g><g><title>sse2_compress4_to_byte_FLOAT (simd.inc.src) (1 samples, 0.16%)</title><rect x="813" y="340" width="2" height="15" fill="rgb(241,199,34)"/><text x="816.00" y="350.50"></text></g><g><title>_mm_packs_epi32 (emmintrin.h) (1 samples, 0.16%)</title><rect x="813" y="356" width="2" height="15" fill="rgb(238,135,53)"/><text x="816.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.16%)</title><rect x="815" y="292" width="2" height="15" fill="rgb(242,66,39)"/><text x="818.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.16%)</title><rect x="815" y="308" width="2" height="15" fill="rgb(227,94,21)"/><text x="818.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.16%)</title><rect x="815" y="324" width="2" height="15" fill="rgb(252,91,7)"/><text x="818.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.16%)</title><rect x="815" y="340" width="2" height="15" fill="rgb(206,163,2)"/><text x="818.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="815" y="356" width="2" height="15" fill="rgb(240,215,7)"/><text x="818.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_less.py) (3 samples, 0.47%)</title><rect x="813" y="212" width="5" height="15" fill="rgb(241,131,14)"/><text x="816.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.47%)</title><rect x="813" y="228" width="5" height="15" fill="rgb(222,203,14)"/><text x="816.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.47%)</title><rect x="813" y="244" width="5" height="15" fill="rgb(254,214,19)"/><text x="816.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.47%)</title><rect x="813" y="260" width="5" height="15" fill="rgb(218,188,0)"/><text x="816.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.47%)</title><rect x="813" y="276" width="5" height="15" fill="rgb(206,222,20)"/><text x="816.00" y="286.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.16%)</title><rect x="817" y="292" width="1" height="15" fill="rgb(232,46,13)"/><text x="820.00" y="302.50"></text></g><g><title>PyArray_IterAllButAxis (iterators.c) (1 samples, 0.16%)</title><rect x="826" y="372" width="2" height="15" fill="rgb(226,92,47)"/><text x="829.00" y="382.50"></text></g><g><title>PyArray_IterNew (iterators.c) (1 samples, 0.16%)</title><rect x="826" y="388" width="2" height="15" fill="rgb(209,183,5)"/><text x="829.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="826" y="404" width="2" height="15" fill="rgb(220,186,21)"/><text x="829.00" y="414.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c) (7 samples, 1.10%)</title><rect x="818" y="340" width="13" height="15" fill="rgb(242,107,44)"/><text x="821.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c) (7 samples, 1.10%)</title><rect x="818" y="356" width="13" height="15" fill="rgb(209,58,0)"/><text x="821.00" y="366.50"></text></g><g><title>aintroselect_float (selection.c.src) (2 samples, 0.31%)</title><rect x="828" y="372" width="3" height="15" fill="rgb(206,134,43)"/><text x="831.00" y="382.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (8 samples, 1.26%)</title><rect x="818" y="260" width="15" height="15" fill="rgb(251,177,25)"/><text x="821.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 1.26%)</title><rect x="818" y="276" width="15" height="15" fill="rgb(212,63,41)"/><text x="821.00" y="286.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py) (8 samples, 1.26%)</title><rect x="818" y="292" width="15" height="15" fill="rgb(220,6,49)"/><text x="821.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (8 samples, 1.26%)</title><rect x="818" y="308" width="15" height="15" fill="rgb(242,24,13)"/><text x="821.00" y="318.50"></text></g><g><title>array_argpartition (methods.c) (8 samples, 1.26%)</title><rect x="818" y="324" width="15" height="15" fill="rgb(227,162,13)"/><text x="821.00" y="334.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.16%)</title><rect x="831" y="340" width="2" height="15" fill="rgb(212,113,4)"/><text x="834.00" y="350.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (4 samples, 0.63%)</title><rect x="833" y="260" width="8" height="15" fill="rgb(225,48,42)"/><text x="836.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.63%)</title><rect x="833" y="276" width="8" height="15" fill="rgb(247,34,10)"/><text x="836.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (4 samples, 0.63%)</title><rect x="833" y="292" width="8" height="15" fill="rgb(233,1,6)"/><text x="836.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (4 samples, 0.63%)</title><rect x="833" y="308" width="8" height="15" fill="rgb(243,150,54)"/><text x="836.00" y="318.50"></text></g><g><title>array_argsort (methods.c) (4 samples, 0.63%)</title><rect x="833" y="324" width="8" height="15" fill="rgb(206,43,18)"/><text x="836.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (4 samples, 0.63%)</title><rect x="833" y="340" width="8" height="15" fill="rgb(230,215,44)"/><text x="836.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c) (4 samples, 0.63%)</title><rect x="833" y="356" width="8" height="15" fill="rgb(214,157,26)"/><text x="836.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src) (1 samples, 0.16%)</title><rect x="839" y="372" width="2" height="15" fill="rgb(234,99,22)"/><text x="842.00" y="382.50"></text></g><g><title>FLOAT_LT (npysort_common.h) (1 samples, 0.16%)</title><rect x="839" y="388" width="2" height="15" fill="rgb(214,192,6)"/><text x="842.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.16%)</title><rect x="841" y="260" width="2" height="15" fill="rgb(235,30,46)"/><text x="844.00" y="270.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (1 samples, 0.16%)</title><rect x="841" y="276" width="2" height="15" fill="rgb(211,195,9)"/><text x="844.00" y="286.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py) (1 samples, 0.16%)</title><rect x="841" y="292" width="2" height="15" fill="rgb(214,168,28)"/><text x="844.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.16%)</title><rect x="848" y="292" width="2" height="15" fill="rgb(215,46,21)"/><text x="851.00" y="302.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="850" y="292" width="2" height="15" fill="rgb(213,143,33)"/><text x="853.00" y="302.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c) (9 samples, 1.42%)</title><rect x="843" y="276" width="16" height="15" fill="rgb(230,201,16)"/><text x="846.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h) (4 samples, 0.63%)</title><rect x="852" y="292" width="7" height="15" fill="rgb(235,155,40)"/><text x="855.00" y="302.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (3 samples, 0.47%)</title><rect x="859" y="292" width="6" height="15" fill="rgb(222,170,18)"/><text x="862.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (3 samples, 0.47%)</title><rect x="859" y="308" width="6" height="15" fill="rgb(212,92,42)"/><text x="862.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.47%)</title><rect x="859" y="324" width="6" height="15" fill="rgb(238,224,32)"/><text x="862.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.47%)</title><rect x="859" y="340" width="6" height="15" fill="rgb(216,47,9)"/><text x="862.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (3 samples, 0.47%)</title><rect x="859" y="356" width="6" height="15" fill="rgb(219,37,31)"/><text x="862.00" y="366.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (4 samples, 0.63%)</title><rect x="859" y="276" width="8" height="15" fill="rgb(218,49,54)"/><text x="862.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.16%)</title><rect x="865" y="292" width="2" height="15" fill="rgb(206,106,45)"/><text x="868.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.16%)</title><rect x="865" y="308" width="2" height="15" fill="rgb(210,81,17)"/><text x="868.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.16%)</title><rect x="865" y="324" width="2" height="15" fill="rgb(211,203,41)"/><text x="868.00" y="334.50"></text></g><g><title>array_subscript (mapping.c) (21 samples, 3.30%)</title><rect x="843" y="260" width="39" height="15" fill="rgb(236,37,28)"/><text x="846.00" y="270.50">arr..</text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (8 samples, 1.26%)</title><rect x="867" y="276" width="15" height="15" fill="rgb(233,215,8)"/><text x="870.00" y="286.50"></text></g><g><title>long_subtract (scalarmath.c.src) (1 samples, 0.16%)</title><rect x="882" y="260" width="1" height="15" fill="rgb(219,24,52)"/><text x="885.00" y="270.50"></text></g><g><title>_long_convert2_to_ctypes (scalarmath.c.src) (1 samples, 0.16%)</title><rect x="882" y="276" width="1" height="15" fill="rgb(243,34,38)"/><text x="885.00" y="286.50"></text></g><g><title>_long_convert_to_ctype (scalarmath.c.src) (1 samples, 0.16%)</title><rect x="882" y="292" width="1" height="15" fill="rgb(216,129,35)"/><text x="885.00" y="302.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src) (1 samples, 0.16%)</title><rect x="882" y="308" width="1" height="15" fill="rgb(212,151,35)"/><text x="885.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.16%)</title><rect x="882" y="324" width="1" height="15" fill="rgb(207,204,36)"/><text x="885.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.16%)</title><rect x="882" y="340" width="1" height="15" fill="rgb(208,32,30)"/><text x="885.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (36 samples, 5.66%)</title><rect x="818" y="212" width="67" height="15" fill="rgb(228,140,7)"/><text x="821.00" y="222.50">_run (m..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (36 samples, 5.66%)</title><rect x="818" y="228" width="67" height="15" fill="rgb(248,23,35)"/><text x="821.00" y="238.50">_common..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py) (36 samples, 5.66%)</title><rect x="818" y="244" width="67" height="15" fill="rgb(234,27,30)"/><text x="821.00" y="254.50">topk_so..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.16%)</title><rect x="883" y="260" width="2" height="15" fill="rgb(215,75,26)"/><text x="886.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.16%)</title><rect x="883" y="276" width="2" height="15" fill="rgb(224,36,42)"/><text x="886.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.16%)</title><rect x="883" y="292" width="2" height="15" fill="rgb(217,16,24)"/><text x="886.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.16%)</title><rect x="883" y="308" width="2" height="15" fill="rgb(234,5,9)"/><text x="886.00" y="318.50"></text></g><g><title>FLOAT_negative (loops.c.src) (1 samples, 0.16%)</title><rect x="883" y="324" width="2" height="15" fill="rgb(229,135,23)"/><text x="886.00" y="334.50"></text></g><g><title>run_unary_simd_negative_FLOAT (simd.inc.src) (1 samples, 0.16%)</title><rect x="883" y="340" width="2" height="15" fill="rgb(216,208,50)"/><text x="886.00" y="350.50"></text></g><g><title>sse2_negative_FLOAT (simd.inc.src) (1 samples, 0.16%)</title><rect x="883" y="356" width="2" height="15" fill="rgb(209,47,36)"/><text x="886.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.16%)</title><rect x="883" y="372" width="2" height="15" fill="rgb(229,129,14)"/><text x="886.00" y="382.50"></text></g><g><title>FLOAT_multiply (loops.c.src) (1 samples, 0.16%)</title><rect x="887" y="308" width="2" height="15" fill="rgb(223,16,16)"/><text x="890.00" y="318.50"></text></g><g><title>run_binary_simd_multiply_FLOAT (simd.inc.src) (1 samples, 0.16%)</title><rect x="887" y="324" width="2" height="15" fill="rgb(205,41,13)"/><text x="890.00" y="334.50"></text></g><g><title>abs_ptrdiff (simd.inc.src) (1 samples, 0.16%)</title><rect x="887" y="340" width="2" height="15" fill="rgb(210,229,17)"/><text x="890.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (2 samples, 0.31%)</title><rect x="887" y="228" width="4" height="15" fill="rgb(213,150,24)"/><text x="890.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.31%)</title><rect x="887" y="244" width="4" height="15" fill="rgb(215,225,28)"/><text x="890.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.31%)</title><rect x="887" y="260" width="4" height="15" fill="rgb(232,165,31)"/><text x="890.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.31%)</title><rect x="887" y="276" width="4" height="15" fill="rgb(206,5,36)"/><text x="890.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.31%)</title><rect x="887" y="292" width="4" height="15" fill="rgb(232,71,42)"/><text x="890.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src) (1 samples, 0.16%)</title><rect x="889" y="308" width="2" height="15" fill="rgb(212,45,26)"/><text x="892.00" y="318.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.16%)</title><rect x="889" y="324" width="2" height="15" fill="rgb(212,47,32)"/><text x="892.00" y="334.50"></text></g><g><title>argmin (&lt;__array_function__ internals&gt;) (4 samples, 0.63%)</title><rect x="893" y="276" width="7" height="15" fill="rgb(228,10,2)"/><text x="896.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.63%)</title><rect x="893" y="292" width="7" height="15" fill="rgb(220,106,34)"/><text x="896.00" y="302.50"></text></g><g><title>argmin (numpy/core/fromnumeric.py) (3 samples, 0.47%)</title><rect x="895" y="308" width="5" height="15" fill="rgb(233,192,45)"/><text x="898.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 0.47%)</title><rect x="895" y="324" width="5" height="15" fill="rgb(210,13,51)"/><text x="898.00" y="334.50"></text></g><g><title>array_argmin (methods.c) (3 samples, 0.47%)</title><rect x="895" y="340" width="5" height="15" fill="rgb(234,215,54)"/><text x="898.00" y="350.50"></text></g><g><title>PyArray_ArgMin (calculation.c) (3 samples, 0.47%)</title><rect x="895" y="356" width="5" height="15" fill="rgb(218,135,39)"/><text x="898.00" y="366.50"></text></g><g><title>FLOAT_argmin (arraytypes.c.src) (2 samples, 0.31%)</title><rect x="896" y="372" width="4" height="15" fill="rgb(232,171,48)"/><text x="899.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (7 samples, 1.10%)</title><rect x="891" y="228" width="13" height="15" fill="rgb(254,147,47)"/><text x="894.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (7 samples, 1.10%)</title><rect x="891" y="244" width="13" height="15" fill="rgb(250,189,29)"/><text x="894.00" y="254.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py) (7 samples, 1.10%)</title><rect x="891" y="260" width="13" height="15" fill="rgb(216,19,47)"/><text x="894.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (2 samples, 0.31%)</title><rect x="900" y="276" width="4" height="15" fill="rgb(234,102,5)"/><text x="903.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.31%)</title><rect x="900" y="292" width="4" height="15" fill="rgb(210,132,1)"/><text x="903.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (2 samples, 0.31%)</title><rect x="900" y="308" width="4" height="15" fill="rgb(219,223,36)"/><text x="903.00" y="318.50"></text></g><g><title>0x7f77a715e54f (?) (1 samples, 0.16%)</title><rect x="904" y="244" width="2" height="15" fill="rgb(229,34,29)"/><text x="907.00" y="254.50"></text></g><g><title>0x7f77a716465e (?) (1 samples, 0.16%)</title><rect x="904" y="260" width="2" height="15" fill="rgb(222,33,11)"/><text x="907.00" y="270.50"></text></g><g><title>0x7f77a716449d (?) (1 samples, 0.16%)</title><rect x="904" y="276" width="2" height="15" fill="rgb(213,169,47)"/><text x="907.00" y="286.50"></text></g><g><title>0x7f77a7160022 (?) (1 samples, 0.16%)</title><rect x="904" y="292" width="2" height="15" fill="rgb(244,149,17)"/><text x="907.00" y="302.50"></text></g><g><title>0x7f77a715d782 (?) (1 samples, 0.16%)</title><rect x="904" y="308" width="2" height="15" fill="rgb(243,176,7)"/><text x="907.00" y="318.50"></text></g><g><title>0x7f77b06ccea0 (libgomp.so.1.0.0) (3 samples, 0.47%)</title><rect x="906" y="484" width="5" height="15" fill="rgb(226,12,35)"/><text x="909.00" y="494.50"></text></g><g><title>0x7f77b06ccea9 (libgomp.so.1.0.0) (10 samples, 1.57%)</title><rect x="911" y="484" width="19" height="15" fill="rgb(210,117,28)"/><text x="914.00" y="494.50"></text></g><g><title>0x7f77b06cceab (libgomp.so.1.0.0) (5 samples, 0.79%)</title><rect x="930" y="484" width="9" height="15" fill="rgb(236,47,34)"/><text x="933.00" y="494.50"></text></g><g><title>0x7f77b06cbab9 (libgomp.so.1.0.0) (24 samples, 3.77%)</title><rect x="906" y="468" width="44" height="15" fill="rgb(245,223,3)"/><text x="909.00" y="478.50">0x7f..</text></g><g><title>0x7f77b06ccead (libgomp.so.1.0.0) (6 samples, 0.94%)</title><rect x="939" y="484" width="11" height="15" fill="rgb(218,6,45)"/><text x="942.00" y="494.50"></text></g><g><title>0x7f77b06cadaa (libgomp.so.1.0.0) (2 samples, 0.31%)</title><rect x="950" y="484" width="4" height="15" fill="rgb(206,105,33)"/><text x="953.00" y="494.50"></text></g><g><title>0x7f77b06cccf9 (libgomp.so.1.0.0) (2 samples, 0.31%)</title><rect x="950" y="500" width="4" height="15" fill="rgb(243,21,38)"/><text x="953.00" y="510.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (27 samples, 4.25%)</title><rect x="906" y="292" width="50" height="15" fill="rgb(206,152,0)"/><text x="909.00" y="302.50">pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (27 samples, 4.25%)</title><rect x="906" y="308" width="50" height="15" fill="rgb(229,177,14)"/><text x="909.00" y="318.50">pybin..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (27 samples, 4.25%)</title><rect x="906" y="324" width="50" height="15" fill="rgb(245,33,45)"/><text x="909.00" y="334.50">pybin..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (27 samples, 4.25%)</title><rect x="906" y="340" width="50" height="15" fill="rgb(240,155,45)"/><text x="909.00" y="350.50">pybin..</text></g><g><title>pybind11::array::~array (numpy.h) (27 samples, 4.25%)</title><rect x="906" y="356" width="50" height="15" fill="rgb(219,64,46)"/><text x="909.00" y="366.50">pybin..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (27 samples, 4.25%)</title><rect x="906" y="372" width="50" height="15" fill="rgb(222,140,23)"/><text x="909.00" y="382.50">pybin..</text></g><g><title>pybind11::object::~object (pytypes.h) (27 samples, 4.25%)</title><rect x="906" y="388" width="50" height="15" fill="rgb(247,137,16)"/><text x="909.00" y="398.50">pybin..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (27 samples, 4.25%)</title><rect x="906" y="404" width="50" height="15" fill="rgb(238,86,36)"/><text x="909.00" y="414.50">pybin..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (27 samples, 4.25%)</title><rect x="906" y="420" width="50" height="15" fill="rgb(243,145,5)"/><text x="909.00" y="430.50">Runti..</text></g><g><title>pybind11::array::size (numpy.h) (27 samples, 4.25%)</title><rect x="906" y="436" width="50" height="15" fill="rgb(236,115,42)"/><text x="909.00" y="446.50">pybin..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (27 samples, 4.25%)</title><rect x="906" y="452" width="50" height="15" fill="rgb(238,175,40)"/><text x="909.00" y="462.50">std::..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (3 samples, 0.47%)</title><rect x="950" y="468" width="6" height="15" fill="rgb(222,103,40)"/><text x="953.00" y="478.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (1 samples, 0.16%)</title><rect x="954" y="484" width="2" height="15" fill="rgb(239,54,21)"/><text x="957.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h) (1 samples, 0.16%)</title><rect x="954" y="500" width="2" height="15" fill="rgb(245,174,22)"/><text x="957.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (1 samples, 0.16%)</title><rect x="954" y="516" width="2" height="15" fill="rgb(244,30,5)"/><text x="957.00" y="526.50"></text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (203 samples, 31.92%)</title><rect x="581" y="68" width="377" height="15" fill="rgb(252,217,19)"/><text x="584.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (203 samples, 31.92%)</title><rect x="581" y="84" width="377" height="15" fill="rgb(240,4,49)"/><text x="584.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_re..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (203 samples, 31.92%)</title><rect x="581" y="100" width="377" height="15" fill="rgb(238,170,46)"/><text x="584.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_es..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (202 samples, 31.76%)</title><rect x="583" y="116" width="375" height="15" fill="rgb(221,22,40)"/><text x="586.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (201 samples, 31.60%)</title><rect x="585" y="132" width="373" height="15" fill="rgb(220,84,34)"/><text x="588.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (200 samples, 31.45%)</title><rect x="587" y="148" width="371" height="15" fill="rgb(250,39,27)"/><text x="590.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (200 samples, 31.45%)</title><rect x="587" y="164" width="371" height="15" fill="rgb(253,26,36)"/><text x="590.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infer..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (200 samples, 31.45%)</title><rect x="587" y="180" width="371" height="15" fill="rgb(234,194,51)"/><text x="590.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (195 samples, 30.66%)</title><rect x="596" y="196" width="362" height="15" fill="rgb(253,196,52)"/><text x="599.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (39 samples, 6.13%)</title><rect x="885" y="212" width="73" height="15" fill="rgb(217,83,39)"/><text x="888.00" y="222.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (29 samples, 4.56%)</title><rect x="904" y="228" width="54" height="15" fill="rgb(234,93,51)"/><text x="907.00" y="238.50">_run ..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (28 samples, 4.40%)</title><rect x="906" y="244" width="52" height="15" fill="rgb(222,144,33)"/><text x="909.00" y="254.50">pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (28 samples, 4.40%)</title><rect x="906" y="260" width="52" height="15" fill="rgb(242,61,51)"/><text x="909.00" y="270.50">void ..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (28 samples, 4.40%)</title><rect x="906" y="276" width="52" height="15" fill="rgb(206,219,31)"/><text x="909.00" y="286.50">void ..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h) (1 samples, 0.16%)</title><rect x="956" y="292" width="2" height="15" fill="rgb(244,123,40)"/><text x="959.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h) (1 samples, 0.16%)</title><rect x="956" y="308" width="2" height="15" fill="rgb(215,85,19)"/><text x="959.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h) (1 samples, 0.16%)</title><rect x="956" y="324" width="2" height="15" fill="rgb(246,200,6)"/><text x="959.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::ensure (numpy.h) (1 samples, 0.16%)</title><rect x="956" y="340" width="2" height="15" fill="rgb(221,195,29)"/><text x="959.00" y="350.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::raw_array_t (numpy.h) (1 samples, 0.16%)</title><rect x="956" y="356" width="2" height="15" fill="rgb(252,176,12)"/><text x="959.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.16%)</title><rect x="956" y="372" width="2" height="15" fill="rgb(247,73,12)"/><text x="959.00" y="382.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.16%)</title><rect x="956" y="388" width="2" height="15" fill="rgb(254,120,38)"/><text x="959.00" y="398.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.16%)</title><rect x="956" y="404" width="2" height="15" fill="rgb(246,100,23)"/><text x="959.00" y="414.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.16%)</title><rect x="956" y="420" width="2" height="15" fill="rgb(237,150,0)"/><text x="959.00" y="430.50"></text></g><g><title>0x7f77c0108f12 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="967" y="228" width="2" height="15" fill="rgb(226,112,14)"/><text x="970.00" y="238.50"></text></g><g><title>0x7f77c0108f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="969" y="228" width="2" height="15" fill="rgb(241,23,25)"/><text x="972.00" y="238.50"></text></g><g><title>0x7f77c00f8d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="969" y="244" width="2" height="15" fill="rgb(223,196,2)"/><text x="972.00" y="254.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.16%)</title><rect x="969" y="260" width="2" height="15" fill="rgb(220,206,36)"/><text x="972.00" y="270.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.16%)</title><rect x="969" y="276" width="2" height="15" fill="rgb(252,163,0)"/><text x="972.00" y="286.50"></text></g><g><title>0x7f77c01172df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="971" y="260" width="1" height="15" fill="rgb(245,5,30)"/><text x="974.00" y="270.50"></text></g><g><title>0x7f77c00fbd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="971" y="276" width="1" height="15" fill="rgb(218,78,52)"/><text x="974.00" y="286.50"></text></g><g><title>0x7f77c00fb666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="971" y="292" width="1" height="15" fill="rgb(252,203,26)"/><text x="974.00" y="302.50"></text></g><g><title>0x7f77c00f12fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="971" y="308" width="1" height="15" fill="rgb(228,112,3)"/><text x="974.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.16%)</title><rect x="971" y="324" width="1" height="15" fill="rgb(225,166,17)"/><text x="974.00" y="334.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.16%)</title><rect x="971" y="340" width="1" height="15" fill="rgb(205,154,18)"/><text x="974.00" y="350.50"></text></g><g><title>0x7f77c0117592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="972" y="260" width="2" height="15" fill="rgb(228,1,52)"/><text x="975.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c) (1 samples, 0.16%)</title><rect x="972" y="276" width="2" height="15" fill="rgb(235,32,3)"/><text x="975.00" y="286.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.16%)</title><rect x="972" y="292" width="2" height="15" fill="rgb(238,165,46)"/><text x="975.00" y="302.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.16%)</title><rect x="972" y="308" width="2" height="15" fill="rgb(237,97,13)"/><text x="975.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="972" y="324" width="2" height="15" fill="rgb(222,106,45)"/><text x="975.00" y="334.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (1 samples, 0.16%)</title><rect x="972" y="340" width="2" height="15" fill="rgb(232,142,8)"/><text x="975.00" y="350.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (1 samples, 0.16%)</title><rect x="972" y="356" width="2" height="15" fill="rgb(218,134,22)"/><text x="975.00" y="366.50"></text></g><g><title>0x7f77c0117698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="974" y="260" width="4" height="15" fill="rgb(235,173,7)"/><text x="977.00" y="270.50"></text></g><g><title>0x7f77c01176aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="978" y="260" width="2" height="15" fill="rgb(221,81,23)"/><text x="981.00" y="270.50"></text></g><g><title>0x7f77c01176ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="980" y="260" width="4" height="15" fill="rgb(226,182,23)"/><text x="983.00" y="270.50"></text></g><g><title>0x7f77c01176b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="984" y="260" width="3" height="15" fill="rgb(242,67,37)"/><text x="987.00" y="270.50"></text></g><g><title>0x7f77c01177b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="987" y="260" width="2" height="15" fill="rgb(228,140,23)"/><text x="990.00" y="270.50"></text></g><g><title>0x7f77c0118405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.73%)</title><rect x="971" y="244" width="20" height="15" fill="rgb(210,229,8)"/><text x="974.00" y="254.50"></text></g><g><title>0x7f77c0117c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="989" y="260" width="2" height="15" fill="rgb(221,49,41)"/><text x="992.00" y="270.50"></text></g><g><title>0x7f77c00ef529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="989" y="276" width="2" height="15" fill="rgb(247,184,54)"/><text x="992.00" y="286.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.16%)</title><rect x="989" y="292" width="2" height="15" fill="rgb(231,213,21)"/><text x="992.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.16%)</title><rect x="989" y="308" width="2" height="15" fill="rgb(243,10,15)"/><text x="992.00" y="318.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.16%)</title><rect x="989" y="324" width="2" height="15" fill="rgb(224,186,25)"/><text x="992.00" y="334.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.16%)</title><rect x="989" y="340" width="2" height="15" fill="rgb(253,195,9)"/><text x="992.00" y="350.50"></text></g><g><title>0x7f77c0108fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (12 samples, 1.89%)</title><rect x="971" y="228" width="22" height="15" fill="rgb(234,90,39)"/><text x="974.00" y="238.50">0..</text></g><g><title>0x7f77c0118540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="991" y="244" width="2" height="15" fill="rgb(237,217,28)"/><text x="994.00" y="254.50"></text></g><g><title>0x7f77c00ed1ed (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="991" y="260" width="2" height="15" fill="rgb(206,72,14)"/><text x="994.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (1 samples, 0.16%)</title><rect x="993" y="260" width="2" height="15" fill="rgb(207,41,7)"/><text x="996.00" y="270.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (1 samples, 0.16%)</title><rect x="993" y="276" width="2" height="15" fill="rgb(210,31,5)"/><text x="996.00" y="286.50"></text></g><g><title>0x7f77c010905a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="993" y="228" width="4" height="15" fill="rgb(217,162,11)"/><text x="996.00" y="238.50"></text></g><g><title>array_take (methods.c) (2 samples, 0.31%)</title><rect x="993" y="244" width="4" height="15" fill="rgb(223,151,14)"/><text x="996.00" y="254.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.16%)</title><rect x="995" y="260" width="2" height="15" fill="rgb(225,92,46)"/><text x="998.00" y="270.50"></text></g><g><title>0x7f77c0109328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="997" y="228" width="1" height="15" fill="rgb(233,206,42)"/><text x="1000.00" y="238.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.16%)</title><rect x="997" y="244" width="1" height="15" fill="rgb(211,228,21)"/><text x="1000.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.16%)</title><rect x="997" y="260" width="1" height="15" fill="rgb(211,74,1)"/><text x="1000.00" y="270.50"></text></g><g><title>0x7f77c0109d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (18 samples, 2.83%)</title><rect x="967" y="212" width="33" height="15" fill="rgb(230,100,36)"/><text x="970.00" y="222.50">0x..</text></g><g><title>0x7f77c0109522 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="998" y="228" width="2" height="15" fill="rgb(228,106,39)"/><text x="1001.00" y="238.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.16%)</title><rect x="1010" y="244" width="1" height="15" fill="rgb(249,76,40)"/><text x="1013.00" y="254.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.16%)</title><rect x="1011" y="244" width="2" height="15" fill="rgb(206,162,50)"/><text x="1014.00" y="254.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.16%)</title><rect x="1013" y="244" width="2" height="15" fill="rgb(205,31,23)"/><text x="1016.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="1024" y="260" width="4" height="15" fill="rgb(212,198,16)"/><text x="1027.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (8 samples, 1.26%)</title><rect x="1015" y="244" width="15" height="15" fill="rgb(211,141,54)"/><text x="1018.00" y="254.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.16%)</title><rect x="1028" y="260" width="2" height="15" fill="rgb(229,142,47)"/><text x="1031.00" y="270.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.16%)</title><rect x="1030" y="244" width="2" height="15" fill="rgb(227,156,17)"/><text x="1033.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 0.47%)</title><rect x="1032" y="244" width="5" height="15" fill="rgb(240,67,29)"/><text x="1035.00" y="254.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.16%)</title><rect x="1036" y="260" width="1" height="15" fill="rgb(218,22,27)"/><text x="1039.00" y="270.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.16%)</title><rect x="1036" y="276" width="1" height="15" fill="rgb(248,177,54)"/><text x="1039.00" y="286.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (21 samples, 3.30%)</title><rect x="1000" y="212" width="39" height="15" fill="rgb(226,190,3)"/><text x="1003.00" y="222.50">_va..</text></g><g><title>check_array (sklearn/utils/validation.py) (21 samples, 3.30%)</title><rect x="1000" y="228" width="39" height="15" fill="rgb(235,5,21)"/><text x="1003.00" y="238.50">che..</text></g><g><title>simplefilter (warnings.py) (1 samples, 0.16%)</title><rect x="1037" y="244" width="2" height="15" fill="rgb(236,85,5)"/><text x="1040.00" y="254.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.16%)</title><rect x="1037" y="260" width="2" height="15" fill="rgb(210,227,50)"/><text x="1040.00" y="270.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.16%)</title><rect x="1039" y="212" width="2" height="15" fill="rgb(247,104,49)"/><text x="1042.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.16%)</title><rect x="1039" y="228" width="2" height="15" fill="rgb(207,184,28)"/><text x="1042.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.16%)</title><rect x="1039" y="244" width="2" height="15" fill="rgb(222,5,19)"/><text x="1042.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (4 samples, 0.63%)</title><rect x="1041" y="212" width="7" height="15" fill="rgb(233,201,8)"/><text x="1044.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (3 samples, 0.47%)</title><rect x="1043" y="228" width="5" height="15" fill="rgb(237,188,35)"/><text x="1046.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.16%)</title><rect x="1047" y="244" width="1" height="15" fill="rgb(224,48,27)"/><text x="1050.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py) (50 samples, 7.86%)</title><rect x="958" y="180" width="92" height="15" fill="rgb(237,2,12)"/><text x="961.00" y="190.50">&lt;listcomp&gt;..</text></g><g><title>predict (sklearn/tree/_classes.py) (49 samples, 7.70%)</title><rect x="959" y="196" width="91" height="15" fill="rgb(243,167,28)"/><text x="962.00" y="206.50">predict (s..</text></g><g><title>is_classifier (sklearn/base.py) (1 samples, 0.16%)</title><rect x="1048" y="212" width="2" height="15" fill="rgb(251,72,2)"/><text x="1051.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.31%)</title><rect x="1050" y="180" width="4" height="15" fill="rgb(216,208,29)"/><text x="1053.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.31%)</title><rect x="1050" y="196" width="4" height="15" fill="rgb(250,188,21)"/><text x="1053.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.31%)</title><rect x="1050" y="212" width="4" height="15" fill="rgb(212,38,5)"/><text x="1053.00" y="222.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (2 samples, 0.31%)</title><rect x="1050" y="228" width="4" height="15" fill="rgb(226,101,38)"/><text x="1053.00" y="238.50"></text></g><g><title>setArrayFromSequence (ctors.c) (2 samples, 0.31%)</title><rect x="1050" y="244" width="4" height="15" fill="rgb(242,208,43)"/><text x="1053.00" y="254.50"></text></g><g><title>setArrayFromSequence (ctors.c) (2 samples, 0.31%)</title><rect x="1050" y="260" width="4" height="15" fill="rgb(224,97,49)"/><text x="1053.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.31%)</title><rect x="1050" y="276" width="4" height="15" fill="rgb(238,172,19)"/><text x="1053.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.31%)</title><rect x="1050" y="292" width="4" height="15" fill="rgb(215,127,9)"/><text x="1053.00" y="302.50"></text></g><g><title>0x7f77e66e5d94 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="1050" y="308" width="4" height="15" fill="rgb(206,195,0)"/><text x="1053.00" y="318.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (7 samples, 1.10%)</title><rect x="1054" y="180" width="13" height="15" fill="rgb(221,203,5)"/><text x="1057.00" y="190.50"></text></g><g><title>_argsort_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.16%)</title><rect x="1067" y="196" width="2" height="15" fill="rgb(229,125,26)"/><text x="1070.00" y="206.50"></text></g><g><title>DOUBLE_copyswapn (arraytypes.c.src) (1 samples, 0.16%)</title><rect x="1080" y="292" width="2" height="15" fill="rgb(254,62,53)"/><text x="1083.00" y="302.50"></text></g><g><title>_unaligned_strided_byte_copy (ctors.c) (1 samples, 0.16%)</title><rect x="1080" y="308" width="2" height="15" fill="rgb(246,1,32)"/><text x="1083.00" y="318.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (12 samples, 1.89%)</title><rect x="1067" y="180" width="22" height="15" fill="rgb(208,91,34)"/><text x="1070.00" y="190.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (11 samples, 1.73%)</title><rect x="1069" y="196" width="20" height="15" fill="rgb(225,219,13)"/><text x="1072.00" y="206.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (11 samples, 1.73%)</title><rect x="1069" y="212" width="20" height="15" fill="rgb(229,98,1)"/><text x="1072.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (11 samples, 1.73%)</title><rect x="1069" y="228" width="20" height="15" fill="rgb(209,168,31)"/><text x="1072.00" y="238.50"></text></g><g><title>array_argsort (methods.c) (11 samples, 1.73%)</title><rect x="1069" y="244" width="20" height="15" fill="rgb(225,91,12)"/><text x="1072.00" y="254.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (11 samples, 1.73%)</title><rect x="1069" y="260" width="20" height="15" fill="rgb(212,71,1)"/><text x="1072.00" y="270.50"></text></g><g><title>_new_argsortlike (item_selection.c) (11 samples, 1.73%)</title><rect x="1069" y="276" width="20" height="15" fill="rgb(254,111,2)"/><text x="1072.00" y="286.50"></text></g><g><title>aquicksort_double (quicksort.c.src) (4 samples, 0.63%)</title><rect x="1082" y="292" width="7" height="15" fill="rgb(244,169,36)"/><text x="1085.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (2 samples, 0.31%)</title><rect x="1089" y="180" width="4" height="15" fill="rgb(221,151,36)"/><text x="1092.00" y="190.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (2 samples, 0.31%)</title><rect x="1089" y="196" width="4" height="15" fill="rgb(217,41,53)"/><text x="1092.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.16%)</title><rect x="1091" y="212" width="2" height="15" fill="rgb(224,64,1)"/><text x="1094.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="1091" y="228" width="2" height="15" fill="rgb(210,130,4)"/><text x="1094.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="1093" y="180" width="2" height="15" fill="rgb(253,64,18)"/><text x="1096.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.16%)</title><rect x="1093" y="196" width="2" height="15" fill="rgb(212,107,43)"/><text x="1096.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.16%)</title><rect x="1093" y="212" width="2" height="15" fill="rgb(223,100,38)"/><text x="1096.00" y="222.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1095" y="276" width="2" height="15" fill="rgb(230,125,8)"/><text x="1098.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1095" y="292" width="2" height="15" fill="rgb(225,25,50)"/><text x="1098.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.16%)</title><rect x="1095" y="308" width="2" height="15" fill="rgb(216,53,16)"/><text x="1098.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="1095" y="324" width="2" height="15" fill="rgb(207,63,13)"/><text x="1098.00" y="334.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.16%)</title><rect x="1095" y="340" width="2" height="15" fill="rgb(220,189,38)"/><text x="1098.00" y="350.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.16%)</title><rect x="1095" y="356" width="2" height="15" fill="rgb(216,86,3)"/><text x="1098.00" y="366.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.16%)</title><rect x="1095" y="372" width="2" height="15" fill="rgb(220,55,18)"/><text x="1098.00" y="382.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1097" y="276" width="2" height="15" fill="rgb(245,164,43)"/><text x="1100.00" y="286.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.16%)</title><rect x="1097" y="292" width="2" height="15" fill="rgb(216,60,41)"/><text x="1100.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.47%)</title><rect x="1095" y="212" width="5" height="15" fill="rgb(229,22,13)"/><text x="1098.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.47%)</title><rect x="1095" y="228" width="5" height="15" fill="rgb(228,204,11)"/><text x="1098.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.47%)</title><rect x="1095" y="244" width="5" height="15" fill="rgb(248,160,43)"/><text x="1098.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.47%)</title><rect x="1095" y="260" width="5" height="15" fill="rgb(224,194,5)"/><text x="1098.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1099" y="276" width="1" height="15" fill="rgb(215,215,39)"/><text x="1102.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1099" y="292" width="1" height="15" fill="rgb(209,85,0)"/><text x="1102.00" y="302.50"></text></g><g><title>array_multiply (number.c) (4 samples, 0.63%)</title><rect x="1095" y="180" width="7" height="15" fill="rgb(233,105,6)"/><text x="1098.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.63%)</title><rect x="1095" y="196" width="7" height="15" fill="rgb(214,98,6)"/><text x="1098.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="1100" y="212" width="2" height="15" fill="rgb(248,208,24)"/><text x="1103.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.16%)</title><rect x="1100" y="228" width="2" height="15" fill="rgb(229,74,24)"/><text x="1103.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.16%)</title><rect x="1100" y="244" width="2" height="15" fill="rgb(225,47,19)"/><text x="1103.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1102" y="260" width="2" height="15" fill="rgb(253,35,37)"/><text x="1105.00" y="270.50"></text></g><g><title>array_richcompare (arrayobject.c) (3 samples, 0.47%)</title><rect x="1102" y="180" width="6" height="15" fill="rgb(211,15,2)"/><text x="1105.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.47%)</title><rect x="1102" y="196" width="6" height="15" fill="rgb(214,207,14)"/><text x="1105.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.47%)</title><rect x="1102" y="212" width="6" height="15" fill="rgb(226,52,25)"/><text x="1105.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.47%)</title><rect x="1102" y="228" width="6" height="15" fill="rgb(233,201,33)"/><text x="1105.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.47%)</title><rect x="1102" y="244" width="6" height="15" fill="rgb(251,8,28)"/><text x="1105.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.31%)</title><rect x="1104" y="260" width="4" height="15" fill="rgb(242,191,36)"/><text x="1107.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.31%)</title><rect x="1104" y="276" width="4" height="15" fill="rgb(246,69,4)"/><text x="1107.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.31%)</title><rect x="1104" y="292" width="4" height="15" fill="rgb(215,38,23)"/><text x="1107.00" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.16%)</title><rect x="1106" y="308" width="2" height="15" fill="rgb(248,134,43)"/><text x="1109.00" y="318.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c) (2 samples, 0.31%)</title><rect x="1108" y="196" width="4" height="15" fill="rgb(247,9,18)"/><text x="1111.00" y="206.50"></text></g><g><title>check_and_adjust_index (common.h) (1 samples, 0.16%)</title><rect x="1110" y="212" width="2" height="15" fill="rgb(211,175,7)"/><text x="1113.00" y="222.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.16%)</title><rect x="1112" y="196" width="1" height="15" fill="rgb(236,32,19)"/><text x="1115.00" y="206.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1112" y="212" width="1" height="15" fill="rgb(229,11,12)"/><text x="1115.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1112" y="228" width="1" height="15" fill="rgb(205,119,27)"/><text x="1115.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1112" y="244" width="1" height="15" fill="rgb(226,106,10)"/><text x="1115.00" y="254.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1112" y="260" width="1" height="15" fill="rgb(232,165,41)"/><text x="1115.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.16%)</title><rect x="1112" y="276" width="1" height="15" fill="rgb(229,227,20)"/><text x="1115.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="1112" y="292" width="1" height="15" fill="rgb(248,167,16)"/><text x="1115.00" y="302.50"></text></g><g><title>0x7f77e66e5dbb (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1112" y="308" width="1" height="15" fill="rgb(240,118,40)"/><text x="1115.00" y="318.50"></text></g><g><title>arraymapiter_dealloc (mapping.c) (1 samples, 0.16%)</title><rect x="1113" y="196" width="2" height="15" fill="rgb(222,76,2)"/><text x="1116.00" y="206.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1113" y="212" width="2" height="15" fill="rgb(248,67,5)"/><text x="1116.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.16%)</title><rect x="1115" y="196" width="2" height="15" fill="rgb(212,116,41)"/><text x="1118.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.16%)</title><rect x="1115" y="212" width="2" height="15" fill="rgb(210,162,49)"/><text x="1118.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="1115" y="228" width="2" height="15" fill="rgb(247,184,27)"/><text x="1118.00" y="238.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.16%)</title><rect x="1115" y="244" width="2" height="15" fill="rgb(210,168,2)"/><text x="1118.00" y="254.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.16%)</title><rect x="1115" y="260" width="2" height="15" fill="rgb(208,37,28)"/><text x="1118.00" y="270.50"></text></g><g><title>PyArray_CLEARFLAGS (ndarraytypes.h) (1 samples, 0.16%)</title><rect x="1115" y="276" width="2" height="15" fill="rgb(234,75,38)"/><text x="1118.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.16%)</title><rect x="1117" y="196" width="2" height="15" fill="rgb(214,213,21)"/><text x="1120.00" y="206.50"></text></g><g><title>array_subscript (mapping.c) (7 samples, 1.10%)</title><rect x="1108" y="180" width="13" height="15" fill="rgb(214,30,27)"/><text x="1111.00" y="190.50"></text></g><g><title>mapiter_trivial_get (lowlevel_strided_loops.c.src) (1 samples, 0.16%)</title><rect x="1119" y="196" width="2" height="15" fill="rgb(207,225,44)"/><text x="1122.00" y="206.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (1 samples, 0.16%)</title><rect x="1125" y="196" width="1" height="15" fill="rgb(238,78,54)"/><text x="1128.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.16%)</title><rect x="1125" y="212" width="1" height="15" fill="rgb(244,110,27)"/><text x="1128.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py) (1 samples, 0.16%)</title><rect x="1125" y="228" width="1" height="15" fill="rgb(248,170,30)"/><text x="1128.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.16%)</title><rect x="1125" y="244" width="1" height="15" fill="rgb(226,177,51)"/><text x="1128.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.16%)</title><rect x="1125" y="260" width="1" height="15" fill="rgb(206,198,17)"/><text x="1128.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.16%)</title><rect x="1125" y="276" width="1" height="15" fill="rgb(251,218,25)"/><text x="1128.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.16%)</title><rect x="1125" y="292" width="1" height="15" fill="rgb(236,162,27)"/><text x="1128.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.16%)</title><rect x="1125" y="308" width="1" height="15" fill="rgb(211,144,49)"/><text x="1128.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.31%)</title><rect x="1130" y="356" width="4" height="15" fill="rgb(220,198,50)"/><text x="1133.00" y="366.50"></text></g><g><title>PyArray_CumSum (calculation.c) (5 samples, 0.79%)</title><rect x="1128" y="276" width="10" height="15" fill="rgb(253,56,36)"/><text x="1131.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (5 samples, 0.79%)</title><rect x="1128" y="292" width="10" height="15" fill="rgb(218,4,48)"/><text x="1131.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (5 samples, 0.79%)</title><rect x="1128" y="308" width="10" height="15" fill="rgb(227,217,0)"/><text x="1131.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (5 samples, 0.79%)</title><rect x="1128" y="324" width="10" height="15" fill="rgb(253,183,53)"/><text x="1131.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (5 samples, 0.79%)</title><rect x="1128" y="340" width="10" height="15" fill="rgb(246,206,44)"/><text x="1131.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.31%)</title><rect x="1134" y="356" width="4" height="15" fill="rgb(225,89,15)"/><text x="1137.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.31%)</title><rect x="1134" y="372" width="4" height="15" fill="rgb(227,216,16)"/><text x="1137.00" y="382.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1136" y="388" width="2" height="15" fill="rgb(241,49,30)"/><text x="1139.00" y="398.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (7 samples, 1.10%)</title><rect x="1126" y="196" width="13" height="15" fill="rgb(236,79,1)"/><text x="1129.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 1.10%)</title><rect x="1126" y="212" width="13" height="15" fill="rgb(229,63,25)"/><text x="1129.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (7 samples, 1.10%)</title><rect x="1126" y="228" width="13" height="15" fill="rgb(241,123,51)"/><text x="1129.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (6 samples, 0.94%)</title><rect x="1128" y="244" width="11" height="15" fill="rgb(215,201,41)"/><text x="1131.00" y="254.50"></text></g><g><title>array_cumsum (methods.c) (6 samples, 0.94%)</title><rect x="1128" y="260" width="11" height="15" fill="rgb(234,187,7)"/><text x="1131.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.16%)</title><rect x="1138" y="276" width="1" height="15" fill="rgb(212,82,11)"/><text x="1141.00" y="286.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.16%)</title><rect x="1139" y="244" width="2" height="15" fill="rgb(242,153,47)"/><text x="1142.00" y="254.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.16%)</title><rect x="1139" y="260" width="2" height="15" fill="rgb(241,26,16)"/><text x="1142.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.16%)</title><rect x="1141" y="356" width="2" height="15" fill="rgb(253,95,22)"/><text x="1144.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1141" y="372" width="2" height="15" fill="rgb(215,63,41)"/><text x="1144.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.16%)</title><rect x="1141" y="388" width="2" height="15" fill="rgb(205,133,27)"/><text x="1144.00" y="398.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (2 samples, 0.31%)</title><rect x="1141" y="244" width="4" height="15" fill="rgb(231,203,14)"/><text x="1144.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.31%)</title><rect x="1141" y="260" width="4" height="15" fill="rgb(212,51,20)"/><text x="1144.00" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py) (2 samples, 0.31%)</title><rect x="1141" y="276" width="4" height="15" fill="rgb(234,193,52)"/><text x="1144.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (2 samples, 0.31%)</title><rect x="1141" y="292" width="4" height="15" fill="rgb(226,93,44)"/><text x="1144.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.31%)</title><rect x="1141" y="308" width="4" height="15" fill="rgb(230,222,31)"/><text x="1144.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.31%)</title><rect x="1141" y="324" width="4" height="15" fill="rgb(250,91,34)"/><text x="1144.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.31%)</title><rect x="1141" y="340" width="4" height="15" fill="rgb(234,49,49)"/><text x="1144.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.16%)</title><rect x="1143" y="356" width="2" height="15" fill="rgb(212,11,15)"/><text x="1146.00" y="366.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 0.16%)</title><rect x="1143" y="372" width="2" height="15" fill="rgb(240,142,2)"/><text x="1146.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.16%)</title><rect x="1143" y="388" width="2" height="15" fill="rgb(229,191,37)"/><text x="1146.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.16%)</title><rect x="1143" y="404" width="2" height="15" fill="rgb(205,47,46)"/><text x="1146.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.16%)</title><rect x="1143" y="420" width="2" height="15" fill="rgb(218,7,54)"/><text x="1146.00" y="430.50"></text></g><g><title>result_type (&lt;__array_function__ internals&gt;) (1 samples, 0.16%)</title><rect x="1145" y="244" width="2" height="15" fill="rgb(253,60,50)"/><text x="1148.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.16%)</title><rect x="1145" y="260" width="2" height="15" fill="rgb(221,60,27)"/><text x="1148.00" y="270.50"></text></g><g><title>array_result_type (multiarraymodule.c) (1 samples, 0.16%)</title><rect x="1145" y="276" width="2" height="15" fill="rgb(251,25,30)"/><text x="1148.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.16%)</title><rect x="1145" y="292" width="2" height="15" fill="rgb(220,220,34)"/><text x="1148.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.16%)</title><rect x="1145" y="308" width="2" height="15" fill="rgb(217,138,48)"/><text x="1148.00" y="318.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py) (2 samples, 0.31%)</title><rect x="1151" y="260" width="3" height="15" fill="rgb(240,192,16)"/><text x="1154.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (2 samples, 0.31%)</title><rect x="1151" y="276" width="3" height="15" fill="rgb(207,128,54)"/><text x="1154.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (1 samples, 0.16%)</title><rect x="1158" y="292" width="2" height="15" fill="rgb(234,17,22)"/><text x="1161.00" y="302.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py) (4 samples, 0.63%)</title><rect x="1154" y="260" width="8" height="15" fill="rgb(239,81,24)"/><text x="1157.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (4 samples, 0.63%)</title><rect x="1154" y="276" width="8" height="15" fill="rgb(213,132,0)"/><text x="1157.00" y="286.50"></text></g><g><title>ufunc_seterr (ufunc_object.c) (1 samples, 0.16%)</title><rect x="1160" y="292" width="2" height="15" fill="rgb(254,105,54)"/><text x="1163.00" y="302.50"></text></g><g><title>ufunc_update_use_defaults (extobj.c) (1 samples, 0.16%)</title><rect x="1160" y="308" width="2" height="15" fill="rgb(242,210,10)"/><text x="1163.00" y="318.50"></text></g><g><title>array_multiply (number.c) (1 samples, 0.16%)</title><rect x="1162" y="260" width="2" height="15" fill="rgb(251,56,35)"/><text x="1165.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.16%)</title><rect x="1162" y="276" width="2" height="15" fill="rgb(246,226,33)"/><text x="1165.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.16%)</title><rect x="1162" y="292" width="2" height="15" fill="rgb(254,115,7)"/><text x="1165.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.16%)</title><rect x="1162" y="308" width="2" height="15" fill="rgb(219,191,12)"/><text x="1165.00" y="318.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.16%)</title><rect x="1162" y="324" width="2" height="15" fill="rgb(252,151,39)"/><text x="1165.00" y="334.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.16%)</title><rect x="1162" y="340" width="2" height="15" fill="rgb(208,155,17)"/><text x="1165.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.16%)</title><rect x="1162" y="356" width="2" height="15" fill="rgb(219,178,23)"/><text x="1165.00" y="366.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;) (14 samples, 2.20%)</title><rect x="1139" y="196" width="26" height="15" fill="rgb(239,130,34)"/><text x="1142.00" y="206.50">i..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (14 samples, 2.20%)</title><rect x="1139" y="212" width="26" height="15" fill="rgb(207,149,48)"/><text x="1142.00" y="222.50">a..</text></g><g><title>isclose (numpy/core/numeric.py) (14 samples, 2.20%)</title><rect x="1139" y="228" width="26" height="15" fill="rgb(210,88,26)"/><text x="1142.00" y="238.50">i..</text></g><g><title>within_tol (numpy/core/numeric.py) (10 samples, 1.57%)</title><rect x="1147" y="244" width="18" height="15" fill="rgb(206,224,43)"/><text x="1150.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.16%)</title><rect x="1164" y="260" width="1" height="15" fill="rgb(250,219,31)"/><text x="1167.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.16%)</title><rect x="1164" y="276" width="1" height="15" fill="rgb(236,80,20)"/><text x="1167.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.16%)</title><rect x="1164" y="292" width="1" height="15" fill="rgb(205,135,1)"/><text x="1167.00" y="302.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.16%)</title><rect x="1164" y="308" width="1" height="15" fill="rgb(207,59,48)"/><text x="1167.00" y="318.50"></text></g><g><title>DOUBLE_less_equal (loops.c.src) (1 samples, 0.16%)</title><rect x="1164" y="324" width="1" height="15" fill="rgb(214,226,0)"/><text x="1167.00" y="334.50"></text></g><g><title>run_binary_simd_less_equal_DOUBLE (simd.inc.src) (1 samples, 0.16%)</title><rect x="1164" y="340" width="1" height="15" fill="rgb(251,53,34)"/><text x="1167.00" y="350.50"></text></g><g><title>sse2_binary_less_equal_DOUBLE (simd.inc.src) (1 samples, 0.16%)</title><rect x="1164" y="356" width="1" height="15" fill="rgb(224,90,51)"/><text x="1167.00" y="366.50"></text></g><g><title>_mm_loadu_pd (emmintrin.h) (1 samples, 0.16%)</title><rect x="1164" y="372" width="1" height="15" fill="rgb(231,143,38)"/><text x="1167.00" y="382.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.16%)</title><rect x="1165" y="276" width="2" height="15" fill="rgb(229,212,15)"/><text x="1168.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.16%)</title><rect x="1165" y="292" width="2" height="15" fill="rgb(252,196,10)"/><text x="1168.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.16%)</title><rect x="1165" y="308" width="2" height="15" fill="rgb(250,92,15)"/><text x="1168.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.16%)</title><rect x="1165" y="324" width="2" height="15" fill="rgb(220,65,8)"/><text x="1168.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.16%)</title><rect x="1165" y="340" width="2" height="15" fill="rgb(227,94,20)"/><text x="1168.00" y="350.50"></text></g><g><title>0x7f77e66dbe7a (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1165" y="356" width="2" height="15" fill="rgb(247,82,44)"/><text x="1168.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1167" y="324" width="2" height="15" fill="rgb(243,4,46)"/><text x="1170.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.16%)</title><rect x="1167" y="340" width="2" height="15" fill="rgb(238,101,18)"/><text x="1170.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1167" y="356" width="2" height="15" fill="rgb(252,165,16)"/><text x="1170.00" y="366.50"></text></g><g><title>0x7f77e66c72b6 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1167" y="372" width="2" height="15" fill="rgb(205,125,44)"/><text x="1170.00" y="382.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.16%)</title><rect x="1169" y="356" width="2" height="15" fill="rgb(242,115,43)"/><text x="1172.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.31%)</title><rect x="1169" y="324" width="4" height="15" fill="rgb(217,156,50)"/><text x="1172.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.31%)</title><rect x="1169" y="340" width="4" height="15" fill="rgb(212,94,14)"/><text x="1172.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.16%)</title><rect x="1171" y="356" width="2" height="15" fill="rgb(246,44,17)"/><text x="1174.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.16%)</title><rect x="1171" y="372" width="2" height="15" fill="rgb(253,128,31)"/><text x="1174.00" y="382.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py) (117 samples, 18.40%)</title><rect x="958" y="164" width="217" height="15" fill="rgb(240,142,52)"/><text x="961.00" y="174.50">_get_median_predict (sklearn..</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py) (29 samples, 4.56%)</title><rect x="1121" y="180" width="54" height="15" fill="rgb(220,3,38)"/><text x="1124.00" y="190.50">stabl..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (5 samples, 0.79%)</title><rect x="1165" y="196" width="10" height="15" fill="rgb(249,51,4)"/><text x="1168.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 0.79%)</title><rect x="1165" y="212" width="10" height="15" fill="rgb(213,77,3)"/><text x="1168.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (5 samples, 0.79%)</title><rect x="1165" y="228" width="10" height="15" fill="rgb(217,35,4)"/><text x="1168.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (5 samples, 0.79%)</title><rect x="1165" y="244" width="10" height="15" fill="rgb(214,225,18)"/><text x="1168.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (5 samples, 0.79%)</title><rect x="1165" y="260" width="10" height="15" fill="rgb(226,196,53)"/><text x="1168.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (4 samples, 0.63%)</title><rect x="1167" y="276" width="8" height="15" fill="rgb(247,111,52)"/><text x="1170.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 0.63%)</title><rect x="1167" y="292" width="8" height="15" fill="rgb(240,107,5)"/><text x="1170.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 0.63%)</title><rect x="1167" y="308" width="8" height="15" fill="rgb(208,141,34)"/><text x="1170.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.16%)</title><rect x="1173" y="324" width="2" height="15" fill="rgb(236,208,37)"/><text x="1176.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.16%)</title><rect x="1173" y="340" width="2" height="15" fill="rgb(239,207,17)"/><text x="1176.00" y="350.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (4 samples, 0.63%)</title><rect x="1175" y="164" width="7" height="15" fill="rgb(218,110,31)"/><text x="1178.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (4 samples, 0.63%)</title><rect x="1175" y="180" width="7" height="15" fill="rgb(250,127,3)"/><text x="1178.00" y="190.50"></text></g><g><title>simplefilter (warnings.py) (4 samples, 0.63%)</title><rect x="1175" y="196" width="7" height="15" fill="rgb(217,12,32)"/><text x="1178.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.16%)</title><rect x="1180" y="212" width="2" height="15" fill="rgb(247,141,35)"/><text x="1183.00" y="222.50"></text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (122 samples, 19.18%)</title><rect x="958" y="68" width="226" height="15" fill="rgb(242,46,25)"/><text x="961.00" y="78.50">profile_skl (bench_AdaBoostRe..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (122 samples, 19.18%)</title><rect x="958" y="84" width="226" height="15" fill="rgb(236,127,18)"/><text x="961.00" y="94.50">setup_profile (bench_AdaBoost..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (122 samples, 19.18%)</title><rect x="958" y="100" width="226" height="15" fill="rgb(233,204,38)"/><text x="961.00" y="110.50">profile (bench_AdaBoostRegres..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (122 samples, 19.18%)</title><rect x="958" y="116" width="226" height="15" fill="rgb(232,115,37)"/><text x="961.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (122 samples, 19.18%)</title><rect x="958" y="132" width="226" height="15" fill="rgb(250,113,10)"/><text x="961.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py) (122 samples, 19.18%)</title><rect x="958" y="148" width="226" height="15" fill="rgb(252,217,11)"/><text x="961.00" y="158.50">predict (sklearn/ensemble/_we..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="1182" y="164" width="2" height="15" fill="rgb(232,191,19)"/><text x="1185.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="1182" y="180" width="2" height="15" fill="rgb(243,27,2)"/><text x="1185.00" y="190.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.16%)</title><rect x="1182" y="196" width="2" height="15" fill="rgb(235,152,7)"/><text x="1185.00" y="206.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.16%)</title><rect x="1182" y="212" width="2" height="15" fill="rgb(242,207,0)"/><text x="1185.00" y="222.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.16%)</title><rect x="1182" y="228" width="2" height="15" fill="rgb(225,114,8)"/><text x="1185.00" y="238.50"></text></g><g><title>0x7f77e66c5b1c (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1182" y="244" width="2" height="15" fill="rgb(253,34,7)"/><text x="1185.00" y="254.50"></text></g><g><title>all (636 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(218,137,31)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (636 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(242,193,11)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py)</text></g><g><title>start (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_50_12_float_.py) (3 samples, 0.47%)</title><rect x="1184" y="68" width="6" height="15" fill="rgb(216,184,47)"/><text x="1187.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py) (3 samples, 0.47%)</title><rect x="1184" y="84" width="6" height="15" fill="rgb(214,172,53)"/><text x="1187.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.47%)</title><rect x="1184" y="100" width="6" height="15" fill="rgb(232,156,21)"/><text x="1187.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (3 samples, 0.47%)</title><rect x="1184" y="116" width="6" height="15" fill="rgb(215,15,36)"/><text x="1187.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (3 samples, 0.47%)</title><rect x="1184" y="132" width="6" height="15" fill="rgb(229,40,47)"/><text x="1187.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py) (3 samples, 0.47%)</title><rect x="1184" y="148" width="6" height="15" fill="rgb(215,145,42)"/><text x="1187.00" y="158.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (3 samples, 0.47%)</title><rect x="1184" y="164" width="6" height="15" fill="rgb(209,66,24)"/><text x="1187.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (3 samples, 0.47%)</title><rect x="1184" y="180" width="6" height="15" fill="rgb(236,182,20)"/><text x="1187.00" y="190.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (3 samples, 0.47%)</title><rect x="1184" y="196" width="6" height="15" fill="rgb(209,139,24)"/><text x="1187.00" y="206.50"></text></g><g><title>__init__ (mtrand.c) (3 samples, 0.47%)</title><rect x="1184" y="212" width="6" height="15" fill="rgb(240,83,6)"/><text x="1187.00" y="222.50"></text></g><g><title>RandomState___init__ (mtrand.c) (3 samples, 0.47%)</title><rect x="1184" y="228" width="6" height="15" fill="rgb(246,166,8)"/><text x="1187.00" y="238.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (3 samples, 0.47%)</title><rect x="1184" y="244" width="6" height="15" fill="rgb(208,221,7)"/><text x="1187.00" y="254.50"></text></g><g><title>__init__ (mt19937.c) (3 samples, 0.47%)</title><rect x="1184" y="260" width="6" height="15" fill="rgb(208,13,35)"/><text x="1187.00" y="270.50"></text></g><g><title>MT19937___init__ (mt19937.c) (3 samples, 0.47%)</title><rect x="1184" y="276" width="6" height="15" fill="rgb(234,227,46)"/><text x="1187.00" y="286.50"></text></g><g><title>inner (contextlib.py) (3 samples, 0.47%)</title><rect x="1184" y="292" width="6" height="15" fill="rgb(248,135,10)"/><text x="1187.00" y="302.50"></text></g><g><title>generate_state (bit_generator.c) (3 samples, 0.47%)</title><rect x="1184" y="308" width="6" height="15" fill="rgb(227,192,51)"/><text x="1187.00" y="318.50"></text></g><g><title>generate_state (bit_generator.c) (3 samples, 0.47%)</title><rect x="1184" y="324" width="6" height="15" fill="rgb(245,115,27)"/><text x="1187.00" y="334.50"></text></g><g><title>array_assign_subscript (mapping.c) (2 samples, 0.31%)</title><rect x="1186" y="340" width="4" height="15" fill="rgb(224,167,53)"/><text x="1189.00" y="350.50"></text></g><g><title>UINT_setitem (arraytypes.c.src) (2 samples, 0.31%)</title><rect x="1186" y="356" width="4" height="15" fill="rgb(252,157,38)"/><text x="1189.00" y="366.50"></text></g></g></svg>