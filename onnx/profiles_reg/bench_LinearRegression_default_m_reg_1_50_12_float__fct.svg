<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1942" onload="init(evt)" viewBox="0 0 1200 1942" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1942" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1925.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1925.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(215,174,10)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(254,131,42)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(224,5,3)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(213,70,45)"/><text x="13.00" y="926.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.40%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(225,155,28)"/><text x="13.00" y="942.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.40%)</title><rect x="10" y="948" width="4" height="15" fill="rgb(221,163,17)"/><text x="13.00" y="958.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.80%)</title><rect x="14" y="932" width="10" height="15" fill="rgb(241,145,12)"/><text x="17.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="19" y="948" width="5" height="15" fill="rgb(239,155,52)"/><text x="22.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="19" y="964" width="5" height="15" fill="rgb(225,63,4)"/><text x="22.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.40%)</title><rect x="19" y="980" width="5" height="15" fill="rgb(216,138,42)"/><text x="22.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.40%)</title><rect x="19" y="996" width="5" height="15" fill="rgb(236,15,21)"/><text x="22.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.40%)</title><rect x="19" y="1012" width="5" height="15" fill="rgb(239,47,0)"/><text x="22.00" y="1022.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.59%)</title><rect x="10" y="836" width="18" height="15" fill="rgb(215,37,32)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.59%)</title><rect x="10" y="852" width="18" height="15" fill="rgb(227,66,53)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 1.20%)</title><rect x="14" y="868" width="14" height="15" fill="rgb(224,137,24)"/><text x="17.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 1.20%)</title><rect x="14" y="884" width="14" height="15" fill="rgb(213,183,45)"/><text x="17.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 1.20%)</title><rect x="14" y="900" width="14" height="15" fill="rgb(243,50,47)"/><text x="17.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 1.20%)</title><rect x="14" y="916" width="14" height="15" fill="rgb(210,159,48)"/><text x="17.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="24" y="932" width="4" height="15" fill="rgb(224,155,27)"/><text x="27.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="24" y="948" width="4" height="15" fill="rgb(219,229,42)"/><text x="27.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="24" y="964" width="4" height="15" fill="rgb(217,215,38)"/><text x="27.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="24" y="980" width="4" height="15" fill="rgb(250,210,33)"/><text x="27.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 1.99%)</title><rect x="10" y="292" width="23" height="15" fill="rgb(213,67,20)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="308" width="23" height="15" fill="rgb(232,37,11)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="324" width="23" height="15" fill="rgb(253,82,21)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="340" width="23" height="15" fill="rgb(243,137,7)"/><text x="13.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.99%)</title><rect x="10" y="356" width="23" height="15" fill="rgb(223,181,3)"/><text x="13.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="372" width="23" height="15" fill="rgb(222,187,20)"/><text x="13.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 1.99%)</title><rect x="10" y="388" width="23" height="15" fill="rgb(208,31,35)"/><text x="13.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="404" width="23" height="15" fill="rgb(239,6,28)"/><text x="13.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="420" width="23" height="15" fill="rgb(228,78,3)"/><text x="13.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="436" width="23" height="15" fill="rgb(210,176,45)"/><text x="13.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.99%)</title><rect x="10" y="452" width="23" height="15" fill="rgb(247,3,36)"/><text x="13.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="468" width="23" height="15" fill="rgb(207,132,8)"/><text x="13.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 1.99%)</title><rect x="10" y="484" width="23" height="15" fill="rgb(235,218,48)"/><text x="13.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="500" width="23" height="15" fill="rgb(221,207,8)"/><text x="13.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="516" width="23" height="15" fill="rgb(234,150,8)"/><text x="13.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="532" width="23" height="15" fill="rgb(214,96,37)"/><text x="13.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.99%)</title><rect x="10" y="548" width="23" height="15" fill="rgb(205,0,12)"/><text x="13.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="564" width="23" height="15" fill="rgb(248,27,41)"/><text x="13.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 1.99%)</title><rect x="10" y="580" width="23" height="15" fill="rgb(236,86,13)"/><text x="13.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="596" width="23" height="15" fill="rgb(228,183,6)"/><text x="13.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="612" width="23" height="15" fill="rgb(234,23,10)"/><text x="13.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="628" width="23" height="15" fill="rgb(228,169,38)"/><text x="13.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="644" width="23" height="15" fill="rgb(224,24,41)"/><text x="13.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="660" width="23" height="15" fill="rgb(214,192,6)"/><text x="13.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="676" width="23" height="15" fill="rgb(234,107,22)"/><text x="13.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.99%)</title><rect x="10" y="692" width="23" height="15" fill="rgb(224,108,7)"/><text x="13.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="708" width="23" height="15" fill="rgb(207,141,17)"/><text x="13.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 1.99%)</title><rect x="10" y="724" width="23" height="15" fill="rgb(212,77,30)"/><text x="13.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="740" width="23" height="15" fill="rgb(229,161,33)"/><text x="13.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="756" width="23" height="15" fill="rgb(240,71,41)"/><text x="13.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="772" width="23" height="15" fill="rgb(244,66,20)"/><text x="13.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.99%)</title><rect x="10" y="788" width="23" height="15" fill="rgb(249,46,8)"/><text x="13.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="10" y="804" width="23" height="15" fill="rgb(245,212,0)"/><text x="13.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 1.99%)</title><rect x="10" y="820" width="23" height="15" fill="rgb(224,19,32)"/><text x="13.00" y="830.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="28" y="836" width="5" height="15" fill="rgb(234,102,51)"/><text x="31.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="28" y="852" width="5" height="15" fill="rgb(232,193,34)"/><text x="31.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="28" y="868" width="5" height="15" fill="rgb(246,65,7)"/><text x="31.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="28" y="884" width="5" height="15" fill="rgb(219,23,51)"/><text x="31.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="28" y="900" width="5" height="15" fill="rgb(210,16,38)"/><text x="31.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.40%)</title><rect x="28" y="916" width="5" height="15" fill="rgb(236,25,8)"/><text x="31.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="28" y="932" width="5" height="15" fill="rgb(230,119,6)"/><text x="31.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="28" y="948" width="5" height="15" fill="rgb(233,182,8)"/><text x="31.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="28" y="964" width="5" height="15" fill="rgb(234,41,28)"/><text x="31.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="28" y="980" width="5" height="15" fill="rgb(211,207,30)"/><text x="31.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.40%)</title><rect x="28" y="996" width="5" height="15" fill="rgb(251,202,46)"/><text x="31.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="28" y="1012" width="5" height="15" fill="rgb(244,114,45)"/><text x="31.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="28" y="1028" width="5" height="15" fill="rgb(230,128,38)"/><text x="31.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="28" y="1044" width="5" height="15" fill="rgb(247,1,20)"/><text x="31.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="28" y="1060" width="5" height="15" fill="rgb(211,1,36)"/><text x="31.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="28" y="1076" width="5" height="15" fill="rgb(243,195,21)"/><text x="31.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.40%)</title><rect x="28" y="1092" width="5" height="15" fill="rgb(215,159,52)"/><text x="31.00" y="1102.50"></text></g><g><title>setParseAction (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.40%)</title><rect x="28" y="1108" width="5" height="15" fill="rgb(218,139,8)"/><text x="31.00" y="1118.50"></text></g><g><title>_trim_arity (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.40%)</title><rect x="28" y="1124" width="5" height="15" fill="rgb(251,161,33)"/><text x="31.00" y="1134.50"></text></g><g><title>extract_stack (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.40%)</title><rect x="28" y="1140" width="5" height="15" fill="rgb(249,179,1)"/><text x="31.00" y="1150.50"></text></g><g><title>extract_stack (traceback.py) (1 samples, 0.40%)</title><rect x="28" y="1156" width="5" height="15" fill="rgb(244,146,26)"/><text x="31.00" y="1166.50"></text></g><g><title>extract (traceback.py) (1 samples, 0.40%)</title><rect x="28" y="1172" width="5" height="15" fill="rgb(252,119,1)"/><text x="31.00" y="1182.50"></text></g><g><title>line (traceback.py) (1 samples, 0.40%)</title><rect x="28" y="1188" width="5" height="15" fill="rgb(219,29,38)"/><text x="31.00" y="1198.50"></text></g><g><title>getline (linecache.py) (1 samples, 0.40%)</title><rect x="28" y="1204" width="5" height="15" fill="rgb(210,135,41)"/><text x="31.00" y="1214.50"></text></g><g><title>getlines (linecache.py) (1 samples, 0.40%)</title><rect x="28" y="1220" width="5" height="15" fill="rgb(252,218,35)"/><text x="31.00" y="1230.50"></text></g><g><title>updatecache (linecache.py) (1 samples, 0.40%)</title><rect x="28" y="1236" width="5" height="15" fill="rgb(211,133,49)"/><text x="31.00" y="1246.50"></text></g><g><title>0x7f54af533456 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="28" y="1252" width="5" height="15" fill="rgb(226,206,50)"/><text x="31.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="500" width="5" height="15" fill="rgb(210,124,43)"/><text x="36.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="516" width="5" height="15" fill="rgb(223,120,26)"/><text x="36.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="532" width="5" height="15" fill="rgb(218,222,47)"/><text x="36.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="33" y="548" width="5" height="15" fill="rgb(233,216,38)"/><text x="36.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="564" width="5" height="15" fill="rgb(254,0,23)"/><text x="36.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.40%)</title><rect x="33" y="580" width="5" height="15" fill="rgb(239,77,3)"/><text x="36.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="596" width="5" height="15" fill="rgb(215,87,21)"/><text x="36.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="612" width="5" height="15" fill="rgb(243,173,5)"/><text x="36.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="628" width="5" height="15" fill="rgb(208,119,19)"/><text x="36.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="33" y="644" width="5" height="15" fill="rgb(215,152,8)"/><text x="36.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="660" width="5" height="15" fill="rgb(252,127,6)"/><text x="36.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.40%)</title><rect x="33" y="676" width="5" height="15" fill="rgb(232,31,39)"/><text x="36.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="692" width="5" height="15" fill="rgb(206,193,48)"/><text x="36.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="708" width="5" height="15" fill="rgb(235,104,10)"/><text x="36.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="724" width="5" height="15" fill="rgb(254,83,50)"/><text x="36.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="33" y="740" width="5" height="15" fill="rgb(221,189,16)"/><text x="36.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="756" width="5" height="15" fill="rgb(228,6,2)"/><text x="36.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.40%)</title><rect x="33" y="772" width="5" height="15" fill="rgb(232,159,32)"/><text x="36.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="788" width="5" height="15" fill="rgb(248,110,27)"/><text x="36.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="804" width="5" height="15" fill="rgb(220,170,28)"/><text x="36.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="820" width="5" height="15" fill="rgb(242,91,14)"/><text x="36.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="836" width="5" height="15" fill="rgb(215,108,37)"/><text x="36.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="852" width="5" height="15" fill="rgb(227,175,22)"/><text x="36.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="33" y="868" width="5" height="15" fill="rgb(228,171,30)"/><text x="36.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="884" width="5" height="15" fill="rgb(238,222,30)"/><text x="36.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.40%)</title><rect x="33" y="900" width="5" height="15" fill="rgb(214,229,40)"/><text x="36.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="916" width="5" height="15" fill="rgb(228,17,45)"/><text x="36.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="932" width="5" height="15" fill="rgb(225,133,10)"/><text x="36.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="948" width="5" height="15" fill="rgb(240,128,49)"/><text x="36.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="964" width="5" height="15" fill="rgb(251,74,45)"/><text x="36.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="980" width="5" height="15" fill="rgb(240,22,12)"/><text x="36.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="33" y="996" width="5" height="15" fill="rgb(207,55,38)"/><text x="36.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1012" width="5" height="15" fill="rgb(254,96,16)"/><text x="36.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.40%)</title><rect x="33" y="1028" width="5" height="15" fill="rgb(251,13,42)"/><text x="36.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.40%)</title><rect x="33" y="1044" width="5" height="15" fill="rgb(217,114,11)"/><text x="36.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.40%)</title><rect x="33" y="1060" width="5" height="15" fill="rgb(216,47,39)"/><text x="36.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.40%)</title><rect x="33" y="1076" width="5" height="15" fill="rgb(223,36,12)"/><text x="36.00" y="1086.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.40%)</title><rect x="33" y="1092" width="5" height="15" fill="rgb(223,75,9)"/><text x="36.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.79%)</title><rect x="10" y="196" width="32" height="15" fill="rgb(245,213,9)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.79%)</title><rect x="10" y="212" width="32" height="15" fill="rgb(239,98,14)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.79%)</title><rect x="10" y="228" width="32" height="15" fill="rgb(224,221,40)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.79%)</title><rect x="10" y="244" width="32" height="15" fill="rgb(222,0,3)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.79%)</title><rect x="10" y="260" width="32" height="15" fill="rgb(245,15,22)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.79%)</title><rect x="10" y="276" width="32" height="15" fill="rgb(215,7,12)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.80%)</title><rect x="33" y="292" width="9" height="15" fill="rgb(215,70,40)"/><text x="36.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="33" y="308" width="9" height="15" fill="rgb(229,211,14)"/><text x="36.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="33" y="324" width="9" height="15" fill="rgb(212,195,27)"/><text x="36.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="33" y="340" width="9" height="15" fill="rgb(214,197,40)"/><text x="36.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.80%)</title><rect x="33" y="356" width="9" height="15" fill="rgb(214,57,5)"/><text x="36.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="33" y="372" width="9" height="15" fill="rgb(229,163,39)"/><text x="36.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.80%)</title><rect x="33" y="388" width="9" height="15" fill="rgb(237,114,44)"/><text x="36.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="33" y="404" width="9" height="15" fill="rgb(205,128,54)"/><text x="36.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="33" y="420" width="9" height="15" fill="rgb(246,208,2)"/><text x="36.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="33" y="436" width="9" height="15" fill="rgb(245,139,3)"/><text x="36.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.80%)</title><rect x="33" y="452" width="9" height="15" fill="rgb(208,227,5)"/><text x="36.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="33" y="468" width="9" height="15" fill="rgb(223,215,22)"/><text x="36.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.80%)</title><rect x="33" y="484" width="9" height="15" fill="rgb(247,190,23)"/><text x="36.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="500" width="4" height="15" fill="rgb(253,125,31)"/><text x="41.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="516" width="4" height="15" fill="rgb(252,76,36)"/><text x="41.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="532" width="4" height="15" fill="rgb(222,110,18)"/><text x="41.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="548" width="4" height="15" fill="rgb(212,3,40)"/><text x="41.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="564" width="4" height="15" fill="rgb(253,105,16)"/><text x="41.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="38" y="580" width="4" height="15" fill="rgb(228,171,8)"/><text x="41.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="596" width="4" height="15" fill="rgb(247,176,46)"/><text x="41.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.40%)</title><rect x="38" y="612" width="4" height="15" fill="rgb(241,228,7)"/><text x="41.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="628" width="4" height="15" fill="rgb(220,177,45)"/><text x="41.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="644" width="4" height="15" fill="rgb(209,42,40)"/><text x="41.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="660" width="4" height="15" fill="rgb(253,46,51)"/><text x="41.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="38" y="676" width="4" height="15" fill="rgb(205,222,1)"/><text x="41.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="692" width="4" height="15" fill="rgb(210,66,29)"/><text x="41.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.40%)</title><rect x="38" y="708" width="4" height="15" fill="rgb(243,70,10)"/><text x="41.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="724" width="4" height="15" fill="rgb(216,1,18)"/><text x="41.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="740" width="4" height="15" fill="rgb(238,104,52)"/><text x="41.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="756" width="4" height="15" fill="rgb(217,1,11)"/><text x="41.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="38" y="772" width="4" height="15" fill="rgb(226,124,28)"/><text x="41.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="788" width="4" height="15" fill="rgb(213,157,34)"/><text x="41.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.40%)</title><rect x="38" y="804" width="4" height="15" fill="rgb(219,145,51)"/><text x="41.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="820" width="4" height="15" fill="rgb(225,46,26)"/><text x="41.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="836" width="4" height="15" fill="rgb(219,170,38)"/><text x="41.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="852" width="4" height="15" fill="rgb(254,189,18)"/><text x="41.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="38" y="868" width="4" height="15" fill="rgb(234,204,3)"/><text x="41.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="884" width="4" height="15" fill="rgb(218,35,44)"/><text x="41.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py) (1 samples, 0.40%)</title><rect x="38" y="900" width="4" height="15" fill="rgb(234,213,20)"/><text x="41.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="916" width="4" height="15" fill="rgb(236,63,5)"/><text x="41.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="932" width="4" height="15" fill="rgb(253,36,50)"/><text x="41.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="948" width="4" height="15" fill="rgb(228,60,37)"/><text x="41.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="38" y="964" width="4" height="15" fill="rgb(245,224,35)"/><text x="41.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="980" width="4" height="15" fill="rgb(212,32,45)"/><text x="41.00" y="990.50"></text></g><g><title>&lt;module&gt; (json/__init__.py) (1 samples, 0.40%)</title><rect x="38" y="996" width="4" height="15" fill="rgb(223,110,24)"/><text x="41.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="1012" width="4" height="15" fill="rgb(213,201,27)"/><text x="41.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="1028" width="4" height="15" fill="rgb(243,13,16)"/><text x="41.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="1044" width="4" height="15" fill="rgb(216,165,17)"/><text x="41.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="38" y="1060" width="4" height="15" fill="rgb(220,221,25)"/><text x="41.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="1076" width="4" height="15" fill="rgb(220,91,51)"/><text x="41.00" y="1086.50"></text></g><g><title>&lt;module&gt; (json/decoder.py) (1 samples, 0.40%)</title><rect x="38" y="1092" width="4" height="15" fill="rgb(236,213,43)"/><text x="41.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="1108" width="4" height="15" fill="rgb(229,209,14)"/><text x="41.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="1124" width="4" height="15" fill="rgb(229,0,50)"/><text x="41.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="1140" width="4" height="15" fill="rgb(211,16,22)"/><text x="41.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="1156" width="4" height="15" fill="rgb(225,96,33)"/><text x="41.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="1172" width="4" height="15" fill="rgb(231,211,22)"/><text x="41.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="38" y="1188" width="4" height="15" fill="rgb(236,221,28)"/><text x="41.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="38" y="1204" width="4" height="15" fill="rgb(238,218,17)"/><text x="41.00" y="1214.50"></text></g><g><title>&lt;module&gt; (json/scanner.py) (1 samples, 0.40%)</title><rect x="38" y="1220" width="4" height="15" fill="rgb(211,11,15)"/><text x="41.00" y="1230.50"></text></g><g><title>compile (re.py) (1 samples, 0.40%)</title><rect x="38" y="1236" width="4" height="15" fill="rgb(227,123,24)"/><text x="41.00" y="1246.50"></text></g><g><title>_compile (re.py) (1 samples, 0.40%)</title><rect x="38" y="1252" width="4" height="15" fill="rgb(205,199,33)"/><text x="41.00" y="1262.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.40%)</title><rect x="38" y="1268" width="4" height="15" fill="rgb(233,153,38)"/><text x="41.00" y="1278.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.40%)</title><rect x="38" y="1284" width="4" height="15" fill="rgb(247,197,15)"/><text x="41.00" y="1294.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.40%)</title><rect x="38" y="1300" width="4" height="15" fill="rgb(238,200,54)"/><text x="41.00" y="1310.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.40%)</title><rect x="38" y="1316" width="4" height="15" fill="rgb(233,10,37)"/><text x="41.00" y="1326.50"></text></g><g><title>closegroup (sre_parse.py) (1 samples, 0.40%)</title><rect x="38" y="1332" width="4" height="15" fill="rgb(235,146,7)"/><text x="41.00" y="1342.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.40%)</title><rect x="38" y="1348" width="4" height="15" fill="rgb(218,144,34)"/><text x="41.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="484" width="5" height="15" fill="rgb(236,202,14)"/><text x="45.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="500" width="5" height="15" fill="rgb(240,106,6)"/><text x="45.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="516" width="5" height="15" fill="rgb(216,143,31)"/><text x="45.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="532" width="5" height="15" fill="rgb(251,214,43)"/><text x="45.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="42" y="548" width="5" height="15" fill="rgb(232,170,53)"/><text x="45.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="564" width="5" height="15" fill="rgb(209,220,23)"/><text x="45.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.40%)</title><rect x="42" y="580" width="5" height="15" fill="rgb(243,180,30)"/><text x="45.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="596" width="5" height="15" fill="rgb(234,30,24)"/><text x="45.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="612" width="5" height="15" fill="rgb(231,27,52)"/><text x="45.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="628" width="5" height="15" fill="rgb(214,78,52)"/><text x="45.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="42" y="644" width="5" height="15" fill="rgb(231,197,30)"/><text x="45.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="660" width="5" height="15" fill="rgb(216,0,6)"/><text x="45.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.40%)</title><rect x="42" y="676" width="5" height="15" fill="rgb(214,67,11)"/><text x="45.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="692" width="5" height="15" fill="rgb(227,6,11)"/><text x="45.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="708" width="5" height="15" fill="rgb(245,134,42)"/><text x="45.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="724" width="5" height="15" fill="rgb(238,204,25)"/><text x="45.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="42" y="740" width="5" height="15" fill="rgb(244,57,10)"/><text x="45.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="756" width="5" height="15" fill="rgb(238,152,18)"/><text x="45.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.40%)</title><rect x="42" y="772" width="5" height="15" fill="rgb(247,172,45)"/><text x="45.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="788" width="5" height="15" fill="rgb(244,62,1)"/><text x="45.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="804" width="5" height="15" fill="rgb(225,159,14)"/><text x="45.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="820" width="5" height="15" fill="rgb(211,131,31)"/><text x="45.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="42" y="836" width="5" height="15" fill="rgb(251,67,24)"/><text x="45.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="852" width="5" height="15" fill="rgb(224,33,15)"/><text x="45.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.40%)</title><rect x="42" y="868" width="5" height="15" fill="rgb(216,27,35)"/><text x="45.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="884" width="5" height="15" fill="rgb(239,161,6)"/><text x="45.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="900" width="5" height="15" fill="rgb(241,26,52)"/><text x="45.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="916" width="5" height="15" fill="rgb(247,152,29)"/><text x="45.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="932" width="5" height="15" fill="rgb(236,201,7)"/><text x="45.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="948" width="5" height="15" fill="rgb(210,181,0)"/><text x="45.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="964" width="5" height="15" fill="rgb(243,140,21)"/><text x="45.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="42" y="980" width="5" height="15" fill="rgb(236,121,22)"/><text x="45.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="996" width="5" height="15" fill="rgb(208,40,11)"/><text x="45.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.40%)</title><rect x="42" y="1012" width="5" height="15" fill="rgb(233,98,45)"/><text x="45.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="1028" width="5" height="15" fill="rgb(206,147,8)"/><text x="45.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="1044" width="5" height="15" fill="rgb(206,123,44)"/><text x="45.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="1060" width="5" height="15" fill="rgb(207,37,7)"/><text x="45.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="42" y="1076" width="5" height="15" fill="rgb(252,56,51)"/><text x="45.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="1092" width="5" height="15" fill="rgb(237,0,32)"/><text x="45.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.40%)</title><rect x="42" y="1108" width="5" height="15" fill="rgb(249,174,15)"/><text x="45.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="1124" width="5" height="15" fill="rgb(239,31,32)"/><text x="45.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="1140" width="5" height="15" fill="rgb(209,125,20)"/><text x="45.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="1156" width="5" height="15" fill="rgb(222,173,5)"/><text x="45.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="1172" width="5" height="15" fill="rgb(205,208,52)"/><text x="45.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="1188" width="5" height="15" fill="rgb(210,130,5)"/><text x="45.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="42" y="1204" width="5" height="15" fill="rgb(216,193,41)"/><text x="45.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="1220" width="5" height="15" fill="rgb(206,177,43)"/><text x="45.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.40%)</title><rect x="42" y="1236" width="5" height="15" fill="rgb(221,196,7)"/><text x="45.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="1252" width="5" height="15" fill="rgb(215,137,46)"/><text x="45.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="1268" width="5" height="15" fill="rgb(244,168,15)"/><text x="45.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="1284" width="5" height="15" fill="rgb(220,77,54)"/><text x="45.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="1300" width="5" height="15" fill="rgb(235,224,52)"/><text x="45.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="1316" width="5" height="15" fill="rgb(242,201,35)"/><text x="45.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="42" y="1332" width="5" height="15" fill="rgb(222,120,51)"/><text x="45.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="1348" width="5" height="15" fill="rgb(217,184,37)"/><text x="45.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.40%)</title><rect x="42" y="1364" width="5" height="15" fill="rgb(212,204,19)"/><text x="45.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="1380" width="5" height="15" fill="rgb(208,18,35)"/><text x="45.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="1396" width="5" height="15" fill="rgb(252,136,15)"/><text x="45.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="1412" width="5" height="15" fill="rgb(233,41,30)"/><text x="45.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="42" y="1428" width="5" height="15" fill="rgb(219,127,11)"/><text x="45.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="42" y="1444" width="5" height="15" fill="rgb(242,137,31)"/><text x="45.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.40%)</title><rect x="42" y="1460" width="5" height="15" fill="rgb(248,137,29)"/><text x="45.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.40%)</title><rect x="42" y="1476" width="5" height="15" fill="rgb(208,202,40)"/><text x="45.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.40%)</title><rect x="42" y="1492" width="5" height="15" fill="rgb(242,202,42)"/><text x="45.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.40%)</title><rect x="42" y="1508" width="5" height="15" fill="rgb(225,46,14)"/><text x="45.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.40%)</title><rect x="42" y="1524" width="5" height="15" fill="rgb(206,206,21)"/><text x="45.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.40%)</title><rect x="42" y="1540" width="5" height="15" fill="rgb(238,81,49)"/><text x="45.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.40%)</title><rect x="42" y="1556" width="5" height="15" fill="rgb(207,207,30)"/><text x="45.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.40%)</title><rect x="42" y="1572" width="5" height="15" fill="rgb(243,127,28)"/><text x="45.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.40%)</title><rect x="42" y="1588" width="5" height="15" fill="rgb(219,55,53)"/><text x="45.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py) (1 samples, 0.40%)</title><rect x="42" y="1604" width="5" height="15" fill="rgb(235,38,21)"/><text x="45.00" y="1614.50"></text></g><g><title>0x7f549f5de0e9 (?) (1 samples, 0.40%)</title><rect x="42" y="1620" width="5" height="15" fill="rgb(229,166,3)"/><text x="45.00" y="1630.50"></text></g><g><title>0x7f549f5cf4d1 (?) (1 samples, 0.40%)</title><rect x="42" y="1636" width="5" height="15" fill="rgb(218,126,51)"/><text x="45.00" y="1646.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/accessors.py) (1 samples, 0.40%)</title><rect x="47" y="1204" width="5" height="15" fill="rgb(219,178,27)"/><text x="50.00" y="1214.50"></text></g><g><title>add_delegate_accessors (pandas/core/accessor.py) (1 samples, 0.40%)</title><rect x="47" y="1220" width="5" height="15" fill="rgb(246,181,50)"/><text x="50.00" y="1230.50"></text></g><g><title>_add_delegate_accessors (pandas/core/accessor.py) (1 samples, 0.40%)</title><rect x="47" y="1236" width="5" height="15" fill="rgb(223,78,33)"/><text x="50.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="52" y="1540" width="5" height="15" fill="rgb(241,229,38)"/><text x="55.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="52" y="1556" width="5" height="15" fill="rgb(223,83,24)"/><text x="55.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="52" y="1572" width="5" height="15" fill="rgb(252,205,8)"/><text x="55.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="52" y="1588" width="5" height="15" fill="rgb(247,68,32)"/><text x="55.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="52" y="1604" width="5" height="15" fill="rgb(254,150,37)"/><text x="55.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="52" y="1620" width="5" height="15" fill="rgb(214,107,1)"/><text x="55.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.40%)</title><rect x="52" y="1636" width="5" height="15" fill="rgb(223,129,16)"/><text x="55.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="52" y="1652" width="5" height="15" fill="rgb(241,182,6)"/><text x="55.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="52" y="1668" width="5" height="15" fill="rgb(214,166,40)"/><text x="55.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="52" y="1684" width="5" height="15" fill="rgb(215,127,37)"/><text x="55.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="52" y="1700" width="5" height="15" fill="rgb(221,226,13)"/><text x="55.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="52" y="1716" width="5" height="15" fill="rgb(209,184,12)"/><text x="55.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="52" y="1732" width="5" height="15" fill="rgb(221,96,43)"/><text x="55.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="52" y="1748" width="5" height="15" fill="rgb(219,175,33)"/><text x="55.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/cbook/__init__.py) (1 samples, 0.40%)</title><rect x="52" y="1764" width="5" height="15" fill="rgb(249,181,10)"/><text x="55.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="52" y="1780" width="5" height="15" fill="rgb(217,123,7)"/><text x="55.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="52" y="1796" width="5" height="15" fill="rgb(227,201,38)"/><text x="55.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="52" y="1812" width="5" height="15" fill="rgb(250,79,31)"/><text x="55.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="52" y="1828" width="5" height="15" fill="rgb(232,8,48)"/><text x="55.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="52" y="1844" width="5" height="15" fill="rgb(207,129,49)"/><text x="55.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/cbook/deprecation.py) (1 samples, 0.40%)</title><rect x="52" y="1860" width="5" height="15" fill="rgb(236,155,49)"/><text x="55.00" y="1870.50"></text></g><g><title>contextmanager (contextlib.py) (1 samples, 0.40%)</title><rect x="52" y="1876" width="5" height="15" fill="rgb(219,158,35)"/><text x="55.00" y="1886.50"></text></g><g><title>update_wrapper (functools.py) (1 samples, 0.40%)</title><rect x="52" y="1892" width="5" height="15" fill="rgb(235,228,51)"/><text x="55.00" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1572" width="4" height="15" fill="rgb(215,81,29)"/><text x="60.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.40%)</title><rect x="57" y="1588" width="4" height="15" fill="rgb(221,2,28)"/><text x="60.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1604" width="4" height="15" fill="rgb(213,104,4)"/><text x="60.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1620" width="4" height="15" fill="rgb(211,88,35)"/><text x="60.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1636" width="4" height="15" fill="rgb(218,48,24)"/><text x="60.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="1652" width="4" height="15" fill="rgb(236,42,49)"/><text x="60.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1668" width="4" height="15" fill="rgb(224,34,19)"/><text x="60.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py) (1 samples, 0.40%)</title><rect x="57" y="1684" width="4" height="15" fill="rgb(209,97,36)"/><text x="60.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1700" width="4" height="15" fill="rgb(230,122,51)"/><text x="60.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1716" width="4" height="15" fill="rgb(253,188,29)"/><text x="60.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1732" width="4" height="15" fill="rgb(248,67,37)"/><text x="60.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="1748" width="4" height="15" fill="rgb(218,220,9)"/><text x="60.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1764" width="4" height="15" fill="rgb(242,158,27)"/><text x="60.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py) (1 samples, 0.40%)</title><rect x="57" y="1780" width="4" height="15" fill="rgb(229,80,4)"/><text x="60.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py) (1 samples, 0.40%)</title><rect x="57" y="1796" width="4" height="15" fill="rgb(235,78,3)"/><text x="60.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py) (1 samples, 0.40%)</title><rect x="57" y="1812" width="4" height="15" fill="rgb(237,214,30)"/><text x="60.00" y="1822.50"></text></g><g><title>to_rgba (matplotlib/colors.py) (1 samples, 0.40%)</title><rect x="57" y="1828" width="4" height="15" fill="rgb(214,206,41)"/><text x="60.00" y="1838.50"></text></g><g><title>_to_rgba_no_colorcycle (matplotlib/colors.py) (1 samples, 0.40%)</title><rect x="57" y="1844" width="4" height="15" fill="rgb(246,11,1)"/><text x="60.00" y="1854.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 1.99%)</title><rect x="42" y="340" width="24" height="15" fill="rgb(226,12,2)"/><text x="45.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="42" y="356" width="24" height="15" fill="rgb(250,154,15)"/><text x="45.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="42" y="372" width="24" height="15" fill="rgb(219,91,39)"/><text x="45.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="42" y="388" width="24" height="15" fill="rgb(254,101,29)"/><text x="45.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.99%)</title><rect x="42" y="404" width="24" height="15" fill="rgb(219,40,31)"/><text x="45.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="42" y="420" width="24" height="15" fill="rgb(214,62,44)"/><text x="45.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 1.99%)</title><rect x="42" y="436" width="24" height="15" fill="rgb(215,44,47)"/><text x="45.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="42" y="452" width="24" height="15" fill="rgb(208,53,24)"/><text x="45.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.99%)</title><rect x="42" y="468" width="24" height="15" fill="rgb(208,30,25)"/><text x="45.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="484" width="19" height="15" fill="rgb(206,213,35)"/><text x="50.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.59%)</title><rect x="47" y="500" width="19" height="15" fill="rgb(238,46,4)"/><text x="50.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="516" width="19" height="15" fill="rgb(212,168,44)"/><text x="50.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 1.59%)</title><rect x="47" y="532" width="19" height="15" fill="rgb(224,9,1)"/><text x="50.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="548" width="19" height="15" fill="rgb(254,37,36)"/><text x="50.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="564" width="19" height="15" fill="rgb(222,135,32)"/><text x="50.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="580" width="19" height="15" fill="rgb(216,194,48)"/><text x="50.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.59%)</title><rect x="47" y="596" width="19" height="15" fill="rgb(210,50,45)"/><text x="50.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="612" width="19" height="15" fill="rgb(254,13,45)"/><text x="50.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 1.59%)</title><rect x="47" y="628" width="19" height="15" fill="rgb(206,161,24)"/><text x="50.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="644" width="19" height="15" fill="rgb(208,36,5)"/><text x="50.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="660" width="19" height="15" fill="rgb(215,77,46)"/><text x="50.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="676" width="19" height="15" fill="rgb(250,185,11)"/><text x="50.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.59%)</title><rect x="47" y="692" width="19" height="15" fill="rgb(210,148,16)"/><text x="50.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="708" width="19" height="15" fill="rgb(247,97,25)"/><text x="50.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (4 samples, 1.59%)</title><rect x="47" y="724" width="19" height="15" fill="rgb(245,19,46)"/><text x="50.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="740" width="19" height="15" fill="rgb(222,70,10)"/><text x="50.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="756" width="19" height="15" fill="rgb(251,79,40)"/><text x="50.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="772" width="19" height="15" fill="rgb(221,30,15)"/><text x="50.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.59%)</title><rect x="47" y="788" width="19" height="15" fill="rgb(211,31,46)"/><text x="50.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="804" width="19" height="15" fill="rgb(246,136,1)"/><text x="50.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (4 samples, 1.59%)</title><rect x="47" y="820" width="19" height="15" fill="rgb(236,45,50)"/><text x="50.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="836" width="19" height="15" fill="rgb(207,62,12)"/><text x="50.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="852" width="19" height="15" fill="rgb(229,193,1)"/><text x="50.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="868" width="19" height="15" fill="rgb(206,97,33)"/><text x="50.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.59%)</title><rect x="47" y="884" width="19" height="15" fill="rgb(235,117,45)"/><text x="50.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="900" width="19" height="15" fill="rgb(233,64,33)"/><text x="50.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (4 samples, 1.59%)</title><rect x="47" y="916" width="19" height="15" fill="rgb(242,58,0)"/><text x="50.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="932" width="19" height="15" fill="rgb(208,4,19)"/><text x="50.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="948" width="19" height="15" fill="rgb(212,69,22)"/><text x="50.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="964" width="19" height="15" fill="rgb(232,80,39)"/><text x="50.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.59%)</title><rect x="47" y="980" width="19" height="15" fill="rgb(220,189,41)"/><text x="50.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="996" width="19" height="15" fill="rgb(225,141,19)"/><text x="50.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (4 samples, 1.59%)</title><rect x="47" y="1012" width="19" height="15" fill="rgb(226,194,42)"/><text x="50.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="1028" width="19" height="15" fill="rgb(227,7,3)"/><text x="50.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="1044" width="19" height="15" fill="rgb(205,131,3)"/><text x="50.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="1060" width="19" height="15" fill="rgb(253,178,40)"/><text x="50.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.59%)</title><rect x="47" y="1076" width="19" height="15" fill="rgb(220,83,50)"/><text x="50.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="1092" width="19" height="15" fill="rgb(224,135,13)"/><text x="50.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (4 samples, 1.59%)</title><rect x="47" y="1108" width="19" height="15" fill="rgb(245,195,2)"/><text x="50.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="1124" width="19" height="15" fill="rgb(224,15,11)"/><text x="50.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="1140" width="19" height="15" fill="rgb(248,158,13)"/><text x="50.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="1156" width="19" height="15" fill="rgb(205,30,22)"/><text x="50.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.59%)</title><rect x="47" y="1172" width="19" height="15" fill="rgb(253,143,7)"/><text x="50.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="47" y="1188" width="19" height="15" fill="rgb(237,162,19)"/><text x="50.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (3 samples, 1.20%)</title><rect x="52" y="1204" width="14" height="15" fill="rgb(212,0,2)"/><text x="55.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="52" y="1220" width="14" height="15" fill="rgb(227,29,19)"/><text x="55.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="52" y="1236" width="14" height="15" fill="rgb(227,7,54)"/><text x="55.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="52" y="1252" width="14" height="15" fill="rgb(251,68,0)"/><text x="55.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.20%)</title><rect x="52" y="1268" width="14" height="15" fill="rgb(227,3,34)"/><text x="55.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="52" y="1284" width="14" height="15" fill="rgb(230,170,49)"/><text x="55.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (3 samples, 1.20%)</title><rect x="52" y="1300" width="14" height="15" fill="rgb(238,186,31)"/><text x="55.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="52" y="1316" width="14" height="15" fill="rgb(215,203,16)"/><text x="55.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="52" y="1332" width="14" height="15" fill="rgb(213,152,27)"/><text x="55.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="52" y="1348" width="14" height="15" fill="rgb(252,225,6)"/><text x="55.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.20%)</title><rect x="52" y="1364" width="14" height="15" fill="rgb(233,200,9)"/><text x="55.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="52" y="1380" width="14" height="15" fill="rgb(225,161,8)"/><text x="55.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (3 samples, 1.20%)</title><rect x="52" y="1396" width="14" height="15" fill="rgb(212,118,5)"/><text x="55.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="52" y="1412" width="14" height="15" fill="rgb(241,177,9)"/><text x="55.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="52" y="1428" width="14" height="15" fill="rgb(252,22,16)"/><text x="55.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="52" y="1444" width="14" height="15" fill="rgb(227,159,6)"/><text x="55.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.20%)</title><rect x="52" y="1460" width="14" height="15" fill="rgb(214,175,52)"/><text x="55.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="52" y="1476" width="14" height="15" fill="rgb(217,7,41)"/><text x="55.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (3 samples, 1.20%)</title><rect x="52" y="1492" width="14" height="15" fill="rgb(249,227,46)"/><text x="55.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="52" y="1508" width="14" height="15" fill="rgb(251,59,36)"/><text x="55.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="52" y="1524" width="14" height="15" fill="rgb(217,222,2)"/><text x="55.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="57" y="1540" width="9" height="15" fill="rgb(242,100,6)"/><text x="60.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.80%)</title><rect x="57" y="1556" width="9" height="15" fill="rgb(243,88,3)"/><text x="60.00" y="1566.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="61" y="1572" width="5" height="15" fill="rgb(205,128,44)"/><text x="64.00" y="1582.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="61" y="1588" width="5" height="15" fill="rgb(208,203,53)"/><text x="64.00" y="1598.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="61" y="1604" width="5" height="15" fill="rgb(208,159,46)"/><text x="64.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="628" width="5" height="15" fill="rgb(237,53,40)"/><text x="69.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="644" width="5" height="15" fill="rgb(227,164,11)"/><text x="69.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="660" width="5" height="15" fill="rgb(218,99,3)"/><text x="69.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="676" width="5" height="15" fill="rgb(237,193,50)"/><text x="69.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="66" y="692" width="5" height="15" fill="rgb(217,195,17)"/><text x="69.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="708" width="5" height="15" fill="rgb(233,3,21)"/><text x="69.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.40%)</title><rect x="66" y="724" width="5" height="15" fill="rgb(247,11,36)"/><text x="69.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="740" width="5" height="15" fill="rgb(205,158,46)"/><text x="69.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="756" width="5" height="15" fill="rgb(238,125,21)"/><text x="69.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="772" width="5" height="15" fill="rgb(211,187,9)"/><text x="69.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="66" y="788" width="5" height="15" fill="rgb(238,183,25)"/><text x="69.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="804" width="5" height="15" fill="rgb(249,76,11)"/><text x="69.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.40%)</title><rect x="66" y="820" width="5" height="15" fill="rgb(215,44,43)"/><text x="69.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="836" width="5" height="15" fill="rgb(238,18,16)"/><text x="69.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="852" width="5" height="15" fill="rgb(208,224,1)"/><text x="69.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="868" width="5" height="15" fill="rgb(215,215,35)"/><text x="69.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="66" y="884" width="5" height="15" fill="rgb(230,158,44)"/><text x="69.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="900" width="5" height="15" fill="rgb(243,211,45)"/><text x="69.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.40%)</title><rect x="66" y="916" width="5" height="15" fill="rgb(254,19,51)"/><text x="69.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="932" width="5" height="15" fill="rgb(211,54,7)"/><text x="69.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="948" width="5" height="15" fill="rgb(207,95,33)"/><text x="69.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="964" width="5" height="15" fill="rgb(251,153,12)"/><text x="69.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="980" width="5" height="15" fill="rgb(219,6,10)"/><text x="69.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="996" width="5" height="15" fill="rgb(232,176,24)"/><text x="69.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="1012" width="5" height="15" fill="rgb(245,200,4)"/><text x="69.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="66" y="1028" width="5" height="15" fill="rgb(233,145,19)"/><text x="69.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="1044" width="5" height="15" fill="rgb(209,174,27)"/><text x="69.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.40%)</title><rect x="66" y="1060" width="5" height="15" fill="rgb(235,166,8)"/><text x="69.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="1076" width="5" height="15" fill="rgb(241,121,36)"/><text x="69.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="1092" width="5" height="15" fill="rgb(211,127,53)"/><text x="69.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="1108" width="5" height="15" fill="rgb(239,13,44)"/><text x="69.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="66" y="1124" width="5" height="15" fill="rgb(249,184,53)"/><text x="69.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="1140" width="5" height="15" fill="rgb(207,73,23)"/><text x="69.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/flog.py) (1 samples, 0.40%)</title><rect x="66" y="1156" width="5" height="15" fill="rgb(253,64,36)"/><text x="69.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="1172" width="5" height="15" fill="rgb(210,144,19)"/><text x="69.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="1188" width="5" height="15" fill="rgb(250,119,31)"/><text x="69.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="1204" width="5" height="15" fill="rgb(224,211,21)"/><text x="69.00" y="1214.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="1220" width="5" height="15" fill="rgb(245,28,41)"/><text x="69.00" y="1230.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="1236" width="5" height="15" fill="rgb(225,43,49)"/><text x="69.00" y="1246.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="1252" width="5" height="15" fill="rgb(230,45,25)"/><text x="69.00" y="1262.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="66" y="1268" width="5" height="15" fill="rgb(229,32,10)"/><text x="69.00" y="1278.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="66" y="1284" width="5" height="15" fill="rgb(251,62,38)"/><text x="69.00" y="1294.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="66" y="1300" width="5" height="15" fill="rgb(252,194,37)"/><text x="69.00" y="1310.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="66" y="1316" width="5" height="15" fill="rgb(253,225,28)"/><text x="69.00" y="1326.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 3.19%)</title><rect x="42" y="244" width="38" height="15" fill="rgb(229,141,27)"/><text x="45.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.19%)</title><rect x="42" y="260" width="38" height="15" fill="rgb(217,115,29)"/><text x="45.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.19%)</title><rect x="42" y="276" width="38" height="15" fill="rgb(250,149,27)"/><text x="45.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.19%)</title><rect x="42" y="292" width="38" height="15" fill="rgb(241,115,47)"/><text x="45.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.19%)</title><rect x="42" y="308" width="38" height="15" fill="rgb(248,0,46)"/><text x="45.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.19%)</title><rect x="42" y="324" width="38" height="15" fill="rgb(212,87,0)"/><text x="45.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 1.20%)</title><rect x="66" y="340" width="14" height="15" fill="rgb(214,226,10)"/><text x="69.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="66" y="356" width="14" height="15" fill="rgb(228,227,12)"/><text x="69.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="66" y="372" width="14" height="15" fill="rgb(221,22,42)"/><text x="69.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="66" y="388" width="14" height="15" fill="rgb(229,160,20)"/><text x="69.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="66" y="404" width="14" height="15" fill="rgb(217,134,28)"/><text x="69.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="66" y="420" width="14" height="15" fill="rgb(242,48,9)"/><text x="69.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="66" y="436" width="14" height="15" fill="rgb(236,146,6)"/><text x="69.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.20%)</title><rect x="66" y="452" width="14" height="15" fill="rgb(218,49,12)"/><text x="69.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="66" y="468" width="14" height="15" fill="rgb(214,221,39)"/><text x="69.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 1.20%)</title><rect x="66" y="484" width="14" height="15" fill="rgb(238,79,12)"/><text x="69.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="66" y="500" width="14" height="15" fill="rgb(215,196,13)"/><text x="69.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="66" y="516" width="14" height="15" fill="rgb(222,174,29)"/><text x="69.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="66" y="532" width="14" height="15" fill="rgb(249,59,38)"/><text x="69.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.20%)</title><rect x="66" y="548" width="14" height="15" fill="rgb(243,64,15)"/><text x="69.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="66" y="564" width="14" height="15" fill="rgb(254,126,12)"/><text x="69.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (3 samples, 1.20%)</title><rect x="66" y="580" width="14" height="15" fill="rgb(221,135,26)"/><text x="69.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="66" y="596" width="14" height="15" fill="rgb(211,56,27)"/><text x="69.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="66" y="612" width="14" height="15" fill="rgb(230,53,7)"/><text x="69.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="71" y="628" width="9" height="15" fill="rgb(222,24,1)"/><text x="74.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.80%)</title><rect x="71" y="644" width="9" height="15" fill="rgb(232,62,16)"/><text x="74.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="71" y="660" width="9" height="15" fill="rgb(217,33,34)"/><text x="74.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (2 samples, 0.80%)</title><rect x="71" y="676" width="9" height="15" fill="rgb(247,204,10)"/><text x="74.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="71" y="692" width="9" height="15" fill="rgb(226,213,30)"/><text x="74.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="71" y="708" width="9" height="15" fill="rgb(222,38,6)"/><text x="74.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="71" y="724" width="9" height="15" fill="rgb(236,117,22)"/><text x="74.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.80%)</title><rect x="71" y="740" width="9" height="15" fill="rgb(245,20,8)"/><text x="74.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="71" y="756" width="9" height="15" fill="rgb(222,223,5)"/><text x="74.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (2 samples, 0.80%)</title><rect x="71" y="772" width="9" height="15" fill="rgb(221,49,1)"/><text x="74.00" y="782.50"></text></g><g><title>register_check (pycodestyle.py) (2 samples, 0.80%)</title><rect x="71" y="788" width="9" height="15" fill="rgb(232,50,19)"/><text x="74.00" y="798.50"></text></g><g><title>_get_parameters (pycodestyle.py) (2 samples, 0.80%)</title><rect x="71" y="804" width="9" height="15" fill="rgb(212,16,35)"/><text x="74.00" y="814.50"></text></g><g><title>signature (inspect.py) (2 samples, 0.80%)</title><rect x="71" y="820" width="9" height="15" fill="rgb(232,75,17)"/><text x="74.00" y="830.50"></text></g><g><title>from_callable (inspect.py) (2 samples, 0.80%)</title><rect x="71" y="836" width="9" height="15" fill="rgb(247,104,6)"/><text x="74.00" y="846.50"></text></g><g><title>_signature_from_callable (inspect.py) (2 samples, 0.80%)</title><rect x="71" y="852" width="9" height="15" fill="rgb(217,88,13)"/><text x="74.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 6.37%)</title><rect x="10" y="68" width="75" height="15" fill="rgb(244,71,19)"/><text x="13.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 6.37%)</title><rect x="10" y="84" width="75" height="15" fill="rgb(207,27,40)"/><text x="13.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 6.37%)</title><rect x="10" y="100" width="75" height="15" fill="rgb(242,39,30)"/><text x="13.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 6.37%)</title><rect x="10" y="116" width="75" height="15" fill="rgb(205,26,19)"/><text x="13.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 6.37%)</title><rect x="10" y="132" width="75" height="15" fill="rgb(241,229,30)"/><text x="13.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py) (16 samples, 6.37%)</title><rect x="10" y="148" width="75" height="15" fill="rgb(214,186,32)"/><text x="13.00" y="158.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 6.37%)</title><rect x="10" y="164" width="75" height="15" fill="rgb(212,23,31)"/><text x="13.00" y="174.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 6.37%)</title><rect x="10" y="180" width="75" height="15" fill="rgb(243,167,8)"/><text x="13.00" y="190.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.59%)</title><rect x="42" y="196" width="43" height="15" fill="rgb(225,228,51)"/><text x="45.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 3.59%)</title><rect x="42" y="212" width="43" height="15" fill="rgb(222,11,48)"/><text x="45.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.59%)</title><rect x="42" y="228" width="43" height="15" fill="rgb(230,191,43)"/><text x="45.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.40%)</title><rect x="80" y="244" width="5" height="15" fill="rgb(226,176,6)"/><text x="83.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="260" width="5" height="15" fill="rgb(215,22,20)"/><text x="83.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="276" width="5" height="15" fill="rgb(208,216,16)"/><text x="83.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="292" width="5" height="15" fill="rgb(212,73,9)"/><text x="83.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="308" width="5" height="15" fill="rgb(236,35,32)"/><text x="83.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="324" width="5" height="15" fill="rgb(230,49,0)"/><text x="83.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="80" y="340" width="5" height="15" fill="rgb(207,128,1)"/><text x="83.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="356" width="5" height="15" fill="rgb(207,63,15)"/><text x="83.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.40%)</title><rect x="80" y="372" width="5" height="15" fill="rgb(219,215,16)"/><text x="83.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="388" width="5" height="15" fill="rgb(210,124,16)"/><text x="83.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="404" width="5" height="15" fill="rgb(209,139,52)"/><text x="83.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="420" width="5" height="15" fill="rgb(220,119,29)"/><text x="83.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="436" width="5" height="15" fill="rgb(220,5,54)"/><text x="83.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="452" width="5" height="15" fill="rgb(235,66,5)"/><text x="83.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="80" y="468" width="5" height="15" fill="rgb(208,66,43)"/><text x="83.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="484" width="5" height="15" fill="rgb(221,36,43)"/><text x="83.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (1 samples, 0.40%)</title><rect x="80" y="500" width="5" height="15" fill="rgb(211,133,20)"/><text x="83.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="516" width="5" height="15" fill="rgb(227,49,42)"/><text x="83.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="532" width="5" height="15" fill="rgb(209,168,54)"/><text x="83.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="548" width="5" height="15" fill="rgb(227,127,5)"/><text x="83.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="564" width="5" height="15" fill="rgb(232,212,44)"/><text x="83.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="580" width="5" height="15" fill="rgb(244,87,7)"/><text x="83.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="80" y="596" width="5" height="15" fill="rgb(254,169,22)"/><text x="83.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="612" width="5" height="15" fill="rgb(253,45,19)"/><text x="83.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (1 samples, 0.40%)</title><rect x="80" y="628" width="5" height="15" fill="rgb(227,147,49)"/><text x="83.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="644" width="5" height="15" fill="rgb(214,113,38)"/><text x="83.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="660" width="5" height="15" fill="rgb(234,169,53)"/><text x="83.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="676" width="5" height="15" fill="rgb(222,198,19)"/><text x="83.00" y="686.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="692" width="5" height="15" fill="rgb(246,91,3)"/><text x="83.00" y="702.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="80" y="708" width="5" height="15" fill="rgb(224,39,51)"/><text x="83.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="724" width="5" height="15" fill="rgb(225,7,45)"/><text x="83.00" y="734.50"></text></g><g><title>PyInit__multiarray_umath (multiarraymodule.c) (1 samples, 0.40%)</title><rect x="80" y="740" width="5" height="15" fill="rgb(251,184,7)"/><text x="83.00" y="750.50"></text></g><g><title>numpy_pydatetime_import (datetime.c) (1 samples, 0.40%)</title><rect x="80" y="756" width="5" height="15" fill="rgb(237,157,15)"/><text x="83.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="772" width="5" height="15" fill="rgb(210,219,29)"/><text x="83.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="788" width="5" height="15" fill="rgb(209,169,14)"/><text x="83.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="804" width="5" height="15" fill="rgb(215,226,49)"/><text x="83.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="80" y="820" width="5" height="15" fill="rgb(254,141,19)"/><text x="83.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="80" y="836" width="5" height="15" fill="rgb(246,93,26)"/><text x="83.00" y="846.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.20%)</title><rect x="113" y="180" width="14" height="15" fill="rgb(210,110,1)"/><text x="116.00" y="190.50"></text></g><g><title>0x7f546d552ff9 (?) (1 samples, 0.40%)</title><rect x="155" y="212" width="5" height="15" fill="rgb(229,6,30)"/><text x="158.00" y="222.50"></text></g><g><title>0x7f546d54def6 (?) (1 samples, 0.40%)</title><rect x="155" y="228" width="5" height="15" fill="rgb(236,102,21)"/><text x="158.00" y="238.50"></text></g><g><title>0x7f546d542962 (?) (1 samples, 0.40%)</title><rect x="155" y="244" width="5" height="15" fill="rgb(229,32,19)"/><text x="158.00" y="254.50"></text></g><g><title>0x7f546d5767a7 (?) (1 samples, 0.40%)</title><rect x="155" y="260" width="5" height="15" fill="rgb(233,62,53)"/><text x="158.00" y="270.50"></text></g><g><title>0x7f546d576379 (?) (1 samples, 0.40%)</title><rect x="155" y="276" width="5" height="15" fill="rgb(244,130,13)"/><text x="158.00" y="286.50"></text></g><g><title>0x7f546d9d48b8 (?) (1 samples, 0.40%)</title><rect x="155" y="292" width="5" height="15" fill="rgb(212,118,0)"/><text x="158.00" y="302.50"></text></g><g><title>0x7f546d9d2c7f (?) (1 samples, 0.40%)</title><rect x="155" y="308" width="5" height="15" fill="rgb(241,198,33)"/><text x="158.00" y="318.50"></text></g><g><title>0x7f546d9e52e5 (?) (1 samples, 0.40%)</title><rect x="155" y="324" width="5" height="15" fill="rgb(225,48,8)"/><text x="158.00" y="334.50"></text></g><g><title>0x7f546d98d73d (?) (1 samples, 0.40%)</title><rect x="155" y="340" width="5" height="15" fill="rgb(227,167,25)"/><text x="158.00" y="350.50"></text></g><g><title>0x7f546d984620 (?) (1 samples, 0.40%)</title><rect x="155" y="356" width="5" height="15" fill="rgb(241,22,5)"/><text x="158.00" y="366.50"></text></g><g><title>0x7f546d9d0e0a (?) (1 samples, 0.40%)</title><rect x="155" y="372" width="5" height="15" fill="rgb(238,123,38)"/><text x="158.00" y="382.50"></text></g><g><title>0x7f546d9b31f7 (?) (1 samples, 0.40%)</title><rect x="155" y="388" width="5" height="15" fill="rgb(243,75,33)"/><text x="158.00" y="398.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.80%)</title><rect x="160" y="212" width="9" height="15" fill="rgb(208,184,35)"/><text x="163.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="165" y="228" width="4" height="15" fill="rgb(253,23,48)"/><text x="168.00" y="238.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="165" y="244" width="4" height="15" fill="rgb(232,70,42)"/><text x="168.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.40%)</title><rect x="165" y="260" width="4" height="15" fill="rgb(241,95,9)"/><text x="168.00" y="270.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.40%)</title><rect x="169" y="212" width="5" height="15" fill="rgb(221,70,36)"/><text x="172.00" y="222.50"></text></g><g><title>0x7ffc72bb2bb2 ([vdso]) (1 samples, 0.40%)</title><rect x="169" y="228" width="5" height="15" fill="rgb(208,49,13)"/><text x="172.00" y="238.50"></text></g><g><title>0x7ffc72bb2949 ([vdso]) (1 samples, 0.40%)</title><rect x="169" y="244" width="5" height="15" fill="rgb(227,87,16)"/><text x="172.00" y="254.50"></text></g><g><title>0x7f54af52291c (libc-2.29.so) (1 samples, 0.40%)</title><rect x="179" y="292" width="4" height="15" fill="rgb(221,28,1)"/><text x="182.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="183" y="292" width="5" height="15" fill="rgb(252,89,8)"/><text x="186.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="183" y="308" width="5" height="15" fill="rgb(244,27,8)"/><text x="186.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="183" y="324" width="5" height="15" fill="rgb(235,143,17)"/><text x="186.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="188" y="292" width="5" height="15" fill="rgb(235,176,16)"/><text x="191.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.40%)</title><rect x="188" y="308" width="5" height="15" fill="rgb(245,176,14)"/><text x="191.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="193" y="292" width="9" height="15" fill="rgb(236,195,30)"/><text x="196.00" y="302.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="202" y="356" width="5" height="15" fill="rgb(219,141,5)"/><text x="205.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="202" y="372" width="5" height="15" fill="rgb(238,43,24)"/><text x="205.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="202" y="388" width="5" height="15" fill="rgb(242,199,26)"/><text x="205.00" y="398.50"></text></g><g><title>0x7f54af5316a2 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="202" y="404" width="5" height="15" fill="rgb(240,113,34)"/><text x="205.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="202" y="340" width="10" height="15" fill="rgb(209,76,19)"/><text x="205.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="207" y="356" width="5" height="15" fill="rgb(231,89,19)"/><text x="210.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="212" y="340" width="4" height="15" fill="rgb(217,178,37)"/><text x="215.00" y="350.50"></text></g><g><title>0x7f546d519c40 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="212" y="356" width="4" height="15" fill="rgb(249,222,49)"/><text x="215.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="216" y="356" width="10" height="15" fill="rgb(238,160,1)"/><text x="219.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="216" y="372" width="10" height="15" fill="rgb(232,65,36)"/><text x="219.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="216" y="388" width="10" height="15" fill="rgb(209,165,45)"/><text x="219.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="216" y="404" width="10" height="15" fill="rgb(232,165,45)"/><text x="219.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="221" y="420" width="5" height="15" fill="rgb(237,212,7)"/><text x="224.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="221" y="436" width="5" height="15" fill="rgb(249,78,18)"/><text x="224.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="221" y="452" width="5" height="15" fill="rgb(216,125,43)"/><text x="224.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="221" y="468" width="5" height="15" fill="rgb(223,221,32)"/><text x="224.00" y="478.50"></text></g><g><title>onnxruntime::TensorShape::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="221" y="484" width="5" height="15" fill="rgb(251,137,26)"/><text x="224.00" y="494.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 4.78%)</title><rect x="174" y="260" width="56" height="15" fill="rgb(234,73,20)"/><text x="177.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 4.78%)</title><rect x="174" y="276" width="56" height="15" fill="rgb(207,214,42)"/><text x="177.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.39%)</title><rect x="202" y="292" width="28" height="15" fill="rgb(209,214,39)"/><text x="205.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.39%)</title><rect x="202" y="308" width="28" height="15" fill="rgb(241,223,33)"/><text x="205.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.39%)</title><rect x="202" y="324" width="28" height="15" fill="rgb(226,148,36)"/><text x="205.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.20%)</title><rect x="216" y="340" width="14" height="15" fill="rgb(219,77,17)"/><text x="219.00" y="350.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="226" y="356" width="4" height="15" fill="rgb(230,134,27)"/><text x="229.00" y="366.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="230" y="260" width="5" height="15" fill="rgb(231,223,14)"/><text x="233.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.59%)</title><rect x="235" y="260" width="19" height="15" fill="rgb(232,34,29)"/><text x="238.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="249" y="276" width="5" height="15" fill="rgb(229,197,30)"/><text x="252.00" y="286.50"></text></g><g><title>0x7f546d519930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="249" y="292" width="5" height="15" fill="rgb(211,210,36)"/><text x="252.00" y="302.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="254" y="260" width="9" height="15" fill="rgb(209,221,36)"/><text x="257.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.80%)</title><rect x="254" y="276" width="9" height="15" fill="rgb(218,119,17)"/><text x="257.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.80%)</title><rect x="254" y="292" width="9" height="15" fill="rgb(216,180,45)"/><text x="257.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="259" y="308" width="4" height="15" fill="rgb(226,207,31)"/><text x="262.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 7.97%)</title><rect x="174" y="244" width="94" height="15" fill="rgb(221,148,15)"/><text x="177.00" y="254.50">onnxruntime..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="263" y="260" width="5" height="15" fill="rgb(205,34,41)"/><text x="266.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="263" y="276" width="5" height="15" fill="rgb(225,80,0)"/><text x="266.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="263" y="292" width="5" height="15" fill="rgb(211,46,54)"/><text x="266.00" y="302.50"></text></g><g><title>run (onnxruntime/capi/session.py) (29 samples, 11.55%)</title><rect x="136" y="196" width="137" height="15" fill="rgb(218,117,21)"/><text x="139.00" y="206.50">run (onnxruntime/..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 8.37%)</title><rect x="174" y="212" width="99" height="15" fill="rgb(253,98,46)"/><text x="177.00" y="222.50">pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 8.37%)</title><rect x="174" y="228" width="99" height="15" fill="rgb(251,112,23)"/><text x="177.00" y="238.50">void pybind..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="268" y="244" width="5" height="15" fill="rgb(207,22,18)"/><text x="271.00" y="254.50"></text></g><g><title>profile_ort (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (41 samples, 16.33%)</title><rect x="85" y="68" width="192" height="15" fill="rgb(231,174,37)"/><text x="88.00" y="78.50">profile_ort (bench_Linear..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (41 samples, 16.33%)</title><rect x="85" y="84" width="192" height="15" fill="rgb(245,107,7)"/><text x="88.00" y="94.50">setup_profile (bench_Line..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (41 samples, 16.33%)</title><rect x="85" y="100" width="192" height="15" fill="rgb(246,59,16)"/><text x="88.00" y="110.50">profile (bench_LinearRegr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (40 samples, 15.94%)</title><rect x="89" y="116" width="188" height="15" fill="rgb(243,132,50)"/><text x="92.00" y="126.50">time_predict (mlprodict/..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (40 samples, 15.94%)</title><rect x="89" y="132" width="188" height="15" fill="rgb(234,80,32)"/><text x="92.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (39 samples, 15.54%)</title><rect x="94" y="148" width="183" height="15" fill="rgb(245,194,49)"/><text x="97.00" y="158.50">run (mlprodict/onnxrt/o..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (37 samples, 14.74%)</title><rect x="104" y="164" width="173" height="15" fill="rgb(240,17,24)"/><text x="107.00" y="174.50">_run_whole_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (32 samples, 12.75%)</title><rect x="127" y="180" width="150" height="15" fill="rgb(243,14,5)"/><text x="130.00" y="190.50">run (mlprodict/onnx..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.40%)</title><rect x="273" y="196" width="4" height="15" fill="rgb(221,142,36)"/><text x="276.00" y="206.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.40%)</title><rect x="277" y="132" width="5" height="15" fill="rgb(214,119,25)"/><text x="280.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.80%)</title><rect x="277" y="116" width="10" height="15" fill="rgb(212,42,36)"/><text x="280.00" y="126.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.40%)</title><rect x="282" y="132" width="5" height="15" fill="rgb(250,177,21)"/><text x="285.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.40%)</title><rect x="282" y="148" width="5" height="15" fill="rgb(225,30,46)"/><text x="285.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.80%)</title><rect x="343" y="180" width="10" height="15" fill="rgb(253,106,47)"/><text x="346.00" y="190.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="451" y="340" width="5" height="15" fill="rgb(206,15,18)"/><text x="454.00" y="350.50"></text></g><g><title>_bad_strides (cblasfuncs.c) (1 samples, 0.40%)</title><rect x="456" y="340" width="5" height="15" fill="rgb(248,74,51)"/><text x="459.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (9 samples, 3.59%)</title><rect x="423" y="244" width="43" height="15" fill="rgb(225,85,24)"/><text x="426.00" y="254.50">nump..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (5 samples, 1.99%)</title><rect x="442" y="260" width="24" height="15" fill="rgb(240,49,13)"/><text x="445.00" y="270.50">d..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.59%)</title><rect x="447" y="276" width="19" height="15" fill="rgb(235,210,8)"/><text x="450.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (4 samples, 1.59%)</title><rect x="447" y="292" width="19" height="15" fill="rgb(207,17,52)"/><text x="450.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (3 samples, 1.20%)</title><rect x="451" y="308" width="15" height="15" fill="rgb(251,174,38)"/><text x="454.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (3 samples, 1.20%)</title><rect x="451" y="324" width="15" height="15" fill="rgb(215,25,13)"/><text x="454.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.40%)</title><rect x="461" y="340" width="5" height="15" fill="rgb(239,179,31)"/><text x="464.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.40%)</title><rect x="461" y="356" width="5" height="15" fill="rgb(232,118,10)"/><text x="464.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.40%)</title><rect x="461" y="372" width="5" height="15" fill="rgb(253,33,22)"/><text x="464.00" y="382.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.40%)</title><rect x="470" y="276" width="5" height="15" fill="rgb(215,85,41)"/><text x="473.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.40%)</title><rect x="470" y="292" width="5" height="15" fill="rgb(227,151,43)"/><text x="473.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.40%)</title><rect x="475" y="276" width="5" height="15" fill="rgb(235,149,45)"/><text x="478.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.40%)</title><rect x="475" y="292" width="5" height="15" fill="rgb(225,128,5)"/><text x="478.00" y="302.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.40%)</title><rect x="484" y="324" width="5" height="15" fill="rgb(220,76,27)"/><text x="487.00" y="334.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.40%)</title><rect x="489" y="324" width="5" height="15" fill="rgb(215,202,6)"/><text x="492.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.59%)</title><rect x="480" y="308" width="18" height="15" fill="rgb(220,136,20)"/><text x="483.00" y="318.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.40%)</title><rect x="494" y="324" width="4" height="15" fill="rgb(251,81,30)"/><text x="497.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.99%)</title><rect x="480" y="276" width="23" height="15" fill="rgb(242,86,42)"/><text x="483.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.99%)</title><rect x="480" y="292" width="23" height="15" fill="rgb(243,152,53)"/><text x="483.00" y="302.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.40%)</title><rect x="498" y="308" width="5" height="15" fill="rgb(228,30,47)"/><text x="501.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.40%)</title><rect x="498" y="324" width="5" height="15" fill="rgb(217,222,4)"/><text x="501.00" y="334.50"></text></g><g><title>profile_pyrt (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (49 samples, 19.52%)</title><rect x="277" y="68" width="231" height="15" fill="rgb(230,8,44)"/><text x="280.00" y="78.50">profile_pyrt (bench_LinearRegr..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (49 samples, 19.52%)</title><rect x="277" y="84" width="231" height="15" fill="rgb(231,66,2)"/><text x="280.00" y="94.50">setup_profile (bench_LinearReg..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (49 samples, 19.52%)</title><rect x="277" y="100" width="231" height="15" fill="rgb(207,25,16)"/><text x="280.00" y="110.50">profile (bench_LinearRegressio..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (47 samples, 18.73%)</title><rect x="287" y="116" width="221" height="15" fill="rgb(246,6,36)"/><text x="290.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (47 samples, 18.73%)</title><rect x="287" y="132" width="221" height="15" fill="rgb(232,169,35)"/><text x="290.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (46 samples, 18.33%)</title><rect x="292" y="148" width="216" height="15" fill="rgb(229,53,22)"/><text x="295.00" y="158.50">run (mlprodict/onnxrt/onnx_i..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (42 samples, 16.73%)</title><rect x="310" y="164" width="198" height="15" fill="rgb(230,110,37)"/><text x="313.00" y="174.50">_run_sequence_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (33 samples, 13.15%)</title><rect x="353" y="180" width="155" height="15" fill="rgb(208,55,19)"/><text x="356.00" y="190.50">run (mlprodict/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (22 samples, 8.76%)</title><rect x="404" y="196" width="104" height="15" fill="rgb(217,139,48)"/><text x="407.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (20 samples, 7.97%)</title><rect x="414" y="212" width="94" height="15" fill="rgb(253,67,23)"/><text x="417.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py) (19 samples, 7.57%)</title><rect x="419" y="228" width="89" height="15" fill="rgb(225,163,28)"/><text x="422.00" y="238.50">_run (mlpr..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 3.59%)</title><rect x="466" y="244" width="42" height="15" fill="rgb(252,38,51)"/><text x="469.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 3.19%)</title><rect x="470" y="260" width="38" height="15" fill="rgb(211,201,50)"/><text x="473.00" y="270.50">PyU..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.40%)</title><rect x="503" y="276" width="5" height="15" fill="rgb(232,32,53)"/><text x="506.00" y="286.50"></text></g><g><title>_set_out_array (ufunc_object.c) (1 samples, 0.40%)</title><rect x="503" y="292" width="5" height="15" fill="rgb(216,32,0)"/><text x="506.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="513" y="116" width="4" height="15" fill="rgb(221,42,8)"/><text x="516.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.40%)</title><rect x="513" y="132" width="4" height="15" fill="rgb(229,66,16)"/><text x="516.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.40%)</title><rect x="513" y="148" width="4" height="15" fill="rgb(205,89,4)"/><text x="516.00" y="158.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.40%)</title><rect x="545" y="228" width="5" height="15" fill="rgb(243,49,13)"/><text x="548.00" y="238.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.40%)</title><rect x="545" y="244" width="5" height="15" fill="rgb(247,7,51)"/><text x="548.00" y="254.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h) (1 samples, 0.40%)</title><rect x="545" y="260" width="5" height="15" fill="rgb(246,12,31)"/><text x="548.00" y="270.50"></text></g><g><title>PyArray_Transpose (shape.c) (2 samples, 0.80%)</title><rect x="545" y="180" width="10" height="15" fill="rgb(251,161,44)"/><text x="548.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (2 samples, 0.80%)</title><rect x="545" y="196" width="10" height="15" fill="rgb(235,207,18)"/><text x="548.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.80%)</title><rect x="545" y="212" width="10" height="15" fill="rgb(252,207,0)"/><text x="548.00" y="222.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="550" y="228" width="5" height="15" fill="rgb(226,20,49)"/><text x="553.00" y="238.50"></text></g><g><title>0x7f54af538e7a (libc-2.29.so) (1 samples, 0.40%)</title><rect x="569" y="292" width="5" height="15" fill="rgb(242,92,42)"/><text x="572.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (5 samples, 1.99%)</title><rect x="555" y="212" width="23" height="15" fill="rgb(214,46,52)"/><text x="558.00" y="222.50">P..</text></g><g><title>get_array_ufunc_overrides (override.c) (5 samples, 1.99%)</title><rect x="555" y="228" width="23" height="15" fill="rgb(230,50,4)"/><text x="558.00" y="238.50">g..</text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (5 samples, 1.99%)</title><rect x="555" y="244" width="23" height="15" fill="rgb(244,167,0)"/><text x="558.00" y="254.50">P..</text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (5 samples, 1.99%)</title><rect x="555" y="260" width="23" height="15" fill="rgb(229,192,32)"/><text x="558.00" y="270.50">P..</text></g><g><title>maybe_get_attr (get_attr_string.h) (5 samples, 1.99%)</title><rect x="555" y="276" width="23" height="15" fill="rgb(208,44,38)"/><text x="558.00" y="286.50">m..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.40%)</title><rect x="574" y="292" width="4" height="15" fill="rgb(251,127,9)"/><text x="577.00" y="302.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.40%)</title><rect x="578" y="260" width="5" height="15" fill="rgb(249,141,31)"/><text x="581.00" y="270.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.40%)</title><rect x="578" y="276" width="5" height="15" fill="rgb(240,74,45)"/><text x="581.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.80%)</title><rect x="578" y="212" width="10" height="15" fill="rgb(219,8,42)"/><text x="581.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.80%)</title><rect x="578" y="228" width="10" height="15" fill="rgb(212,0,30)"/><text x="581.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.80%)</title><rect x="578" y="244" width="10" height="15" fill="rgb(233,120,44)"/><text x="581.00" y="254.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.40%)</title><rect x="583" y="260" width="5" height="15" fill="rgb(235,3,51)"/><text x="586.00" y="270.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.40%)</title><rect x="583" y="276" width="5" height="15" fill="rgb(251,225,26)"/><text x="586.00" y="286.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.40%)</title><rect x="583" y="292" width="5" height="15" fill="rgb(229,115,53)"/><text x="586.00" y="302.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.40%)</title><rect x="583" y="308" width="5" height="15" fill="rgb(220,63,1)"/><text x="586.00" y="318.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.40%)</title><rect x="583" y="324" width="5" height="15" fill="rgb(223,192,17)"/><text x="586.00" y="334.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.40%)</title><rect x="588" y="228" width="4" height="15" fill="rgb(230,34,40)"/><text x="591.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.40%)</title><rect x="588" y="244" width="4" height="15" fill="rgb(207,61,34)"/><text x="591.00" y="254.50"></text></g><g><title>array_add (number.c) (9 samples, 3.59%)</title><rect x="555" y="180" width="42" height="15" fill="rgb(222,217,51)"/><text x="558.00" y="190.50">arr..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 3.59%)</title><rect x="555" y="196" width="42" height="15" fill="rgb(216,114,33)"/><text x="558.00" y="206.50">ufu..</text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.80%)</title><rect x="588" y="212" width="9" height="15" fill="rgb(237,158,34)"/><text x="591.00" y="222.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.40%)</title><rect x="592" y="228" width="5" height="15" fill="rgb(243,207,45)"/><text x="595.00" y="238.50"></text></g><g><title>__enter__ (warnings.py) (4 samples, 1.59%)</title><rect x="686" y="196" width="19" height="15" fill="rgb(209,209,33)"/><text x="689.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.80%)</title><rect x="705" y="196" width="10" height="15" fill="rgb(238,72,49)"/><text x="708.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.59%)</title><rect x="715" y="212" width="18" height="15" fill="rgb(233,149,43)"/><text x="718.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.40%)</title><rect x="733" y="212" width="5" height="15" fill="rgb(254,20,16)"/><text x="736.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (8 samples, 3.19%)</title><rect x="715" y="196" width="37" height="15" fill="rgb(247,96,23)"/><text x="718.00" y="206.50">_as..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="738" y="212" width="14" height="15" fill="rgb(214,180,3)"/><text x="741.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.80%)</title><rect x="752" y="196" width="10" height="15" fill="rgb(223,128,21)"/><text x="755.00" y="206.50"></text></g><g><title>0x7f54af538b60 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="818" y="212" width="5" height="15" fill="rgb(231,56,27)"/><text x="821.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (18 samples, 7.17%)</title><rect x="762" y="196" width="84" height="15" fill="rgb(226,147,12)"/><text x="765.00" y="206.50">_num_samp..</text></g><g><title>__instancecheck__ (abc.py) (5 samples, 1.99%)</title><rect x="823" y="212" width="23" height="15" fill="rgb(246,39,47)"/><text x="826.00" y="222.50">_..</text></g><g><title>__subclasscheck__ (abc.py) (3 samples, 1.20%)</title><rect x="832" y="228" width="14" height="15" fill="rgb(210,137,18)"/><text x="835.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.80%)</title><rect x="846" y="196" width="10" height="15" fill="rgb(247,101,9)"/><text x="849.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.40%)</title><rect x="851" y="212" width="5" height="15" fill="rgb(248,157,20)"/><text x="854.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.40%)</title><rect x="860" y="212" width="5" height="15" fill="rgb(213,11,31)"/><text x="863.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (12 samples, 4.78%)</title><rect x="856" y="196" width="56" height="15" fill="rgb(222,224,25)"/><text x="859.00" y="206.50">issub..</text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (10 samples, 3.98%)</title><rect x="865" y="212" width="47" height="15" fill="rgb(234,59,22)"/><text x="868.00" y="222.50">issu..</text></g><g><title>check_array (sklearn/utils/validation.py) (78 samples, 31.08%)</title><rect x="597" y="180" width="367" height="15" fill="rgb(216,168,23)"/><text x="600.00" y="190.50">check_array (sklearn/utils/validation.py)</text></g><g><title>simplefilter (warnings.py) (11 samples, 4.38%)</title><rect x="912" y="196" width="52" height="15" fill="rgb(213,113,4)"/><text x="915.00" y="206.50">simpl..</text></g><g><title>_add_filter (warnings.py) (9 samples, 3.59%)</title><rect x="922" y="212" width="42" height="15" fill="rgb(228,135,17)"/><text x="925.00" y="222.50">_ad..</text></g><g><title>unicode_endswith (python3.7) (5 samples, 1.99%)</title><rect x="1025" y="212" width="23" height="15" fill="rgb(226,15,6)"/><text x="1028.00" y="222.50">u..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (20 samples, 7.97%)</title><rect x="964" y="180" width="94" height="15" fill="rgb(218,54,51)"/><text x="967.00" y="190.50">check_is_fi..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (14 samples, 5.58%)</title><rect x="992" y="196" width="66" height="15" fill="rgb(242,199,5)"/><text x="995.00" y="206.50">&lt;listco..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.80%)</title><rect x="1048" y="212" width="10" height="15" fill="rgb(221,30,25)"/><text x="1051.00" y="222.50"></text></g><g><title>cblas_ddot (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.40%)</title><rect x="1067" y="276" width="5" height="15" fill="rgb(231,225,21)"/><text x="1070.00" y="286.50"></text></g><g><title>DOUBLE_dot (arraytypes.c.src) (2 samples, 0.80%)</title><rect x="1067" y="260" width="10" height="15" fill="rgb(207,61,28)"/><text x="1070.00" y="270.50"></text></g><g><title>ddot_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.40%)</title><rect x="1072" y="276" width="5" height="15" fill="rgb(250,108,6)"/><text x="1075.00" y="286.50"></text></g><g><title>dot_compute (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.40%)</title><rect x="1072" y="292" width="5" height="15" fill="rgb(216,132,54)"/><text x="1075.00" y="302.50"></text></g><g><title>ddot_kernel_8 (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.40%)</title><rect x="1072" y="308" width="5" height="15" fill="rgb(231,56,38)"/><text x="1075.00" y="318.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (3 samples, 1.20%)</title><rect x="1067" y="244" width="14" height="15" fill="rgb(249,95,45)"/><text x="1070.00" y="254.50"></text></g><g><title>is_blasable2d (matmul.c.src) (1 samples, 0.40%)</title><rect x="1077" y="260" width="4" height="15" fill="rgb(253,215,40)"/><text x="1080.00" y="270.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.40%)</title><rect x="1091" y="292" width="4" height="15" fill="rgb(242,75,29)"/><text x="1094.00" y="302.50"></text></g><g><title>broadcast_strides (array_assign.c) (1 samples, 0.40%)</title><rect x="1095" y="292" width="5" height="15" fill="rgb(211,72,19)"/><text x="1098.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="1105" y="308" width="5" height="15" fill="rgb(249,223,46)"/><text x="1108.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (5 samples, 1.99%)</title><rect x="1091" y="276" width="23" height="15" fill="rgb(207,215,52)"/><text x="1094.00" y="286.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 1.20%)</title><rect x="1100" y="292" width="14" height="15" fill="rgb(241,125,49)"/><text x="1103.00" y="302.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.40%)</title><rect x="1110" y="308" width="4" height="15" fill="rgb(205,28,2)"/><text x="1113.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1114" y="276" width="5" height="15" fill="rgb(246,48,4)"/><text x="1117.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (7 samples, 2.79%)</title><rect x="1091" y="260" width="33" height="15" fill="rgb(217,191,4)"/><text x="1094.00" y="270.50">np..</text></g><g><title>npyiter_replace_axisdata (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1119" y="276" width="5" height="15" fill="rgb(224,66,0)"/><text x="1122.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (11 samples, 4.38%)</title><rect x="1081" y="244" width="52" height="15" fill="rgb(248,219,41)"/><text x="1084.00" y="254.50">NpyIt..</text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.80%)</title><rect x="1124" y="260" width="9" height="15" fill="rgb(243,103,41)"/><text x="1127.00" y="270.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.40%)</title><rect x="1133" y="276" width="5" height="15" fill="rgb(235,46,12)"/><text x="1136.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (3 samples, 1.20%)</title><rect x="1133" y="244" width="14" height="15" fill="rgb(208,63,0)"/><text x="1136.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 1.20%)</title><rect x="1133" y="260" width="14" height="15" fill="rgb(254,102,3)"/><text x="1136.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.80%)</title><rect x="1138" y="276" width="9" height="15" fill="rgb(220,200,5)"/><text x="1141.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.80%)</title><rect x="1138" y="292" width="9" height="15" fill="rgb(230,139,4)"/><text x="1141.00" y="302.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c) (1 samples, 0.40%)</title><rect x="1147" y="244" width="5" height="15" fill="rgb(245,80,5)"/><text x="1150.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c) (2 samples, 0.80%)</title><rect x="1152" y="244" width="9" height="15" fill="rgb(225,55,46)"/><text x="1155.00" y="254.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (1 samples, 0.40%)</title><rect x="1157" y="260" width="4" height="15" fill="rgb(253,30,24)"/><text x="1160.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.40%)</title><rect x="1161" y="244" width="5" height="15" fill="rgb(217,213,12)"/><text x="1164.00" y="254.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.40%)</title><rect x="1161" y="260" width="5" height="15" fill="rgb(249,30,38)"/><text x="1164.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.40%)</title><rect x="1161" y="276" width="5" height="15" fill="rgb(243,125,10)"/><text x="1164.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (23 samples, 9.16%)</title><rect x="1063" y="212" width="108" height="15" fill="rgb(212,120,46)"/><text x="1066.00" y="222.50">PyUFunc_Gener..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (23 samples, 9.16%)</title><rect x="1063" y="228" width="108" height="15" fill="rgb(215,0,10)"/><text x="1066.00" y="238.50">PyUFunc_Gener..</text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1166" y="244" width="5" height="15" fill="rgb(242,134,49)"/><text x="1169.00" y="254.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (25 samples, 9.96%)</title><rect x="1058" y="180" width="117" height="15" fill="rgb(232,63,45)"/><text x="1061.00" y="190.50">safe_sparse_do..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (24 samples, 9.56%)</title><rect x="1063" y="196" width="112" height="15" fill="rgb(214,59,14)"/><text x="1066.00" y="206.50">ufunc_generic..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1171" y="212" width="4" height="15" fill="rgb(222,51,48)"/><text x="1174.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (140 samples, 55.78%)</title><rect x="522" y="132" width="658" height="15" fill="rgb(219,67,53)"/><text x="525.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/linear_model/_base.py) (140 samples, 55.78%)</title><rect x="522" y="148" width="658" height="15" fill="rgb(246,35,25)"/><text x="525.00" y="158.50">predict (sklearn/linear_model/_base.py)</text></g><g><title>_decision_function (sklearn/linear_model/_base.py) (140 samples, 55.78%)</title><rect x="522" y="164" width="658" height="15" fill="rgb(232,203,51)"/><text x="525.00" y="174.50">_decision_function (sklearn/linear_model/_base.py)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.40%)</title><rect x="1175" y="180" width="5" height="15" fill="rgb(207,145,54)"/><text x="1178.00" y="190.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.40%)</title><rect x="1180" y="132" width="5" height="15" fill="rgb(210,184,51)"/><text x="1183.00" y="142.50"></text></g><g><title>all (251 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(253,105,40)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (251 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(227,80,34)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_m_reg_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (145 samples, 57.77%)</title><rect x="508" y="68" width="682" height="15" fill="rgb(251,1,26)"/><text x="511.00" y="78.50">profile_skl (bench_LinearRegression_default_m_reg_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (145 samples, 57.77%)</title><rect x="508" y="84" width="682" height="15" fill="rgb(229,84,41)"/><text x="511.00" y="94.50">setup_profile (bench_LinearRegression_default_m_reg_1_50_12_float_.py)</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (145 samples, 57.77%)</title><rect x="508" y="100" width="682" height="15" fill="rgb(228,111,31)"/><text x="511.00" y="110.50">profile (bench_LinearRegression_default_m_reg_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (143 samples, 56.97%)</title><rect x="517" y="116" width="673" height="15" fill="rgb(247,191,42)"/><text x="520.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.40%)</title><rect x="1185" y="132" width="5" height="15" fill="rgb(229,205,27)"/><text x="1188.00" y="142.50"></text></g></g></svg>