<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1798" onload="init(evt)" viewBox="0 0 1200 1798" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1798" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1781.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1781.00"> </text><g id="frames"><g><title>0x7f1873b85b35 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="10" y="52" width="4" height="15" fill="rgb(235,191,46)"/><text x="13.00" y="62.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.69%)</title><rect x="14" y="868" width="8" height="15" fill="rgb(210,19,26)"/><text x="17.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.69%)</title><rect x="14" y="884" width="8" height="15" fill="rgb(231,216,53)"/><text x="17.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.69%)</title><rect x="14" y="900" width="8" height="15" fill="rgb(231,10,7)"/><text x="17.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.69%)</title><rect x="14" y="916" width="8" height="15" fill="rgb(221,20,25)"/><text x="17.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="14" y="932" width="8" height="15" fill="rgb(219,26,20)"/><text x="17.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="18" y="948" width="4" height="15" fill="rgb(233,177,4)"/><text x="21.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="18" y="964" width="4" height="15" fill="rgb(247,186,23)"/><text x="21.00" y="974.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 1.03%)</title><rect x="14" y="836" width="12" height="15" fill="rgb(247,58,22)"/><text x="17.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 1.03%)</title><rect x="14" y="852" width="12" height="15" fill="rgb(241,218,52)"/><text x="17.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="22" y="868" width="4" height="15" fill="rgb(208,69,1)"/><text x="25.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="22" y="884" width="4" height="15" fill="rgb(226,128,1)"/><text x="25.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="22" y="900" width="4" height="15" fill="rgb(230,138,49)"/><text x="25.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="22" y="916" width="4" height="15" fill="rgb(206,80,42)"/><text x="25.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="22" y="932" width="4" height="15" fill="rgb(206,199,4)"/><text x="25.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.34%)</title><rect x="22" y="948" width="4" height="15" fill="rgb(235,31,11)"/><text x="25.00" y="958.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.37%)</title><rect x="14" y="292" width="16" height="15" fill="rgb(211,85,27)"/><text x="17.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="308" width="16" height="15" fill="rgb(220,198,29)"/><text x="17.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="324" width="16" height="15" fill="rgb(252,189,46)"/><text x="17.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="340" width="16" height="15" fill="rgb(226,37,37)"/><text x="17.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.37%)</title><rect x="14" y="356" width="16" height="15" fill="rgb(252,58,23)"/><text x="17.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="372" width="16" height="15" fill="rgb(224,224,52)"/><text x="17.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.37%)</title><rect x="14" y="388" width="16" height="15" fill="rgb(251,45,10)"/><text x="17.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="404" width="16" height="15" fill="rgb(230,188,48)"/><text x="17.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="420" width="16" height="15" fill="rgb(240,84,45)"/><text x="17.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="436" width="16" height="15" fill="rgb(226,147,10)"/><text x="17.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.37%)</title><rect x="14" y="452" width="16" height="15" fill="rgb(232,225,26)"/><text x="17.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="468" width="16" height="15" fill="rgb(214,217,29)"/><text x="17.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.37%)</title><rect x="14" y="484" width="16" height="15" fill="rgb(227,59,0)"/><text x="17.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="500" width="16" height="15" fill="rgb(218,127,31)"/><text x="17.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="516" width="16" height="15" fill="rgb(240,103,1)"/><text x="17.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="532" width="16" height="15" fill="rgb(228,212,30)"/><text x="17.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.37%)</title><rect x="14" y="548" width="16" height="15" fill="rgb(243,228,35)"/><text x="17.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="564" width="16" height="15" fill="rgb(250,183,35)"/><text x="17.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.37%)</title><rect x="14" y="580" width="16" height="15" fill="rgb(216,221,24)"/><text x="17.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="596" width="16" height="15" fill="rgb(218,49,47)"/><text x="17.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="612" width="16" height="15" fill="rgb(207,53,20)"/><text x="17.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="628" width="16" height="15" fill="rgb(233,153,25)"/><text x="17.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="644" width="16" height="15" fill="rgb(219,158,13)"/><text x="17.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="660" width="16" height="15" fill="rgb(205,223,46)"/><text x="17.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="676" width="16" height="15" fill="rgb(220,109,37)"/><text x="17.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.37%)</title><rect x="14" y="692" width="16" height="15" fill="rgb(246,145,31)"/><text x="17.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="708" width="16" height="15" fill="rgb(241,51,25)"/><text x="17.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.37%)</title><rect x="14" y="724" width="16" height="15" fill="rgb(249,105,3)"/><text x="17.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="740" width="16" height="15" fill="rgb(208,143,49)"/><text x="17.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="756" width="16" height="15" fill="rgb(221,152,35)"/><text x="17.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="772" width="16" height="15" fill="rgb(214,227,3)"/><text x="17.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.37%)</title><rect x="14" y="788" width="16" height="15" fill="rgb(233,26,3)"/><text x="17.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="14" y="804" width="16" height="15" fill="rgb(232,91,0)"/><text x="17.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.37%)</title><rect x="14" y="820" width="16" height="15" fill="rgb(229,169,27)"/><text x="17.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="26" y="836" width="4" height="15" fill="rgb(234,28,24)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="26" y="852" width="4" height="15" fill="rgb(236,109,53)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="26" y="868" width="4" height="15" fill="rgb(232,116,50)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="26" y="884" width="4" height="15" fill="rgb(246,210,3)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="26" y="900" width="4" height="15" fill="rgb(245,143,45)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.34%)</title><rect x="26" y="916" width="4" height="15" fill="rgb(225,201,33)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="26" y="932" width="4" height="15" fill="rgb(239,136,29)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="26" y="948" width="4" height="15" fill="rgb(209,66,5)"/><text x="29.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="26" y="964" width="4" height="15" fill="rgb(207,175,18)"/><text x="29.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="26" y="980" width="4" height="15" fill="rgb(209,25,53)"/><text x="29.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.34%)</title><rect x="26" y="996" width="4" height="15" fill="rgb(229,28,5)"/><text x="29.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="26" y="1012" width="4" height="15" fill="rgb(232,163,16)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="26" y="1028" width="4" height="15" fill="rgb(224,23,53)"/><text x="29.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="26" y="1044" width="4" height="15" fill="rgb(217,54,14)"/><text x="29.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="26" y="1060" width="4" height="15" fill="rgb(245,160,52)"/><text x="29.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="26" y="1076" width="4" height="15" fill="rgb(249,228,26)"/><text x="29.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.34%)</title><rect x="26" y="1092" width="4" height="15" fill="rgb(208,138,31)"/><text x="29.00" y="1102.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.34%)</title><rect x="26" y="1108" width="4" height="15" fill="rgb(249,12,23)"/><text x="29.00" y="1118.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.34%)</title><rect x="26" y="1124" width="4" height="15" fill="rgb(225,51,32)"/><text x="29.00" y="1134.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.34%)</title><rect x="26" y="1140" width="4" height="15" fill="rgb(243,155,21)"/><text x="29.00" y="1150.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.34%)</title><rect x="26" y="1156" width="4" height="15" fill="rgb(244,57,22)"/><text x="29.00" y="1166.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.34%)</title><rect x="26" y="1172" width="4" height="15" fill="rgb(242,41,13)"/><text x="29.00" y="1182.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.34%)</title><rect x="26" y="1188" width="4" height="15" fill="rgb(212,172,4)"/><text x="29.00" y="1198.50"></text></g><g><title>copy (copy.py) (1 samples, 0.34%)</title><rect x="26" y="1204" width="4" height="15" fill="rgb(229,107,26)"/><text x="29.00" y="1214.50"></text></g><g><title>_reconstruct (copy.py) (1 samples, 0.34%)</title><rect x="26" y="1220" width="4" height="15" fill="rgb(236,140,6)"/><text x="29.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1204" width="4" height="15" fill="rgb(216,53,50)"/><text x="33.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.34%)</title><rect x="30" y="1220" width="4" height="15" fill="rgb(206,26,37)"/><text x="33.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1236" width="4" height="15" fill="rgb(253,176,13)"/><text x="33.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1252" width="4" height="15" fill="rgb(221,153,43)"/><text x="33.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1268" width="4" height="15" fill="rgb(217,174,39)"/><text x="33.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="30" y="1284" width="4" height="15" fill="rgb(226,104,42)"/><text x="33.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1300" width="4" height="15" fill="rgb(245,200,11)"/><text x="33.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py) (1 samples, 0.34%)</title><rect x="30" y="1316" width="4" height="15" fill="rgb(225,67,30)"/><text x="33.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1332" width="4" height="15" fill="rgb(211,74,42)"/><text x="33.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1348" width="4" height="15" fill="rgb(209,127,39)"/><text x="33.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1364" width="4" height="15" fill="rgb(217,199,43)"/><text x="33.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="30" y="1380" width="4" height="15" fill="rgb(226,53,0)"/><text x="33.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1396" width="4" height="15" fill="rgb(229,223,46)"/><text x="33.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py) (1 samples, 0.34%)</title><rect x="30" y="1412" width="4" height="15" fill="rgb(221,71,41)"/><text x="33.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1428" width="4" height="15" fill="rgb(250,187,6)"/><text x="33.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1444" width="4" height="15" fill="rgb(237,225,0)"/><text x="33.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1460" width="4" height="15" fill="rgb(229,119,51)"/><text x="33.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="30" y="1476" width="4" height="15" fill="rgb(228,117,11)"/><text x="33.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1492" width="4" height="15" fill="rgb(253,121,20)"/><text x="33.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py) (1 samples, 0.34%)</title><rect x="30" y="1508" width="4" height="15" fill="rgb(240,110,51)"/><text x="33.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1524" width="4" height="15" fill="rgb(236,168,0)"/><text x="33.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1540" width="4" height="15" fill="rgb(244,62,10)"/><text x="33.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1556" width="4" height="15" fill="rgb(238,128,13)"/><text x="33.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="30" y="1572" width="4" height="15" fill="rgb(244,94,37)"/><text x="33.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1588" width="4" height="15" fill="rgb(242,144,49)"/><text x="33.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/isolve/__init__.py) (1 samples, 0.34%)</title><rect x="30" y="1604" width="4" height="15" fill="rgb(234,77,47)"/><text x="33.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1620" width="4" height="15" fill="rgb(247,62,11)"/><text x="33.00" y="1630.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1636" width="4" height="15" fill="rgb(209,120,32)"/><text x="33.00" y="1646.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1652" width="4" height="15" fill="rgb(216,66,39)"/><text x="33.00" y="1662.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="30" y="1668" width="4" height="15" fill="rgb(219,223,34)"/><text x="33.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1684" width="4" height="15" fill="rgb(206,196,33)"/><text x="33.00" y="1694.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/isolve/iterative.py) (1 samples, 0.34%)</title><rect x="30" y="1700" width="4" height="15" fill="rgb(211,18,0)"/><text x="33.00" y="1710.50"></text></g><g><title>decorator (scipy/_lib/_threadsafety.py) (1 samples, 0.34%)</title><rect x="30" y="1716" width="4" height="15" fill="rgb(245,70,43)"/><text x="33.00" y="1726.50"></text></g><g><title>decorate (scipy/_lib/_threadsafety.py) (1 samples, 0.34%)</title><rect x="30" y="1732" width="4" height="15" fill="rgb(206,177,40)"/><text x="33.00" y="1742.50"></text></g><g><title>decorate (scipy/_lib/decorator.py) (1 samples, 0.34%)</title><rect x="30" y="1748" width="4" height="15" fill="rgb(231,143,51)"/><text x="33.00" y="1758.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="500" width="8" height="15" fill="rgb(254,217,6)"/><text x="33.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="516" width="8" height="15" fill="rgb(220,129,18)"/><text x="33.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="532" width="8" height="15" fill="rgb(232,138,42)"/><text x="33.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="30" y="548" width="8" height="15" fill="rgb(252,145,2)"/><text x="33.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="564" width="8" height="15" fill="rgb(207,18,10)"/><text x="33.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.69%)</title><rect x="30" y="580" width="8" height="15" fill="rgb(208,114,12)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="596" width="8" height="15" fill="rgb(221,124,5)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="612" width="8" height="15" fill="rgb(218,95,26)"/><text x="33.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="628" width="8" height="15" fill="rgb(223,211,3)"/><text x="33.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="30" y="644" width="8" height="15" fill="rgb(237,199,17)"/><text x="33.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="660" width="8" height="15" fill="rgb(238,219,10)"/><text x="33.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.69%)</title><rect x="30" y="676" width="8" height="15" fill="rgb(207,102,50)"/><text x="33.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="692" width="8" height="15" fill="rgb(248,122,38)"/><text x="33.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="708" width="8" height="15" fill="rgb(216,187,50)"/><text x="33.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="724" width="8" height="15" fill="rgb(209,47,17)"/><text x="33.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="30" y="740" width="8" height="15" fill="rgb(240,141,41)"/><text x="33.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="756" width="8" height="15" fill="rgb(220,50,48)"/><text x="33.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.69%)</title><rect x="30" y="772" width="8" height="15" fill="rgb(254,195,3)"/><text x="33.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="788" width="8" height="15" fill="rgb(237,17,35)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="804" width="8" height="15" fill="rgb(235,173,21)"/><text x="33.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="820" width="8" height="15" fill="rgb(207,159,33)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="836" width="8" height="15" fill="rgb(226,74,16)"/><text x="33.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="852" width="8" height="15" fill="rgb(233,130,26)"/><text x="33.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="30" y="868" width="8" height="15" fill="rgb(251,143,25)"/><text x="33.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="884" width="8" height="15" fill="rgb(229,209,47)"/><text x="33.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.69%)</title><rect x="30" y="900" width="8" height="15" fill="rgb(243,20,8)"/><text x="33.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="916" width="8" height="15" fill="rgb(208,200,52)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="932" width="8" height="15" fill="rgb(251,43,18)"/><text x="33.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="948" width="8" height="15" fill="rgb(245,61,36)"/><text x="33.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="30" y="964" width="8" height="15" fill="rgb(210,179,25)"/><text x="33.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="980" width="8" height="15" fill="rgb(212,168,1)"/><text x="33.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (2 samples, 0.69%)</title><rect x="30" y="996" width="8" height="15" fill="rgb(224,33,21)"/><text x="33.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="1012" width="8" height="15" fill="rgb(254,225,27)"/><text x="33.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="1028" width="8" height="15" fill="rgb(223,149,14)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="1044" width="8" height="15" fill="rgb(206,178,4)"/><text x="33.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="1060" width="8" height="15" fill="rgb(232,48,27)"/><text x="33.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="1076" width="8" height="15" fill="rgb(229,8,12)"/><text x="33.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="30" y="1092" width="8" height="15" fill="rgb(223,169,51)"/><text x="33.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="1108" width="8" height="15" fill="rgb(211,157,17)"/><text x="33.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (2 samples, 0.69%)</title><rect x="30" y="1124" width="8" height="15" fill="rgb(253,132,32)"/><text x="33.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="1140" width="8" height="15" fill="rgb(237,118,52)"/><text x="33.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="1156" width="8" height="15" fill="rgb(233,23,10)"/><text x="33.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="30" y="1172" width="8" height="15" fill="rgb(216,125,17)"/><text x="33.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="30" y="1188" width="8" height="15" fill="rgb(222,2,23)"/><text x="33.00" y="1198.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="34" y="1204" width="4" height="15" fill="rgb(214,107,29)"/><text x="37.00" y="1214.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="34" y="1220" width="4" height="15" fill="rgb(238,131,26)"/><text x="37.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="30" y="468" width="12" height="15" fill="rgb(227,67,33)"/><text x="33.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 1.03%)</title><rect x="30" y="484" width="12" height="15" fill="rgb(253,155,1)"/><text x="33.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="500" width="4" height="15" fill="rgb(221,227,2)"/><text x="41.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="516" width="4" height="15" fill="rgb(248,6,45)"/><text x="41.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="532" width="4" height="15" fill="rgb(251,180,38)"/><text x="41.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="548" width="4" height="15" fill="rgb(252,105,32)"/><text x="41.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="564" width="4" height="15" fill="rgb(208,159,34)"/><text x="41.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="38" y="580" width="4" height="15" fill="rgb(246,89,23)"/><text x="41.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="596" width="4" height="15" fill="rgb(249,121,5)"/><text x="41.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.34%)</title><rect x="38" y="612" width="4" height="15" fill="rgb(214,148,31)"/><text x="41.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="628" width="4" height="15" fill="rgb(252,120,38)"/><text x="41.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="644" width="4" height="15" fill="rgb(237,74,8)"/><text x="41.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="660" width="4" height="15" fill="rgb(210,134,28)"/><text x="41.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="38" y="676" width="4" height="15" fill="rgb(213,44,10)"/><text x="41.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="692" width="4" height="15" fill="rgb(244,103,15)"/><text x="41.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.34%)</title><rect x="38" y="708" width="4" height="15" fill="rgb(241,38,2)"/><text x="41.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="724" width="4" height="15" fill="rgb(215,46,12)"/><text x="41.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="740" width="4" height="15" fill="rgb(211,128,32)"/><text x="41.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="756" width="4" height="15" fill="rgb(219,44,26)"/><text x="41.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="38" y="772" width="4" height="15" fill="rgb(220,56,51)"/><text x="41.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="788" width="4" height="15" fill="rgb(234,213,31)"/><text x="41.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.34%)</title><rect x="38" y="804" width="4" height="15" fill="rgb(221,207,46)"/><text x="41.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="820" width="4" height="15" fill="rgb(246,45,43)"/><text x="41.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="836" width="4" height="15" fill="rgb(233,143,2)"/><text x="41.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="852" width="4" height="15" fill="rgb(239,217,31)"/><text x="41.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="38" y="868" width="4" height="15" fill="rgb(215,206,21)"/><text x="41.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="884" width="4" height="15" fill="rgb(207,197,27)"/><text x="41.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py) (1 samples, 0.34%)</title><rect x="38" y="900" width="4" height="15" fill="rgb(211,72,53)"/><text x="41.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="916" width="4" height="15" fill="rgb(237,117,9)"/><text x="41.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="932" width="4" height="15" fill="rgb(209,142,10)"/><text x="41.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="948" width="4" height="15" fill="rgb(236,168,33)"/><text x="41.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="38" y="964" width="4" height="15" fill="rgb(235,181,10)"/><text x="41.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="980" width="4" height="15" fill="rgb(247,45,44)"/><text x="41.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py) (1 samples, 0.34%)</title><rect x="38" y="996" width="4" height="15" fill="rgb(228,125,24)"/><text x="41.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1012" width="4" height="15" fill="rgb(225,164,12)"/><text x="41.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1028" width="4" height="15" fill="rgb(252,196,23)"/><text x="41.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1044" width="4" height="15" fill="rgb(210,214,29)"/><text x="41.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1060" width="4" height="15" fill="rgb(250,9,26)"/><text x="41.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1076" width="4" height="15" fill="rgb(205,67,15)"/><text x="41.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1092" width="4" height="15" fill="rgb(243,66,3)"/><text x="41.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="38" y="1108" width="4" height="15" fill="rgb(207,229,12)"/><text x="41.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1124" width="4" height="15" fill="rgb(219,42,25)"/><text x="41.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py) (1 samples, 0.34%)</title><rect x="38" y="1140" width="4" height="15" fill="rgb(248,225,31)"/><text x="41.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1156" width="4" height="15" fill="rgb(209,20,41)"/><text x="41.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1172" width="4" height="15" fill="rgb(213,29,37)"/><text x="41.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1188" width="4" height="15" fill="rgb(218,144,41)"/><text x="41.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="38" y="1204" width="4" height="15" fill="rgb(212,49,38)"/><text x="41.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1220" width="4" height="15" fill="rgb(206,97,8)"/><text x="41.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py) (1 samples, 0.34%)</title><rect x="38" y="1236" width="4" height="15" fill="rgb(227,68,2)"/><text x="41.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1252" width="4" height="15" fill="rgb(251,109,7)"/><text x="41.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1268" width="4" height="15" fill="rgb(227,228,9)"/><text x="41.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1284" width="4" height="15" fill="rgb(249,36,28)"/><text x="41.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="38" y="1300" width="4" height="15" fill="rgb(243,108,10)"/><text x="41.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1316" width="4" height="15" fill="rgb(247,153,6)"/><text x="41.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py) (1 samples, 0.34%)</title><rect x="38" y="1332" width="4" height="15" fill="rgb(252,212,20)"/><text x="41.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1348" width="4" height="15" fill="rgb(251,85,4)"/><text x="41.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1364" width="4" height="15" fill="rgb(236,181,23)"/><text x="41.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1380" width="4" height="15" fill="rgb(212,179,52)"/><text x="41.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="38" y="1396" width="4" height="15" fill="rgb(233,136,31)"/><text x="41.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1412" width="4" height="15" fill="rgb(208,198,24)"/><text x="41.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py) (1 samples, 0.34%)</title><rect x="38" y="1428" width="4" height="15" fill="rgb(205,209,5)"/><text x="41.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1444" width="4" height="15" fill="rgb(213,97,13)"/><text x="41.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1460" width="4" height="15" fill="rgb(216,96,34)"/><text x="41.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1476" width="4" height="15" fill="rgb(254,4,36)"/><text x="41.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="38" y="1492" width="4" height="15" fill="rgb(254,153,21)"/><text x="41.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1508" width="4" height="15" fill="rgb(211,145,18)"/><text x="41.00" y="1518.50"></text></g><g><title>&lt;module&gt; (psutil/__init__.py) (1 samples, 0.34%)</title><rect x="38" y="1524" width="4" height="15" fill="rgb(241,109,46)"/><text x="41.00" y="1534.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1540" width="4" height="15" fill="rgb(239,171,20)"/><text x="41.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1556" width="4" height="15" fill="rgb(216,91,46)"/><text x="41.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1572" width="4" height="15" fill="rgb(226,183,53)"/><text x="41.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1588" width="4" height="15" fill="rgb(251,197,11)"/><text x="41.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1604" width="4" height="15" fill="rgb(246,9,43)"/><text x="41.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="38" y="1620" width="4" height="15" fill="rgb(211,76,26)"/><text x="41.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1636" width="4" height="15" fill="rgb(254,11,19)"/><text x="41.00" y="1646.50"></text></g><g><title>&lt;module&gt; (psutil/_common.py) (1 samples, 0.34%)</title><rect x="38" y="1652" width="4" height="15" fill="rgb(253,98,20)"/><text x="41.00" y="1662.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.34%)</title><rect x="38" y="1668" width="4" height="15" fill="rgb(209,198,15)"/><text x="41.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.75%)</title><rect x="14" y="196" width="32" height="15" fill="rgb(211,19,52)"/><text x="17.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.75%)</title><rect x="14" y="212" width="32" height="15" fill="rgb(249,178,5)"/><text x="17.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.75%)</title><rect x="14" y="228" width="32" height="15" fill="rgb(225,69,5)"/><text x="17.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.75%)</title><rect x="14" y="244" width="32" height="15" fill="rgb(248,170,18)"/><text x="17.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.75%)</title><rect x="14" y="260" width="32" height="15" fill="rgb(215,114,43)"/><text x="17.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.75%)</title><rect x="14" y="276" width="32" height="15" fill="rgb(238,28,24)"/><text x="17.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (4 samples, 1.37%)</title><rect x="30" y="292" width="16" height="15" fill="rgb(227,18,7)"/><text x="33.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="30" y="308" width="16" height="15" fill="rgb(227,155,11)"/><text x="33.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="30" y="324" width="16" height="15" fill="rgb(210,6,49)"/><text x="33.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="30" y="340" width="16" height="15" fill="rgb(218,106,0)"/><text x="33.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.37%)</title><rect x="30" y="356" width="16" height="15" fill="rgb(213,109,25)"/><text x="33.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="30" y="372" width="16" height="15" fill="rgb(211,42,25)"/><text x="33.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (4 samples, 1.37%)</title><rect x="30" y="388" width="16" height="15" fill="rgb(246,40,48)"/><text x="33.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="30" y="404" width="16" height="15" fill="rgb(219,185,41)"/><text x="33.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="30" y="420" width="16" height="15" fill="rgb(215,6,44)"/><text x="33.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="30" y="436" width="16" height="15" fill="rgb(251,74,33)"/><text x="33.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.37%)</title><rect x="30" y="452" width="16" height="15" fill="rgb(225,203,12)"/><text x="33.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="42" y="468" width="4" height="15" fill="rgb(245,206,31)"/><text x="45.00" y="478.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="42" y="484" width="4" height="15" fill="rgb(240,109,13)"/><text x="45.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1124" width="4" height="15" fill="rgb(218,210,38)"/><text x="49.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1140" width="4" height="15" fill="rgb(228,134,52)"/><text x="49.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1156" width="4" height="15" fill="rgb(219,117,30)"/><text x="49.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="46" y="1172" width="4" height="15" fill="rgb(216,182,50)"/><text x="49.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1188" width="4" height="15" fill="rgb(242,97,13)"/><text x="49.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.34%)</title><rect x="46" y="1204" width="4" height="15" fill="rgb(241,4,27)"/><text x="49.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1220" width="4" height="15" fill="rgb(222,169,17)"/><text x="49.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1236" width="4" height="15" fill="rgb(239,39,3)"/><text x="49.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1252" width="4" height="15" fill="rgb(251,30,9)"/><text x="49.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="46" y="1268" width="4" height="15" fill="rgb(231,189,45)"/><text x="49.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1284" width="4" height="15" fill="rgb(245,216,20)"/><text x="49.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (1 samples, 0.34%)</title><rect x="46" y="1300" width="4" height="15" fill="rgb(231,63,19)"/><text x="49.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1316" width="4" height="15" fill="rgb(235,19,17)"/><text x="49.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1332" width="4" height="15" fill="rgb(251,170,0)"/><text x="49.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1348" width="4" height="15" fill="rgb(220,106,45)"/><text x="49.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="46" y="1364" width="4" height="15" fill="rgb(235,34,52)"/><text x="49.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1380" width="4" height="15" fill="rgb(215,51,40)"/><text x="49.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/feature_selection/__init__.py) (1 samples, 0.34%)</title><rect x="46" y="1396" width="4" height="15" fill="rgb(236,187,22)"/><text x="49.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1412" width="4" height="15" fill="rgb(222,160,17)"/><text x="49.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1428" width="4" height="15" fill="rgb(231,52,38)"/><text x="49.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1444" width="4" height="15" fill="rgb(253,149,36)"/><text x="49.00" y="1454.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1460" width="4" height="15" fill="rgb(233,124,13)"/><text x="49.00" y="1470.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1476" width="4" height="15" fill="rgb(252,15,30)"/><text x="49.00" y="1486.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1492" width="4" height="15" fill="rgb(244,97,44)"/><text x="49.00" y="1502.50"></text></g><g><title>0x7f1863c4048e (?) (1 samples, 0.34%)</title><rect x="50" y="1508" width="4" height="15" fill="rgb(208,83,22)"/><text x="53.00" y="1518.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.34%)</title><rect x="54" y="1508" width="4" height="15" fill="rgb(246,142,40)"/><text x="57.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="484" width="16" height="15" fill="rgb(207,68,50)"/><text x="49.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="500" width="16" height="15" fill="rgb(209,79,35)"/><text x="49.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="516" width="16" height="15" fill="rgb(237,2,2)"/><text x="49.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="532" width="16" height="15" fill="rgb(207,156,32)"/><text x="49.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.37%)</title><rect x="46" y="548" width="16" height="15" fill="rgb(251,216,1)"/><text x="49.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="564" width="16" height="15" fill="rgb(214,15,23)"/><text x="49.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 1.37%)</title><rect x="46" y="580" width="16" height="15" fill="rgb(252,214,49)"/><text x="49.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="596" width="16" height="15" fill="rgb(230,61,46)"/><text x="49.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="612" width="16" height="15" fill="rgb(225,164,0)"/><text x="49.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="628" width="16" height="15" fill="rgb(212,54,48)"/><text x="49.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.37%)</title><rect x="46" y="644" width="16" height="15" fill="rgb(243,96,29)"/><text x="49.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="660" width="16" height="15" fill="rgb(243,211,5)"/><text x="49.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 1.37%)</title><rect x="46" y="676" width="16" height="15" fill="rgb(240,175,16)"/><text x="49.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="692" width="16" height="15" fill="rgb(235,20,0)"/><text x="49.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="708" width="16" height="15" fill="rgb(249,39,49)"/><text x="49.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="724" width="16" height="15" fill="rgb(235,18,33)"/><text x="49.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.37%)</title><rect x="46" y="740" width="16" height="15" fill="rgb(209,52,0)"/><text x="49.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="756" width="16" height="15" fill="rgb(213,173,3)"/><text x="49.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 1.37%)</title><rect x="46" y="772" width="16" height="15" fill="rgb(221,193,50)"/><text x="49.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="788" width="16" height="15" fill="rgb(247,5,38)"/><text x="49.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="804" width="16" height="15" fill="rgb(238,229,53)"/><text x="49.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="820" width="16" height="15" fill="rgb(247,217,10)"/><text x="49.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.37%)</title><rect x="46" y="836" width="16" height="15" fill="rgb(252,63,23)"/><text x="49.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="852" width="16" height="15" fill="rgb(223,143,5)"/><text x="49.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 1.37%)</title><rect x="46" y="868" width="16" height="15" fill="rgb(240,116,28)"/><text x="49.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="884" width="16" height="15" fill="rgb(208,7,22)"/><text x="49.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="900" width="16" height="15" fill="rgb(234,15,3)"/><text x="49.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="916" width="16" height="15" fill="rgb(254,131,44)"/><text x="49.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="932" width="16" height="15" fill="rgb(245,79,38)"/><text x="49.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="948" width="16" height="15" fill="rgb(221,4,8)"/><text x="49.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="964" width="16" height="15" fill="rgb(210,213,35)"/><text x="49.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.37%)</title><rect x="46" y="980" width="16" height="15" fill="rgb(230,208,8)"/><text x="49.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="996" width="16" height="15" fill="rgb(239,123,6)"/><text x="49.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 1.37%)</title><rect x="46" y="1012" width="16" height="15" fill="rgb(249,148,36)"/><text x="49.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="1028" width="16" height="15" fill="rgb(215,212,3)"/><text x="49.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="1044" width="16" height="15" fill="rgb(253,49,43)"/><text x="49.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="1060" width="16" height="15" fill="rgb(220,2,47)"/><text x="49.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.37%)</title><rect x="46" y="1076" width="16" height="15" fill="rgb(250,109,3)"/><text x="49.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.37%)</title><rect x="46" y="1092" width="16" height="15" fill="rgb(243,80,17)"/><text x="49.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 1.37%)</title><rect x="46" y="1108" width="16" height="15" fill="rgb(209,13,52)"/><text x="49.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="50" y="1124" width="12" height="15" fill="rgb(240,78,5)"/><text x="53.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="50" y="1140" width="12" height="15" fill="rgb(220,50,8)"/><text x="53.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="50" y="1156" width="12" height="15" fill="rgb(218,215,22)"/><text x="53.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="50" y="1172" width="12" height="15" fill="rgb(212,97,43)"/><text x="53.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="50" y="1188" width="12" height="15" fill="rgb(250,126,3)"/><text x="53.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.03%)</title><rect x="50" y="1204" width="12" height="15" fill="rgb(225,32,13)"/><text x="53.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="50" y="1220" width="12" height="15" fill="rgb(237,163,6)"/><text x="53.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 1.03%)</title><rect x="50" y="1236" width="12" height="15" fill="rgb(237,19,35)"/><text x="53.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="50" y="1252" width="12" height="15" fill="rgb(250,168,28)"/><text x="53.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="50" y="1268" width="12" height="15" fill="rgb(222,113,44)"/><text x="53.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="50" y="1284" width="12" height="15" fill="rgb(252,27,4)"/><text x="53.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="50" y="1300" width="12" height="15" fill="rgb(221,141,9)"/><text x="53.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="50" y="1316" width="12" height="15" fill="rgb(233,222,18)"/><text x="53.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.03%)</title><rect x="50" y="1332" width="12" height="15" fill="rgb(243,214,7)"/><text x="53.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="50" y="1348" width="12" height="15" fill="rgb(239,151,23)"/><text x="53.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 1.03%)</title><rect x="50" y="1364" width="12" height="15" fill="rgb(205,222,5)"/><text x="53.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="50" y="1380" width="12" height="15" fill="rgb(243,168,10)"/><text x="53.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="50" y="1396" width="12" height="15" fill="rgb(215,74,33)"/><text x="53.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="50" y="1412" width="12" height="15" fill="rgb(225,167,4)"/><text x="53.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.03%)</title><rect x="50" y="1428" width="12" height="15" fill="rgb(234,102,17)"/><text x="53.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="50" y="1444" width="12" height="15" fill="rgb(250,22,23)"/><text x="53.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.03%)</title><rect x="50" y="1460" width="12" height="15" fill="rgb(237,203,11)"/><text x="53.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.03%)</title><rect x="50" y="1476" width="12" height="15" fill="rgb(247,13,42)"/><text x="53.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.03%)</title><rect x="50" y="1492" width="12" height="15" fill="rgb(211,75,44)"/><text x="53.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="58" y="1508" width="4" height="15" fill="rgb(210,21,53)"/><text x="61.00" y="1518.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="58" y="1524" width="4" height="15" fill="rgb(207,139,37)"/><text x="61.00" y="1534.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.594] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="58" y="1540" width="4" height="15" fill="rgb(206,139,11)"/><text x="61.00" y="1550.50"></text></g><g><title>_add_numeric_operations (pandas/core/generic.py) (1 samples, 0.34%)</title><rect x="62" y="1124" width="4" height="15" fill="rgb(231,156,10)"/><text x="65.00" y="1134.50"></text></g><g><title>_make_min_count_stat_function (pandas/core/generic.py) (1 samples, 0.34%)</title><rect x="62" y="1140" width="4" height="15" fill="rgb(252,184,21)"/><text x="65.00" y="1150.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.34%)</title><rect x="62" y="1156" width="4" height="15" fill="rgb(211,208,4)"/><text x="65.00" y="1166.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.34%)</title><rect x="62" y="1172" width="4" height="15" fill="rgb(232,159,25)"/><text x="65.00" y="1182.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.34%)</title><rect x="62" y="1188" width="4" height="15" fill="rgb(236,76,39)"/><text x="65.00" y="1198.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.34%)</title><rect x="62" y="1204" width="4" height="15" fill="rgb(238,203,44)"/><text x="65.00" y="1214.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 2.06%)</title><rect x="46" y="436" width="24" height="15" fill="rgb(236,226,24)"/><text x="49.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.06%)</title><rect x="46" y="452" width="24" height="15" fill="rgb(213,204,45)"/><text x="49.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.06%)</title><rect x="46" y="468" width="24" height="15" fill="rgb(219,208,32)"/><text x="49.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="484" width="8" height="15" fill="rgb(207,156,54)"/><text x="65.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="62" y="500" width="8" height="15" fill="rgb(245,198,3)"/><text x="65.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="516" width="8" height="15" fill="rgb(230,84,12)"/><text x="65.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.69%)</title><rect x="62" y="532" width="8" height="15" fill="rgb(238,75,46)"/><text x="65.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="548" width="8" height="15" fill="rgb(212,144,53)"/><text x="65.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="564" width="8" height="15" fill="rgb(235,84,25)"/><text x="65.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="580" width="8" height="15" fill="rgb(209,59,4)"/><text x="65.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="62" y="596" width="8" height="15" fill="rgb(232,59,0)"/><text x="65.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="612" width="8" height="15" fill="rgb(225,209,36)"/><text x="65.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.69%)</title><rect x="62" y="628" width="8" height="15" fill="rgb(232,160,51)"/><text x="65.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="644" width="8" height="15" fill="rgb(254,224,0)"/><text x="65.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="660" width="8" height="15" fill="rgb(239,2,15)"/><text x="65.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="676" width="8" height="15" fill="rgb(226,29,29)"/><text x="65.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="62" y="692" width="8" height="15" fill="rgb(231,21,2)"/><text x="65.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="708" width="8" height="15" fill="rgb(241,171,7)"/><text x="65.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.69%)</title><rect x="62" y="724" width="8" height="15" fill="rgb(209,112,1)"/><text x="65.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="740" width="8" height="15" fill="rgb(213,159,35)"/><text x="65.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="756" width="8" height="15" fill="rgb(218,22,25)"/><text x="65.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="772" width="8" height="15" fill="rgb(236,89,46)"/><text x="65.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="62" y="788" width="8" height="15" fill="rgb(247,28,18)"/><text x="65.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="804" width="8" height="15" fill="rgb(222,158,32)"/><text x="65.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.69%)</title><rect x="62" y="820" width="8" height="15" fill="rgb(226,41,39)"/><text x="65.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="836" width="8" height="15" fill="rgb(207,159,15)"/><text x="65.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="852" width="8" height="15" fill="rgb(227,19,25)"/><text x="65.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="868" width="8" height="15" fill="rgb(252,62,9)"/><text x="65.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="62" y="884" width="8" height="15" fill="rgb(234,86,48)"/><text x="65.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="900" width="8" height="15" fill="rgb(254,21,20)"/><text x="65.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.69%)</title><rect x="62" y="916" width="8" height="15" fill="rgb(236,212,11)"/><text x="65.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="932" width="8" height="15" fill="rgb(239,18,31)"/><text x="65.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="948" width="8" height="15" fill="rgb(229,5,42)"/><text x="65.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="964" width="8" height="15" fill="rgb(218,136,51)"/><text x="65.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="62" y="980" width="8" height="15" fill="rgb(249,4,24)"/><text x="65.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="996" width="8" height="15" fill="rgb(217,150,23)"/><text x="65.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.69%)</title><rect x="62" y="1012" width="8" height="15" fill="rgb(233,96,37)"/><text x="65.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="1028" width="8" height="15" fill="rgb(209,146,9)"/><text x="65.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="1044" width="8" height="15" fill="rgb(214,26,44)"/><text x="65.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="1060" width="8" height="15" fill="rgb(233,2,42)"/><text x="65.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="62" y="1076" width="8" height="15" fill="rgb(252,70,42)"/><text x="65.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="1092" width="8" height="15" fill="rgb(224,119,1)"/><text x="65.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.69%)</title><rect x="62" y="1108" width="8" height="15" fill="rgb(241,227,2)"/><text x="65.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="66" y="1124" width="4" height="15" fill="rgb(236,11,28)"/><text x="69.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="66" y="1140" width="4" height="15" fill="rgb(221,198,4)"/><text x="69.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="66" y="1156" width="4" height="15" fill="rgb(211,196,49)"/><text x="69.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="66" y="1172" width="4" height="15" fill="rgb(228,109,23)"/><text x="69.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="66" y="1188" width="4" height="15" fill="rgb(208,14,11)"/><text x="69.00" y="1198.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="66" y="1204" width="4" height="15" fill="rgb(210,9,4)"/><text x="69.00" y="1214.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="66" y="1220" width="4" height="15" fill="rgb(227,143,46)"/><text x="69.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="66" y="1236" width="4" height="15" fill="rgb(225,182,2)"/><text x="69.00" y="1246.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="66" y="1252" width="4" height="15" fill="rgb(214,102,41)"/><text x="69.00" y="1262.50"></text></g><g><title>0x7f1873e0d995 (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="66" y="1268" width="4" height="15" fill="rgb(238,28,18)"/><text x="69.00" y="1278.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.34%)</title><rect x="66" y="1284" width="4" height="15" fill="rgb(224,137,23)"/><text x="69.00" y="1294.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.34%)</title><rect x="66" y="1300" width="4" height="15" fill="rgb(206,61,29)"/><text x="69.00" y="1310.50"></text></g><g><title>0x7f1873e0d258 (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="66" y="1316" width="4" height="15" fill="rgb(245,128,12)"/><text x="69.00" y="1326.50"></text></g><g><title>0x7f1873e5ad7a (ld-2.29.so) (1 samples, 0.34%)</title><rect x="66" y="1332" width="4" height="15" fill="rgb(226,214,40)"/><text x="69.00" y="1342.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.34%)</title><rect x="66" y="1348" width="4" height="15" fill="rgb(246,96,21)"/><text x="69.00" y="1358.50"></text></g><g><title>0x7f1873e5b18b (ld-2.29.so) (1 samples, 0.34%)</title><rect x="66" y="1364" width="4" height="15" fill="rgb(230,58,51)"/><text x="69.00" y="1374.50"></text></g><g><title>0x7f1873e50c1a (ld-2.29.so) (1 samples, 0.34%)</title><rect x="66" y="1380" width="4" height="15" fill="rgb(208,134,47)"/><text x="69.00" y="1390.50"></text></g><g><title>0x7f1873e4ddcf (ld-2.29.so) (1 samples, 0.34%)</title><rect x="66" y="1396" width="4" height="15" fill="rgb(217,206,52)"/><text x="69.00" y="1406.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 2.41%)</title><rect x="46" y="244" width="28" height="15" fill="rgb(217,153,28)"/><text x="49.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.41%)</title><rect x="46" y="260" width="28" height="15" fill="rgb(222,107,22)"/><text x="49.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.41%)</title><rect x="46" y="276" width="28" height="15" fill="rgb(222,123,41)"/><text x="49.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.41%)</title><rect x="46" y="292" width="28" height="15" fill="rgb(221,165,20)"/><text x="49.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.41%)</title><rect x="46" y="308" width="28" height="15" fill="rgb(222,221,18)"/><text x="49.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.41%)</title><rect x="46" y="324" width="28" height="15" fill="rgb(219,14,31)"/><text x="49.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (7 samples, 2.41%)</title><rect x="46" y="340" width="28" height="15" fill="rgb(231,204,29)"/><text x="49.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.41%)</title><rect x="46" y="356" width="28" height="15" fill="rgb(220,112,13)"/><text x="49.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.41%)</title><rect x="46" y="372" width="28" height="15" fill="rgb(209,70,8)"/><text x="49.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.41%)</title><rect x="46" y="388" width="28" height="15" fill="rgb(232,105,12)"/><text x="49.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.41%)</title><rect x="46" y="404" width="28" height="15" fill="rgb(236,48,28)"/><text x="49.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.41%)</title><rect x="46" y="420" width="28" height="15" fill="rgb(232,64,29)"/><text x="49.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.34%)</title><rect x="70" y="436" width="4" height="15" fill="rgb(211,15,53)"/><text x="73.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="452" width="4" height="15" fill="rgb(244,55,41)"/><text x="73.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="468" width="4" height="15" fill="rgb(238,17,52)"/><text x="73.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="484" width="4" height="15" fill="rgb(217,97,6)"/><text x="73.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="70" y="500" width="4" height="15" fill="rgb(232,23,9)"/><text x="73.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="516" width="4" height="15" fill="rgb(222,22,16)"/><text x="73.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py) (1 samples, 0.34%)</title><rect x="70" y="532" width="4" height="15" fill="rgb(226,190,39)"/><text x="73.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="548" width="4" height="15" fill="rgb(241,23,50)"/><text x="73.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="564" width="4" height="15" fill="rgb(253,1,36)"/><text x="73.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="580" width="4" height="15" fill="rgb(205,183,50)"/><text x="73.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="596" width="4" height="15" fill="rgb(233,206,18)"/><text x="73.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="612" width="4" height="15" fill="rgb(251,150,44)"/><text x="73.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="628" width="4" height="15" fill="rgb(241,62,36)"/><text x="73.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="70" y="644" width="4" height="15" fill="rgb(206,218,21)"/><text x="73.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="660" width="4" height="15" fill="rgb(233,95,20)"/><text x="73.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py) (1 samples, 0.34%)</title><rect x="70" y="676" width="4" height="15" fill="rgb(224,103,14)"/><text x="73.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="692" width="4" height="15" fill="rgb(221,96,53)"/><text x="73.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="708" width="4" height="15" fill="rgb(235,194,48)"/><text x="73.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="724" width="4" height="15" fill="rgb(244,61,42)"/><text x="73.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="70" y="740" width="4" height="15" fill="rgb(246,18,32)"/><text x="73.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="756" width="4" height="15" fill="rgb(235,24,38)"/><text x="73.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/io/harwell_boeing/__init__.py) (1 samples, 0.34%)</title><rect x="70" y="772" width="4" height="15" fill="rgb(240,93,33)"/><text x="73.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="788" width="4" height="15" fill="rgb(239,38,45)"/><text x="73.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="804" width="4" height="15" fill="rgb(233,200,30)"/><text x="73.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="820" width="4" height="15" fill="rgb(223,129,33)"/><text x="73.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="70" y="836" width="4" height="15" fill="rgb(208,81,10)"/><text x="73.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="852" width="4" height="15" fill="rgb(246,225,26)"/><text x="73.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/io/harwell_boeing/hb.py) (1 samples, 0.34%)</title><rect x="70" y="868" width="4" height="15" fill="rgb(245,112,3)"/><text x="73.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="884" width="4" height="15" fill="rgb(230,83,11)"/><text x="73.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="900" width="4" height="15" fill="rgb(232,198,1)"/><text x="73.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="916" width="4" height="15" fill="rgb(212,198,22)"/><text x="73.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="70" y="932" width="4" height="15" fill="rgb(214,181,22)"/><text x="73.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="948" width="4" height="15" fill="rgb(238,123,13)"/><text x="73.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/io/harwell_boeing/_fortran_format_parser.py) (1 samples, 0.34%)</title><rect x="70" y="964" width="4" height="15" fill="rgb(234,3,11)"/><text x="73.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.50%)</title><rect x="14" y="68" width="64" height="15" fill="rgb(208,161,40)"/><text x="17.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.50%)</title><rect x="14" y="84" width="64" height="15" fill="rgb(216,63,16)"/><text x="17.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.50%)</title><rect x="14" y="100" width="64" height="15" fill="rgb(205,42,23)"/><text x="17.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 5.50%)</title><rect x="14" y="116" width="64" height="15" fill="rgb(249,0,24)"/><text x="17.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.50%)</title><rect x="14" y="132" width="64" height="15" fill="rgb(251,203,27)"/><text x="17.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py) (16 samples, 5.50%)</title><rect x="14" y="148" width="64" height="15" fill="rgb(219,46,8)"/><text x="17.00" y="158.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.50%)</title><rect x="14" y="164" width="64" height="15" fill="rgb(237,192,53)"/><text x="17.00" y="174.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.50%)</title><rect x="14" y="180" width="64" height="15" fill="rgb(213,13,42)"/><text x="17.00" y="190.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.75%)</title><rect x="46" y="196" width="32" height="15" fill="rgb(219,224,41)"/><text x="49.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.75%)</title><rect x="46" y="212" width="32" height="15" fill="rgb(215,158,13)"/><text x="49.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.75%)</title><rect x="46" y="228" width="32" height="15" fill="rgb(241,29,44)"/><text x="49.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.34%)</title><rect x="74" y="244" width="4" height="15" fill="rgb(213,94,15)"/><text x="77.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="260" width="4" height="15" fill="rgb(225,106,4)"/><text x="77.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="276" width="4" height="15" fill="rgb(218,25,17)"/><text x="77.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="292" width="4" height="15" fill="rgb(221,127,32)"/><text x="77.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="308" width="4" height="15" fill="rgb(249,92,45)"/><text x="77.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="324" width="4" height="15" fill="rgb(216,99,53)"/><text x="77.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="74" y="340" width="4" height="15" fill="rgb(253,105,34)"/><text x="77.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="356" width="4" height="15" fill="rgb(227,4,39)"/><text x="77.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.34%)</title><rect x="74" y="372" width="4" height="15" fill="rgb(238,139,36)"/><text x="77.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="388" width="4" height="15" fill="rgb(223,221,16)"/><text x="77.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="404" width="4" height="15" fill="rgb(232,202,26)"/><text x="77.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="420" width="4" height="15" fill="rgb(244,112,13)"/><text x="77.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="436" width="4" height="15" fill="rgb(213,73,46)"/><text x="77.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="452" width="4" height="15" fill="rgb(247,141,25)"/><text x="77.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="74" y="468" width="4" height="15" fill="rgb(244,66,52)"/><text x="77.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="484" width="4" height="15" fill="rgb(232,13,26)"/><text x="77.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.34%)</title><rect x="74" y="500" width="4" height="15" fill="rgb(217,76,33)"/><text x="77.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="516" width="4" height="15" fill="rgb(240,108,18)"/><text x="77.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="532" width="4" height="15" fill="rgb(234,75,10)"/><text x="77.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="548" width="4" height="15" fill="rgb(247,98,28)"/><text x="77.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="74" y="564" width="4" height="15" fill="rgb(231,184,11)"/><text x="77.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="580" width="4" height="15" fill="rgb(225,80,28)"/><text x="77.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (1 samples, 0.34%)</title><rect x="74" y="596" width="4" height="15" fill="rgb(241,94,51)"/><text x="77.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="612" width="4" height="15" fill="rgb(210,176,0)"/><text x="77.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="628" width="4" height="15" fill="rgb(230,146,28)"/><text x="77.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="644" width="4" height="15" fill="rgb(214,56,1)"/><text x="77.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="74" y="660" width="4" height="15" fill="rgb(218,62,35)"/><text x="77.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="676" width="4" height="15" fill="rgb(228,10,14)"/><text x="77.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py) (1 samples, 0.34%)</title><rect x="74" y="692" width="4" height="15" fill="rgb(229,88,18)"/><text x="77.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="708" width="4" height="15" fill="rgb(230,162,15)"/><text x="77.00" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="724" width="4" height="15" fill="rgb(213,218,48)"/><text x="77.00" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="740" width="4" height="15" fill="rgb(236,228,52)"/><text x="77.00" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="74" y="756" width="4" height="15" fill="rgb(218,91,25)"/><text x="77.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="772" width="4" height="15" fill="rgb(213,105,5)"/><text x="77.00" y="782.50"></text></g><g><title>&lt;module&gt; (threading.py) (1 samples, 0.34%)</title><rect x="74" y="788" width="4" height="15" fill="rgb(242,68,52)"/><text x="77.00" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="804" width="4" height="15" fill="rgb(225,89,1)"/><text x="77.00" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="820" width="4" height="15" fill="rgb(215,94,4)"/><text x="77.00" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="836" width="4" height="15" fill="rgb(240,81,33)"/><text x="77.00" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="74" y="852" width="4" height="15" fill="rgb(228,126,19)"/><text x="77.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="868" width="4" height="15" fill="rgb(205,205,46)"/><text x="77.00" y="878.50"></text></g><g><title>&lt;module&gt; (traceback.py) (1 samples, 0.34%)</title><rect x="74" y="884" width="4" height="15" fill="rgb(250,124,36)"/><text x="77.00" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="900" width="4" height="15" fill="rgb(245,10,8)"/><text x="77.00" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="916" width="4" height="15" fill="rgb(210,64,11)"/><text x="77.00" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="932" width="4" height="15" fill="rgb(238,203,4)"/><text x="77.00" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="74" y="948" width="4" height="15" fill="rgb(233,183,37)"/><text x="77.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="964" width="4" height="15" fill="rgb(205,87,48)"/><text x="77.00" y="974.50"></text></g><g><title>&lt;module&gt; (linecache.py) (1 samples, 0.34%)</title><rect x="74" y="980" width="4" height="15" fill="rgb(210,104,44)"/><text x="77.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="996" width="4" height="15" fill="rgb(209,227,35)"/><text x="77.00" y="1006.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="1012" width="4" height="15" fill="rgb(222,229,22)"/><text x="77.00" y="1022.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="1028" width="4" height="15" fill="rgb(217,8,2)"/><text x="77.00" y="1038.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="74" y="1044" width="4" height="15" fill="rgb(241,209,18)"/><text x="77.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="1060" width="4" height="15" fill="rgb(238,40,12)"/><text x="77.00" y="1070.50"></text></g><g><title>&lt;module&gt; (tokenize.py) (1 samples, 0.34%)</title><rect x="74" y="1076" width="4" height="15" fill="rgb(235,98,51)"/><text x="77.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="1092" width="4" height="15" fill="rgb(214,110,47)"/><text x="77.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="1108" width="4" height="15" fill="rgb(235,130,43)"/><text x="77.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="1124" width="4" height="15" fill="rgb(237,120,7)"/><text x="77.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="74" y="1140" width="4" height="15" fill="rgb(241,87,27)"/><text x="77.00" y="1150.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="74" y="1156" width="4" height="15" fill="rgb(251,172,9)"/><text x="77.00" y="1166.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="74" y="1172" width="4" height="15" fill="rgb(228,169,27)"/><text x="77.00" y="1182.50"></text></g><g><title>__fxstat (libc-2.29.so) (1 samples, 0.34%)</title><rect x="74" y="1188" width="4" height="15" fill="rgb(243,34,49)"/><text x="77.00" y="1198.50"></text></g><g><title>profile0_skl (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (1 samples, 0.34%)</title><rect x="78" y="68" width="4" height="15" fill="rgb(254,204,43)"/><text x="81.00" y="78.50"></text></g><g><title>setup_profile0 (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (1 samples, 0.34%)</title><rect x="78" y="84" width="4" height="15" fill="rgb(215,147,17)"/><text x="81.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="78" y="100" width="4" height="15" fill="rgb(213,105,22)"/><text x="81.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (1 samples, 0.34%)</title><rect x="78" y="116" width="4" height="15" fill="rgb(250,48,47)"/><text x="81.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py) (1 samples, 0.34%)</title><rect x="78" y="132" width="4" height="15" fill="rgb(236,92,3)"/><text x="81.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="148" width="4" height="15" fill="rgb(246,44,43)"/><text x="81.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="164" width="4" height="15" fill="rgb(231,160,23)"/><text x="81.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="180" width="4" height="15" fill="rgb(232,12,20)"/><text x="81.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="78" y="196" width="4" height="15" fill="rgb(205,139,53)"/><text x="81.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="212" width="4" height="15" fill="rgb(209,20,15)"/><text x="81.00" y="222.50"></text></g><g><title>&lt;module&gt; (xgboost/__init__.py) (1 samples, 0.34%)</title><rect x="78" y="228" width="4" height="15" fill="rgb(226,159,4)"/><text x="81.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="244" width="4" height="15" fill="rgb(252,9,47)"/><text x="81.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="260" width="4" height="15" fill="rgb(244,53,1)"/><text x="81.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="276" width="4" height="15" fill="rgb(226,19,34)"/><text x="81.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="78" y="292" width="4" height="15" fill="rgb(228,12,52)"/><text x="81.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="308" width="4" height="15" fill="rgb(209,145,2)"/><text x="81.00" y="318.50"></text></g><g><title>&lt;module&gt; (xgboost/core.py) (1 samples, 0.34%)</title><rect x="78" y="324" width="4" height="15" fill="rgb(249,186,31)"/><text x="81.00" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="340" width="4" height="15" fill="rgb(222,187,23)"/><text x="81.00" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="356" width="4" height="15" fill="rgb(254,137,44)"/><text x="81.00" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="372" width="4" height="15" fill="rgb(223,163,48)"/><text x="81.00" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="78" y="388" width="4" height="15" fill="rgb(247,88,19)"/><text x="81.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="404" width="4" height="15" fill="rgb(205,125,47)"/><text x="81.00" y="414.50"></text></g><g><title>&lt;module&gt; (xgboost/compat.py) (1 samples, 0.34%)</title><rect x="78" y="420" width="4" height="15" fill="rgb(236,9,24)"/><text x="81.00" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="436" width="4" height="15" fill="rgb(226,52,3)"/><text x="81.00" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="452" width="4" height="15" fill="rgb(250,64,30)"/><text x="81.00" y="462.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="468" width="4" height="15" fill="rgb(208,203,53)"/><text x="81.00" y="478.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="78" y="484" width="4" height="15" fill="rgb(237,207,20)"/><text x="81.00" y="494.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="78" y="500" width="4" height="15" fill="rgb(207,167,4)"/><text x="81.00" y="510.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="78" y="516" width="4" height="15" fill="rgb(229,52,50)"/><text x="81.00" y="526.50"></text></g><g><title>0x7f1873ba6120 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="139" y="180" width="4" height="15" fill="rgb(235,179,16)"/><text x="142.00" y="190.50"></text></g><g><title>0x7f1831bb5ff9 (?) (1 samples, 0.34%)</title><rect x="164" y="212" width="4" height="15" fill="rgb(235,87,22)"/><text x="167.00" y="222.50"></text></g><g><title>0x7f1831bb0ef6 (?) (1 samples, 0.34%)</title><rect x="164" y="228" width="4" height="15" fill="rgb(238,158,31)"/><text x="167.00" y="238.50"></text></g><g><title>0x7f1831ba5962 (?) (1 samples, 0.34%)</title><rect x="164" y="244" width="4" height="15" fill="rgb(224,88,51)"/><text x="167.00" y="254.50"></text></g><g><title>0x7f1831bd97a7 (?) (1 samples, 0.34%)</title><rect x="164" y="260" width="4" height="15" fill="rgb(243,149,29)"/><text x="167.00" y="270.50"></text></g><g><title>0x7f1831bd913d (?) (1 samples, 0.34%)</title><rect x="164" y="276" width="4" height="15" fill="rgb(226,145,17)"/><text x="167.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.03%)</title><rect x="176" y="260" width="12" height="15" fill="rgb(224,110,28)"/><text x="179.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.03%)</title><rect x="176" y="276" width="12" height="15" fill="rgb(206,192,9)"/><text x="179.00" y="286.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_value [clone .isra.101] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="180" y="292" width="8" height="15" fill="rgb(241,29,1)"/><text x="183.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (7 samples, 2.41%)</title><rect x="168" y="212" width="28" height="15" fill="rgb(238,184,25)"/><text x="171.00" y="222.50">&lt;..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.06%)</title><rect x="172" y="228" width="24" height="15" fill="rgb(208,7,26)"/><text x="175.00" y="238.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.72%)</title><rect x="176" y="244" width="20" height="15" fill="rgb(220,83,49)"/><text x="179.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="188" y="260" width="8" height="15" fill="rgb(229,112,4)"/><text x="191.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="188" y="276" width="8" height="15" fill="rgb(207,138,48)"/><text x="191.00" y="286.50"></text></g><g><title>0x7f1873b9be93 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="192" y="292" width="4" height="15" fill="rgb(211,195,15)"/><text x="195.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="196" y="228" width="4" height="15" fill="rgb(229,170,51)"/><text x="199.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="196" y="244" width="4" height="15" fill="rgb(231,99,31)"/><text x="199.00" y="254.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="200" y="228" width="4" height="15" fill="rgb(206,144,21)"/><text x="203.00" y="238.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.34%)</title><rect x="204" y="244" width="4" height="15" fill="rgb(213,203,35)"/><text x="207.00" y="254.50"></text></g><g><title>0x7f1831b7d0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="208" y="260" width="8" height="15" fill="rgb(237,79,54)"/><text x="211.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="228" y="292" width="5" height="15" fill="rgb(230,219,20)"/><text x="231.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="228" y="308" width="5" height="15" fill="rgb(233,213,27)"/><text x="231.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="228" y="324" width="5" height="15" fill="rgb(250,45,47)"/><text x="231.00" y="334.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="228" y="340" width="5" height="15" fill="rgb(221,82,53)"/><text x="231.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="228" y="356" width="5" height="15" fill="rgb(209,200,44)"/><text x="231.00" y="366.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="233" y="292" width="4" height="15" fill="rgb(248,134,31)"/><text x="236.00" y="302.50"></text></g><g><title>0x7f1873b85d07 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="233" y="308" width="4" height="15" fill="rgb(251,93,23)"/><text x="236.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="237" y="292" width="4" height="15" fill="rgb(236,164,39)"/><text x="240.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="237" y="308" width="4" height="15" fill="rgb(230,10,6)"/><text x="240.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="237" y="324" width="4" height="15" fill="rgb(235,221,28)"/><text x="240.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="241" y="292" width="4" height="15" fill="rgb(239,174,31)"/><text x="244.00" y="302.50"></text></g><g><title>onnxruntime::logging::LoggingManager::CreateLogger (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="241" y="308" width="4" height="15" fill="rgb(221,169,44)"/><text x="244.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="241" y="324" width="4" height="15" fill="rgb(250,221,12)"/><text x="244.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="245" y="292" width="8" height="15" fill="rgb(213,110,46)"/><text x="248.00" y="302.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="261" y="356" width="4" height="15" fill="rgb(231,45,9)"/><text x="264.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="261" y="372" width="4" height="15" fill="rgb(233,144,10)"/><text x="264.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="261" y="388" width="4" height="15" fill="rgb(244,199,29)"/><text x="264.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="265" y="356" width="4" height="15" fill="rgb(222,49,51)"/><text x="268.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="265" y="372" width="4" height="15" fill="rgb(211,182,18)"/><text x="268.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="265" y="388" width="4" height="15" fill="rgb(228,11,27)"/><text x="268.00" y="398.50"></text></g><g><title>0x7f1831b7c930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="265" y="404" width="4" height="15" fill="rgb(238,28,53)"/><text x="268.00" y="414.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="269" y="356" width="4" height="15" fill="rgb(237,165,18)"/><text x="272.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.37%)</title><rect x="261" y="340" width="16" height="15" fill="rgb(208,129,44)"/><text x="264.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="273" y="356" width="4" height="15" fill="rgb(243,26,44)"/><text x="276.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::GetInputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="277" y="356" width="4" height="15" fill="rgb(248,56,34)"/><text x="280.00" y="366.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.09%)</title><rect x="253" y="308" width="36" height="15" fill="rgb(232,43,21)"/><text x="256.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.41%)</title><rect x="261" y="324" width="28" height="15" fill="rgb(253,86,42)"/><text x="264.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.03%)</title><rect x="277" y="340" width="12" height="15" fill="rgb(206,121,42)"/><text x="280.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="281" y="356" width="8" height="15" fill="rgb(236,127,0)"/><text x="284.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="281" y="372" width="8" height="15" fill="rgb(207,66,32)"/><text x="284.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="281" y="388" width="8" height="15" fill="rgb(233,58,51)"/><text x="284.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="281" y="404" width="8" height="15" fill="rgb(226,221,51)"/><text x="284.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="285" y="420" width="4" height="15" fill="rgb(219,57,54)"/><text x="288.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="285" y="436" width="4" height="15" fill="rgb(251,134,11)"/><text x="288.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="285" y="452" width="4" height="15" fill="rgb(219,28,51)"/><text x="288.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="285" y="468" width="4" height="15" fill="rgb(205,204,42)"/><text x="288.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="285" y="484" width="4" height="15" fill="rgb(218,44,43)"/><text x="288.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="285" y="500" width="4" height="15" fill="rgb(253,93,29)"/><text x="288.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="285" y="516" width="4" height="15" fill="rgb(242,3,22)"/><text x="288.00" y="526.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 6.53%)</title><rect x="216" y="260" width="77" height="15" fill="rgb(220,185,28)"/><text x="219.00" y="270.50">onnxrunt..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 6.19%)</title><rect x="220" y="276" width="73" height="15" fill="rgb(212,152,35)"/><text x="223.00" y="286.50">onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.44%)</title><rect x="253" y="292" width="40" height="15" fill="rgb(236,75,52)"/><text x="256.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="289" y="308" width="4" height="15" fill="rgb(241,189,20)"/><text x="292.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="289" y="324" width="4" height="15" fill="rgb(237,193,30)"/><text x="292.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="289" y="340" width="4" height="15" fill="rgb(251,94,31)"/><text x="292.00" y="350.50"></text></g><g><title>0x7f1873c64066 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="289" y="356" width="4" height="15" fill="rgb(223,35,31)"/><text x="292.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="293" y="276" width="8" height="15" fill="rgb(207,169,33)"/><text x="296.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="297" y="292" width="4" height="15" fill="rgb(241,171,9)"/><text x="300.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="297" y="308" width="4" height="15" fill="rgb(226,155,14)"/><text x="300.00" y="318.50"></text></g><g><title>onnxruntime::TensorShape::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="297" y="324" width="4" height="15" fill="rgb(223,46,52)"/><text x="300.00" y="334.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.72%)</title><rect x="293" y="260" width="21" height="15" fill="rgb(234,194,24)"/><text x="296.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (3 samples, 1.03%)</title><rect x="301" y="276" width="13" height="15" fill="rgb(226,34,51)"/><text x="304.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="318" y="308" width="4" height="15" fill="rgb(227,47,0)"/><text x="321.00" y="318.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.69%)</title><rect x="318" y="276" width="8" height="15" fill="rgb(215,166,7)"/><text x="321.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.69%)</title><rect x="318" y="292" width="8" height="15" fill="rgb(237,21,38)"/><text x="321.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.34%)</title><rect x="322" y="308" width="4" height="15" fill="rgb(238,185,3)"/><text x="325.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.34%)</title><rect x="322" y="324" width="4" height="15" fill="rgb(229,206,43)"/><text x="325.00" y="334.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.37%)</title><rect x="314" y="260" width="16" height="15" fill="rgb(241,2,8)"/><text x="317.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="326" y="276" width="4" height="15" fill="rgb(210,202,35)"/><text x="329.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="326" y="292" width="4" height="15" fill="rgb(230,44,25)"/><text x="329.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="326" y="308" width="4" height="15" fill="rgb(246,51,13)"/><text x="329.00" y="318.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="330" y="260" width="4" height="15" fill="rgb(247,17,5)"/><text x="333.00" y="270.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="334" y="308" width="4" height="15" fill="rgb(208,167,11)"/><text x="337.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="334" y="324" width="4" height="15" fill="rgb(219,112,40)"/><text x="337.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="334" y="340" width="4" height="15" fill="rgb(219,116,35)"/><text x="337.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="334" y="356" width="4" height="15" fill="rgb(247,14,27)"/><text x="337.00" y="366.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 11.34%)</title><rect x="208" y="244" width="134" height="15" fill="rgb(217,179,9)"/><text x="211.00" y="254.50">onnxruntime::pyt..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="334" y="260" width="8" height="15" fill="rgb(215,16,48)"/><text x="337.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="334" y="276" width="8" height="15" fill="rgb(209,159,36)"/><text x="337.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="334" y="292" width="8" height="15" fill="rgb(251,169,29)"/><text x="337.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::ReleaseBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="338" y="308" width="4" height="15" fill="rgb(247,150,0)"/><text x="341.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="342" y="244" width="4" height="15" fill="rgb(223,215,5)"/><text x="345.00" y="254.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="342" y="260" width="4" height="15" fill="rgb(206,189,30)"/><text x="345.00" y="270.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="342" y="276" width="4" height="15" fill="rgb(226,41,34)"/><text x="345.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="342" y="292" width="4" height="15" fill="rgb(211,149,11)"/><text x="345.00" y="302.50"></text></g><g><title>profile_ort (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (66 samples, 22.68%)</title><rect x="82" y="68" width="268" height="15" fill="rgb(244,96,29)"/><text x="85.00" y="78.50">profile_ort (bench_LinearRegression..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (66 samples, 22.68%)</title><rect x="82" y="84" width="268" height="15" fill="rgb(210,60,14)"/><text x="85.00" y="94.50">setup_profile (bench_LinearRegressi..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (66 samples, 22.68%)</title><rect x="82" y="100" width="268" height="15" fill="rgb(246,123,44)"/><text x="85.00" y="110.50">profile (bench_LinearRegression_def..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (65 samples, 22.34%)</title><rect x="87" y="116" width="263" height="15" fill="rgb(241,95,40)"/><text x="90.00" y="126.50">time_predict (mlprodict/asv_benchma..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (62 samples, 21.31%)</title><rect x="99" y="132" width="251" height="15" fill="rgb(240,5,15)"/><text x="102.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (62 samples, 21.31%)</title><rect x="99" y="148" width="251" height="15" fill="rgb(220,61,51)"/><text x="102.00" y="158.50">run (mlprodict/onnxrt/onnx_infere..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (59 samples, 20.27%)</title><rect x="111" y="164" width="239" height="15" fill="rgb(234,111,48)"/><text x="114.00" y="174.50">_run_whole_runtime (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (51 samples, 17.53%)</title><rect x="143" y="180" width="207" height="15" fill="rgb(250,39,47)"/><text x="146.00" y="190.50">run (mlprodict/onnxrt/ops_w..</text></g><g><title>run (onnxruntime/capi/session.py) (51 samples, 17.53%)</title><rect x="143" y="196" width="207" height="15" fill="rgb(205,118,29)"/><text x="146.00" y="206.50">run (onnxruntime/capi/sessi..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (38 samples, 13.06%)</title><rect x="196" y="212" width="154" height="15" fill="rgb(244,69,16)"/><text x="199.00" y="222.50">pybind11::cpp_funct..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (36 samples, 12.37%)</title><rect x="204" y="228" width="146" height="15" fill="rgb(236,197,23)"/><text x="207.00" y="238.50">void pybind11::cpp..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="346" y="244" width="4" height="15" fill="rgb(213,99,50)"/><text x="349.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="346" y="260" width="4" height="15" fill="rgb(250,127,52)"/><text x="349.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="346" y="276" width="4" height="15" fill="rgb(247,19,14)"/><text x="349.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.34%)</title><rect x="447" y="196" width="4" height="15" fill="rgb(248,18,31)"/><text x="450.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 1.03%)</title><rect x="500" y="324" width="12" height="15" fill="rgb(240,166,17)"/><text x="503.00" y="334.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (2 samples, 0.69%)</title><rect x="504" y="340" width="8" height="15" fill="rgb(254,179,21)"/><text x="507.00" y="350.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c) (1 samples, 0.34%)</title><rect x="512" y="324" width="4" height="15" fill="rgb(221,50,33)"/><text x="515.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.34%)</title><rect x="512" y="340" width="4" height="15" fill="rgb(224,29,22)"/><text x="515.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.34%)</title><rect x="512" y="356" width="4" height="15" fill="rgb(232,71,15)"/><text x="515.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.34%)</title><rect x="512" y="372" width="4" height="15" fill="rgb(230,207,27)"/><text x="515.00" y="382.50"></text></g><g><title>FLOAT_dot (arraytypes.c.src) (1 samples, 0.34%)</title><rect x="516" y="340" width="4" height="15" fill="rgb(224,205,4)"/><text x="519.00" y="350.50"></text></g><g><title>sdot_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.34%)</title><rect x="516" y="356" width="4" height="15" fill="rgb(246,32,17)"/><text x="519.00" y="366.50"></text></g><g><title>sdot_kernel_16 (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.34%)</title><rect x="516" y="372" width="4" height="15" fill="rgb(217,173,53)"/><text x="519.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="520" y="340" width="4" height="15" fill="rgb(229,170,6)"/><text x="523.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (18 samples, 6.19%)</title><rect x="464" y="244" width="73" height="15" fill="rgb(228,57,35)"/><text x="467.00" y="254.50">numpy_do..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (15 samples, 5.15%)</title><rect x="476" y="260" width="61" height="15" fill="rgb(218,101,16)"/><text x="479.00" y="270.50">dot (&lt;..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (12 samples, 4.12%)</title><rect x="488" y="276" width="49" height="15" fill="rgb(248,102,30)"/><text x="491.00" y="286.50">arra..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (11 samples, 3.78%)</title><rect x="492" y="292" width="45" height="15" fill="rgb(211,51,49)"/><text x="495.00" y="302.50">arra..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (10 samples, 3.44%)</title><rect x="496" y="308" width="41" height="15" fill="rgb(244,146,42)"/><text x="499.00" y="318.50">PyA..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (5 samples, 1.72%)</title><rect x="516" y="324" width="21" height="15" fill="rgb(215,58,19)"/><text x="519.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (3 samples, 1.03%)</title><rect x="524" y="340" width="13" height="15" fill="rgb(229,111,14)"/><text x="527.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (3 samples, 1.03%)</title><rect x="524" y="356" width="13" height="15" fill="rgb(218,117,30)"/><text x="527.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 1.03%)</title><rect x="524" y="372" width="13" height="15" fill="rgb(224,169,42)"/><text x="527.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c) (3 samples, 1.03%)</title><rect x="524" y="388" width="13" height="15" fill="rgb(226,117,14)"/><text x="527.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="541" y="324" width="4" height="15" fill="rgb(238,76,11)"/><text x="544.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.69%)</title><rect x="545" y="324" width="8" height="15" fill="rgb(222,45,33)"/><text x="548.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.34%)</title><rect x="553" y="324" width="4" height="15" fill="rgb(220,37,53)"/><text x="556.00" y="334.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.34%)</title><rect x="557" y="324" width="4" height="15" fill="rgb(209,94,30)"/><text x="560.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.34%)</title><rect x="561" y="324" width="4" height="15" fill="rgb(217,1,43)"/><text x="564.00" y="334.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.34%)</title><rect x="565" y="324" width="4" height="15" fill="rgb(214,180,41)"/><text x="568.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (9 samples, 3.09%)</title><rect x="537" y="308" width="36" height="15" fill="rgb(207,229,22)"/><text x="540.00" y="318.50">Npy..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.34%)</title><rect x="569" y="324" width="4" height="15" fill="rgb(250,39,10)"/><text x="572.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.34%)</title><rect x="569" y="340" width="4" height="15" fill="rgb(237,145,45)"/><text x="572.00" y="350.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.34%)</title><rect x="569" y="356" width="4" height="15" fill="rgb(238,133,1)"/><text x="572.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (11 samples, 3.78%)</title><rect x="537" y="276" width="44" height="15" fill="rgb(220,218,9)"/><text x="540.00" y="286.50">exec..</text></g><g><title>iterator_loop (ufunc_object.c) (11 samples, 3.78%)</title><rect x="537" y="292" width="44" height="15" fill="rgb(224,120,29)"/><text x="540.00" y="302.50">iter..</text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.69%)</title><rect x="573" y="308" width="8" height="15" fill="rgb(236,1,6)"/><text x="576.00" y="318.50"></text></g><g><title>profile_pyrt (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (58 samples, 19.93%)</title><rect x="350" y="68" width="235" height="15" fill="rgb(231,93,21)"/><text x="353.00" y="78.50">profile_pyrt (bench_LinearRegre..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (58 samples, 19.93%)</title><rect x="350" y="84" width="235" height="15" fill="rgb(228,56,34)"/><text x="353.00" y="94.50">setup_profile (bench_LinearRegr..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (58 samples, 19.93%)</title><rect x="350" y="100" width="235" height="15" fill="rgb(209,133,3)"/><text x="353.00" y="110.50">profile (bench_LinearRegression..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (57 samples, 19.59%)</title><rect x="354" y="116" width="231" height="15" fill="rgb(234,111,40)"/><text x="357.00" y="126.50">time_predict (mlprodict/asv_be..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (56 samples, 19.24%)</title><rect x="358" y="132" width="227" height="15" fill="rgb(212,168,51)"/><text x="361.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchm..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (54 samples, 18.56%)</title><rect x="366" y="148" width="219" height="15" fill="rgb(222,143,40)"/><text x="369.00" y="158.50">run (mlprodict/onnxrt/onnx_i..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (48 samples, 16.49%)</title><rect x="391" y="164" width="194" height="15" fill="rgb(219,104,2)"/><text x="394.00" y="174.50">_run_sequence_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (44 samples, 15.12%)</title><rect x="407" y="180" width="178" height="15" fill="rgb(206,22,10)"/><text x="410.00" y="190.50">run (mlprodict/onnxrt/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (33 samples, 11.34%)</title><rect x="451" y="196" width="134" height="15" fill="rgb(241,23,34)"/><text x="454.00" y="206.50">run (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (33 samples, 11.34%)</title><rect x="451" y="212" width="134" height="15" fill="rgb(227,140,1)"/><text x="454.00" y="222.50">run (mlprodict/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py) (32 samples, 11.00%)</title><rect x="456" y="228" width="129" height="15" fill="rgb(242,115,54)"/><text x="459.00" y="238.50">_run (mlprodict/..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 4.12%)</title><rect x="537" y="244" width="48" height="15" fill="rgb(205,170,28)"/><text x="540.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 4.12%)</title><rect x="537" y="260" width="48" height="15" fill="rgb(214,142,25)"/><text x="540.00" y="270.50">PyUF..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.34%)</title><rect x="581" y="276" width="4" height="15" fill="rgb(227,58,42)"/><text x="584.00" y="286.50"></text></g><g><title>binop_should_defer (binop_override.h) (1 samples, 0.34%)</title><rect x="622" y="196" width="4" height="15" fill="rgb(231,3,14)"/><text x="625.00" y="206.50"></text></g><g><title>is_anyscalar_exact (scalartypes.c.src) (1 samples, 0.34%)</title><rect x="622" y="212" width="4" height="15" fill="rgb(217,74,39)"/><text x="625.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (7 samples, 2.41%)</title><rect x="626" y="212" width="28" height="15" fill="rgb(249,79,52)"/><text x="629.00" y="222.50">P..</text></g><g><title>get_array_ufunc_overrides (override.c) (7 samples, 2.41%)</title><rect x="626" y="228" width="28" height="15" fill="rgb(253,208,45)"/><text x="629.00" y="238.50">g..</text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (7 samples, 2.41%)</title><rect x="626" y="244" width="28" height="15" fill="rgb(221,194,35)"/><text x="629.00" y="254.50">P..</text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (6 samples, 2.06%)</title><rect x="630" y="260" width="24" height="15" fill="rgb(231,185,32)"/><text x="633.00" y="270.50">P..</text></g><g><title>maybe_get_attr (get_attr_string.h) (6 samples, 2.06%)</title><rect x="630" y="276" width="24" height="15" fill="rgb(215,107,37)"/><text x="633.00" y="286.50">m..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="650" y="292" width="4" height="15" fill="rgb(249,20,20)"/><text x="653.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.69%)</title><rect x="662" y="228" width="8" height="15" fill="rgb(205,222,33)"/><text x="665.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.34%)</title><rect x="670" y="228" width="5" height="15" fill="rgb(229,201,42)"/><text x="673.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.34%)</title><rect x="670" y="244" width="5" height="15" fill="rgb(208,118,12)"/><text x="673.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="670" y="260" width="5" height="15" fill="rgb(254,205,36)"/><text x="673.00" y="270.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (2 samples, 0.69%)</title><rect x="675" y="276" width="8" height="15" fill="rgb(206,38,23)"/><text x="678.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.69%)</title><rect x="683" y="276" width="8" height="15" fill="rgb(227,56,1)"/><text x="686.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.69%)</title><rect x="683" y="292" width="8" height="15" fill="rgb(210,223,31)"/><text x="686.00" y="302.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (5 samples, 1.72%)</title><rect x="675" y="228" width="20" height="15" fill="rgb(209,171,52)"/><text x="678.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c) (5 samples, 1.72%)</title><rect x="675" y="244" width="20" height="15" fill="rgb(248,141,12)"/><text x="678.00" y="254.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (5 samples, 1.72%)</title><rect x="675" y="260" width="20" height="15" fill="rgb(250,53,24)"/><text x="678.00" y="270.50"></text></g><g><title>scalar_value (scalarapi.c) (1 samples, 0.34%)</title><rect x="691" y="276" width="4" height="15" fill="rgb(242,22,2)"/><text x="694.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 3.78%)</title><rect x="654" y="212" width="45" height="15" fill="rgb(231,141,15)"/><text x="657.00" y="222.50">PyUF..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.34%)</title><rect x="695" y="228" width="4" height="15" fill="rgb(229,149,22)"/><text x="698.00" y="238.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.34%)</title><rect x="695" y="244" width="4" height="15" fill="rgb(250,124,22)"/><text x="698.00" y="254.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.34%)</title><rect x="695" y="260" width="4" height="15" fill="rgb(223,46,5)"/><text x="698.00" y="270.50"></text></g><g><title>array_add (number.c) (20 samples, 6.87%)</title><rect x="622" y="180" width="81" height="15" fill="rgb(211,36,10)"/><text x="625.00" y="190.50">array_add..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (19 samples, 6.53%)</title><rect x="626" y="196" width="77" height="15" fill="rgb(219,166,2)"/><text x="629.00" y="206.50">ufunc_ge..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="699" y="212" width="4" height="15" fill="rgb(241,208,39)"/><text x="702.00" y="222.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 1.03%)</title><rect x="784" y="196" width="12" height="15" fill="rgb(223,188,34)"/><text x="787.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (4 samples, 1.37%)</title><rect x="796" y="196" width="16" height="15" fill="rgb(233,27,36)"/><text x="799.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="833" y="212" width="12" height="15" fill="rgb(246,105,2)"/><text x="836.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py) (2 samples, 0.69%)</title><rect x="845" y="212" width="8" height="15" fill="rgb(252,68,46)"/><text x="848.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (11 samples, 3.78%)</title><rect x="812" y="196" width="45" height="15" fill="rgb(216,119,18)"/><text x="815.00" y="206.50">_ass..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="853" y="212" width="4" height="15" fill="rgb(213,218,54)"/><text x="856.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.34%)</title><rect x="857" y="196" width="4" height="15" fill="rgb(245,143,51)"/><text x="860.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (3 samples, 1.03%)</title><rect x="910" y="212" width="12" height="15" fill="rgb(237,42,2)"/><text x="913.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.69%)</title><rect x="914" y="228" width="8" height="15" fill="rgb(218,219,40)"/><text x="917.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (16 samples, 5.50%)</title><rect x="861" y="196" width="65" height="15" fill="rgb(209,40,35)"/><text x="864.00" y="206.50">_num_sa..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.34%)</title><rect x="922" y="212" width="4" height="15" fill="rgb(206,153,1)"/><text x="925.00" y="222.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.69%)</title><rect x="926" y="196" width="8" height="15" fill="rgb(208,173,4)"/><text x="929.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.34%)</title><rect x="930" y="212" width="4" height="15" fill="rgb(206,155,35)"/><text x="933.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (2 samples, 0.69%)</title><rect x="946" y="212" width="8" height="15" fill="rgb(215,113,18)"/><text x="949.00" y="222.50"></text></g><g><title>0x7f1873b9b776 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="950" y="228" width="4" height="15" fill="rgb(209,214,54)"/><text x="953.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (9 samples, 3.09%)</title><rect x="934" y="196" width="37" height="15" fill="rgb(238,201,33)"/><text x="937.00" y="206.50">iss..</text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (4 samples, 1.37%)</title><rect x="954" y="212" width="17" height="15" fill="rgb(208,108,20)"/><text x="957.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (73 samples, 25.09%)</title><rect x="703" y="180" width="296" height="15" fill="rgb(230,191,41)"/><text x="706.00" y="190.50">check_array (sklearn/utils/validation.p..</text></g><g><title>simplefilter (warnings.py) (7 samples, 2.41%)</title><rect x="971" y="196" width="28" height="15" fill="rgb(221,20,35)"/><text x="974.00" y="206.50">s..</text></g><g><title>_add_filter (warnings.py) (6 samples, 2.06%)</title><rect x="975" y="212" width="24" height="15" fill="rgb(217,52,0)"/><text x="978.00" y="222.50">_..</text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.69%)</title><rect x="1039" y="212" width="9" height="15" fill="rgb(247,69,29)"/><text x="1042.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (13 samples, 4.47%)</title><rect x="1011" y="196" width="53" height="15" fill="rgb(213,146,2)"/><text x="1014.00" y="206.50">&lt;list..</text></g><g><title>unicode_startswith (python3.7) (4 samples, 1.37%)</title><rect x="1048" y="212" width="16" height="15" fill="rgb(205,76,35)"/><text x="1051.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (17 samples, 5.84%)</title><rect x="999" y="180" width="69" height="15" fill="rgb(235,29,42)"/><text x="1002.00" y="190.50">check_i..</text></g><g><title>isclass (inspect.py) (1 samples, 0.34%)</title><rect x="1064" y="196" width="4" height="15" fill="rgb(226,218,52)"/><text x="1067.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.34%)</title><rect x="1076" y="196" width="4" height="15" fill="rgb(248,204,23)"/><text x="1079.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.34%)</title><rect x="1080" y="212" width="4" height="15" fill="rgb(234,0,16)"/><text x="1083.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.34%)</title><rect x="1080" y="228" width="4" height="15" fill="rgb(246,108,5)"/><text x="1083.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.34%)</title><rect x="1080" y="244" width="4" height="15" fill="rgb(215,173,15)"/><text x="1083.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (3 samples, 1.03%)</title><rect x="1088" y="244" width="12" height="15" fill="rgb(216,132,53)"/><text x="1091.00" y="254.50"></text></g><g><title>DOUBLE_dot (arraytypes.c.src) (1 samples, 0.34%)</title><rect x="1096" y="260" width="4" height="15" fill="rgb(247,18,20)"/><text x="1099.00" y="270.50"></text></g><g><title>ddot_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.34%)</title><rect x="1096" y="276" width="4" height="15" fill="rgb(221,105,12)"/><text x="1099.00" y="286.50"></text></g><g><title>dot_compute (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.34%)</title><rect x="1096" y="292" width="4" height="15" fill="rgb(245,101,10)"/><text x="1099.00" y="302.50"></text></g><g><title>ddot_kernel_8 (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.34%)</title><rect x="1096" y="308" width="4" height="15" fill="rgb(245,137,46)"/><text x="1099.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.34%)</title><rect x="1108" y="292" width="4" height="15" fill="rgb(226,167,19)"/><text x="1111.00" y="302.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (2 samples, 0.69%)</title><rect x="1112" y="308" width="9" height="15" fill="rgb(224,89,31)"/><text x="1115.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.69%)</title><rect x="1112" y="324" width="9" height="15" fill="rgb(222,49,36)"/><text x="1115.00" y="334.50"></text></g><g><title>0x7f1873b3da19 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1117" y="340" width="4" height="15" fill="rgb(240,150,30)"/><text x="1120.00" y="350.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c) (1 samples, 0.34%)</title><rect x="1117" y="356" width="4" height="15" fill="rgb(216,120,14)"/><text x="1120.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (5 samples, 1.72%)</title><rect x="1104" y="276" width="21" height="15" fill="rgb(207,102,46)"/><text x="1107.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 1.03%)</title><rect x="1112" y="292" width="13" height="15" fill="rgb(206,64,48)"/><text x="1115.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="1121" y="308" width="4" height="15" fill="rgb(243,41,51)"/><text x="1124.00" y="318.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h) (1 samples, 0.34%)</title><rect x="1125" y="340" width="4" height="15" fill="rgb(215,179,31)"/><text x="1128.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (8 samples, 2.75%)</title><rect x="1100" y="260" width="33" height="15" fill="rgb(218,217,19)"/><text x="1103.00" y="270.50">np..</text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.69%)</title><rect x="1125" y="276" width="8" height="15" fill="rgb(244,52,41)"/><text x="1128.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.69%)</title><rect x="1125" y="292" width="8" height="15" fill="rgb(236,156,4)"/><text x="1128.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.69%)</title><rect x="1125" y="308" width="8" height="15" fill="rgb(233,156,32)"/><text x="1128.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (2 samples, 0.69%)</title><rect x="1125" y="324" width="8" height="15" fill="rgb(242,56,54)"/><text x="1128.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.34%)</title><rect x="1129" y="340" width="4" height="15" fill="rgb(207,181,17)"/><text x="1132.00" y="350.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h) (1 samples, 0.34%)</title><rect x="1129" y="356" width="4" height="15" fill="rgb(235,208,7)"/><text x="1132.00" y="366.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1133" y="260" width="4" height="15" fill="rgb(243,198,34)"/><text x="1136.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (10 samples, 3.44%)</title><rect x="1100" y="244" width="41" height="15" fill="rgb(252,129,0)"/><text x="1103.00" y="254.50">Npy..</text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1137" y="260" width="4" height="15" fill="rgb(243,102,10)"/><text x="1140.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1141" y="244" width="4" height="15" fill="rgb(235,10,8)"/><text x="1144.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="1141" y="260" width="4" height="15" fill="rgb(228,173,34)"/><text x="1144.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="1141" y="276" width="4" height="15" fill="rgb(248,127,6)"/><text x="1144.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.34%)</title><rect x="1141" y="292" width="4" height="15" fill="rgb(236,168,17)"/><text x="1144.00" y="302.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.34%)</title><rect x="1145" y="244" width="4" height="15" fill="rgb(235,131,26)"/><text x="1148.00" y="254.50"></text></g><g><title>NpyIter_GetOperandArray (nditer_api.c) (1 samples, 0.34%)</title><rect x="1149" y="244" width="4" height="15" fill="rgb(232,169,40)"/><text x="1152.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c) (1 samples, 0.34%)</title><rect x="1153" y="244" width="4" height="15" fill="rgb(228,14,48)"/><text x="1156.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="1157" y="244" width="4" height="15" fill="rgb(240,212,30)"/><text x="1160.00" y="254.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="1157" y="260" width="4" height="15" fill="rgb(224,176,46)"/><text x="1160.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.34%)</title><rect x="1157" y="276" width="4" height="15" fill="rgb(211,100,28)"/><text x="1160.00" y="286.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.34%)</title><rect x="1157" y="292" width="4" height="15" fill="rgb(232,14,6)"/><text x="1160.00" y="302.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.34%)</title><rect x="1157" y="308" width="4" height="15" fill="rgb(214,137,17)"/><text x="1160.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1161" y="244" width="4" height="15" fill="rgb(241,169,37)"/><text x="1164.00" y="254.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.34%)</title><rect x="1165" y="244" width="4" height="15" fill="rgb(209,221,10)"/><text x="1168.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1169" y="244" width="4" height="15" fill="rgb(209,140,32)"/><text x="1172.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.34%)</title><rect x="1169" y="260" width="4" height="15" fill="rgb(218,79,28)"/><text x="1172.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (142 samples, 48.80%)</title><rect x="602" y="132" width="575" height="15" fill="rgb(206,191,0)"/><text x="605.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/linear_model/_base.py) (140 samples, 48.11%)</title><rect x="610" y="148" width="567" height="15" fill="rgb(229,140,30)"/><text x="613.00" y="158.50">predict (sklearn/linear_model/_base.py)</text></g><g><title>_decision_function (sklearn/linear_model/_base.py) (140 samples, 48.11%)</title><rect x="610" y="164" width="567" height="15" fill="rgb(207,197,48)"/><text x="613.00" y="174.50">_decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (27 samples, 9.28%)</title><rect x="1068" y="180" width="109" height="15" fill="rgb(218,142,40)"/><text x="1071.00" y="190.50">safe_sparse_d..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (24 samples, 8.25%)</title><rect x="1080" y="196" width="97" height="15" fill="rgb(244,118,6)"/><text x="1083.00" y="206.50">ufunc_gener..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (23 samples, 7.90%)</title><rect x="1084" y="212" width="93" height="15" fill="rgb(209,200,54)"/><text x="1087.00" y="222.50">PyUFunc_Gen..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (23 samples, 7.90%)</title><rect x="1084" y="228" width="93" height="15" fill="rgb(251,3,47)"/><text x="1087.00" y="238.50">PyUFunc_Gen..</text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1173" y="244" width="4" height="15" fill="rgb(218,26,27)"/><text x="1176.00" y="254.50"></text></g><g><title>profile_skl (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (147 samples, 50.52%)</title><rect x="585" y="68" width="596" height="15" fill="rgb(223,187,51)"/><text x="588.00" y="78.50">profile_skl (bench_LinearRegression_default_m_reg_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (147 samples, 50.52%)</title><rect x="585" y="84" width="596" height="15" fill="rgb(251,46,0)"/><text x="588.00" y="94.50">setup_profile (bench_LinearRegression_default_m_reg_1_50_12_float_.py)</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (147 samples, 50.52%)</title><rect x="585" y="100" width="596" height="15" fill="rgb(230,224,44)"/><text x="588.00" y="110.50">profile (bench_LinearRegression_default_m_reg_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (146 samples, 50.17%)</title><rect x="589" y="116" width="592" height="15" fill="rgb(218,172,20)"/><text x="592.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.34%)</title><rect x="1177" y="132" width="4" height="15" fill="rgb(249,22,4)"/><text x="1180.00" y="142.50"></text></g><g><title>all (291 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(227,77,31)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (290 samples, 99.66%)</title><rect x="14" y="52" width="1176" height="15" fill="rgb(230,224,46)"/><text x="17.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_m_reg_1_50_12_float_.py)</text></g><g><title>start (bench_LinearRegression_default_m_reg_1_50_12_float_.py) (2 samples, 0.69%)</title><rect x="1181" y="68" width="9" height="15" fill="rgb(208,137,36)"/><text x="1184.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py) (2 samples, 0.69%)</title><rect x="1181" y="84" width="9" height="15" fill="rgb(247,29,43)"/><text x="1184.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.69%)</title><rect x="1181" y="100" width="9" height="15" fill="rgb(214,95,51)"/><text x="1184.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.69%)</title><rect x="1181" y="116" width="9" height="15" fill="rgb(240,154,33)"/><text x="1184.00" y="126.50"></text></g><g><title>train_test_split (sklearn/model_selection/_split.py) (2 samples, 0.69%)</title><rect x="1181" y="132" width="9" height="15" fill="rgb(253,157,37)"/><text x="1184.00" y="142.50"></text></g><g><title>split (sklearn/model_selection/_split.py) (2 samples, 0.69%)</title><rect x="1181" y="148" width="9" height="15" fill="rgb(240,143,27)"/><text x="1184.00" y="158.50"></text></g><g><title>_iter_indices (sklearn/model_selection/_split.py) (2 samples, 0.69%)</title><rect x="1181" y="164" width="9" height="15" fill="rgb(239,70,17)"/><text x="1184.00" y="174.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (2 samples, 0.69%)</title><rect x="1181" y="180" width="9" height="15" fill="rgb(222,123,34)"/><text x="1184.00" y="190.50"></text></g><g><title>__init__ (mtrand.c) (2 samples, 0.69%)</title><rect x="1181" y="196" width="9" height="15" fill="rgb(252,85,51)"/><text x="1184.00" y="206.50"></text></g><g><title>RandomState___init__ (mtrand.c) (2 samples, 0.69%)</title><rect x="1181" y="212" width="9" height="15" fill="rgb(207,24,49)"/><text x="1184.00" y="222.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (2 samples, 0.69%)</title><rect x="1181" y="228" width="9" height="15" fill="rgb(226,141,29)"/><text x="1184.00" y="238.50"></text></g><g><title>__init__ (mt19937.c) (2 samples, 0.69%)</title><rect x="1181" y="244" width="9" height="15" fill="rgb(207,42,31)"/><text x="1184.00" y="254.50"></text></g><g><title>MT19937___init__ (mt19937.c) (2 samples, 0.69%)</title><rect x="1181" y="260" width="9" height="15" fill="rgb(254,47,53)"/><text x="1184.00" y="270.50"></text></g><g><title>inner (contextlib.py) (2 samples, 0.69%)</title><rect x="1181" y="276" width="9" height="15" fill="rgb(210,203,48)"/><text x="1184.00" y="286.50"></text></g><g><title>generate_state (bit_generator.c) (2 samples, 0.69%)</title><rect x="1181" y="292" width="9" height="15" fill="rgb(236,176,26)"/><text x="1184.00" y="302.50"></text></g><g><title>generate_state (bit_generator.c) (2 samples, 0.69%)</title><rect x="1181" y="308" width="9" height="15" fill="rgb(222,151,12)"/><text x="1184.00" y="318.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.34%)</title><rect x="1185" y="324" width="5" height="15" fill="rgb(249,176,33)"/><text x="1188.00" y="334.50"></text></g><g><title>UINT_setitem (arraytypes.c.src) (1 samples, 0.34%)</title><rect x="1185" y="340" width="5" height="15" fill="rgb(216,120,32)"/><text x="1188.00" y="350.50"></text></g><g><title>MyPyLong_AsUnsignedLong (arraytypes.c.src) (1 samples, 0.34%)</title><rect x="1185" y="356" width="5" height="15" fill="rgb(231,18,45)"/><text x="1188.00" y="366.50"></text></g></g></svg>