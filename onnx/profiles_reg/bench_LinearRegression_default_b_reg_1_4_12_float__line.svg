<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1462" onload="init(evt)" viewBox="0 0 1200 1462" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1462" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1445.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1445.00"> </text><g id="frames"><g><title>_handle_ns (pkg_resources/__init__.py:2199) (1 samples, 0.28%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(231,84,31)"/><text x="13.00" y="926.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.28%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(233,21,13)"/><text x="13.00" y="942.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.55%)</title><rect x="10" y="852" width="6" height="15" fill="rgb(212,3,4)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.55%)</title><rect x="10" y="868" width="6" height="15" fill="rgb(218,184,27)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.55%)</title><rect x="10" y="884" width="6" height="15" fill="rgb(222,188,28)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.55%)</title><rect x="10" y="900" width="6" height="15" fill="rgb(253,143,14)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.28%)</title><rect x="13" y="916" width="3" height="15" fill="rgb(241,162,2)"/><text x="16.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.28%)</title><rect x="13" y="932" width="3" height="15" fill="rgb(206,43,52)"/><text x="16.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.28%)</title><rect x="13" y="948" width="3" height="15" fill="rgb(242,33,20)"/><text x="16.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.28%)</title><rect x="13" y="964" width="3" height="15" fill="rgb(213,101,4)"/><text x="16.00" y="974.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.28%)</title><rect x="16" y="900" width="3" height="15" fill="rgb(236,53,18)"/><text x="19.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.28%)</title><rect x="16" y="916" width="3" height="15" fill="rgb(221,153,7)"/><text x="19.00" y="926.50"></text></g><g><title>__close_nocancel (libc-2.29.so) (1 samples, 0.28%)</title><rect x="16" y="932" width="3" height="15" fill="rgb(238,9,48)"/><text x="19.00" y="942.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_b_reg.py:2) (4 samples, 1.11%)</title><rect x="10" y="148" width="13" height="15" fill="rgb(245,224,11)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="10" y="164" width="13" height="15" fill="rgb(251,160,43)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.11%)</title><rect x="10" y="180" width="13" height="15" fill="rgb(206,229,27)"/><text x="13.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="10" y="196" width="13" height="15" fill="rgb(208,46,38)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="10" y="212" width="13" height="15" fill="rgb(236,192,13)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.11%)</title><rect x="10" y="228" width="13" height="15" fill="rgb(237,178,50)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.11%)</title><rect x="10" y="244" width="13" height="15" fill="rgb(206,14,20)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.11%)</title><rect x="10" y="260" width="13" height="15" fill="rgb(220,129,51)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="10" y="276" width="13" height="15" fill="rgb(239,3,5)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.11%)</title><rect x="10" y="292" width="13" height="15" fill="rgb(243,55,45)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="10" y="308" width="13" height="15" fill="rgb(209,43,8)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.11%)</title><rect x="10" y="324" width="13" height="15" fill="rgb(224,180,20)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.11%)</title><rect x="10" y="340" width="13" height="15" fill="rgb(212,58,34)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.11%)</title><rect x="10" y="356" width="13" height="15" fill="rgb(205,167,14)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="10" y="372" width="13" height="15" fill="rgb(236,0,6)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.11%)</title><rect x="10" y="388" width="13" height="15" fill="rgb(235,91,20)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="10" y="404" width="13" height="15" fill="rgb(226,175,33)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.11%)</title><rect x="10" y="420" width="13" height="15" fill="rgb(212,145,1)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.11%)</title><rect x="10" y="436" width="13" height="15" fill="rgb(224,216,28)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.11%)</title><rect x="10" y="452" width="13" height="15" fill="rgb(250,164,21)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="10" y="468" width="13" height="15" fill="rgb(242,138,10)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.11%)</title><rect x="10" y="484" width="13" height="15" fill="rgb(236,214,34)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="10" y="500" width="13" height="15" fill="rgb(221,118,35)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.11%)</title><rect x="10" y="516" width="13" height="15" fill="rgb(233,152,0)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.11%)</title><rect x="10" y="532" width="13" height="15" fill="rgb(251,192,54)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.11%)</title><rect x="10" y="548" width="13" height="15" fill="rgb(207,220,49)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="10" y="564" width="13" height="15" fill="rgb(224,220,35)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.11%)</title><rect x="10" y="580" width="13" height="15" fill="rgb(246,114,51)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="10" y="596" width="13" height="15" fill="rgb(244,122,35)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.11%)</title><rect x="10" y="612" width="13" height="15" fill="rgb(205,77,23)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="10" y="628" width="13" height="15" fill="rgb(216,135,37)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="10" y="644" width="13" height="15" fill="rgb(250,154,50)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.11%)</title><rect x="10" y="660" width="13" height="15" fill="rgb(235,80,53)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.11%)</title><rect x="10" y="676" width="13" height="15" fill="rgb(223,28,33)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.11%)</title><rect x="10" y="692" width="13" height="15" fill="rgb(244,97,5)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="10" y="708" width="13" height="15" fill="rgb(215,203,21)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.11%)</title><rect x="10" y="724" width="13" height="15" fill="rgb(243,20,6)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="10" y="740" width="13" height="15" fill="rgb(213,185,15)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.11%)</title><rect x="10" y="756" width="13" height="15" fill="rgb(249,77,28)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.11%)</title><rect x="10" y="772" width="13" height="15" fill="rgb(230,130,30)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.11%)</title><rect x="10" y="788" width="13" height="15" fill="rgb(247,147,33)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="10" y="804" width="13" height="15" fill="rgb(214,95,52)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 1.11%)</title><rect x="10" y="820" width="13" height="15" fill="rgb(212,26,42)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 1.11%)</title><rect x="10" y="836" width="13" height="15" fill="rgb(224,209,32)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.55%)</title><rect x="16" y="852" width="7" height="15" fill="rgb(212,53,41)"/><text x="19.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.55%)</title><rect x="16" y="868" width="7" height="15" fill="rgb(229,101,40)"/><text x="19.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.55%)</title><rect x="16" y="884" width="7" height="15" fill="rgb(237,22,41)"/><text x="19.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.28%)</title><rect x="19" y="900" width="4" height="15" fill="rgb(226,130,22)"/><text x="22.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2581) (1 samples, 0.28%)</title><rect x="19" y="916" width="4" height="15" fill="rgb(252,131,20)"/><text x="22.00" y="926.50"></text></g><g><title>splitext (posixpath.py:129) (1 samples, 0.28%)</title><rect x="19" y="932" width="4" height="15" fill="rgb(253,90,5)"/><text x="22.00" y="942.50"></text></g><g><title>_splitext (genericpath.py:124) (1 samples, 0.28%)</title><rect x="19" y="948" width="4" height="15" fill="rgb(229,151,11)"/><text x="22.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.28%)</title><rect x="23" y="628" width="3" height="15" fill="rgb(207,80,48)"/><text x="26.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="23" y="644" width="3" height="15" fill="rgb(216,24,18)"/><text x="26.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="23" y="660" width="3" height="15" fill="rgb(231,209,38)"/><text x="26.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="23" y="676" width="3" height="15" fill="rgb(237,149,17)"/><text x="26.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="23" y="692" width="3" height="15" fill="rgb(218,173,38)"/><text x="26.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.28%)</title><rect x="23" y="708" width="3" height="15" fill="rgb(235,70,39)"/><text x="26.00" y="718.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.28%)</title><rect x="23" y="724" width="3" height="15" fill="rgb(218,39,40)"/><text x="26.00" y="734.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.28%)</title><rect x="23" y="740" width="3" height="15" fill="rgb(253,228,30)"/><text x="26.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="23" y="756" width="3" height="15" fill="rgb(220,69,6)"/><text x="26.00" y="766.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.28%)</title><rect x="23" y="772" width="3" height="15" fill="rgb(205,34,23)"/><text x="26.00" y="782.50"></text></g><g><title>0x7fb19a8f5995 (libdl-2.29.so) (1 samples, 0.28%)</title><rect x="23" y="788" width="3" height="15" fill="rgb(247,113,50)"/><text x="26.00" y="798.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.28%)</title><rect x="23" y="804" width="3" height="15" fill="rgb(206,113,23)"/><text x="26.00" y="814.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.28%)</title><rect x="23" y="820" width="3" height="15" fill="rgb(209,199,3)"/><text x="26.00" y="830.50"></text></g><g><title>0x7fb19a8f5258 (libdl-2.29.so) (1 samples, 0.28%)</title><rect x="23" y="836" width="3" height="15" fill="rgb(251,151,0)"/><text x="26.00" y="846.50"></text></g><g><title>0x7fb19a942d7a (ld-2.29.so) (1 samples, 0.28%)</title><rect x="23" y="852" width="3" height="15" fill="rgb(220,179,5)"/><text x="26.00" y="862.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.28%)</title><rect x="23" y="868" width="3" height="15" fill="rgb(251,213,20)"/><text x="26.00" y="878.50"></text></g><g><title>0x7fb19a94318b (ld-2.29.so) (1 samples, 0.28%)</title><rect x="23" y="884" width="3" height="15" fill="rgb(208,39,48)"/><text x="26.00" y="894.50"></text></g><g><title>0x7fb19a938bcb (ld-2.29.so) (1 samples, 0.28%)</title><rect x="23" y="900" width="3" height="15" fill="rgb(222,134,17)"/><text x="26.00" y="910.50"></text></g><g><title>0x7fb19a9371b6 (ld-2.29.so) (1 samples, 0.28%)</title><rect x="23" y="916" width="3" height="15" fill="rgb(210,108,24)"/><text x="26.00" y="926.50"></text></g><g><title>0x7fb19a94aa04 (ld-2.29.so) (1 samples, 0.28%)</title><rect x="23" y="932" width="3" height="15" fill="rgb(217,10,33)"/><text x="26.00" y="942.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.55%)</title><rect x="23" y="436" width="6" height="15" fill="rgb(239,154,40)"/><text x="26.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="23" y="452" width="6" height="15" fill="rgb(219,60,26)"/><text x="26.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="23" y="468" width="6" height="15" fill="rgb(218,208,54)"/><text x="26.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="23" y="484" width="6" height="15" fill="rgb(230,38,48)"/><text x="26.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="23" y="500" width="6" height="15" fill="rgb(219,65,31)"/><text x="26.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="23" y="516" width="6" height="15" fill="rgb(253,19,12)"/><text x="26.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.55%)</title><rect x="23" y="532" width="6" height="15" fill="rgb(239,204,30)"/><text x="26.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="23" y="548" width="6" height="15" fill="rgb(214,137,10)"/><text x="26.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="23" y="564" width="6" height="15" fill="rgb(227,39,16)"/><text x="26.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="23" y="580" width="6" height="15" fill="rgb(205,158,41)"/><text x="26.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="23" y="596" width="6" height="15" fill="rgb(237,103,18)"/><text x="26.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="23" y="612" width="6" height="15" fill="rgb(230,101,33)"/><text x="26.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.28%)</title><rect x="26" y="628" width="3" height="15" fill="rgb(243,209,50)"/><text x="29.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="26" y="644" width="3" height="15" fill="rgb(251,49,41)"/><text x="29.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="26" y="660" width="3" height="15" fill="rgb(218,100,7)"/><text x="29.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="26" y="676" width="3" height="15" fill="rgb(226,4,51)"/><text x="29.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="26" y="692" width="3" height="15" fill="rgb(249,65,46)"/><text x="29.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="26" y="708" width="3" height="15" fill="rgb(206,16,40)"/><text x="29.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.28%)</title><rect x="26" y="724" width="3" height="15" fill="rgb(212,16,53)"/><text x="29.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="26" y="740" width="3" height="15" fill="rgb(232,17,19)"/><text x="29.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="26" y="756" width="3" height="15" fill="rgb(212,41,21)"/><text x="29.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="26" y="772" width="3" height="15" fill="rgb(211,103,31)"/><text x="29.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="26" y="788" width="3" height="15" fill="rgb(218,65,48)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="26" y="804" width="3" height="15" fill="rgb(237,125,41)"/><text x="29.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.28%)</title><rect x="26" y="820" width="3" height="15" fill="rgb(247,188,1)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="26" y="836" width="3" height="15" fill="rgb(224,112,11)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="26" y="852" width="3" height="15" fill="rgb(208,160,22)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="26" y="868" width="3" height="15" fill="rgb(247,83,40)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="26" y="884" width="3" height="15" fill="rgb(240,116,41)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="26" y="900" width="3" height="15" fill="rgb(227,62,4)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.28%)</title><rect x="26" y="916" width="3" height="15" fill="rgb(215,202,51)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="26" y="932" width="3" height="15" fill="rgb(244,180,30)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="26" y="948" width="3" height="15" fill="rgb(214,118,31)"/><text x="29.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="26" y="964" width="3" height="15" fill="rgb(241,37,24)"/><text x="29.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="26" y="980" width="3" height="15" fill="rgb(220,155,3)"/><text x="29.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="26" y="996" width="3" height="15" fill="rgb(238,180,49)"/><text x="29.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:104) (1 samples, 0.28%)</title><rect x="26" y="1012" width="3" height="15" fill="rgb(235,229,43)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="26" y="1028" width="3" height="15" fill="rgb(217,1,41)"/><text x="29.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="26" y="1044" width="3" height="15" fill="rgb(235,225,0)"/><text x="29.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="26" y="1060" width="3" height="15" fill="rgb(210,134,8)"/><text x="29.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.28%)</title><rect x="26" y="1076" width="3" height="15" fill="rgb(250,127,15)"/><text x="29.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.28%)</title><rect x="26" y="1092" width="3" height="15" fill="rgb(206,25,32)"/><text x="29.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.28%)</title><rect x="26" y="1108" width="3" height="15" fill="rgb(238,117,5)"/><text x="29.00" y="1118.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.28%)</title><rect x="29" y="1364" width="3" height="15" fill="rgb(222,30,30)"/><text x="32.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.28%)</title><rect x="29" y="1380" width="3" height="15" fill="rgb(252,122,2)"/><text x="32.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.28%)</title><rect x="29" y="1396" width="3" height="15" fill="rgb(236,152,19)"/><text x="32.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.28%)</title><rect x="29" y="1412" width="3" height="15" fill="rgb(213,136,27)"/><text x="32.00" y="1422.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1_4_12_float_.py:4) (8 samples, 2.22%)</title><rect x="10" y="52" width="26" height="15" fill="rgb(209,71,16)"/><text x="13.00" y="62.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.22%)</title><rect x="10" y="68" width="26" height="15" fill="rgb(209,161,4)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.22%)</title><rect x="10" y="84" width="26" height="15" fill="rgb(254,177,42)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.22%)</title><rect x="10" y="100" width="26" height="15" fill="rgb(241,85,18)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.22%)</title><rect x="10" y="116" width="26" height="15" fill="rgb(225,22,28)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.22%)</title><rect x="10" y="132" width="26" height="15" fill="rgb(243,147,30)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_b_reg.py:7) (4 samples, 1.11%)</title><rect x="23" y="148" width="13" height="15" fill="rgb(230,88,21)"/><text x="26.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="23" y="164" width="13" height="15" fill="rgb(227,190,11)"/><text x="26.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.11%)</title><rect x="23" y="180" width="13" height="15" fill="rgb(215,178,17)"/><text x="26.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.11%)</title><rect x="23" y="196" width="13" height="15" fill="rgb(233,130,8)"/><text x="26.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.11%)</title><rect x="23" y="212" width="13" height="15" fill="rgb(238,137,17)"/><text x="26.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="23" y="228" width="13" height="15" fill="rgb(223,182,6)"/><text x="26.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 1.11%)</title><rect x="23" y="244" width="13" height="15" fill="rgb(211,192,35)"/><text x="26.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="23" y="260" width="13" height="15" fill="rgb(247,30,39)"/><text x="26.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.11%)</title><rect x="23" y="276" width="13" height="15" fill="rgb(217,138,45)"/><text x="26.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.11%)</title><rect x="23" y="292" width="13" height="15" fill="rgb(244,174,16)"/><text x="26.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.11%)</title><rect x="23" y="308" width="13" height="15" fill="rgb(254,54,33)"/><text x="26.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="23" y="324" width="13" height="15" fill="rgb(207,104,43)"/><text x="26.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 1.11%)</title><rect x="23" y="340" width="13" height="15" fill="rgb(208,99,1)"/><text x="26.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="23" y="356" width="13" height="15" fill="rgb(234,30,27)"/><text x="26.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.11%)</title><rect x="23" y="372" width="13" height="15" fill="rgb(223,110,7)"/><text x="26.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.11%)</title><rect x="23" y="388" width="13" height="15" fill="rgb(218,228,9)"/><text x="26.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.11%)</title><rect x="23" y="404" width="13" height="15" fill="rgb(244,174,31)"/><text x="26.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="23" y="420" width="13" height="15" fill="rgb(234,109,51)"/><text x="26.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.55%)</title><rect x="29" y="436" width="7" height="15" fill="rgb(218,129,23)"/><text x="32.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="29" y="452" width="7" height="15" fill="rgb(210,212,12)"/><text x="32.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.55%)</title><rect x="29" y="468" width="7" height="15" fill="rgb(209,25,44)"/><text x="32.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="29" y="484" width="7" height="15" fill="rgb(245,229,47)"/><text x="32.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="29" y="500" width="7" height="15" fill="rgb(236,63,53)"/><text x="32.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="29" y="516" width="7" height="15" fill="rgb(242,101,22)"/><text x="32.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="29" y="532" width="7" height="15" fill="rgb(249,131,11)"/><text x="32.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="29" y="548" width="7" height="15" fill="rgb(228,35,43)"/><text x="32.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="29" y="564" width="7" height="15" fill="rgb(240,149,26)"/><text x="32.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.55%)</title><rect x="29" y="580" width="7" height="15" fill="rgb(232,171,38)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="29" y="596" width="7" height="15" fill="rgb(226,92,10)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="29" y="612" width="7" height="15" fill="rgb(254,156,21)"/><text x="32.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="29" y="628" width="7" height="15" fill="rgb(210,78,47)"/><text x="32.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="29" y="644" width="7" height="15" fill="rgb(237,157,28)"/><text x="32.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="29" y="660" width="7" height="15" fill="rgb(211,135,41)"/><text x="32.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.55%)</title><rect x="29" y="676" width="7" height="15" fill="rgb(216,79,5)"/><text x="32.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="29" y="692" width="7" height="15" fill="rgb(234,94,33)"/><text x="32.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="29" y="708" width="7" height="15" fill="rgb(239,42,46)"/><text x="32.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="29" y="724" width="7" height="15" fill="rgb(249,40,42)"/><text x="32.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="29" y="740" width="7" height="15" fill="rgb(251,123,0)"/><text x="32.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="29" y="756" width="7" height="15" fill="rgb(252,16,28)"/><text x="32.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.55%)</title><rect x="29" y="772" width="7" height="15" fill="rgb(236,186,33)"/><text x="32.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="29" y="788" width="7" height="15" fill="rgb(235,212,30)"/><text x="32.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="29" y="804" width="7" height="15" fill="rgb(223,34,4)"/><text x="32.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="29" y="820" width="7" height="15" fill="rgb(223,159,31)"/><text x="32.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="29" y="836" width="7" height="15" fill="rgb(242,10,43)"/><text x="32.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="29" y="852" width="7" height="15" fill="rgb(218,58,23)"/><text x="32.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.55%)</title><rect x="29" y="868" width="7" height="15" fill="rgb(214,84,28)"/><text x="32.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="29" y="884" width="7" height="15" fill="rgb(249,215,38)"/><text x="32.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.55%)</title><rect x="29" y="900" width="7" height="15" fill="rgb(233,64,11)"/><text x="32.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="29" y="916" width="7" height="15" fill="rgb(207,148,30)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="29" y="932" width="7" height="15" fill="rgb(212,90,7)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="29" y="948" width="7" height="15" fill="rgb(239,134,27)"/><text x="32.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="29" y="964" width="7" height="15" fill="rgb(218,38,3)"/><text x="32.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="29" y="980" width="7" height="15" fill="rgb(227,40,9)"/><text x="32.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="29" y="996" width="7" height="15" fill="rgb(228,28,10)"/><text x="32.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.55%)</title><rect x="29" y="1012" width="7" height="15" fill="rgb(221,56,10)"/><text x="32.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="29" y="1028" width="7" height="15" fill="rgb(236,106,46)"/><text x="32.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="29" y="1044" width="7" height="15" fill="rgb(234,177,26)"/><text x="32.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="29" y="1060" width="7" height="15" fill="rgb(243,137,24)"/><text x="32.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="29" y="1076" width="7" height="15" fill="rgb(207,193,10)"/><text x="32.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="29" y="1092" width="7" height="15" fill="rgb(209,218,4)"/><text x="32.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 0.55%)</title><rect x="29" y="1108" width="7" height="15" fill="rgb(224,71,54)"/><text x="32.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="29" y="1124" width="7" height="15" fill="rgb(242,105,29)"/><text x="32.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="29" y="1140" width="7" height="15" fill="rgb(214,140,37)"/><text x="32.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="29" y="1156" width="7" height="15" fill="rgb(239,100,31)"/><text x="32.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="29" y="1172" width="7" height="15" fill="rgb(253,174,9)"/><text x="32.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="29" y="1188" width="7" height="15" fill="rgb(208,143,5)"/><text x="32.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (2 samples, 0.55%)</title><rect x="29" y="1204" width="7" height="15" fill="rgb(237,78,13)"/><text x="32.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="29" y="1220" width="7" height="15" fill="rgb(249,116,5)"/><text x="32.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="29" y="1236" width="7" height="15" fill="rgb(246,87,41)"/><text x="32.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="29" y="1252" width="7" height="15" fill="rgb(205,229,45)"/><text x="32.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="29" y="1268" width="7" height="15" fill="rgb(217,46,29)"/><text x="32.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="29" y="1284" width="7" height="15" fill="rgb(209,113,32)"/><text x="32.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (2 samples, 0.55%)</title><rect x="29" y="1300" width="7" height="15" fill="rgb(205,5,1)"/><text x="32.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (2 samples, 0.55%)</title><rect x="29" y="1316" width="7" height="15" fill="rgb(222,104,36)"/><text x="32.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (2 samples, 0.55%)</title><rect x="29" y="1332" width="7" height="15" fill="rgb(206,181,52)"/><text x="32.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (2 samples, 0.55%)</title><rect x="29" y="1348" width="7" height="15" fill="rgb(248,64,36)"/><text x="32.00" y="1358.50"></text></g><g><title>getblock (inspect.py:941) (1 samples, 0.28%)</title><rect x="32" y="1364" width="4" height="15" fill="rgb(223,208,10)"/><text x="35.00" y="1374.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (3 samples, 0.83%)</title><rect x="62" y="180" width="10" height="15" fill="rgb(233,122,32)"/><text x="65.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.55%)</title><rect x="72" y="180" width="6" height="15" fill="rgb(243,178,9)"/><text x="75.00" y="190.50"></text></g><g><title>isclass (inspect.py:78) (2 samples, 0.55%)</title><rect x="72" y="196" width="6" height="15" fill="rgb(225,211,12)"/><text x="75.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.28%)</title><rect x="78" y="180" width="3" height="15" fill="rgb(236,31,20)"/><text x="81.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.28%)</title><rect x="117" y="212" width="4" height="15" fill="rgb(248,8,0)"/><text x="120.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (7 samples, 1.94%)</title><rect x="104" y="196" width="23" height="15" fill="rgb(250,155,43)"/><text x="107.00" y="206.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.55%)</title><rect x="121" y="212" width="6" height="15" fill="rgb(253,112,32)"/><text x="124.00" y="222.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:205) (27 samples, 7.48%)</title><rect x="55" y="164" width="89" height="15" fill="rgb(233,94,47)"/><text x="58.00" y="174.50">_decision_..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (19 samples, 5.26%)</title><rect x="81" y="180" width="63" height="15" fill="rgb(213,49,51)"/><text x="84.00" y="190.50">check_..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (5 samples, 1.39%)</title><rect x="127" y="196" width="17" height="15" fill="rgb(222,35,52)"/><text x="130.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.83%)</title><rect x="134" y="212" width="10" height="15" fill="rgb(214,154,8)"/><text x="137.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:443) (1 samples, 0.28%)</title><rect x="157" y="180" width="3" height="15" fill="rgb(241,101,7)"/><text x="160.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.28%)</title><rect x="160" y="180" width="3" height="15" fill="rgb(236,115,54)"/><text x="163.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:466) (1 samples, 0.28%)</title><rect x="163" y="180" width="3" height="15" fill="rgb(244,138,42)"/><text x="166.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.28%)</title><rect x="166" y="180" width="4" height="15" fill="rgb(225,162,12)"/><text x="169.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.28%)</title><rect x="186" y="196" width="3" height="15" fill="rgb(240,154,40)"/><text x="189.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:477) (1 samples, 0.28%)</title><rect x="189" y="196" width="4" height="15" fill="rgb(209,48,1)"/><text x="192.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.28%)</title><rect x="193" y="196" width="3" height="15" fill="rgb(222,180,16)"/><text x="196.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 0.55%)</title><rect x="196" y="196" width="6" height="15" fill="rgb(218,112,6)"/><text x="199.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.28%)</title><rect x="202" y="196" width="4" height="15" fill="rgb(230,69,54)"/><text x="205.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:481) (2 samples, 0.55%)</title><rect x="206" y="196" width="6" height="15" fill="rgb(242,46,16)"/><text x="209.00" y="206.50"></text></g><g><title>__init__ (warnings.py:461) (2 samples, 0.55%)</title><rect x="212" y="196" width="7" height="15" fill="rgb(207,185,7)"/><text x="215.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (16 samples, 4.43%)</title><rect x="170" y="180" width="52" height="15" fill="rgb(222,181,26)"/><text x="173.00" y="190.50">check..</text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.28%)</title><rect x="219" y="196" width="3" height="15" fill="rgb(230,177,7)"/><text x="222.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.28%)</title><rect x="229" y="196" width="3" height="15" fill="rgb(205,102,24)"/><text x="232.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.55%)</title><rect x="235" y="212" width="7" height="15" fill="rgb(208,123,50)"/><text x="238.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:187) (2 samples, 0.55%)</title><rect x="242" y="212" width="6" height="15" fill="rgb(213,212,38)"/><text x="245.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.28%)</title><rect x="248" y="212" width="3" height="15" fill="rgb(226,156,19)"/><text x="251.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (15 samples, 4.16%)</title><rect x="222" y="180" width="49" height="15" fill="rgb(206,62,12)"/><text x="225.00" y="190.50">chec..</text></g><g><title>simplefilter (warnings.py:179) (12 samples, 3.32%)</title><rect x="232" y="196" width="39" height="15" fill="rgb(238,112,16)"/><text x="235.00" y="206.50">sim..</text></g><g><title>_add_filter (warnings.py:189) (6 samples, 1.66%)</title><rect x="251" y="212" width="20" height="15" fill="rgb(244,211,16)"/><text x="254.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.28%)</title><rect x="271" y="180" width="3" height="15" fill="rgb(233,40,34)"/><text x="274.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 0.83%)</title><rect x="274" y="180" width="10" height="15" fill="rgb(207,44,26)"/><text x="277.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.55%)</title><rect x="278" y="196" width="6" height="15" fill="rgb(251,95,2)"/><text x="281.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1631) (1 samples, 0.28%)</title><rect x="281" y="212" width="3" height="15" fill="rgb(239,133,46)"/><text x="284.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (6 samples, 1.66%)</title><rect x="284" y="180" width="20" height="15" fill="rgb(218,141,28)"/><text x="287.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:496) (2 samples, 0.55%)</title><rect x="297" y="196" width="7" height="15" fill="rgb(237,83,19)"/><text x="300.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.28%)</title><rect x="310" y="196" width="3" height="15" fill="rgb(254,112,41)"/><text x="313.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (4 samples, 1.11%)</title><rect x="304" y="180" width="13" height="15" fill="rgb(219,39,31)"/><text x="307.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.28%)</title><rect x="313" y="196" width="4" height="15" fill="rgb(212,5,34)"/><text x="316.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.28%)</title><rect x="317" y="180" width="3" height="15" fill="rgb(208,129,19)"/><text x="320.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.28%)</title><rect x="320" y="212" width="3" height="15" fill="rgb(229,88,16)"/><text x="323.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (3 samples, 0.83%)</title><rect x="320" y="196" width="10" height="15" fill="rgb(218,78,13)"/><text x="323.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (2 samples, 0.55%)</title><rect x="323" y="212" width="7" height="15" fill="rgb(244,156,17)"/><text x="326.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.28%)</title><rect x="330" y="196" width="3" height="15" fill="rgb(251,55,1)"/><text x="333.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.28%)</title><rect x="330" y="212" width="3" height="15" fill="rgb(219,217,15)"/><text x="333.00" y="222.50"></text></g><g><title>0x7fb19a683776 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="330" y="228" width="3" height="15" fill="rgb(247,111,51)"/><text x="333.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (5 samples, 1.39%)</title><rect x="320" y="180" width="16" height="15" fill="rgb(234,105,26)"/><text x="323.00" y="190.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:425) (1 samples, 0.28%)</title><rect x="333" y="196" width="3" height="15" fill="rgb(242,49,17)"/><text x="336.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (2 samples, 0.55%)</title><rect x="336" y="180" width="7" height="15" fill="rgb(216,98,27)"/><text x="339.00" y="190.50"></text></g><g><title>array_ndim_get (getset.c:30) (1 samples, 0.28%)</title><rect x="340" y="196" width="3" height="15" fill="rgb(254,94,52)"/><text x="343.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1009) (1 samples, 0.28%)</title><rect x="385" y="212" width="4" height="15" fill="rgb(250,151,1)"/><text x="388.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:416) (1 samples, 0.28%)</title><rect x="389" y="212" width="3" height="15" fill="rgb(224,90,34)"/><text x="392.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.28%)</title><rect x="392" y="212" width="3" height="15" fill="rgb(233,3,20)"/><text x="395.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (16 samples, 4.43%)</title><rect x="346" y="196" width="52" height="15" fill="rgb(239,118,7)"/><text x="349.00" y="206.50">_asse..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.28%)</title><rect x="395" y="212" width="3" height="15" fill="rgb(205,165,4)"/><text x="398.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (19 samples, 5.26%)</title><rect x="343" y="180" width="62" height="15" fill="rgb(210,29,6)"/><text x="346.00" y="190.50">check_..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.55%)</title><rect x="398" y="196" width="7" height="15" fill="rgb(218,214,46)"/><text x="401.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.28%)</title><rect x="402" y="212" width="3" height="15" fill="rgb(207,70,10)"/><text x="405.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 0.83%)</title><rect x="405" y="196" width="10" height="15" fill="rgb(220,167,46)"/><text x="408.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.28%)</title><rect x="415" y="196" width="3" height="15" fill="rgb(253,150,42)"/><text x="418.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (3 samples, 0.83%)</title><rect x="418" y="196" width="10" height="15" fill="rgb(249,49,25)"/><text x="421.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.28%)</title><rect x="425" y="212" width="3" height="15" fill="rgb(240,161,49)"/><text x="428.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (2 samples, 0.55%)</title><rect x="428" y="196" width="6" height="15" fill="rgb(218,73,13)"/><text x="431.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.28%)</title><rect x="431" y="212" width="3" height="15" fill="rgb(213,5,19)"/><text x="434.00" y="222.50"></text></g><g><title>0x7fb19a68e12b (libc-2.29.so) (1 samples, 0.28%)</title><rect x="431" y="228" width="3" height="15" fill="rgb(251,146,47)"/><text x="434.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (14 samples, 3.88%)</title><rect x="405" y="180" width="46" height="15" fill="rgb(217,151,5)"/><text x="408.00" y="190.50">chec..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (5 samples, 1.39%)</title><rect x="434" y="196" width="17" height="15" fill="rgb(247,83,3)"/><text x="437.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (4 samples, 1.11%)</title><rect x="438" y="212" width="13" height="15" fill="rgb(253,187,8)"/><text x="441.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.28%)</title><rect x="448" y="228" width="3" height="15" fill="rgb(215,62,42)"/><text x="451.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.28%)</title><rect x="451" y="180" width="3" height="15" fill="rgb(218,143,6)"/><text x="454.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.28%)</title><rect x="454" y="180" width="3" height="15" fill="rgb(248,64,0)"/><text x="457.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.28%)</title><rect x="454" y="196" width="3" height="15" fill="rgb(240,5,49)"/><text x="457.00" y="206.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:207) (97 samples, 26.87%)</title><rect x="144" y="164" width="317" height="15" fill="rgb(205,11,23)"/><text x="147.00" y="174.50">_decision_function (sklearn/linear_model/_..</text></g><g><title>check_array (sklearn/utils/validation.py:574) (1 samples, 0.28%)</title><rect x="457" y="180" width="4" height="15" fill="rgb(221,117,37)"/><text x="460.00" y="190.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.28%)</title><rect x="461" y="212" width="3" height="15" fill="rgb(250,143,6)"/><text x="464.00" y="222.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.28%)</title><rect x="461" y="228" width="3" height="15" fill="rgb(254,62,54)"/><text x="464.00" y="238.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:208) (2 samples, 0.55%)</title><rect x="461" y="164" width="6" height="15" fill="rgb(205,36,46)"/><text x="464.00" y="174.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (2 samples, 0.55%)</title><rect x="461" y="180" width="6" height="15" fill="rgb(212,216,1)"/><text x="464.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (2 samples, 0.55%)</title><rect x="461" y="196" width="6" height="15" fill="rgb(208,186,3)"/><text x="464.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:932) (1 samples, 0.28%)</title><rect x="464" y="212" width="3" height="15" fill="rgb(206,224,24)"/><text x="467.00" y="222.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.55%)</title><rect x="480" y="276" width="7" height="15" fill="rgb(238,46,12)"/><text x="483.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (3 samples, 0.83%)</title><rect x="480" y="196" width="10" height="15" fill="rgb(210,147,15)"/><text x="483.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.83%)</title><rect x="480" y="212" width="10" height="15" fill="rgb(208,91,41)"/><text x="483.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.83%)</title><rect x="480" y="228" width="10" height="15" fill="rgb(224,7,35)"/><text x="483.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.83%)</title><rect x="480" y="244" width="10" height="15" fill="rgb(208,112,25)"/><text x="483.00" y="254.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.83%)</title><rect x="480" y="260" width="10" height="15" fill="rgb(225,216,4)"/><text x="483.00" y="270.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.28%)</title><rect x="487" y="276" width="3" height="15" fill="rgb(223,35,31)"/><text x="490.00" y="286.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:432) (1 samples, 0.28%)</title><rect x="490" y="292" width="3" height="15" fill="rgb(213,70,37)"/><text x="493.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.55%)</title><rect x="490" y="212" width="7" height="15" fill="rgb(239,47,25)"/><text x="493.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.55%)</title><rect x="490" y="228" width="7" height="15" fill="rgb(230,205,12)"/><text x="493.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.55%)</title><rect x="490" y="244" width="7" height="15" fill="rgb(231,141,39)"/><text x="493.00" y="254.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1618) (2 samples, 0.55%)</title><rect x="490" y="260" width="7" height="15" fill="rgb(221,82,32)"/><text x="493.00" y="270.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:566) (2 samples, 0.55%)</title><rect x="490" y="276" width="7" height="15" fill="rgb(234,151,33)"/><text x="493.00" y="286.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.28%)</title><rect x="493" y="292" width="4" height="15" fill="rgb(218,217,30)"/><text x="496.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.28%)</title><rect x="493" y="308" width="4" height="15" fill="rgb(216,214,51)"/><text x="496.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.28%)</title><rect x="497" y="212" width="3" height="15" fill="rgb(215,50,41)"/><text x="500.00" y="222.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.28%)</title><rect x="497" y="228" width="3" height="15" fill="rgb(250,120,52)"/><text x="500.00" y="238.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.28%)</title><rect x="497" y="244" width="3" height="15" fill="rgb(231,188,2)"/><text x="500.00" y="254.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1707) (1 samples, 0.28%)</title><rect x="500" y="260" width="3" height="15" fill="rgb(207,136,37)"/><text x="503.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.55%)</title><rect x="500" y="212" width="6" height="15" fill="rgb(220,9,15)"/><text x="503.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (2 samples, 0.55%)</title><rect x="500" y="228" width="6" height="15" fill="rgb(205,195,40)"/><text x="503.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (2 samples, 0.55%)</title><rect x="500" y="244" width="6" height="15" fill="rgb(230,42,5)"/><text x="503.00" y="254.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.28%)</title><rect x="503" y="260" width="3" height="15" fill="rgb(221,162,8)"/><text x="506.00" y="270.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c:1629) (1 samples, 0.28%)</title><rect x="503" y="276" width="3" height="15" fill="rgb(219,102,17)"/><text x="506.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.28%)</title><rect x="506" y="212" width="4" height="15" fill="rgb(233,161,10)"/><text x="509.00" y="222.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.28%)</title><rect x="506" y="228" width="4" height="15" fill="rgb(243,98,6)"/><text x="509.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.28%)</title><rect x="510" y="212" width="3" height="15" fill="rgb(212,119,44)"/><text x="513.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.28%)</title><rect x="510" y="228" width="3" height="15" fill="rgb(242,126,26)"/><text x="513.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.28%)</title><rect x="513" y="212" width="3" height="15" fill="rgb(225,22,16)"/><text x="516.00" y="222.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.28%)</title><rect x="513" y="228" width="3" height="15" fill="rgb(209,159,33)"/><text x="516.00" y="238.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.28%)</title><rect x="513" y="244" width="3" height="15" fill="rgb(226,175,4)"/><text x="516.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.28%)</title><rect x="516" y="212" width="3" height="15" fill="rgb(219,52,52)"/><text x="519.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.28%)</title><rect x="519" y="212" width="4" height="15" fill="rgb(245,41,30)"/><text x="522.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.28%)</title><rect x="519" y="228" width="4" height="15" fill="rgb(216,213,0)"/><text x="522.00" y="238.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1472) (1 samples, 0.28%)</title><rect x="519" y="244" width="4" height="15" fill="rgb(243,24,24)"/><text x="522.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3266) (2 samples, 0.55%)</title><rect x="523" y="212" width="6" height="15" fill="rgb(250,168,25)"/><text x="526.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 3.60%)</title><rect x="490" y="196" width="42" height="15" fill="rgb(216,43,15)"/><text x="493.00" y="206.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3272) (1 samples, 0.28%)</title><rect x="529" y="212" width="3" height="15" fill="rgb(237,19,32)"/><text x="532.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.28%)</title><rect x="532" y="244" width="4" height="15" fill="rgb(218,150,23)"/><text x="535.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.55%)</title><rect x="532" y="212" width="7" height="15" fill="rgb(210,17,47)"/><text x="535.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.55%)</title><rect x="532" y="228" width="7" height="15" fill="rgb(227,187,6)"/><text x="535.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.28%)</title><rect x="536" y="244" width="3" height="15" fill="rgb(235,171,10)"/><text x="539.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (3 samples, 0.83%)</title><rect x="532" y="196" width="10" height="15" fill="rgb(234,125,33)"/><text x="535.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.28%)</title><rect x="539" y="212" width="3" height="15" fill="rgb(211,212,29)"/><text x="542.00" y="222.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.28%)</title><rect x="539" y="228" width="3" height="15" fill="rgb(218,112,53)"/><text x="542.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.28%)</title><rect x="542" y="196" width="4" height="15" fill="rgb(249,80,43)"/><text x="545.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.28%)</title><rect x="542" y="212" width="4" height="15" fill="rgb(235,61,1)"/><text x="545.00" y="222.50"></text></g><g><title>array_add (number.c:330) (22 samples, 6.09%)</title><rect x="477" y="180" width="72" height="15" fill="rgb(206,12,53)"/><text x="480.00" y="190.50">array_ad..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.28%)</title><rect x="546" y="196" width="3" height="15" fill="rgb(235,49,20)"/><text x="549.00" y="206.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:467) (1 samples, 0.28%)</title><rect x="546" y="212" width="3" height="15" fill="rgb(254,128,27)"/><text x="549.00" y="222.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (2 samples, 0.55%)</title><rect x="549" y="180" width="6" height="15" fill="rgb(242,120,35)"/><text x="552.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (2 samples, 0.55%)</title><rect x="562" y="212" width="6" height="15" fill="rgb(233,200,29)"/><text x="565.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2588) (1 samples, 0.28%)</title><rect x="568" y="228" width="4" height="15" fill="rgb(249,94,16)"/><text x="571.00" y="238.50"></text></g><g><title>0x7fb19a68e120 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="568" y="244" width="4" height="15" fill="rgb(226,99,39)"/><text x="571.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2689) (1 samples, 0.28%)</title><rect x="572" y="228" width="3" height="15" fill="rgb(242,142,44)"/><text x="575.00" y="238.50"></text></g><g><title>_get_coredim_sizes (ufunc_object.c:2376) (1 samples, 0.28%)</title><rect x="572" y="244" width="3" height="15" fill="rgb(218,64,28)"/><text x="575.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.28%)</title><rect x="575" y="228" width="3" height="15" fill="rgb(214,63,7)"/><text x="578.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.28%)</title><rect x="575" y="244" width="3" height="15" fill="rgb(237,223,44)"/><text x="578.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1891) (1 samples, 0.28%)</title><rect x="575" y="260" width="3" height="15" fill="rgb(244,149,31)"/><text x="578.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2838) (1 samples, 0.28%)</title><rect x="578" y="228" width="4" height="15" fill="rgb(214,81,16)"/><text x="581.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1948) (1 samples, 0.28%)</title><rect x="578" y="244" width="4" height="15" fill="rgb(245,58,31)"/><text x="581.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1494) (1 samples, 0.28%)</title><rect x="582" y="260" width="3" height="15" fill="rgb(219,160,34)"/><text x="585.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.55%)</title><rect x="582" y="244" width="6" height="15" fill="rgb(230,196,30)"/><text x="585.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1547) (1 samples, 0.28%)</title><rect x="585" y="260" width="3" height="15" fill="rgb(251,168,1)"/><text x="588.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.28%)</title><rect x="588" y="244" width="3" height="15" fill="rgb(211,216,47)"/><text x="591.00" y="254.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.28%)</title><rect x="588" y="260" width="3" height="15" fill="rgb(237,63,13)"/><text x="591.00" y="270.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1473) (1 samples, 0.28%)</title><rect x="588" y="276" width="3" height="15" fill="rgb(219,142,13)"/><text x="591.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.28%)</title><rect x="591" y="260" width="4" height="15" fill="rgb(250,126,35)"/><text x="594.00" y="270.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2684) (1 samples, 0.28%)</title><rect x="591" y="276" width="4" height="15" fill="rgb(213,190,7)"/><text x="594.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.28%)</title><rect x="591" y="292" width="4" height="15" fill="rgb(234,10,19)"/><text x="594.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.28%)</title><rect x="591" y="308" width="4" height="15" fill="rgb(213,118,46)"/><text x="594.00" y="318.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.28%)</title><rect x="591" y="324" width="4" height="15" fill="rgb(250,181,17)"/><text x="594.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:257) (1 samples, 0.28%)</title><rect x="595" y="276" width="3" height="15" fill="rgb(242,142,20)"/><text x="598.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="598" y="308" width="3" height="15" fill="rgb(236,229,50)"/><text x="601.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (2 samples, 0.55%)</title><rect x="598" y="292" width="6" height="15" fill="rgb(244,122,25)"/><text x="601.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="601" y="308" width="3" height="15" fill="rgb(214,90,39)"/><text x="604.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (2 samples, 0.55%)</title><rect x="604" y="292" width="7" height="15" fill="rgb(206,46,20)"/><text x="607.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="608" y="308" width="3" height="15" fill="rgb(236,173,4)"/><text x="611.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:146) (1 samples, 0.28%)</title><rect x="611" y="292" width="3" height="15" fill="rgb(252,68,12)"/><text x="614.00" y="302.50"></text></g><g><title>0x7fb19a6258bd (libc-2.29.so) (1 samples, 0.28%)</title><rect x="614" y="340" width="3" height="15" fill="rgb(219,107,47)"/><text x="617.00" y="350.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (2 samples, 0.55%)</title><rect x="614" y="308" width="7" height="15" fill="rgb(235,88,3)"/><text x="617.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.55%)</title><rect x="614" y="324" width="7" height="15" fill="rgb(220,115,36)"/><text x="617.00" y="334.50"></text></g><g><title>0x7fb19a68dd50 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="617" y="340" width="4" height="15" fill="rgb(236,95,52)"/><text x="620.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (9 samples, 2.49%)</title><rect x="595" y="260" width="29" height="15" fill="rgb(241,196,6)"/><text x="598.00" y="270.50">np..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (8 samples, 2.22%)</title><rect x="598" y="276" width="26" height="15" fill="rgb(254,40,12)"/><text x="601.00" y="286.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (3 samples, 0.83%)</title><rect x="614" y="292" width="10" height="15" fill="rgb(214,170,42)"/><text x="617.00" y="302.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:4061) (1 samples, 0.28%)</title><rect x="621" y="308" width="3" height="15" fill="rgb(240,92,15)"/><text x="624.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (14 samples, 3.88%)</title><rect x="582" y="228" width="45" height="15" fill="rgb(227,0,7)"/><text x="585.00" y="238.50">PyUF..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (11 samples, 3.05%)</title><rect x="591" y="244" width="36" height="15" fill="rgb(209,17,7)"/><text x="594.00" y="254.50">Npy..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2972) (1 samples, 0.28%)</title><rect x="624" y="260" width="3" height="15" fill="rgb(247,163,3)"/><text x="627.00" y="270.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:1937) (1 samples, 0.28%)</title><rect x="624" y="276" width="3" height="15" fill="rgb(222,14,48)"/><text x="627.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.28%)</title><rect x="627" y="228" width="4" height="15" fill="rgb(209,134,34)"/><text x="630.00" y="238.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:42) (1 samples, 0.28%)</title><rect x="627" y="244" width="4" height="15" fill="rgb(250,63,7)"/><text x="630.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2986) (1 samples, 0.28%)</title><rect x="631" y="228" width="3" height="15" fill="rgb(224,174,6)"/><text x="634.00" y="238.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.28%)</title><rect x="631" y="244" width="3" height="15" fill="rgb(240,5,9)"/><text x="634.00" y="254.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.28%)</title><rect x="631" y="260" width="3" height="15" fill="rgb(248,177,3)"/><text x="634.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2995) (1 samples, 0.28%)</title><rect x="634" y="228" width="3" height="15" fill="rgb(206,202,11)"/><text x="637.00" y="238.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.28%)</title><rect x="634" y="244" width="3" height="15" fill="rgb(215,64,38)"/><text x="637.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:392) (2 samples, 0.55%)</title><rect x="637" y="244" width="7" height="15" fill="rgb(243,214,26)"/><text x="640.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (3 samples, 0.83%)</title><rect x="637" y="228" width="10" height="15" fill="rgb(228,60,11)"/><text x="640.00" y="238.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.28%)</title><rect x="644" y="244" width="3" height="15" fill="rgb(209,20,52)"/><text x="647.00" y="254.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:94) (1 samples, 0.28%)</title><rect x="644" y="260" width="3" height="15" fill="rgb(246,102,43)"/><text x="647.00" y="270.50"></text></g><g><title>is_blasable2d (matmul.c.src:51) (1 samples, 0.28%)</title><rect x="644" y="276" width="3" height="15" fill="rgb(244,154,21)"/><text x="647.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3051) (1 samples, 0.28%)</title><rect x="647" y="228" width="3" height="15" fill="rgb(221,147,2)"/><text x="650.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.28%)</title><rect x="650" y="292" width="3" height="15" fill="rgb(247,177,45)"/><text x="653.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.28%)</title><rect x="653" y="292" width="4" height="15" fill="rgb(250,29,27)"/><text x="656.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 0.83%)</title><rect x="650" y="260" width="10" height="15" fill="rgb(245,223,21)"/><text x="653.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (3 samples, 0.83%)</title><rect x="650" y="276" width="10" height="15" fill="rgb(228,65,52)"/><text x="653.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.28%)</title><rect x="657" y="292" width="3" height="15" fill="rgb(250,215,33)"/><text x="660.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (31 samples, 8.59%)</title><rect x="562" y="196" width="101" height="15" fill="rgb(231,53,43)"/><text x="565.00" y="206.50">ufunc_generi..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (29 samples, 8.03%)</title><rect x="568" y="212" width="95" height="15" fill="rgb(238,9,33)"/><text x="571.00" y="222.50">PyUFunc_Gen..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (4 samples, 1.11%)</title><rect x="650" y="228" width="13" height="15" fill="rgb(252,162,31)"/><text x="653.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (4 samples, 1.11%)</title><rect x="650" y="244" width="13" height="15" fill="rgb(246,123,41)"/><text x="653.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.28%)</title><rect x="660" y="260" width="3" height="15" fill="rgb(247,117,32)"/><text x="663.00" y="270.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.28%)</title><rect x="660" y="276" width="3" height="15" fill="rgb(245,218,48)"/><text x="663.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.28%)</title><rect x="663" y="196" width="4" height="15" fill="rgb(210,10,47)"/><text x="666.00" y="206.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (35 samples, 9.70%)</title><rect x="555" y="180" width="115" height="15" fill="rgb(212,109,10)"/><text x="558.00" y="190.50">safe_sparse_do..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.28%)</title><rect x="667" y="196" width="3" height="15" fill="rgb(247,167,26)"/><text x="670.00" y="206.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:440) (1 samples, 0.28%)</title><rect x="667" y="212" width="3" height="15" fill="rgb(226,220,47)"/><text x="670.00" y="222.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (8 samples, 2.22%)</title><rect x="670" y="180" width="26" height="15" fill="rgb(220,159,10)"/><text x="673.00" y="190.50">s..</text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (6 samples, 1.66%)</title><rect x="676" y="196" width="20" height="15" fill="rgb(244,207,39)"/><text x="679.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (198 samples, 54.85%)</title><rect x="52" y="132" width="647" height="15" fill="rgb(242,12,2)"/><text x="55.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/linear_model/_base.py:225) (197 samples, 54.57%)</title><rect x="55" y="148" width="644" height="15" fill="rgb(211,53,45)"/><text x="58.00" y="158.50">predict (sklearn/linear_model/_base.py:225)</text></g><g><title>_decision_function (sklearn/linear_model/_base.py:209) (71 samples, 19.67%)</title><rect x="467" y="164" width="232" height="15" fill="rgb(245,89,21)"/><text x="470.00" y="174.50">_decision_function (sklearn/li..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.28%)</title><rect x="696" y="180" width="3" height="15" fill="rgb(237,82,29)"/><text x="699.00" y="190.50"></text></g><g><title>0x7fb19a74be72 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="696" y="196" width="3" height="15" fill="rgb(216,146,33)"/><text x="699.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1_4_12_float_.py:54) (204 samples, 56.51%)</title><rect x="36" y="52" width="666" height="15" fill="rgb(242,26,21)"/><text x="39.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_b_reg_1_4_12_float_.py:54)</text></g><g><title>profile_skl (bench_LinearRegression_default_b_reg_1_4_12_float_.py:53) (204 samples, 56.51%)</title><rect x="36" y="68" width="666" height="15" fill="rgb(238,8,23)"/><text x="39.00" y="78.50">profile_skl (bench_LinearRegression_default_b_reg_1_4_12_float_.py:53)</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py:37) (204 samples, 56.51%)</title><rect x="36" y="84" width="666" height="15" fill="rgb(234,40,51)"/><text x="39.00" y="94.50">setup_profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py:37)</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py:31) (204 samples, 56.51%)</title><rect x="36" y="100" width="666" height="15" fill="rgb(253,143,46)"/><text x="39.00" y="110.50">profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (204 samples, 56.51%)</title><rect x="36" y="116" width="666" height="15" fill="rgb(209,42,27)"/><text x="39.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.28%)</title><rect x="699" y="132" width="3" height="15" fill="rgb(241,5,48)"/><text x="702.00" y="142.50"></text></g><g><title>0x7fb19a74b130 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="699" y="148" width="3" height="15" fill="rgb(228,24,45)"/><text x="702.00" y="158.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.28%)</title><rect x="706" y="148" width="3" height="15" fill="rgb(238,108,22)"/><text x="709.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.55%)</title><rect x="706" y="116" width="6" height="15" fill="rgb(254,97,7)"/><text x="709.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.55%)</title><rect x="706" y="132" width="6" height="15" fill="rgb(232,106,14)"/><text x="709.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.28%)</title><rect x="709" y="148" width="3" height="15" fill="rgb(245,64,19)"/><text x="712.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.28%)</title><rect x="722" y="148" width="3" height="15" fill="rgb(218,163,6)"/><text x="725.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.28%)</title><rect x="725" y="164" width="4" height="15" fill="rgb(247,26,30)"/><text x="728.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.28%)</title><rect x="729" y="164" width="3" height="15" fill="rgb(234,198,46)"/><text x="732.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.28%)</title><rect x="732" y="164" width="3" height="15" fill="rgb(205,137,5)"/><text x="735.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 1.11%)</title><rect x="735" y="180" width="13" height="15" fill="rgb(241,66,38)"/><text x="738.00" y="190.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.28%)</title><rect x="765" y="244" width="3" height="15" fill="rgb(233,203,3)"/><text x="768.00" y="254.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:26) (1 samples, 0.28%)</title><rect x="768" y="244" width="3" height="15" fill="rgb(219,28,46)"/><text x="771.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (2 samples, 0.55%)</title><rect x="778" y="260" width="6" height="15" fill="rgb(225,133,53)"/><text x="781.00" y="270.50"></text></g><g><title>dot (numpy/core/multiarray.py:792) (2 samples, 0.55%)</title><rect x="778" y="276" width="6" height="15" fill="rgb(216,213,21)"/><text x="781.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (2 samples, 0.55%)</title><rect x="791" y="292" width="6" height="15" fill="rgb(222,190,11)"/><text x="794.00" y="302.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:527) (1 samples, 0.28%)</title><rect x="797" y="324" width="4" height="15" fill="rgb(206,205,21)"/><text x="800.00" y="334.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="797" y="340" width="4" height="15" fill="rgb(249,5,10)"/><text x="800.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py:28) (12 samples, 3.32%)</title><rect x="765" y="228" width="39" height="15" fill="rgb(222,222,5)"/><text x="768.00" y="238.50">_ru..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (10 samples, 2.77%)</title><rect x="771" y="244" width="33" height="15" fill="rgb(210,117,36)"/><text x="774.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (6 samples, 1.66%)</title><rect x="784" y="260" width="20" height="15" fill="rgb(207,61,49)"/><text x="787.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.11%)</title><rect x="791" y="276" width="13" height="15" fill="rgb(229,160,10)"/><text x="794.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (2 samples, 0.55%)</title><rect x="797" y="292" width="7" height="15" fill="rgb(230,130,36)"/><text x="800.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (2 samples, 0.55%)</title><rect x="797" y="308" width="7" height="15" fill="rgb(244,188,27)"/><text x="800.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:534) (1 samples, 0.28%)</title><rect x="801" y="324" width="3" height="15" fill="rgb(206,127,39)"/><text x="804.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py:29) (1 samples, 0.28%)</title><rect x="804" y="228" width="3" height="15" fill="rgb(236,26,37)"/><text x="807.00" y="238.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1297) (2 samples, 0.55%)</title><rect x="814" y="276" width="6" height="15" fill="rgb(214,103,32)"/><text x="817.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (3 samples, 0.83%)</title><rect x="814" y="260" width="9" height="15" fill="rgb(229,132,14)"/><text x="817.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.28%)</title><rect x="820" y="276" width="3" height="15" fill="rgb(239,130,53)"/><text x="823.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.28%)</title><rect x="820" y="292" width="3" height="15" fill="rgb(254,91,9)"/><text x="823.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.28%)</title><rect x="823" y="276" width="4" height="15" fill="rgb(246,215,10)"/><text x="826.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1472) (1 samples, 0.28%)</title><rect x="823" y="292" width="4" height="15" fill="rgb(219,222,32)"/><text x="826.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (2 samples, 0.55%)</title><rect x="827" y="308" width="6" height="15" fill="rgb(208,160,29)"/><text x="830.00" y="318.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:726) (2 samples, 0.55%)</title><rect x="827" y="324" width="6" height="15" fill="rgb(209,194,45)"/><text x="830.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.28%)</title><rect x="833" y="308" width="3" height="15" fill="rgb(206,125,40)"/><text x="836.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="833" y="324" width="3" height="15" fill="rgb(217,156,51)"/><text x="836.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1455) (1 samples, 0.28%)</title><rect x="836" y="324" width="4" height="15" fill="rgb(231,97,42)"/><text x="839.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.55%)</title><rect x="836" y="308" width="7" height="15" fill="rgb(222,161,5)"/><text x="839.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1544) (1 samples, 0.28%)</title><rect x="840" y="324" width="3" height="15" fill="rgb(213,1,53)"/><text x="843.00" y="334.50"></text></g><g><title>0x7fb1998901c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="840" y="340" width="3" height="15" fill="rgb(234,181,2)"/><text x="843.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.28%)</title><rect x="843" y="308" width="3" height="15" fill="rgb(249,33,25)"/><text x="846.00" y="318.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c:2088) (1 samples, 0.28%)</title><rect x="843" y="324" width="3" height="15" fill="rgb(230,219,35)"/><text x="846.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.28%)</title><rect x="846" y="308" width="4" height="15" fill="rgb(237,12,8)"/><text x="849.00" y="318.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1285) (1 samples, 0.28%)</title><rect x="846" y="324" width="4" height="15" fill="rgb(237,142,43)"/><text x="849.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (8 samples, 2.22%)</title><rect x="827" y="292" width="26" height="15" fill="rgb(225,176,5)"/><text x="830.00" y="302.50">i..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.28%)</title><rect x="850" y="308" width="3" height="15" fill="rgb(205,123,2)"/><text x="853.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2790) (1 samples, 0.28%)</title><rect x="850" y="324" width="3" height="15" fill="rgb(245,61,29)"/><text x="853.00" y="334.50"></text></g><g><title>solve_may_have_internal_overlap (mem_overlap.c:855) (1 samples, 0.28%)</title><rect x="850" y="340" width="3" height="15" fill="rgb(221,43,7)"/><text x="853.00" y="350.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (3 samples, 0.83%)</title><rect x="853" y="308" width="10" height="15" fill="rgb(210,20,39)"/><text x="856.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (3 samples, 0.83%)</title><rect x="853" y="324" width="10" height="15" fill="rgb(245,8,22)"/><text x="856.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.83%)</title><rect x="853" y="340" width="10" height="15" fill="rgb(248,139,3)"/><text x="856.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 1.11%)</title><rect x="853" y="292" width="13" height="15" fill="rgb(237,202,38)"/><text x="856.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.28%)</title><rect x="863" y="308" width="3" height="15" fill="rgb(215,61,30)"/><text x="866.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2558) (1 samples, 0.28%)</title><rect x="863" y="324" width="3" height="15" fill="rgb(216,67,51)"/><text x="866.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.28%)</title><rect x="866" y="292" width="3" height="15" fill="rgb(214,47,29)"/><text x="869.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:275) (1 samples, 0.28%)</title><rect x="866" y="308" width="3" height="15" fill="rgb(232,105,4)"/><text x="869.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (14 samples, 3.88%)</title><rect x="827" y="276" width="45" height="15" fill="rgb(247,100,23)"/><text x="830.00" y="286.50">exec..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.28%)</title><rect x="869" y="292" width="3" height="15" fill="rgb(236,86,24)"/><text x="872.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.28%)</title><rect x="869" y="308" width="3" height="15" fill="rgb(236,109,45)"/><text x="872.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py:30) (21 samples, 5.82%)</title><rect x="807" y="228" width="69" height="15" fill="rgb(227,78,37)"/><text x="810.00" y="238.50">_run (m..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (19 samples, 5.26%)</title><rect x="814" y="244" width="62" height="15" fill="rgb(228,132,35)"/><text x="817.00" y="254.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (16 samples, 4.43%)</title><rect x="823" y="260" width="53" height="15" fill="rgb(208,190,18)"/><text x="826.00" y="270.50">PyUFu..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.28%)</title><rect x="872" y="276" width="4" height="15" fill="rgb(223,64,2)"/><text x="875.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.28%)</title><rect x="872" y="292" width="4" height="15" fill="rgb(227,59,25)"/><text x="875.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.28%)</title><rect x="872" y="308" width="4" height="15" fill="rgb(229,68,48)"/><text x="875.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (40 samples, 11.08%)</title><rect x="748" y="196" width="131" height="15" fill="rgb(232,152,36)"/><text x="751.00" y="206.50">run (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (36 samples, 9.97%)</title><rect x="761" y="212" width="118" height="15" fill="rgb(234,171,53)"/><text x="764.00" y="222.50">run (mlprodict..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py:31) (1 samples, 0.28%)</title><rect x="876" y="228" width="3" height="15" fill="rgb(242,53,22)"/><text x="879.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (41 samples, 11.36%)</title><rect x="748" y="180" width="134" height="15" fill="rgb(216,43,41)"/><text x="751.00" y="190.50">run (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.28%)</title><rect x="879" y="196" width="3" height="15" fill="rgb(229,17,26)"/><text x="882.00" y="206.50"></text></g><g><title>array_descr_get (getset.c:207) (1 samples, 0.28%)</title><rect x="879" y="212" width="3" height="15" fill="rgb(212,178,14)"/><text x="882.00" y="222.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (1 samples, 0.28%)</title><rect x="879" y="228" width="3" height="15" fill="rgb(243,132,18)"/><text x="882.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.28%)</title><rect x="882" y="180" width="4" height="15" fill="rgb(249,139,33)"/><text x="885.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.28%)</title><rect x="886" y="180" width="3" height="15" fill="rgb(235,108,26)"/><text x="889.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.55%)</title><rect x="889" y="180" width="6" height="15" fill="rgb(210,5,54)"/><text x="892.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (50 samples, 13.85%)</title><rect x="735" y="164" width="164" height="15" fill="rgb(242,220,15)"/><text x="738.00" y="174.50">_run_sequence_runtime..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.28%)</title><rect x="895" y="180" width="4" height="15" fill="rgb(244,72,7)"/><text x="898.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (60 samples, 16.62%)</title><rect x="722" y="132" width="196" height="15" fill="rgb(233,93,34)"/><text x="725.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_b..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (59 samples, 16.34%)</title><rect x="725" y="148" width="193" height="15" fill="rgb(251,200,18)"/><text x="728.00" y="158.50">run (mlprodict/onnxrt/onn..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (6 samples, 1.66%)</title><rect x="899" y="164" width="19" height="15" fill="rgb(223,102,6)"/><text x="902.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.55%)</title><rect x="912" y="180" width="6" height="15" fill="rgb(244,36,10)"/><text x="915.00" y="190.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.28%)</title><rect x="918" y="132" width="3" height="15" fill="rgb(254,142,24)"/><text x="921.00" y="142.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1_4_12_float_.py:61) (68 samples, 18.84%)</title><rect x="702" y="52" width="223" height="15" fill="rgb(236,79,52)"/><text x="705.00" y="62.50">&lt;module&gt; (bench_LinearRegress..</text></g><g><title>profile_pyrt (bench_LinearRegression_default_b_reg_1_4_12_float_.py:60) (68 samples, 18.84%)</title><rect x="702" y="68" width="223" height="15" fill="rgb(234,203,15)"/><text x="705.00" y="78.50">profile_pyrt (bench_LinearReg..</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py:37) (68 samples, 18.84%)</title><rect x="702" y="84" width="223" height="15" fill="rgb(245,159,33)"/><text x="705.00" y="94.50">setup_profile (bench_LinearRe..</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py:31) (68 samples, 18.84%)</title><rect x="702" y="100" width="223" height="15" fill="rgb(239,96,3)"/><text x="705.00" y="110.50">profile (bench_LinearRegressi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (65 samples, 18.01%)</title><rect x="712" y="116" width="213" height="15" fill="rgb(215,80,51)"/><text x="715.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.28%)</title><rect x="921" y="132" width="4" height="15" fill="rgb(222,113,6)"/><text x="924.00" y="142.50"></text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py:36) (1 samples, 0.28%)</title><rect x="925" y="84" width="3" height="15" fill="rgb(252,36,19)"/><text x="928.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.28%)</title><rect x="925" y="100" width="3" height="15" fill="rgb(220,69,3)"/><text x="928.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.28%)</title><rect x="925" y="116" width="3" height="15" fill="rgb(243,142,23)"/><text x="928.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.28%)</title><rect x="925" y="132" width="3" height="15" fill="rgb(207,110,47)"/><text x="928.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.28%)</title><rect x="925" y="148" width="3" height="15" fill="rgb(241,209,19)"/><text x="928.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (1 samples, 0.28%)</title><rect x="925" y="164" width="3" height="15" fill="rgb(229,160,4)"/><text x="928.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="925" y="180" width="3" height="15" fill="rgb(225,73,54)"/><text x="928.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="925" y="196" width="3" height="15" fill="rgb(212,31,11)"/><text x="928.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="925" y="212" width="3" height="15" fill="rgb(235,198,36)"/><text x="928.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="925" y="228" width="3" height="15" fill="rgb(251,24,53)"/><text x="928.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="925" y="244" width="3" height="15" fill="rgb(214,34,30)"/><text x="928.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (1 samples, 0.28%)</title><rect x="925" y="260" width="3" height="15" fill="rgb(243,138,17)"/><text x="928.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="925" y="276" width="3" height="15" fill="rgb(244,172,8)"/><text x="928.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="925" y="292" width="3" height="15" fill="rgb(215,205,41)"/><text x="928.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="925" y="308" width="3" height="15" fill="rgb(226,229,22)"/><text x="928.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="925" y="324" width="3" height="15" fill="rgb(233,66,10)"/><text x="928.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="925" y="340" width="3" height="15" fill="rgb(237,122,11)"/><text x="928.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (1 samples, 0.28%)</title><rect x="925" y="356" width="3" height="15" fill="rgb(223,4,2)"/><text x="928.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="925" y="372" width="3" height="15" fill="rgb(241,188,48)"/><text x="928.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="925" y="388" width="3" height="15" fill="rgb(215,226,42)"/><text x="928.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="925" y="404" width="3" height="15" fill="rgb(221,145,50)"/><text x="928.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="925" y="420" width="3" height="15" fill="rgb(225,10,6)"/><text x="928.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="925" y="436" width="3" height="15" fill="rgb(211,201,13)"/><text x="928.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (1 samples, 0.28%)</title><rect x="925" y="452" width="3" height="15" fill="rgb(230,35,37)"/><text x="928.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="925" y="468" width="3" height="15" fill="rgb(253,165,38)"/><text x="928.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="925" y="484" width="3" height="15" fill="rgb(244,115,42)"/><text x="928.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.28%)</title><rect x="925" y="500" width="3" height="15" fill="rgb(242,149,43)"/><text x="928.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.28%)</title><rect x="925" y="516" width="3" height="15" fill="rgb(244,172,21)"/><text x="928.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.28%)</title><rect x="925" y="532" width="3" height="15" fill="rgb(242,32,30)"/><text x="928.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="925" y="548" width="3" height="15" fill="rgb(214,42,46)"/><text x="928.00" y="558.50"></text></g><g><title>0x7fb1586a5af0 (?) (1 samples, 0.28%)</title><rect x="925" y="564" width="3" height="15" fill="rgb(231,181,7)"/><text x="928.00" y="574.50"></text></g><g><title>0x7fb1586b81d2 (?) (1 samples, 0.28%)</title><rect x="925" y="580" width="3" height="15" fill="rgb(252,126,21)"/><text x="928.00" y="590.50"></text></g><g><title>0x7fb1586b77b8 (?) (1 samples, 0.28%)</title><rect x="925" y="596" width="3" height="15" fill="rgb(235,135,52)"/><text x="928.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="925" y="612" width="3" height="15" fill="rgb(239,174,1)"/><text x="928.00" y="622.50"></text></g><g><title>0x7fb1586b5926 (?) (1 samples, 0.28%)</title><rect x="925" y="628" width="3" height="15" fill="rgb(236,21,36)"/><text x="928.00" y="638.50"></text></g><g><title>0x7fb1586b3a1f (?) (1 samples, 0.28%)</title><rect x="925" y="644" width="3" height="15" fill="rgb(227,66,7)"/><text x="928.00" y="654.50"></text></g><g><title>0x7fb158c7fb0c (?) (1 samples, 0.28%)</title><rect x="925" y="660" width="3" height="15" fill="rgb(237,142,34)"/><text x="928.00" y="670.50"></text></g><g><title>0x7fb158c5b7b0 (?) (1 samples, 0.28%)</title><rect x="925" y="676" width="3" height="15" fill="rgb(215,65,38)"/><text x="928.00" y="686.50"></text></g><g><title>0x7fb158bea00f (?) (1 samples, 0.28%)</title><rect x="925" y="692" width="3" height="15" fill="rgb(207,170,22)"/><text x="928.00" y="702.50"></text></g><g><title>0x7fb158be9742 (?) (1 samples, 0.28%)</title><rect x="925" y="708" width="3" height="15" fill="rgb(225,6,40)"/><text x="928.00" y="718.50"></text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py:30) (2 samples, 0.55%)</title><rect x="928" y="100" width="7" height="15" fill="rgb(207,118,43)"/><text x="931.00" y="110.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.28%)</title><rect x="935" y="116" width="3" height="15" fill="rgb(215,89,1)"/><text x="938.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.28%)</title><rect x="935" y="132" width="3" height="15" fill="rgb(226,183,7)"/><text x="938.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.28%)</title><rect x="935" y="148" width="3" height="15" fill="rgb(252,37,5)"/><text x="938.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.28%)</title><rect x="961" y="148" width="3" height="15" fill="rgb(244,175,26)"/><text x="964.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (2 samples, 0.55%)</title><rect x="987" y="196" width="6" height="15" fill="rgb(253,203,42)"/><text x="990.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:131) (1 samples, 0.28%)</title><rect x="993" y="196" width="4" height="15" fill="rgb(234,106,53)"/><text x="996.00" y="206.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="997" y="244" width="3" height="15" fill="rgb(211,53,19)"/><text x="1000.00" y="254.50"></text></g><g><title>0x7fb18a13a7a0 (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="997" y="260" width="3" height="15" fill="rgb(213,95,1)"/><text x="1000.00" y="270.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1000" y="244" width="3" height="15" fill="rgb(223,2,48)"/><text x="1003.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="1003" y="260" width="7" height="15" fill="rgb(243,124,5)"/><text x="1006.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="1003" y="276" width="7" height="15" fill="rgb(237,210,16)"/><text x="1006.00" y="286.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1010" y="260" width="3" height="15" fill="rgb(227,34,18)"/><text x="1013.00" y="270.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (8 samples, 2.22%)</title><rect x="997" y="196" width="26" height="15" fill="rgb(249,162,12)"/><text x="1000.00" y="206.50">r..</text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (8 samples, 2.22%)</title><rect x="997" y="212" width="26" height="15" fill="rgb(205,171,48)"/><text x="1000.00" y="222.50">&lt;..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.22%)</title><rect x="997" y="228" width="26" height="15" fill="rgb(231,128,30)"/><text x="1000.00" y="238.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.66%)</title><rect x="1003" y="244" width="20" height="15" fill="rgb(233,209,41)"/><text x="1006.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="1013" y="260" width="10" height="15" fill="rgb(229,77,16)"/><text x="1016.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="1013" y="276" width="10" height="15" fill="rgb(211,108,15)"/><text x="1016.00" y="286.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1020" y="292" width="3" height="15" fill="rgb(213,2,10)"/><text x="1023.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1033" y="212" width="3" height="15" fill="rgb(215,160,37)"/><text x="1036.00" y="222.50"></text></g><g><title>0x7fff6faabbb2 ([vdso]) (1 samples, 0.28%)</title><rect x="1033" y="228" width="3" height="15" fill="rgb(249,28,31)"/><text x="1036.00" y="238.50"></text></g><g><title>0x7fff6faab949 ([vdso]) (1 samples, 0.28%)</title><rect x="1033" y="244" width="3" height="15" fill="rgb(246,216,27)"/><text x="1036.00" y="254.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1039" y="228" width="3" height="15" fill="rgb(239,178,22)"/><text x="1042.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1039" y="244" width="3" height="15" fill="rgb(222,147,37)"/><text x="1042.00" y="254.50"></text></g><g><title>OrtValue::Get&lt;onnxruntime::Tensor&gt; [clone .localalias.13] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1046" y="260" width="3" height="15" fill="rgb(246,133,25)"/><text x="1049.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1049" y="260" width="3" height="15" fill="rgb(213,163,20)"/><text x="1052.00" y="270.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1049" y="276" width="3" height="15" fill="rgb(243,59,24)"/><text x="1052.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="1049" y="292" width="3" height="15" fill="rgb(213,82,36)"/><text x="1052.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1055" y="292" width="4" height="15" fill="rgb(254,185,30)"/><text x="1058.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1055" y="308" width="4" height="15" fill="rgb(241,78,35)"/><text x="1058.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1059" y="292" width="3" height="15" fill="rgb(218,81,53)"/><text x="1062.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1059" y="308" width="3" height="15" fill="rgb(232,130,37)"/><text x="1062.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1059" y="324" width="3" height="15" fill="rgb(215,146,42)"/><text x="1062.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1059" y="340" width="3" height="15" fill="rgb(238,59,54)"/><text x="1062.00" y="350.50"></text></g><g><title>0x7fb19a66ec38 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1059" y="356" width="3" height="15" fill="rgb(223,64,13)"/><text x="1062.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1062" y="292" width="3" height="15" fill="rgb(231,229,37)"/><text x="1065.00" y="302.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1062" y="308" width="3" height="15" fill="rgb(253,137,36)"/><text x="1065.00" y="318.50"></text></g><g><title>onnxruntime::SessionState::GetNodeIndexInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1072" y="356" width="3" height="15" fill="rgb(232,220,15)"/><text x="1075.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="1072" y="340" width="6" height="15" fill="rgb(233,12,29)"/><text x="1075.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1075" y="356" width="3" height="15" fill="rgb(253,23,26)"/><text x="1078.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1078" y="340" width="4" height="15" fill="rgb(233,86,11)"/><text x="1081.00" y="350.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1078" y="356" width="4" height="15" fill="rgb(227,123,53)"/><text x="1081.00" y="366.50"></text></g><g><title>0x7fb158664930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1078" y="372" width="4" height="15" fill="rgb(228,20,21)"/><text x="1081.00" y="382.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="1085" y="452" width="6" height="15" fill="rgb(205,220,34)"/><text x="1088.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="1085" y="468" width="6" height="15" fill="rgb(244,193,13)"/><text x="1088.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1088" y="484" width="3" height="15" fill="rgb(234,172,26)"/><text x="1091.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1088" y="500" width="3" height="15" fill="rgb(214,225,54)"/><text x="1091.00" y="510.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1088" y="516" width="3" height="15" fill="rgb(239,109,41)"/><text x="1091.00" y="526.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.49%)</title><rect x="1065" y="292" width="30" height="15" fill="rgb(234,18,33)"/><text x="1068.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.49%)</title><rect x="1065" y="308" width="30" height="15" fill="rgb(214,204,34)"/><text x="1068.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.49%)</title><rect x="1065" y="324" width="30" height="15" fill="rgb(243,191,3)"/><text x="1068.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.11%)</title><rect x="1082" y="340" width="13" height="15" fill="rgb(208,169,23)"/><text x="1085.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="1085" y="356" width="10" height="15" fill="rgb(249,184,31)"/><text x="1088.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="1085" y="372" width="10" height="15" fill="rgb(223,50,19)"/><text x="1088.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="1085" y="388" width="10" height="15" fill="rgb(232,137,51)"/><text x="1088.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="1085" y="404" width="10" height="15" fill="rgb(223,156,4)"/><text x="1088.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="1085" y="420" width="10" height="15" fill="rgb(232,186,4)"/><text x="1088.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="1085" y="436" width="10" height="15" fill="rgb(210,213,52)"/><text x="1088.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1091" y="452" width="4" height="15" fill="rgb(249,87,10)"/><text x="1094.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1091" y="468" width="4" height="15" fill="rgb(252,128,12)"/><text x="1094.00" y="478.50"></text></g><g><title>0x7fb18a1397d0 (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1095" y="308" width="3" height="15" fill="rgb(232,148,21)"/><text x="1098.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 4.16%)</title><rect x="1052" y="260" width="49" height="15" fill="rgb(221,43,52)"/><text x="1055.00" y="270.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 3.88%)</title><rect x="1055" y="276" width="46" height="15" fill="rgb(249,193,42)"/><text x="1058.00" y="286.50">onnx..</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (2 samples, 0.55%)</title><rect x="1095" y="292" width="6" height="15" fill="rgb(222,146,1)"/><text x="1098.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1098" y="308" width="3" height="15" fill="rgb(233,17,17)"/><text x="1101.00" y="318.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1105" y="276" width="3" height="15" fill="rgb(223,171,37)"/><text x="1108.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1105" y="292" width="3" height="15" fill="rgb(245,229,35)"/><text x="1108.00" y="302.50"></text></g><g><title>std::__shared_ptr&lt;onnxruntime::IAllocator, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr [clone .localalias.84] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1108" y="276" width="3" height="15" fill="rgb(247,95,39)"/><text x="1111.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.11%)</title><rect x="1101" y="260" width="13" height="15" fill="rgb(252,163,17)"/><text x="1104.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.28%)</title><rect x="1111" y="276" width="3" height="15" fill="rgb(217,75,48)"/><text x="1114.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1037) (1 samples, 0.28%)</title><rect x="1114" y="292" width="4" height="15" fill="rgb(247,37,17)"/><text x="1117.00" y="302.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="1114" y="260" width="7" height="15" fill="rgb(220,45,39)"/><text x="1117.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.55%)</title><rect x="1114" y="276" width="7" height="15" fill="rgb(241,9,17)"/><text x="1117.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1077) (1 samples, 0.28%)</title><rect x="1118" y="292" width="3" height="15" fill="rgb(222,53,35)"/><text x="1121.00" y="302.50"></text></g><g><title>onnxruntime::python::OrtPybindThrowIfError (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1121" y="260" width="3" height="15" fill="rgb(221,52,24)"/><text x="1124.00" y="270.50"></text></g><g><title>onnxruntime::common::Status::ToString[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1121" y="276" width="3" height="15" fill="rgb(235,212,11)"/><text x="1124.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1124" y="260" width="3" height="15" fill="rgb(225,60,45)"/><text x="1127.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1124" y="276" width="3" height="15" fill="rgb(244,73,7)"/><text x="1127.00" y="286.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1127" y="260" width="4" height="15" fill="rgb(232,128,52)"/><text x="1130.00" y="270.50"></text></g><g><title>0x7fb19a66d906 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1127" y="276" width="4" height="15" fill="rgb(244,216,48)"/><text x="1130.00" y="286.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1131" y="260" width="3" height="15" fill="rgb(213,155,27)"/><text x="1134.00" y="270.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1137" y="356" width="3" height="15" fill="rgb(241,181,5)"/><text x="1140.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1137" y="372" width="3" height="15" fill="rgb(228,71,18)"/><text x="1140.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="1137" y="324" width="7" height="15" fill="rgb(249,46,24)"/><text x="1140.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="1137" y="340" width="7" height="15" fill="rgb(209,198,43)"/><text x="1140.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1140" y="356" width="4" height="15" fill="rgb(245,153,19)"/><text x="1143.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1140" y="372" width="4" height="15" fill="rgb(226,28,21)"/><text x="1143.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1140" y="388" width="4" height="15" fill="rgb(224,30,14)"/><text x="1143.00" y="398.50"></text></g><g><title>0x7fb19a66dbe8 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1140" y="404" width="4" height="15" fill="rgb(218,89,21)"/><text x="1143.00" y="414.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (31 samples, 8.59%)</title><rect x="1046" y="244" width="101" height="15" fill="rgb(236,205,34)"/><text x="1049.00" y="254.50">onnxruntime:..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.11%)</title><rect x="1134" y="260" width="13" height="15" fill="rgb(241,184,45)"/><text x="1137.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.11%)</title><rect x="1134" y="276" width="13" height="15" fill="rgb(240,162,5)"/><text x="1137.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.11%)</title><rect x="1134" y="292" width="13" height="15" fill="rgb(236,187,16)"/><text x="1137.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.11%)</title><rect x="1134" y="308" width="13" height="15" fill="rgb(223,58,24)"/><text x="1137.00" y="318.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1144" y="324" width="3" height="15" fill="rgb(225,34,21)"/><text x="1147.00" y="334.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1147" y="244" width="3" height="15" fill="rgb(254,90,52)"/><text x="1150.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1147" y="260" width="3" height="15" fill="rgb(206,204,0)"/><text x="1150.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1150" y="244" width="4" height="15" fill="rgb(249,20,36)"/><text x="1153.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1150" y="260" width="4" height="15" fill="rgb(250,173,22)"/><text x="1153.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1150" y="276" width="4" height="15" fill="rgb(205,184,3)"/><text x="1153.00" y="286.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (57 samples, 15.79%)</title><rect x="974" y="164" width="186" height="15" fill="rgb(246,59,5)"/><text x="977.00" y="174.50">_run_whole_runtime (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (57 samples, 15.79%)</title><rect x="974" y="180" width="186" height="15" fill="rgb(231,74,22)"/><text x="977.00" y="190.50">run (mlprodict/onnxrt/op..</text></g><g><title>run (onnxruntime/capi/session.py:136) (42 samples, 11.63%)</title><rect x="1023" y="196" width="137" height="15" fill="rgb(214,83,40)"/><text x="1026.00" y="206.50">run (onnxruntime/..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (38 samples, 10.53%)</title><rect x="1036" y="212" width="124" height="15" fill="rgb(240,2,36)"/><text x="1039.00" y="222.50">pybind11::cpp_f..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (36 samples, 9.97%)</title><rect x="1042" y="228" width="118" height="15" fill="rgb(216,20,3)"/><text x="1045.00" y="238.50">void pybind11:..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="1154" y="244" width="6" height="15" fill="rgb(235,55,52)"/><text x="1157.00" y="254.50"></text></g><g><title>0x7fb19a68e120 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1183" y="180" width="3" height="15" fill="rgb(228,160,17)"/><text x="1186.00" y="190.50"></text></g><g><title>all (361 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(253,197,19)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1_4_12_float_.py:68) (81 samples, 22.44%)</title><rect x="925" y="52" width="265" height="15" fill="rgb(245,48,4)"/><text x="928.00" y="62.50">&lt;module&gt; (bench_LinearRegression_de..</text></g><g><title>profile_ort (bench_LinearRegression_default_b_reg_1_4_12_float_.py:67) (81 samples, 22.44%)</title><rect x="925" y="68" width="265" height="15" fill="rgb(241,218,16)"/><text x="928.00" y="78.50">profile_ort (bench_LinearRegression..</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py:37) (80 samples, 22.16%)</title><rect x="928" y="84" width="262" height="15" fill="rgb(247,90,50)"/><text x="931.00" y="94.50">setup_profile (bench_LinearRegressi..</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py:31) (78 samples, 21.61%)</title><rect x="935" y="100" width="255" height="15" fill="rgb(216,146,9)"/><text x="938.00" y="110.50">profile (bench_LinearRegression_de..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (77 samples, 21.33%)</title><rect x="938" y="116" width="252" height="15" fill="rgb(238,3,47)"/><text x="941.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (74 samples, 20.50%)</title><rect x="948" y="132" width="242" height="15" fill="rgb(238,48,43)"/><text x="951.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (69 samples, 19.11%)</title><rect x="964" y="148" width="226" height="15" fill="rgb(252,144,2)"/><text x="967.00" y="158.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (9 samples, 2.49%)</title><rect x="1160" y="164" width="30" height="15" fill="rgb(250,127,26)"/><text x="1163.00" y="174.50">_r..</text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.28%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(208,42,18)"/><text x="1189.00" y="190.50"></text></g></g></svg>