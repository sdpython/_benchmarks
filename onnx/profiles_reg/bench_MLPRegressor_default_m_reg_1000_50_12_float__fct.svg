<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1670" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1653.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1653.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(225,42,52)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(231,182,43)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(229,203,47)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(215,74,9)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(206,150,32)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(231,93,26)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="10" y="964" width="2" height="15" fill="rgb(228,61,47)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="10" y="980" width="2" height="15" fill="rgb(218,38,33)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="10" y="996" width="2" height="15" fill="rgb(237,104,7)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="10" y="1012" width="2" height="15" fill="rgb(222,116,28)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.22%)</title><rect x="10" y="1028" width="2" height="15" fill="rgb(207,125,34)"/><text x="13.00" y="1038.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="948" width="3" height="15" fill="rgb(233,137,25)"/><text x="15.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="964" width="3" height="15" fill="rgb(225,75,28)"/><text x="15.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="980" width="3" height="15" fill="rgb(228,151,47)"/><text x="15.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.22%)</title><rect x="12" y="996" width="3" height="15" fill="rgb(254,62,20)"/><text x="15.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.22%)</title><rect x="12" y="1012" width="3" height="15" fill="rgb(254,23,32)"/><text x="15.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.22%)</title><rect x="12" y="1028" width="3" height="15" fill="rgb(223,102,40)"/><text x="15.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.22%)</title><rect x="12" y="1044" width="3" height="15" fill="rgb(240,185,41)"/><text x="15.00" y="1054.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 0.66%)</title><rect x="10" y="292" width="7" height="15" fill="rgb(253,42,25)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="308" width="7" height="15" fill="rgb(229,23,49)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="324" width="7" height="15" fill="rgb(212,76,20)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="340" width="7" height="15" fill="rgb(237,99,24)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="10" y="356" width="7" height="15" fill="rgb(210,107,27)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="372" width="7" height="15" fill="rgb(250,198,48)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 0.66%)</title><rect x="10" y="388" width="7" height="15" fill="rgb(206,40,28)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="404" width="7" height="15" fill="rgb(220,17,0)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="420" width="7" height="15" fill="rgb(205,27,29)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="436" width="7" height="15" fill="rgb(249,46,24)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="10" y="452" width="7" height="15" fill="rgb(213,202,19)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="468" width="7" height="15" fill="rgb(213,204,9)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 0.66%)</title><rect x="10" y="484" width="7" height="15" fill="rgb(230,127,40)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="500" width="7" height="15" fill="rgb(238,27,5)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="516" width="7" height="15" fill="rgb(228,47,8)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="532" width="7" height="15" fill="rgb(252,168,19)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="10" y="548" width="7" height="15" fill="rgb(217,51,54)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="564" width="7" height="15" fill="rgb(218,133,6)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 0.66%)</title><rect x="10" y="580" width="7" height="15" fill="rgb(207,159,30)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="596" width="7" height="15" fill="rgb(240,196,26)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="612" width="7" height="15" fill="rgb(209,227,54)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="628" width="7" height="15" fill="rgb(238,171,8)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="644" width="7" height="15" fill="rgb(232,115,50)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="660" width="7" height="15" fill="rgb(217,208,36)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="676" width="7" height="15" fill="rgb(220,190,11)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="10" y="692" width="7" height="15" fill="rgb(217,5,44)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="708" width="7" height="15" fill="rgb(235,21,16)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 0.66%)</title><rect x="10" y="724" width="7" height="15" fill="rgb(241,141,41)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="740" width="7" height="15" fill="rgb(236,59,45)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="756" width="7" height="15" fill="rgb(247,200,12)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="772" width="7" height="15" fill="rgb(223,12,53)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="10" y="788" width="7" height="15" fill="rgb(211,57,26)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="10" y="804" width="7" height="15" fill="rgb(252,65,40)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 0.66%)</title><rect x="10" y="820" width="7" height="15" fill="rgb(216,151,0)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.66%)</title><rect x="10" y="836" width="7" height="15" fill="rgb(217,122,52)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.66%)</title><rect x="10" y="852" width="7" height="15" fill="rgb(216,219,38)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.44%)</title><rect x="12" y="868" width="5" height="15" fill="rgb(231,33,22)"/><text x="15.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.44%)</title><rect x="12" y="884" width="5" height="15" fill="rgb(208,161,0)"/><text x="15.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.44%)</title><rect x="12" y="900" width="5" height="15" fill="rgb(213,121,38)"/><text x="15.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.44%)</title><rect x="12" y="916" width="5" height="15" fill="rgb(240,174,34)"/><text x="15.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.44%)</title><rect x="12" y="932" width="5" height="15" fill="rgb(249,65,39)"/><text x="15.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.22%)</title><rect x="15" y="948" width="2" height="15" fill="rgb(241,210,37)"/><text x="18.00" y="958.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="15" y="964" width="2" height="15" fill="rgb(250,90,29)"/><text x="18.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="17" y="500" width="5" height="15" fill="rgb(208,166,47)"/><text x="20.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="17" y="516" width="5" height="15" fill="rgb(242,170,33)"/><text x="20.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="17" y="532" width="5" height="15" fill="rgb(218,24,16)"/><text x="20.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="17" y="548" width="5" height="15" fill="rgb(219,122,21)"/><text x="20.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="17" y="564" width="5" height="15" fill="rgb(223,119,6)"/><text x="20.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.44%)</title><rect x="17" y="580" width="5" height="15" fill="rgb(233,206,15)"/><text x="20.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="17" y="596" width="5" height="15" fill="rgb(235,180,14)"/><text x="20.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="17" y="612" width="5" height="15" fill="rgb(221,135,53)"/><text x="20.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="17" y="628" width="5" height="15" fill="rgb(245,227,29)"/><text x="20.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="17" y="644" width="5" height="15" fill="rgb(239,103,20)"/><text x="20.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="17" y="660" width="5" height="15" fill="rgb(208,3,48)"/><text x="20.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.44%)</title><rect x="17" y="676" width="5" height="15" fill="rgb(233,10,15)"/><text x="20.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="692" width="2" height="15" fill="rgb(247,225,4)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="708" width="2" height="15" fill="rgb(231,161,20)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="724" width="2" height="15" fill="rgb(206,40,54)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="740" width="2" height="15" fill="rgb(216,50,34)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="756" width="2" height="15" fill="rgb(226,89,30)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.22%)</title><rect x="20" y="772" width="2" height="15" fill="rgb(244,6,54)"/><text x="23.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="788" width="2" height="15" fill="rgb(222,196,54)"/><text x="23.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="804" width="2" height="15" fill="rgb(205,129,46)"/><text x="23.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="820" width="2" height="15" fill="rgb(225,10,27)"/><text x="23.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="836" width="2" height="15" fill="rgb(247,141,10)"/><text x="23.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="852" width="2" height="15" fill="rgb(211,142,29)"/><text x="23.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="868" width="2" height="15" fill="rgb(215,146,16)"/><text x="23.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="884" width="2" height="15" fill="rgb(220,61,10)"/><text x="23.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.22%)</title><rect x="20" y="900" width="2" height="15" fill="rgb(221,210,27)"/><text x="23.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="916" width="2" height="15" fill="rgb(211,178,17)"/><text x="23.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="932" width="2" height="15" fill="rgb(221,52,33)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="948" width="2" height="15" fill="rgb(222,53,15)"/><text x="23.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="964" width="2" height="15" fill="rgb(231,217,11)"/><text x="23.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="980" width="2" height="15" fill="rgb(250,223,41)"/><text x="23.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="996" width="2" height="15" fill="rgb(234,175,50)"/><text x="23.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="1012" width="2" height="15" fill="rgb(245,70,49)"/><text x="23.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.22%)</title><rect x="20" y="1028" width="2" height="15" fill="rgb(240,118,16)"/><text x="23.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.22%)</title><rect x="20" y="1044" width="2" height="15" fill="rgb(211,163,23)"/><text x="23.00" y="1054.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.22%)</title><rect x="20" y="1060" width="2" height="15" fill="rgb(207,7,9)"/><text x="23.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py) (1 samples, 0.22%)</title><rect x="20" y="1076" width="2" height="15" fill="rgb(219,84,19)"/><text x="23.00" y="1086.50"></text></g><g><title>parameters (inspect.py) (1 samples, 0.22%)</title><rect x="20" y="1092" width="2" height="15" fill="rgb(250,47,17)"/><text x="23.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.32%)</title><rect x="10" y="196" width="15" height="15" fill="rgb(239,226,48)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.32%)</title><rect x="10" y="212" width="15" height="15" fill="rgb(219,137,22)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.32%)</title><rect x="10" y="228" width="15" height="15" fill="rgb(238,153,40)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.32%)</title><rect x="10" y="244" width="15" height="15" fill="rgb(218,57,11)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.32%)</title><rect x="10" y="260" width="15" height="15" fill="rgb(222,215,48)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.32%)</title><rect x="10" y="276" width="15" height="15" fill="rgb(218,123,34)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.66%)</title><rect x="17" y="292" width="8" height="15" fill="rgb(240,9,23)"/><text x="20.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="17" y="308" width="8" height="15" fill="rgb(224,166,28)"/><text x="20.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="17" y="324" width="8" height="15" fill="rgb(227,83,8)"/><text x="20.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="17" y="340" width="8" height="15" fill="rgb(234,89,33)"/><text x="20.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="17" y="356" width="8" height="15" fill="rgb(205,0,43)"/><text x="20.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="17" y="372" width="8" height="15" fill="rgb(209,213,53)"/><text x="20.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.66%)</title><rect x="17" y="388" width="8" height="15" fill="rgb(220,54,13)"/><text x="20.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="17" y="404" width="8" height="15" fill="rgb(228,74,44)"/><text x="20.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="17" y="420" width="8" height="15" fill="rgb(235,160,2)"/><text x="20.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="17" y="436" width="8" height="15" fill="rgb(239,141,34)"/><text x="20.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="17" y="452" width="8" height="15" fill="rgb(228,197,41)"/><text x="20.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="17" y="468" width="8" height="15" fill="rgb(237,92,16)"/><text x="20.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.66%)</title><rect x="17" y="484" width="8" height="15" fill="rgb(220,104,40)"/><text x="20.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="500" width="3" height="15" fill="rgb(216,138,2)"/><text x="25.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="516" width="3" height="15" fill="rgb(214,136,9)"/><text x="25.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="532" width="3" height="15" fill="rgb(213,227,14)"/><text x="25.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="548" width="3" height="15" fill="rgb(237,187,22)"/><text x="25.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="564" width="3" height="15" fill="rgb(213,219,28)"/><text x="25.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="580" width="3" height="15" fill="rgb(225,17,34)"/><text x="25.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="596" width="3" height="15" fill="rgb(236,202,28)"/><text x="25.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.22%)</title><rect x="22" y="612" width="3" height="15" fill="rgb(234,32,29)"/><text x="25.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="628" width="3" height="15" fill="rgb(218,155,30)"/><text x="25.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="644" width="3" height="15" fill="rgb(226,28,13)"/><text x="25.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="660" width="3" height="15" fill="rgb(236,25,3)"/><text x="25.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="676" width="3" height="15" fill="rgb(237,209,9)"/><text x="25.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="692" width="3" height="15" fill="rgb(214,25,46)"/><text x="25.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.22%)</title><rect x="22" y="708" width="3" height="15" fill="rgb(227,43,11)"/><text x="25.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="724" width="3" height="15" fill="rgb(250,121,48)"/><text x="25.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="740" width="3" height="15" fill="rgb(222,191,8)"/><text x="25.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="756" width="3" height="15" fill="rgb(217,182,7)"/><text x="25.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="772" width="3" height="15" fill="rgb(241,168,0)"/><text x="25.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="788" width="3" height="15" fill="rgb(244,86,44)"/><text x="25.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.22%)</title><rect x="22" y="804" width="3" height="15" fill="rgb(240,171,52)"/><text x="25.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="820" width="3" height="15" fill="rgb(246,45,42)"/><text x="25.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="836" width="3" height="15" fill="rgb(218,68,52)"/><text x="25.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="852" width="3" height="15" fill="rgb(253,78,6)"/><text x="25.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="868" width="3" height="15" fill="rgb(226,69,4)"/><text x="25.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="884" width="3" height="15" fill="rgb(253,72,40)"/><text x="25.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/my_exceptions.py) (1 samples, 0.22%)</title><rect x="22" y="900" width="3" height="15" fill="rgb(234,103,15)"/><text x="25.00" y="910.50"></text></g><g><title>_mk_common_exceptions (joblib/my_exceptions.py) (1 samples, 0.22%)</title><rect x="22" y="916" width="3" height="15" fill="rgb(254,58,10)"/><text x="25.00" y="926.50"></text></g><g><title>_mk_exception (joblib/my_exceptions.py) (1 samples, 0.22%)</title><rect x="22" y="932" width="3" height="15" fill="rgb(251,5,44)"/><text x="25.00" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="25" y="1172" width="5" height="15" fill="rgb(217,65,5)"/><text x="28.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="1188" width="5" height="15" fill="rgb(239,94,30)"/><text x="28.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (2 samples, 0.44%)</title><rect x="25" y="1204" width="5" height="15" fill="rgb(223,47,25)"/><text x="28.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="1220" width="5" height="15" fill="rgb(235,41,31)"/><text x="28.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="1236" width="5" height="15" fill="rgb(233,17,29)"/><text x="28.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="1252" width="5" height="15" fill="rgb(206,106,15)"/><text x="28.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="25" y="1268" width="5" height="15" fill="rgb(214,106,27)"/><text x="28.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="25" y="1284" width="5" height="15" fill="rgb(215,197,41)"/><text x="28.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (2 samples, 0.44%)</title><rect x="25" y="1300" width="5" height="15" fill="rgb(205,98,29)"/><text x="28.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (2 samples, 0.44%)</title><rect x="25" y="1316" width="5" height="15" fill="rgb(232,163,10)"/><text x="28.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (2 samples, 0.44%)</title><rect x="25" y="1332" width="5" height="15" fill="rgb(248,114,1)"/><text x="28.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (2 samples, 0.44%)</title><rect x="25" y="1348" width="5" height="15" fill="rgb(211,52,47)"/><text x="28.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (2 samples, 0.44%)</title><rect x="25" y="1364" width="5" height="15" fill="rgb(218,196,32)"/><text x="28.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (2 samples, 0.44%)</title><rect x="25" y="1380" width="5" height="15" fill="rgb(245,41,2)"/><text x="28.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (2 samples, 0.44%)</title><rect x="25" y="1396" width="5" height="15" fill="rgb(248,92,40)"/><text x="28.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.22%)</title><rect x="28" y="1412" width="2" height="15" fill="rgb(233,45,51)"/><text x="31.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="25" y="1124" width="8" height="15" fill="rgb(234,180,2)"/><text x="28.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="25" y="1140" width="8" height="15" fill="rgb(211,115,47)"/><text x="28.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="25" y="1156" width="8" height="15" fill="rgb(246,149,37)"/><text x="28.00" y="1166.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1172" width="3" height="15" fill="rgb(214,190,23)"/><text x="33.00" y="1182.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1188" width="3" height="15" fill="rgb(224,152,27)"/><text x="33.00" y="1198.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="30" y="1204" width="3" height="15" fill="rgb(251,82,41)"/><text x="33.00" y="1214.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="30" y="1220" width="3" height="15" fill="rgb(208,44,7)"/><text x="33.00" y="1230.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="30" y="1236" width="3" height="15" fill="rgb(250,190,28)"/><text x="33.00" y="1246.50"></text></g><g><title>_path_split (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="30" y="1252" width="3" height="15" fill="rgb(223,185,2)"/><text x="33.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="484" width="13" height="15" fill="rgb(208,67,18)"/><text x="28.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="500" width="13" height="15" fill="rgb(211,17,3)"/><text x="28.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="516" width="13" height="15" fill="rgb(237,173,23)"/><text x="28.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="532" width="13" height="15" fill="rgb(217,11,54)"/><text x="28.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.10%)</title><rect x="25" y="548" width="13" height="15" fill="rgb(210,136,4)"/><text x="28.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="564" width="13" height="15" fill="rgb(224,177,1)"/><text x="28.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (5 samples, 1.10%)</title><rect x="25" y="580" width="13" height="15" fill="rgb(208,201,27)"/><text x="28.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="596" width="13" height="15" fill="rgb(208,113,50)"/><text x="28.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="612" width="13" height="15" fill="rgb(216,64,23)"/><text x="28.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="628" width="13" height="15" fill="rgb(219,149,46)"/><text x="28.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.10%)</title><rect x="25" y="644" width="13" height="15" fill="rgb(228,61,46)"/><text x="28.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="660" width="13" height="15" fill="rgb(205,110,26)"/><text x="28.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (5 samples, 1.10%)</title><rect x="25" y="676" width="13" height="15" fill="rgb(232,226,15)"/><text x="28.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="692" width="13" height="15" fill="rgb(234,191,26)"/><text x="28.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="708" width="13" height="15" fill="rgb(234,109,8)"/><text x="28.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="724" width="13" height="15" fill="rgb(213,6,22)"/><text x="28.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.10%)</title><rect x="25" y="740" width="13" height="15" fill="rgb(234,63,18)"/><text x="28.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="756" width="13" height="15" fill="rgb(251,225,2)"/><text x="28.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (5 samples, 1.10%)</title><rect x="25" y="772" width="13" height="15" fill="rgb(228,193,38)"/><text x="28.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="788" width="13" height="15" fill="rgb(254,190,7)"/><text x="28.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="804" width="13" height="15" fill="rgb(250,203,42)"/><text x="28.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="820" width="13" height="15" fill="rgb(244,66,42)"/><text x="28.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.10%)</title><rect x="25" y="836" width="13" height="15" fill="rgb(235,120,28)"/><text x="28.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="852" width="13" height="15" fill="rgb(218,118,5)"/><text x="28.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (5 samples, 1.10%)</title><rect x="25" y="868" width="13" height="15" fill="rgb(238,79,47)"/><text x="28.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="884" width="13" height="15" fill="rgb(230,83,25)"/><text x="28.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="900" width="13" height="15" fill="rgb(236,1,41)"/><text x="28.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="916" width="13" height="15" fill="rgb(211,48,21)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="932" width="13" height="15" fill="rgb(237,80,37)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="948" width="13" height="15" fill="rgb(227,173,16)"/><text x="28.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="964" width="13" height="15" fill="rgb(214,173,50)"/><text x="28.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.10%)</title><rect x="25" y="980" width="13" height="15" fill="rgb(212,67,23)"/><text x="28.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="996" width="13" height="15" fill="rgb(235,203,17)"/><text x="28.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (5 samples, 1.10%)</title><rect x="25" y="1012" width="13" height="15" fill="rgb(244,99,48)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="1028" width="13" height="15" fill="rgb(236,34,7)"/><text x="28.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="1044" width="13" height="15" fill="rgb(224,136,1)"/><text x="28.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="1060" width="13" height="15" fill="rgb(254,99,12)"/><text x="28.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.10%)</title><rect x="25" y="1076" width="13" height="15" fill="rgb(243,214,32)"/><text x="28.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.10%)</title><rect x="25" y="1092" width="13" height="15" fill="rgb(241,175,1)"/><text x="28.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (5 samples, 1.10%)</title><rect x="25" y="1108" width="13" height="15" fill="rgb(238,77,37)"/><text x="28.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="33" y="1124" width="5" height="15" fill="rgb(224,102,49)"/><text x="36.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="33" y="1140" width="5" height="15" fill="rgb(220,74,21)"/><text x="36.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="33" y="1156" width="5" height="15" fill="rgb(226,182,32)"/><text x="36.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="33" y="1172" width="5" height="15" fill="rgb(241,29,0)"/><text x="36.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="33" y="1188" width="5" height="15" fill="rgb(247,158,54)"/><text x="36.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="33" y="1204" width="5" height="15" fill="rgb(223,55,18)"/><text x="36.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="33" y="1220" width="5" height="15" fill="rgb(211,75,36)"/><text x="36.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.44%)</title><rect x="33" y="1236" width="5" height="15" fill="rgb(206,89,45)"/><text x="36.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="33" y="1252" width="5" height="15" fill="rgb(228,145,19)"/><text x="36.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="33" y="1268" width="5" height="15" fill="rgb(239,45,33)"/><text x="36.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="33" y="1284" width="5" height="15" fill="rgb(208,67,13)"/><text x="36.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="33" y="1300" width="5" height="15" fill="rgb(238,166,16)"/><text x="36.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="33" y="1316" width="5" height="15" fill="rgb(206,10,38)"/><text x="36.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="33" y="1332" width="5" height="15" fill="rgb(220,58,47)"/><text x="36.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="33" y="1348" width="5" height="15" fill="rgb(223,160,51)"/><text x="36.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.44%)</title><rect x="33" y="1364" width="5" height="15" fill="rgb(224,73,3)"/><text x="36.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="33" y="1380" width="5" height="15" fill="rgb(254,97,12)"/><text x="36.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="33" y="1396" width="5" height="15" fill="rgb(235,6,47)"/><text x="36.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="33" y="1412" width="5" height="15" fill="rgb(235,213,9)"/><text x="36.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="33" y="1428" width="5" height="15" fill="rgb(227,173,51)"/><text x="36.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="33" y="1444" width="5" height="15" fill="rgb(206,175,14)"/><text x="36.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.44%)</title><rect x="33" y="1460" width="5" height="15" fill="rgb(220,78,36)"/><text x="36.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.44%)</title><rect x="33" y="1476" width="5" height="15" fill="rgb(237,91,50)"/><text x="36.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.44%)</title><rect x="33" y="1492" width="5" height="15" fill="rgb(253,123,41)"/><text x="36.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.44%)</title><rect x="33" y="1508" width="5" height="15" fill="rgb(241,150,12)"/><text x="36.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.44%)</title><rect x="33" y="1524" width="5" height="15" fill="rgb(209,42,22)"/><text x="36.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.22%)</title><rect x="35" y="1540" width="3" height="15" fill="rgb(241,228,48)"/><text x="38.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.22%)</title><rect x="35" y="1556" width="3" height="15" fill="rgb(249,189,27)"/><text x="38.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.22%)</title><rect x="35" y="1572" width="3" height="15" fill="rgb(233,23,20)"/><text x="38.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.22%)</title><rect x="35" y="1588" width="3" height="15" fill="rgb(218,129,48)"/><text x="38.00" y="1598.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.22%)</title><rect x="38" y="724" width="3" height="15" fill="rgb(232,52,7)"/><text x="41.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="740" width="3" height="15" fill="rgb(237,2,21)"/><text x="41.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="756" width="3" height="15" fill="rgb(217,61,31)"/><text x="41.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="772" width="3" height="15" fill="rgb(253,90,10)"/><text x="41.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="788" width="3" height="15" fill="rgb(237,189,21)"/><text x="41.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="804" width="3" height="15" fill="rgb(218,83,42)"/><text x="41.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.22%)</title><rect x="38" y="820" width="3" height="15" fill="rgb(232,227,22)"/><text x="41.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="836" width="3" height="15" fill="rgb(225,139,32)"/><text x="41.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="852" width="3" height="15" fill="rgb(241,155,26)"/><text x="41.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="868" width="3" height="15" fill="rgb(252,52,9)"/><text x="41.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="884" width="3" height="15" fill="rgb(227,10,6)"/><text x="41.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="900" width="3" height="15" fill="rgb(217,0,16)"/><text x="41.00" y="910.50"></text></g><g><title>0x7fa92b70040e (?) (1 samples, 0.22%)</title><rect x="38" y="916" width="3" height="15" fill="rgb(230,53,37)"/><text x="41.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="932" width="3" height="15" fill="rgb(231,2,8)"/><text x="41.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="948" width="3" height="15" fill="rgb(233,189,18)"/><text x="41.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="964" width="3" height="15" fill="rgb(212,220,26)"/><text x="41.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="980" width="3" height="15" fill="rgb(210,9,10)"/><text x="41.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="996" width="3" height="15" fill="rgb(224,101,19)"/><text x="41.00" y="1006.50"></text></g><g><title>0x7fa92b4b9cd2 (?) (1 samples, 0.22%)</title><rect x="38" y="1012" width="3" height="15" fill="rgb(246,131,5)"/><text x="41.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1028" width="3" height="15" fill="rgb(243,192,26)"/><text x="41.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1044" width="3" height="15" fill="rgb(211,60,28)"/><text x="41.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1060" width="3" height="15" fill="rgb(250,154,48)"/><text x="41.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="1076" width="3" height="15" fill="rgb(239,141,28)"/><text x="41.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1092" width="3" height="15" fill="rgb(210,213,26)"/><text x="41.00" y="1102.50"></text></g><g><title>0x7fa92abaf0e5 (?) (1 samples, 0.22%)</title><rect x="38" y="1108" width="3" height="15" fill="rgb(247,71,43)"/><text x="41.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1124" width="3" height="15" fill="rgb(238,226,7)"/><text x="41.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1140" width="3" height="15" fill="rgb(254,39,40)"/><text x="41.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1156" width="3" height="15" fill="rgb(223,64,38)"/><text x="41.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="1172" width="3" height="15" fill="rgb(232,31,52)"/><text x="41.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1188" width="3" height="15" fill="rgb(247,87,0)"/><text x="41.00" y="1198.50"></text></g><g><title>0x7fa92a933e68 (?) (1 samples, 0.22%)</title><rect x="38" y="1204" width="3" height="15" fill="rgb(227,75,19)"/><text x="41.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1220" width="3" height="15" fill="rgb(248,148,22)"/><text x="41.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1236" width="3" height="15" fill="rgb(237,139,11)"/><text x="41.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1252" width="3" height="15" fill="rgb(238,215,39)"/><text x="41.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="1268" width="3" height="15" fill="rgb(243,172,16)"/><text x="41.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1284" width="3" height="15" fill="rgb(218,152,8)"/><text x="41.00" y="1294.50"></text></g><g><title>0x7fa92a6c42fb (?) (1 samples, 0.22%)</title><rect x="38" y="1300" width="3" height="15" fill="rgb(223,83,53)"/><text x="41.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1316" width="3" height="15" fill="rgb(250,206,38)"/><text x="41.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1332" width="3" height="15" fill="rgb(220,191,15)"/><text x="41.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1348" width="3" height="15" fill="rgb(245,165,45)"/><text x="41.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="1364" width="3" height="15" fill="rgb(226,118,16)"/><text x="41.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1380" width="3" height="15" fill="rgb(205,61,40)"/><text x="41.00" y="1390.50"></text></g><g><title>0x7fa92a4a801d (?) (1 samples, 0.22%)</title><rect x="38" y="1396" width="3" height="15" fill="rgb(248,138,3)"/><text x="41.00" y="1406.50"></text></g><g><title>0x7fa92a4a6c13 (?) (1 samples, 0.22%)</title><rect x="38" y="1412" width="3" height="15" fill="rgb(235,61,14)"/><text x="41.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1428" width="3" height="15" fill="rgb(230,173,22)"/><text x="41.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1444" width="3" height="15" fill="rgb(212,197,5)"/><text x="41.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1460" width="3" height="15" fill="rgb(218,42,10)"/><text x="41.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1476" width="3" height="15" fill="rgb(236,54,30)"/><text x="41.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1492" width="3" height="15" fill="rgb(228,218,35)"/><text x="41.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1508" width="3" height="15" fill="rgb(244,8,1)"/><text x="41.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="1524" width="3" height="15" fill="rgb(225,42,13)"/><text x="41.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1540" width="3" height="15" fill="rgb(208,228,3)"/><text x="41.00" y="1550.50"></text></g><g><title>&lt;module&gt; (pandas/_config/__init__.py) (1 samples, 0.22%)</title><rect x="38" y="1556" width="3" height="15" fill="rgb(213,71,9)"/><text x="41.00" y="1566.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1572" width="3" height="15" fill="rgb(230,67,12)"/><text x="41.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1588" width="3" height="15" fill="rgb(208,117,25)"/><text x="41.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1604" width="3" height="15" fill="rgb(244,83,3)"/><text x="41.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1620" width="3" height="15" fill="rgb(231,103,5)"/><text x="41.00" y="1630.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (7 samples, 1.54%)</title><rect x="25" y="340" width="18" height="15" fill="rgb(251,128,22)"/><text x="28.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.54%)</title><rect x="25" y="356" width="18" height="15" fill="rgb(230,83,20)"/><text x="28.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.54%)</title><rect x="25" y="372" width="18" height="15" fill="rgb(233,113,46)"/><text x="28.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.54%)</title><rect x="25" y="388" width="18" height="15" fill="rgb(251,93,8)"/><text x="28.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.54%)</title><rect x="25" y="404" width="18" height="15" fill="rgb(242,223,17)"/><text x="28.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.54%)</title><rect x="25" y="420" width="18" height="15" fill="rgb(214,125,3)"/><text x="28.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (7 samples, 1.54%)</title><rect x="25" y="436" width="18" height="15" fill="rgb(206,90,7)"/><text x="28.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.54%)</title><rect x="25" y="452" width="18" height="15" fill="rgb(250,190,4)"/><text x="28.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.54%)</title><rect x="25" y="468" width="18" height="15" fill="rgb(221,85,8)"/><text x="28.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="38" y="484" width="5" height="15" fill="rgb(217,84,2)"/><text x="41.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="38" y="500" width="5" height="15" fill="rgb(249,151,20)"/><text x="41.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="38" y="516" width="5" height="15" fill="rgb(254,24,7)"/><text x="41.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.44%)</title><rect x="38" y="532" width="5" height="15" fill="rgb(239,99,16)"/><text x="41.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="38" y="548" width="5" height="15" fill="rgb(208,71,41)"/><text x="41.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="38" y="564" width="5" height="15" fill="rgb(211,105,11)"/><text x="41.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="38" y="580" width="5" height="15" fill="rgb(249,157,9)"/><text x="41.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="38" y="596" width="5" height="15" fill="rgb(249,211,0)"/><text x="41.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="38" y="612" width="5" height="15" fill="rgb(221,70,35)"/><text x="41.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.44%)</title><rect x="38" y="628" width="5" height="15" fill="rgb(252,73,43)"/><text x="41.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="38" y="644" width="5" height="15" fill="rgb(245,212,14)"/><text x="41.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="38" y="660" width="5" height="15" fill="rgb(210,26,31)"/><text x="41.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="38" y="676" width="5" height="15" fill="rgb(223,172,13)"/><text x="41.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="38" y="692" width="5" height="15" fill="rgb(232,118,14)"/><text x="41.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="38" y="708" width="5" height="15" fill="rgb(239,61,33)"/><text x="41.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.22%)</title><rect x="41" y="724" width="2" height="15" fill="rgb(240,181,50)"/><text x="44.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="740" width="2" height="15" fill="rgb(237,212,46)"/><text x="44.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="756" width="2" height="15" fill="rgb(229,111,43)"/><text x="44.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="772" width="2" height="15" fill="rgb(232,97,2)"/><text x="44.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="41" y="788" width="2" height="15" fill="rgb(224,185,9)"/><text x="44.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="804" width="2" height="15" fill="rgb(215,173,10)"/><text x="44.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.22%)</title><rect x="41" y="820" width="2" height="15" fill="rgb(249,156,52)"/><text x="44.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="836" width="2" height="15" fill="rgb(213,157,15)"/><text x="44.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="852" width="2" height="15" fill="rgb(209,98,48)"/><text x="44.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="868" width="2" height="15" fill="rgb(228,178,11)"/><text x="44.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="41" y="884" width="2" height="15" fill="rgb(228,56,15)"/><text x="44.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="900" width="2" height="15" fill="rgb(220,171,30)"/><text x="44.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.22%)</title><rect x="41" y="916" width="2" height="15" fill="rgb(212,26,6)"/><text x="44.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="932" width="2" height="15" fill="rgb(239,148,32)"/><text x="44.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="948" width="2" height="15" fill="rgb(214,63,49)"/><text x="44.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="964" width="2" height="15" fill="rgb(239,39,23)"/><text x="44.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="41" y="980" width="2" height="15" fill="rgb(236,105,11)"/><text x="44.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="996" width="2" height="15" fill="rgb(223,184,47)"/><text x="44.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.22%)</title><rect x="41" y="1012" width="2" height="15" fill="rgb(231,86,42)"/><text x="44.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1028" width="2" height="15" fill="rgb(234,29,0)"/><text x="44.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1044" width="2" height="15" fill="rgb(219,94,12)"/><text x="44.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1060" width="2" height="15" fill="rgb(229,58,8)"/><text x="44.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="41" y="1076" width="2" height="15" fill="rgb(253,118,30)"/><text x="44.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1092" width="2" height="15" fill="rgb(244,34,34)"/><text x="44.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.22%)</title><rect x="41" y="1108" width="2" height="15" fill="rgb(243,215,44)"/><text x="44.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1124" width="2" height="15" fill="rgb(236,121,44)"/><text x="44.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1140" width="2" height="15" fill="rgb(253,19,41)"/><text x="44.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1156" width="2" height="15" fill="rgb(206,184,13)"/><text x="44.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="41" y="1172" width="2" height="15" fill="rgb(247,159,29)"/><text x="44.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1188" width="2" height="15" fill="rgb(249,160,24)"/><text x="44.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.22%)</title><rect x="41" y="1204" width="2" height="15" fill="rgb(224,154,54)"/><text x="44.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1220" width="2" height="15" fill="rgb(229,131,4)"/><text x="44.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1236" width="2" height="15" fill="rgb(236,119,3)"/><text x="44.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1252" width="2" height="15" fill="rgb(246,23,41)"/><text x="44.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="41" y="1268" width="2" height="15" fill="rgb(235,167,16)"/><text x="44.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1284" width="2" height="15" fill="rgb(236,181,21)"/><text x="44.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.22%)</title><rect x="41" y="1300" width="2" height="15" fill="rgb(240,97,23)"/><text x="44.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1316" width="2" height="15" fill="rgb(225,174,4)"/><text x="44.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1332" width="2" height="15" fill="rgb(212,98,1)"/><text x="44.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1348" width="2" height="15" fill="rgb(211,135,9)"/><text x="44.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="41" y="1364" width="2" height="15" fill="rgb(224,133,33)"/><text x="44.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1380" width="2" height="15" fill="rgb(251,159,2)"/><text x="44.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.22%)</title><rect x="41" y="1396" width="2" height="15" fill="rgb(241,163,22)"/><text x="44.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1412" width="2" height="15" fill="rgb(221,136,53)"/><text x="44.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1428" width="2" height="15" fill="rgb(210,107,48)"/><text x="44.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1444" width="2" height="15" fill="rgb(227,175,4)"/><text x="44.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="41" y="1460" width="2" height="15" fill="rgb(238,123,7)"/><text x="44.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="41" y="1476" width="2" height="15" fill="rgb(228,188,16)"/><text x="44.00" y="1486.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="41" y="1492" width="2" height="15" fill="rgb(225,209,48)"/><text x="44.00" y="1502.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.22%)</title><rect x="43" y="580" width="3" height="15" fill="rgb(254,81,4)"/><text x="46.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="596" width="3" height="15" fill="rgb(233,187,28)"/><text x="46.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="612" width="3" height="15" fill="rgb(246,34,23)"/><text x="46.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="628" width="3" height="15" fill="rgb(252,94,23)"/><text x="46.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="644" width="3" height="15" fill="rgb(250,73,43)"/><text x="46.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="660" width="3" height="15" fill="rgb(214,228,20)"/><text x="46.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="676" width="3" height="15" fill="rgb(248,133,0)"/><text x="46.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="43" y="692" width="3" height="15" fill="rgb(233,148,51)"/><text x="46.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="708" width="3" height="15" fill="rgb(224,57,6)"/><text x="46.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.22%)</title><rect x="43" y="724" width="3" height="15" fill="rgb(227,98,7)"/><text x="46.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="740" width="3" height="15" fill="rgb(222,161,36)"/><text x="46.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="756" width="3" height="15" fill="rgb(248,157,31)"/><text x="46.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="772" width="3" height="15" fill="rgb(237,38,3)"/><text x="46.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="43" y="788" width="3" height="15" fill="rgb(233,134,20)"/><text x="46.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="804" width="3" height="15" fill="rgb(213,59,47)"/><text x="46.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.22%)</title><rect x="43" y="820" width="3" height="15" fill="rgb(209,113,47)"/><text x="46.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="836" width="3" height="15" fill="rgb(208,82,44)"/><text x="46.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="852" width="3" height="15" fill="rgb(238,178,1)"/><text x="46.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="868" width="3" height="15" fill="rgb(254,193,18)"/><text x="46.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="43" y="884" width="3" height="15" fill="rgb(211,50,23)"/><text x="46.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="900" width="3" height="15" fill="rgb(242,33,30)"/><text x="46.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.22%)</title><rect x="43" y="916" width="3" height="15" fill="rgb(232,91,41)"/><text x="46.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="932" width="3" height="15" fill="rgb(244,150,41)"/><text x="46.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="948" width="3" height="15" fill="rgb(231,226,46)"/><text x="46.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="964" width="3" height="15" fill="rgb(230,2,46)"/><text x="46.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="980" width="3" height="15" fill="rgb(232,128,37)"/><text x="46.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="996" width="3" height="15" fill="rgb(216,211,18)"/><text x="46.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="1012" width="3" height="15" fill="rgb(217,15,47)"/><text x="46.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="43" y="1028" width="3" height="15" fill="rgb(242,95,27)"/><text x="46.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="1044" width="3" height="15" fill="rgb(244,149,44)"/><text x="46.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.22%)</title><rect x="43" y="1060" width="3" height="15" fill="rgb(215,212,43)"/><text x="46.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="1076" width="3" height="15" fill="rgb(230,48,37)"/><text x="46.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="1092" width="3" height="15" fill="rgb(227,208,52)"/><text x="46.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="1108" width="3" height="15" fill="rgb(230,67,11)"/><text x="46.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="43" y="1124" width="3" height="15" fill="rgb(250,22,37)"/><text x="46.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="1140" width="3" height="15" fill="rgb(221,7,42)"/><text x="46.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py) (1 samples, 0.22%)</title><rect x="43" y="1156" width="3" height="15" fill="rgb(252,120,11)"/><text x="46.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="1172" width="3" height="15" fill="rgb(223,98,21)"/><text x="46.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="1188" width="3" height="15" fill="rgb(228,85,25)"/><text x="46.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="1204" width="3" height="15" fill="rgb(213,27,41)"/><text x="46.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="43" y="1220" width="3" height="15" fill="rgb(212,5,33)"/><text x="46.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="43" y="1236" width="3" height="15" fill="rgb(251,175,7)"/><text x="46.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="43" y="1252" width="3" height="15" fill="rgb(234,210,6)"/><text x="46.00" y="1262.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="46" y="628" width="2" height="15" fill="rgb(235,74,47)"/><text x="49.00" y="638.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="46" y="644" width="2" height="15" fill="rgb(231,228,13)"/><text x="49.00" y="654.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="46" y="660" width="2" height="15" fill="rgb(251,166,14)"/><text x="49.00" y="670.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="46" y="676" width="2" height="15" fill="rgb(215,217,27)"/><text x="49.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.52%)</title><rect x="10" y="68" width="41" height="15" fill="rgb(245,54,2)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.52%)</title><rect x="10" y="84" width="41" height="15" fill="rgb(219,221,3)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.52%)</title><rect x="10" y="100" width="41" height="15" fill="rgb(229,73,16)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 3.52%)</title><rect x="10" y="116" width="41" height="15" fill="rgb(218,55,25)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.52%)</title><rect x="10" y="132" width="41" height="15" fill="rgb(234,18,17)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py) (16 samples, 3.52%)</title><rect x="10" y="148" width="41" height="15" fill="rgb(247,200,8)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.52%)</title><rect x="10" y="164" width="41" height="15" fill="rgb(214,82,26)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.52%)</title><rect x="10" y="180" width="41" height="15" fill="rgb(210,182,43)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.20%)</title><rect x="25" y="196" width="26" height="15" fill="rgb(250,213,32)"/><text x="28.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.20%)</title><rect x="25" y="212" width="26" height="15" fill="rgb(245,221,13)"/><text x="28.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.20%)</title><rect x="25" y="228" width="26" height="15" fill="rgb(246,50,52)"/><text x="28.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (10 samples, 2.20%)</title><rect x="25" y="244" width="26" height="15" fill="rgb(251,62,19)"/><text x="28.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.20%)</title><rect x="25" y="260" width="26" height="15" fill="rgb(215,148,41)"/><text x="28.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.20%)</title><rect x="25" y="276" width="26" height="15" fill="rgb(238,86,47)"/><text x="28.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.20%)</title><rect x="25" y="292" width="26" height="15" fill="rgb(212,179,12)"/><text x="28.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.20%)</title><rect x="25" y="308" width="26" height="15" fill="rgb(233,162,22)"/><text x="28.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.20%)</title><rect x="25" y="324" width="26" height="15" fill="rgb(225,223,48)"/><text x="28.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 0.66%)</title><rect x="43" y="340" width="8" height="15" fill="rgb(220,98,4)"/><text x="46.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="43" y="356" width="8" height="15" fill="rgb(248,33,25)"/><text x="46.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="43" y="372" width="8" height="15" fill="rgb(239,88,29)"/><text x="46.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="43" y="388" width="8" height="15" fill="rgb(237,71,21)"/><text x="46.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="43" y="404" width="8" height="15" fill="rgb(224,115,50)"/><text x="46.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="43" y="420" width="8" height="15" fill="rgb(222,91,41)"/><text x="46.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="43" y="436" width="8" height="15" fill="rgb(236,152,34)"/><text x="46.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="43" y="452" width="8" height="15" fill="rgb(209,160,19)"/><text x="46.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="43" y="468" width="8" height="15" fill="rgb(250,194,46)"/><text x="46.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 0.66%)</title><rect x="43" y="484" width="8" height="15" fill="rgb(222,108,5)"/><text x="46.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="43" y="500" width="8" height="15" fill="rgb(231,119,2)"/><text x="46.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="43" y="516" width="8" height="15" fill="rgb(221,11,26)"/><text x="46.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="43" y="532" width="8" height="15" fill="rgb(230,114,23)"/><text x="46.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="43" y="548" width="8" height="15" fill="rgb(237,156,24)"/><text x="46.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="43" y="564" width="8" height="15" fill="rgb(236,127,37)"/><text x="46.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.44%)</title><rect x="46" y="580" width="5" height="15" fill="rgb(237,19,4)"/><text x="49.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="46" y="596" width="5" height="15" fill="rgb(252,69,48)"/><text x="49.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="46" y="612" width="5" height="15" fill="rgb(206,93,13)"/><text x="49.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="628" width="3" height="15" fill="rgb(254,146,17)"/><text x="51.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="48" y="644" width="3" height="15" fill="rgb(244,221,33)"/><text x="51.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="660" width="3" height="15" fill="rgb(254,108,41)"/><text x="51.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.22%)</title><rect x="48" y="676" width="3" height="15" fill="rgb(238,62,21)"/><text x="51.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="692" width="3" height="15" fill="rgb(207,187,35)"/><text x="51.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="708" width="3" height="15" fill="rgb(214,149,16)"/><text x="51.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="724" width="3" height="15" fill="rgb(208,49,8)"/><text x="51.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="48" y="740" width="3" height="15" fill="rgb(224,83,27)"/><text x="51.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="756" width="3" height="15" fill="rgb(229,226,26)"/><text x="51.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.22%)</title><rect x="48" y="772" width="3" height="15" fill="rgb(222,94,46)"/><text x="51.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="788" width="3" height="15" fill="rgb(238,94,1)"/><text x="51.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="804" width="3" height="15" fill="rgb(251,68,45)"/><text x="51.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="820" width="3" height="15" fill="rgb(212,65,30)"/><text x="51.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="48" y="836" width="3" height="15" fill="rgb(241,224,45)"/><text x="51.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="852" width="3" height="15" fill="rgb(243,168,14)"/><text x="51.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py) (1 samples, 0.22%)</title><rect x="48" y="868" width="3" height="15" fill="rgb(250,188,34)"/><text x="51.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="884" width="3" height="15" fill="rgb(237,11,1)"/><text x="51.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="900" width="3" height="15" fill="rgb(216,146,7)"/><text x="51.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="916" width="3" height="15" fill="rgb(217,7,28)"/><text x="51.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="48" y="932" width="3" height="15" fill="rgb(225,125,51)"/><text x="51.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="948" width="3" height="15" fill="rgb(209,144,25)"/><text x="51.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py) (1 samples, 0.22%)</title><rect x="48" y="964" width="3" height="15" fill="rgb(218,56,46)"/><text x="51.00" y="974.50"></text></g><g><title>UniversalDetector (chardet/universaldetector.py) (1 samples, 0.22%)</title><rect x="48" y="980" width="3" height="15" fill="rgb(244,11,25)"/><text x="51.00" y="990.50"></text></g><g><title>compile (re.py) (1 samples, 0.22%)</title><rect x="48" y="996" width="3" height="15" fill="rgb(221,104,35)"/><text x="51.00" y="1006.50"></text></g><g><title>_compile (re.py) (1 samples, 0.22%)</title><rect x="48" y="1012" width="3" height="15" fill="rgb(249,145,46)"/><text x="51.00" y="1022.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.22%)</title><rect x="48" y="1028" width="3" height="15" fill="rgb(228,64,19)"/><text x="51.00" y="1038.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.22%)</title><rect x="48" y="1044" width="3" height="15" fill="rgb(241,207,31)"/><text x="51.00" y="1054.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.22%)</title><rect x="48" y="1060" width="3" height="15" fill="rgb(221,153,29)"/><text x="51.00" y="1070.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.22%)</title><rect x="48" y="1076" width="3" height="15" fill="rgb(250,217,15)"/><text x="51.00" y="1086.50"></text></g><g><title>profile0_skl (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py) (1 samples, 0.22%)</title><rect x="51" y="68" width="3" height="15" fill="rgb(238,167,46)"/><text x="54.00" y="78.50"></text></g><g><title>setup_profile0 (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py) (1 samples, 0.22%)</title><rect x="51" y="84" width="3" height="15" fill="rgb(242,186,15)"/><text x="54.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.22%)</title><rect x="51" y="100" width="3" height="15" fill="rgb(249,96,45)"/><text x="54.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (1 samples, 0.22%)</title><rect x="51" y="116" width="3" height="15" fill="rgb(245,141,29)"/><text x="54.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py) (1 samples, 0.22%)</title><rect x="51" y="132" width="3" height="15" fill="rgb(211,175,34)"/><text x="54.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="148" width="3" height="15" fill="rgb(243,223,36)"/><text x="54.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="164" width="3" height="15" fill="rgb(222,77,52)"/><text x="54.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="180" width="3" height="15" fill="rgb(235,9,52)"/><text x="54.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="51" y="196" width="3" height="15" fill="rgb(253,210,28)"/><text x="54.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="212" width="3" height="15" fill="rgb(252,60,8)"/><text x="54.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py) (1 samples, 0.22%)</title><rect x="51" y="228" width="3" height="15" fill="rgb(233,4,8)"/><text x="54.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="244" width="3" height="15" fill="rgb(220,76,36)"/><text x="54.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="260" width="3" height="15" fill="rgb(249,50,19)"/><text x="54.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="276" width="3" height="15" fill="rgb(217,77,27)"/><text x="54.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="51" y="292" width="3" height="15" fill="rgb(235,157,19)"/><text x="54.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="308" width="3" height="15" fill="rgb(239,220,22)"/><text x="54.00" y="318.50"></text></g><g><title>&lt;module&gt; (lightgbm/basic.py) (1 samples, 0.22%)</title><rect x="51" y="324" width="3" height="15" fill="rgb(223,183,30)"/><text x="54.00" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="340" width="3" height="15" fill="rgb(207,8,24)"/><text x="54.00" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="356" width="3" height="15" fill="rgb(229,48,14)"/><text x="54.00" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="372" width="3" height="15" fill="rgb(222,182,44)"/><text x="54.00" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="51" y="388" width="3" height="15" fill="rgb(237,85,16)"/><text x="54.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="404" width="3" height="15" fill="rgb(210,160,37)"/><text x="54.00" y="414.50"></text></g><g><title>&lt;module&gt; (lightgbm/compat.py) (1 samples, 0.22%)</title><rect x="51" y="420" width="3" height="15" fill="rgb(223,70,11)"/><text x="54.00" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="436" width="3" height="15" fill="rgb(226,13,32)"/><text x="54.00" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="452" width="3" height="15" fill="rgb(210,163,35)"/><text x="54.00" y="462.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="468" width="3" height="15" fill="rgb(242,221,18)"/><text x="54.00" y="478.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="51" y="484" width="3" height="15" fill="rgb(250,143,34)"/><text x="54.00" y="494.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="51" y="500" width="3" height="15" fill="rgb(209,2,17)"/><text x="54.00" y="510.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="51" y="516" width="3" height="15" fill="rgb(228,91,47)"/><text x="54.00" y="526.50"></text></g><g><title>0x7fa910e9aff9 (?) (1 samples, 0.22%)</title><rect x="54" y="212" width="2" height="15" fill="rgb(239,169,20)"/><text x="57.00" y="222.50"></text></g><g><title>0x7fa910e95ef6 (?) (1 samples, 0.22%)</title><rect x="54" y="228" width="2" height="15" fill="rgb(205,200,44)"/><text x="57.00" y="238.50"></text></g><g><title>0x7fa910e8a962 (?) (1 samples, 0.22%)</title><rect x="54" y="244" width="2" height="15" fill="rgb(242,172,6)"/><text x="57.00" y="254.50"></text></g><g><title>0x7fa910ebe7a7 (?) (1 samples, 0.22%)</title><rect x="54" y="260" width="2" height="15" fill="rgb(222,117,7)"/><text x="57.00" y="270.50"></text></g><g><title>0x7fa910ebe379 (?) (1 samples, 0.22%)</title><rect x="54" y="276" width="2" height="15" fill="rgb(210,189,1)"/><text x="57.00" y="286.50"></text></g><g><title>0x7fa91131c8b8 (?) (1 samples, 0.22%)</title><rect x="54" y="292" width="2" height="15" fill="rgb(206,124,42)"/><text x="57.00" y="302.50"></text></g><g><title>0x7fa91131ac7f (?) (1 samples, 0.22%)</title><rect x="54" y="308" width="2" height="15" fill="rgb(226,215,39)"/><text x="57.00" y="318.50"></text></g><g><title>0x7fa91132d99c (?) (1 samples, 0.22%)</title><rect x="54" y="324" width="2" height="15" fill="rgb(243,150,12)"/><text x="57.00" y="334.50"></text></g><g><title>0x7fa910fb27c3 (?) (1 samples, 0.22%)</title><rect x="54" y="340" width="2" height="15" fill="rgb(251,163,2)"/><text x="57.00" y="350.50"></text></g><g><title>0x7fa91129bfac (?) (1 samples, 0.22%)</title><rect x="54" y="356" width="2" height="15" fill="rgb(237,41,42)"/><text x="57.00" y="366.50"></text></g><g><title>0x7fa9090130f1 (?) (1 samples, 0.22%)</title><rect x="54" y="372" width="2" height="15" fill="rgb(212,90,15)"/><text x="57.00" y="382.50"></text></g><g><title>0x7fa9090594cf (?) (1 samples, 0.22%)</title><rect x="54" y="388" width="2" height="15" fill="rgb(217,156,38)"/><text x="57.00" y="398.50"></text></g><g><title>0x7fa9090eb6ad (?) (1 samples, 0.22%)</title><rect x="54" y="404" width="2" height="15" fill="rgb(249,227,17)"/><text x="57.00" y="414.50"></text></g><g><title>0x7fa90922d277 (?) (1 samples, 0.22%)</title><rect x="54" y="420" width="2" height="15" fill="rgb(239,169,52)"/><text x="57.00" y="430.50"></text></g><g><title>0x7fa908ac218e (?) (1 samples, 0.22%)</title><rect x="54" y="436" width="2" height="15" fill="rgb(253,38,34)"/><text x="57.00" y="446.50"></text></g><g><title>0x7fa908b07129 (?) (1 samples, 0.22%)</title><rect x="54" y="452" width="2" height="15" fill="rgb(219,49,19)"/><text x="57.00" y="462.50"></text></g><g><title>0x7fa908b07b49 (?) (1 samples, 0.22%)</title><rect x="54" y="468" width="2" height="15" fill="rgb(243,194,23)"/><text x="57.00" y="478.50"></text></g><g><title>0x7fa908abebf8 (?) (1 samples, 0.22%)</title><rect x="54" y="484" width="2" height="15" fill="rgb(252,89,44)"/><text x="57.00" y="494.50"></text></g><g><title>0x7fa908abafee (?) (1 samples, 0.22%)</title><rect x="54" y="500" width="2" height="15" fill="rgb(244,136,39)"/><text x="57.00" y="510.50"></text></g><g><title>sched_yield (libc-2.29.so) (1 samples, 0.22%)</title><rect x="54" y="516" width="2" height="15" fill="rgb(228,207,20)"/><text x="57.00" y="526.50"></text></g><g><title>mkl_blas_avx_sgemm_kernel_0 (onnxruntime/capi/libmklml_intel.so) (15 samples, 3.30%)</title><rect x="56" y="212" width="39" height="15" fill="rgb(213,21,12)"/><text x="59.00" y="222.50">mkl..</text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="95" y="340" width="3" height="15" fill="rgb(230,117,44)"/><text x="98.00" y="350.50"></text></g><g><title>onnxruntime::GemmHelper::GemmHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="98" y="356" width="2" height="15" fill="rgb(254,222,21)"/><text x="101.00" y="366.50"></text></g><g><title>mkl_blas_avx_sgemm_copyan (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.44%)</title><rect x="106" y="564" width="5" height="15" fill="rgb(211,16,7)"/><text x="109.00" y="574.50"></text></g><g><title>mkl_blas_avx_sgemm_copybn (onnxruntime/capi/libmklml_intel.so) (4 samples, 0.88%)</title><rect x="111" y="564" width="10" height="15" fill="rgb(210,226,32)"/><text x="114.00" y="574.50"></text></g><g><title>__kmp_fork_call (libiomp5.so) (10 samples, 2.20%)</title><rect x="103" y="452" width="26" height="15" fill="rgb(238,157,39)"/><text x="106.00" y="462.50">_..</text></g><g><title>__kmp_invoke_task_func (libiomp5.so) (9 samples, 1.98%)</title><rect x="106" y="468" width="23" height="15" fill="rgb(237,127,27)"/><text x="109.00" y="478.50">_..</text></g><g><title>__kmp_invoke_microtask (libiomp5.so) (9 samples, 1.98%)</title><rect x="106" y="484" width="23" height="15" fill="rgb(245,154,54)"/><text x="109.00" y="494.50">_..</text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (9 samples, 1.98%)</title><rect x="106" y="500" width="23" height="15" fill="rgb(205,112,28)"/><text x="109.00" y="510.50">m..</text></g><g><title>mkl_blas_sgemm_2D_bsrc (onnxruntime/capi/libmklml_intel.so) (9 samples, 1.98%)</title><rect x="106" y="516" width="23" height="15" fill="rgb(210,17,3)"/><text x="109.00" y="526.50">m..</text></g><g><title>mkl_blas_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (9 samples, 1.98%)</title><rect x="106" y="532" width="23" height="15" fill="rgb(250,27,34)"/><text x="109.00" y="542.50">m..</text></g><g><title>mkl_blas_avx_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (9 samples, 1.98%)</title><rect x="106" y="548" width="23" height="15" fill="rgb(205,128,9)"/><text x="109.00" y="558.50">m..</text></g><g><title>mkl_blas_avx_sgemm_ker0 (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.66%)</title><rect x="121" y="564" width="8" height="15" fill="rgb(237,72,47)"/><text x="124.00" y="574.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0_pst (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.66%)</title><rect x="121" y="580" width="8" height="15" fill="rgb(211,178,7)"/><text x="124.00" y="590.50"></text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (35 samples, 7.71%)</title><rect x="100" y="420" width="91" height="15" fill="rgb(234,207,20)"/><text x="103.00" y="430.50">mkl_blas_s..</text></g><g><title>__kmpc_fork_call (libiomp5.so) (34 samples, 7.49%)</title><rect x="103" y="436" width="88" height="15" fill="rgb(226,107,51)"/><text x="106.00" y="446.50">__kmpc_for..</text></g><g><title>__kmp_join_call (libiomp5.so) (24 samples, 5.29%)</title><rect x="129" y="452" width="62" height="15" fill="rgb(223,146,46)"/><text x="132.00" y="462.50">__kmp_..</text></g><g><title>__kmp_internal_join (libiomp5.so) (24 samples, 5.29%)</title><rect x="129" y="468" width="62" height="15" fill="rgb(241,94,5)"/><text x="132.00" y="478.50">__kmp_..</text></g><g><title>__kmp_join_barrier (libiomp5.so) (24 samples, 5.29%)</title><rect x="129" y="484" width="62" height="15" fill="rgb(238,25,37)"/><text x="132.00" y="494.50">__kmp_..</text></g><g><title>_INTERNAL_25_______src_kmp_barrier_cpp_50ae66a0::__kmp_hyper_barrier_gather (libiomp5.so) (24 samples, 5.29%)</title><rect x="129" y="500" width="62" height="15" fill="rgb(221,97,36)"/><text x="132.00" y="510.50">_INTER..</text></g><g><title>sched_yield (libc-2.29.so) (5 samples, 1.10%)</title><rect x="178" y="516" width="13" height="15" fill="rgb(221,3,33)"/><text x="181.00" y="526.50"></text></g><g><title>__kmp_fork_call (libiomp5.so) (1 samples, 0.22%)</title><rect x="191" y="468" width="3" height="15" fill="rgb(249,229,13)"/><text x="194.00" y="478.50"></text></g><g><title>__kmp_invoke_task_func (libiomp5.so) (1 samples, 0.22%)</title><rect x="191" y="484" width="3" height="15" fill="rgb(233,48,53)"/><text x="194.00" y="494.50"></text></g><g><title>__kmp_invoke_microtask (libiomp5.so) (1 samples, 0.22%)</title><rect x="191" y="500" width="3" height="15" fill="rgb(243,137,17)"/><text x="194.00" y="510.50"></text></g><g><title>mkl_blas_sgemv_omp (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.22%)</title><rect x="191" y="516" width="3" height="15" fill="rgb(221,138,30)"/><text x="194.00" y="526.50"></text></g><g><title>mkl_blas_xsgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.22%)</title><rect x="191" y="532" width="3" height="15" fill="rgb(223,181,35)"/><text x="194.00" y="542.50"></text></g><g><title>mkl_blas_avx_xsgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.22%)</title><rect x="191" y="548" width="3" height="15" fill="rgb(214,157,6)"/><text x="194.00" y="558.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (56 samples, 12.33%)</title><rect x="98" y="340" width="145" height="15" fill="rgb(246,100,51)"/><text x="101.00" y="350.50">onnxruntime::Gemm&lt;..</text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (55 samples, 12.11%)</title><rect x="100" y="356" width="143" height="15" fill="rgb(229,199,36)"/><text x="103.00" y="366.50">onnxruntime::math:..</text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (55 samples, 12.11%)</title><rect x="100" y="372" width="143" height="15" fill="rgb(221,36,7)"/><text x="103.00" y="382.50">cblas_sgemm (onnxr..</text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (55 samples, 12.11%)</title><rect x="100" y="388" width="143" height="15" fill="rgb(214,98,51)"/><text x="103.00" y="398.50">sgemm_ (onnxruntim..</text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (55 samples, 12.11%)</title><rect x="100" y="404" width="143" height="15" fill="rgb(224,10,23)"/><text x="103.00" y="414.50">mkl_blas_sgemm (on..</text></g><g><title>mkl_blas_sgemv (onnxruntime/capi/libmklml_intel.so) (20 samples, 4.41%)</title><rect x="191" y="420" width="52" height="15" fill="rgb(249,66,14)"/><text x="194.00" y="430.50">mkl_b..</text></g><g><title>mkl_blas_sgemv_omp (onnxruntime/capi/libmklml_intel.so) (20 samples, 4.41%)</title><rect x="191" y="436" width="52" height="15" fill="rgb(206,165,38)"/><text x="194.00" y="446.50">mkl_b..</text></g><g><title>__kmpc_fork_call (libiomp5.so) (20 samples, 4.41%)</title><rect x="191" y="452" width="52" height="15" fill="rgb(207,172,6)"/><text x="194.00" y="462.50">__kmp..</text></g><g><title>__kmp_join_call (libiomp5.so) (19 samples, 4.19%)</title><rect x="194" y="468" width="49" height="15" fill="rgb(232,165,47)"/><text x="197.00" y="478.50">__km..</text></g><g><title>__kmp_internal_join (libiomp5.so) (19 samples, 4.19%)</title><rect x="194" y="484" width="49" height="15" fill="rgb(239,98,10)"/><text x="197.00" y="494.50">__km..</text></g><g><title>__kmp_join_barrier (libiomp5.so) (19 samples, 4.19%)</title><rect x="194" y="500" width="49" height="15" fill="rgb(234,96,47)"/><text x="197.00" y="510.50">__km..</text></g><g><title>_INTERNAL_25_______src_kmp_barrier_cpp_50ae66a0::__kmp_hyper_barrier_gather (libiomp5.so) (19 samples, 4.19%)</title><rect x="194" y="516" width="49" height="15" fill="rgb(217,45,12)"/><text x="197.00" y="526.50">_INT..</text></g><g><title>__kmp_yield (libiomp5.so) (1 samples, 0.22%)</title><rect x="241" y="532" width="2" height="15" fill="rgb(215,10,41)"/><text x="244.00" y="542.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (58 samples, 12.78%)</title><rect x="95" y="260" width="151" height="15" fill="rgb(219,82,54)"/><text x="98.00" y="270.50">onnxruntime::Infere..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (58 samples, 12.78%)</title><rect x="95" y="276" width="151" height="15" fill="rgb(215,183,26)"/><text x="98.00" y="286.50">onnxruntime::Infere..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (58 samples, 12.78%)</title><rect x="95" y="292" width="151" height="15" fill="rgb(227,157,47)"/><text x="98.00" y="302.50">onnxruntime::utils:..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (58 samples, 12.78%)</title><rect x="95" y="308" width="151" height="15" fill="rgb(233,215,31)"/><text x="98.00" y="318.50">onnxruntime::utils:..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (58 samples, 12.78%)</title><rect x="95" y="324" width="151" height="15" fill="rgb(231,126,14)"/><text x="98.00" y="334.50">onnxruntime::Sequen..</text></g><g><title>onnxruntime::Relu&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="243" y="340" width="3" height="15" fill="rgb(238,171,53)"/><text x="246.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="243" y="356" width="3" height="15" fill="rgb(239,130,39)"/><text x="246.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="243" y="372" width="3" height="15" fill="rgb(213,67,2)"/><text x="246.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="243" y="388" width="3" height="15" fill="rgb(224,161,12)"/><text x="246.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="243" y="404" width="3" height="15" fill="rgb(217,130,54)"/><text x="246.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="243" y="420" width="3" height="15" fill="rgb(252,5,19)"/><text x="246.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="243" y="436" width="3" height="15" fill="rgb(250,72,40)"/><text x="246.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="243" y="452" width="3" height="15" fill="rgb(207,205,39)"/><text x="246.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="243" y="468" width="3" height="15" fill="rgb(217,21,49)"/><text x="246.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="243" y="484" width="3" height="15" fill="rgb(245,130,18)"/><text x="246.00" y="494.50"></text></g><g><title>profile_ort (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py) (75 samples, 16.52%)</title><rect x="54" y="68" width="195" height="15" fill="rgb(247,68,24)"/><text x="57.00" y="78.50">profile_ort (bench_MLPReg..</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py) (75 samples, 16.52%)</title><rect x="54" y="84" width="195" height="15" fill="rgb(241,92,16)"/><text x="57.00" y="94.50">setup_profile (bench_MLPR..</text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py) (75 samples, 16.52%)</title><rect x="54" y="100" width="195" height="15" fill="rgb(215,105,23)"/><text x="57.00" y="110.50">profile (bench_MLPRegress..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (75 samples, 16.52%)</title><rect x="54" y="116" width="195" height="15" fill="rgb(217,12,37)"/><text x="57.00" y="126.50">time_predict (mlprodict/a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (75 samples, 16.52%)</title><rect x="54" y="132" width="195" height="15" fill="rgb(208,214,24)"/><text x="57.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_b..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (75 samples, 16.52%)</title><rect x="54" y="148" width="195" height="15" fill="rgb(245,27,36)"/><text x="57.00" y="158.50">run (mlprodict/onnxrt/onn..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (75 samples, 16.52%)</title><rect x="54" y="164" width="195" height="15" fill="rgb(222,27,5)"/><text x="57.00" y="174.50">_run_whole_runtime (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (75 samples, 16.52%)</title><rect x="54" y="180" width="195" height="15" fill="rgb(227,102,24)"/><text x="57.00" y="190.50">run (mlprodict/onnxrt/ops..</text></g><g><title>run (onnxruntime/capi/session.py) (75 samples, 16.52%)</title><rect x="54" y="196" width="195" height="15" fill="rgb(205,168,33)"/><text x="57.00" y="206.50">run (onnxruntime/capi/ses..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (59 samples, 13.00%)</title><rect x="95" y="212" width="154" height="15" fill="rgb(254,161,54)"/><text x="98.00" y="222.50">pybind11::cpp_funct..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (59 samples, 13.00%)</title><rect x="95" y="228" width="154" height="15" fill="rgb(233,35,21)"/><text x="98.00" y="238.50">void pybind11::cpp_..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (59 samples, 13.00%)</title><rect x="95" y="244" width="154" height="15" fill="rgb(209,131,37)"/><text x="98.00" y="254.50">onnxruntime::python..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="246" y="260" width="3" height="15" fill="rgb(240,179,36)"/><text x="249.00" y="270.50"></text></g><g><title>0x7fa952e6de7a (libc-2.29.so) (1 samples, 0.22%)</title><rect x="246" y="276" width="3" height="15" fill="rgb(243,217,18)"/><text x="249.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.22%)</title><rect x="267" y="196" width="2" height="15" fill="rgb(229,58,33)"/><text x="270.00" y="206.50"></text></g><g><title>_mm_add_ps (xmmintrin.h) (4 samples, 0.88%)</title><rect x="272" y="356" width="10" height="15" fill="rgb(251,160,26)"/><text x="275.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (6 samples, 1.32%)</title><rect x="272" y="228" width="16" height="15" fill="rgb(230,131,17)"/><text x="275.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.32%)</title><rect x="272" y="244" width="16" height="15" fill="rgb(210,140,40)"/><text x="275.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.32%)</title><rect x="272" y="260" width="16" height="15" fill="rgb(232,171,17)"/><text x="275.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.32%)</title><rect x="272" y="276" width="16" height="15" fill="rgb(224,106,24)"/><text x="275.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.32%)</title><rect x="272" y="292" width="16" height="15" fill="rgb(235,110,15)"/><text x="275.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (6 samples, 1.32%)</title><rect x="272" y="308" width="16" height="15" fill="rgb(224,47,3)"/><text x="275.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (6 samples, 1.32%)</title><rect x="272" y="324" width="16" height="15" fill="rgb(243,66,40)"/><text x="275.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (6 samples, 1.32%)</title><rect x="272" y="340" width="16" height="15" fill="rgb(238,88,49)"/><text x="275.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (2 samples, 0.44%)</title><rect x="282" y="356" width="6" height="15" fill="rgb(254,206,49)"/><text x="285.00" y="366.50"></text></g><g><title>0x7fa952e78103 (libc-2.29.so) (3 samples, 0.66%)</title><rect x="293" y="340" width="8" height="15" fill="rgb(242,104,20)"/><text x="296.00" y="350.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (22 samples, 4.85%)</title><rect x="301" y="420" width="57" height="15" fill="rgb(242,78,39)"/><text x="304.00" y="430.50">exec_b..</text></g><g><title>sched_yield (libc-2.29.so) (22 samples, 4.85%)</title><rect x="301" y="436" width="57" height="15" fill="rgb(248,185,46)"/><text x="304.00" y="446.50">sched_..</text></g><g><title>sgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="358" y="436" width="2" height="15" fill="rgb(208,42,7)"/><text x="361.00" y="446.50"></text></g><g><title>gemm (cblasfuncs.c) (28 samples, 6.17%)</title><rect x="301" y="340" width="72" height="15" fill="rgb(224,163,48)"/><text x="304.00" y="350.50">gemm (cb..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (28 samples, 6.17%)</title><rect x="301" y="356" width="72" height="15" fill="rgb(249,0,20)"/><text x="304.00" y="366.50">cblas_sg..</text></g><g><title>sgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (28 samples, 6.17%)</title><rect x="301" y="372" width="72" height="15" fill="rgb(233,110,49)"/><text x="304.00" y="382.50">sgemm_th..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (28 samples, 6.17%)</title><rect x="301" y="388" width="72" height="15" fill="rgb(237,52,16)"/><text x="304.00" y="398.50">gemm_dri..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (28 samples, 6.17%)</title><rect x="301" y="404" width="72" height="15" fill="rgb(245,60,33)"/><text x="304.00" y="414.50">exec_bla..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.32%)</title><rect x="358" y="420" width="15" height="15" fill="rgb(247,125,41)"/><text x="361.00" y="430.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 1.10%)</title><rect x="360" y="436" width="13" height="15" fill="rgb(208,3,21)"/><text x="363.00" y="446.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="373" y="420" width="3" height="15" fill="rgb(233,216,43)"/><text x="376.00" y="430.50"></text></g><g><title>__lll_unlock_wake (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="373" y="436" width="3" height="15" fill="rgb(217,58,43)"/><text x="376.00" y="446.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 4.41%)</title><rect x="373" y="404" width="52" height="15" fill="rgb(205,184,15)"/><text x="376.00" y="414.50">exec_..</text></g><g><title>sched_yield (libc-2.29.so) (19 samples, 4.19%)</title><rect x="376" y="420" width="49" height="15" fill="rgb(235,88,24)"/><text x="379.00" y="430.50">sche..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (57 samples, 12.56%)</title><rect x="288" y="276" width="148" height="15" fill="rgb(230,46,7)"/><text x="291.00" y="286.50">array_implement_ar..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (56 samples, 12.33%)</title><rect x="290" y="292" width="146" height="15" fill="rgb(223,199,37)"/><text x="293.00" y="302.50">array_matrixproduc..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (55 samples, 12.11%)</title><rect x="293" y="308" width="143" height="15" fill="rgb(253,126,33)"/><text x="296.00" y="318.50">PyArray_MatrixProd..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (55 samples, 12.11%)</title><rect x="293" y="324" width="143" height="15" fill="rgb(242,221,34)"/><text x="296.00" y="334.50">cblas_matrixproduc..</text></g><g><title>gemv (cblasfuncs.c) (24 samples, 5.29%)</title><rect x="373" y="340" width="63" height="15" fill="rgb(215,214,25)"/><text x="376.00" y="350.50">gemv (..</text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (24 samples, 5.29%)</title><rect x="373" y="356" width="63" height="15" fill="rgb(244,75,46)"/><text x="376.00" y="366.50">cblas_..</text></g><g><title>sgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (24 samples, 5.29%)</title><rect x="373" y="372" width="63" height="15" fill="rgb(228,110,4)"/><text x="376.00" y="382.50">sgemv_..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (24 samples, 5.29%)</title><rect x="373" y="388" width="63" height="15" fill="rgb(233,53,10)"/><text x="376.00" y="398.50">exec_b..</text></g><g><title>gemv_kernel (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.88%)</title><rect x="425" y="404" width="11" height="15" fill="rgb(225,2,42)"/><text x="428.00" y="414.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.88%)</title><rect x="425" y="420" width="11" height="15" fill="rgb(241,74,22)"/><text x="428.00" y="430.50"></text></g><g><title>sgemv_kernel_4x4 (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.66%)</title><rect x="428" y="436" width="8" height="15" fill="rgb(225,147,3)"/><text x="431.00" y="446.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.66%)</title><rect x="436" y="276" width="8" height="15" fill="rgb(214,195,12)"/><text x="439.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (91 samples, 20.04%)</title><rect x="288" y="228" width="236" height="15" fill="rgb(229,49,4)"/><text x="291.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (91 samples, 20.04%)</title><rect x="288" y="244" width="236" height="15" fill="rgb(237,66,26)"/><text x="291.00" y="254.50">numpy_dot_inplace (mlprodict/on..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (91 samples, 20.04%)</title><rect x="288" y="260" width="236" height="15" fill="rgb(237,97,40)"/><text x="291.00" y="270.50">dot (&lt;__array_function__ intern..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (31 samples, 6.83%)</title><rect x="444" y="276" width="80" height="15" fill="rgb(234,200,24)"/><text x="447.00" y="286.50">sgemm_ker..</text></g><g><title>profile_pyrt (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py) (155 samples, 34.14%)</title><rect x="249" y="68" width="402" height="15" fill="rgb(207,157,21)"/><text x="252.00" y="78.50">profile_pyrt (bench_MLPRegressor_default_m_reg_1000_50..</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py) (155 samples, 34.14%)</title><rect x="249" y="84" width="402" height="15" fill="rgb(242,171,52)"/><text x="252.00" y="94.50">setup_profile (bench_MLPRegressor_default_m_reg_1000_5..</text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py) (155 samples, 34.14%)</title><rect x="249" y="100" width="402" height="15" fill="rgb(244,175,27)"/><text x="252.00" y="110.50">profile (bench_MLPRegressor_default_m_reg_1000_50_12_f..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (155 samples, 34.14%)</title><rect x="249" y="116" width="402" height="15" fill="rgb(229,151,0)"/><text x="252.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (155 samples, 34.14%)</title><rect x="249" y="132" width="402" height="15" fill="rgb(223,1,35)"/><text x="252.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (155 samples, 34.14%)</title><rect x="249" y="148" width="402" height="15" fill="rgb(212,206,51)"/><text x="252.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (155 samples, 34.14%)</title><rect x="249" y="164" width="402" height="15" fill="rgb(228,83,54)"/><text x="252.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (154 samples, 33.92%)</title><rect x="251" y="180" width="400" height="15" fill="rgb(228,80,14)"/><text x="254.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (147 samples, 32.38%)</title><rect x="269" y="196" width="382" height="15" fill="rgb(237,91,0)"/><text x="272.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (146 samples, 32.16%)</title><rect x="272" y="212" width="379" height="15" fill="rgb(207,45,34)"/><text x="275.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py) (49 samples, 10.79%)</title><rect x="524" y="228" width="127" height="15" fill="rgb(231,14,19)"/><text x="527.00" y="238.50">_run (mlprodict..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (49 samples, 10.79%)</title><rect x="524" y="244" width="127" height="15" fill="rgb(222,163,43)"/><text x="527.00" y="254.50">ufunc_generic_c..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (49 samples, 10.79%)</title><rect x="524" y="260" width="127" height="15" fill="rgb(225,52,26)"/><text x="527.00" y="270.50">PyUFunc_Generic..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (49 samples, 10.79%)</title><rect x="524" y="276" width="127" height="15" fill="rgb(250,139,47)"/><text x="527.00" y="286.50">execute_legacy_..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (49 samples, 10.79%)</title><rect x="524" y="292" width="127" height="15" fill="rgb(222,123,17)"/><text x="527.00" y="302.50">trivial_three_o..</text></g><g><title>FLOAT_maximum (loops.c.src) (49 samples, 10.79%)</title><rect x="524" y="308" width="127" height="15" fill="rgb(224,167,21)"/><text x="527.00" y="318.50">FLOAT_maximum (..</text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="667" y="372" width="3" height="15" fill="rgb(237,164,14)"/><text x="670.00" y="382.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="667" y="388" width="3" height="15" fill="rgb(243,106,40)"/><text x="670.00" y="398.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.22%)</title><rect x="667" y="404" width="3" height="15" fill="rgb(247,68,45)"/><text x="670.00" y="414.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.22%)</title><rect x="667" y="420" width="3" height="15" fill="rgb(211,82,29)"/><text x="670.00" y="430.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.22%)</title><rect x="667" y="436" width="3" height="15" fill="rgb(225,201,4)"/><text x="670.00" y="446.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.22%)</title><rect x="670" y="372" width="2" height="15" fill="rgb(222,79,12)"/><text x="673.00" y="382.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.22%)</title><rect x="670" y="388" width="2" height="15" fill="rgb(253,4,47)"/><text x="673.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.22%)</title><rect x="670" y="404" width="2" height="15" fill="rgb(240,174,45)"/><text x="673.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="670" y="420" width="2" height="15" fill="rgb(220,112,25)"/><text x="673.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="670" y="436" width="2" height="15" fill="rgb(205,27,11)"/><text x="673.00" y="446.50"></text></g><g><title>DOUBLE_clip (clip.c.src) (47 samples, 10.35%)</title><rect x="672" y="404" width="122" height="15" fill="rgb(254,103,23)"/><text x="675.00" y="414.50">DOUBLE_clip (cl..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.22%)</title><rect x="794" y="404" width="3" height="15" fill="rgb(229,176,0)"/><text x="797.00" y="414.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.22%)</title><rect x="794" y="420" width="3" height="15" fill="rgb(236,213,54)"/><text x="797.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (49 samples, 10.79%)</title><rect x="672" y="372" width="128" height="15" fill="rgb(245,116,15)"/><text x="675.00" y="382.50">execute_legacy_u..</text></g><g><title>iterator_loop (ufunc_object.c) (49 samples, 10.79%)</title><rect x="672" y="388" width="128" height="15" fill="rgb(212,133,48)"/><text x="675.00" y="398.50">iterator_loop (u..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.22%)</title><rect x="797" y="404" width="3" height="15" fill="rgb(207,188,31)"/><text x="800.00" y="414.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.22%)</title><rect x="797" y="420" width="3" height="15" fill="rgb(253,197,39)"/><text x="800.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="797" y="436" width="3" height="15" fill="rgb(218,197,37)"/><text x="800.00" y="446.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (52 samples, 11.45%)</title><rect x="667" y="324" width="135" height="15" fill="rgb(227,18,4)"/><text x="670.00" y="334.50">_clip_dep_invoke_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (52 samples, 11.45%)</title><rect x="667" y="340" width="135" height="15" fill="rgb(228,2,21)"/><text x="670.00" y="350.50">ufunc_generic_cal..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (52 samples, 11.45%)</title><rect x="667" y="356" width="135" height="15" fill="rgb(250,98,22)"/><text x="670.00" y="366.50">PyUFunc_GenericFu..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.22%)</title><rect x="800" y="372" width="2" height="15" fill="rgb(216,81,13)"/><text x="803.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.22%)</title><rect x="800" y="388" width="2" height="15" fill="rgb(242,115,24)"/><text x="803.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.22%)</title><rect x="800" y="404" width="2" height="15" fill="rgb(228,38,20)"/><text x="803.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.22%)</title><rect x="800" y="420" width="2" height="15" fill="rgb(235,210,36)"/><text x="803.00" y="430.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.22%)</title><rect x="800" y="436" width="2" height="15" fill="rgb(237,171,25)"/><text x="803.00" y="446.50"></text></g><g><title>0x7fa952f35151 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="802" y="340" width="3" height="15" fill="rgb(235,88,48)"/><text x="805.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (4 samples, 0.88%)</title><rect x="805" y="340" width="10" height="15" fill="rgb(250,82,52)"/><text x="808.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.88%)</title><rect x="805" y="356" width="10" height="15" fill="rgb(230,45,9)"/><text x="808.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (4 samples, 0.88%)</title><rect x="805" y="372" width="10" height="15" fill="rgb(230,169,45)"/><text x="808.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.22%)</title><rect x="813" y="388" width="2" height="15" fill="rgb(220,165,24)"/><text x="816.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.22%)</title><rect x="813" y="404" width="2" height="15" fill="rgb(216,86,28)"/><text x="816.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.22%)</title><rect x="813" y="420" width="2" height="15" fill="rgb(229,225,31)"/><text x="816.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.22%)</title><rect x="813" y="436" width="2" height="15" fill="rgb(217,209,54)"/><text x="816.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="813" y="452" width="2" height="15" fill="rgb(234,139,0)"/><text x="816.00" y="462.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.22%)</title><rect x="815" y="372" width="3" height="15" fill="rgb(225,98,37)"/><text x="818.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.44%)</title><rect x="815" y="356" width="5" height="15" fill="rgb(227,80,48)"/><text x="818.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="818" y="372" width="2" height="15" fill="rgb(209,108,10)"/><text x="821.00" y="382.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (61 samples, 13.44%)</title><rect x="664" y="244" width="159" height="15" fill="rgb(241,193,35)"/><text x="667.00" y="254.50">clip (numpy/core/fro..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (61 samples, 13.44%)</title><rect x="664" y="260" width="159" height="15" fill="rgb(244,121,39)"/><text x="667.00" y="270.50">_wrapfunc (numpy/cor..</text></g><g><title>array_clip (methods.c) (60 samples, 13.22%)</title><rect x="667" y="276" width="156" height="15" fill="rgb(250,40,21)"/><text x="670.00" y="286.50">array_clip (methods...</text></g><g><title>forward_ndarray_method (methods.c) (60 samples, 13.22%)</title><rect x="667" y="292" width="156" height="15" fill="rgb(254,229,38)"/><text x="670.00" y="302.50">forward_ndarray_meth..</text></g><g><title>_clip (numpy/core/_methods.py) (60 samples, 13.22%)</title><rect x="667" y="308" width="156" height="15" fill="rgb(219,182,13)"/><text x="670.00" y="318.50">_clip (numpy/core/_m..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (8 samples, 1.76%)</title><rect x="802" y="324" width="21" height="15" fill="rgb(241,181,3)"/><text x="805.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.66%)</title><rect x="815" y="340" width="8" height="15" fill="rgb(250,74,12)"/><text x="818.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="820" y="356" width="3" height="15" fill="rgb(249,47,21)"/><text x="823.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.22%)</title><rect x="820" y="372" width="3" height="15" fill="rgb(235,192,3)"/><text x="823.00" y="382.50"></text></g><g><title>relu (sklearn/neural_network/_base.py) (64 samples, 14.10%)</title><rect x="662" y="196" width="166" height="15" fill="rgb(215,27,47)"/><text x="665.00" y="206.50">relu (sklearn/neural_..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (63 samples, 13.88%)</title><rect x="664" y="212" width="164" height="15" fill="rgb(250,171,45)"/><text x="667.00" y="222.50">clip (&lt;__array_functi..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (63 samples, 13.88%)</title><rect x="664" y="228" width="164" height="15" fill="rgb(231,155,24)"/><text x="667.00" y="238.50">array_implement_array..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (2 samples, 0.44%)</title><rect x="823" y="244" width="5" height="15" fill="rgb(249,137,44)"/><text x="826.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (2 samples, 0.44%)</title><rect x="823" y="260" width="5" height="15" fill="rgb(210,132,3)"/><text x="826.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.44%)</title><rect x="823" y="276" width="5" height="15" fill="rgb(251,154,43)"/><text x="826.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.44%)</title><rect x="823" y="292" width="5" height="15" fill="rgb(248,167,37)"/><text x="826.00" y="302.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.32%)</title><rect x="828" y="212" width="16" height="15" fill="rgb(212,108,10)"/><text x="831.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (55 samples, 12.11%)</title><rect x="844" y="212" width="143" height="15" fill="rgb(225,171,8)"/><text x="847.00" y="222.50">dgemm_kernel_SANDY..</text></g><g><title>dgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.32%)</title><rect x="987" y="212" width="15" height="15" fill="rgb(219,44,39)"/><text x="990.00" y="222.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="1005" y="340" width="3" height="15" fill="rgb(222,76,13)"/><text x="1008.00" y="350.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (19 samples, 4.19%)</title><rect x="1005" y="276" width="49" height="15" fill="rgb(217,183,9)"/><text x="1008.00" y="286.50">DOUB..</text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 4.19%)</title><rect x="1005" y="292" width="49" height="15" fill="rgb(226,219,47)"/><text x="1008.00" y="302.50">cbla..</text></g><g><title>dgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 4.19%)</title><rect x="1005" y="308" width="49" height="15" fill="rgb(236,133,5)"/><text x="1008.00" y="318.50">dgem..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 4.19%)</title><rect x="1005" y="324" width="49" height="15" fill="rgb(218,209,15)"/><text x="1008.00" y="334.50">exec..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 3.96%)</title><rect x="1008" y="340" width="46" height="15" fill="rgb(240,80,23)"/><text x="1011.00" y="350.50">exec..</text></g><g><title>sched_yield (libc-2.29.so) (18 samples, 3.96%)</title><rect x="1008" y="356" width="46" height="15" fill="rgb(231,192,10)"/><text x="1011.00" y="366.50">sche..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 4.41%)</title><rect x="1054" y="340" width="52" height="15" fill="rgb(242,31,0)"/><text x="1057.00" y="350.50">exec_..</text></g><g><title>sched_yield (libc-2.29.so) (20 samples, 4.41%)</title><rect x="1054" y="356" width="52" height="15" fill="rgb(208,63,33)"/><text x="1057.00" y="366.50">sched..</text></g><g><title>dgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="1106" y="356" width="3" height="15" fill="rgb(222,50,48)"/><text x="1109.00" y="366.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (43 samples, 9.47%)</title><rect x="1002" y="260" width="112" height="15" fill="rgb(231,128,34)"/><text x="1005.00" y="270.50">DOUBLE_matmul..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (23 samples, 5.07%)</title><rect x="1054" y="276" width="60" height="15" fill="rgb(229,217,14)"/><text x="1057.00" y="286.50">cblas_..</text></g><g><title>dgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (23 samples, 5.07%)</title><rect x="1054" y="292" width="60" height="15" fill="rgb(222,49,50)"/><text x="1057.00" y="302.50">dgemm_..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (23 samples, 5.07%)</title><rect x="1054" y="308" width="60" height="15" fill="rgb(248,100,21)"/><text x="1057.00" y="318.50">gemm_d..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (23 samples, 5.07%)</title><rect x="1054" y="324" width="60" height="15" fill="rgb(206,33,24)"/><text x="1057.00" y="334.50">exec_b..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.66%)</title><rect x="1106" y="340" width="8" height="15" fill="rgb(227,193,13)"/><text x="1109.00" y="350.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.44%)</title><rect x="1109" y="356" width="5" height="15" fill="rgb(226,23,3)"/><text x="1112.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (6 samples, 1.32%)</title><rect x="1114" y="292" width="16" height="15" fill="rgb(236,135,18)"/><text x="1117.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (6 samples, 1.32%)</title><rect x="1114" y="308" width="16" height="15" fill="rgb(250,174,29)"/><text x="1117.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (6 samples, 1.32%)</title><rect x="1114" y="324" width="16" height="15" fill="rgb(211,39,39)"/><text x="1117.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (7 samples, 1.54%)</title><rect x="1114" y="260" width="18" height="15" fill="rgb(252,145,42)"/><text x="1117.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (7 samples, 1.54%)</title><rect x="1114" y="276" width="18" height="15" fill="rgb(218,150,45)"/><text x="1117.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.22%)</title><rect x="1130" y="292" width="2" height="15" fill="rgb(234,40,20)"/><text x="1133.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.22%)</title><rect x="1132" y="260" width="3" height="15" fill="rgb(229,226,20)"/><text x="1135.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (119 samples, 26.21%)</title><rect x="828" y="196" width="310" height="15" fill="rgb(232,59,15)"/><text x="831.00" y="206.50">safe_sparse_dot (sklearn/utils/extmath.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (52 samples, 11.45%)</title><rect x="1002" y="212" width="136" height="15" fill="rgb(220,205,43)"/><text x="1005.00" y="222.50">ufunc_generic_cal..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (52 samples, 11.45%)</title><rect x="1002" y="228" width="136" height="15" fill="rgb(231,142,41)"/><text x="1005.00" y="238.50">PyUFunc_GenericFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (52 samples, 11.45%)</title><rect x="1002" y="244" width="136" height="15" fill="rgb(220,64,12)"/><text x="1005.00" y="254.50">PyUFunc_Generaliz..</text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="1135" y="260" width="3" height="15" fill="rgb(216,24,41)"/><text x="1138.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="1135" y="276" width="3" height="15" fill="rgb(225,68,36)"/><text x="1138.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.22%)</title><rect x="1135" y="292" width="3" height="15" fill="rgb(237,132,8)"/><text x="1138.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.22%)</title><rect x="1135" y="308" width="3" height="15" fill="rgb(206,19,48)"/><text x="1138.00" y="318.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.22%)</title><rect x="1135" y="324" width="3" height="15" fill="rgb(246,159,20)"/><text x="1138.00" y="334.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (5 samples, 1.10%)</title><rect x="1140" y="308" width="13" height="15" fill="rgb(225,208,44)"/><text x="1143.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src) (10 samples, 2.20%)</title><rect x="1140" y="260" width="26" height="15" fill="rgb(215,84,50)"/><text x="1143.00" y="270.50">D..</text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (10 samples, 2.20%)</title><rect x="1140" y="276" width="26" height="15" fill="rgb(210,15,33)"/><text x="1143.00" y="286.50">r..</text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (10 samples, 2.20%)</title><rect x="1140" y="292" width="26" height="15" fill="rgb(249,146,12)"/><text x="1143.00" y="302.50">s..</text></g><g><title>_mm_store_pd (emmintrin.h) (5 samples, 1.10%)</title><rect x="1153" y="308" width="13" height="15" fill="rgb(246,139,54)"/><text x="1156.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.22%)</title><rect x="1166" y="260" width="3" height="15" fill="rgb(217,15,50)"/><text x="1169.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.22%)</title><rect x="1166" y="276" width="3" height="15" fill="rgb(221,7,51)"/><text x="1169.00" y="286.50"></text></g><g><title>0x7fa952e77d50 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1169" y="308" width="2" height="15" fill="rgb(244,50,46)"/><text x="1172.00" y="318.50"></text></g><g><title>0x7fa952e77e76 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1171" y="308" width="3" height="15" fill="rgb(240,115,47)"/><text x="1174.00" y="318.50"></text></g><g><title>0x7fa952e77e7b (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1174" y="308" width="3" height="15" fill="rgb(213,44,31)"/><text x="1177.00" y="318.50"></text></g><g><title>0x7fa952e77eb2 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1177" y="308" width="2" height="15" fill="rgb(230,208,18)"/><text x="1180.00" y="318.50"></text></g><g><title>0x7fa952e77eba (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1179" y="308" width="3" height="15" fill="rgb(246,89,43)"/><text x="1182.00" y="318.50"></text></g><g><title>0x7fa952e77ec2 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1182" y="308" width="2" height="15" fill="rgb(208,13,8)"/><text x="1185.00" y="318.50"></text></g><g><title>profile_skl (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py) (206 samples, 45.37%)</title><rect x="651" y="68" width="536" height="15" fill="rgb(219,187,31)"/><text x="654.00" y="78.50">profile_skl (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py)</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py) (206 samples, 45.37%)</title><rect x="651" y="84" width="536" height="15" fill="rgb(250,145,20)"/><text x="654.00" y="94.50">setup_profile (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py)</text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py) (206 samples, 45.37%)</title><rect x="651" y="100" width="536" height="15" fill="rgb(232,9,54)"/><text x="654.00" y="110.50">profile (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (206 samples, 45.37%)</title><rect x="651" y="116" width="536" height="15" fill="rgb(237,64,53)"/><text x="654.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (206 samples, 45.37%)</title><rect x="651" y="132" width="536" height="15" fill="rgb(217,180,17)"/><text x="654.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py) (206 samples, 45.37%)</title><rect x="651" y="148" width="536" height="15" fill="rgb(216,118,3)"/><text x="654.00" y="158.50">predict (sklearn/neural_network/_multilayer_perceptron.py)</text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py) (206 samples, 45.37%)</title><rect x="651" y="164" width="536" height="15" fill="rgb(211,172,22)"/><text x="654.00" y="174.50">_predict (sklearn/neural_network/_multilayer_perceptron.py)</text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (203 samples, 44.71%)</title><rect x="659" y="180" width="528" height="15" fill="rgb(221,127,41)"/><text x="662.00" y="190.50">_forward_pass (sklearn/neural_network/_multilayer_perceptron.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (19 samples, 4.19%)</title><rect x="1138" y="196" width="49" height="15" fill="rgb(206,170,41)"/><text x="1141.00" y="206.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (18 samples, 3.96%)</title><rect x="1140" y="212" width="47" height="15" fill="rgb(208,150,17)"/><text x="1143.00" y="222.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (18 samples, 3.96%)</title><rect x="1140" y="228" width="47" height="15" fill="rgb(215,194,37)"/><text x="1143.00" y="238.50">exec..</text></g><g><title>iterator_loop (ufunc_object.c) (18 samples, 3.96%)</title><rect x="1140" y="244" width="47" height="15" fill="rgb(229,102,44)"/><text x="1143.00" y="254.50">iter..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (7 samples, 1.54%)</title><rect x="1169" y="260" width="18" height="15" fill="rgb(223,210,27)"/><text x="1172.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (7 samples, 1.54%)</title><rect x="1169" y="276" width="18" height="15" fill="rgb(232,219,20)"/><text x="1172.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (7 samples, 1.54%)</title><rect x="1169" y="292" width="18" height="15" fill="rgb(232,160,41)"/><text x="1172.00" y="302.50"></text></g><g><title>0x7fa952e77ed5 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1184" y="308" width="3" height="15" fill="rgb(223,22,12)"/><text x="1187.00" y="318.50"></text></g><g><title>all (454 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(233,203,9)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py) (454 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(228,42,32)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py)</text></g><g><title>start (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py) (1 samples, 0.22%)</title><rect x="1187" y="68" width="3" height="15" fill="rgb(242,184,49)"/><text x="1190.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py) (1 samples, 0.22%)</title><rect x="1187" y="84" width="3" height="15" fill="rgb(223,33,54)"/><text x="1190.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.22%)</title><rect x="1187" y="100" width="3" height="15" fill="rgb(219,154,48)"/><text x="1190.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.22%)</title><rect x="1187" y="116" width="3" height="15" fill="rgb(234,113,40)"/><text x="1190.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.22%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(239,28,17)"/><text x="1190.00" y="142.50"></text></g><g><title>_validate_input (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.22%)</title><rect x="1187" y="148" width="3" height="15" fill="rgb(244,55,30)"/><text x="1190.00" y="158.50"></text></g><g><title>check_X_y (sklearn/utils/validation.py) (1 samples, 0.22%)</title><rect x="1187" y="164" width="3" height="15" fill="rgb(222,34,43)"/><text x="1190.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.22%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(229,76,34)"/><text x="1190.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.22%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(234,24,41)"/><text x="1190.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.22%)</title><rect x="1187" y="212" width="3" height="15" fill="rgb(252,44,7)"/><text x="1190.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.22%)</title><rect x="1187" y="228" width="3" height="15" fill="rgb(246,192,10)"/><text x="1190.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.22%)</title><rect x="1187" y="244" width="3" height="15" fill="rgb(240,204,24)"/><text x="1190.00" y="254.50"></text></g></g></svg>