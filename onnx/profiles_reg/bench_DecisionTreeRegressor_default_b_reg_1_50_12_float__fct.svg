<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1654" onload="init(evt)" viewBox="0 0 1200 1654" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1654" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1637.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1637.00"> </text><g id="frames"><g><title>__enter__ (warnings.py) (1 samples, 0.51%)</title><rect x="10" y="932" width="6" height="15" fill="rgb(224,149,23)"/><text x="13.00" y="942.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 1.03%)</title><rect x="10" y="868" width="12" height="15" fill="rgb(221,59,5)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 1.03%)</title><rect x="10" y="884" width="12" height="15" fill="rgb(230,110,15)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 1.03%)</title><rect x="10" y="900" width="12" height="15" fill="rgb(224,208,31)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 1.03%)</title><rect x="10" y="916" width="12" height="15" fill="rgb(246,4,45)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="16" y="932" width="6" height="15" fill="rgb(246,99,23)"/><text x="19.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="16" y="948" width="6" height="15" fill="rgb(216,8,3)"/><text x="19.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="16" y="964" width="6" height="15" fill="rgb(246,6,35)"/><text x="19.00" y="974.50"></text></g><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="16" y="980" width="6" height="15" fill="rgb(237,94,8)"/><text x="19.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="16" y="996" width="6" height="15" fill="rgb(212,17,11)"/><text x="19.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="16" y="1012" width="6" height="15" fill="rgb(243,33,23)"/><text x="19.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.51%)</title><rect x="16" y="1028" width="6" height="15" fill="rgb(244,207,22)"/><text x="19.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.51%)</title><rect x="16" y="1044" width="6" height="15" fill="rgb(240,228,41)"/><text x="19.00" y="1054.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.51%)</title><rect x="22" y="916" width="6" height="15" fill="rgb(225,164,29)"/><text x="25.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.51%)</title><rect x="22" y="932" width="6" height="15" fill="rgb(253,50,40)"/><text x="25.00" y="942.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 2.05%)</title><rect x="10" y="836" width="24" height="15" fill="rgb(220,97,42)"/><text x="13.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 2.05%)</title><rect x="10" y="852" width="24" height="15" fill="rgb(232,15,26)"/><text x="13.00" y="862.50">_..</text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 1.03%)</title><rect x="22" y="868" width="12" height="15" fill="rgb(219,43,27)"/><text x="25.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 1.03%)</title><rect x="22" y="884" width="12" height="15" fill="rgb(225,41,50)"/><text x="25.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 1.03%)</title><rect x="22" y="900" width="12" height="15" fill="rgb(221,85,9)"/><text x="25.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.51%)</title><rect x="28" y="916" width="6" height="15" fill="rgb(228,192,49)"/><text x="31.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.51%)</title><rect x="28" y="932" width="6" height="15" fill="rgb(208,209,27)"/><text x="31.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.51%)</title><rect x="28" y="948" width="6" height="15" fill="rgb(223,0,3)"/><text x="31.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.51%)</title><rect x="28" y="964" width="6" height="15" fill="rgb(219,199,31)"/><text x="31.00" y="974.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 2.56%)</title><rect x="10" y="292" width="30" height="15" fill="rgb(231,219,16)"/><text x="13.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="308" width="30" height="15" fill="rgb(219,106,21)"/><text x="13.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="324" width="30" height="15" fill="rgb(211,97,39)"/><text x="13.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="340" width="30" height="15" fill="rgb(238,72,27)"/><text x="13.00" y="350.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.56%)</title><rect x="10" y="356" width="30" height="15" fill="rgb(223,211,52)"/><text x="13.00" y="366.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="372" width="30" height="15" fill="rgb(237,80,31)"/><text x="13.00" y="382.50">_c..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 2.56%)</title><rect x="10" y="388" width="30" height="15" fill="rgb(234,46,25)"/><text x="13.00" y="398.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="404" width="30" height="15" fill="rgb(224,64,13)"/><text x="13.00" y="414.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="420" width="30" height="15" fill="rgb(216,189,8)"/><text x="13.00" y="430.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="436" width="30" height="15" fill="rgb(224,137,27)"/><text x="13.00" y="446.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.56%)</title><rect x="10" y="452" width="30" height="15" fill="rgb(250,69,13)"/><text x="13.00" y="462.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="468" width="30" height="15" fill="rgb(214,36,32)"/><text x="13.00" y="478.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 2.56%)</title><rect x="10" y="484" width="30" height="15" fill="rgb(243,32,26)"/><text x="13.00" y="494.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="500" width="30" height="15" fill="rgb(239,186,28)"/><text x="13.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="516" width="30" height="15" fill="rgb(206,214,54)"/><text x="13.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="532" width="30" height="15" fill="rgb(217,47,35)"/><text x="13.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.56%)</title><rect x="10" y="548" width="30" height="15" fill="rgb(230,182,14)"/><text x="13.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="564" width="30" height="15" fill="rgb(208,5,18)"/><text x="13.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 2.56%)</title><rect x="10" y="580" width="30" height="15" fill="rgb(210,164,0)"/><text x="13.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="596" width="30" height="15" fill="rgb(215,115,48)"/><text x="13.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="612" width="30" height="15" fill="rgb(251,172,25)"/><text x="13.00" y="622.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="628" width="30" height="15" fill="rgb(241,173,17)"/><text x="13.00" y="638.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="644" width="30" height="15" fill="rgb(231,217,28)"/><text x="13.00" y="654.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="660" width="30" height="15" fill="rgb(254,174,6)"/><text x="13.00" y="670.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="676" width="30" height="15" fill="rgb(218,17,0)"/><text x="13.00" y="686.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.56%)</title><rect x="10" y="692" width="30" height="15" fill="rgb(215,183,27)"/><text x="13.00" y="702.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="708" width="30" height="15" fill="rgb(216,12,31)"/><text x="13.00" y="718.50">_c..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 2.56%)</title><rect x="10" y="724" width="30" height="15" fill="rgb(228,196,27)"/><text x="13.00" y="734.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="740" width="30" height="15" fill="rgb(212,215,47)"/><text x="13.00" y="750.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="756" width="30" height="15" fill="rgb(227,86,6)"/><text x="13.00" y="766.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="772" width="30" height="15" fill="rgb(252,53,8)"/><text x="13.00" y="782.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.56%)</title><rect x="10" y="788" width="30" height="15" fill="rgb(216,135,41)"/><text x="13.00" y="798.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="10" y="804" width="30" height="15" fill="rgb(239,18,44)"/><text x="13.00" y="814.50">_c..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 2.56%)</title><rect x="10" y="820" width="30" height="15" fill="rgb(237,217,17)"/><text x="13.00" y="830.50">&lt;m..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="34" y="836" width="6" height="15" fill="rgb(247,213,0)"/><text x="37.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="34" y="852" width="6" height="15" fill="rgb(247,223,31)"/><text x="37.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="34" y="868" width="6" height="15" fill="rgb(247,219,31)"/><text x="37.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="34" y="884" width="6" height="15" fill="rgb(244,218,52)"/><text x="37.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="34" y="900" width="6" height="15" fill="rgb(254,47,30)"/><text x="37.00" y="910.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="34" y="916" width="6" height="15" fill="rgb(242,191,13)"/><text x="37.00" y="926.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.51%)</title><rect x="34" y="932" width="6" height="15" fill="rgb(227,95,47)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="34" y="948" width="6" height="15" fill="rgb(208,5,10)"/><text x="37.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="34" y="964" width="6" height="15" fill="rgb(246,116,41)"/><text x="37.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="34" y="980" width="6" height="15" fill="rgb(238,226,8)"/><text x="37.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="34" y="996" width="6" height="15" fill="rgb(214,123,5)"/><text x="37.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="34" y="1012" width="6" height="15" fill="rgb(238,137,24)"/><text x="37.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/six.py) (1 samples, 0.51%)</title><rect x="34" y="1028" width="6" height="15" fill="rgb(218,18,22)"/><text x="37.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.08%)</title><rect x="10" y="196" width="36" height="15" fill="rgb(225,212,0)"/><text x="13.00" y="206.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.08%)</title><rect x="10" y="212" width="36" height="15" fill="rgb(245,183,23)"/><text x="13.00" y="222.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.08%)</title><rect x="10" y="228" width="36" height="15" fill="rgb(250,191,53)"/><text x="13.00" y="238.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.08%)</title><rect x="10" y="244" width="36" height="15" fill="rgb(213,150,29)"/><text x="13.00" y="254.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 3.08%)</title><rect x="10" y="260" width="36" height="15" fill="rgb(226,126,48)"/><text x="13.00" y="270.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.08%)</title><rect x="10" y="276" width="36" height="15" fill="rgb(224,207,46)"/><text x="13.00" y="286.50">_ca..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.51%)</title><rect x="40" y="292" width="6" height="15" fill="rgb(232,120,16)"/><text x="43.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="308" width="6" height="15" fill="rgb(251,151,25)"/><text x="43.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="324" width="6" height="15" fill="rgb(242,211,48)"/><text x="43.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="340" width="6" height="15" fill="rgb(243,125,37)"/><text x="43.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="40" y="356" width="6" height="15" fill="rgb(246,161,30)"/><text x="43.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="372" width="6" height="15" fill="rgb(249,117,10)"/><text x="43.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.51%)</title><rect x="40" y="388" width="6" height="15" fill="rgb(214,200,26)"/><text x="43.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="404" width="6" height="15" fill="rgb(217,76,30)"/><text x="43.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="420" width="6" height="15" fill="rgb(225,135,24)"/><text x="43.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="436" width="6" height="15" fill="rgb(208,168,8)"/><text x="43.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="40" y="452" width="6" height="15" fill="rgb(205,125,9)"/><text x="43.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="468" width="6" height="15" fill="rgb(214,120,38)"/><text x="43.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.51%)</title><rect x="40" y="484" width="6" height="15" fill="rgb(213,100,30)"/><text x="43.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="500" width="6" height="15" fill="rgb(244,49,39)"/><text x="43.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="516" width="6" height="15" fill="rgb(230,35,23)"/><text x="43.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="532" width="6" height="15" fill="rgb(239,93,21)"/><text x="43.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="40" y="548" width="6" height="15" fill="rgb(245,110,29)"/><text x="43.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="564" width="6" height="15" fill="rgb(218,34,11)"/><text x="43.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.51%)</title><rect x="40" y="580" width="6" height="15" fill="rgb(243,30,46)"/><text x="43.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="596" width="6" height="15" fill="rgb(214,151,14)"/><text x="43.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="612" width="6" height="15" fill="rgb(237,218,29)"/><text x="43.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="628" width="6" height="15" fill="rgb(240,156,31)"/><text x="43.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="40" y="644" width="6" height="15" fill="rgb(229,104,35)"/><text x="43.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="660" width="6" height="15" fill="rgb(206,14,6)"/><text x="43.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.51%)</title><rect x="40" y="676" width="6" height="15" fill="rgb(225,13,48)"/><text x="43.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="692" width="6" height="15" fill="rgb(235,94,39)"/><text x="43.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="708" width="6" height="15" fill="rgb(231,50,12)"/><text x="43.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="724" width="6" height="15" fill="rgb(242,195,1)"/><text x="43.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="40" y="740" width="6" height="15" fill="rgb(211,56,33)"/><text x="43.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="756" width="6" height="15" fill="rgb(253,45,29)"/><text x="43.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.51%)</title><rect x="40" y="772" width="6" height="15" fill="rgb(240,217,26)"/><text x="43.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="788" width="6" height="15" fill="rgb(206,101,48)"/><text x="43.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="804" width="6" height="15" fill="rgb(226,126,38)"/><text x="43.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="820" width="6" height="15" fill="rgb(229,226,47)"/><text x="43.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="836" width="6" height="15" fill="rgb(207,79,53)"/><text x="43.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="852" width="6" height="15" fill="rgb(235,147,10)"/><text x="43.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="40" y="868" width="6" height="15" fill="rgb(236,52,38)"/><text x="43.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="884" width="6" height="15" fill="rgb(209,94,41)"/><text x="43.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.51%)</title><rect x="40" y="900" width="6" height="15" fill="rgb(214,82,53)"/><text x="43.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="916" width="6" height="15" fill="rgb(229,144,30)"/><text x="43.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="932" width="6" height="15" fill="rgb(208,21,8)"/><text x="43.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="948" width="6" height="15" fill="rgb(234,186,47)"/><text x="43.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="40" y="964" width="6" height="15" fill="rgb(239,58,50)"/><text x="43.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="980" width="6" height="15" fill="rgb(251,197,20)"/><text x="43.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.51%)</title><rect x="40" y="996" width="6" height="15" fill="rgb(251,153,44)"/><text x="43.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1012" width="6" height="15" fill="rgb(243,227,49)"/><text x="43.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1028" width="6" height="15" fill="rgb(249,139,35)"/><text x="43.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1044" width="6" height="15" fill="rgb(239,151,18)"/><text x="43.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1060" width="6" height="15" fill="rgb(232,195,6)"/><text x="43.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1076" width="6" height="15" fill="rgb(245,135,9)"/><text x="43.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="40" y="1092" width="6" height="15" fill="rgb(228,86,24)"/><text x="43.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1108" width="6" height="15" fill="rgb(214,151,26)"/><text x="43.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.51%)</title><rect x="40" y="1124" width="6" height="15" fill="rgb(250,74,25)"/><text x="43.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1140" width="6" height="15" fill="rgb(205,96,48)"/><text x="43.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1156" width="6" height="15" fill="rgb(226,28,16)"/><text x="43.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1172" width="6" height="15" fill="rgb(239,178,11)"/><text x="43.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="40" y="1188" width="6" height="15" fill="rgb(213,101,45)"/><text x="43.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1204" width="6" height="15" fill="rgb(219,55,32)"/><text x="43.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.51%)</title><rect x="40" y="1220" width="6" height="15" fill="rgb(208,226,0)"/><text x="43.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1236" width="6" height="15" fill="rgb(221,108,21)"/><text x="43.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1252" width="6" height="15" fill="rgb(225,1,39)"/><text x="43.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1268" width="6" height="15" fill="rgb(224,47,25)"/><text x="43.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="40" y="1284" width="6" height="15" fill="rgb(242,26,10)"/><text x="43.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1300" width="6" height="15" fill="rgb(251,185,38)"/><text x="43.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py) (1 samples, 0.51%)</title><rect x="40" y="1316" width="6" height="15" fill="rgb(232,3,42)"/><text x="43.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1332" width="6" height="15" fill="rgb(250,26,3)"/><text x="43.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1348" width="6" height="15" fill="rgb(219,71,0)"/><text x="43.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1364" width="6" height="15" fill="rgb(237,153,45)"/><text x="43.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="40" y="1380" width="6" height="15" fill="rgb(217,209,6)"/><text x="43.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1396" width="6" height="15" fill="rgb(241,14,4)"/><text x="43.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py) (1 samples, 0.51%)</title><rect x="40" y="1412" width="6" height="15" fill="rgb(206,160,5)"/><text x="43.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1428" width="6" height="15" fill="rgb(238,78,32)"/><text x="43.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1444" width="6" height="15" fill="rgb(210,24,33)"/><text x="43.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1460" width="6" height="15" fill="rgb(225,9,29)"/><text x="43.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="40" y="1476" width="6" height="15" fill="rgb(231,115,32)"/><text x="43.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1492" width="6" height="15" fill="rgb(247,139,39)"/><text x="43.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py) (1 samples, 0.51%)</title><rect x="40" y="1508" width="6" height="15" fill="rgb(253,16,38)"/><text x="43.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1524" width="6" height="15" fill="rgb(241,226,14)"/><text x="43.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1540" width="6" height="15" fill="rgb(221,195,2)"/><text x="43.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1556" width="6" height="15" fill="rgb(205,90,14)"/><text x="43.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="40" y="1572" width="6" height="15" fill="rgb(242,71,45)"/><text x="43.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="40" y="1588" width="6" height="15" fill="rgb(247,113,11)"/><text x="43.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/matfuncs.py) (1 samples, 0.51%)</title><rect x="40" y="1604" width="6" height="15" fill="rgb(232,127,21)"/><text x="43.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="46" y="1156" width="6" height="15" fill="rgb(226,54,54)"/><text x="49.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="46" y="1172" width="6" height="15" fill="rgb(249,194,14)"/><text x="49.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="46" y="1188" width="6" height="15" fill="rgb(250,127,8)"/><text x="49.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="46" y="1204" width="6" height="15" fill="rgb(208,40,1)"/><text x="49.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="46" y="1220" width="6" height="15" fill="rgb(231,203,13)"/><text x="49.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="46" y="1236" width="6" height="15" fill="rgb(253,69,27)"/><text x="49.00" y="1246.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/__init__.py) (1 samples, 0.51%)</title><rect x="46" y="1252" width="6" height="15" fill="rgb(253,188,31)"/><text x="49.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="46" y="1268" width="6" height="15" fill="rgb(236,59,8)"/><text x="49.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="46" y="1284" width="6" height="15" fill="rgb(251,122,32)"/><text x="49.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="46" y="1300" width="6" height="15" fill="rgb(229,96,14)"/><text x="49.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="46" y="1316" width="6" height="15" fill="rgb(213,105,20)"/><text x="49.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="46" y="1332" width="6" height="15" fill="rgb(218,203,20)"/><text x="49.00" y="1342.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/exceptions.py) (1 samples, 0.51%)</title><rect x="46" y="1348" width="6" height="15" fill="rgb(224,210,45)"/><text x="49.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="916" width="12" height="15" fill="rgb(224,122,11)"/><text x="49.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="932" width="12" height="15" fill="rgb(221,183,39)"/><text x="49.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="948" width="12" height="15" fill="rgb(235,9,54)"/><text x="49.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="964" width="12" height="15" fill="rgb(225,146,28)"/><text x="49.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="46" y="980" width="12" height="15" fill="rgb(210,121,21)"/><text x="49.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="996" width="12" height="15" fill="rgb(247,80,19)"/><text x="49.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 1.03%)</title><rect x="46" y="1012" width="12" height="15" fill="rgb(241,85,36)"/><text x="49.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="1028" width="12" height="15" fill="rgb(214,63,36)"/><text x="49.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="1044" width="12" height="15" fill="rgb(207,151,30)"/><text x="49.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="1060" width="12" height="15" fill="rgb(230,191,17)"/><text x="49.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="46" y="1076" width="12" height="15" fill="rgb(247,43,4)"/><text x="49.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="1092" width="12" height="15" fill="rgb(216,33,24)"/><text x="49.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 1.03%)</title><rect x="46" y="1108" width="12" height="15" fill="rgb(244,130,3)"/><text x="49.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="1124" width="12" height="15" fill="rgb(248,78,16)"/><text x="49.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="1140" width="12" height="15" fill="rgb(231,92,38)"/><text x="49.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1156" width="6" height="15" fill="rgb(205,42,28)"/><text x="55.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="52" y="1172" width="6" height="15" fill="rgb(253,202,6)"/><text x="55.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1188" width="6" height="15" fill="rgb(221,50,6)"/><text x="55.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.51%)</title><rect x="52" y="1204" width="6" height="15" fill="rgb(217,158,14)"/><text x="55.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1220" width="6" height="15" fill="rgb(237,211,49)"/><text x="55.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1236" width="6" height="15" fill="rgb(233,117,24)"/><text x="55.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1252" width="6" height="15" fill="rgb(229,53,21)"/><text x="55.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="52" y="1268" width="6" height="15" fill="rgb(224,90,3)"/><text x="55.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1284" width="6" height="15" fill="rgb(240,2,26)"/><text x="55.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.51%)</title><rect x="52" y="1300" width="6" height="15" fill="rgb(242,95,8)"/><text x="55.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.51%)</title><rect x="52" y="1316" width="6" height="15" fill="rgb(216,35,1)"/><text x="55.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.51%)</title><rect x="52" y="1332" width="6" height="15" fill="rgb(207,193,45)"/><text x="55.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.51%)</title><rect x="52" y="1348" width="6" height="15" fill="rgb(221,20,20)"/><text x="55.00" y="1358.50"></text></g><g><title>findsource (inspect.py) (1 samples, 0.51%)</title><rect x="52" y="1364" width="6" height="15" fill="rgb(230,47,6)"/><text x="55.00" y="1374.50"></text></g><g><title>getmodule (inspect.py) (1 samples, 0.51%)</title><rect x="52" y="1380" width="6" height="15" fill="rgb(238,208,23)"/><text x="55.00" y="1390.50"></text></g><g><title>ismodule (inspect.py) (1 samples, 0.51%)</title><rect x="52" y="1396" width="6" height="15" fill="rgb(233,162,54)"/><text x="55.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="46" y="484" width="18" height="15" fill="rgb(250,108,50)"/><text x="49.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="46" y="500" width="18" height="15" fill="rgb(229,121,36)"/><text x="49.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="46" y="516" width="18" height="15" fill="rgb(221,8,50)"/><text x="49.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="46" y="532" width="18" height="15" fill="rgb(206,61,12)"/><text x="49.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.54%)</title><rect x="46" y="548" width="18" height="15" fill="rgb(238,22,21)"/><text x="49.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="46" y="564" width="18" height="15" fill="rgb(238,192,12)"/><text x="49.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 1.54%)</title><rect x="46" y="580" width="18" height="15" fill="rgb(244,198,37)"/><text x="49.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="46" y="596" width="18" height="15" fill="rgb(225,224,16)"/><text x="49.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="46" y="612" width="18" height="15" fill="rgb(207,69,20)"/><text x="49.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="46" y="628" width="18" height="15" fill="rgb(232,31,43)"/><text x="49.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.54%)</title><rect x="46" y="644" width="18" height="15" fill="rgb(242,147,23)"/><text x="49.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="46" y="660" width="18" height="15" fill="rgb(233,112,31)"/><text x="49.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 1.54%)</title><rect x="46" y="676" width="18" height="15" fill="rgb(247,84,18)"/><text x="49.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="46" y="692" width="18" height="15" fill="rgb(211,102,4)"/><text x="49.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="46" y="708" width="18" height="15" fill="rgb(244,191,44)"/><text x="49.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="46" y="724" width="18" height="15" fill="rgb(234,100,10)"/><text x="49.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.54%)</title><rect x="46" y="740" width="18" height="15" fill="rgb(246,35,10)"/><text x="49.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="46" y="756" width="18" height="15" fill="rgb(237,29,11)"/><text x="49.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 1.54%)</title><rect x="46" y="772" width="18" height="15" fill="rgb(223,121,20)"/><text x="49.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="46" y="788" width="18" height="15" fill="rgb(228,221,53)"/><text x="49.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="46" y="804" width="18" height="15" fill="rgb(234,46,16)"/><text x="49.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="46" y="820" width="18" height="15" fill="rgb(251,173,15)"/><text x="49.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.54%)</title><rect x="46" y="836" width="18" height="15" fill="rgb(237,144,22)"/><text x="49.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="46" y="852" width="18" height="15" fill="rgb(248,178,27)"/><text x="49.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 1.54%)</title><rect x="46" y="868" width="18" height="15" fill="rgb(245,179,35)"/><text x="49.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="46" y="884" width="18" height="15" fill="rgb(229,25,8)"/><text x="49.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="46" y="900" width="18" height="15" fill="rgb(245,146,36)"/><text x="49.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="58" y="916" width="6" height="15" fill="rgb(208,24,16)"/><text x="61.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="58" y="932" width="6" height="15" fill="rgb(208,26,24)"/><text x="61.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="58" y="948" width="6" height="15" fill="rgb(237,52,8)"/><text x="61.00" y="958.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="58" y="964" width="6" height="15" fill="rgb(254,200,39)"/><text x="61.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="58" y="980" width="6" height="15" fill="rgb(226,140,50)"/><text x="61.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.51%)</title><rect x="58" y="996" width="6" height="15" fill="rgb(232,77,18)"/><text x="61.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="64" y="1284" width="6" height="15" fill="rgb(242,25,49)"/><text x="67.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/internals/blocks.py) (1 samples, 0.51%)</title><rect x="64" y="1300" width="6" height="15" fill="rgb(217,202,9)"/><text x="67.00" y="1310.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="64" y="1316" width="6" height="15" fill="rgb(224,3,54)"/><text x="67.00" y="1326.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="64" y="1332" width="6" height="15" fill="rgb(226,92,36)"/><text x="67.00" y="1342.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 2.56%)</title><rect x="46" y="340" width="30" height="15" fill="rgb(251,142,11)"/><text x="49.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="46" y="356" width="30" height="15" fill="rgb(228,172,17)"/><text x="49.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="46" y="372" width="30" height="15" fill="rgb(220,146,20)"/><text x="49.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="46" y="388" width="30" height="15" fill="rgb(251,126,1)"/><text x="49.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.56%)</title><rect x="46" y="404" width="30" height="15" fill="rgb(236,88,24)"/><text x="49.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="46" y="420" width="30" height="15" fill="rgb(206,49,9)"/><text x="49.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 2.56%)</title><rect x="46" y="436" width="30" height="15" fill="rgb(213,59,24)"/><text x="49.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="46" y="452" width="30" height="15" fill="rgb(246,94,42)"/><text x="49.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.56%)</title><rect x="46" y="468" width="30" height="15" fill="rgb(206,181,10)"/><text x="49.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="484" width="12" height="15" fill="rgb(208,171,51)"/><text x="67.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="64" y="500" width="12" height="15" fill="rgb(218,18,51)"/><text x="67.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="516" width="12" height="15" fill="rgb(237,219,53)"/><text x="67.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 1.03%)</title><rect x="64" y="532" width="12" height="15" fill="rgb(221,128,14)"/><text x="67.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="548" width="12" height="15" fill="rgb(250,100,15)"/><text x="67.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="564" width="12" height="15" fill="rgb(210,12,44)"/><text x="67.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="580" width="12" height="15" fill="rgb(240,56,27)"/><text x="67.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="64" y="596" width="12" height="15" fill="rgb(206,87,49)"/><text x="67.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="612" width="12" height="15" fill="rgb(215,187,26)"/><text x="67.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 1.03%)</title><rect x="64" y="628" width="12" height="15" fill="rgb(208,202,0)"/><text x="67.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="644" width="12" height="15" fill="rgb(209,31,23)"/><text x="67.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="660" width="12" height="15" fill="rgb(244,66,36)"/><text x="67.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="676" width="12" height="15" fill="rgb(216,83,12)"/><text x="67.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="64" y="692" width="12" height="15" fill="rgb(235,55,43)"/><text x="67.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="708" width="12" height="15" fill="rgb(219,77,52)"/><text x="67.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 1.03%)</title><rect x="64" y="724" width="12" height="15" fill="rgb(232,172,6)"/><text x="67.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="740" width="12" height="15" fill="rgb(244,68,8)"/><text x="67.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="756" width="12" height="15" fill="rgb(219,183,2)"/><text x="67.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="772" width="12" height="15" fill="rgb(224,207,43)"/><text x="67.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="64" y="788" width="12" height="15" fill="rgb(227,93,1)"/><text x="67.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="804" width="12" height="15" fill="rgb(228,144,30)"/><text x="67.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 1.03%)</title><rect x="64" y="820" width="12" height="15" fill="rgb(217,68,11)"/><text x="67.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="836" width="12" height="15" fill="rgb(221,72,32)"/><text x="67.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="852" width="12" height="15" fill="rgb(226,48,48)"/><text x="67.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="868" width="12" height="15" fill="rgb(213,113,25)"/><text x="67.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="64" y="884" width="12" height="15" fill="rgb(231,129,26)"/><text x="67.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="900" width="12" height="15" fill="rgb(233,0,22)"/><text x="67.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 1.03%)</title><rect x="64" y="916" width="12" height="15" fill="rgb(239,163,5)"/><text x="67.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="932" width="12" height="15" fill="rgb(222,43,9)"/><text x="67.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="948" width="12" height="15" fill="rgb(221,33,12)"/><text x="67.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="964" width="12" height="15" fill="rgb(229,172,49)"/><text x="67.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="64" y="980" width="12" height="15" fill="rgb(214,96,30)"/><text x="67.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="996" width="12" height="15" fill="rgb(223,27,46)"/><text x="67.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 1.03%)</title><rect x="64" y="1012" width="12" height="15" fill="rgb(207,177,30)"/><text x="67.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="1028" width="12" height="15" fill="rgb(237,13,10)"/><text x="67.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="1044" width="12" height="15" fill="rgb(228,211,33)"/><text x="67.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="1060" width="12" height="15" fill="rgb(241,219,14)"/><text x="67.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="64" y="1076" width="12" height="15" fill="rgb(223,140,34)"/><text x="67.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="1092" width="12" height="15" fill="rgb(250,24,20)"/><text x="67.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (2 samples, 1.03%)</title><rect x="64" y="1108" width="12" height="15" fill="rgb(242,50,5)"/><text x="67.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="1124" width="12" height="15" fill="rgb(252,77,38)"/><text x="67.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="1140" width="12" height="15" fill="rgb(228,38,42)"/><text x="67.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="1156" width="12" height="15" fill="rgb(239,13,44)"/><text x="67.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="64" y="1172" width="12" height="15" fill="rgb(207,218,54)"/><text x="67.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="1188" width="12" height="15" fill="rgb(239,184,51)"/><text x="67.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/internals/__init__.py) (2 samples, 1.03%)</title><rect x="64" y="1204" width="12" height="15" fill="rgb(243,40,36)"/><text x="67.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="1220" width="12" height="15" fill="rgb(223,226,11)"/><text x="67.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="1236" width="12" height="15" fill="rgb(249,181,26)"/><text x="67.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="64" y="1252" width="12" height="15" fill="rgb(225,79,23)"/><text x="67.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="64" y="1268" width="12" height="15" fill="rgb(224,200,49)"/><text x="67.00" y="1278.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="70" y="1284" width="6" height="15" fill="rgb(246,212,30)"/><text x="73.00" y="1294.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="76" y="1108" width="6" height="15" fill="rgb(218,133,35)"/><text x="79.00" y="1118.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="76" y="1124" width="6" height="15" fill="rgb(215,81,8)"/><text x="79.00" y="1134.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="76" y="1140" width="6" height="15" fill="rgb(218,126,44)"/><text x="79.00" y="1150.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="76" y="1156" width="6" height="15" fill="rgb(210,14,10)"/><text x="79.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="628" width="18" height="15" fill="rgb(239,81,48)"/><text x="79.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="644" width="18" height="15" fill="rgb(232,12,52)"/><text x="79.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="660" width="18" height="15" fill="rgb(242,93,24)"/><text x="79.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="676" width="18" height="15" fill="rgb(225,156,41)"/><text x="79.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.54%)</title><rect x="76" y="692" width="18" height="15" fill="rgb(226,39,42)"/><text x="79.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="708" width="18" height="15" fill="rgb(226,80,13)"/><text x="79.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (3 samples, 1.54%)</title><rect x="76" y="724" width="18" height="15" fill="rgb(214,140,37)"/><text x="79.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="740" width="18" height="15" fill="rgb(249,151,48)"/><text x="79.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="756" width="18" height="15" fill="rgb(235,70,48)"/><text x="79.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="772" width="18" height="15" fill="rgb(230,149,15)"/><text x="79.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.54%)</title><rect x="76" y="788" width="18" height="15" fill="rgb(225,79,42)"/><text x="79.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="804" width="18" height="15" fill="rgb(209,191,28)"/><text x="79.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (3 samples, 1.54%)</title><rect x="76" y="820" width="18" height="15" fill="rgb(221,79,15)"/><text x="79.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="836" width="18" height="15" fill="rgb(235,119,33)"/><text x="79.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="852" width="18" height="15" fill="rgb(252,4,46)"/><text x="79.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="868" width="18" height="15" fill="rgb(215,132,37)"/><text x="79.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.54%)</title><rect x="76" y="884" width="18" height="15" fill="rgb(239,58,27)"/><text x="79.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="900" width="18" height="15" fill="rgb(224,61,12)"/><text x="79.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (3 samples, 1.54%)</title><rect x="76" y="916" width="18" height="15" fill="rgb(215,93,48)"/><text x="79.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="932" width="18" height="15" fill="rgb(211,87,51)"/><text x="79.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="948" width="18" height="15" fill="rgb(251,170,16)"/><text x="79.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="964" width="18" height="15" fill="rgb(221,26,37)"/><text x="79.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="980" width="18" height="15" fill="rgb(252,42,39)"/><text x="79.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="996" width="18" height="15" fill="rgb(250,66,46)"/><text x="79.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="1012" width="18" height="15" fill="rgb(241,59,18)"/><text x="79.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.54%)</title><rect x="76" y="1028" width="18" height="15" fill="rgb(232,165,13)"/><text x="79.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="1044" width="18" height="15" fill="rgb(213,228,14)"/><text x="79.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (3 samples, 1.54%)</title><rect x="76" y="1060" width="18" height="15" fill="rgb(237,84,15)"/><text x="79.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="1076" width="18" height="15" fill="rgb(205,154,22)"/><text x="79.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="76" y="1092" width="18" height="15" fill="rgb(232,154,31)"/><text x="79.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="82" y="1108" width="12" height="15" fill="rgb(219,14,30)"/><text x="85.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="82" y="1124" width="12" height="15" fill="rgb(253,221,24)"/><text x="85.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="82" y="1140" width="12" height="15" fill="rgb(244,215,22)"/><text x="85.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="82" y="1156" width="12" height="15" fill="rgb(217,112,18)"/><text x="85.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (9 samples, 4.62%)</title><rect x="46" y="244" width="54" height="15" fill="rgb(243,188,10)"/><text x="49.00" y="254.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.62%)</title><rect x="46" y="260" width="54" height="15" fill="rgb(243,13,18)"/><text x="49.00" y="270.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.62%)</title><rect x="46" y="276" width="54" height="15" fill="rgb(225,212,15)"/><text x="49.00" y="286.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.62%)</title><rect x="46" y="292" width="54" height="15" fill="rgb(231,112,28)"/><text x="49.00" y="302.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 4.62%)</title><rect x="46" y="308" width="54" height="15" fill="rgb(240,66,42)"/><text x="49.00" y="318.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.62%)</title><rect x="46" y="324" width="54" height="15" fill="rgb(228,17,41)"/><text x="49.00" y="334.50">_call..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (4 samples, 2.05%)</title><rect x="76" y="340" width="24" height="15" fill="rgb(236,160,47)"/><text x="79.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="76" y="356" width="24" height="15" fill="rgb(214,175,41)"/><text x="79.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="76" y="372" width="24" height="15" fill="rgb(250,198,1)"/><text x="79.00" y="382.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="76" y="388" width="24" height="15" fill="rgb(210,189,31)"/><text x="79.00" y="398.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="76" y="404" width="24" height="15" fill="rgb(214,44,16)"/><text x="79.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="76" y="420" width="24" height="15" fill="rgb(208,80,50)"/><text x="79.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="76" y="436" width="24" height="15" fill="rgb(242,26,49)"/><text x="79.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.05%)</title><rect x="76" y="452" width="24" height="15" fill="rgb(232,201,15)"/><text x="79.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="76" y="468" width="24" height="15" fill="rgb(211,83,0)"/><text x="79.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (4 samples, 2.05%)</title><rect x="76" y="484" width="24" height="15" fill="rgb(234,12,36)"/><text x="79.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="76" y="500" width="24" height="15" fill="rgb(250,76,30)"/><text x="79.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="76" y="516" width="24" height="15" fill="rgb(237,146,21)"/><text x="79.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="76" y="532" width="24" height="15" fill="rgb(223,105,24)"/><text x="79.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.05%)</title><rect x="76" y="548" width="24" height="15" fill="rgb(241,153,10)"/><text x="79.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="76" y="564" width="24" height="15" fill="rgb(213,134,14)"/><text x="79.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (4 samples, 2.05%)</title><rect x="76" y="580" width="24" height="15" fill="rgb(239,4,41)"/><text x="79.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="76" y="596" width="24" height="15" fill="rgb(244,221,39)"/><text x="79.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="76" y="612" width="24" height="15" fill="rgb(243,45,29)"/><text x="79.00" y="622.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="94" y="628" width="6" height="15" fill="rgb(210,177,28)"/><text x="97.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="94" y="644" width="6" height="15" fill="rgb(252,136,13)"/><text x="97.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="94" y="660" width="6" height="15" fill="rgb(247,46,5)"/><text x="97.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.51%)</title><rect x="94" y="676" width="6" height="15" fill="rgb(241,77,28)"/><text x="97.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="94" y="692" width="6" height="15" fill="rgb(247,81,48)"/><text x="97.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="94" y="708" width="6" height="15" fill="rgb(241,228,47)"/><text x="97.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="94" y="724" width="6" height="15" fill="rgb(253,184,52)"/><text x="97.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="94" y="740" width="6" height="15" fill="rgb(226,226,23)"/><text x="97.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="94" y="756" width="6" height="15" fill="rgb(238,108,0)"/><text x="97.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.51%)</title><rect x="94" y="772" width="6" height="15" fill="rgb(243,47,5)"/><text x="97.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.51%)</title><rect x="94" y="788" width="6" height="15" fill="rgb(208,155,23)"/><text x="97.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.51%)</title><rect x="94" y="804" width="6" height="15" fill="rgb(206,116,36)"/><text x="97.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.51%)</title><rect x="94" y="820" width="6" height="15" fill="rgb(247,185,13)"/><text x="97.00" y="830.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.51%)</title><rect x="94" y="836" width="6" height="15" fill="rgb(226,208,50)"/><text x="97.00" y="846.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.51%)</title><rect x="94" y="852" width="6" height="15" fill="rgb(219,91,51)"/><text x="97.00" y="862.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.51%)</title><rect x="94" y="868" width="6" height="15" fill="rgb(239,127,26)"/><text x="97.00" y="878.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.51%)</title><rect x="94" y="884" width="6" height="15" fill="rgb(249,194,0)"/><text x="97.00" y="894.50"></text></g><g><title>_optimize_charset (sre_compile.py) (1 samples, 0.51%)</title><rect x="94" y="900" width="6" height="15" fill="rgb(212,204,37)"/><text x="97.00" y="910.50"></text></g><g><title>&lt;module&gt; (numpy/lib/arraysetops.py) (1 samples, 0.51%)</title><rect x="100" y="468" width="6" height="15" fill="rgb(254,157,30)"/><text x="103.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.51%)</title><rect x="100" y="484" width="6" height="15" fill="rgb(208,131,15)"/><text x="103.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 1.03%)</title><rect x="100" y="244" width="12" height="15" fill="rgb(236,101,1)"/><text x="103.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="100" y="260" width="12" height="15" fill="rgb(220,20,6)"/><text x="103.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="100" y="276" width="12" height="15" fill="rgb(210,153,17)"/><text x="103.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="100" y="292" width="12" height="15" fill="rgb(240,186,26)"/><text x="103.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="100" y="308" width="12" height="15" fill="rgb(216,9,14)"/><text x="103.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="100" y="324" width="12" height="15" fill="rgb(228,9,13)"/><text x="103.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="100" y="340" width="12" height="15" fill="rgb(229,206,30)"/><text x="103.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="100" y="356" width="12" height="15" fill="rgb(218,6,35)"/><text x="103.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (2 samples, 1.03%)</title><rect x="100" y="372" width="12" height="15" fill="rgb(225,90,21)"/><text x="103.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="100" y="388" width="12" height="15" fill="rgb(221,39,50)"/><text x="103.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="100" y="404" width="12" height="15" fill="rgb(224,167,36)"/><text x="103.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="100" y="420" width="12" height="15" fill="rgb(249,26,39)"/><text x="103.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="100" y="436" width="12" height="15" fill="rgb(205,173,9)"/><text x="103.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="100" y="452" width="12" height="15" fill="rgb(246,71,12)"/><text x="103.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.51%)</title><rect x="106" y="468" width="6" height="15" fill="rgb(212,1,1)"/><text x="109.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="106" y="484" width="6" height="15" fill="rgb(250,225,32)"/><text x="109.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="106" y="500" width="6" height="15" fill="rgb(240,100,7)"/><text x="109.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="106" y="516" width="6" height="15" fill="rgb(247,42,10)"/><text x="109.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="106" y="532" width="6" height="15" fill="rgb(254,178,3)"/><text x="109.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="106" y="548" width="6" height="15" fill="rgb(253,98,51)"/><text x="109.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/__init__.py) (1 samples, 0.51%)</title><rect x="106" y="564" width="6" height="15" fill="rgb(231,106,48)"/><text x="109.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="106" y="580" width="6" height="15" fill="rgb(246,71,4)"/><text x="109.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="106" y="596" width="6" height="15" fill="rgb(245,9,33)"/><text x="109.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="106" y="612" width="6" height="15" fill="rgb(207,52,19)"/><text x="109.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="106" y="628" width="6" height="15" fill="rgb(219,98,52)"/><text x="109.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="106" y="644" width="6" height="15" fill="rgb(242,88,24)"/><text x="109.00" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/defmatrix.py) (1 samples, 0.51%)</title><rect x="106" y="660" width="6" height="15" fill="rgb(250,77,8)"/><text x="109.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="106" y="676" width="6" height="15" fill="rgb(220,62,27)"/><text x="109.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="106" y="692" width="6" height="15" fill="rgb(218,102,48)"/><text x="109.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="106" y="708" width="6" height="15" fill="rgb(210,139,9)"/><text x="109.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="106" y="724" width="6" height="15" fill="rgb(210,104,29)"/><text x="109.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="106" y="740" width="6" height="15" fill="rgb(211,95,41)"/><text x="109.00" y="750.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/__init__.py) (1 samples, 0.51%)</title><rect x="106" y="756" width="6" height="15" fill="rgb(253,157,12)"/><text x="109.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="106" y="772" width="6" height="15" fill="rgb(249,57,37)"/><text x="109.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="106" y="788" width="6" height="15" fill="rgb(227,170,29)"/><text x="109.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="106" y="804" width="6" height="15" fill="rgb(252,140,20)"/><text x="109.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="106" y="820" width="6" height="15" fill="rgb(234,99,42)"/><text x="109.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="106" y="836" width="6" height="15" fill="rgb(235,166,43)"/><text x="109.00" y="846.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/linalg.py) (1 samples, 0.51%)</title><rect x="106" y="852" width="6" height="15" fill="rgb(247,114,25)"/><text x="109.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="106" y="868" width="6" height="15" fill="rgb(223,51,12)"/><text x="109.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="106" y="884" width="6" height="15" fill="rgb(223,150,47)"/><text x="109.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="106" y="900" width="6" height="15" fill="rgb(215,175,4)"/><text x="109.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="106" y="916" width="6" height="15" fill="rgb(228,174,0)"/><text x="109.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="106" y="932" width="6" height="15" fill="rgb(231,182,30)"/><text x="109.00" y="942.50"></text></g><g><title>&lt;module&gt; (numpy/lib/twodim_base.py) (1 samples, 0.51%)</title><rect x="106" y="948" width="6" height="15" fill="rgb(243,28,3)"/><text x="109.00" y="958.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.51%)</title><rect x="106" y="964" width="6" height="15" fill="rgb(241,164,39)"/><text x="109.00" y="974.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.51%)</title><rect x="106" y="980" width="6" height="15" fill="rgb(223,140,9)"/><text x="109.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 9.23%)</title><rect x="10" y="68" width="108" height="15" fill="rgb(212,186,9)"/><text x="13.00" y="78.50">_find_and_loa..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 9.23%)</title><rect x="10" y="84" width="108" height="15" fill="rgb(213,110,30)"/><text x="13.00" y="94.50">_find_and_loa..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 9.23%)</title><rect x="10" y="100" width="108" height="15" fill="rgb(219,22,48)"/><text x="13.00" y="110.50">_load_unlocke..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 9.23%)</title><rect x="10" y="116" width="108" height="15" fill="rgb(247,79,53)"/><text x="13.00" y="126.50">exec_module (..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 9.23%)</title><rect x="10" y="132" width="108" height="15" fill="rgb(222,59,19)"/><text x="13.00" y="142.50">_call_with_fr..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py) (18 samples, 9.23%)</title><rect x="10" y="148" width="108" height="15" fill="rgb(220,133,15)"/><text x="13.00" y="158.50">&lt;module&gt; (pro..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 9.23%)</title><rect x="10" y="164" width="108" height="15" fill="rgb(236,20,31)"/><text x="13.00" y="174.50">_find_and_loa..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 9.23%)</title><rect x="10" y="180" width="108" height="15" fill="rgb(210,209,35)"/><text x="13.00" y="190.50">_find_and_loa..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 6.15%)</title><rect x="46" y="196" width="72" height="15" fill="rgb(229,174,28)"/><text x="49.00" y="206.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 6.15%)</title><rect x="46" y="212" width="72" height="15" fill="rgb(239,120,1)"/><text x="49.00" y="222.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 6.15%)</title><rect x="46" y="228" width="72" height="15" fill="rgb(229,225,10)"/><text x="49.00" y="238.50">_call_wi..</text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py) (1 samples, 0.51%)</title><rect x="112" y="244" width="6" height="15" fill="rgb(214,185,16)"/><text x="115.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="260" width="6" height="15" fill="rgb(230,157,19)"/><text x="115.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="276" width="6" height="15" fill="rgb(208,138,6)"/><text x="115.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="292" width="6" height="15" fill="rgb(210,175,23)"/><text x="115.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="112" y="308" width="6" height="15" fill="rgb(213,83,31)"/><text x="115.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="324" width="6" height="15" fill="rgb(241,197,35)"/><text x="115.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py) (1 samples, 0.51%)</title><rect x="112" y="340" width="6" height="15" fill="rgb(219,93,19)"/><text x="115.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="356" width="6" height="15" fill="rgb(236,29,49)"/><text x="115.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="372" width="6" height="15" fill="rgb(240,137,40)"/><text x="115.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="388" width="6" height="15" fill="rgb(210,69,30)"/><text x="115.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="112" y="404" width="6" height="15" fill="rgb(222,1,14)"/><text x="115.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="420" width="6" height="15" fill="rgb(234,0,14)"/><text x="115.00" y="430.50"></text></g><g><title>0x7f4f43e8c373 (?) (1 samples, 0.51%)</title><rect x="112" y="436" width="6" height="15" fill="rgb(240,129,37)"/><text x="115.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="452" width="6" height="15" fill="rgb(205,187,23)"/><text x="115.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="468" width="6" height="15" fill="rgb(231,43,44)"/><text x="115.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="484" width="6" height="15" fill="rgb(248,149,25)"/><text x="115.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="112" y="500" width="6" height="15" fill="rgb(232,20,44)"/><text x="115.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="516" width="6" height="15" fill="rgb(217,144,17)"/><text x="115.00" y="526.50"></text></g><g><title>0x7f4f43c4feea (?) (1 samples, 0.51%)</title><rect x="112" y="532" width="6" height="15" fill="rgb(245,111,24)"/><text x="115.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="548" width="6" height="15" fill="rgb(223,24,18)"/><text x="115.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="564" width="6" height="15" fill="rgb(239,127,4)"/><text x="115.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="580" width="6" height="15" fill="rgb(213,140,49)"/><text x="115.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="112" y="596" width="6" height="15" fill="rgb(223,30,37)"/><text x="115.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="612" width="6" height="15" fill="rgb(211,226,27)"/><text x="115.00" y="622.50"></text></g><g><title>0x7f4f439e8887 (?) (1 samples, 0.51%)</title><rect x="112" y="628" width="6" height="15" fill="rgb(238,191,3)"/><text x="115.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="644" width="6" height="15" fill="rgb(238,57,19)"/><text x="115.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="660" width="6" height="15" fill="rgb(233,192,7)"/><text x="115.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="676" width="6" height="15" fill="rgb(235,183,46)"/><text x="115.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="692" width="6" height="15" fill="rgb(242,89,46)"/><text x="115.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="708" width="6" height="15" fill="rgb(252,20,15)"/><text x="115.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="724" width="6" height="15" fill="rgb(213,65,50)"/><text x="115.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="112" y="740" width="6" height="15" fill="rgb(234,208,47)"/><text x="115.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="756" width="6" height="15" fill="rgb(253,220,2)"/><text x="115.00" y="766.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.51%)</title><rect x="112" y="772" width="6" height="15" fill="rgb(237,3,51)"/><text x="115.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="788" width="6" height="15" fill="rgb(224,117,45)"/><text x="115.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="804" width="6" height="15" fill="rgb(250,26,26)"/><text x="115.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="820" width="6" height="15" fill="rgb(212,163,15)"/><text x="115.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="112" y="836" width="6" height="15" fill="rgb(243,95,20)"/><text x="115.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="852" width="6" height="15" fill="rgb(242,95,3)"/><text x="115.00" y="862.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py) (1 samples, 0.51%)</title><rect x="112" y="868" width="6" height="15" fill="rgb(212,81,16)"/><text x="115.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="884" width="6" height="15" fill="rgb(226,60,50)"/><text x="115.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="900" width="6" height="15" fill="rgb(244,138,2)"/><text x="115.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="916" width="6" height="15" fill="rgb(244,188,7)"/><text x="115.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="112" y="932" width="6" height="15" fill="rgb(235,183,33)"/><text x="115.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="948" width="6" height="15" fill="rgb(252,115,38)"/><text x="115.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py) (1 samples, 0.51%)</title><rect x="112" y="964" width="6" height="15" fill="rgb(254,46,27)"/><text x="115.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="980" width="6" height="15" fill="rgb(234,183,1)"/><text x="115.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="996" width="6" height="15" fill="rgb(235,121,21)"/><text x="115.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="1012" width="6" height="15" fill="rgb(253,9,49)"/><text x="115.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="112" y="1028" width="6" height="15" fill="rgb(246,117,48)"/><text x="115.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="1044" width="6" height="15" fill="rgb(254,206,17)"/><text x="115.00" y="1054.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py) (1 samples, 0.51%)</title><rect x="112" y="1060" width="6" height="15" fill="rgb(235,170,54)"/><text x="115.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="1076" width="6" height="15" fill="rgb(248,132,22)"/><text x="115.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="1092" width="6" height="15" fill="rgb(224,207,8)"/><text x="115.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="1108" width="6" height="15" fill="rgb(218,214,33)"/><text x="115.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="112" y="1124" width="6" height="15" fill="rgb(241,121,13)"/><text x="115.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="1140" width="6" height="15" fill="rgb(238,109,34)"/><text x="115.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.51%)</title><rect x="112" y="1156" width="6" height="15" fill="rgb(248,27,18)"/><text x="115.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="1172" width="6" height="15" fill="rgb(251,100,35)"/><text x="115.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="1188" width="6" height="15" fill="rgb(211,111,50)"/><text x="115.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="1204" width="6" height="15" fill="rgb(236,73,23)"/><text x="115.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="112" y="1220" width="6" height="15" fill="rgb(230,200,33)"/><text x="115.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="1236" width="6" height="15" fill="rgb(211,121,26)"/><text x="115.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_least_angle.py) (1 samples, 0.51%)</title><rect x="112" y="1252" width="6" height="15" fill="rgb(208,61,45)"/><text x="115.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="1268" width="6" height="15" fill="rgb(222,18,53)"/><text x="115.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="1284" width="6" height="15" fill="rgb(237,196,30)"/><text x="115.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="1300" width="6" height="15" fill="rgb(209,115,21)"/><text x="115.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="112" y="1316" width="6" height="15" fill="rgb(247,30,7)"/><text x="115.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="1332" width="6" height="15" fill="rgb(213,84,51)"/><text x="115.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/__init__.py) (1 samples, 0.51%)</title><rect x="112" y="1348" width="6" height="15" fill="rgb(241,137,2)"/><text x="115.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="1364" width="6" height="15" fill="rgb(254,211,0)"/><text x="115.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="1380" width="6" height="15" fill="rgb(223,178,24)"/><text x="115.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="1396" width="6" height="15" fill="rgb(231,133,39)"/><text x="115.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="112" y="1412" width="6" height="15" fill="rgb(227,204,0)"/><text x="115.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="112" y="1428" width="6" height="15" fill="rgb(209,37,38)"/><text x="115.00" y="1438.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/_validation.py) (1 samples, 0.51%)</title><rect x="112" y="1444" width="6" height="15" fill="rgb(248,59,12)"/><text x="115.00" y="1454.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 1.03%)</title><rect x="124" y="116" width="13" height="15" fill="rgb(237,135,2)"/><text x="127.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 1.03%)</title><rect x="124" y="132" width="13" height="15" fill="rgb(219,3,9)"/><text x="127.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.51%)</title><rect x="131" y="148" width="6" height="15" fill="rgb(216,106,43)"/><text x="134.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.51%)</title><rect x="203" y="180" width="6" height="15" fill="rgb(247,104,13)"/><text x="206.00" y="190.50"></text></g><g><title>0x7f4f2945bff9 (?) (1 samples, 0.51%)</title><rect x="227" y="212" width="6" height="15" fill="rgb(212,185,30)"/><text x="230.00" y="222.50"></text></g><g><title>0x7f4f29456ef6 (?) (1 samples, 0.51%)</title><rect x="227" y="228" width="6" height="15" fill="rgb(248,66,14)"/><text x="230.00" y="238.50"></text></g><g><title>0x7f4f2944b962 (?) (1 samples, 0.51%)</title><rect x="227" y="244" width="6" height="15" fill="rgb(224,164,53)"/><text x="230.00" y="254.50"></text></g><g><title>0x7f4f2947f7a7 (?) (1 samples, 0.51%)</title><rect x="227" y="260" width="6" height="15" fill="rgb(227,167,17)"/><text x="230.00" y="270.50"></text></g><g><title>0x7f4f2947ef9c (?) (1 samples, 0.51%)</title><rect x="227" y="276" width="6" height="15" fill="rgb(209,43,33)"/><text x="230.00" y="286.50"></text></g><g><title>0x7f4f29899806 (?) (1 samples, 0.51%)</title><rect x="227" y="292" width="6" height="15" fill="rgb(237,220,9)"/><text x="230.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.51%)</title><rect x="227" y="308" width="6" height="15" fill="rgb(227,190,4)"/><text x="230.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.51%)</title><rect x="227" y="324" width="6" height="15" fill="rgb(210,168,9)"/><text x="230.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (3 samples, 1.54%)</title><rect x="233" y="212" width="19" height="15" fill="rgb(238,102,2)"/><text x="236.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.03%)</title><rect x="239" y="228" width="13" height="15" fill="rgb(226,16,39)"/><text x="242.00" y="238.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="246" y="244" width="6" height="15" fill="rgb(246,225,54)"/><text x="249.00" y="254.50"></text></g><g><title>0x7f4f58e6a7a0 (libstdc++.so.6.0.28) (1 samples, 0.51%)</title><rect x="246" y="260" width="6" height="15" fill="rgb(212,117,52)"/><text x="249.00" y="270.50"></text></g><g><title>OrtValue::Get&lt;onnxruntime::Tensor&gt; [clone .localalias.13] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="258" y="260" width="6" height="15" fill="rgb(209,93,0)"/><text x="261.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="264" y="260" width="6" height="15" fill="rgb(224,209,23)"/><text x="267.00" y="270.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="264" y="276" width="6" height="15" fill="rgb(206,65,39)"/><text x="267.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.51%)</title><rect x="264" y="292" width="6" height="15" fill="rgb(236,93,46)"/><text x="267.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="276" y="292" width="6" height="15" fill="rgb(216,90,47)"/><text x="279.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="276" y="308" width="6" height="15" fill="rgb(221,87,15)"/><text x="279.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="282" y="292" width="6" height="15" fill="rgb(251,97,37)"/><text x="285.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="288" y="292" width="6" height="15" fill="rgb(225,152,43)"/><text x="291.00" y="302.50"></text></g><g><title>OrtValue::Get&lt;onnxruntime::Tensor&gt; [clone .localalias.13] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="288" y="308" width="6" height="15" fill="rgb(205,84,40)"/><text x="291.00" y="318.50"></text></g><g><title>0x7f4f29422930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="294" y="324" width="6" height="15" fill="rgb(240,136,26)"/><text x="297.00" y="334.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.03%)</title><rect x="294" y="292" width="12" height="15" fill="rgb(223,18,16)"/><text x="297.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.03%)</title><rect x="294" y="308" width="12" height="15" fill="rgb(224,210,6)"/><text x="297.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="300" y="324" width="6" height="15" fill="rgb(216,76,14)"/><text x="303.00" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="300" y="340" width="6" height="15" fill="rgb(243,206,17)"/><text x="303.00" y="350.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="300" y="356" width="6" height="15" fill="rgb(218,110,22)"/><text x="303.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.59%)</title><rect x="276" y="276" width="42" height="15" fill="rgb(218,197,18)"/><text x="279.00" y="286.50">onn..</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (2 samples, 1.03%)</title><rect x="306" y="292" width="12" height="15" fill="rgb(222,113,12)"/><text x="309.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 4.62%)</title><rect x="270" y="260" width="54" height="15" fill="rgb(244,77,12)"/><text x="273.00" y="270.50">onnxr..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.51%)</title><rect x="318" y="276" width="6" height="15" fill="rgb(240,110,34)"/><text x="321.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.51%)</title><rect x="318" y="292" width="6" height="15" fill="rgb(212,49,12)"/><text x="321.00" y="302.50"></text></g><g><title>0x7f4f693be120 (libc-2.29.so) (1 samples, 0.51%)</title><rect x="330" y="292" width="6" height="15" fill="rgb(250,76,6)"/><text x="333.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.54%)</title><rect x="324" y="260" width="18" height="15" fill="rgb(207,207,9)"/><text x="327.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.03%)</title><rect x="330" y="276" width="12" height="15" fill="rgb(205,171,47)"/><text x="333.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="336" y="292" width="6" height="15" fill="rgb(223,99,14)"/><text x="339.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="336" y="308" width="6" height="15" fill="rgb(206,184,36)"/><text x="339.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="342" y="260" width="6" height="15" fill="rgb(205,179,36)"/><text x="345.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.51%)</title><rect x="342" y="276" width="6" height="15" fill="rgb(214,20,8)"/><text x="345.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.51%)</title><rect x="342" y="292" width="6" height="15" fill="rgb(234,52,27)"/><text x="345.00" y="302.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (35 samples, 17.95%)</title><rect x="143" y="132" width="211" height="15" fill="rgb(206,198,26)"/><text x="146.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (34 samples, 17.44%)</title><rect x="149" y="148" width="205" height="15" fill="rgb(245,156,45)"/><text x="152.00" y="158.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (29 samples, 14.87%)</title><rect x="179" y="164" width="175" height="15" fill="rgb(217,28,42)"/><text x="182.00" y="174.50">_run_whole_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (24 samples, 12.31%)</title><rect x="209" y="180" width="145" height="15" fill="rgb(246,105,3)"/><text x="212.00" y="190.50">run (mlprodict/onn..</text></g><g><title>run (onnxruntime/capi/session.py) (24 samples, 12.31%)</title><rect x="209" y="196" width="145" height="15" fill="rgb(235,173,37)"/><text x="212.00" y="206.50">run (onnxruntime/c..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 8.72%)</title><rect x="252" y="212" width="102" height="15" fill="rgb(249,221,23)"/><text x="255.00" y="222.50">pybind11::cp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 8.72%)</title><rect x="252" y="228" width="102" height="15" fill="rgb(244,90,3)"/><text x="255.00" y="238.50">void pybind1..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 8.21%)</title><rect x="258" y="244" width="96" height="15" fill="rgb(244,222,11)"/><text x="261.00" y="254.50">onnxruntime..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.51%)</title><rect x="348" y="260" width="6" height="15" fill="rgb(237,3,22)"/><text x="351.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.51%)</title><rect x="354" y="132" width="6" height="15" fill="rgb(254,211,47)"/><text x="357.00" y="142.50"></text></g><g><title>0x7f4f6947b151 (libc-2.29.so) (1 samples, 0.51%)</title><rect x="354" y="148" width="6" height="15" fill="rgb(210,39,43)"/><text x="357.00" y="158.50"></text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py) (42 samples, 21.54%)</title><rect x="118" y="100" width="255" height="15" fill="rgb(240,178,35)"/><text x="121.00" y="110.50">profile (bench_DecisionTreeRegress..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (39 samples, 20.00%)</title><rect x="137" y="116" width="236" height="15" fill="rgb(210,184,8)"/><text x="140.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>unicode_hash (python3.7) (2 samples, 1.03%)</title><rect x="360" y="132" width="13" height="15" fill="rgb(254,13,32)"/><text x="363.00" y="142.50"></text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py) (43 samples, 22.05%)</title><rect x="118" y="68" width="261" height="15" fill="rgb(227,170,38)"/><text x="121.00" y="78.50">profile_ort (bench_DecisionTreeReg..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py) (43 samples, 22.05%)</title><rect x="118" y="84" width="261" height="15" fill="rgb(227,165,20)"/><text x="121.00" y="94.50">setup_profile (bench_DecisionTreeR..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.51%)</title><rect x="373" y="100" width="6" height="15" fill="rgb(252,170,35)"/><text x="376.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.51%)</title><rect x="373" y="116" width="6" height="15" fill="rgb(213,161,8)"/><text x="376.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.51%)</title><rect x="373" y="132" width="6" height="15" fill="rgb(218,100,43)"/><text x="376.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.51%)</title><rect x="373" y="148" width="6" height="15" fill="rgb(242,161,32)"/><text x="376.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.51%)</title><rect x="373" y="164" width="6" height="15" fill="rgb(236,226,7)"/><text x="376.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="373" y="180" width="6" height="15" fill="rgb(206,98,3)"/><text x="376.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="373" y="196" width="6" height="15" fill="rgb(232,212,28)"/><text x="376.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="373" y="212" width="6" height="15" fill="rgb(223,53,39)"/><text x="376.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="373" y="228" width="6" height="15" fill="rgb(242,217,47)"/><text x="376.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="373" y="244" width="6" height="15" fill="rgb(228,121,51)"/><text x="376.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.51%)</title><rect x="373" y="260" width="6" height="15" fill="rgb(253,61,14)"/><text x="376.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="373" y="276" width="6" height="15" fill="rgb(214,62,7)"/><text x="376.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="373" y="292" width="6" height="15" fill="rgb(232,85,6)"/><text x="376.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="373" y="308" width="6" height="15" fill="rgb(252,180,10)"/><text x="376.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="373" y="324" width="6" height="15" fill="rgb(212,96,39)"/><text x="376.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="373" y="340" width="6" height="15" fill="rgb(228,20,40)"/><text x="376.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.51%)</title><rect x="373" y="356" width="6" height="15" fill="rgb(248,208,33)"/><text x="376.00" y="366.50"></text></g><g><title>check_distro_info (onnxruntime/capi/onnxruntime_validation.py) (1 samples, 0.51%)</title><rect x="373" y="372" width="6" height="15" fill="rgb(254,209,51)"/><text x="376.00" y="382.50"></text></g><g><title>architecture (platform.py) (1 samples, 0.51%)</title><rect x="373" y="388" width="6" height="15" fill="rgb(249,44,22)"/><text x="376.00" y="398.50"></text></g><g><title>_syscmd_file (platform.py) (1 samples, 0.51%)</title><rect x="373" y="404" width="6" height="15" fill="rgb(251,69,5)"/><text x="376.00" y="414.50"></text></g><g><title>__init__ (subprocess.py) (1 samples, 0.51%)</title><rect x="373" y="420" width="6" height="15" fill="rgb(231,113,33)"/><text x="376.00" y="430.50"></text></g><g><title>_execute_child (subprocess.py) (1 samples, 0.51%)</title><rect x="373" y="436" width="6" height="15" fill="rgb(225,211,53)"/><text x="376.00" y="446.50"></text></g><g><title>subprocess_fork_exec (_posixsubprocess.c) (1 samples, 0.51%)</title><rect x="373" y="452" width="6" height="15" fill="rgb(233,185,6)"/><text x="376.00" y="462.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.51%)</title><rect x="373" y="468" width="6" height="15" fill="rgb(232,57,4)"/><text x="376.00" y="478.50"></text></g><g><title>0x7f4f29e7654f (?) (1 samples, 0.51%)</title><rect x="379" y="244" width="6" height="15" fill="rgb(244,67,27)"/><text x="382.00" y="254.50"></text></g><g><title>0x7f4f29e7c65e (?) (1 samples, 0.51%)</title><rect x="379" y="260" width="6" height="15" fill="rgb(243,195,33)"/><text x="382.00" y="270.50"></text></g><g><title>0x7f4f29e7c50f (?) (1 samples, 0.51%)</title><rect x="379" y="276" width="6" height="15" fill="rgb(219,116,33)"/><text x="382.00" y="286.50"></text></g><g><title>0x7f4f29e82d6c (?) (1 samples, 0.51%)</title><rect x="379" y="292" width="6" height="15" fill="rgb(218,204,3)"/><text x="382.00" y="302.50"></text></g><g><title>0x7f4f333a3ab9 (?) (1 samples, 0.51%)</title><rect x="379" y="308" width="6" height="15" fill="rgb(222,43,43)"/><text x="382.00" y="318.50"></text></g><g><title>0x7f4f333a4ea9 (?) (1 samples, 0.51%)</title><rect x="379" y="324" width="6" height="15" fill="rgb(250,171,46)"/><text x="382.00" y="334.50"></text></g><g><title>0x7f4f333a4ea0 (libgomp.so.1.0.0) (3 samples, 1.54%)</title><rect x="385" y="484" width="18" height="15" fill="rgb(230,47,18)"/><text x="388.00" y="494.50"></text></g><g><title>0x7f4f333a4ea9 (libgomp.so.1.0.0) (6 samples, 3.08%)</title><rect x="403" y="484" width="36" height="15" fill="rgb(211,193,15)"/><text x="406.00" y="494.50">0x7..</text></g><g><title>0x7f4f333a4eab (libgomp.so.1.0.0) (9 samples, 4.62%)</title><rect x="439" y="484" width="55" height="15" fill="rgb(232,7,41)"/><text x="442.00" y="494.50">0x7f4..</text></g><g><title>0x7f4f333a3ab9 (libgomp.so.1.0.0) (23 samples, 11.79%)</title><rect x="385" y="468" width="139" height="15" fill="rgb(240,119,11)"/><text x="388.00" y="478.50">0x7f4f333a3ab9 (l..</text></g><g><title>0x7f4f333a4ead (libgomp.so.1.0.0) (5 samples, 2.56%)</title><rect x="494" y="484" width="30" height="15" fill="rgb(212,94,8)"/><text x="497.00" y="494.50">0x..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py) (25 samples, 12.82%)</title><rect x="379" y="100" width="151" height="15" fill="rgb(232,147,44)"/><text x="382.00" y="110.50">profile (bench_Deci..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (25 samples, 12.82%)</title><rect x="379" y="116" width="151" height="15" fill="rgb(229,175,30)"/><text x="382.00" y="126.50">time_predict (mlpro..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (25 samples, 12.82%)</title><rect x="379" y="132" width="151" height="15" fill="rgb(242,228,4)"/><text x="382.00" y="142.50">&lt;lambda&gt; (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (25 samples, 12.82%)</title><rect x="379" y="148" width="151" height="15" fill="rgb(206,185,21)"/><text x="382.00" y="158.50">run (mlprodict/onnx..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (25 samples, 12.82%)</title><rect x="379" y="164" width="151" height="15" fill="rgb(254,8,19)"/><text x="382.00" y="174.50">_run_sequence_runti..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (25 samples, 12.82%)</title><rect x="379" y="180" width="151" height="15" fill="rgb(239,175,31)"/><text x="382.00" y="190.50">run (mlprodict/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (25 samples, 12.82%)</title><rect x="379" y="196" width="151" height="15" fill="rgb(254,94,8)"/><text x="382.00" y="206.50">run (mlprodict/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (25 samples, 12.82%)</title><rect x="379" y="212" width="151" height="15" fill="rgb(232,95,49)"/><text x="382.00" y="222.50">run (mlprodict/onnx..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (25 samples, 12.82%)</title><rect x="379" y="228" width="151" height="15" fill="rgb(218,128,42)"/><text x="382.00" y="238.50">_run (mlprodict/onn..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (24 samples, 12.31%)</title><rect x="385" y="244" width="145" height="15" fill="rgb(229,37,48)"/><text x="388.00" y="254.50">pybind11::cpp_func..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (24 samples, 12.31%)</title><rect x="385" y="260" width="145" height="15" fill="rgb(226,96,20)"/><text x="388.00" y="270.50">void pybind11::cpp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (24 samples, 12.31%)</title><rect x="385" y="276" width="145" height="15" fill="rgb(214,140,31)"/><text x="388.00" y="286.50">void pybind11::cpp..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (24 samples, 12.31%)</title><rect x="385" y="292" width="145" height="15" fill="rgb(249,163,1)"/><text x="388.00" y="302.50">pybind11::detail::..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (24 samples, 12.31%)</title><rect x="385" y="308" width="145" height="15" fill="rgb(238,145,39)"/><text x="388.00" y="318.50">pybind11::detail::..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (24 samples, 12.31%)</title><rect x="385" y="324" width="145" height="15" fill="rgb(246,158,42)"/><text x="388.00" y="334.50">pybind11::cpp_func..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (24 samples, 12.31%)</title><rect x="385" y="340" width="145" height="15" fill="rgb(234,135,28)"/><text x="388.00" y="350.50">pybind11::array_t&lt;..</text></g><g><title>pybind11::array::~array (numpy.h) (24 samples, 12.31%)</title><rect x="385" y="356" width="145" height="15" fill="rgb(219,222,5)"/><text x="388.00" y="366.50">pybind11::array::~..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (24 samples, 12.31%)</title><rect x="385" y="372" width="145" height="15" fill="rgb(220,200,6)"/><text x="388.00" y="382.50">pybind11::buffer::..</text></g><g><title>pybind11::object::~object (pytypes.h) (24 samples, 12.31%)</title><rect x="385" y="388" width="145" height="15" fill="rgb(230,148,4)"/><text x="388.00" y="398.50">pybind11::object::..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (24 samples, 12.31%)</title><rect x="385" y="404" width="145" height="15" fill="rgb(208,1,43)"/><text x="388.00" y="414.50">pybind11::handle::..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (24 samples, 12.31%)</title><rect x="385" y="420" width="145" height="15" fill="rgb(243,156,37)"/><text x="388.00" y="430.50">RuntimeTreeEnsembl..</text></g><g><title>pybind11::array::size (numpy.h) (24 samples, 12.31%)</title><rect x="385" y="436" width="145" height="15" fill="rgb(205,46,42)"/><text x="388.00" y="446.50">pybind11::array::s..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (24 samples, 12.31%)</title><rect x="385" y="452" width="145" height="15" fill="rgb(226,85,51)"/><text x="388.00" y="462.50">std::accumulate&lt;lo..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.51%)</title><rect x="524" y="468" width="6" height="15" fill="rgb(224,220,53)"/><text x="527.00" y="478.50"></text></g><g><title>0x7f4f333a2daa (libgomp.so.1.0.0) (1 samples, 0.51%)</title><rect x="524" y="484" width="6" height="15" fill="rgb(224,113,14)"/><text x="527.00" y="494.50"></text></g><g><title>0x7f4f333a4cf0 (libgomp.so.1.0.0) (1 samples, 0.51%)</title><rect x="524" y="500" width="6" height="15" fill="rgb(243,85,6)"/><text x="527.00" y="510.50"></text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py) (26 samples, 13.33%)</title><rect x="379" y="68" width="157" height="15" fill="rgb(213,171,30)"/><text x="382.00" y="78.50">profile_pyrt (bench_..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py) (26 samples, 13.33%)</title><rect x="379" y="84" width="157" height="15" fill="rgb(208,77,33)"/><text x="382.00" y="94.50">setup_profile (bench..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.51%)</title><rect x="530" y="100" width="6" height="15" fill="rgb(248,197,27)"/><text x="533.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.51%)</title><rect x="530" y="116" width="6" height="15" fill="rgb(251,98,53)"/><text x="533.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.51%)</title><rect x="530" y="132" width="6" height="15" fill="rgb(239,217,27)"/><text x="533.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.51%)</title><rect x="530" y="148" width="6" height="15" fill="rgb(210,14,43)"/><text x="533.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.51%)</title><rect x="530" y="164" width="6" height="15" fill="rgb(206,8,19)"/><text x="533.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.51%)</title><rect x="530" y="180" width="6" height="15" fill="rgb(224,194,43)"/><text x="533.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.51%)</title><rect x="530" y="196" width="6" height="15" fill="rgb(245,222,2)"/><text x="533.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="530" y="212" width="6" height="15" fill="rgb(249,94,11)"/><text x="533.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="530" y="228" width="6" height="15" fill="rgb(225,46,50)"/><text x="533.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="530" y="244" width="6" height="15" fill="rgb(248,134,18)"/><text x="533.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="530" y="260" width="6" height="15" fill="rgb(211,37,20)"/><text x="533.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="530" y="276" width="6" height="15" fill="rgb(220,171,18)"/><text x="533.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.51%)</title><rect x="530" y="292" width="6" height="15" fill="rgb(253,122,27)"/><text x="533.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="530" y="308" width="6" height="15" fill="rgb(215,135,15)"/><text x="533.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="530" y="324" width="6" height="15" fill="rgb(240,140,19)"/><text x="533.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="530" y="340" width="6" height="15" fill="rgb(224,46,22)"/><text x="533.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="530" y="356" width="6" height="15" fill="rgb(217,146,20)"/><text x="533.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="530" y="372" width="6" height="15" fill="rgb(221,127,54)"/><text x="533.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.51%)</title><rect x="530" y="388" width="6" height="15" fill="rgb(250,85,28)"/><text x="533.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.51%)</title><rect x="530" y="404" width="6" height="15" fill="rgb(218,157,0)"/><text x="533.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.51%)</title><rect x="530" y="420" width="6" height="15" fill="rgb(231,83,44)"/><text x="533.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.51%)</title><rect x="530" y="436" width="6" height="15" fill="rgb(217,117,2)"/><text x="533.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.51%)</title><rect x="530" y="452" width="6" height="15" fill="rgb(245,91,24)"/><text x="533.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.51%)</title><rect x="530" y="468" width="6" height="15" fill="rgb(232,57,45)"/><text x="533.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.51%)</title><rect x="530" y="484" width="6" height="15" fill="rgb(231,95,9)"/><text x="533.00" y="494.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.51%)</title><rect x="548" y="148" width="6" height="15" fill="rgb(233,177,39)"/><text x="551.00" y="158.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.51%)</title><rect x="548" y="164" width="6" height="15" fill="rgb(246,187,11)"/><text x="551.00" y="174.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.51%)</title><rect x="548" y="180" width="6" height="15" fill="rgb(234,81,26)"/><text x="551.00" y="190.50"></text></g><g><title>0x7f4f43a08f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.03%)</title><rect x="578" y="180" width="12" height="15" fill="rgb(244,135,17)"/><text x="581.00" y="190.50"></text></g><g><title>0x7f4f439f8d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.03%)</title><rect x="578" y="196" width="12" height="15" fill="rgb(240,180,27)"/><text x="581.00" y="206.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 1.03%)</title><rect x="578" y="212" width="12" height="15" fill="rgb(219,55,28)"/><text x="581.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 1.03%)</title><rect x="578" y="228" width="12" height="15" fill="rgb(209,222,11)"/><text x="581.00" y="238.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.51%)</title><rect x="584" y="244" width="6" height="15" fill="rgb(231,14,16)"/><text x="587.00" y="254.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.51%)</title><rect x="584" y="260" width="6" height="15" fill="rgb(207,145,30)"/><text x="587.00" y="270.50"></text></g><g><title>0x7f4f43a17259 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.51%)</title><rect x="590" y="212" width="6" height="15" fill="rgb(236,90,29)"/><text x="593.00" y="222.50"></text></g><g><title>0x7f4f439fb604 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.51%)</title><rect x="596" y="244" width="7" height="15" fill="rgb(214,11,33)"/><text x="599.00" y="254.50"></text></g><g><title>0x7f4f693be120 (libc-2.29.so) (1 samples, 0.51%)</title><rect x="596" y="260" width="7" height="15" fill="rgb(239,140,21)"/><text x="599.00" y="270.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.51%)</title><rect x="609" y="308" width="6" height="15" fill="rgb(216,124,29)"/><text x="612.00" y="318.50"></text></g><g><title>0x7f4f43a172df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 2.05%)</title><rect x="596" y="212" width="25" height="15" fill="rgb(229,164,9)"/><text x="599.00" y="222.50">0..</text></g><g><title>0x7f4f439fbd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 2.05%)</title><rect x="596" y="228" width="25" height="15" fill="rgb(207,198,13)"/><text x="599.00" y="238.50">0..</text></g><g><title>0x7f4f439fb666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.54%)</title><rect x="603" y="244" width="18" height="15" fill="rgb(214,228,29)"/><text x="606.00" y="254.50"></text></g><g><title>0x7f4f439f12fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.54%)</title><rect x="603" y="260" width="18" height="15" fill="rgb(205,164,17)"/><text x="606.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 1.54%)</title><rect x="603" y="276" width="18" height="15" fill="rgb(228,39,35)"/><text x="606.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 1.54%)</title><rect x="603" y="292" width="18" height="15" fill="rgb(215,83,38)"/><text x="606.00" y="302.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.51%)</title><rect x="615" y="308" width="6" height="15" fill="rgb(218,93,21)"/><text x="618.00" y="318.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.51%)</title><rect x="615" y="324" width="6" height="15" fill="rgb(237,180,15)"/><text x="618.00" y="334.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.51%)</title><rect x="615" y="340" width="6" height="15" fill="rgb(236,13,54)"/><text x="618.00" y="350.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.51%)</title><rect x="615" y="356" width="6" height="15" fill="rgb(226,78,18)"/><text x="618.00" y="366.50"></text></g><g><title>0x7f4f43a17456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.03%)</title><rect x="621" y="212" width="12" height="15" fill="rgb(207,81,23)"/><text x="624.00" y="222.50"></text></g><g><title>0x7f4f43a174a4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.51%)</title><rect x="633" y="212" width="6" height="15" fill="rgb(238,32,23)"/><text x="636.00" y="222.50"></text></g><g><title>0x7f4f43a174b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.51%)</title><rect x="639" y="212" width="6" height="15" fill="rgb(232,69,23)"/><text x="642.00" y="222.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.51%)</title><rect x="651" y="244" width="6" height="15" fill="rgb(212,38,11)"/><text x="654.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.51%)</title><rect x="651" y="260" width="6" height="15" fill="rgb(217,175,7)"/><text x="654.00" y="270.50"></text></g><g><title>0x7f4f43a17592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 2.05%)</title><rect x="645" y="212" width="24" height="15" fill="rgb(235,207,47)"/><text x="648.00" y="222.50">0..</text></g><g><title>array_zeros (multiarraymodule.c) (4 samples, 2.05%)</title><rect x="645" y="228" width="24" height="15" fill="rgb(227,123,21)"/><text x="648.00" y="238.50">a..</text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 1.03%)</title><rect x="657" y="244" width="12" height="15" fill="rgb(229,114,49)"/><text x="660.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c) (2 samples, 1.03%)</title><rect x="657" y="260" width="12" height="15" fill="rgb(232,101,18)"/><text x="660.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 1.03%)</title><rect x="657" y="276" width="12" height="15" fill="rgb(225,47,31)"/><text x="660.00" y="286.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src) (1 samples, 0.51%)</title><rect x="663" y="292" width="6" height="15" fill="rgb(242,50,29)"/><text x="666.00" y="302.50"></text></g><g><title>0x7f4f43a178eb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.51%)</title><rect x="669" y="212" width="6" height="15" fill="rgb(224,79,22)"/><text x="672.00" y="222.50"></text></g><g><title>0x7f4f43a18405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (16 samples, 8.21%)</title><rect x="590" y="196" width="97" height="15" fill="rgb(253,213,22)"/><text x="593.00" y="206.50">0x7f4f43a18..</text></g><g><title>0x7f4f43a17c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.03%)</title><rect x="675" y="212" width="12" height="15" fill="rgb(209,15,45)"/><text x="678.00" y="222.50"></text></g><g><title>0x7f4f439ef529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.03%)</title><rect x="675" y="228" width="12" height="15" fill="rgb(235,105,7)"/><text x="678.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 1.03%)</title><rect x="675" y="244" width="12" height="15" fill="rgb(214,172,45)"/><text x="678.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 1.03%)</title><rect x="675" y="260" width="12" height="15" fill="rgb(254,30,39)"/><text x="678.00" y="270.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.51%)</title><rect x="681" y="276" width="6" height="15" fill="rgb(248,213,3)"/><text x="684.00" y="286.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.51%)</title><rect x="681" y="292" width="6" height="15" fill="rgb(223,66,30)"/><text x="684.00" y="302.50"></text></g><g><title>0x7f4f43a08fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (17 samples, 8.72%)</title><rect x="590" y="180" width="103" height="15" fill="rgb(243,88,39)"/><text x="593.00" y="190.50">0x7f4f43a08f..</text></g><g><title>0x7f4f43a18540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.51%)</title><rect x="687" y="196" width="6" height="15" fill="rgb(252,83,12)"/><text x="690.00" y="206.50"></text></g><g><title>0x7f4f439ed2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.51%)</title><rect x="687" y="212" width="6" height="15" fill="rgb(230,219,9)"/><text x="690.00" y="222.50"></text></g><g><title>0x7f4f439ec4f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.51%)</title><rect x="687" y="228" width="6" height="15" fill="rgb(252,50,19)"/><text x="690.00" y="238.50"></text></g><g><title>0x7f4f43a0905a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 2.05%)</title><rect x="693" y="180" width="25" height="15" fill="rgb(247,178,44)"/><text x="696.00" y="190.50">0..</text></g><g><title>array_take (methods.c) (4 samples, 2.05%)</title><rect x="693" y="196" width="25" height="15" fill="rgb(245,154,19)"/><text x="696.00" y="206.50">a..</text></g><g><title>PyArray_TakeFrom (item_selection.c) (2 samples, 1.03%)</title><rect x="705" y="212" width="13" height="15" fill="rgb(209,23,2)"/><text x="708.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (1 samples, 0.51%)</title><rect x="711" y="228" width="7" height="15" fill="rgb(216,86,8)"/><text x="714.00" y="238.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.51%)</title><rect x="711" y="244" width="7" height="15" fill="rgb(248,225,34)"/><text x="714.00" y="254.50"></text></g><g><title>0x7f4f685c09c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.51%)</title><rect x="718" y="196" width="6" height="15" fill="rgb(214,94,9)"/><text x="721.00" y="206.50"></text></g><g><title>0x7f4f43a0913a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.03%)</title><rect x="718" y="180" width="12" height="15" fill="rgb(237,181,12)"/><text x="721.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.51%)</title><rect x="724" y="196" width="6" height="15" fill="rgb(227,46,38)"/><text x="727.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.51%)</title><rect x="724" y="212" width="6" height="15" fill="rgb(237,114,31)"/><text x="727.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.51%)</title><rect x="724" y="228" width="6" height="15" fill="rgb(246,184,45)"/><text x="727.00" y="238.50"></text></g><g><title>0x7f4f43a09d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (27 samples, 13.85%)</title><rect x="578" y="164" width="164" height="15" fill="rgb(251,13,40)"/><text x="581.00" y="174.50">0x7f4f43a09d2e (sklea..</text></g><g><title>0x7f4f43a09328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.03%)</title><rect x="730" y="180" width="12" height="15" fill="rgb(238,57,24)"/><text x="733.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 1.03%)</title><rect x="730" y="196" width="12" height="15" fill="rgb(213,42,22)"/><text x="733.00" y="206.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 1.03%)</title><rect x="730" y="212" width="12" height="15" fill="rgb(242,52,5)"/><text x="733.00" y="222.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 1.03%)</title><rect x="730" y="228" width="12" height="15" fill="rgb(230,29,24)"/><text x="733.00" y="238.50"></text></g><g><title>0x7f4f693be124 (libc-2.29.so) (1 samples, 0.51%)</title><rect x="826" y="196" width="6" height="15" fill="rgb(244,218,45)"/><text x="829.00" y="206.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 1.03%)</title><rect x="832" y="196" width="13" height="15" fill="rgb(222,102,21)"/><text x="835.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 1.03%)</title><rect x="845" y="196" width="12" height="15" fill="rgb(224,114,7)"/><text x="848.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 1.03%)</title><rect x="857" y="196" width="12" height="15" fill="rgb(248,74,34)"/><text x="860.00" y="206.50"></text></g><g><title>0x7f4f6947c0e6 (libc-2.29.so) (1 samples, 0.51%)</title><rect x="887" y="212" width="6" height="15" fill="rgb(231,40,24)"/><text x="890.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="893" y="212" width="24" height="15" fill="rgb(247,88,6)"/><text x="896.00" y="222.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="917" y="212" width="12" height="15" fill="rgb(246,192,26)"/><text x="920.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (11 samples, 5.64%)</title><rect x="869" y="196" width="66" height="15" fill="rgb(244,152,35)"/><text x="872.00" y="206.50">_assert..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.51%)</title><rect x="929" y="212" width="6" height="15" fill="rgb(244,161,48)"/><text x="932.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.51%)</title><rect x="935" y="196" width="6" height="15" fill="rgb(207,130,22)"/><text x="938.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.51%)</title><rect x="978" y="212" width="6" height="15" fill="rgb(208,0,6)"/><text x="981.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (9 samples, 4.62%)</title><rect x="941" y="196" width="55" height="15" fill="rgb(250,163,43)"/><text x="944.00" y="206.50">_num_..</text></g><g><title>__instancecheck__ (abc.py) (2 samples, 1.03%)</title><rect x="984" y="212" width="12" height="15" fill="rgb(232,34,41)"/><text x="987.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.51%)</title><rect x="990" y="228" width="6" height="15" fill="rgb(227,127,52)"/><text x="993.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.51%)</title><rect x="996" y="196" width="6" height="15" fill="rgb(235,58,3)"/><text x="999.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.51%)</title><rect x="996" y="212" width="6" height="15" fill="rgb(243,185,24)"/><text x="999.00" y="222.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (3 samples, 1.54%)</title><rect x="1002" y="196" width="18" height="15" fill="rgb(226,198,27)"/><text x="1005.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 1.03%)</title><rect x="1008" y="212" width="12" height="15" fill="rgb(246,16,3)"/><text x="1011.00" y="222.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.51%)</title><rect x="1014" y="228" width="6" height="15" fill="rgb(251,24,26)"/><text x="1017.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.51%)</title><rect x="1014" y="244" width="6" height="15" fill="rgb(247,92,14)"/><text x="1017.00" y="254.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.51%)</title><rect x="1014" y="260" width="6" height="15" fill="rgb(245,149,32)"/><text x="1017.00" y="270.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.51%)</title><rect x="1014" y="276" width="6" height="15" fill="rgb(222,36,41)"/><text x="1017.00" y="286.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.51%)</title><rect x="1014" y="292" width="6" height="15" fill="rgb(211,209,54)"/><text x="1017.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (55 samples, 28.21%)</title><rect x="742" y="164" width="333" height="15" fill="rgb(248,78,14)"/><text x="745.00" y="174.50">_validate_X_predict (sklearn/tree/_classes.py)</text></g><g><title>check_array (sklearn/utils/validation.py) (54 samples, 27.69%)</title><rect x="748" y="180" width="327" height="15" fill="rgb(205,82,33)"/><text x="751.00" y="190.50">check_array (sklearn/utils/validation.py)</text></g><g><title>simplefilter (warnings.py) (9 samples, 4.62%)</title><rect x="1020" y="196" width="55" height="15" fill="rgb(233,217,11)"/><text x="1023.00" y="206.50">simpl..</text></g><g><title>_add_filter (warnings.py) (7 samples, 3.59%)</title><rect x="1032" y="212" width="43" height="15" fill="rgb(252,5,52)"/><text x="1035.00" y="222.50">_add..</text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.51%)</title><rect x="1075" y="180" width="6" height="15" fill="rgb(246,81,33)"/><text x="1078.00" y="190.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 1.03%)</title><rect x="1075" y="164" width="12" height="15" fill="rgb(216,105,7)"/><text x="1078.00" y="174.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.51%)</title><rect x="1081" y="180" width="6" height="15" fill="rgb(236,48,51)"/><text x="1084.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 1.03%)</title><rect x="1159" y="196" width="12" height="15" fill="rgb(233,146,46)"/><text x="1162.00" y="206.50"></text></g><g><title>all (195 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(221,109,3)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py) (195 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(254,189,45)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py) (108 samples, 55.38%)</title><rect x="536" y="68" width="654" height="15" fill="rgb(216,153,19)"/><text x="539.00" y="78.50">profile_skl (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py) (108 samples, 55.38%)</title><rect x="536" y="84" width="654" height="15" fill="rgb(217,43,45)"/><text x="539.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py) (108 samples, 55.38%)</title><rect x="536" y="100" width="654" height="15" fill="rgb(249,35,23)"/><text x="539.00" y="110.50">profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (107 samples, 54.87%)</title><rect x="542" y="116" width="648" height="15" fill="rgb(214,190,19)"/><text x="545.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (106 samples, 54.36%)</title><rect x="548" y="132" width="642" height="15" fill="rgb(244,28,50)"/><text x="551.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/tree/_classes.py) (105 samples, 53.85%)</title><rect x="554" y="148" width="636" height="15" fill="rgb(246,130,32)"/><text x="557.00" y="158.50">predict (sklearn/tree/_classes.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (17 samples, 8.72%)</title><rect x="1087" y="164" width="103" height="15" fill="rgb(217,12,7)"/><text x="1090.00" y="174.50">check_is_fit..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (12 samples, 6.15%)</title><rect x="1117" y="180" width="73" height="15" fill="rgb(242,79,28)"/><text x="1120.00" y="190.50">&lt;listcom..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 1.54%)</title><rect x="1171" y="196" width="19" height="15" fill="rgb(224,191,15)"/><text x="1174.00" y="206.50"></text></g></g></svg>