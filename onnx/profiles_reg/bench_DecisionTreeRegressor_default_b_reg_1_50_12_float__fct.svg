<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2214" onload="init(evt)" viewBox="0 0 1200 2214" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2214" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2197.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2197.00"> </text><g id="frames"><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="10" y="964" width="5" height="15" fill="rgb(254,89,46)"/><text x="13.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.44%)</title><rect x="10" y="980" width="5" height="15" fill="rgb(243,11,45)"/><text x="13.00" y="990.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.87%)</title><rect x="10" y="932" width="10" height="15" fill="rgb(206,129,9)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.87%)</title><rect x="10" y="948" width="10" height="15" fill="rgb(216,173,3)"/><text x="13.00" y="958.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.44%)</title><rect x="15" y="964" width="5" height="15" fill="rgb(212,105,2)"/><text x="18.00" y="974.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.44%)</title><rect x="15" y="980" width="5" height="15" fill="rgb(227,225,2)"/><text x="18.00" y="990.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.44%)</title><rect x="15" y="996" width="5" height="15" fill="rgb(225,114,2)"/><text x="18.00" y="1006.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 1.31%)</title><rect x="10" y="868" width="15" height="15" fill="rgb(252,200,35)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 1.31%)</title><rect x="10" y="884" width="15" height="15" fill="rgb(208,129,18)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 1.31%)</title><rect x="10" y="900" width="15" height="15" fill="rgb(223,18,20)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 1.31%)</title><rect x="10" y="916" width="15" height="15" fill="rgb(209,130,54)"/><text x="13.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="20" y="932" width="5" height="15" fill="rgb(214,222,11)"/><text x="23.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.44%)</title><rect x="20" y="948" width="5" height="15" fill="rgb(228,75,24)"/><text x="23.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="20" y="964" width="5" height="15" fill="rgb(234,3,13)"/><text x="23.00" y="974.50"></text></g><g><title>0x7fbaed196237 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="20" y="980" width="5" height="15" fill="rgb(227,42,34)"/><text x="23.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.75%)</title><rect x="10" y="292" width="20" height="15" fill="rgb(235,145,16)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="308" width="20" height="15" fill="rgb(227,37,25)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="324" width="20" height="15" fill="rgb(253,58,54)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="340" width="20" height="15" fill="rgb(239,111,27)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.75%)</title><rect x="10" y="356" width="20" height="15" fill="rgb(236,184,24)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="372" width="20" height="15" fill="rgb(219,225,42)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.75%)</title><rect x="10" y="388" width="20" height="15" fill="rgb(218,48,38)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="404" width="20" height="15" fill="rgb(236,90,21)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="420" width="20" height="15" fill="rgb(223,25,25)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="436" width="20" height="15" fill="rgb(221,4,14)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.75%)</title><rect x="10" y="452" width="20" height="15" fill="rgb(238,135,54)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="468" width="20" height="15" fill="rgb(212,105,10)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.75%)</title><rect x="10" y="484" width="20" height="15" fill="rgb(241,47,33)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="500" width="20" height="15" fill="rgb(206,76,34)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="516" width="20" height="15" fill="rgb(234,85,26)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="532" width="20" height="15" fill="rgb(254,70,8)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.75%)</title><rect x="10" y="548" width="20" height="15" fill="rgb(215,56,6)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="564" width="20" height="15" fill="rgb(238,219,45)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.75%)</title><rect x="10" y="580" width="20" height="15" fill="rgb(250,189,51)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="596" width="20" height="15" fill="rgb(252,11,26)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="612" width="20" height="15" fill="rgb(224,131,7)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="628" width="20" height="15" fill="rgb(238,48,14)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="644" width="20" height="15" fill="rgb(226,218,42)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="660" width="20" height="15" fill="rgb(222,89,7)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="676" width="20" height="15" fill="rgb(206,86,41)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.75%)</title><rect x="10" y="692" width="20" height="15" fill="rgb(242,157,43)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="708" width="20" height="15" fill="rgb(235,181,7)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.75%)</title><rect x="10" y="724" width="20" height="15" fill="rgb(207,125,12)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="740" width="20" height="15" fill="rgb(209,81,46)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="756" width="20" height="15" fill="rgb(248,4,17)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="772" width="20" height="15" fill="rgb(207,21,36)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.75%)</title><rect x="10" y="788" width="20" height="15" fill="rgb(223,112,8)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="804" width="20" height="15" fill="rgb(233,189,33)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.75%)</title><rect x="10" y="820" width="20" height="15" fill="rgb(214,5,12)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.75%)</title><rect x="10" y="836" width="20" height="15" fill="rgb(225,85,21)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.75%)</title><rect x="10" y="852" width="20" height="15" fill="rgb(231,207,50)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="25" y="868" width="5" height="15" fill="rgb(235,133,23)"/><text x="28.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="25" y="884" width="5" height="15" fill="rgb(238,115,44)"/><text x="28.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="25" y="900" width="5" height="15" fill="rgb(238,155,9)"/><text x="28.00" y="910.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.44%)</title><rect x="25" y="916" width="5" height="15" fill="rgb(217,179,4)"/><text x="28.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.18%)</title><rect x="10" y="196" width="25" height="15" fill="rgb(231,70,31)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.18%)</title><rect x="10" y="212" width="25" height="15" fill="rgb(221,142,16)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.18%)</title><rect x="10" y="228" width="25" height="15" fill="rgb(213,79,1)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.18%)</title><rect x="10" y="244" width="25" height="15" fill="rgb(221,214,5)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.18%)</title><rect x="10" y="260" width="25" height="15" fill="rgb(228,14,52)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.18%)</title><rect x="10" y="276" width="25" height="15" fill="rgb(214,112,18)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.44%)</title><rect x="30" y="292" width="5" height="15" fill="rgb(234,46,17)"/><text x="33.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="308" width="5" height="15" fill="rgb(240,11,1)"/><text x="33.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="324" width="5" height="15" fill="rgb(250,125,34)"/><text x="33.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="340" width="5" height="15" fill="rgb(233,27,26)"/><text x="33.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="30" y="356" width="5" height="15" fill="rgb(245,157,43)"/><text x="33.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="372" width="5" height="15" fill="rgb(229,172,53)"/><text x="33.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.44%)</title><rect x="30" y="388" width="5" height="15" fill="rgb(225,167,38)"/><text x="33.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="404" width="5" height="15" fill="rgb(219,121,12)"/><text x="33.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="420" width="5" height="15" fill="rgb(214,2,41)"/><text x="33.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="436" width="5" height="15" fill="rgb(214,197,35)"/><text x="33.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="30" y="452" width="5" height="15" fill="rgb(216,177,18)"/><text x="33.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="468" width="5" height="15" fill="rgb(242,77,11)"/><text x="33.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.44%)</title><rect x="30" y="484" width="5" height="15" fill="rgb(235,119,3)"/><text x="33.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="500" width="5" height="15" fill="rgb(236,10,17)"/><text x="33.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="516" width="5" height="15" fill="rgb(225,167,10)"/><text x="33.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="532" width="5" height="15" fill="rgb(238,175,27)"/><text x="33.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="30" y="548" width="5" height="15" fill="rgb(247,133,3)"/><text x="33.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="564" width="5" height="15" fill="rgb(253,189,46)"/><text x="33.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.44%)</title><rect x="30" y="580" width="5" height="15" fill="rgb(226,120,52)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="596" width="5" height="15" fill="rgb(249,91,11)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="612" width="5" height="15" fill="rgb(210,191,46)"/><text x="33.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="628" width="5" height="15" fill="rgb(249,179,27)"/><text x="33.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="30" y="644" width="5" height="15" fill="rgb(208,190,13)"/><text x="33.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="660" width="5" height="15" fill="rgb(222,31,23)"/><text x="33.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.44%)</title><rect x="30" y="676" width="5" height="15" fill="rgb(246,96,44)"/><text x="33.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="692" width="5" height="15" fill="rgb(251,75,52)"/><text x="33.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="708" width="5" height="15" fill="rgb(234,200,49)"/><text x="33.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="724" width="5" height="15" fill="rgb(223,107,26)"/><text x="33.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="30" y="740" width="5" height="15" fill="rgb(220,192,33)"/><text x="33.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="756" width="5" height="15" fill="rgb(220,42,21)"/><text x="33.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.44%)</title><rect x="30" y="772" width="5" height="15" fill="rgb(208,58,50)"/><text x="33.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="788" width="5" height="15" fill="rgb(238,177,4)"/><text x="33.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="804" width="5" height="15" fill="rgb(239,185,30)"/><text x="33.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="820" width="5" height="15" fill="rgb(253,225,9)"/><text x="33.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="30" y="836" width="5" height="15" fill="rgb(227,110,26)"/><text x="33.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="852" width="5" height="15" fill="rgb(253,143,5)"/><text x="33.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.44%)</title><rect x="30" y="868" width="5" height="15" fill="rgb(231,229,49)"/><text x="33.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="484" width="5" height="15" fill="rgb(209,159,27)"/><text x="38.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="500" width="5" height="15" fill="rgb(213,227,16)"/><text x="38.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="516" width="5" height="15" fill="rgb(252,194,43)"/><text x="38.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="532" width="5" height="15" fill="rgb(249,188,54)"/><text x="38.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="35" y="548" width="5" height="15" fill="rgb(230,9,49)"/><text x="38.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="564" width="5" height="15" fill="rgb(215,170,23)"/><text x="38.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.44%)</title><rect x="35" y="580" width="5" height="15" fill="rgb(236,55,38)"/><text x="38.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="596" width="5" height="15" fill="rgb(212,156,8)"/><text x="38.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="612" width="5" height="15" fill="rgb(224,212,2)"/><text x="38.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="628" width="5" height="15" fill="rgb(207,1,33)"/><text x="38.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="35" y="644" width="5" height="15" fill="rgb(229,13,10)"/><text x="38.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="660" width="5" height="15" fill="rgb(253,146,15)"/><text x="38.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.44%)</title><rect x="35" y="676" width="5" height="15" fill="rgb(249,27,0)"/><text x="38.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="692" width="5" height="15" fill="rgb(209,140,40)"/><text x="38.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="708" width="5" height="15" fill="rgb(235,163,35)"/><text x="38.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="724" width="5" height="15" fill="rgb(247,186,33)"/><text x="38.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="35" y="740" width="5" height="15" fill="rgb(227,145,12)"/><text x="38.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="756" width="5" height="15" fill="rgb(219,9,45)"/><text x="38.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.44%)</title><rect x="35" y="772" width="5" height="15" fill="rgb(232,68,16)"/><text x="38.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="788" width="5" height="15" fill="rgb(210,105,49)"/><text x="38.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="804" width="5" height="15" fill="rgb(214,169,15)"/><text x="38.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="820" width="5" height="15" fill="rgb(238,224,20)"/><text x="38.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="35" y="836" width="5" height="15" fill="rgb(218,108,33)"/><text x="38.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="852" width="5" height="15" fill="rgb(252,122,46)"/><text x="38.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.44%)</title><rect x="35" y="868" width="5" height="15" fill="rgb(252,123,8)"/><text x="38.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="884" width="5" height="15" fill="rgb(240,52,27)"/><text x="38.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="900" width="5" height="15" fill="rgb(254,201,32)"/><text x="38.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="916" width="5" height="15" fill="rgb(244,224,18)"/><text x="38.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="932" width="5" height="15" fill="rgb(219,140,32)"/><text x="38.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="948" width="5" height="15" fill="rgb(215,19,2)"/><text x="38.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="964" width="5" height="15" fill="rgb(211,137,20)"/><text x="38.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="35" y="980" width="5" height="15" fill="rgb(247,229,5)"/><text x="38.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="996" width="5" height="15" fill="rgb(222,139,4)"/><text x="38.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.44%)</title><rect x="35" y="1012" width="5" height="15" fill="rgb(252,81,23)"/><text x="38.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="1028" width="5" height="15" fill="rgb(220,190,0)"/><text x="38.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="1044" width="5" height="15" fill="rgb(243,56,24)"/><text x="38.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="1060" width="5" height="15" fill="rgb(208,115,10)"/><text x="38.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="35" y="1076" width="5" height="15" fill="rgb(213,56,5)"/><text x="38.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="1092" width="5" height="15" fill="rgb(245,130,18)"/><text x="38.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.44%)</title><rect x="35" y="1108" width="5" height="15" fill="rgb(226,222,15)"/><text x="38.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="1124" width="5" height="15" fill="rgb(235,15,16)"/><text x="38.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="1140" width="5" height="15" fill="rgb(245,15,2)"/><text x="38.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="1156" width="5" height="15" fill="rgb(228,53,11)"/><text x="38.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="1172" width="5" height="15" fill="rgb(215,35,35)"/><text x="38.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="1188" width="5" height="15" fill="rgb(217,33,47)"/><text x="38.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="35" y="1204" width="5" height="15" fill="rgb(227,221,2)"/><text x="38.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="1220" width="5" height="15" fill="rgb(245,205,31)"/><text x="38.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.44%)</title><rect x="35" y="1236" width="5" height="15" fill="rgb(237,229,18)"/><text x="38.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="1252" width="5" height="15" fill="rgb(220,225,24)"/><text x="38.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="1268" width="5" height="15" fill="rgb(209,223,23)"/><text x="38.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="1284" width="5" height="15" fill="rgb(229,40,12)"/><text x="38.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="1300" width="5" height="15" fill="rgb(250,189,44)"/><text x="38.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="1316" width="5" height="15" fill="rgb(229,125,40)"/><text x="38.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="35" y="1332" width="5" height="15" fill="rgb(222,64,54)"/><text x="38.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="1348" width="5" height="15" fill="rgb(225,81,36)"/><text x="38.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.44%)</title><rect x="35" y="1364" width="5" height="15" fill="rgb(230,98,34)"/><text x="38.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="1380" width="5" height="15" fill="rgb(209,73,3)"/><text x="38.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="1396" width="5" height="15" fill="rgb(232,1,13)"/><text x="38.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="1412" width="5" height="15" fill="rgb(221,93,39)"/><text x="38.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="35" y="1428" width="5" height="15" fill="rgb(243,125,35)"/><text x="38.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="35" y="1444" width="5" height="15" fill="rgb(214,128,36)"/><text x="38.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.44%)</title><rect x="35" y="1460" width="5" height="15" fill="rgb(238,6,52)"/><text x="38.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.44%)</title><rect x="35" y="1476" width="5" height="15" fill="rgb(226,4,8)"/><text x="38.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.44%)</title><rect x="35" y="1492" width="5" height="15" fill="rgb(229,223,8)"/><text x="38.00" y="1502.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.44%)</title><rect x="35" y="1508" width="5" height="15" fill="rgb(247,157,37)"/><text x="38.00" y="1518.50"></text></g><g><title>0x7fbadd21707e (?) (1 samples, 0.44%)</title><rect x="35" y="1524" width="5" height="15" fill="rgb(245,81,2)"/><text x="38.00" y="1534.50"></text></g><g><title>0x7fbadd216e62 (?) (1 samples, 0.44%)</title><rect x="35" y="1540" width="5" height="15" fill="rgb(236,193,35)"/><text x="38.00" y="1550.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="40" y="1892" width="6" height="15" fill="rgb(209,49,38)"/><text x="43.00" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="40" y="1908" width="6" height="15" fill="rgb(233,55,19)"/><text x="43.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="40" y="1924" width="6" height="15" fill="rgb(209,42,32)"/><text x="43.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="40" y="1940" width="6" height="15" fill="rgb(243,121,12)"/><text x="43.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="40" y="1956" width="6" height="15" fill="rgb(222,225,33)"/><text x="43.00" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="40" y="1972" width="6" height="15" fill="rgb(246,182,20)"/><text x="43.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="40" y="1988" width="6" height="15" fill="rgb(253,36,46)"/><text x="43.00" y="1998.50"></text></g><g><title>&lt;module&gt; (matplotlib/lines.py) (1 samples, 0.44%)</title><rect x="40" y="2004" width="6" height="15" fill="rgb(249,158,14)"/><text x="43.00" y="2014.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.44%)</title><rect x="40" y="2020" width="6" height="15" fill="rgb(216,135,42)"/><text x="43.00" y="2030.50"></text></g><g><title>__init__ (matplotlib/artist.py) (1 samples, 0.44%)</title><rect x="40" y="2036" width="6" height="15" fill="rgb(240,19,52)"/><text x="43.00" y="2046.50"></text></g><g><title>get_aliases (matplotlib/artist.py) (1 samples, 0.44%)</title><rect x="40" y="2052" width="6" height="15" fill="rgb(243,221,41)"/><text x="43.00" y="2062.50"></text></g><g><title>search (re.py) (1 samples, 0.44%)</title><rect x="40" y="2068" width="6" height="15" fill="rgb(238,67,27)"/><text x="43.00" y="2078.50"></text></g><g><title>_compile (re.py) (1 samples, 0.44%)</title><rect x="40" y="2084" width="6" height="15" fill="rgb(209,144,20)"/><text x="43.00" y="2094.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.44%)</title><rect x="40" y="2100" width="6" height="15" fill="rgb(216,0,5)"/><text x="43.00" y="2110.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.44%)</title><rect x="40" y="2116" width="6" height="15" fill="rgb(233,110,12)"/><text x="43.00" y="2126.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.44%)</title><rect x="40" y="2132" width="6" height="15" fill="rgb(225,115,52)"/><text x="43.00" y="2142.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.44%)</title><rect x="40" y="2148" width="6" height="15" fill="rgb(229,27,11)"/><text x="43.00" y="2158.50"></text></g><g><title>__getitem__ (sre_parse.py) (1 samples, 0.44%)</title><rect x="40" y="2164" width="6" height="15" fill="rgb(219,211,12)"/><text x="43.00" y="2174.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py) (2 samples, 0.87%)</title><rect x="40" y="1876" width="11" height="15" fill="rgb(217,83,6)"/><text x="43.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.44%)</title><rect x="46" y="1892" width="5" height="15" fill="rgb(239,153,1)"/><text x="49.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.44%)</title><rect x="46" y="1908" width="5" height="15" fill="rgb(237,132,8)"/><text x="49.00" y="1918.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py) (1 samples, 0.44%)</title><rect x="46" y="1924" width="5" height="15" fill="rgb(233,21,6)"/><text x="49.00" y="1934.50"></text></g><g><title>getfullargspec (inspect.py) (1 samples, 0.44%)</title><rect x="46" y="1940" width="5" height="15" fill="rgb(230,115,13)"/><text x="49.00" y="1950.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.75%)</title><rect x="35" y="340" width="21" height="15" fill="rgb(254,7,24)"/><text x="38.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="35" y="356" width="21" height="15" fill="rgb(206,44,52)"/><text x="38.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="35" y="372" width="21" height="15" fill="rgb(206,211,47)"/><text x="38.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="35" y="388" width="21" height="15" fill="rgb(250,115,51)"/><text x="38.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.75%)</title><rect x="35" y="404" width="21" height="15" fill="rgb(242,147,4)"/><text x="38.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="35" y="420" width="21" height="15" fill="rgb(233,97,20)"/><text x="38.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (4 samples, 1.75%)</title><rect x="35" y="436" width="21" height="15" fill="rgb(210,111,16)"/><text x="38.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="35" y="452" width="21" height="15" fill="rgb(213,77,2)"/><text x="38.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="35" y="468" width="21" height="15" fill="rgb(241,40,50)"/><text x="38.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="484" width="16" height="15" fill="rgb(212,184,5)"/><text x="43.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.31%)</title><rect x="40" y="500" width="16" height="15" fill="rgb(231,183,44)"/><text x="43.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="516" width="16" height="15" fill="rgb(209,130,50)"/><text x="43.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.31%)</title><rect x="40" y="532" width="16" height="15" fill="rgb(223,65,7)"/><text x="43.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="548" width="16" height="15" fill="rgb(238,154,31)"/><text x="43.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="564" width="16" height="15" fill="rgb(247,101,10)"/><text x="43.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="580" width="16" height="15" fill="rgb(230,111,51)"/><text x="43.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.31%)</title><rect x="40" y="596" width="16" height="15" fill="rgb(219,82,2)"/><text x="43.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="612" width="16" height="15" fill="rgb(247,20,45)"/><text x="43.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 1.31%)</title><rect x="40" y="628" width="16" height="15" fill="rgb(227,35,36)"/><text x="43.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="644" width="16" height="15" fill="rgb(242,16,2)"/><text x="43.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="660" width="16" height="15" fill="rgb(208,24,8)"/><text x="43.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="676" width="16" height="15" fill="rgb(254,90,22)"/><text x="43.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.31%)</title><rect x="40" y="692" width="16" height="15" fill="rgb(247,30,22)"/><text x="43.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="708" width="16" height="15" fill="rgb(247,56,51)"/><text x="43.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 1.31%)</title><rect x="40" y="724" width="16" height="15" fill="rgb(222,45,21)"/><text x="43.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="740" width="16" height="15" fill="rgb(241,115,28)"/><text x="43.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="756" width="16" height="15" fill="rgb(225,31,26)"/><text x="43.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="772" width="16" height="15" fill="rgb(252,111,12)"/><text x="43.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.31%)</title><rect x="40" y="788" width="16" height="15" fill="rgb(240,180,28)"/><text x="43.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="804" width="16" height="15" fill="rgb(241,124,32)"/><text x="43.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 1.31%)</title><rect x="40" y="820" width="16" height="15" fill="rgb(244,23,38)"/><text x="43.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="836" width="16" height="15" fill="rgb(228,121,24)"/><text x="43.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="852" width="16" height="15" fill="rgb(240,120,15)"/><text x="43.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="868" width="16" height="15" fill="rgb(217,12,43)"/><text x="43.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.31%)</title><rect x="40" y="884" width="16" height="15" fill="rgb(209,181,45)"/><text x="43.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="900" width="16" height="15" fill="rgb(246,0,10)"/><text x="43.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 1.31%)</title><rect x="40" y="916" width="16" height="15" fill="rgb(233,169,11)"/><text x="43.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="932" width="16" height="15" fill="rgb(233,152,16)"/><text x="43.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="948" width="16" height="15" fill="rgb(253,98,28)"/><text x="43.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="964" width="16" height="15" fill="rgb(253,185,38)"/><text x="43.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.31%)</title><rect x="40" y="980" width="16" height="15" fill="rgb(212,129,12)"/><text x="43.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="996" width="16" height="15" fill="rgb(221,49,7)"/><text x="43.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 1.31%)</title><rect x="40" y="1012" width="16" height="15" fill="rgb(237,71,54)"/><text x="43.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1028" width="16" height="15" fill="rgb(237,84,26)"/><text x="43.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1044" width="16" height="15" fill="rgb(234,138,6)"/><text x="43.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1060" width="16" height="15" fill="rgb(252,189,26)"/><text x="43.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.31%)</title><rect x="40" y="1076" width="16" height="15" fill="rgb(221,27,50)"/><text x="43.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1092" width="16" height="15" fill="rgb(245,208,12)"/><text x="43.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (3 samples, 1.31%)</title><rect x="40" y="1108" width="16" height="15" fill="rgb(231,131,28)"/><text x="43.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1124" width="16" height="15" fill="rgb(237,50,14)"/><text x="43.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1140" width="16" height="15" fill="rgb(244,96,8)"/><text x="43.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1156" width="16" height="15" fill="rgb(235,0,24)"/><text x="43.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.31%)</title><rect x="40" y="1172" width="16" height="15" fill="rgb(245,73,5)"/><text x="43.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1188" width="16" height="15" fill="rgb(227,145,54)"/><text x="43.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (3 samples, 1.31%)</title><rect x="40" y="1204" width="16" height="15" fill="rgb(221,3,48)"/><text x="43.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1220" width="16" height="15" fill="rgb(241,58,6)"/><text x="43.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1236" width="16" height="15" fill="rgb(248,144,26)"/><text x="43.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1252" width="16" height="15" fill="rgb(229,137,29)"/><text x="43.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.31%)</title><rect x="40" y="1268" width="16" height="15" fill="rgb(239,62,14)"/><text x="43.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1284" width="16" height="15" fill="rgb(208,1,51)"/><text x="43.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (3 samples, 1.31%)</title><rect x="40" y="1300" width="16" height="15" fill="rgb(244,185,32)"/><text x="43.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1316" width="16" height="15" fill="rgb(245,73,15)"/><text x="43.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1332" width="16" height="15" fill="rgb(233,160,5)"/><text x="43.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1348" width="16" height="15" fill="rgb(217,211,37)"/><text x="43.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.31%)</title><rect x="40" y="1364" width="16" height="15" fill="rgb(214,50,20)"/><text x="43.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1380" width="16" height="15" fill="rgb(235,155,25)"/><text x="43.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (3 samples, 1.31%)</title><rect x="40" y="1396" width="16" height="15" fill="rgb(245,81,17)"/><text x="43.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1412" width="16" height="15" fill="rgb(211,224,5)"/><text x="43.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1428" width="16" height="15" fill="rgb(222,45,1)"/><text x="43.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1444" width="16" height="15" fill="rgb(233,216,42)"/><text x="43.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.31%)</title><rect x="40" y="1460" width="16" height="15" fill="rgb(222,179,40)"/><text x="43.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1476" width="16" height="15" fill="rgb(235,3,45)"/><text x="43.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (3 samples, 1.31%)</title><rect x="40" y="1492" width="16" height="15" fill="rgb(237,126,29)"/><text x="43.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1508" width="16" height="15" fill="rgb(244,33,28)"/><text x="43.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1524" width="16" height="15" fill="rgb(206,117,3)"/><text x="43.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1540" width="16" height="15" fill="rgb(227,81,47)"/><text x="43.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.31%)</title><rect x="40" y="1556" width="16" height="15" fill="rgb(251,46,18)"/><text x="43.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1572" width="16" height="15" fill="rgb(217,177,13)"/><text x="43.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (3 samples, 1.31%)</title><rect x="40" y="1588" width="16" height="15" fill="rgb(247,18,33)"/><text x="43.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1604" width="16" height="15" fill="rgb(245,183,10)"/><text x="43.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1620" width="16" height="15" fill="rgb(243,85,28)"/><text x="43.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1636" width="16" height="15" fill="rgb(217,220,52)"/><text x="43.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.31%)</title><rect x="40" y="1652" width="16" height="15" fill="rgb(242,159,7)"/><text x="43.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1668" width="16" height="15" fill="rgb(239,137,51)"/><text x="43.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (3 samples, 1.31%)</title><rect x="40" y="1684" width="16" height="15" fill="rgb(230,19,28)"/><text x="43.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1700" width="16" height="15" fill="rgb(240,103,9)"/><text x="43.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1716" width="16" height="15" fill="rgb(234,217,53)"/><text x="43.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1732" width="16" height="15" fill="rgb(246,41,24)"/><text x="43.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.31%)</title><rect x="40" y="1748" width="16" height="15" fill="rgb(224,219,36)"/><text x="43.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1764" width="16" height="15" fill="rgb(214,136,8)"/><text x="43.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (3 samples, 1.31%)</title><rect x="40" y="1780" width="16" height="15" fill="rgb(240,118,43)"/><text x="43.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1796" width="16" height="15" fill="rgb(251,10,21)"/><text x="43.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1812" width="16" height="15" fill="rgb(211,177,48)"/><text x="43.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1828" width="16" height="15" fill="rgb(209,77,13)"/><text x="43.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.31%)</title><rect x="40" y="1844" width="16" height="15" fill="rgb(252,194,34)"/><text x="43.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.31%)</title><rect x="40" y="1860" width="16" height="15" fill="rgb(245,9,51)"/><text x="43.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.44%)</title><rect x="51" y="1876" width="5" height="15" fill="rgb(243,174,43)"/><text x="54.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.44%)</title><rect x="51" y="1892" width="5" height="15" fill="rgb(249,171,14)"/><text x="54.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.44%)</title><rect x="51" y="1908" width="5" height="15" fill="rgb(244,192,43)"/><text x="54.00" y="1918.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py) (1 samples, 0.44%)</title><rect x="51" y="1924" width="5" height="15" fill="rgb(249,6,32)"/><text x="54.00" y="1934.50"></text></g><g><title>getfullargspec (inspect.py) (1 samples, 0.44%)</title><rect x="51" y="1940" width="5" height="15" fill="rgb(249,171,23)"/><text x="54.00" y="1950.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.44%)</title><rect x="51" y="1956" width="5" height="15" fill="rgb(225,13,36)"/><text x="54.00" y="1966.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.44%)</title><rect x="51" y="1972" width="5" height="15" fill="rgb(222,130,3)"/><text x="54.00" y="1982.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.44%)</title><rect x="51" y="1988" width="5" height="15" fill="rgb(206,197,19)"/><text x="54.00" y="1998.50"></text></g><g><title>__call__ (enum.py) (1 samples, 0.44%)</title><rect x="51" y="2004" width="5" height="15" fill="rgb(233,58,7)"/><text x="54.00" y="2014.50"></text></g><g><title>__new__ (enum.py) (1 samples, 0.44%)</title><rect x="51" y="2020" width="5" height="15" fill="rgb(243,73,29)"/><text x="54.00" y="2030.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.80%)</title><rect x="10" y="68" width="56" height="15" fill="rgb(250,218,31)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.80%)</title><rect x="10" y="84" width="56" height="15" fill="rgb(231,142,34)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.80%)</title><rect x="10" y="100" width="56" height="15" fill="rgb(227,191,47)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 4.80%)</title><rect x="10" y="116" width="56" height="15" fill="rgb(240,125,0)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.80%)</title><rect x="10" y="132" width="56" height="15" fill="rgb(246,140,7)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py) (11 samples, 4.80%)</title><rect x="10" y="148" width="56" height="15" fill="rgb(214,126,46)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.80%)</title><rect x="10" y="164" width="56" height="15" fill="rgb(215,221,45)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.80%)</title><rect x="10" y="180" width="56" height="15" fill="rgb(235,10,47)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.62%)</title><rect x="35" y="196" width="31" height="15" fill="rgb(211,31,37)"/><text x="38.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.62%)</title><rect x="35" y="212" width="31" height="15" fill="rgb(244,31,52)"/><text x="38.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.62%)</title><rect x="35" y="228" width="31" height="15" fill="rgb(216,173,31)"/><text x="38.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 2.62%)</title><rect x="35" y="244" width="31" height="15" fill="rgb(233,53,29)"/><text x="38.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.62%)</title><rect x="35" y="260" width="31" height="15" fill="rgb(237,104,25)"/><text x="38.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.62%)</title><rect x="35" y="276" width="31" height="15" fill="rgb(217,67,40)"/><text x="38.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.62%)</title><rect x="35" y="292" width="31" height="15" fill="rgb(244,103,14)"/><text x="38.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.62%)</title><rect x="35" y="308" width="31" height="15" fill="rgb(252,16,51)"/><text x="38.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.62%)</title><rect x="35" y="324" width="31" height="15" fill="rgb(206,36,13)"/><text x="38.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.87%)</title><rect x="56" y="340" width="10" height="15" fill="rgb(239,122,26)"/><text x="59.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="356" width="10" height="15" fill="rgb(243,158,25)"/><text x="59.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="372" width="10" height="15" fill="rgb(241,37,0)"/><text x="59.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="388" width="10" height="15" fill="rgb(228,49,49)"/><text x="59.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="404" width="10" height="15" fill="rgb(225,161,1)"/><text x="59.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="420" width="10" height="15" fill="rgb(209,130,29)"/><text x="59.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="436" width="10" height="15" fill="rgb(211,154,49)"/><text x="59.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="56" y="452" width="10" height="15" fill="rgb(224,8,41)"/><text x="59.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="468" width="10" height="15" fill="rgb(211,144,34)"/><text x="59.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.87%)</title><rect x="56" y="484" width="10" height="15" fill="rgb(250,190,30)"/><text x="59.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="500" width="10" height="15" fill="rgb(240,13,11)"/><text x="59.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="516" width="10" height="15" fill="rgb(236,109,18)"/><text x="59.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="532" width="10" height="15" fill="rgb(232,127,0)"/><text x="59.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="56" y="548" width="10" height="15" fill="rgb(231,16,7)"/><text x="59.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="564" width="10" height="15" fill="rgb(239,89,14)"/><text x="59.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.87%)</title><rect x="56" y="580" width="10" height="15" fill="rgb(217,57,1)"/><text x="59.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="596" width="10" height="15" fill="rgb(226,69,15)"/><text x="59.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="612" width="10" height="15" fill="rgb(231,152,12)"/><text x="59.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="628" width="10" height="15" fill="rgb(209,8,29)"/><text x="59.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="56" y="644" width="10" height="15" fill="rgb(248,106,6)"/><text x="59.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="660" width="10" height="15" fill="rgb(214,42,39)"/><text x="59.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.87%)</title><rect x="56" y="676" width="10" height="15" fill="rgb(215,74,34)"/><text x="59.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="692" width="10" height="15" fill="rgb(208,124,39)"/><text x="59.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="708" width="10" height="15" fill="rgb(223,174,18)"/><text x="59.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="724" width="10" height="15" fill="rgb(254,213,15)"/><text x="59.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="56" y="740" width="10" height="15" fill="rgb(205,98,16)"/><text x="59.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="756" width="10" height="15" fill="rgb(247,126,47)"/><text x="59.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.87%)</title><rect x="56" y="772" width="10" height="15" fill="rgb(214,61,19)"/><text x="59.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="788" width="10" height="15" fill="rgb(248,147,43)"/><text x="59.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="804" width="10" height="15" fill="rgb(234,175,2)"/><text x="59.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="820" width="10" height="15" fill="rgb(253,59,43)"/><text x="59.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="836" width="10" height="15" fill="rgb(236,199,20)"/><text x="59.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="852" width="10" height="15" fill="rgb(205,27,26)"/><text x="59.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.87%)</title><rect x="56" y="868" width="10" height="15" fill="rgb(249,177,22)"/><text x="59.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="56" y="884" width="10" height="15" fill="rgb(248,22,49)"/><text x="59.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/packages.py) (2 samples, 0.87%)</title><rect x="56" y="900" width="10" height="15" fill="rgb(236,95,50)"/><text x="59.00" y="910.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.44%)</title><rect x="66" y="116" width="5" height="15" fill="rgb(239,219,28)"/><text x="69.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.44%)</title><rect x="66" y="132" width="5" height="15" fill="rgb(247,121,52)"/><text x="69.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.44%)</title><rect x="66" y="148" width="5" height="15" fill="rgb(234,204,52)"/><text x="69.00" y="158.50"></text></g><g><title>0x7fbaec378f10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="66" y="164" width="5" height="15" fill="rgb(230,214,21)"/><text x="69.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.44%)</title><rect x="113" y="180" width="5" height="15" fill="rgb(212,120,32)"/><text x="116.00" y="190.50"></text></g><g><title>0x7fbaad214ff9 (?) (1 samples, 0.44%)</title><rect x="123" y="212" width="5" height="15" fill="rgb(235,75,54)"/><text x="126.00" y="222.50"></text></g><g><title>0x7fbaad20fef6 (?) (1 samples, 0.44%)</title><rect x="123" y="228" width="5" height="15" fill="rgb(251,194,11)"/><text x="126.00" y="238.50"></text></g><g><title>0x7fbaad204458 (?) (1 samples, 0.44%)</title><rect x="123" y="244" width="5" height="15" fill="rgb(253,184,32)"/><text x="126.00" y="254.50"></text></g><g><title>0x7fbaad1f4d1e (?) (1 samples, 0.44%)</title><rect x="123" y="260" width="5" height="15" fill="rgb(240,108,29)"/><text x="126.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.44%)</title><rect x="123" y="276" width="5" height="15" fill="rgb(206,166,16)"/><text x="126.00" y="286.50"></text></g><g><title>0x7fbaed234151 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="123" y="292" width="5" height="15" fill="rgb(240,133,18)"/><text x="126.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.44%)</title><rect x="138" y="244" width="5" height="15" fill="rgb(239,100,38)"/><text x="141.00" y="254.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.44%)</title><rect x="143" y="292" width="6" height="15" fill="rgb(234,184,35)"/><text x="146.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (5 samples, 2.18%)</title><rect x="128" y="212" width="26" height="15" fill="rgb(219,139,32)"/><text x="131.00" y="222.50">&lt;..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.31%)</title><rect x="138" y="228" width="16" height="15" fill="rgb(205,154,30)"/><text x="141.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.87%)</title><rect x="143" y="244" width="11" height="15" fill="rgb(217,155,42)"/><text x="146.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.87%)</title><rect x="143" y="260" width="11" height="15" fill="rgb(234,162,41)"/><text x="146.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.87%)</title><rect x="143" y="276" width="11" height="15" fill="rgb(220,215,37)"/><text x="146.00" y="286.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="149" y="292" width="5" height="15" fill="rgb(230,94,6)"/><text x="152.00" y="302.50"></text></g><g><title>0x7fbaed156991 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="164" y="260" width="5" height="15" fill="rgb(252,174,46)"/><text x="167.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="174" y="292" width="6" height="15" fill="rgb(212,48,43)"/><text x="177.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="174" y="308" width="6" height="15" fill="rgb(248,72,30)"/><text x="177.00" y="318.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="174" y="324" width="6" height="15" fill="rgb(241,168,54)"/><text x="177.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="180" y="292" width="5" height="15" fill="rgb(227,72,18)"/><text x="183.00" y="302.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.44%)</title><rect x="180" y="308" width="5" height="15" fill="rgb(230,52,50)"/><text x="183.00" y="318.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="185" y="356" width="5" height="15" fill="rgb(235,143,22)"/><text x="188.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="185" y="372" width="5" height="15" fill="rgb(245,111,29)"/><text x="188.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="185" y="388" width="5" height="15" fill="rgb(223,56,0)"/><text x="188.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.87%)</title><rect x="185" y="340" width="10" height="15" fill="rgb(236,36,22)"/><text x="188.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="190" y="356" width="5" height="15" fill="rgb(250,22,12)"/><text x="193.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.31%)</title><rect x="195" y="356" width="15" height="15" fill="rgb(207,214,11)"/><text x="198.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.87%)</title><rect x="200" y="372" width="10" height="15" fill="rgb(243,2,39)"/><text x="203.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.87%)</title><rect x="200" y="388" width="10" height="15" fill="rgb(236,226,54)"/><text x="203.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.87%)</title><rect x="200" y="404" width="10" height="15" fill="rgb(244,121,49)"/><text x="203.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.87%)</title><rect x="200" y="420" width="10" height="15" fill="rgb(225,176,26)"/><text x="203.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.87%)</title><rect x="200" y="436" width="10" height="15" fill="rgb(206,213,43)"/><text x="203.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.87%)</title><rect x="200" y="452" width="10" height="15" fill="rgb(207,135,19)"/><text x="203.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.87%)</title><rect x="200" y="468" width="10" height="15" fill="rgb(218,3,16)"/><text x="203.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="205" y="484" width="5" height="15" fill="rgb(236,86,24)"/><text x="208.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="205" y="500" width="5" height="15" fill="rgb(217,221,53)"/><text x="208.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="205" y="516" width="5" height="15" fill="rgb(252,94,7)"/><text x="208.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="205" y="532" width="5" height="15" fill="rgb(244,127,42)"/><text x="208.00" y="542.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.62%)</title><rect x="185" y="324" width="31" height="15" fill="rgb(208,20,54)"/><text x="188.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.75%)</title><rect x="195" y="340" width="21" height="15" fill="rgb(220,122,11)"/><text x="198.00" y="350.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="210" y="356" width="6" height="15" fill="rgb(220,219,40)"/><text x="213.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 4.37%)</title><rect x="169" y="276" width="52" height="15" fill="rgb(217,98,11)"/><text x="172.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.06%)</title><rect x="185" y="292" width="36" height="15" fill="rgb(238,52,0)"/><text x="188.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.06%)</title><rect x="185" y="308" width="36" height="15" fill="rgb(241,35,16)"/><text x="188.00" y="318.50">onn..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.44%)</title><rect x="216" y="324" width="5" height="15" fill="rgb(226,132,1)"/><text x="219.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.44%)</title><rect x="216" y="340" width="5" height="15" fill="rgb(220,42,54)"/><text x="219.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 4.80%)</title><rect x="169" y="260" width="57" height="15" fill="rgb(250,87,45)"/><text x="172.00" y="270.50">onnxru..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="221" y="276" width="5" height="15" fill="rgb(234,159,38)"/><text x="224.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.44%)</title><rect x="231" y="292" width="5" height="15" fill="rgb(223,50,12)"/><text x="234.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.87%)</title><rect x="231" y="276" width="10" height="15" fill="rgb(244,116,48)"/><text x="234.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="236" y="292" width="5" height="15" fill="rgb(254,60,3)"/><text x="239.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="236" y="308" width="5" height="15" fill="rgb(217,180,39)"/><text x="239.00" y="318.50"></text></g><g><title>onnxruntime::TensorShape::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="236" y="324" width="5" height="15" fill="rgb(224,90,22)"/><text x="239.00" y="334.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.75%)</title><rect x="226" y="260" width="21" height="15" fill="rgb(245,179,10)"/><text x="229.00" y="270.50"></text></g><g><title>std::__shared_ptr&lt;void, (__gnu_cxx::_Lock_policy)2&gt;::reset&lt;void, void (*)(void*)&gt; [clone .localalias.62] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="241" y="276" width="6" height="15" fill="rgb(205,116,9)"/><text x="244.00" y="286.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.44%)</title><rect x="247" y="276" width="5" height="15" fill="rgb(227,81,0)"/><text x="250.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.44%)</title><rect x="247" y="292" width="5" height="15" fill="rgb(242,160,5)"/><text x="250.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.44%)</title><rect x="247" y="308" width="5" height="15" fill="rgb(237,226,26)"/><text x="250.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.87%)</title><rect x="247" y="260" width="10" height="15" fill="rgb(244,27,18)"/><text x="250.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="252" y="276" width="5" height="15" fill="rgb(241,163,49)"/><text x="255.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.44%)</title><rect x="252" y="292" width="5" height="15" fill="rgb(250,154,49)"/><text x="255.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.44%)</title><rect x="252" y="308" width="5" height="15" fill="rgb(251,46,38)"/><text x="255.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 8.73%)</title><rect x="159" y="244" width="103" height="15" fill="rgb(251,182,28)"/><text x="162.00" y="254.50">onnxruntime:..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="257" y="260" width="5" height="15" fill="rgb(208,206,32)"/><text x="260.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="262" y="244" width="5" height="15" fill="rgb(234,210,46)"/><text x="265.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="262" y="260" width="5" height="15" fill="rgb(209,224,8)"/><text x="265.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.44%)</title><rect x="262" y="276" width="5" height="15" fill="rgb(236,45,0)"/><text x="265.00" y="286.50"></text></g><g><title>0x7fbaed176d50 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="262" y="292" width="5" height="15" fill="rgb(244,71,40)"/><text x="265.00" y="302.50"></text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py) (40 samples, 17.47%)</title><rect x="66" y="100" width="206" height="15" fill="rgb(227,9,24)"/><text x="69.00" y="110.50">profile (bench_DecisionTree..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (39 samples, 17.03%)</title><rect x="71" y="116" width="201" height="15" fill="rgb(233,64,5)"/><text x="74.00" y="126.50">time_predict (mlprodict/as..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (39 samples, 17.03%)</title><rect x="71" y="132" width="201" height="15" fill="rgb(210,96,11)"/><text x="74.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_be..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (38 samples, 16.59%)</title><rect x="76" y="148" width="196" height="15" fill="rgb(252,147,46)"/><text x="79.00" y="158.50">run (mlprodict/onnxrt/onn..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (34 samples, 14.85%)</title><rect x="97" y="164" width="175" height="15" fill="rgb(215,108,13)"/><text x="100.00" y="174.50">_run_whole_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (30 samples, 13.10%)</title><rect x="118" y="180" width="154" height="15" fill="rgb(242,105,45)"/><text x="121.00" y="190.50">run (mlprodict/onnx..</text></g><g><title>run (onnxruntime/capi/session.py) (30 samples, 13.10%)</title><rect x="118" y="196" width="154" height="15" fill="rgb(226,164,37)"/><text x="121.00" y="206.50">run (onnxruntime/ca..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 10.04%)</title><rect x="154" y="212" width="118" height="15" fill="rgb(222,194,50)"/><text x="157.00" y="222.50">pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 9.61%)</title><rect x="159" y="228" width="113" height="15" fill="rgb(249,102,31)"/><text x="162.00" y="238.50">void pybind11..</text></g><g><title>std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;::~vector [clone .lto_priv.576] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="267" y="244" width="5" height="15" fill="rgb(250,134,38)"/><text x="270.00" y="254.50"></text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py) (41 samples, 17.90%)</title><rect x="66" y="68" width="211" height="15" fill="rgb(221,188,40)"/><text x="69.00" y="78.50">profile_ort (bench_Decision..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py) (41 samples, 17.90%)</title><rect x="66" y="84" width="211" height="15" fill="rgb(221,2,41)"/><text x="69.00" y="94.50">setup_profile (bench_Decisi..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.44%)</title><rect x="272" y="100" width="5" height="15" fill="rgb(244,115,32)"/><text x="275.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.44%)</title><rect x="272" y="116" width="5" height="15" fill="rgb(216,159,50)"/><text x="275.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.44%)</title><rect x="272" y="132" width="5" height="15" fill="rgb(241,158,51)"/><text x="275.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.44%)</title><rect x="272" y="148" width="5" height="15" fill="rgb(245,91,46)"/><text x="275.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.44%)</title><rect x="272" y="164" width="5" height="15" fill="rgb(252,129,36)"/><text x="275.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="272" y="180" width="5" height="15" fill="rgb(240,54,11)"/><text x="275.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="272" y="196" width="5" height="15" fill="rgb(206,169,51)"/><text x="275.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="272" y="212" width="5" height="15" fill="rgb(252,108,46)"/><text x="275.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="272" y="228" width="5" height="15" fill="rgb(243,100,0)"/><text x="275.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="272" y="244" width="5" height="15" fill="rgb(213,1,8)"/><text x="275.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.44%)</title><rect x="272" y="260" width="5" height="15" fill="rgb(243,95,44)"/><text x="275.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="272" y="276" width="5" height="15" fill="rgb(215,185,35)"/><text x="275.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="272" y="292" width="5" height="15" fill="rgb(245,13,50)"/><text x="275.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="272" y="308" width="5" height="15" fill="rgb(228,179,18)"/><text x="275.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="272" y="324" width="5" height="15" fill="rgb(252,45,16)"/><text x="275.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="272" y="340" width="5" height="15" fill="rgb(209,169,45)"/><text x="275.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.44%)</title><rect x="272" y="356" width="5" height="15" fill="rgb(210,144,8)"/><text x="275.00" y="366.50"></text></g><g><title>check_distro_info (onnxruntime/capi/onnxruntime_validation.py) (1 samples, 0.44%)</title><rect x="272" y="372" width="5" height="15" fill="rgb(222,105,35)"/><text x="275.00" y="382.50"></text></g><g><title>architecture (platform.py) (1 samples, 0.44%)</title><rect x="272" y="388" width="5" height="15" fill="rgb(226,148,26)"/><text x="275.00" y="398.50"></text></g><g><title>_syscmd_file (platform.py) (1 samples, 0.44%)</title><rect x="272" y="404" width="5" height="15" fill="rgb(212,93,36)"/><text x="275.00" y="414.50"></text></g><g><title>__init__ (subprocess.py) (1 samples, 0.44%)</title><rect x="272" y="420" width="5" height="15" fill="rgb(236,55,29)"/><text x="275.00" y="430.50"></text></g><g><title>_execute_child (subprocess.py) (1 samples, 0.44%)</title><rect x="272" y="436" width="5" height="15" fill="rgb(241,71,34)"/><text x="275.00" y="446.50"></text></g><g><title>subprocess_fork_exec (_posixsubprocess.c) (1 samples, 0.44%)</title><rect x="272" y="452" width="5" height="15" fill="rgb(236,151,47)"/><text x="275.00" y="462.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.44%)</title><rect x="272" y="468" width="5" height="15" fill="rgb(235,106,30)"/><text x="275.00" y="478.50"></text></g><g><title>0x7fbaadc6f54f (?) (1 samples, 0.44%)</title><rect x="283" y="244" width="5" height="15" fill="rgb(226,163,8)"/><text x="286.00" y="254.50"></text></g><g><title>0x7fbaadc7565e (?) (1 samples, 0.44%)</title><rect x="283" y="260" width="5" height="15" fill="rgb(232,22,5)"/><text x="286.00" y="270.50"></text></g><g><title>0x7fbaadc7550f (?) (1 samples, 0.44%)</title><rect x="283" y="276" width="5" height="15" fill="rgb(231,79,44)"/><text x="286.00" y="286.50"></text></g><g><title>0x7fbaadc7bd6c (?) (1 samples, 0.44%)</title><rect x="283" y="292" width="5" height="15" fill="rgb(243,57,31)"/><text x="286.00" y="302.50"></text></g><g><title>0x7fbab715cab9 (?) (1 samples, 0.44%)</title><rect x="283" y="308" width="5" height="15" fill="rgb(242,76,26)"/><text x="286.00" y="318.50"></text></g><g><title>0x7fbab715dead (?) (1 samples, 0.44%)</title><rect x="283" y="324" width="5" height="15" fill="rgb(209,194,54)"/><text x="286.00" y="334.50"></text></g><g><title>0x7fbab715dea0 (libgomp.so.1.0.0) (1 samples, 0.44%)</title><rect x="288" y="484" width="5" height="15" fill="rgb(212,168,28)"/><text x="291.00" y="494.50"></text></g><g><title>0x7fbab715dea9 (libgomp.so.1.0.0) (10 samples, 4.37%)</title><rect x="293" y="484" width="51" height="15" fill="rgb(232,23,40)"/><text x="296.00" y="494.50">0x7fb..</text></g><g><title>0x7fbab715deab (libgomp.so.1.0.0) (16 samples, 6.99%)</title><rect x="344" y="484" width="83" height="15" fill="rgb(229,50,38)"/><text x="347.00" y="494.50">0x7fbab71..</text></g><g><title>0x7fbab715cab9 (libgomp.so.1.0.0) (41 samples, 17.90%)</title><rect x="288" y="468" width="211" height="15" fill="rgb(210,180,49)"/><text x="291.00" y="478.50">0x7fbab715cab9 (libgomp.so...</text></g><g><title>0x7fbab715dead (libgomp.so.1.0.0) (14 samples, 6.11%)</title><rect x="427" y="484" width="72" height="15" fill="rgb(225,112,4)"/><text x="430.00" y="494.50">0x7fbab7..</text></g><g><title>0x7fbab715dcf0 (libgomp.so.1.0.0) (1 samples, 0.44%)</title><rect x="499" y="500" width="5" height="15" fill="rgb(224,162,42)"/><text x="502.00" y="510.50"></text></g><g><title>0x7fbab715dcf9 (libgomp.so.1.0.0) (2 samples, 0.87%)</title><rect x="504" y="500" width="10" height="15" fill="rgb(250,184,48)"/><text x="507.00" y="510.50"></text></g><g><title>0x7fbab715dcfb (libgomp.so.1.0.0) (1 samples, 0.44%)</title><rect x="514" y="500" width="6" height="15" fill="rgb(252,226,5)"/><text x="517.00" y="510.50"></text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py) (48 samples, 20.96%)</title><rect x="277" y="68" width="248" height="15" fill="rgb(222,37,19)"/><text x="280.00" y="78.50">profile_pyrt (bench_DecisionTreeR..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py) (48 samples, 20.96%)</title><rect x="277" y="84" width="248" height="15" fill="rgb(251,184,35)"/><text x="280.00" y="94.50">setup_profile (bench_DecisionTree..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py) (48 samples, 20.96%)</title><rect x="277" y="100" width="248" height="15" fill="rgb(206,58,25)"/><text x="280.00" y="110.50">profile (bench_DecisionTreeRegres..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (48 samples, 20.96%)</title><rect x="277" y="116" width="248" height="15" fill="rgb(216,98,20)"/><text x="280.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (48 samples, 20.96%)</title><rect x="277" y="132" width="248" height="15" fill="rgb(206,76,25)"/><text x="280.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (48 samples, 20.96%)</title><rect x="277" y="148" width="248" height="15" fill="rgb(252,203,33)"/><text x="280.00" y="158.50">run (mlprodict/onnxrt/onnx_infere..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (48 samples, 20.96%)</title><rect x="277" y="164" width="248" height="15" fill="rgb(241,39,20)"/><text x="280.00" y="174.50">_run_sequence_runtime (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (47 samples, 20.52%)</title><rect x="283" y="180" width="242" height="15" fill="rgb(220,186,39)"/><text x="286.00" y="190.50">run (mlprodict/onnxrt/onnx_infer..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (47 samples, 20.52%)</title><rect x="283" y="196" width="242" height="15" fill="rgb(229,178,1)"/><text x="286.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (47 samples, 20.52%)</title><rect x="283" y="212" width="242" height="15" fill="rgb(225,172,34)"/><text x="286.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (47 samples, 20.52%)</title><rect x="283" y="228" width="242" height="15" fill="rgb(205,67,10)"/><text x="286.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/o..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (46 samples, 20.09%)</title><rect x="288" y="244" width="237" height="15" fill="rgb(244,0,12)"/><text x="291.00" y="254.50">pybind11::cpp_function::dispatc..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (46 samples, 20.09%)</title><rect x="288" y="260" width="237" height="15" fill="rgb(233,168,13)"/><text x="291.00" y="270.50">void pybind11::cpp_function::in..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (46 samples, 20.09%)</title><rect x="288" y="276" width="237" height="15" fill="rgb(246,220,51)"/><text x="291.00" y="286.50">void pybind11::cpp_function::in..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (46 samples, 20.09%)</title><rect x="288" y="292" width="237" height="15" fill="rgb(244,66,34)"/><text x="291.00" y="302.50">pybind11::detail::argument_load..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (46 samples, 20.09%)</title><rect x="288" y="308" width="237" height="15" fill="rgb(205,216,6)"/><text x="291.00" y="318.50">pybind11::detail::argument_load..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (46 samples, 20.09%)</title><rect x="288" y="324" width="237" height="15" fill="rgb(235,170,7)"/><text x="291.00" y="334.50">pybind11::cpp_function::cpp_fun..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (46 samples, 20.09%)</title><rect x="288" y="340" width="237" height="15" fill="rgb(244,167,48)"/><text x="291.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~..</text></g><g><title>pybind11::array::~array (numpy.h) (46 samples, 20.09%)</title><rect x="288" y="356" width="237" height="15" fill="rgb(244,83,32)"/><text x="291.00" y="366.50">pybind11::array::~array (numpy...</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (46 samples, 20.09%)</title><rect x="288" y="372" width="237" height="15" fill="rgb(219,112,3)"/><text x="291.00" y="382.50">pybind11::buffer::~buffer (pyty..</text></g><g><title>pybind11::object::~object (pytypes.h) (46 samples, 20.09%)</title><rect x="288" y="388" width="237" height="15" fill="rgb(206,198,17)"/><text x="291.00" y="398.50">pybind11::object::~object (pyty..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (46 samples, 20.09%)</title><rect x="288" y="404" width="237" height="15" fill="rgb(247,185,35)"/><text x="291.00" y="414.50">pybind11::handle::dec_ref &amp; (py..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (46 samples, 20.09%)</title><rect x="288" y="420" width="237" height="15" fill="rgb(227,204,0)"/><text x="291.00" y="430.50">RuntimeTreeEnsembleRegressor&lt;fl..</text></g><g><title>pybind11::array::size (numpy.h) (46 samples, 20.09%)</title><rect x="288" y="436" width="237" height="15" fill="rgb(246,67,45)"/><text x="291.00" y="446.50">pybind11::array::size (numpy.h)</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (46 samples, 20.09%)</title><rect x="288" y="452" width="237" height="15" fill="rgb(205,192,47)"/><text x="291.00" y="462.50">std::accumulate&lt;long const*, lo..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (5 samples, 2.18%)</title><rect x="499" y="468" width="26" height="15" fill="rgb(205,89,3)"/><text x="502.00" y="478.50">G..</text></g><g><title>0x7fbab715bdaa (libgomp.so.1.0.0) (5 samples, 2.18%)</title><rect x="499" y="484" width="26" height="15" fill="rgb(237,46,7)"/><text x="502.00" y="494.50">0..</text></g><g><title>0x7fbab715dcfd (libgomp.so.1.0.0) (1 samples, 0.44%)</title><rect x="520" y="500" width="5" height="15" fill="rgb(252,123,30)"/><text x="523.00" y="510.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.44%)</title><rect x="530" y="116" width="5" height="15" fill="rgb(251,60,29)"/><text x="533.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.44%)</title><rect x="530" y="132" width="5" height="15" fill="rgb(251,155,45)"/><text x="533.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.44%)</title><rect x="530" y="148" width="5" height="15" fill="rgb(231,176,23)"/><text x="533.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.44%)</title><rect x="556" y="148" width="5" height="15" fill="rgb(208,145,45)"/><text x="559.00" y="158.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.44%)</title><rect x="556" y="164" width="5" height="15" fill="rgb(239,171,22)"/><text x="559.00" y="174.50"></text></g><g><title>0x7fbac77c1f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="592" y="180" width="5" height="15" fill="rgb(209,5,32)"/><text x="595.00" y="190.50"></text></g><g><title>0x7fbac77b1d7b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="592" y="196" width="5" height="15" fill="rgb(235,32,17)"/><text x="595.00" y="206.50"></text></g><g><title>0x7fbac779eb8c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="592" y="212" width="5" height="15" fill="rgb(244,37,0)"/><text x="595.00" y="222.50"></text></g><g><title>0x7fbac77d01dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="597" y="212" width="5" height="15" fill="rgb(236,129,24)"/><text x="600.00" y="222.50"></text></g><g><title>0x7fbac77aa126 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="602" y="260" width="5" height="15" fill="rgb(213,216,3)"/><text x="605.00" y="270.50"></text></g><g><title>0x7fbac77b4d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.31%)</title><rect x="602" y="228" width="16" height="15" fill="rgb(230,202,49)"/><text x="605.00" y="238.50"></text></g><g><title>0x7fbac77b4666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.31%)</title><rect x="602" y="244" width="16" height="15" fill="rgb(214,57,42)"/><text x="605.00" y="254.50"></text></g><g><title>0x7fbac77aa2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="607" y="260" width="11" height="15" fill="rgb(245,74,32)"/><text x="610.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.87%)</title><rect x="607" y="276" width="11" height="15" fill="rgb(250,12,51)"/><text x="610.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.87%)</title><rect x="607" y="292" width="11" height="15" fill="rgb(205,49,27)"/><text x="610.00" y="302.50"></text></g><g><title>0x7fbac77b4e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="618" y="228" width="5" height="15" fill="rgb(209,33,17)"/><text x="621.00" y="238.50"></text></g><g><title>0x7fbac77a8022 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="618" y="244" width="5" height="15" fill="rgb(253,72,6)"/><text x="621.00" y="254.50"></text></g><g><title>0x7fbac77d02df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.18%)</title><rect x="602" y="212" width="26" height="15" fill="rgb(242,12,8)"/><text x="605.00" y="222.50">0..</text></g><g><title>0x7fbac77b4ee5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="623" y="228" width="5" height="15" fill="rgb(252,128,28)"/><text x="626.00" y="238.50"></text></g><g><title>0x7fbac77d0456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="628" y="212" width="5" height="15" fill="rgb(212,61,4)"/><text x="631.00" y="222.50"></text></g><g><title>0x7fbac77d04b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="633" y="212" width="5" height="15" fill="rgb(243,135,50)"/><text x="636.00" y="222.50"></text></g><g><title>0x7fbaed16c734 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="643" y="244" width="5" height="15" fill="rgb(216,100,12)"/><text x="646.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.44%)</title><rect x="648" y="244" width="6" height="15" fill="rgb(209,148,45)"/><text x="651.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.44%)</title><rect x="648" y="260" width="6" height="15" fill="rgb(249,149,11)"/><text x="651.00" y="270.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.44%)</title><rect x="654" y="244" width="5" height="15" fill="rgb(232,220,47)"/><text x="657.00" y="254.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.44%)</title><rect x="654" y="260" width="5" height="15" fill="rgb(229,45,13)"/><text x="657.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.44%)</title><rect x="659" y="244" width="5" height="15" fill="rgb(210,131,40)"/><text x="662.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.44%)</title><rect x="659" y="260" width="5" height="15" fill="rgb(234,229,51)"/><text x="662.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.44%)</title><rect x="659" y="276" width="5" height="15" fill="rgb(237,91,18)"/><text x="662.00" y="286.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.44%)</title><rect x="659" y="292" width="5" height="15" fill="rgb(228,31,31)"/><text x="662.00" y="302.50"></text></g><g><title>0x7fbac77d0592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.62%)</title><rect x="638" y="212" width="31" height="15" fill="rgb(226,107,52)"/><text x="641.00" y="222.50">0x..</text></g><g><title>array_zeros (multiarraymodule.c) (6 samples, 2.62%)</title><rect x="638" y="228" width="31" height="15" fill="rgb(218,93,31)"/><text x="641.00" y="238.50">ar..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.44%)</title><rect x="664" y="244" width="5" height="15" fill="rgb(222,8,52)"/><text x="667.00" y="254.50"></text></g><g><title>0x7fbac77d05d9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="669" y="212" width="5" height="15" fill="rgb(213,18,36)"/><text x="672.00" y="222.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.44%)</title><rect x="674" y="228" width="5" height="15" fill="rgb(219,207,20)"/><text x="677.00" y="238.50"></text></g><g><title>0x7fbac77d0644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="674" y="212" width="11" height="15" fill="rgb(217,208,22)"/><text x="677.00" y="222.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.44%)</title><rect x="679" y="228" width="6" height="15" fill="rgb(235,96,12)"/><text x="682.00" y="238.50"></text></g><g><title>0x7fbac77d06a5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="685" y="212" width="5" height="15" fill="rgb(242,219,33)"/><text x="688.00" y="222.50"></text></g><g><title>0x7fbac77d06fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="690" y="212" width="5" height="15" fill="rgb(238,198,22)"/><text x="693.00" y="222.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.44%)</title><rect x="690" y="228" width="5" height="15" fill="rgb(231,20,36)"/><text x="693.00" y="238.50"></text></g><g><title>0x7fbac77d1405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (20 samples, 8.73%)</title><rect x="597" y="196" width="103" height="15" fill="rgb(219,85,40)"/><text x="600.00" y="206.50">0x7fbac77d14..</text></g><g><title>0x7fbac77d0c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="695" y="212" width="5" height="15" fill="rgb(250,140,52)"/><text x="698.00" y="222.50"></text></g><g><title>0x7fbac77a8529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="695" y="228" width="5" height="15" fill="rgb(240,107,53)"/><text x="698.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.44%)</title><rect x="695" y="244" width="5" height="15" fill="rgb(228,126,49)"/><text x="698.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.44%)</title><rect x="695" y="260" width="5" height="15" fill="rgb(216,137,9)"/><text x="698.00" y="270.50"></text></g><g><title>0x7fbac77a54f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="700" y="228" width="5" height="15" fill="rgb(254,172,35)"/><text x="703.00" y="238.50"></text></g><g><title>0x7fbac77c1fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (22 samples, 9.61%)</title><rect x="597" y="180" width="113" height="15" fill="rgb(240,46,44)"/><text x="600.00" y="190.50">0x7fbac77c1fa..</text></g><g><title>0x7fbac77d1540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="700" y="196" width="10" height="15" fill="rgb(252,222,17)"/><text x="703.00" y="206.50"></text></g><g><title>0x7fbac77a62f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="700" y="212" width="10" height="15" fill="rgb(212,164,25)"/><text x="703.00" y="222.50"></text></g><g><title>0x7fbac77a5570 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="705" y="228" width="5" height="15" fill="rgb(239,26,25)"/><text x="708.00" y="238.50"></text></g><g><title>0x7fbac77c205a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.31%)</title><rect x="710" y="180" width="16" height="15" fill="rgb(244,70,42)"/><text x="713.00" y="190.50"></text></g><g><title>array_take (methods.c) (3 samples, 1.31%)</title><rect x="710" y="196" width="16" height="15" fill="rgb(220,179,31)"/><text x="713.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (3 samples, 1.31%)</title><rect x="710" y="212" width="16" height="15" fill="rgb(243,227,17)"/><text x="713.00" y="222.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (2 samples, 0.87%)</title><rect x="715" y="228" width="11" height="15" fill="rgb(222,156,36)"/><text x="718.00" y="238.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.44%)</title><rect x="721" y="244" width="5" height="15" fill="rgb(240,2,4)"/><text x="724.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.44%)</title><rect x="721" y="260" width="5" height="15" fill="rgb(233,40,22)"/><text x="724.00" y="270.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.44%)</title><rect x="721" y="276" width="5" height="15" fill="rgb(209,85,23)"/><text x="724.00" y="286.50"></text></g><g><title>0x7fbac77c213a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="726" y="180" width="5" height="15" fill="rgb(206,31,33)"/><text x="729.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.44%)</title><rect x="726" y="196" width="5" height="15" fill="rgb(232,24,32)"/><text x="729.00" y="206.50"></text></g><g><title>0x7fbac77c214f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="731" y="180" width="5" height="15" fill="rgb(253,172,44)"/><text x="734.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.44%)</title><rect x="731" y="196" width="5" height="15" fill="rgb(251,126,6)"/><text x="734.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.44%)</title><rect x="731" y="212" width="5" height="15" fill="rgb(245,116,36)"/><text x="734.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.44%)</title><rect x="731" y="228" width="5" height="15" fill="rgb(238,192,8)"/><text x="734.00" y="238.50"></text></g><g><title>0x7fbac77c218f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="736" y="180" width="5" height="15" fill="rgb(211,45,48)"/><text x="739.00" y="190.50"></text></g><g><title>0x7fbaec379a80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="741" y="212" width="5" height="15" fill="rgb(224,211,29)"/><text x="744.00" y="222.50"></text></g><g><title>0x7fbac77c2d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (31 samples, 13.54%)</title><rect x="592" y="164" width="160" height="15" fill="rgb(248,200,21)"/><text x="595.00" y="174.50">0x7fbac77c2d2e (skle..</text></g><g><title>0x7fbac77c21bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="741" y="180" width="11" height="15" fill="rgb(225,62,45)"/><text x="744.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (2 samples, 0.87%)</title><rect x="741" y="196" width="11" height="15" fill="rgb(228,85,27)"/><text x="744.00" y="206.50"></text></g><g><title>0x7fbaed17714e (libc-2.29.so) (1 samples, 0.44%)</title><rect x="746" y="212" width="6" height="15" fill="rgb(224,190,35)"/><text x="749.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.44%)</title><rect x="865" y="196" width="5" height="15" fill="rgb(218,40,4)"/><text x="868.00" y="206.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 1.31%)</title><rect x="870" y="196" width="15" height="15" fill="rgb(237,54,38)"/><text x="873.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (4 samples, 1.75%)</title><rect x="885" y="196" width="21" height="15" fill="rgb(232,138,11)"/><text x="888.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.18%)</title><rect x="937" y="212" width="26" height="15" fill="rgb(245,116,7)"/><text x="940.00" y="222.50">_..</text></g><g><title>0x7fbaed16ce7a (libc-2.29.so) (1 samples, 0.44%)</title><rect x="958" y="228" width="5" height="15" fill="rgb(207,20,12)"/><text x="961.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (13 samples, 5.68%)</title><rect x="906" y="196" width="67" height="15" fill="rgb(216,36,51)"/><text x="909.00" y="206.50">_assert..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.87%)</title><rect x="963" y="212" width="10" height="15" fill="rgb(240,178,33)"/><text x="966.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.44%)</title><rect x="973" y="196" width="5" height="15" fill="rgb(250,167,13)"/><text x="976.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (7 samples, 3.06%)</title><rect x="978" y="196" width="36" height="15" fill="rgb(245,196,37)"/><text x="981.00" y="206.50">_nu..</text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.44%)</title><rect x="1014" y="196" width="5" height="15" fill="rgb(210,151,39)"/><text x="1017.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.87%)</title><rect x="1019" y="196" width="11" height="15" fill="rgb(236,163,44)"/><text x="1022.00" y="206.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (63 samples, 27.51%)</title><rect x="752" y="164" width="324" height="15" fill="rgb(243,205,21)"/><text x="755.00" y="174.50">_validate_X_predict (sklearn/tree/_classes...</text></g><g><title>check_array (sklearn/utils/validation.py) (58 samples, 25.33%)</title><rect x="777" y="180" width="299" height="15" fill="rgb(231,228,34)"/><text x="780.00" y="190.50">check_array (sklearn/utils/validation.py)</text></g><g><title>simplefilter (warnings.py) (9 samples, 3.93%)</title><rect x="1030" y="196" width="46" height="15" fill="rgb(205,7,45)"/><text x="1033.00" y="206.50">simp..</text></g><g><title>_add_filter (warnings.py) (6 samples, 2.62%)</title><rect x="1045" y="212" width="31" height="15" fill="rgb(219,26,41)"/><text x="1048.00" y="222.50">_a..</text></g><g><title>0x7fbaed16ce54 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="1071" y="228" width="5" height="15" fill="rgb(213,162,29)"/><text x="1074.00" y="238.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.44%)</title><rect x="1076" y="164" width="5" height="15" fill="rgb(229,36,33)"/><text x="1079.00" y="174.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.44%)</title><rect x="1076" y="180" width="5" height="15" fill="rgb(219,10,28)"/><text x="1079.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.44%)</title><rect x="1076" y="196" width="5" height="15" fill="rgb(254,90,0)"/><text x="1079.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.44%)</title><rect x="1076" y="212" width="5" height="15" fill="rgb(242,169,53)"/><text x="1079.00" y="222.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.44%)</title><rect x="1076" y="228" width="5" height="15" fill="rgb(222,154,0)"/><text x="1079.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.87%)</title><rect x="1148" y="196" width="11" height="15" fill="rgb(244,162,31)"/><text x="1151.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (121 samples, 52.84%)</title><rect x="551" y="132" width="623" height="15" fill="rgb(206,126,28)"/><text x="554.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/tree/_classes.py) (119 samples, 51.97%)</title><rect x="561" y="148" width="613" height="15" fill="rgb(213,30,34)"/><text x="564.00" y="158.50">predict (sklearn/tree/_classes.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (18 samples, 7.86%)</title><rect x="1081" y="164" width="93" height="15" fill="rgb(220,119,1)"/><text x="1084.00" y="174.50">check_is_fi..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (13 samples, 5.68%)</title><rect x="1107" y="180" width="67" height="15" fill="rgb(236,65,37)"/><text x="1110.00" y="190.50">&lt;listco..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 1.31%)</title><rect x="1159" y="196" width="15" height="15" fill="rgb(242,194,37)"/><text x="1162.00" y="206.50"></text></g><g><title>unicode_concatenate (python3.7) (2 samples, 0.87%)</title><rect x="1174" y="132" width="10" height="15" fill="rgb(208,70,22)"/><text x="1177.00" y="142.50"></text></g><g><title>all (229 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(239,148,16)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py) (229 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(212,199,43)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py) (129 samples, 56.33%)</title><rect x="525" y="68" width="665" height="15" fill="rgb(212,152,39)"/><text x="528.00" y="78.50">profile_skl (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py) (129 samples, 56.33%)</title><rect x="525" y="84" width="665" height="15" fill="rgb(208,182,23)"/><text x="528.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py) (129 samples, 56.33%)</title><rect x="525" y="100" width="665" height="15" fill="rgb(242,127,43)"/><text x="528.00" y="110.50">profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (127 samples, 55.46%)</title><rect x="535" y="116" width="655" height="15" fill="rgb(215,228,17)"/><text x="538.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.44%)</title><rect x="1184" y="132" width="6" height="15" fill="rgb(253,79,33)"/><text x="1187.00" y="142.50"></text></g><g><title>0x7fbaed234e72 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="1184" y="148" width="6" height="15" fill="rgb(241,200,43)"/><text x="1187.00" y="158.50"></text></g></g></svg>