<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1814" onload="init(evt)" viewBox="0 0 1200 1814" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1814" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1797.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1797.00"> </text><g id="frames"><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py:54) (1 samples, 0.30%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(250,152,24)"/><text x="13.00" y="958.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:69) (1 samples, 0.30%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(249,196,40)"/><text x="13.00" y="974.50"></text></g><g><title>&lt;lambda&gt; (pkg_resources/_vendor/packaging/version.py:54) (1 samples, 0.30%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(224,61,5)"/><text x="13.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.30%)</title><rect x="13" y="996" width="4" height="15" fill="rgb(251,127,11)"/><text x="16.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.30%)</title><rect x="13" y="1012" width="4" height="15" fill="rgb(220,133,46)"/><text x="16.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:121) (1 samples, 0.30%)</title><rect x="13" y="1028" width="4" height="15" fill="rgb(250,155,50)"/><text x="16.00" y="1038.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.30%)</title><rect x="13" y="1044" width="4" height="15" fill="rgb(249,160,51)"/><text x="16.00" y="1054.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (3 samples, 0.91%)</title><rect x="10" y="916" width="10" height="15" fill="rgb(242,49,40)"/><text x="13.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (3 samples, 0.91%)</title><rect x="10" y="932" width="10" height="15" fill="rgb(222,219,49)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.61%)</title><rect x="13" y="948" width="7" height="15" fill="rgb(207,101,12)"/><text x="16.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.61%)</title><rect x="13" y="964" width="7" height="15" fill="rgb(229,72,39)"/><text x="16.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (2 samples, 0.61%)</title><rect x="13" y="980" width="7" height="15" fill="rgb(216,210,53)"/><text x="16.00" y="990.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.30%)</title><rect x="17" y="996" width="3" height="15" fill="rgb(210,64,44)"/><text x="20.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (4 samples, 1.22%)</title><rect x="10" y="852" width="14" height="15" fill="rgb(249,144,27)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (4 samples, 1.22%)</title><rect x="10" y="868" width="14" height="15" fill="rgb(216,25,27)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (4 samples, 1.22%)</title><rect x="10" y="884" width="14" height="15" fill="rgb(241,133,34)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (4 samples, 1.22%)</title><rect x="10" y="900" width="14" height="15" fill="rgb(205,74,40)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2063) (1 samples, 0.30%)</title><rect x="20" y="916" width="4" height="15" fill="rgb(250,203,48)"/><text x="23.00" y="926.50"></text></g><g><title>join (posixpath.py:89) (1 samples, 0.30%)</title><rect x="20" y="932" width="4" height="15" fill="rgb(210,63,32)"/><text x="23.00" y="942.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.30%)</title><rect x="20" y="948" width="4" height="15" fill="rgb(246,154,45)"/><text x="23.00" y="958.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2064) (1 samples, 0.30%)</title><rect x="24" y="884" width="3" height="15" fill="rgb(247,91,13)"/><text x="27.00" y="894.50"></text></g><g><title>dist_factory (pkg_resources/__init__.py:2077) (1 samples, 0.30%)</title><rect x="24" y="900" width="3" height="15" fill="rgb(245,221,22)"/><text x="27.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (6 samples, 1.83%)</title><rect x="10" y="820" width="21" height="15" fill="rgb(210,161,20)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (6 samples, 1.83%)</title><rect x="10" y="836" width="21" height="15" fill="rgb(244,202,8)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.61%)</title><rect x="24" y="852" width="7" height="15" fill="rgb(216,78,30)"/><text x="27.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.61%)</title><rect x="24" y="868" width="7" height="15" fill="rgb(248,135,40)"/><text x="27.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.30%)</title><rect x="27" y="884" width="4" height="15" fill="rgb(248,40,43)"/><text x="30.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.30%)</title><rect x="27" y="900" width="4" height="15" fill="rgb(235,116,10)"/><text x="30.00" y="910.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_b_reg.py:2) (7 samples, 2.13%)</title><rect x="10" y="148" width="25" height="15" fill="rgb(253,137,37)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.13%)</title><rect x="10" y="164" width="25" height="15" fill="rgb(227,12,9)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.13%)</title><rect x="10" y="180" width="25" height="15" fill="rgb(205,115,54)"/><text x="13.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.13%)</title><rect x="10" y="196" width="25" height="15" fill="rgb(242,60,4)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.13%)</title><rect x="10" y="212" width="25" height="15" fill="rgb(242,21,46)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.13%)</title><rect x="10" y="228" width="25" height="15" fill="rgb(228,57,47)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.13%)</title><rect x="10" y="244" width="25" height="15" fill="rgb(231,134,18)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.13%)</title><rect x="10" y="260" width="25" height="15" fill="rgb(247,122,18)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.13%)</title><rect x="10" y="276" width="25" height="15" fill="rgb(228,185,4)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (7 samples, 2.13%)</title><rect x="10" y="292" width="25" height="15" fill="rgb(232,223,35)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.13%)</title><rect x="10" y="308" width="25" height="15" fill="rgb(207,56,19)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.13%)</title><rect x="10" y="324" width="25" height="15" fill="rgb(218,172,15)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.13%)</title><rect x="10" y="340" width="25" height="15" fill="rgb(247,201,48)"/><text x="13.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.13%)</title><rect x="10" y="356" width="25" height="15" fill="rgb(242,226,40)"/><text x="13.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.13%)</title><rect x="10" y="372" width="25" height="15" fill="rgb(218,94,11)"/><text x="13.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (7 samples, 2.13%)</title><rect x="10" y="388" width="25" height="15" fill="rgb(223,56,5)"/><text x="13.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.13%)</title><rect x="10" y="404" width="25" height="15" fill="rgb(237,68,24)"/><text x="13.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.13%)</title><rect x="10" y="420" width="25" height="15" fill="rgb(219,202,49)"/><text x="13.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.13%)</title><rect x="10" y="436" width="25" height="15" fill="rgb(248,47,51)"/><text x="13.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.13%)</title><rect x="10" y="452" width="25" height="15" fill="rgb(247,163,50)"/><text x="13.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.13%)</title><rect x="10" y="468" width="25" height="15" fill="rgb(252,135,40)"/><text x="13.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (7 samples, 2.13%)</title><rect x="10" y="484" width="25" height="15" fill="rgb(223,85,44)"/><text x="13.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.13%)</title><rect x="10" y="500" width="25" height="15" fill="rgb(247,187,0)"/><text x="13.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.13%)</title><rect x="10" y="516" width="25" height="15" fill="rgb(250,197,34)"/><text x="13.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.13%)</title><rect x="10" y="532" width="25" height="15" fill="rgb(254,74,22)"/><text x="13.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.13%)</title><rect x="10" y="548" width="25" height="15" fill="rgb(210,4,13)"/><text x="13.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.13%)</title><rect x="10" y="564" width="25" height="15" fill="rgb(216,42,45)"/><text x="13.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (7 samples, 2.13%)</title><rect x="10" y="580" width="25" height="15" fill="rgb(220,139,19)"/><text x="13.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.13%)</title><rect x="10" y="596" width="25" height="15" fill="rgb(224,110,12)"/><text x="13.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.13%)</title><rect x="10" y="612" width="25" height="15" fill="rgb(233,63,34)"/><text x="13.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.13%)</title><rect x="10" y="628" width="25" height="15" fill="rgb(220,174,19)"/><text x="13.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.13%)</title><rect x="10" y="644" width="25" height="15" fill="rgb(249,159,6)"/><text x="13.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.13%)</title><rect x="10" y="660" width="25" height="15" fill="rgb(231,77,42)"/><text x="13.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.13%)</title><rect x="10" y="676" width="25" height="15" fill="rgb(234,117,42)"/><text x="13.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.13%)</title><rect x="10" y="692" width="25" height="15" fill="rgb(211,7,31)"/><text x="13.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.13%)</title><rect x="10" y="708" width="25" height="15" fill="rgb(210,16,38)"/><text x="13.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (7 samples, 2.13%)</title><rect x="10" y="724" width="25" height="15" fill="rgb(253,216,43)"/><text x="13.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.13%)</title><rect x="10" y="740" width="25" height="15" fill="rgb(254,214,16)"/><text x="13.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.13%)</title><rect x="10" y="756" width="25" height="15" fill="rgb(227,24,22)"/><text x="13.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.13%)</title><rect x="10" y="772" width="25" height="15" fill="rgb(243,122,32)"/><text x="13.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.13%)</title><rect x="10" y="788" width="25" height="15" fill="rgb(234,78,4)"/><text x="13.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.13%)</title><rect x="10" y="804" width="25" height="15" fill="rgb(246,8,14)"/><text x="13.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.30%)</title><rect x="31" y="820" width="4" height="15" fill="rgb(230,136,9)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="31" y="836" width="4" height="15" fill="rgb(216,194,48)"/><text x="34.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="31" y="852" width="4" height="15" fill="rgb(222,137,54)"/><text x="34.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="31" y="868" width="4" height="15" fill="rgb(230,36,44)"/><text x="34.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="31" y="884" width="4" height="15" fill="rgb(221,92,29)"/><text x="34.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="31" y="900" width="4" height="15" fill="rgb(235,158,45)"/><text x="34.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.30%)</title><rect x="31" y="916" width="4" height="15" fill="rgb(237,187,0)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="31" y="932" width="4" height="15" fill="rgb(234,158,26)"/><text x="34.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="31" y="948" width="4" height="15" fill="rgb(210,175,50)"/><text x="34.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.30%)</title><rect x="31" y="964" width="4" height="15" fill="rgb(252,56,31)"/><text x="34.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.30%)</title><rect x="31" y="980" width="4" height="15" fill="rgb(227,74,14)"/><text x="34.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.30%)</title><rect x="31" y="996" width="4" height="15" fill="rgb(229,165,12)"/><text x="34.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="31" y="1012" width="4" height="15" fill="rgb(206,145,36)"/><text x="34.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="31" y="1028" width="4" height="15" fill="rgb(241,100,47)"/><text x="34.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="31" y="1044" width="4" height="15" fill="rgb(221,186,22)"/><text x="34.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="31" y="1060" width="4" height="15" fill="rgb(234,93,16)"/><text x="34.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="31" y="1076" width="4" height="15" fill="rgb(232,96,27)"/><text x="34.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:5399) (1 samples, 0.30%)</title><rect x="31" y="1092" width="4" height="15" fill="rgb(224,127,34)"/><text x="34.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py:5565) (1 samples, 0.30%)</title><rect x="31" y="1108" width="4" height="15" fill="rgb(217,217,8)"/><text x="34.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2792) (1 samples, 0.30%)</title><rect x="31" y="1124" width="4" height="15" fill="rgb(238,19,46)"/><text x="34.00" y="1134.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.30%)</title><rect x="31" y="1140" width="4" height="15" fill="rgb(234,114,50)"/><text x="34.00" y="1150.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.30%)</title><rect x="31" y="1156" width="4" height="15" fill="rgb(252,31,35)"/><text x="34.00" y="1166.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.30%)</title><rect x="31" y="1172" width="4" height="15" fill="rgb(248,207,3)"/><text x="34.00" y="1182.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.30%)</title><rect x="31" y="1188" width="4" height="15" fill="rgb(205,124,25)"/><text x="34.00" y="1198.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.30%)</title><rect x="31" y="1204" width="4" height="15" fill="rgb(245,99,36)"/><text x="34.00" y="1214.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.30%)</title><rect x="31" y="1220" width="4" height="15" fill="rgb(209,73,40)"/><text x="34.00" y="1230.50"></text></g><g><title>_compile (sre_compile.py:140) (1 samples, 0.30%)</title><rect x="31" y="1236" width="4" height="15" fill="rgb(250,200,12)"/><text x="34.00" y="1246.50"></text></g><g><title>_simple (sre_compile.py:428) (1 samples, 0.30%)</title><rect x="31" y="1252" width="4" height="15" fill="rgb(253,145,47)"/><text x="34.00" y="1262.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_b_reg.py:4) (1 samples, 0.30%)</title><rect x="35" y="148" width="3" height="15" fill="rgb(213,20,18)"/><text x="38.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="35" y="164" width="3" height="15" fill="rgb(222,179,45)"/><text x="38.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.30%)</title><rect x="35" y="180" width="3" height="15" fill="rgb(219,25,1)"/><text x="38.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="35" y="196" width="3" height="15" fill="rgb(235,176,10)"/><text x="38.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="35" y="212" width="3" height="15" fill="rgb(246,114,51)"/><text x="38.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="35" y="228" width="3" height="15" fill="rgb(250,22,45)"/><text x="38.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="35" y="244" width="3" height="15" fill="rgb(222,8,13)"/><text x="38.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="35" y="260" width="3" height="15" fill="rgb(219,65,35)"/><text x="38.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="35" y="276" width="3" height="15" fill="rgb(251,48,42)"/><text x="38.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.30%)</title><rect x="35" y="292" width="3" height="15" fill="rgb(230,229,28)"/><text x="38.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="35" y="308" width="3" height="15" fill="rgb(212,7,21)"/><text x="38.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="35" y="324" width="3" height="15" fill="rgb(253,98,53)"/><text x="38.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="35" y="340" width="3" height="15" fill="rgb(223,127,5)"/><text x="38.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="35" y="356" width="3" height="15" fill="rgb(233,111,10)"/><text x="38.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="35" y="372" width="3" height="15" fill="rgb(254,33,0)"/><text x="38.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.30%)</title><rect x="35" y="388" width="3" height="15" fill="rgb(207,145,16)"/><text x="38.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="35" y="404" width="3" height="15" fill="rgb(250,54,34)"/><text x="38.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="35" y="420" width="3" height="15" fill="rgb(233,101,16)"/><text x="38.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="35" y="436" width="3" height="15" fill="rgb(231,181,2)"/><text x="38.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="35" y="452" width="3" height="15" fill="rgb(232,137,29)"/><text x="38.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="35" y="468" width="3" height="15" fill="rgb(223,108,0)"/><text x="38.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.30%)</title><rect x="35" y="484" width="3" height="15" fill="rgb(253,177,21)"/><text x="38.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="35" y="500" width="3" height="15" fill="rgb(223,221,52)"/><text x="38.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="35" y="516" width="3" height="15" fill="rgb(234,9,49)"/><text x="38.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="35" y="532" width="3" height="15" fill="rgb(234,20,49)"/><text x="38.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="35" y="548" width="3" height="15" fill="rgb(236,209,53)"/><text x="38.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="35" y="564" width="3" height="15" fill="rgb(227,143,34)"/><text x="38.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.30%)</title><rect x="35" y="580" width="3" height="15" fill="rgb(205,55,12)"/><text x="38.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="35" y="596" width="3" height="15" fill="rgb(205,214,50)"/><text x="38.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="35" y="612" width="3" height="15" fill="rgb(227,50,18)"/><text x="38.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="35" y="628" width="3" height="15" fill="rgb(228,199,24)"/><text x="38.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="35" y="644" width="3" height="15" fill="rgb(218,14,16)"/><text x="38.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="35" y="660" width="3" height="15" fill="rgb(244,152,18)"/><text x="38.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.30%)</title><rect x="35" y="676" width="3" height="15" fill="rgb(251,181,5)"/><text x="38.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="35" y="692" width="3" height="15" fill="rgb(246,13,17)"/><text x="38.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="35" y="708" width="3" height="15" fill="rgb(247,67,35)"/><text x="38.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="35" y="724" width="3" height="15" fill="rgb(209,80,16)"/><text x="38.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="35" y="740" width="3" height="15" fill="rgb(254,94,53)"/><text x="38.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="35" y="756" width="3" height="15" fill="rgb(247,48,19)"/><text x="38.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.30%)</title><rect x="35" y="772" width="3" height="15" fill="rgb(218,11,34)"/><text x="38.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="35" y="788" width="3" height="15" fill="rgb(253,101,36)"/><text x="38.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="35" y="804" width="3" height="15" fill="rgb(250,79,1)"/><text x="38.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="35" y="820" width="3" height="15" fill="rgb(211,9,37)"/><text x="38.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="35" y="836" width="3" height="15" fill="rgb(254,55,17)"/><text x="38.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="35" y="852" width="3" height="15" fill="rgb(211,72,39)"/><text x="38.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="35" y="868" width="3" height="15" fill="rgb(219,158,4)"/><text x="38.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="35" y="884" width="3" height="15" fill="rgb(205,56,49)"/><text x="38.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.30%)</title><rect x="35" y="900" width="3" height="15" fill="rgb(244,84,42)"/><text x="38.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="35" y="916" width="3" height="15" fill="rgb(245,206,23)"/><text x="38.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="35" y="932" width="3" height="15" fill="rgb(253,16,0)"/><text x="38.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="35" y="948" width="3" height="15" fill="rgb(223,176,6)"/><text x="38.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="35" y="964" width="3" height="15" fill="rgb(235,153,22)"/><text x="38.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="35" y="980" width="3" height="15" fill="rgb(228,4,14)"/><text x="38.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.30%)</title><rect x="35" y="996" width="3" height="15" fill="rgb(252,202,32)"/><text x="38.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="35" y="1012" width="3" height="15" fill="rgb(239,220,20)"/><text x="38.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="35" y="1028" width="3" height="15" fill="rgb(205,64,24)"/><text x="38.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="35" y="1044" width="3" height="15" fill="rgb(214,62,18)"/><text x="38.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="35" y="1060" width="3" height="15" fill="rgb(242,15,7)"/><text x="38.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="35" y="1076" width="3" height="15" fill="rgb(249,209,5)"/><text x="38.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="35" y="1092" width="3" height="15" fill="rgb(247,120,22)"/><text x="38.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="35" y="1108" width="3" height="15" fill="rgb(208,225,34)"/><text x="38.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:392) (1 samples, 0.30%)</title><rect x="35" y="1124" width="3" height="15" fill="rgb(226,46,34)"/><text x="38.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="35" y="1140" width="3" height="15" fill="rgb(249,15,38)"/><text x="38.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="35" y="1156" width="3" height="15" fill="rgb(240,180,20)"/><text x="38.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="35" y="1172" width="3" height="15" fill="rgb(215,197,47)"/><text x="38.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="35" y="1188" width="3" height="15" fill="rgb(242,104,36)"/><text x="38.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="35" y="1204" width="3" height="15" fill="rgb(214,122,35)"/><text x="38.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_root.py:20) (1 samples, 0.30%)</title><rect x="35" y="1220" width="3" height="15" fill="rgb(254,60,50)"/><text x="38.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="35" y="1236" width="3" height="15" fill="rgb(235,64,13)"/><text x="38.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="35" y="1252" width="3" height="15" fill="rgb(215,159,10)"/><text x="38.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="35" y="1268" width="3" height="15" fill="rgb(216,209,51)"/><text x="38.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.30%)</title><rect x="35" y="1284" width="3" height="15" fill="rgb(241,206,4)"/><text x="38.00" y="1294.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:827) (1 samples, 0.30%)</title><rect x="35" y="1300" width="3" height="15" fill="rgb(244,161,44)"/><text x="38.00" y="1310.50"></text></g><g><title>_classify_pyc (&lt;frozen importlib._bootstrap_external&gt;:459) (1 samples, 0.30%)</title><rect x="35" y="1316" width="3" height="15" fill="rgb(222,223,32)"/><text x="38.00" y="1326.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.61%)</title><rect x="38" y="244" width="7" height="15" fill="rgb(207,74,30)"/><text x="41.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="38" y="260" width="7" height="15" fill="rgb(219,102,30)"/><text x="41.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="38" y="276" width="7" height="15" fill="rgb(213,2,6)"/><text x="41.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="38" y="292" width="7" height="15" fill="rgb(213,167,17)"/><text x="41.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="38" y="308" width="7" height="15" fill="rgb(240,47,51)"/><text x="41.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="38" y="324" width="7" height="15" fill="rgb(233,170,5)"/><text x="41.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.61%)</title><rect x="38" y="340" width="7" height="15" fill="rgb(229,1,38)"/><text x="41.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="38" y="356" width="7" height="15" fill="rgb(246,206,16)"/><text x="41.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.61%)</title><rect x="38" y="372" width="7" height="15" fill="rgb(253,106,16)"/><text x="41.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="38" y="388" width="7" height="15" fill="rgb(230,212,44)"/><text x="41.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="38" y="404" width="7" height="15" fill="rgb(229,150,23)"/><text x="41.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="38" y="420" width="7" height="15" fill="rgb(225,74,46)"/><text x="41.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="38" y="436" width="7" height="15" fill="rgb(233,36,16)"/><text x="41.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="38" y="452" width="7" height="15" fill="rgb(243,160,20)"/><text x="41.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="38" y="468" width="7" height="15" fill="rgb(222,199,6)"/><text x="41.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (2 samples, 0.61%)</title><rect x="38" y="484" width="7" height="15" fill="rgb(245,178,4)"/><text x="41.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="38" y="500" width="7" height="15" fill="rgb(228,206,13)"/><text x="41.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="38" y="516" width="7" height="15" fill="rgb(229,184,13)"/><text x="41.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="38" y="532" width="7" height="15" fill="rgb(208,45,53)"/><text x="41.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="38" y="548" width="7" height="15" fill="rgb(218,201,27)"/><text x="41.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="38" y="564" width="7" height="15" fill="rgb(211,72,23)"/><text x="41.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (2 samples, 0.61%)</title><rect x="38" y="580" width="7" height="15" fill="rgb(249,84,20)"/><text x="41.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="38" y="596" width="7" height="15" fill="rgb(213,183,1)"/><text x="41.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.61%)</title><rect x="38" y="612" width="7" height="15" fill="rgb(237,133,46)"/><text x="41.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="38" y="628" width="7" height="15" fill="rgb(253,155,9)"/><text x="41.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="38" y="644" width="7" height="15" fill="rgb(241,134,25)"/><text x="41.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="38" y="660" width="7" height="15" fill="rgb(253,207,33)"/><text x="41.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="38" y="676" width="7" height="15" fill="rgb(222,27,10)"/><text x="41.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="38" y="692" width="7" height="15" fill="rgb(234,98,36)"/><text x="41.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="38" y="708" width="7" height="15" fill="rgb(251,209,42)"/><text x="41.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (2 samples, 0.61%)</title><rect x="38" y="724" width="7" height="15" fill="rgb(212,93,10)"/><text x="41.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="38" y="740" width="7" height="15" fill="rgb(212,47,52)"/><text x="41.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="38" y="756" width="7" height="15" fill="rgb(225,58,23)"/><text x="41.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="38" y="772" width="7" height="15" fill="rgb(223,114,33)"/><text x="41.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="38" y="788" width="7" height="15" fill="rgb(207,138,24)"/><text x="41.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="38" y="804" width="7" height="15" fill="rgb(215,221,24)"/><text x="41.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (2 samples, 0.61%)</title><rect x="38" y="820" width="7" height="15" fill="rgb(252,82,12)"/><text x="41.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="38" y="836" width="7" height="15" fill="rgb(234,11,16)"/><text x="41.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="38" y="852" width="7" height="15" fill="rgb(219,75,19)"/><text x="41.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="38" y="868" width="7" height="15" fill="rgb(218,31,8)"/><text x="41.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="38" y="884" width="7" height="15" fill="rgb(253,41,5)"/><text x="41.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="38" y="900" width="7" height="15" fill="rgb(247,228,32)"/><text x="41.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (2 samples, 0.61%)</title><rect x="38" y="916" width="7" height="15" fill="rgb(242,60,32)"/><text x="41.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="38" y="932" width="7" height="15" fill="rgb(228,128,25)"/><text x="41.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.61%)</title><rect x="38" y="948" width="7" height="15" fill="rgb(239,21,43)"/><text x="41.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="38" y="964" width="7" height="15" fill="rgb(248,41,10)"/><text x="41.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="38" y="980" width="7" height="15" fill="rgb(243,224,43)"/><text x="41.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="38" y="996" width="7" height="15" fill="rgb(246,190,42)"/><text x="41.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="38" y="1012" width="7" height="15" fill="rgb(250,9,33)"/><text x="41.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="38" y="1028" width="7" height="15" fill="rgb(206,99,43)"/><text x="41.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="38" y="1044" width="7" height="15" fill="rgb(243,77,54)"/><text x="41.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:8) (2 samples, 0.61%)</title><rect x="38" y="1060" width="7" height="15" fill="rgb(240,113,40)"/><text x="41.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="38" y="1076" width="7" height="15" fill="rgb(205,38,42)"/><text x="41.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="38" y="1092" width="7" height="15" fill="rgb(249,209,39)"/><text x="41.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="38" y="1108" width="7" height="15" fill="rgb(233,74,36)"/><text x="41.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (2 samples, 0.61%)</title><rect x="38" y="1124" width="7" height="15" fill="rgb(206,167,17)"/><text x="41.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:828) (2 samples, 0.61%)</title><rect x="38" y="1140" width="7" height="15" fill="rgb(208,79,20)"/><text x="41.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:127) (1 samples, 0.30%)</title><rect x="45" y="628" width="4" height="15" fill="rgb(205,64,14)"/><text x="48.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="45" y="644" width="4" height="15" fill="rgb(208,123,18)"/><text x="48.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="45" y="660" width="4" height="15" fill="rgb(222,53,26)"/><text x="48.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="45" y="676" width="4" height="15" fill="rgb(254,26,7)"/><text x="48.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="45" y="692" width="4" height="15" fill="rgb(214,178,11)"/><text x="48.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="45" y="708" width="4" height="15" fill="rgb(220,213,21)"/><text x="48.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/api.py:3) (1 samples, 0.30%)</title><rect x="45" y="724" width="4" height="15" fill="rgb(252,56,8)"/><text x="48.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="45" y="740" width="4" height="15" fill="rgb(222,40,13)"/><text x="48.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="45" y="756" width="4" height="15" fill="rgb(210,57,36)"/><text x="48.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="45" y="772" width="4" height="15" fill="rgb(209,222,7)"/><text x="48.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="45" y="788" width="4" height="15" fill="rgb(231,27,24)"/><text x="48.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="45" y="804" width="4" height="15" fill="rgb(252,115,4)"/><text x="48.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/eval.py:12) (1 samples, 0.30%)</title><rect x="45" y="820" width="4" height="15" fill="rgb(224,22,28)"/><text x="48.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="45" y="836" width="4" height="15" fill="rgb(231,161,52)"/><text x="48.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="45" y="852" width="4" height="15" fill="rgb(221,92,5)"/><text x="48.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="45" y="868" width="4" height="15" fill="rgb(208,148,17)"/><text x="48.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="45" y="884" width="4" height="15" fill="rgb(237,114,51)"/><text x="48.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="45" y="900" width="4" height="15" fill="rgb(210,12,43)"/><text x="48.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/engines.py:7) (1 samples, 0.30%)</title><rect x="45" y="916" width="4" height="15" fill="rgb(240,164,1)"/><text x="48.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="45" y="932" width="4" height="15" fill="rgb(231,192,17)"/><text x="48.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="45" y="948" width="4" height="15" fill="rgb(248,195,31)"/><text x="48.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="45" y="964" width="4" height="15" fill="rgb(221,185,19)"/><text x="48.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="45" y="980" width="4" height="15" fill="rgb(237,199,35)"/><text x="48.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="45" y="996" width="4" height="15" fill="rgb(233,176,17)"/><text x="48.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/align.py:12) (1 samples, 0.30%)</title><rect x="45" y="1012" width="4" height="15" fill="rgb(214,93,41)"/><text x="48.00" y="1022.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;:202) (1 samples, 0.30%)</title><rect x="45" y="1028" width="4" height="15" fill="rgb(227,227,19)"/><text x="48.00" y="1038.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;:96) (1 samples, 0.30%)</title><rect x="45" y="1044" width="4" height="15" fill="rgb(230,195,34)"/><text x="48.00" y="1054.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.61%)</title><rect x="45" y="436" width="8" height="15" fill="rgb(223,160,13)"/><text x="48.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="45" y="452" width="8" height="15" fill="rgb(225,21,8)"/><text x="48.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="45" y="468" width="8" height="15" fill="rgb(247,225,20)"/><text x="48.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="45" y="484" width="8" height="15" fill="rgb(245,22,16)"/><text x="48.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="45" y="500" width="8" height="15" fill="rgb(215,126,44)"/><text x="48.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="45" y="516" width="8" height="15" fill="rgb(212,19,49)"/><text x="48.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.61%)</title><rect x="45" y="532" width="8" height="15" fill="rgb(231,119,45)"/><text x="48.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="45" y="548" width="8" height="15" fill="rgb(237,220,54)"/><text x="48.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="45" y="564" width="8" height="15" fill="rgb(227,50,35)"/><text x="48.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="45" y="580" width="8" height="15" fill="rgb(233,197,29)"/><text x="48.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="45" y="596" width="8" height="15" fill="rgb(234,84,48)"/><text x="48.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="45" y="612" width="8" height="15" fill="rgb(237,86,36)"/><text x="48.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.30%)</title><rect x="49" y="628" width="4" height="15" fill="rgb(216,205,34)"/><text x="52.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="49" y="644" width="4" height="15" fill="rgb(250,23,12)"/><text x="52.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="49" y="660" width="4" height="15" fill="rgb(235,166,42)"/><text x="52.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="49" y="676" width="4" height="15" fill="rgb(242,61,31)"/><text x="52.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="49" y="692" width="4" height="15" fill="rgb(237,92,50)"/><text x="52.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="49" y="708" width="4" height="15" fill="rgb(249,193,27)"/><text x="52.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.30%)</title><rect x="49" y="724" width="4" height="15" fill="rgb(212,226,13)"/><text x="52.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="49" y="740" width="4" height="15" fill="rgb(227,144,34)"/><text x="52.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="49" y="756" width="4" height="15" fill="rgb(243,171,21)"/><text x="52.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="49" y="772" width="4" height="15" fill="rgb(209,133,11)"/><text x="52.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="49" y="788" width="4" height="15" fill="rgb(248,54,21)"/><text x="52.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="49" y="804" width="4" height="15" fill="rgb(213,2,7)"/><text x="52.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.30%)</title><rect x="49" y="820" width="4" height="15" fill="rgb(211,171,46)"/><text x="52.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="49" y="836" width="4" height="15" fill="rgb(233,30,26)"/><text x="52.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="49" y="852" width="4" height="15" fill="rgb(231,201,53)"/><text x="52.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="49" y="868" width="4" height="15" fill="rgb(211,170,41)"/><text x="52.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="49" y="884" width="4" height="15" fill="rgb(235,40,43)"/><text x="52.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="49" y="900" width="4" height="15" fill="rgb(217,36,41)"/><text x="52.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.30%)</title><rect x="49" y="916" width="4" height="15" fill="rgb(219,164,17)"/><text x="52.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="49" y="932" width="4" height="15" fill="rgb(233,45,42)"/><text x="52.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="49" y="948" width="4" height="15" fill="rgb(206,32,41)"/><text x="52.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="49" y="964" width="4" height="15" fill="rgb(232,37,49)"/><text x="52.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="49" y="980" width="4" height="15" fill="rgb(205,201,32)"/><text x="52.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="49" y="996" width="4" height="15" fill="rgb(224,115,39)"/><text x="52.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.30%)</title><rect x="49" y="1012" width="4" height="15" fill="rgb(250,2,5)"/><text x="52.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="49" y="1028" width="4" height="15" fill="rgb(214,73,6)"/><text x="52.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="49" y="1044" width="4" height="15" fill="rgb(246,114,2)"/><text x="52.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="49" y="1060" width="4" height="15" fill="rgb(243,120,2)"/><text x="52.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="49" y="1076" width="4" height="15" fill="rgb(234,73,42)"/><text x="52.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="49" y="1092" width="4" height="15" fill="rgb(228,93,17)"/><text x="52.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.30%)</title><rect x="49" y="1108" width="4" height="15" fill="rgb(230,213,15)"/><text x="52.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="49" y="1124" width="4" height="15" fill="rgb(220,25,5)"/><text x="52.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="49" y="1140" width="4" height="15" fill="rgb(230,166,28)"/><text x="52.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="49" y="1156" width="4" height="15" fill="rgb(220,32,17)"/><text x="52.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="49" y="1172" width="4" height="15" fill="rgb(229,13,36)"/><text x="52.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="49" y="1188" width="4" height="15" fill="rgb(231,120,6)"/><text x="52.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.30%)</title><rect x="49" y="1204" width="4" height="15" fill="rgb(239,143,34)"/><text x="52.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="49" y="1220" width="4" height="15" fill="rgb(227,88,21)"/><text x="52.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="49" y="1236" width="4" height="15" fill="rgb(234,40,35)"/><text x="52.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="49" y="1252" width="4" height="15" fill="rgb(227,1,9)"/><text x="52.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="49" y="1268" width="4" height="15" fill="rgb(254,74,6)"/><text x="52.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="49" y="1284" width="4" height="15" fill="rgb(246,152,43)"/><text x="52.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.30%)</title><rect x="49" y="1300" width="4" height="15" fill="rgb(222,137,46)"/><text x="52.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="49" y="1316" width="4" height="15" fill="rgb(252,118,50)"/><text x="52.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="49" y="1332" width="4" height="15" fill="rgb(238,184,21)"/><text x="52.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="49" y="1348" width="4" height="15" fill="rgb(244,163,41)"/><text x="52.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="49" y="1364" width="4" height="15" fill="rgb(249,90,4)"/><text x="52.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="49" y="1380" width="4" height="15" fill="rgb(227,175,30)"/><text x="52.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.30%)</title><rect x="49" y="1396" width="4" height="15" fill="rgb(251,86,31)"/><text x="52.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="49" y="1412" width="4" height="15" fill="rgb(242,187,10)"/><text x="52.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="49" y="1428" width="4" height="15" fill="rgb(238,20,32)"/><text x="52.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="49" y="1444" width="4" height="15" fill="rgb(248,137,54)"/><text x="52.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="49" y="1460" width="4" height="15" fill="rgb(210,31,31)"/><text x="52.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="49" y="1476" width="4" height="15" fill="rgb(242,109,10)"/><text x="52.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.30%)</title><rect x="49" y="1492" width="4" height="15" fill="rgb(249,105,1)"/><text x="52.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="49" y="1508" width="4" height="15" fill="rgb(228,54,33)"/><text x="52.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.30%)</title><rect x="49" y="1524" width="4" height="15" fill="rgb(242,54,44)"/><text x="52.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="49" y="1540" width="4" height="15" fill="rgb(215,103,19)"/><text x="52.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="49" y="1556" width="4" height="15" fill="rgb(254,119,18)"/><text x="52.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="49" y="1572" width="4" height="15" fill="rgb(212,45,29)"/><text x="52.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="49" y="1588" width="4" height="15" fill="rgb(249,217,40)"/><text x="52.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="49" y="1604" width="4" height="15" fill="rgb(244,119,16)"/><text x="52.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="49" y="1620" width="4" height="15" fill="rgb(229,181,39)"/><text x="52.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.30%)</title><rect x="49" y="1636" width="4" height="15" fill="rgb(219,25,11)"/><text x="52.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="49" y="1652" width="4" height="15" fill="rgb(244,183,35)"/><text x="52.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="49" y="1668" width="4" height="15" fill="rgb(246,205,40)"/><text x="52.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="49" y="1684" width="4" height="15" fill="rgb(208,34,11)"/><text x="52.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="49" y="1700" width="4" height="15" fill="rgb(234,29,30)"/><text x="52.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="49" y="1716" width="4" height="15" fill="rgb(223,112,17)"/><text x="52.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.30%)</title><rect x="49" y="1732" width="4" height="15" fill="rgb(221,200,27)"/><text x="52.00" y="1742.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.30%)</title><rect x="49" y="1748" width="4" height="15" fill="rgb(215,19,30)"/><text x="52.00" y="1758.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.30%)</title><rect x="49" y="1764" width="4" height="15" fill="rgb(253,178,41)"/><text x="52.00" y="1774.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.30%)</title><rect x="53" y="1380" width="3" height="15" fill="rgb(239,14,54)"/><text x="56.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.30%)</title><rect x="53" y="1396" width="3" height="15" fill="rgb(249,88,52)"/><text x="56.00" y="1406.50"></text></g><g><title>0x7f6361d87902 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="53" y="1412" width="3" height="15" fill="rgb(240,175,29)"/><text x="56.00" y="1422.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 0.61%)</title><rect x="53" y="1108" width="7" height="15" fill="rgb(218,15,17)"/><text x="56.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="53" y="1124" width="7" height="15" fill="rgb(227,36,27)"/><text x="56.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="53" y="1140" width="7" height="15" fill="rgb(242,118,50)"/><text x="56.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="53" y="1156" width="7" height="15" fill="rgb(238,96,27)"/><text x="56.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="53" y="1172" width="7" height="15" fill="rgb(253,175,26)"/><text x="56.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="53" y="1188" width="7" height="15" fill="rgb(214,221,12)"/><text x="56.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (2 samples, 0.61%)</title><rect x="53" y="1204" width="7" height="15" fill="rgb(230,180,17)"/><text x="56.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="53" y="1220" width="7" height="15" fill="rgb(221,121,1)"/><text x="56.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="53" y="1236" width="7" height="15" fill="rgb(226,94,38)"/><text x="56.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="53" y="1252" width="7" height="15" fill="rgb(242,101,38)"/><text x="56.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="53" y="1268" width="7" height="15" fill="rgb(205,171,53)"/><text x="56.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="53" y="1284" width="7" height="15" fill="rgb(207,119,15)"/><text x="56.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (2 samples, 0.61%)</title><rect x="53" y="1300" width="7" height="15" fill="rgb(243,78,9)"/><text x="56.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (2 samples, 0.61%)</title><rect x="53" y="1316" width="7" height="15" fill="rgb(247,158,7)"/><text x="56.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (2 samples, 0.61%)</title><rect x="53" y="1332" width="7" height="15" fill="rgb(234,115,30)"/><text x="56.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (2 samples, 0.61%)</title><rect x="53" y="1348" width="7" height="15" fill="rgb(213,35,20)"/><text x="56.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (2 samples, 0.61%)</title><rect x="53" y="1364" width="7" height="15" fill="rgb(220,52,14)"/><text x="56.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:589) (1 samples, 0.30%)</title><rect x="56" y="1380" width="4" height="15" fill="rgb(212,68,38)"/><text x="59.00" y="1390.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1_50_12_float_.py:4) (15 samples, 4.57%)</title><rect x="10" y="52" width="53" height="15" fill="rgb(231,88,27)"/><text x="13.00" y="62.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 4.57%)</title><rect x="10" y="68" width="53" height="15" fill="rgb(235,29,32)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 4.57%)</title><rect x="10" y="84" width="53" height="15" fill="rgb(215,218,29)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 4.57%)</title><rect x="10" y="100" width="53" height="15" fill="rgb(208,200,37)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 4.57%)</title><rect x="10" y="116" width="53" height="15" fill="rgb(251,10,19)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 4.57%)</title><rect x="10" y="132" width="53" height="15" fill="rgb(226,153,45)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_b_reg.py:7) (7 samples, 2.13%)</title><rect x="38" y="148" width="25" height="15" fill="rgb(233,210,54)"/><text x="41.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.13%)</title><rect x="38" y="164" width="25" height="15" fill="rgb(217,107,45)"/><text x="41.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.13%)</title><rect x="38" y="180" width="25" height="15" fill="rgb(210,185,50)"/><text x="41.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.13%)</title><rect x="38" y="196" width="25" height="15" fill="rgb(253,12,53)"/><text x="41.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.13%)</title><rect x="38" y="212" width="25" height="15" fill="rgb(224,215,2)"/><text x="41.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.13%)</title><rect x="38" y="228" width="25" height="15" fill="rgb(248,49,38)"/><text x="41.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 1.52%)</title><rect x="45" y="244" width="18" height="15" fill="rgb(215,203,33)"/><text x="48.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.52%)</title><rect x="45" y="260" width="18" height="15" fill="rgb(247,69,51)"/><text x="48.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.52%)</title><rect x="45" y="276" width="18" height="15" fill="rgb(233,10,6)"/><text x="48.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.52%)</title><rect x="45" y="292" width="18" height="15" fill="rgb(208,158,1)"/><text x="48.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.52%)</title><rect x="45" y="308" width="18" height="15" fill="rgb(221,169,44)"/><text x="48.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.52%)</title><rect x="45" y="324" width="18" height="15" fill="rgb(242,9,15)"/><text x="48.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 1.52%)</title><rect x="45" y="340" width="18" height="15" fill="rgb(221,14,10)"/><text x="48.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.52%)</title><rect x="45" y="356" width="18" height="15" fill="rgb(233,161,18)"/><text x="48.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.52%)</title><rect x="45" y="372" width="18" height="15" fill="rgb(233,225,40)"/><text x="48.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.52%)</title><rect x="45" y="388" width="18" height="15" fill="rgb(246,86,26)"/><text x="48.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.52%)</title><rect x="45" y="404" width="18" height="15" fill="rgb(216,42,26)"/><text x="48.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.52%)</title><rect x="45" y="420" width="18" height="15" fill="rgb(210,78,41)"/><text x="48.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.91%)</title><rect x="53" y="436" width="10" height="15" fill="rgb(218,131,19)"/><text x="56.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="53" y="452" width="10" height="15" fill="rgb(211,155,27)"/><text x="56.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.91%)</title><rect x="53" y="468" width="10" height="15" fill="rgb(243,108,3)"/><text x="56.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="53" y="484" width="10" height="15" fill="rgb(208,195,3)"/><text x="56.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="53" y="500" width="10" height="15" fill="rgb(234,224,24)"/><text x="56.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="53" y="516" width="10" height="15" fill="rgb(242,164,38)"/><text x="56.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="53" y="532" width="10" height="15" fill="rgb(243,38,35)"/><text x="56.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="53" y="548" width="10" height="15" fill="rgb(252,36,16)"/><text x="56.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="53" y="564" width="10" height="15" fill="rgb(209,212,46)"/><text x="56.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.91%)</title><rect x="53" y="580" width="10" height="15" fill="rgb(220,14,35)"/><text x="56.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="53" y="596" width="10" height="15" fill="rgb(241,9,46)"/><text x="56.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="53" y="612" width="10" height="15" fill="rgb(220,131,21)"/><text x="56.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="53" y="628" width="10" height="15" fill="rgb(251,30,45)"/><text x="56.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="53" y="644" width="10" height="15" fill="rgb(212,18,3)"/><text x="56.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="53" y="660" width="10" height="15" fill="rgb(241,62,19)"/><text x="56.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.91%)</title><rect x="53" y="676" width="10" height="15" fill="rgb(233,53,50)"/><text x="56.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="53" y="692" width="10" height="15" fill="rgb(244,162,33)"/><text x="56.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="53" y="708" width="10" height="15" fill="rgb(226,185,40)"/><text x="56.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="53" y="724" width="10" height="15" fill="rgb(252,40,16)"/><text x="56.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="53" y="740" width="10" height="15" fill="rgb(222,41,36)"/><text x="56.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="53" y="756" width="10" height="15" fill="rgb(244,161,48)"/><text x="56.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.91%)</title><rect x="53" y="772" width="10" height="15" fill="rgb(216,210,14)"/><text x="56.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="53" y="788" width="10" height="15" fill="rgb(247,135,26)"/><text x="56.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="53" y="804" width="10" height="15" fill="rgb(251,227,33)"/><text x="56.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="53" y="820" width="10" height="15" fill="rgb(252,8,31)"/><text x="56.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="53" y="836" width="10" height="15" fill="rgb(221,11,7)"/><text x="56.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="53" y="852" width="10" height="15" fill="rgb(207,57,26)"/><text x="56.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.91%)</title><rect x="53" y="868" width="10" height="15" fill="rgb(205,173,41)"/><text x="56.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="53" y="884" width="10" height="15" fill="rgb(209,149,19)"/><text x="56.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.91%)</title><rect x="53" y="900" width="10" height="15" fill="rgb(228,174,11)"/><text x="56.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="53" y="916" width="10" height="15" fill="rgb(234,71,40)"/><text x="56.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="53" y="932" width="10" height="15" fill="rgb(250,72,24)"/><text x="56.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="53" y="948" width="10" height="15" fill="rgb(214,199,49)"/><text x="56.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="53" y="964" width="10" height="15" fill="rgb(242,80,12)"/><text x="56.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="53" y="980" width="10" height="15" fill="rgb(214,182,25)"/><text x="56.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="53" y="996" width="10" height="15" fill="rgb(225,20,49)"/><text x="56.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.91%)</title><rect x="53" y="1012" width="10" height="15" fill="rgb(228,225,50)"/><text x="56.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="53" y="1028" width="10" height="15" fill="rgb(251,11,48)"/><text x="56.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="53" y="1044" width="10" height="15" fill="rgb(207,33,34)"/><text x="56.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="53" y="1060" width="10" height="15" fill="rgb(250,32,30)"/><text x="56.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="53" y="1076" width="10" height="15" fill="rgb(216,166,50)"/><text x="56.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="53" y="1092" width="10" height="15" fill="rgb(253,228,6)"/><text x="56.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.30%)</title><rect x="60" y="1108" width="3" height="15" fill="rgb(209,153,54)"/><text x="63.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="60" y="1124" width="3" height="15" fill="rgb(254,157,8)"/><text x="63.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="60" y="1140" width="3" height="15" fill="rgb(235,85,3)"/><text x="63.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="60" y="1156" width="3" height="15" fill="rgb(242,72,11)"/><text x="63.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="60" y="1172" width="3" height="15" fill="rgb(249,52,30)"/><text x="63.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="60" y="1188" width="3" height="15" fill="rgb(246,78,54)"/><text x="63.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="60" y="1204" width="3" height="15" fill="rgb(216,207,54)"/><text x="63.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="60" y="1220" width="3" height="15" fill="rgb(233,127,3)"/><text x="63.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.30%)</title><rect x="60" y="1236" width="3" height="15" fill="rgb(220,11,1)"/><text x="63.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="60" y="1252" width="3" height="15" fill="rgb(216,111,16)"/><text x="63.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="60" y="1268" width="3" height="15" fill="rgb(252,30,6)"/><text x="63.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="60" y="1284" width="3" height="15" fill="rgb(244,82,15)"/><text x="63.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="60" y="1300" width="3" height="15" fill="rgb(235,92,36)"/><text x="63.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="60" y="1316" width="3" height="15" fill="rgb(248,87,35)"/><text x="63.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="60" y="1332" width="3" height="15" fill="rgb(221,173,1)"/><text x="63.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="60" y="1348" width="3" height="15" fill="rgb(244,153,8)"/><text x="63.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.30%)</title><rect x="60" y="1364" width="3" height="15" fill="rgb(238,210,28)"/><text x="63.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="60" y="1380" width="3" height="15" fill="rgb(218,19,37)"/><text x="63.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="60" y="1396" width="3" height="15" fill="rgb(237,126,9)"/><text x="63.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="60" y="1412" width="3" height="15" fill="rgb(230,33,11)"/><text x="63.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="60" y="1428" width="3" height="15" fill="rgb(241,200,37)"/><text x="63.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="60" y="1444" width="3" height="15" fill="rgb(252,39,5)"/><text x="63.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.30%)</title><rect x="60" y="1460" width="3" height="15" fill="rgb(208,110,33)"/><text x="63.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.30%)</title><rect x="60" y="1476" width="3" height="15" fill="rgb(212,96,41)"/><text x="63.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.30%)</title><rect x="60" y="1492" width="3" height="15" fill="rgb(237,133,16)"/><text x="63.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.30%)</title><rect x="60" y="1508" width="3" height="15" fill="rgb(240,204,43)"/><text x="63.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.30%)</title><rect x="60" y="1524" width="3" height="15" fill="rgb(231,100,45)"/><text x="63.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.30%)</title><rect x="60" y="1540" width="3" height="15" fill="rgb(254,206,29)"/><text x="63.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.30%)</title><rect x="60" y="1556" width="3" height="15" fill="rgb(218,31,6)"/><text x="63.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:78) (1 samples, 0.30%)</title><rect x="60" y="1572" width="3" height="15" fill="rgb(205,189,38)"/><text x="63.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.30%)</title><rect x="60" y="1588" width="3" height="15" fill="rgb(216,24,38)"/><text x="63.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py:40) (1 samples, 0.30%)</title><rect x="60" y="1604" width="3" height="15" fill="rgb(251,101,33)"/><text x="63.00" y="1614.50"></text></g><g><title>0x7f6351e430e9 (?) (1 samples, 0.30%)</title><rect x="60" y="1620" width="3" height="15" fill="rgb(235,64,50)"/><text x="63.00" y="1630.50"></text></g><g><title>0x7f6351e26aeb (?) (1 samples, 0.30%)</title><rect x="60" y="1636" width="3" height="15" fill="rgb(246,2,32)"/><text x="63.00" y="1646.50"></text></g><g><title>0x7f6351a7c985 (?) (1 samples, 0.30%)</title><rect x="60" y="1652" width="3" height="15" fill="rgb(244,0,51)"/><text x="63.00" y="1662.50"></text></g><g><title>0x7f6351a7c84a (?) (1 samples, 0.30%)</title><rect x="60" y="1668" width="3" height="15" fill="rgb(244,23,30)"/><text x="63.00" y="1678.50"></text></g><g><title>0x7f63518f6770 (?) (1 samples, 0.30%)</title><rect x="60" y="1684" width="3" height="15" fill="rgb(222,55,15)"/><text x="63.00" y="1694.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.61%)</title><rect x="78" y="180" width="7" height="15" fill="rgb(254,19,14)"/><text x="81.00" y="190.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.30%)</title><rect x="81" y="196" width="4" height="15" fill="rgb(210,84,32)"/><text x="84.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.30%)</title><rect x="107" y="212" width="3" height="15" fill="rgb(241,17,23)"/><text x="110.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 1.52%)</title><rect x="96" y="196" width="18" height="15" fill="rgb(212,59,16)"/><text x="99.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.30%)</title><rect x="110" y="212" width="4" height="15" fill="rgb(238,223,53)"/><text x="113.00" y="222.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:205) (13 samples, 3.96%)</title><rect x="78" y="164" width="47" height="15" fill="rgb(231,221,6)"/><text x="81.00" y="174.50">_dec..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (11 samples, 3.35%)</title><rect x="85" y="180" width="40" height="15" fill="rgb(231,219,44)"/><text x="88.00" y="190.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (3 samples, 0.91%)</title><rect x="114" y="196" width="11" height="15" fill="rgb(223,104,43)"/><text x="117.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.61%)</title><rect x="117" y="212" width="8" height="15" fill="rgb(230,217,16)"/><text x="120.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (2 samples, 0.61%)</title><rect x="128" y="180" width="7" height="15" fill="rgb(245,148,16)"/><text x="131.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (1 samples, 0.30%)</title><rect x="135" y="180" width="4" height="15" fill="rgb(248,6,30)"/><text x="138.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.30%)</title><rect x="139" y="180" width="4" height="15" fill="rgb(228,225,36)"/><text x="142.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.61%)</title><rect x="143" y="180" width="7" height="15" fill="rgb(208,184,41)"/><text x="146.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.30%)</title><rect x="157" y="196" width="4" height="15" fill="rgb(250,177,1)"/><text x="160.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (3 samples, 0.91%)</title><rect x="161" y="196" width="10" height="15" fill="rgb(245,91,10)"/><text x="164.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (8 samples, 2.44%)</title><rect x="150" y="180" width="29" height="15" fill="rgb(232,169,40)"/><text x="153.00" y="190.50">ch..</text></g><g><title>__enter__ (warnings.py:482) (2 samples, 0.61%)</title><rect x="171" y="196" width="8" height="15" fill="rgb(235,204,52)"/><text x="174.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (4 samples, 1.22%)</title><rect x="193" y="212" width="14" height="15" fill="rgb(242,168,39)"/><text x="196.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.30%)</title><rect x="207" y="212" width="4" height="15" fill="rgb(208,115,17)"/><text x="210.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (10 samples, 3.05%)</title><rect x="179" y="180" width="36" height="15" fill="rgb(235,120,30)"/><text x="182.00" y="190.50">che..</text></g><g><title>simplefilter (warnings.py:179) (6 samples, 1.83%)</title><rect x="193" y="196" width="22" height="15" fill="rgb(218,227,4)"/><text x="196.00" y="206.50">s..</text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.30%)</title><rect x="211" y="212" width="4" height="15" fill="rgb(233,47,25)"/><text x="214.00" y="222.50"></text></g><g><title>0x7f6361da8120 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="233" y="212" width="3" height="15" fill="rgb(240,31,1)"/><text x="236.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (7 samples, 2.13%)</title><rect x="215" y="180" width="25" height="15" fill="rgb(247,200,18)"/><text x="218.00" y="190.50">c..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (4 samples, 1.22%)</title><rect x="225" y="196" width="15" height="15" fill="rgb(229,162,13)"/><text x="228.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1646) (1 samples, 0.30%)</title><rect x="236" y="212" width="4" height="15" fill="rgb(244,103,33)"/><text x="239.00" y="222.50"></text></g><g><title>__exit__ (warnings.py:498) (2 samples, 0.61%)</title><rect x="261" y="196" width="8" height="15" fill="rgb(223,33,35)"/><text x="264.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (9 samples, 2.74%)</title><rect x="240" y="180" width="32" height="15" fill="rgb(251,5,30)"/><text x="243.00" y="190.50">ch..</text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.30%)</title><rect x="269" y="196" width="3" height="15" fill="rgb(238,85,39)"/><text x="272.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (3 samples, 0.91%)</title><rect x="272" y="180" width="11" height="15" fill="rgb(250,55,49)"/><text x="275.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (3 samples, 0.91%)</title><rect x="272" y="196" width="11" height="15" fill="rgb(220,20,53)"/><text x="275.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (2 samples, 0.61%)</title><rect x="283" y="180" width="7" height="15" fill="rgb(230,70,30)"/><text x="286.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:535) (1 samples, 0.30%)</title><rect x="290" y="180" width="4" height="15" fill="rgb(235,81,13)"/><text x="293.00" y="190.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (3 samples, 0.91%)</title><rect x="305" y="196" width="10" height="15" fill="rgb(237,41,50)"/><text x="308.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.30%)</title><rect x="312" y="212" width="3" height="15" fill="rgb(247,12,5)"/><text x="315.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.30%)</title><rect x="315" y="196" width="4" height="15" fill="rgb(230,182,41)"/><text x="318.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.30%)</title><rect x="315" y="212" width="4" height="15" fill="rgb(224,101,49)"/><text x="318.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:394) (1 samples, 0.30%)</title><rect x="319" y="196" width="3" height="15" fill="rgb(226,10,10)"/><text x="322.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (9 samples, 2.74%)</title><rect x="294" y="180" width="32" height="15" fill="rgb(250,30,20)"/><text x="297.00" y="190.50">ch..</text></g><g><title>issubdtype (numpy/core/numerictypes.py:425) (1 samples, 0.30%)</title><rect x="322" y="196" width="4" height="15" fill="rgb(237,211,23)"/><text x="325.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (8 samples, 2.44%)</title><rect x="348" y="212" width="28" height="15" fill="rgb(225,151,13)"/><text x="351.00" y="222.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.30%)</title><rect x="376" y="212" width="4" height="15" fill="rgb(210,90,25)"/><text x="379.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (15 samples, 4.57%)</title><rect x="330" y="196" width="54" height="15" fill="rgb(235,202,48)"/><text x="333.00" y="206.50">_asse..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.30%)</title><rect x="380" y="212" width="4" height="15" fill="rgb(252,120,21)"/><text x="383.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (18 samples, 5.49%)</title><rect x="326" y="180" width="65" height="15" fill="rgb(238,13,21)"/><text x="329.00" y="190.50">check_a..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.61%)</title><rect x="384" y="196" width="7" height="15" fill="rgb(250,35,3)"/><text x="387.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.30%)</title><rect x="391" y="180" width="3" height="15" fill="rgb(251,5,25)"/><text x="394.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (5 samples, 1.52%)</title><rect x="394" y="196" width="18" height="15" fill="rgb(228,69,20)"/><text x="397.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.30%)</title><rect x="412" y="196" width="4" height="15" fill="rgb(250,79,33)"/><text x="415.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.30%)</title><rect x="416" y="196" width="4" height="15" fill="rgb(219,53,26)"/><text x="419.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.30%)</title><rect x="420" y="196" width="3" height="15" fill="rgb(231,100,9)"/><text x="423.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.30%)</title><rect x="420" y="212" width="3" height="15" fill="rgb(245,9,40)"/><text x="423.00" y="222.50"></text></g><g><title>0x7f6361da814e (libc-2.29.so) (1 samples, 0.30%)</title><rect x="420" y="228" width="3" height="15" fill="rgb(250,104,16)"/><text x="423.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (9 samples, 2.74%)</title><rect x="423" y="196" width="33" height="15" fill="rgb(211,89,47)"/><text x="426.00" y="206.50">_n..</text></g><g><title>__instancecheck__ (abc.py:139) (5 samples, 1.52%)</title><rect x="438" y="212" width="18" height="15" fill="rgb(252,12,21)"/><text x="441.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (3 samples, 0.91%)</title><rect x="445" y="228" width="11" height="15" fill="rgb(249,213,54)"/><text x="448.00" y="238.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:207) (93 samples, 28.35%)</title><rect x="125" y="164" width="334" height="15" fill="rgb(218,73,24)"/><text x="128.00" y="174.50">_decision_function (sklearn/linear_model/_bas..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (18 samples, 5.49%)</title><rect x="394" y="180" width="65" height="15" fill="rgb(214,201,22)"/><text x="397.00" y="190.50">check_a..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.30%)</title><rect x="456" y="196" width="3" height="15" fill="rgb(209,167,32)"/><text x="459.00" y="206.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:208) (4 samples, 1.22%)</title><rect x="459" y="164" width="15" height="15" fill="rgb(248,89,24)"/><text x="462.00" y="174.50"></text></g><g><title>PyArray_Transpose (shape.c:726) (1 samples, 0.30%)</title><rect x="470" y="180" width="4" height="15" fill="rgb(217,161,6)"/><text x="473.00" y="190.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.30%)</title><rect x="470" y="196" width="4" height="15" fill="rgb(248,13,11)"/><text x="473.00" y="206.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:168) (1 samples, 0.30%)</title><rect x="470" y="212" width="4" height="15" fill="rgb(244,110,23)"/><text x="473.00" y="222.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.30%)</title><rect x="492" y="260" width="3" height="15" fill="rgb(245,126,35)"/><text x="495.00" y="270.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:23) (1 samples, 0.30%)</title><rect x="492" y="276" width="3" height="15" fill="rgb(252,92,27)"/><text x="495.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.61%)</title><rect x="492" y="196" width="7" height="15" fill="rgb(223,205,46)"/><text x="495.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.61%)</title><rect x="492" y="212" width="7" height="15" fill="rgb(246,115,28)"/><text x="495.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.61%)</title><rect x="492" y="228" width="7" height="15" fill="rgb(205,14,28)"/><text x="495.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.61%)</title><rect x="492" y="244" width="7" height="15" fill="rgb(232,136,7)"/><text x="495.00" y="254.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.30%)</title><rect x="495" y="260" width="4" height="15" fill="rgb(243,157,30)"/><text x="498.00" y="270.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.30%)</title><rect x="495" y="276" width="4" height="15" fill="rgb(234,9,13)"/><text x="498.00" y="286.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:287) (1 samples, 0.30%)</title><rect x="499" y="260" width="3" height="15" fill="rgb(240,174,49)"/><text x="502.00" y="270.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:566) (1 samples, 0.30%)</title><rect x="499" y="276" width="3" height="15" fill="rgb(224,52,47)"/><text x="502.00" y="286.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.30%)</title><rect x="499" y="292" width="3" height="15" fill="rgb(237,32,35)"/><text x="502.00" y="302.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.30%)</title><rect x="499" y="308" width="3" height="15" fill="rgb(231,172,23)"/><text x="502.00" y="318.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4560) (1 samples, 0.30%)</title><rect x="499" y="324" width="3" height="15" fill="rgb(230,223,31)"/><text x="502.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.61%)</title><rect x="499" y="212" width="7" height="15" fill="rgb(213,22,0)"/><text x="502.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.61%)</title><rect x="499" y="228" width="7" height="15" fill="rgb(249,227,54)"/><text x="502.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (2 samples, 0.61%)</title><rect x="499" y="244" width="7" height="15" fill="rgb(226,32,49)"/><text x="502.00" y="254.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:308) (1 samples, 0.30%)</title><rect x="502" y="260" width="4" height="15" fill="rgb(231,29,21)"/><text x="505.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.30%)</title><rect x="502" y="276" width="4" height="15" fill="rgb(242,150,25)"/><text x="505.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1041) (1 samples, 0.30%)</title><rect x="502" y="292" width="4" height="15" fill="rgb(209,2,44)"/><text x="505.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.91%)</title><rect x="499" y="196" width="11" height="15" fill="rgb(225,32,31)"/><text x="502.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.30%)</title><rect x="506" y="212" width="4" height="15" fill="rgb(249,136,13)"/><text x="509.00" y="222.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.30%)</title><rect x="506" y="228" width="4" height="15" fill="rgb(219,144,23)"/><text x="509.00" y="238.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.30%)</title><rect x="506" y="244" width="4" height="15" fill="rgb(246,0,46)"/><text x="509.00" y="254.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.30%)</title><rect x="506" y="260" width="4" height="15" fill="rgb(244,187,26)"/><text x="509.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.30%)</title><rect x="510" y="244" width="3" height="15" fill="rgb(212,16,9)"/><text x="513.00" y="254.50"></text></g><g><title>array_add (number.c:330) (8 samples, 2.44%)</title><rect x="488" y="180" width="29" height="15" fill="rgb(242,144,21)"/><text x="491.00" y="190.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (2 samples, 0.61%)</title><rect x="510" y="196" width="7" height="15" fill="rgb(220,16,6)"/><text x="513.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.61%)</title><rect x="510" y="212" width="7" height="15" fill="rgb(233,197,5)"/><text x="513.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.61%)</title><rect x="510" y="228" width="7" height="15" fill="rgb(218,75,47)"/><text x="513.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.30%)</title><rect x="513" y="244" width="4" height="15" fill="rgb(212,79,9)"/><text x="516.00" y="254.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (1 samples, 0.30%)</title><rect x="517" y="180" width="3" height="15" fill="rgb(237,210,27)"/><text x="520.00" y="190.50"></text></g><g><title>array_matrix_multiply (number.c:390) (1 samples, 0.30%)</title><rect x="531" y="196" width="4" height="15" fill="rgb(208,160,17)"/><text x="534.00" y="206.50"></text></g><g><title>PyArray_GenericBinaryFunction (number.c:281) (1 samples, 0.30%)</title><rect x="531" y="212" width="4" height="15" fill="rgb(233,51,0)"/><text x="534.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.30%)</title><rect x="535" y="244" width="3" height="15" fill="rgb(232,69,53)"/><text x="538.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.30%)</title><rect x="535" y="260" width="3" height="15" fill="rgb(219,167,50)"/><text x="538.00" y="270.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.30%)</title><rect x="535" y="276" width="3" height="15" fill="rgb(220,41,54)"/><text x="538.00" y="286.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.30%)</title><rect x="535" y="292" width="3" height="15" fill="rgb(226,2,30)"/><text x="538.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (2 samples, 0.61%)</title><rect x="535" y="228" width="7" height="15" fill="rgb(240,167,44)"/><text x="538.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.30%)</title><rect x="538" y="244" width="4" height="15" fill="rgb(240,117,21)"/><text x="541.00" y="254.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.30%)</title><rect x="538" y="260" width="4" height="15" fill="rgb(217,146,28)"/><text x="541.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.30%)</title><rect x="538" y="276" width="4" height="15" fill="rgb(236,123,20)"/><text x="541.00" y="286.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.30%)</title><rect x="538" y="292" width="4" height="15" fill="rgb(244,93,48)"/><text x="541.00" y="302.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:462) (1 samples, 0.30%)</title><rect x="538" y="308" width="4" height="15" fill="rgb(241,74,17)"/><text x="541.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.30%)</title><rect x="542" y="244" width="4" height="15" fill="rgb(237,224,48)"/><text x="545.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1547) (1 samples, 0.30%)</title><rect x="542" y="260" width="4" height="15" fill="rgb(241,175,14)"/><text x="545.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.30%)</title><rect x="546" y="260" width="3" height="15" fill="rgb(233,15,14)"/><text x="549.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.30%)</title><rect x="549" y="260" width="4" height="15" fill="rgb(223,117,5)"/><text x="552.00" y="270.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2665) (1 samples, 0.30%)</title><rect x="549" y="276" width="4" height="15" fill="rgb(220,23,42)"/><text x="552.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.30%)</title><rect x="553" y="292" width="3" height="15" fill="rgb(237,92,20)"/><text x="556.00" y="302.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="553" y="308" width="3" height="15" fill="rgb(208,25,48)"/><text x="556.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (3 samples, 0.91%)</title><rect x="553" y="260" width="11" height="15" fill="rgb(229,77,36)"/><text x="556.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.91%)</title><rect x="553" y="276" width="11" height="15" fill="rgb(252,82,45)"/><text x="556.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (2 samples, 0.61%)</title><rect x="556" y="292" width="8" height="15" fill="rgb(217,0,51)"/><text x="559.00" y="302.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="560" y="308" width="4" height="15" fill="rgb(231,95,47)"/><text x="563.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2965) (1 samples, 0.30%)</title><rect x="564" y="260" width="3" height="15" fill="rgb(220,51,26)"/><text x="567.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (8 samples, 2.44%)</title><rect x="542" y="228" width="29" height="15" fill="rgb(208,157,11)"/><text x="545.00" y="238.50">Py..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (7 samples, 2.13%)</title><rect x="546" y="244" width="25" height="15" fill="rgb(238,97,43)"/><text x="549.00" y="254.50">N..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2972) (1 samples, 0.30%)</title><rect x="567" y="260" width="4" height="15" fill="rgb(223,151,21)"/><text x="570.00" y="270.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.30%)</title><rect x="567" y="276" width="4" height="15" fill="rgb(241,187,33)"/><text x="570.00" y="286.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.30%)</title><rect x="567" y="292" width="4" height="15" fill="rgb(242,162,22)"/><text x="570.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2896) (2 samples, 0.61%)</title><rect x="571" y="228" width="7" height="15" fill="rgb(234,168,30)"/><text x="574.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.61%)</title><rect x="571" y="244" width="7" height="15" fill="rgb(233,198,48)"/><text x="574.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.30%)</title><rect x="578" y="228" width="4" height="15" fill="rgb(234,176,54)"/><text x="581.00" y="238.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:156) (1 samples, 0.30%)</title><rect x="578" y="244" width="4" height="15" fill="rgb(230,44,30)"/><text x="581.00" y="254.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c:1771) (1 samples, 0.30%)</title><rect x="578" y="260" width="4" height="15" fill="rgb(232,215,19)"/><text x="581.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3051) (1 samples, 0.30%)</title><rect x="582" y="228" width="3" height="15" fill="rgb(252,12,14)"/><text x="585.00" y="238.50"></text></g><g><title>0x7f6361d87902 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="582" y="244" width="3" height="15" fill="rgb(222,148,24)"/><text x="585.00" y="254.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (19 samples, 5.79%)</title><rect x="520" y="180" width="69" height="15" fill="rgb(241,37,36)"/><text x="523.00" y="190.50">safe_sp..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (15 samples, 4.57%)</title><rect x="535" y="196" width="54" height="15" fill="rgb(219,94,54)"/><text x="538.00" y="206.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (15 samples, 4.57%)</title><rect x="535" y="212" width="54" height="15" fill="rgb(238,13,27)"/><text x="538.00" y="222.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (1 samples, 0.30%)</title><rect x="585" y="228" width="4" height="15" fill="rgb(216,118,0)"/><text x="588.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (1 samples, 0.30%)</title><rect x="585" y="244" width="4" height="15" fill="rgb(225,119,19)"/><text x="588.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.30%)</title><rect x="585" y="260" width="4" height="15" fill="rgb(213,212,16)"/><text x="588.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.30%)</title><rect x="585" y="276" width="4" height="15" fill="rgb(227,40,14)"/><text x="588.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.30%)</title><rect x="585" y="292" width="4" height="15" fill="rgb(212,130,9)"/><text x="588.00" y="302.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (6 samples, 1.83%)</title><rect x="589" y="180" width="21" height="15" fill="rgb(246,35,40)"/><text x="592.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (3 samples, 0.91%)</title><rect x="600" y="196" width="10" height="15" fill="rgb(236,204,40)"/><text x="603.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (150 samples, 45.73%)</title><rect x="74" y="132" width="540" height="15" fill="rgb(219,188,14)"/><text x="77.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/linear_model/_base.py:225) (150 samples, 45.73%)</title><rect x="74" y="148" width="540" height="15" fill="rgb(218,169,48)"/><text x="77.00" y="158.50">predict (sklearn/linear_model/_base.py:225)</text></g><g><title>_decision_function (sklearn/linear_model/_base.py:209) (39 samples, 11.89%)</title><rect x="474" y="164" width="140" height="15" fill="rgb(212,197,46)"/><text x="477.00" y="174.50">_decision_functio..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.30%)</title><rect x="610" y="180" width="4" height="15" fill="rgb(206,33,30)"/><text x="613.00" y="190.50"></text></g><g><title>0x7f6361e65151 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="610" y="196" width="4" height="15" fill="rgb(210,34,2)"/><text x="613.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1_50_12_float_.py:54) (154 samples, 46.95%)</title><rect x="63" y="52" width="554" height="15" fill="rgb(220,63,19)"/><text x="66.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_b_reg_1_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_LinearRegression_default_b_reg_1_50_12_float_.py:53) (154 samples, 46.95%)</title><rect x="63" y="68" width="554" height="15" fill="rgb(246,122,47)"/><text x="66.00" y="78.50">profile_skl (bench_LinearRegression_default_b_reg_1_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py:37) (154 samples, 46.95%)</title><rect x="63" y="84" width="554" height="15" fill="rgb(233,109,6)"/><text x="66.00" y="94.50">setup_profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py:37)</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py:31) (154 samples, 46.95%)</title><rect x="63" y="100" width="554" height="15" fill="rgb(214,66,21)"/><text x="66.00" y="110.50">profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (153 samples, 46.65%)</title><rect x="67" y="116" width="550" height="15" fill="rgb(224,225,4)"/><text x="70.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.30%)</title><rect x="614" y="132" width="3" height="15" fill="rgb(249,116,23)"/><text x="617.00" y="142.50"></text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py:36) (1 samples, 0.30%)</title><rect x="617" y="84" width="4" height="15" fill="rgb(237,159,5)"/><text x="620.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.30%)</title><rect x="617" y="100" width="4" height="15" fill="rgb(218,198,22)"/><text x="620.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.30%)</title><rect x="617" y="116" width="4" height="15" fill="rgb(208,224,33)"/><text x="620.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.30%)</title><rect x="617" y="132" width="4" height="15" fill="rgb(208,70,42)"/><text x="620.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.30%)</title><rect x="617" y="148" width="4" height="15" fill="rgb(253,123,43)"/><text x="620.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.30%)</title><rect x="617" y="164" width="4" height="15" fill="rgb(207,178,53)"/><text x="620.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.30%)</title><rect x="617" y="180" width="4" height="15" fill="rgb(248,122,29)"/><text x="620.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.30%)</title><rect x="617" y="196" width="4" height="15" fill="rgb(233,161,52)"/><text x="620.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="617" y="212" width="4" height="15" fill="rgb(208,95,21)"/><text x="620.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="617" y="228" width="4" height="15" fill="rgb(254,14,33)"/><text x="620.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="617" y="244" width="4" height="15" fill="rgb(246,142,2)"/><text x="620.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="617" y="260" width="4" height="15" fill="rgb(243,12,46)"/><text x="620.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="617" y="276" width="4" height="15" fill="rgb(223,218,10)"/><text x="620.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.30%)</title><rect x="617" y="292" width="4" height="15" fill="rgb(246,98,17)"/><text x="620.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="617" y="308" width="4" height="15" fill="rgb(216,218,29)"/><text x="620.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="617" y="324" width="4" height="15" fill="rgb(230,113,17)"/><text x="620.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="617" y="340" width="4" height="15" fill="rgb(246,109,39)"/><text x="620.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="617" y="356" width="4" height="15" fill="rgb(240,8,43)"/><text x="620.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="617" y="372" width="4" height="15" fill="rgb(251,136,49)"/><text x="620.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.30%)</title><rect x="617" y="388" width="4" height="15" fill="rgb(235,152,27)"/><text x="620.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="617" y="404" width="4" height="15" fill="rgb(228,133,41)"/><text x="620.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="617" y="420" width="4" height="15" fill="rgb(234,183,19)"/><text x="620.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="617" y="436" width="4" height="15" fill="rgb(222,31,24)"/><text x="620.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="617" y="452" width="4" height="15" fill="rgb(246,215,26)"/><text x="620.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="617" y="468" width="4" height="15" fill="rgb(232,150,27)"/><text x="620.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.30%)</title><rect x="617" y="484" width="4" height="15" fill="rgb(232,46,20)"/><text x="620.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.30%)</title><rect x="617" y="500" width="4" height="15" fill="rgb(245,73,10)"/><text x="620.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.30%)</title><rect x="617" y="516" width="4" height="15" fill="rgb(245,204,25)"/><text x="620.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.30%)</title><rect x="617" y="532" width="4" height="15" fill="rgb(224,45,25)"/><text x="620.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.30%)</title><rect x="617" y="548" width="4" height="15" fill="rgb(227,98,8)"/><text x="620.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.30%)</title><rect x="617" y="564" width="4" height="15" fill="rgb(218,158,43)"/><text x="620.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.30%)</title><rect x="617" y="580" width="4" height="15" fill="rgb(223,86,26)"/><text x="620.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.30%)</title><rect x="617" y="596" width="4" height="15" fill="rgb(242,214,43)"/><text x="620.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:744) (1 samples, 0.30%)</title><rect x="617" y="612" width="4" height="15" fill="rgb(217,113,7)"/><text x="620.00" y="622.50"></text></g><g><title>find_undeclared (jinja2/compiler.py:115) (1 samples, 0.30%)</title><rect x="617" y="628" width="4" height="15" fill="rgb(227,9,16)"/><text x="620.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.30%)</title><rect x="617" y="644" width="4" height="15" fill="rgb(225,82,52)"/><text x="620.00" y="654.50"></text></g><g><title>generic_visit (jinja2/visitor.py:43) (1 samples, 0.30%)</title><rect x="617" y="660" width="4" height="15" fill="rgb(214,3,17)"/><text x="620.00" y="670.50"></text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py:30) (1 samples, 0.30%)</title><rect x="621" y="100" width="4" height="15" fill="rgb(225,14,33)"/><text x="624.00" y="110.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.30%)</title><rect x="632" y="116" width="3" height="15" fill="rgb(219,55,8)"/><text x="635.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.30%)</title><rect x="632" y="132" width="3" height="15" fill="rgb(211,22,1)"/><text x="635.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:718) (1 samples, 0.30%)</title><rect x="632" y="148" width="3" height="15" fill="rgb(240,30,53)"/><text x="635.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.61%)</title><rect x="661" y="148" width="7" height="15" fill="rgb(245,29,51)"/><text x="664.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.30%)</title><rect x="679" y="164" width="3" height="15" fill="rgb(209,227,47)"/><text x="682.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.30%)</title><rect x="682" y="164" width="4" height="15" fill="rgb(213,2,4)"/><text x="685.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (1 samples, 0.30%)</title><rect x="686" y="164" width="3" height="15" fill="rgb(226,143,54)"/><text x="689.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:447) (1 samples, 0.30%)</title><rect x="689" y="164" width="4" height="15" fill="rgb(222,120,2)"/><text x="692.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.91%)</title><rect x="711" y="180" width="11" height="15" fill="rgb(225,157,43)"/><text x="714.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.30%)</title><rect x="718" y="196" width="4" height="15" fill="rgb(218,125,22)"/><text x="721.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:268) (1 samples, 0.30%)</title><rect x="725" y="212" width="4" height="15" fill="rgb(218,24,8)"/><text x="728.00" y="222.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (5 samples, 1.52%)</title><rect x="736" y="244" width="18" height="15" fill="rgb(206,28,30)"/><text x="739.00" y="254.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:26) (1 samples, 0.30%)</title><rect x="754" y="244" width="4" height="15" fill="rgb(224,150,34)"/><text x="757.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.30%)</title><rect x="758" y="260" width="3" height="15" fill="rgb(218,35,25)"/><text x="761.00" y="270.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2213) (1 samples, 0.30%)</title><rect x="761" y="292" width="4" height="15" fill="rgb(242,210,43)"/><text x="764.00" y="302.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (2 samples, 0.61%)</title><rect x="765" y="292" width="7" height="15" fill="rgb(224,81,50)"/><text x="768.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4428) (1 samples, 0.30%)</title><rect x="772" y="340" width="4" height="15" fill="rgb(254,93,0)"/><text x="775.00" y="350.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:930) (2 samples, 0.61%)</title><rect x="772" y="308" width="7" height="15" fill="rgb(254,115,9)"/><text x="775.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2095) (2 samples, 0.61%)</title><rect x="772" y="324" width="7" height="15" fill="rgb(223,162,33)"/><text x="775.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.30%)</title><rect x="776" y="340" width="3" height="15" fill="rgb(220,86,47)"/><text x="779.00" y="350.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.30%)</title><rect x="779" y="308" width="4" height="15" fill="rgb(249,40,18)"/><text x="782.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.30%)</title><rect x="779" y="324" width="4" height="15" fill="rgb(205,175,24)"/><text x="782.00" y="334.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:242) (1 samples, 0.30%)</title><rect x="783" y="324" width="4" height="15" fill="rgb(254,122,27)"/><text x="786.00" y="334.50"></text></g><g><title>_bad_strides (cblasfuncs.c:197) (1 samples, 0.30%)</title><rect x="783" y="340" width="4" height="15" fill="rgb(242,107,30)"/><text x="786.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.30%)</title><rect x="787" y="324" width="3" height="15" fill="rgb(210,112,21)"/><text x="790.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:921) (1 samples, 0.30%)</title><rect x="787" y="340" width="3" height="15" fill="rgb(243,35,42)"/><text x="790.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:527) (1 samples, 0.30%)</title><rect x="790" y="324" width="4" height="15" fill="rgb(250,109,27)"/><text x="793.00" y="334.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="790" y="340" width="4" height="15" fill="rgb(212,138,11)"/><text x="793.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:534) (1 samples, 0.30%)</title><rect x="794" y="324" width="3" height="15" fill="rgb(234,178,0)"/><text x="797.00" y="334.50"></text></g><g><title>FLOAT_dot (arraytypes.c.src:3439) (1 samples, 0.30%)</title><rect x="794" y="340" width="3" height="15" fill="rgb(215,33,44)"/><text x="797.00" y="350.50"></text></g><g><title>sdot_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="794" y="356" width="3" height="15" fill="rgb(205,12,9)"/><text x="797.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py:28) (19 samples, 5.79%)</title><rect x="733" y="228" width="68" height="15" fill="rgb(211,57,25)"/><text x="736.00" y="238.50">_run (m..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (12 samples, 3.66%)</title><rect x="758" y="244" width="43" height="15" fill="rgb(226,43,4)"/><text x="761.00" y="254.50">nump..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (11 samples, 3.35%)</title><rect x="761" y="260" width="40" height="15" fill="rgb(209,169,5)"/><text x="764.00" y="270.50">dot..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (11 samples, 3.35%)</title><rect x="761" y="276" width="40" height="15" fill="rgb(232,37,42)"/><text x="764.00" y="286.50">arr..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (8 samples, 2.44%)</title><rect x="772" y="292" width="29" height="15" fill="rgb(215,7,47)"/><text x="775.00" y="302.50">ar..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (5 samples, 1.52%)</title><rect x="783" y="308" width="18" height="15" fill="rgb(219,213,26)"/><text x="786.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:696) (1 samples, 0.30%)</title><rect x="797" y="324" width="4" height="15" fill="rgb(217,229,17)"/><text x="800.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.30%)</title><rect x="805" y="244" width="3" height="15" fill="rgb(210,78,29)"/><text x="808.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.30%)</title><rect x="805" y="260" width="3" height="15" fill="rgb(215,120,5)"/><text x="808.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.30%)</title><rect x="805" y="276" width="3" height="15" fill="rgb(210,214,23)"/><text x="808.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.30%)</title><rect x="805" y="292" width="3" height="15" fill="rgb(230,81,54)"/><text x="808.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.30%)</title><rect x="808" y="260" width="4" height="15" fill="rgb(210,145,17)"/><text x="811.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:315) (1 samples, 0.30%)</title><rect x="808" y="276" width="4" height="15" fill="rgb(254,49,9)"/><text x="811.00" y="286.50"></text></g><g><title>_extract_pyvals (extobj.c:196) (1 samples, 0.30%)</title><rect x="808" y="292" width="4" height="15" fill="rgb(233,0,47)"/><text x="811.00" y="302.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.30%)</title><rect x="812" y="292" width="3" height="15" fill="rgb(254,192,45)"/><text x="815.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.30%)</title><rect x="812" y="308" width="3" height="15" fill="rgb(245,15,2)"/><text x="815.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.61%)</title><rect x="812" y="260" width="7" height="15" fill="rgb(253,33,20)"/><text x="815.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (2 samples, 0.61%)</title><rect x="812" y="276" width="7" height="15" fill="rgb(226,16,39)"/><text x="815.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:255) (1 samples, 0.30%)</title><rect x="815" y="292" width="4" height="15" fill="rgb(211,74,15)"/><text x="818.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.30%)</title><rect x="819" y="260" width="4" height="15" fill="rgb(212,161,16)"/><text x="822.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2005) (1 samples, 0.30%)</title><rect x="819" y="276" width="4" height="15" fill="rgb(228,88,25)"/><text x="822.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.30%)</title><rect x="823" y="308" width="3" height="15" fill="rgb(219,146,28)"/><text x="826.00" y="318.50"></text></g><g><title>0x7f6360faa2c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="823" y="324" width="3" height="15" fill="rgb(254,192,47)"/><text x="826.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.30%)</title><rect x="826" y="308" width="4" height="15" fill="rgb(229,52,3)"/><text x="829.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.91%)</title><rect x="823" y="292" width="10" height="15" fill="rgb(247,119,3)"/><text x="826.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.30%)</title><rect x="830" y="308" width="3" height="15" fill="rgb(220,78,5)"/><text x="833.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2748) (1 samples, 0.30%)</title><rect x="830" y="324" width="3" height="15" fill="rgb(242,45,47)"/><text x="833.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2032) (1 samples, 0.30%)</title><rect x="833" y="324" width="4" height="15" fill="rgb(237,99,44)"/><text x="836.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.61%)</title><rect x="833" y="292" width="8" height="15" fill="rgb(237,179,51)"/><text x="836.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.61%)</title><rect x="833" y="308" width="8" height="15" fill="rgb(251,142,30)"/><text x="836.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2543) (1 samples, 0.30%)</title><rect x="837" y="324" width="4" height="15" fill="rgb(230,7,33)"/><text x="840.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.30%)</title><rect x="841" y="292" width="3" height="15" fill="rgb(253,161,3)"/><text x="844.00" y="302.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c:1374) (1 samples, 0.30%)</title><rect x="841" y="308" width="3" height="15" fill="rgb(222,31,40)"/><text x="844.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.30%)</title><rect x="844" y="292" width="4" height="15" fill="rgb(222,184,21)"/><text x="847.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:706) (1 samples, 0.30%)</title><rect x="844" y="308" width="4" height="15" fill="rgb(249,182,42)"/><text x="847.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 2.44%)</title><rect x="823" y="260" width="28" height="15" fill="rgb(238,57,28)"/><text x="826.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 2.44%)</title><rect x="823" y="276" width="28" height="15" fill="rgb(230,156,35)"/><text x="826.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1587) (1 samples, 0.30%)</title><rect x="848" y="292" width="3" height="15" fill="rgb(219,106,16)"/><text x="851.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (37 samples, 11.28%)</title><rect x="725" y="196" width="134" height="15" fill="rgb(205,96,43)"/><text x="728.00" y="206.50">run (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (36 samples, 10.98%)</title><rect x="729" y="212" width="130" height="15" fill="rgb(208,228,27)"/><text x="732.00" y="222.50">run (mlprodict/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py:30) (16 samples, 4.88%)</title><rect x="801" y="228" width="58" height="15" fill="rgb(252,171,1)"/><text x="804.00" y="238.50">_run (..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (14 samples, 4.27%)</title><rect x="808" y="244" width="51" height="15" fill="rgb(215,119,31)"/><text x="811.00" y="254.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (2 samples, 0.61%)</title><rect x="851" y="260" width="8" height="15" fill="rgb(234,162,12)"/><text x="854.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (40 samples, 12.20%)</title><rect x="722" y="180" width="144" height="15" fill="rgb(232,3,14)"/><text x="725.00" y="190.50">run (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (2 samples, 0.61%)</title><rect x="859" y="196" width="7" height="15" fill="rgb(249,100,10)"/><text x="862.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.61%)</title><rect x="866" y="180" width="7" height="15" fill="rgb(249,0,30)"/><text x="869.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.61%)</title><rect x="873" y="180" width="7" height="15" fill="rgb(244,223,38)"/><text x="876.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.30%)</title><rect x="880" y="180" width="4" height="15" fill="rgb(230,95,36)"/><text x="883.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.30%)</title><rect x="884" y="180" width="3" height="15" fill="rgb(233,85,13)"/><text x="887.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (55 samples, 16.77%)</title><rect x="693" y="164" width="198" height="15" fill="rgb(212,89,21)"/><text x="696.00" y="174.50">_run_sequence_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.30%)</title><rect x="887" y="180" width="4" height="15" fill="rgb(220,135,43)"/><text x="890.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (76 samples, 23.17%)</title><rect x="643" y="132" width="273" height="15" fill="rgb(212,211,1)"/><text x="646.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/co..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (69 samples, 21.04%)</title><rect x="668" y="148" width="248" height="15" fill="rgb(227,64,41)"/><text x="671.00" y="158.50">run (mlprodict/onnxrt/onnx_infere..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (7 samples, 2.13%)</title><rect x="891" y="164" width="25" height="15" fill="rgb(215,116,41)"/><text x="894.00" y="174.50">_..</text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.30%)</title><rect x="912" y="180" width="4" height="15" fill="rgb(247,7,45)"/><text x="915.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1_50_12_float_.py:61) (87 samples, 26.52%)</title><rect x="617" y="52" width="313" height="15" fill="rgb(254,49,21)"/><text x="620.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_b..</text></g><g><title>profile_pyrt (bench_LinearRegression_default_b_reg_1_50_12_float_.py:60) (87 samples, 26.52%)</title><rect x="617" y="68" width="313" height="15" fill="rgb(216,101,46)"/><text x="620.00" y="78.50">profile_pyrt (bench_LinearRegression_defau..</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py:37) (86 samples, 26.22%)</title><rect x="621" y="84" width="309" height="15" fill="rgb(243,33,52)"/><text x="624.00" y="94.50">setup_profile (bench_LinearRegression_def..</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py:31) (85 samples, 25.91%)</title><rect x="625" y="100" width="305" height="15" fill="rgb(211,214,7)"/><text x="628.00" y="110.50">profile (bench_LinearRegression_default_b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (82 samples, 25.00%)</title><rect x="635" y="116" width="295" height="15" fill="rgb(232,176,12)"/><text x="638.00" y="126.50">time_predict (mlprodict/asv_benchmark/c..</text></g><g><title>unicode_concatenate (python3.7) (4 samples, 1.22%)</title><rect x="916" y="132" width="14" height="15" fill="rgb(234,127,50)"/><text x="919.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.61%)</title><rect x="938" y="116" width="7" height="15" fill="rgb(231,174,49)"/><text x="941.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.61%)</title><rect x="938" y="132" width="7" height="15" fill="rgb(207,53,22)"/><text x="941.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (2 samples, 0.61%)</title><rect x="938" y="148" width="7" height="15" fill="rgb(234,0,27)"/><text x="941.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.30%)</title><rect x="945" y="116" width="3" height="15" fill="rgb(216,137,36)"/><text x="948.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c:148) (1 samples, 0.30%)</title><rect x="945" y="132" width="3" height="15" fill="rgb(253,119,22)"/><text x="948.00" y="142.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:179) (1 samples, 0.30%)</title><rect x="948" y="116" width="4" height="15" fill="rgb(235,153,17)"/><text x="951.00" y="126.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (5 samples, 1.52%)</title><rect x="977" y="148" width="18" height="15" fill="rgb(235,173,3)"/><text x="980.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.30%)</title><rect x="995" y="148" width="4" height="15" fill="rgb(208,115,50)"/><text x="998.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:131) (1 samples, 0.30%)</title><rect x="1006" y="196" width="4" height="15" fill="rgb(229,10,28)"/><text x="1009.00" y="206.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="1024" y="244" width="4" height="15" fill="rgb(238,58,33)"/><text x="1027.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1024" y="260" width="4" height="15" fill="rgb(249,58,5)"/><text x="1027.00" y="270.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1028" y="260" width="3" height="15" fill="rgb(205,225,51)"/><text x="1031.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1028" y="276" width="3" height="15" fill="rgb(249,73,30)"/><text x="1031.00" y="286.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_value [clone .isra.101] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1028" y="292" width="3" height="15" fill="rgb(247,176,13)"/><text x="1031.00" y="302.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (8 samples, 2.44%)</title><rect x="1010" y="196" width="28" height="15" fill="rgb(251,37,22)"/><text x="1013.00" y="206.50">r..</text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (6 samples, 1.83%)</title><rect x="1017" y="212" width="21" height="15" fill="rgb(215,47,51)"/><text x="1020.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.22%)</title><rect x="1024" y="228" width="14" height="15" fill="rgb(224,44,48)"/><text x="1027.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.91%)</title><rect x="1028" y="244" width="10" height="15" fill="rgb(239,191,36)"/><text x="1031.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1031" y="260" width="7" height="15" fill="rgb(216,51,19)"/><text x="1034.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1031" y="276" width="7" height="15" fill="rgb(207,7,1)"/><text x="1034.00" y="286.50"></text></g><g><title>0x7f631fdb7ff9 (?) (1 samples, 0.30%)</title><rect x="1049" y="212" width="4" height="15" fill="rgb(216,117,9)"/><text x="1052.00" y="222.50"></text></g><g><title>0x7f631fdb2f24 (?) (1 samples, 0.30%)</title><rect x="1049" y="228" width="4" height="15" fill="rgb(221,13,3)"/><text x="1052.00" y="238.50"></text></g><g><title>0x7f631fd9d401 (?) (1 samples, 0.30%)</title><rect x="1049" y="244" width="4" height="15" fill="rgb(211,35,13)"/><text x="1052.00" y="254.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1053" y="212" width="3" height="15" fill="rgb(222,59,33)"/><text x="1056.00" y="222.50"></text></g><g><title>0x7ffc8d3e0bb2 ([vdso]) (1 samples, 0.30%)</title><rect x="1053" y="228" width="3" height="15" fill="rgb(245,222,36)"/><text x="1056.00" y="238.50"></text></g><g><title>0x7ffc8d3e0949 ([vdso]) (1 samples, 0.30%)</title><rect x="1053" y="244" width="3" height="15" fill="rgb(229,211,30)"/><text x="1056.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1067" y="260" width="4" height="15" fill="rgb(225,176,44)"/><text x="1070.00" y="270.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1067" y="276" width="4" height="15" fill="rgb(253,204,32)"/><text x="1070.00" y="286.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1071" y="308" width="7" height="15" fill="rgb(214,93,53)"/><text x="1074.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1074" y="324" width="4" height="15" fill="rgb(240,13,5)"/><text x="1077.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.91%)</title><rect x="1071" y="292" width="11" height="15" fill="rgb(249,166,13)"/><text x="1074.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1078" y="308" width="4" height="15" fill="rgb(249,66,11)"/><text x="1081.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="1082" y="308" width="3" height="15" fill="rgb(239,136,18)"/><text x="1085.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1082" y="324" width="3" height="15" fill="rgb(210,186,34)"/><text x="1085.00" y="334.50"></text></g><g><title>0x7f6361d89003 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1082" y="340" width="3" height="15" fill="rgb(214,23,4)"/><text x="1085.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1082" y="292" width="7" height="15" fill="rgb(234,184,25)"/><text x="1085.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1085" y="308" width="4" height="15" fill="rgb(234,50,21)"/><text x="1088.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="1085" y="324" width="4" height="15" fill="rgb(238,135,3)"/><text x="1088.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1085" y="340" width="4" height="15" fill="rgb(224,52,54)"/><text x="1088.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1089" y="292" width="3" height="15" fill="rgb(242,58,3)"/><text x="1092.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1092" y="292" width="4" height="15" fill="rgb(233,82,11)"/><text x="1095.00" y="302.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="1092" y="308" width="4" height="15" fill="rgb(219,180,12)"/><text x="1095.00" y="318.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1100" y="356" width="3" height="15" fill="rgb(221,202,11)"/><text x="1103.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.91%)</title><rect x="1096" y="340" width="11" height="15" fill="rgb(227,200,40)"/><text x="1099.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1103" y="356" width="4" height="15" fill="rgb(206,172,45)"/><text x="1106.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1107" y="468" width="3" height="15" fill="rgb(231,24,1)"/><text x="1110.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1107" y="484" width="3" height="15" fill="rgb(238,229,9)"/><text x="1110.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1107" y="500" width="3" height="15" fill="rgb(221,118,38)"/><text x="1110.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1107" y="516" width="3" height="15" fill="rgb(225,182,28)"/><text x="1110.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1107" y="532" width="3" height="15" fill="rgb(253,53,32)"/><text x="1110.00" y="542.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.52%)</title><rect x="1096" y="292" width="18" height="15" fill="rgb(244,194,22)"/><text x="1099.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.52%)</title><rect x="1096" y="308" width="18" height="15" fill="rgb(205,70,16)"/><text x="1099.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.52%)</title><rect x="1096" y="324" width="18" height="15" fill="rgb(254,68,2)"/><text x="1099.00" y="334.50"></text></g><g><title>onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1107" y="340" width="7" height="15" fill="rgb(205,124,43)"/><text x="1110.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1107" y="356" width="7" height="15" fill="rgb(216,40,6)"/><text x="1110.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1107" y="372" width="7" height="15" fill="rgb(252,18,21)"/><text x="1110.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1107" y="388" width="7" height="15" fill="rgb(208,217,49)"/><text x="1110.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1107" y="404" width="7" height="15" fill="rgb(236,111,54)"/><text x="1110.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1107" y="420" width="7" height="15" fill="rgb(247,4,44)"/><text x="1110.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1107" y="436" width="7" height="15" fill="rgb(240,83,6)"/><text x="1110.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1107" y="452" width="7" height="15" fill="rgb(246,80,3)"/><text x="1110.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1110" y="468" width="4" height="15" fill="rgb(214,82,11)"/><text x="1113.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1110" y="484" width="4" height="15" fill="rgb(238,122,37)"/><text x="1113.00" y="494.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="1110" y="500" width="4" height="15" fill="rgb(227,217,19)"/><text x="1113.00" y="510.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 3.96%)</title><rect x="1071" y="260" width="47" height="15" fill="rgb(247,164,17)"/><text x="1074.00" y="270.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 3.96%)</title><rect x="1071" y="276" width="47" height="15" fill="rgb(227,208,15)"/><text x="1074.00" y="286.50">onnx..</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="1114" y="292" width="4" height="15" fill="rgb(251,171,50)"/><text x="1117.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1114" y="308" width="4" height="15" fill="rgb(216,98,2)"/><text x="1117.00" y="318.50"></text></g><g><title>onnxruntime::PrimitiveDataTypeBase::AsPrimitiveDataType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1136" y="324" width="3" height="15" fill="rgb(216,53,1)"/><text x="1139.00" y="334.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.13%)</title><rect x="1118" y="260" width="25" height="15" fill="rgb(245,96,42)"/><text x="1121.00" y="270.50">o..</text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.91%)</title><rect x="1132" y="276" width="11" height="15" fill="rgb(222,221,26)"/><text x="1135.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.91%)</title><rect x="1132" y="292" width="11" height="15" fill="rgb(218,110,39)"/><text x="1135.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1136" y="308" width="7" height="15" fill="rgb(242,90,51)"/><text x="1139.00" y="318.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1139" y="324" width="4" height="15" fill="rgb(233,0,11)"/><text x="1142.00" y="334.50"></text></g><g><title>onnxruntime::python::OrtPybindThrowIfError (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1143" y="260" width="7" height="15" fill="rgb(222,124,31)"/><text x="1146.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 7.62%)</title><rect x="1064" y="244" width="90" height="15" fill="rgb(221,140,10)"/><text x="1067.00" y="254.50">onnxruntim..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1150" y="260" width="4" height="15" fill="rgb(254,45,35)"/><text x="1153.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1150" y="276" width="4" height="15" fill="rgb(209,78,8)"/><text x="1153.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1150" y="292" width="4" height="15" fill="rgb(248,9,17)"/><text x="1153.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1150" y="308" width="4" height="15" fill="rgb(249,172,43)"/><text x="1153.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1150" y="324" width="4" height="15" fill="rgb(246,80,12)"/><text x="1153.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1150" y="340" width="4" height="15" fill="rgb(234,50,46)"/><text x="1153.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1150" y="356" width="4" height="15" fill="rgb(213,74,0)"/><text x="1153.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::DeleteChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1150" y="372" width="4" height="15" fill="rgb(252,165,44)"/><text x="1153.00" y="382.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1154" y="244" width="3" height="15" fill="rgb(208,86,22)"/><text x="1157.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1154" y="260" width="3" height="15" fill="rgb(209,213,51)"/><text x="1157.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1157" y="244" width="4" height="15" fill="rgb(207,8,38)"/><text x="1160.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1157" y="260" width="4" height="15" fill="rgb(223,149,13)"/><text x="1160.00" y="270.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1157" y="276" width="4" height="15" fill="rgb(253,198,20)"/><text x="1160.00" y="286.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="1161" y="244" width="3" height="15" fill="rgb(229,18,32)"/><text x="1164.00" y="254.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (46 samples, 14.02%)</title><rect x="1002" y="164" width="166" height="15" fill="rgb(227,228,9)"/><text x="1005.00" y="174.50">_run_whole_runtime (m..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (46 samples, 14.02%)</title><rect x="1002" y="180" width="166" height="15" fill="rgb(231,2,48)"/><text x="1005.00" y="190.50">run (mlprodict/onnxrt..</text></g><g><title>run (onnxruntime/capi/session.py:136) (36 samples, 10.98%)</title><rect x="1038" y="196" width="130" height="15" fill="rgb(247,218,21)"/><text x="1041.00" y="206.50">run (onnxruntime..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (31 samples, 9.45%)</title><rect x="1056" y="212" width="112" height="15" fill="rgb(254,6,48)"/><text x="1059.00" y="222.50">pybind11::cpp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 8.84%)</title><rect x="1064" y="228" width="104" height="15" fill="rgb(242,215,45)"/><text x="1067.00" y="238.50">void pybind1..</text></g><g><title>std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;::~vector [clone .lto_priv.576] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1164" y="244" width="4" height="15" fill="rgb(239,186,22)"/><text x="1167.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (61 samples, 18.60%)</title><rect x="966" y="132" width="220" height="15" fill="rgb(240,110,43)"/><text x="969.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (52 samples, 15.85%)</title><rect x="999" y="148" width="187" height="15" fill="rgb(219,109,7)"/><text x="1002.00" y="158.50">run (mlprodict/onnxrt/on..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (5 samples, 1.52%)</title><rect x="1168" y="164" width="18" height="15" fill="rgb(222,134,44)"/><text x="1171.00" y="174.50"></text></g><g><title>all (328 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(223,140,5)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1_50_12_float_.py:68) (72 samples, 21.95%)</title><rect x="930" y="52" width="260" height="15" fill="rgb(223,130,21)"/><text x="933.00" y="62.50">&lt;module&gt; (bench_LinearRegression_d..</text></g><g><title>profile_ort (bench_LinearRegression_default_b_reg_1_50_12_float_.py:67) (72 samples, 21.95%)</title><rect x="930" y="68" width="260" height="15" fill="rgb(244,97,51)"/><text x="933.00" y="78.50">profile_ort (bench_LinearRegressio..</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py:37) (72 samples, 21.95%)</title><rect x="930" y="84" width="260" height="15" fill="rgb(231,13,0)"/><text x="933.00" y="94.50">setup_profile (bench_LinearRegress..</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py:31) (72 samples, 21.95%)</title><rect x="930" y="100" width="260" height="15" fill="rgb(244,183,15)"/><text x="933.00" y="110.50">profile (bench_LinearRegression_de..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (66 samples, 20.12%)</title><rect x="952" y="116" width="238" height="15" fill="rgb(236,119,11)"/><text x="955.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.30%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(211,35,34)"/><text x="1189.00" y="142.50"></text></g></g></svg>