<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.31%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(222,152,28)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.31%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(221,150,4)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.31%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(237,21,27)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.31%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(213,33,49)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.31%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(209,31,19)"/><text x="13.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.31%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(240,37,51)"/><text x="13.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.31%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(250,198,26)"/><text x="13.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.31%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(232,73,1)"/><text x="13.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.31%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(213,174,27)"/><text x="13.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.31%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(246,161,38)"/><text x="13.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:371) (1 samples, 0.31%)</title><rect x="10" y="1012" width="3" height="15" fill="rgb(207,166,25)"/><text x="13.00" y="1022.50"></text></g><g><title>__neg__ (pkg_resources/_vendor/packaging/_structures.py:34) (1 samples, 0.31%)</title><rect x="10" y="1028" width="3" height="15" fill="rgb(235,60,33)"/><text x="13.00" y="1038.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py:48) (1 samples, 0.31%)</title><rect x="13" y="916" width="4" height="15" fill="rgb(251,123,32)"/><text x="16.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:69) (1 samples, 0.31%)</title><rect x="13" y="932" width="4" height="15" fill="rgb(230,133,39)"/><text x="16.00" y="942.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.63%)</title><rect x="13" y="884" width="8" height="15" fill="rgb(228,149,1)"/><text x="16.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.63%)</title><rect x="13" y="900" width="8" height="15" fill="rgb(248,55,35)"/><text x="16.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.31%)</title><rect x="17" y="916" width="4" height="15" fill="rgb(231,40,9)"/><text x="20.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.31%)</title><rect x="17" y="932" width="4" height="15" fill="rgb(214,110,17)"/><text x="20.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.31%)</title><rect x="17" y="948" width="4" height="15" fill="rgb(219,165,15)"/><text x="20.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:213) (1 samples, 0.31%)</title><rect x="17" y="964" width="4" height="15" fill="rgb(205,121,11)"/><text x="20.00" y="974.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.31%)</title><rect x="17" y="980" width="4" height="15" fill="rgb(219,215,38)"/><text x="20.00" y="990.50"></text></g><g><title>0x7f41a34acee3 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="17" y="996" width="4" height="15" fill="rgb(251,29,6)"/><text x="20.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_b_reg.py:2) (4 samples, 1.25%)</title><rect x="10" y="148" width="14" height="15" fill="rgb(226,192,23)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="10" y="164" width="14" height="15" fill="rgb(207,197,12)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.25%)</title><rect x="10" y="180" width="14" height="15" fill="rgb(234,77,9)"/><text x="13.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="10" y="196" width="14" height="15" fill="rgb(243,101,40)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="10" y="212" width="14" height="15" fill="rgb(227,218,16)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.25%)</title><rect x="10" y="228" width="14" height="15" fill="rgb(254,84,31)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.25%)</title><rect x="10" y="244" width="14" height="15" fill="rgb(249,167,2)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.25%)</title><rect x="10" y="260" width="14" height="15" fill="rgb(226,110,14)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="10" y="276" width="14" height="15" fill="rgb(238,212,48)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.25%)</title><rect x="10" y="292" width="14" height="15" fill="rgb(206,50,4)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="10" y="308" width="14" height="15" fill="rgb(226,103,18)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.25%)</title><rect x="10" y="324" width="14" height="15" fill="rgb(254,78,18)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.25%)</title><rect x="10" y="340" width="14" height="15" fill="rgb(212,12,29)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.25%)</title><rect x="10" y="356" width="14" height="15" fill="rgb(243,13,29)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="10" y="372" width="14" height="15" fill="rgb(240,210,41)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.25%)</title><rect x="10" y="388" width="14" height="15" fill="rgb(240,227,5)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="10" y="404" width="14" height="15" fill="rgb(245,30,1)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.25%)</title><rect x="10" y="420" width="14" height="15" fill="rgb(232,224,48)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.25%)</title><rect x="10" y="436" width="14" height="15" fill="rgb(246,42,40)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.25%)</title><rect x="10" y="452" width="14" height="15" fill="rgb(220,46,33)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="10" y="468" width="14" height="15" fill="rgb(219,69,24)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.25%)</title><rect x="10" y="484" width="14" height="15" fill="rgb(219,47,8)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="10" y="500" width="14" height="15" fill="rgb(212,75,37)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.25%)</title><rect x="10" y="516" width="14" height="15" fill="rgb(230,40,5)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.25%)</title><rect x="10" y="532" width="14" height="15" fill="rgb(225,12,30)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.25%)</title><rect x="10" y="548" width="14" height="15" fill="rgb(233,57,40)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="10" y="564" width="14" height="15" fill="rgb(223,60,44)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.25%)</title><rect x="10" y="580" width="14" height="15" fill="rgb(226,144,22)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="10" y="596" width="14" height="15" fill="rgb(212,54,41)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.25%)</title><rect x="10" y="612" width="14" height="15" fill="rgb(238,223,1)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="10" y="628" width="14" height="15" fill="rgb(246,140,3)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="10" y="644" width="14" height="15" fill="rgb(234,202,4)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.25%)</title><rect x="10" y="660" width="14" height="15" fill="rgb(210,185,2)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.25%)</title><rect x="10" y="676" width="14" height="15" fill="rgb(250,202,42)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.25%)</title><rect x="10" y="692" width="14" height="15" fill="rgb(234,1,1)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="10" y="708" width="14" height="15" fill="rgb(244,172,14)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.25%)</title><rect x="10" y="724" width="14" height="15" fill="rgb(238,89,45)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="10" y="740" width="14" height="15" fill="rgb(246,81,43)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.25%)</title><rect x="10" y="756" width="14" height="15" fill="rgb(213,113,28)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.25%)</title><rect x="10" y="772" width="14" height="15" fill="rgb(212,117,47)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.25%)</title><rect x="10" y="788" width="14" height="15" fill="rgb(243,156,26)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="10" y="804" width="14" height="15" fill="rgb(210,69,34)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 1.25%)</title><rect x="10" y="820" width="14" height="15" fill="rgb(228,152,19)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 1.25%)</title><rect x="10" y="836" width="14" height="15" fill="rgb(228,60,1)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 0.94%)</title><rect x="13" y="852" width="11" height="15" fill="rgb(240,113,2)"/><text x="16.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.94%)</title><rect x="13" y="868" width="11" height="15" fill="rgb(229,66,5)"/><text x="16.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.31%)</title><rect x="21" y="884" width="3" height="15" fill="rgb(208,69,42)"/><text x="24.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.31%)</title><rect x="21" y="900" width="3" height="15" fill="rgb(227,206,13)"/><text x="24.00" y="910.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_b_reg.py:4) (1 samples, 0.31%)</title><rect x="24" y="148" width="4" height="15" fill="rgb(231,100,19)"/><text x="27.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="24" y="164" width="4" height="15" fill="rgb(237,149,15)"/><text x="27.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="24" y="180" width="4" height="15" fill="rgb(216,12,31)"/><text x="27.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="24" y="196" width="4" height="15" fill="rgb(213,111,23)"/><text x="27.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="24" y="212" width="4" height="15" fill="rgb(248,112,52)"/><text x="27.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="24" y="228" width="4" height="15" fill="rgb(231,140,39)"/><text x="27.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:23) (1 samples, 0.31%)</title><rect x="24" y="244" width="4" height="15" fill="rgb(252,62,45)"/><text x="27.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="24" y="260" width="4" height="15" fill="rgb(208,115,12)"/><text x="27.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="24" y="276" width="4" height="15" fill="rgb(207,183,51)"/><text x="27.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="24" y="292" width="4" height="15" fill="rgb(223,173,25)"/><text x="27.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="24" y="308" width="4" height="15" fill="rgb(210,26,35)"/><text x="27.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="24" y="324" width="4" height="15" fill="rgb(238,169,22)"/><text x="27.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_logistic.py:24) (1 samples, 0.31%)</title><rect x="24" y="340" width="4" height="15" fill="rgb(231,137,47)"/><text x="27.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="24" y="356" width="4" height="15" fill="rgb(227,164,36)"/><text x="27.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.31%)</title><rect x="24" y="372" width="4" height="15" fill="rgb(242,93,35)"/><text x="27.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="24" y="388" width="4" height="15" fill="rgb(250,225,9)"/><text x="27.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="24" y="404" width="4" height="15" fill="rgb(215,107,14)"/><text x="27.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="24" y="420" width="4" height="15" fill="rgb(233,104,26)"/><text x="27.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="24" y="436" width="4" height="15" fill="rgb(250,9,50)"/><text x="27.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="24" y="452" width="4" height="15" fill="rgb(240,81,36)"/><text x="27.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="24" y="468" width="4" height="15" fill="rgb(218,71,7)"/><text x="27.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/svm/__init__.py:13) (1 samples, 0.31%)</title><rect x="24" y="484" width="4" height="15" fill="rgb(252,191,24)"/><text x="27.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="24" y="500" width="4" height="15" fill="rgb(225,140,38)"/><text x="27.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="24" y="516" width="4" height="15" fill="rgb(214,142,11)"/><text x="27.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="24" y="532" width="4" height="15" fill="rgb(224,224,33)"/><text x="27.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="24" y="548" width="4" height="15" fill="rgb(248,86,14)"/><text x="27.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="24" y="564" width="4" height="15" fill="rgb(210,52,44)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/svm/_classes.py:4) (1 samples, 0.31%)</title><rect x="24" y="580" width="4" height="15" fill="rgb(250,74,6)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="24" y="596" width="4" height="15" fill="rgb(253,42,20)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="24" y="612" width="4" height="15" fill="rgb(205,109,38)"/><text x="27.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="24" y="628" width="4" height="15" fill="rgb(231,76,16)"/><text x="27.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="24" y="644" width="4" height="15" fill="rgb(239,25,32)"/><text x="27.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="24" y="660" width="4" height="15" fill="rgb(223,108,19)"/><text x="27.00" y="670.50"></text></g><g><title>&lt;module&gt; (sklearn/svm/_base.py:6) (1 samples, 0.31%)</title><rect x="24" y="676" width="4" height="15" fill="rgb(206,51,1)"/><text x="27.00" y="686.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="24" y="692" width="4" height="15" fill="rgb(206,227,30)"/><text x="27.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="24" y="708" width="4" height="15" fill="rgb(242,141,13)"/><text x="27.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="24" y="724" width="4" height="15" fill="rgb(237,21,41)"/><text x="27.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="24" y="740" width="4" height="15" fill="rgb(236,98,12)"/><text x="27.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.31%)</title><rect x="24" y="756" width="4" height="15" fill="rgb(214,188,40)"/><text x="27.00" y="766.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.31%)</title><rect x="24" y="772" width="4" height="15" fill="rgb(207,178,47)"/><text x="27.00" y="782.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.31%)</title><rect x="24" y="788" width="4" height="15" fill="rgb(233,187,45)"/><text x="27.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="24" y="804" width="4" height="15" fill="rgb(249,1,1)"/><text x="27.00" y="814.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.31%)</title><rect x="24" y="820" width="4" height="15" fill="rgb(239,221,34)"/><text x="27.00" y="830.50"></text></g><g><title>0x7f41a3656995 (libdl-2.29.so) (1 samples, 0.31%)</title><rect x="24" y="836" width="4" height="15" fill="rgb(210,112,34)"/><text x="27.00" y="846.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.31%)</title><rect x="24" y="852" width="4" height="15" fill="rgb(236,17,14)"/><text x="27.00" y="862.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.31%)</title><rect x="24" y="868" width="4" height="15" fill="rgb(206,159,24)"/><text x="27.00" y="878.50"></text></g><g><title>0x7f41a3656258 (libdl-2.29.so) (1 samples, 0.31%)</title><rect x="24" y="884" width="4" height="15" fill="rgb(207,180,16)"/><text x="27.00" y="894.50"></text></g><g><title>0x7f41a36a3d7a (ld-2.29.so) (1 samples, 0.31%)</title><rect x="24" y="900" width="4" height="15" fill="rgb(210,215,52)"/><text x="27.00" y="910.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.31%)</title><rect x="24" y="916" width="4" height="15" fill="rgb(235,28,53)"/><text x="27.00" y="926.50"></text></g><g><title>0x7f41a36a4345 (ld-2.29.so) (1 samples, 0.31%)</title><rect x="24" y="932" width="4" height="15" fill="rgb(249,187,1)"/><text x="27.00" y="942.50"></text></g><g><title>0x7f41a369cfec (ld-2.29.so) (1 samples, 0.31%)</title><rect x="24" y="948" width="4" height="15" fill="rgb(239,229,22)"/><text x="27.00" y="958.50"></text></g><g><title>0x7f41a369b56b (ld-2.29.so) (1 samples, 0.31%)</title><rect x="24" y="964" width="4" height="15" fill="rgb(253,69,5)"/><text x="27.00" y="974.50"></text></g><g><title>0x7f41a369a952 (ld-2.29.so) (1 samples, 0.31%)</title><rect x="24" y="980" width="4" height="15" fill="rgb(224,152,28)"/><text x="27.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.31%)</title><rect x="28" y="772" width="4" height="15" fill="rgb(223,212,45)"/><text x="31.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="28" y="788" width="4" height="15" fill="rgb(205,173,38)"/><text x="31.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="28" y="804" width="4" height="15" fill="rgb(247,48,51)"/><text x="31.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="28" y="820" width="4" height="15" fill="rgb(237,13,31)"/><text x="31.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="28" y="836" width="4" height="15" fill="rgb(227,120,17)"/><text x="31.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="28" y="852" width="4" height="15" fill="rgb(245,47,18)"/><text x="31.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.31%)</title><rect x="28" y="868" width="4" height="15" fill="rgb(241,222,3)"/><text x="31.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="28" y="884" width="4" height="15" fill="rgb(233,171,48)"/><text x="31.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="28" y="900" width="4" height="15" fill="rgb(218,12,47)"/><text x="31.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="28" y="916" width="4" height="15" fill="rgb(208,12,36)"/><text x="31.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="28" y="932" width="4" height="15" fill="rgb(252,191,45)"/><text x="31.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="28" y="948" width="4" height="15" fill="rgb(233,51,49)"/><text x="31.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.31%)</title><rect x="28" y="964" width="4" height="15" fill="rgb(205,220,4)"/><text x="31.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="28" y="980" width="4" height="15" fill="rgb(254,163,51)"/><text x="31.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="28" y="996" width="4" height="15" fill="rgb(222,184,25)"/><text x="31.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="28" y="1012" width="4" height="15" fill="rgb(222,203,46)"/><text x="31.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="28" y="1028" width="4" height="15" fill="rgb(217,18,32)"/><text x="31.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="28" y="1044" width="4" height="15" fill="rgb(219,30,14)"/><text x="31.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.31%)</title><rect x="28" y="1060" width="4" height="15" fill="rgb(210,52,44)"/><text x="31.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="28" y="1076" width="4" height="15" fill="rgb(210,197,8)"/><text x="31.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.31%)</title><rect x="28" y="1092" width="4" height="15" fill="rgb(236,143,22)"/><text x="31.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="28" y="1108" width="4" height="15" fill="rgb(206,166,22)"/><text x="31.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="28" y="1124" width="4" height="15" fill="rgb(247,218,12)"/><text x="31.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="28" y="1140" width="4" height="15" fill="rgb(206,2,40)"/><text x="31.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="28" y="1156" width="4" height="15" fill="rgb(242,51,48)"/><text x="31.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="28" y="1172" width="4" height="15" fill="rgb(238,61,5)"/><text x="31.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="28" y="1188" width="4" height="15" fill="rgb(232,138,4)"/><text x="31.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:7) (1 samples, 0.31%)</title><rect x="28" y="1204" width="4" height="15" fill="rgb(210,42,10)"/><text x="31.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="28" y="1220" width="4" height="15" fill="rgb(220,180,32)"/><text x="31.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="28" y="1236" width="4" height="15" fill="rgb(231,212,14)"/><text x="31.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="28" y="1252" width="4" height="15" fill="rgb(219,24,7)"/><text x="31.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="28" y="1268" width="4" height="15" fill="rgb(244,68,16)"/><text x="31.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="28" y="1284" width="4" height="15" fill="rgb(251,206,50)"/><text x="31.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py:10) (1 samples, 0.31%)</title><rect x="28" y="1300" width="4" height="15" fill="rgb(215,213,53)"/><text x="31.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="28" y="1316" width="4" height="15" fill="rgb(249,186,7)"/><text x="31.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="28" y="1332" width="4" height="15" fill="rgb(219,176,53)"/><text x="31.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="28" y="1348" width="4" height="15" fill="rgb(246,182,37)"/><text x="31.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="28" y="1364" width="4" height="15" fill="rgb(251,73,1)"/><text x="31.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="28" y="1380" width="4" height="15" fill="rgb(245,64,6)"/><text x="31.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py:63) (1 samples, 0.31%)</title><rect x="28" y="1396" width="4" height="15" fill="rgb(244,75,43)"/><text x="31.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.31%)</title><rect x="28" y="1412" width="4" height="15" fill="rgb(246,161,26)"/><text x="31.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.31%)</title><rect x="28" y="1428" width="4" height="15" fill="rgb(210,90,5)"/><text x="31.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.31%)</title><rect x="28" y="1444" width="4" height="15" fill="rgb(223,104,38)"/><text x="31.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.31%)</title><rect x="28" y="1460" width="4" height="15" fill="rgb(236,203,34)"/><text x="31.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.31%)</title><rect x="28" y="1476" width="4" height="15" fill="rgb(230,137,37)"/><text x="31.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.31%)</title><rect x="28" y="1492" width="4" height="15" fill="rgb(205,92,1)"/><text x="31.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.31%)</title><rect x="28" y="1508" width="4" height="15" fill="rgb(237,80,19)"/><text x="31.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.31%)</title><rect x="28" y="1524" width="4" height="15" fill="rgb(251,138,10)"/><text x="31.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py:462) (1 samples, 0.31%)</title><rect x="28" y="1540" width="4" height="15" fill="rgb(221,57,50)"/><text x="31.00" y="1550.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.63%)</title><rect x="28" y="244" width="7" height="15" fill="rgb(253,22,47)"/><text x="31.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="28" y="260" width="7" height="15" fill="rgb(240,122,25)"/><text x="31.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="28" y="276" width="7" height="15" fill="rgb(222,137,45)"/><text x="31.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.63%)</title><rect x="28" y="292" width="7" height="15" fill="rgb(216,10,24)"/><text x="31.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.63%)</title><rect x="28" y="308" width="7" height="15" fill="rgb(242,209,45)"/><text x="31.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="28" y="324" width="7" height="15" fill="rgb(235,181,8)"/><text x="31.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.63%)</title><rect x="28" y="340" width="7" height="15" fill="rgb(235,73,29)"/><text x="31.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="28" y="356" width="7" height="15" fill="rgb(210,136,48)"/><text x="31.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.63%)</title><rect x="28" y="372" width="7" height="15" fill="rgb(236,8,40)"/><text x="31.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="28" y="388" width="7" height="15" fill="rgb(247,60,22)"/><text x="31.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="28" y="404" width="7" height="15" fill="rgb(220,48,15)"/><text x="31.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="28" y="420" width="7" height="15" fill="rgb(244,28,11)"/><text x="31.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.63%)</title><rect x="28" y="436" width="7" height="15" fill="rgb(226,86,25)"/><text x="31.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.63%)</title><rect x="28" y="452" width="7" height="15" fill="rgb(220,206,42)"/><text x="31.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="28" y="468" width="7" height="15" fill="rgb(238,115,1)"/><text x="31.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.63%)</title><rect x="28" y="484" width="7" height="15" fill="rgb(244,31,40)"/><text x="31.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="28" y="500" width="7" height="15" fill="rgb(226,133,46)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="28" y="516" width="7" height="15" fill="rgb(207,143,1)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.63%)</title><rect x="28" y="532" width="7" height="15" fill="rgb(234,82,22)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.63%)</title><rect x="28" y="548" width="7" height="15" fill="rgb(237,173,3)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="28" y="564" width="7" height="15" fill="rgb(216,154,38)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.63%)</title><rect x="28" y="580" width="7" height="15" fill="rgb(231,159,16)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="28" y="596" width="7" height="15" fill="rgb(207,157,44)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="28" y="612" width="7" height="15" fill="rgb(242,81,5)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.63%)</title><rect x="28" y="628" width="7" height="15" fill="rgb(244,203,33)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.63%)</title><rect x="28" y="644" width="7" height="15" fill="rgb(213,66,9)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="28" y="660" width="7" height="15" fill="rgb(214,196,44)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.63%)</title><rect x="28" y="676" width="7" height="15" fill="rgb(228,65,27)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="28" y="692" width="7" height="15" fill="rgb(205,16,25)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="28" y="708" width="7" height="15" fill="rgb(234,18,23)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.63%)</title><rect x="28" y="724" width="7" height="15" fill="rgb(223,11,16)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.63%)</title><rect x="28" y="740" width="7" height="15" fill="rgb(210,91,12)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="28" y="756" width="7" height="15" fill="rgb(237,35,16)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:44) (1 samples, 0.31%)</title><rect x="32" y="772" width="3" height="15" fill="rgb(254,18,27)"/><text x="35.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="32" y="788" width="3" height="15" fill="rgb(245,197,40)"/><text x="35.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="32" y="804" width="3" height="15" fill="rgb(250,153,16)"/><text x="35.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="32" y="820" width="3" height="15" fill="rgb(214,112,37)"/><text x="35.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="32" y="836" width="3" height="15" fill="rgb(222,29,41)"/><text x="35.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="32" y="852" width="3" height="15" fill="rgb(215,130,22)"/><text x="35.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py:20) (1 samples, 0.31%)</title><rect x="32" y="868" width="3" height="15" fill="rgb(231,129,7)"/><text x="35.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="32" y="884" width="3" height="15" fill="rgb(206,82,2)"/><text x="35.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="32" y="900" width="3" height="15" fill="rgb(226,103,27)"/><text x="35.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="32" y="916" width="3" height="15" fill="rgb(230,68,48)"/><text x="35.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="32" y="932" width="3" height="15" fill="rgb(214,53,8)"/><text x="35.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="32" y="948" width="3" height="15" fill="rgb(235,132,49)"/><text x="35.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py:48) (1 samples, 0.31%)</title><rect x="32" y="964" width="3" height="15" fill="rgb(254,147,44)"/><text x="35.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="32" y="980" width="3" height="15" fill="rgb(249,220,11)"/><text x="35.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="32" y="996" width="3" height="15" fill="rgb(224,78,19)"/><text x="35.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="32" y="1012" width="3" height="15" fill="rgb(250,144,29)"/><text x="35.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="32" y="1028" width="3" height="15" fill="rgb(215,75,23)"/><text x="35.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="32" y="1044" width="3" height="15" fill="rgb(218,28,13)"/><text x="35.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/sbcsgroupprober.py:39) (1 samples, 0.31%)</title><rect x="32" y="1060" width="3" height="15" fill="rgb(213,224,3)"/><text x="35.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="32" y="1076" width="3" height="15" fill="rgb(227,189,34)"/><text x="35.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="32" y="1092" width="3" height="15" fill="rgb(217,123,35)"/><text x="35.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="32" y="1108" width="3" height="15" fill="rgb(250,90,2)"/><text x="35.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="32" y="1124" width="3" height="15" fill="rgb(218,43,40)"/><text x="35.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="32" y="1140" width="3" height="15" fill="rgb(229,60,11)"/><text x="35.00" y="1150.50"></text></g><g><title>&lt;module&gt; (chardet/hebrewprober.py:128) (1 samples, 0.31%)</title><rect x="32" y="1156" width="3" height="15" fill="rgb(236,93,1)"/><text x="35.00" y="1166.50"></text></g><g><title>getblock (inspect.py:940) (2 samples, 0.63%)</title><rect x="35" y="1364" width="8" height="15" fill="rgb(244,215,47)"/><text x="38.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (2 samples, 0.63%)</title><rect x="35" y="1380" width="8" height="15" fill="rgb(241,120,4)"/><text x="38.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (2 samples, 0.63%)</title><rect x="35" y="1396" width="8" height="15" fill="rgb(213,51,48)"/><text x="38.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (2 samples, 0.63%)</title><rect x="35" y="1412" width="8" height="15" fill="rgb(211,218,17)"/><text x="38.00" y="1422.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (3 samples, 0.94%)</title><rect x="35" y="1108" width="11" height="15" fill="rgb(254,139,5)"/><text x="38.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.94%)</title><rect x="35" y="1124" width="11" height="15" fill="rgb(221,56,18)"/><text x="38.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.94%)</title><rect x="35" y="1140" width="11" height="15" fill="rgb(225,32,20)"/><text x="38.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.94%)</title><rect x="35" y="1156" width="11" height="15" fill="rgb(232,131,29)"/><text x="38.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.94%)</title><rect x="35" y="1172" width="11" height="15" fill="rgb(210,84,17)"/><text x="38.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.94%)</title><rect x="35" y="1188" width="11" height="15" fill="rgb(214,184,35)"/><text x="38.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (3 samples, 0.94%)</title><rect x="35" y="1204" width="11" height="15" fill="rgb(252,206,3)"/><text x="38.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.94%)</title><rect x="35" y="1220" width="11" height="15" fill="rgb(210,151,3)"/><text x="38.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.94%)</title><rect x="35" y="1236" width="11" height="15" fill="rgb(240,186,26)"/><text x="38.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.94%)</title><rect x="35" y="1252" width="11" height="15" fill="rgb(219,147,15)"/><text x="38.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.94%)</title><rect x="35" y="1268" width="11" height="15" fill="rgb(211,205,2)"/><text x="38.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.94%)</title><rect x="35" y="1284" width="11" height="15" fill="rgb(240,193,26)"/><text x="38.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (3 samples, 0.94%)</title><rect x="35" y="1300" width="11" height="15" fill="rgb(248,196,13)"/><text x="38.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (3 samples, 0.94%)</title><rect x="35" y="1316" width="11" height="15" fill="rgb(244,117,35)"/><text x="38.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (3 samples, 0.94%)</title><rect x="35" y="1332" width="11" height="15" fill="rgb(223,2,39)"/><text x="38.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (3 samples, 0.94%)</title><rect x="35" y="1348" width="11" height="15" fill="rgb(229,97,0)"/><text x="38.00" y="1358.50"></text></g><g><title>getblock (inspect.py:941) (1 samples, 0.31%)</title><rect x="43" y="1364" width="3" height="15" fill="rgb(205,112,37)"/><text x="46.00" y="1374.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.31%)</title><rect x="46" y="1108" width="4" height="15" fill="rgb(241,219,11)"/><text x="49.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="46" y="1124" width="4" height="15" fill="rgb(221,66,34)"/><text x="49.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="46" y="1140" width="4" height="15" fill="rgb(213,72,1)"/><text x="49.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="46" y="1156" width="4" height="15" fill="rgb(239,227,18)"/><text x="49.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="46" y="1172" width="4" height="15" fill="rgb(227,197,41)"/><text x="49.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="46" y="1188" width="4" height="15" fill="rgb(225,87,19)"/><text x="49.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:22) (1 samples, 0.31%)</title><rect x="46" y="1204" width="4" height="15" fill="rgb(238,10,23)"/><text x="49.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="46" y="1220" width="4" height="15" fill="rgb(227,68,16)"/><text x="49.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="46" y="1236" width="4" height="15" fill="rgb(248,99,14)"/><text x="49.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="46" y="1252" width="4" height="15" fill="rgb(235,156,36)"/><text x="49.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="46" y="1268" width="4" height="15" fill="rgb(249,7,2)"/><text x="49.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="46" y="1284" width="4" height="15" fill="rgb(213,88,49)"/><text x="49.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:6) (1 samples, 0.31%)</title><rect x="46" y="1300" width="4" height="15" fill="rgb(231,190,14)"/><text x="49.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="46" y="1316" width="4" height="15" fill="rgb(226,29,19)"/><text x="49.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="46" y="1332" width="4" height="15" fill="rgb(254,35,15)"/><text x="49.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="46" y="1348" width="4" height="15" fill="rgb(220,229,13)"/><text x="49.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="46" y="1364" width="4" height="15" fill="rgb(247,16,9)"/><text x="49.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="46" y="1380" width="4" height="15" fill="rgb(253,40,18)"/><text x="49.00" y="1390.50"></text></g><g><title>0x7f418c586d12 (?) (1 samples, 0.31%)</title><rect x="46" y="1396" width="4" height="15" fill="rgb(220,184,47)"/><text x="49.00" y="1406.50"></text></g><g><title>0x7f418c583418 (?) (1 samples, 0.31%)</title><rect x="46" y="1412" width="4" height="15" fill="rgb(213,69,7)"/><text x="49.00" y="1422.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1_50_12_float_.py:4) (12 samples, 3.76%)</title><rect x="10" y="52" width="44" height="15" fill="rgb(217,179,33)"/><text x="13.00" y="62.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 3.76%)</title><rect x="10" y="68" width="44" height="15" fill="rgb(207,157,9)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 3.76%)</title><rect x="10" y="84" width="44" height="15" fill="rgb(222,123,5)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 3.76%)</title><rect x="10" y="100" width="44" height="15" fill="rgb(254,137,31)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 3.76%)</title><rect x="10" y="116" width="44" height="15" fill="rgb(211,200,49)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 3.76%)</title><rect x="10" y="132" width="44" height="15" fill="rgb(241,124,28)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_b_reg.py:7) (7 samples, 2.19%)</title><rect x="28" y="148" width="26" height="15" fill="rgb(224,84,39)"/><text x="31.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.19%)</title><rect x="28" y="164" width="26" height="15" fill="rgb(244,39,32)"/><text x="31.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.19%)</title><rect x="28" y="180" width="26" height="15" fill="rgb(244,119,6)"/><text x="31.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.19%)</title><rect x="28" y="196" width="26" height="15" fill="rgb(210,209,1)"/><text x="31.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.19%)</title><rect x="28" y="212" width="26" height="15" fill="rgb(250,47,13)"/><text x="31.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.19%)</title><rect x="28" y="228" width="26" height="15" fill="rgb(205,157,6)"/><text x="31.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 1.57%)</title><rect x="35" y="244" width="19" height="15" fill="rgb(216,131,6)"/><text x="38.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.57%)</title><rect x="35" y="260" width="19" height="15" fill="rgb(211,29,44)"/><text x="38.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.57%)</title><rect x="35" y="276" width="19" height="15" fill="rgb(222,8,32)"/><text x="38.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.57%)</title><rect x="35" y="292" width="19" height="15" fill="rgb(250,183,22)"/><text x="38.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.57%)</title><rect x="35" y="308" width="19" height="15" fill="rgb(234,38,54)"/><text x="38.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.57%)</title><rect x="35" y="324" width="19" height="15" fill="rgb(236,2,3)"/><text x="38.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 1.57%)</title><rect x="35" y="340" width="19" height="15" fill="rgb(238,155,42)"/><text x="38.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.57%)</title><rect x="35" y="356" width="19" height="15" fill="rgb(223,112,35)"/><text x="38.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.57%)</title><rect x="35" y="372" width="19" height="15" fill="rgb(221,146,1)"/><text x="38.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.57%)</title><rect x="35" y="388" width="19" height="15" fill="rgb(252,31,41)"/><text x="38.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.57%)</title><rect x="35" y="404" width="19" height="15" fill="rgb(210,161,18)"/><text x="38.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.57%)</title><rect x="35" y="420" width="19" height="15" fill="rgb(232,6,31)"/><text x="38.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 1.57%)</title><rect x="35" y="436" width="19" height="15" fill="rgb(233,123,40)"/><text x="38.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.57%)</title><rect x="35" y="452" width="19" height="15" fill="rgb(218,13,8)"/><text x="38.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.57%)</title><rect x="35" y="468" width="19" height="15" fill="rgb(243,223,14)"/><text x="38.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.57%)</title><rect x="35" y="484" width="19" height="15" fill="rgb(239,229,5)"/><text x="38.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.57%)</title><rect x="35" y="500" width="19" height="15" fill="rgb(232,114,12)"/><text x="38.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.57%)</title><rect x="35" y="516" width="19" height="15" fill="rgb(227,109,50)"/><text x="38.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.57%)</title><rect x="35" y="532" width="19" height="15" fill="rgb(246,67,24)"/><text x="38.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.57%)</title><rect x="35" y="548" width="19" height="15" fill="rgb(232,42,16)"/><text x="38.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.57%)</title><rect x="35" y="564" width="19" height="15" fill="rgb(207,75,32)"/><text x="38.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 1.57%)</title><rect x="35" y="580" width="19" height="15" fill="rgb(254,42,7)"/><text x="38.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.57%)</title><rect x="35" y="596" width="19" height="15" fill="rgb(240,156,31)"/><text x="38.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.57%)</title><rect x="35" y="612" width="19" height="15" fill="rgb(229,79,40)"/><text x="38.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.57%)</title><rect x="35" y="628" width="19" height="15" fill="rgb(214,51,39)"/><text x="38.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.57%)</title><rect x="35" y="644" width="19" height="15" fill="rgb(239,40,45)"/><text x="38.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.57%)</title><rect x="35" y="660" width="19" height="15" fill="rgb(253,199,26)"/><text x="38.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (5 samples, 1.57%)</title><rect x="35" y="676" width="19" height="15" fill="rgb(223,82,4)"/><text x="38.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.57%)</title><rect x="35" y="692" width="19" height="15" fill="rgb(218,68,1)"/><text x="38.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.57%)</title><rect x="35" y="708" width="19" height="15" fill="rgb(240,13,32)"/><text x="38.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.57%)</title><rect x="35" y="724" width="19" height="15" fill="rgb(218,172,11)"/><text x="38.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.57%)</title><rect x="35" y="740" width="19" height="15" fill="rgb(213,124,16)"/><text x="38.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.57%)</title><rect x="35" y="756" width="19" height="15" fill="rgb(236,148,2)"/><text x="38.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 1.57%)</title><rect x="35" y="772" width="19" height="15" fill="rgb(217,110,4)"/><text x="38.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.57%)</title><rect x="35" y="788" width="19" height="15" fill="rgb(231,29,19)"/><text x="38.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.57%)</title><rect x="35" y="804" width="19" height="15" fill="rgb(226,3,15)"/><text x="38.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.57%)</title><rect x="35" y="820" width="19" height="15" fill="rgb(211,211,31)"/><text x="38.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.57%)</title><rect x="35" y="836" width="19" height="15" fill="rgb(207,95,35)"/><text x="38.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.57%)</title><rect x="35" y="852" width="19" height="15" fill="rgb(220,43,27)"/><text x="38.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 1.57%)</title><rect x="35" y="868" width="19" height="15" fill="rgb(248,147,46)"/><text x="38.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.57%)</title><rect x="35" y="884" width="19" height="15" fill="rgb(216,81,9)"/><text x="38.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.57%)</title><rect x="35" y="900" width="19" height="15" fill="rgb(211,124,40)"/><text x="38.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.57%)</title><rect x="35" y="916" width="19" height="15" fill="rgb(222,102,51)"/><text x="38.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.57%)</title><rect x="35" y="932" width="19" height="15" fill="rgb(241,3,41)"/><text x="38.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.57%)</title><rect x="35" y="948" width="19" height="15" fill="rgb(250,97,32)"/><text x="38.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.57%)</title><rect x="35" y="964" width="19" height="15" fill="rgb(213,173,41)"/><text x="38.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.57%)</title><rect x="35" y="980" width="19" height="15" fill="rgb(226,129,46)"/><text x="38.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.57%)</title><rect x="35" y="996" width="19" height="15" fill="rgb(247,25,17)"/><text x="38.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 1.57%)</title><rect x="35" y="1012" width="19" height="15" fill="rgb(252,56,46)"/><text x="38.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.57%)</title><rect x="35" y="1028" width="19" height="15" fill="rgb(213,134,50)"/><text x="38.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.57%)</title><rect x="35" y="1044" width="19" height="15" fill="rgb(253,76,36)"/><text x="38.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.57%)</title><rect x="35" y="1060" width="19" height="15" fill="rgb(230,188,8)"/><text x="38.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.57%)</title><rect x="35" y="1076" width="19" height="15" fill="rgb(205,103,25)"/><text x="38.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.57%)</title><rect x="35" y="1092" width="19" height="15" fill="rgb(250,175,16)"/><text x="38.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.31%)</title><rect x="50" y="1108" width="4" height="15" fill="rgb(234,46,2)"/><text x="53.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="50" y="1124" width="4" height="15" fill="rgb(224,131,49)"/><text x="53.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="50" y="1140" width="4" height="15" fill="rgb(218,191,8)"/><text x="53.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="50" y="1156" width="4" height="15" fill="rgb(242,95,25)"/><text x="53.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="50" y="1172" width="4" height="15" fill="rgb(226,22,23)"/><text x="53.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="50" y="1188" width="4" height="15" fill="rgb(243,119,20)"/><text x="53.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="50" y="1204" width="4" height="15" fill="rgb(224,85,54)"/><text x="53.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="50" y="1220" width="4" height="15" fill="rgb(213,114,3)"/><text x="53.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.31%)</title><rect x="50" y="1236" width="4" height="15" fill="rgb(215,109,40)"/><text x="53.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="50" y="1252" width="4" height="15" fill="rgb(242,76,3)"/><text x="53.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="50" y="1268" width="4" height="15" fill="rgb(253,180,37)"/><text x="53.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="50" y="1284" width="4" height="15" fill="rgb(245,102,5)"/><text x="53.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="50" y="1300" width="4" height="15" fill="rgb(222,139,10)"/><text x="53.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="50" y="1316" width="4" height="15" fill="rgb(221,211,3)"/><text x="53.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="50" y="1332" width="4" height="15" fill="rgb(220,69,25)"/><text x="53.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="50" y="1348" width="4" height="15" fill="rgb(246,142,3)"/><text x="53.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.31%)</title><rect x="50" y="1364" width="4" height="15" fill="rgb(232,168,29)"/><text x="53.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="50" y="1380" width="4" height="15" fill="rgb(207,190,49)"/><text x="53.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="50" y="1396" width="4" height="15" fill="rgb(233,35,45)"/><text x="53.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="50" y="1412" width="4" height="15" fill="rgb(237,93,14)"/><text x="53.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="50" y="1428" width="4" height="15" fill="rgb(216,93,26)"/><text x="53.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="50" y="1444" width="4" height="15" fill="rgb(241,4,52)"/><text x="53.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.31%)</title><rect x="50" y="1460" width="4" height="15" fill="rgb(206,177,17)"/><text x="53.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="50" y="1476" width="4" height="15" fill="rgb(220,29,44)"/><text x="53.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="50" y="1492" width="4" height="15" fill="rgb(233,24,29)"/><text x="53.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="50" y="1508" width="4" height="15" fill="rgb(240,223,15)"/><text x="53.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="50" y="1524" width="4" height="15" fill="rgb(235,138,38)"/><text x="53.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="50" y="1540" width="4" height="15" fill="rgb(246,125,38)"/><text x="53.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.31%)</title><rect x="50" y="1556" width="4" height="15" fill="rgb(236,135,7)"/><text x="53.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.31%)</title><rect x="50" y="1572" width="4" height="15" fill="rgb(233,225,13)"/><text x="53.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.31%)</title><rect x="50" y="1588" width="4" height="15" fill="rgb(235,76,11)"/><text x="53.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.31%)</title><rect x="50" y="1604" width="4" height="15" fill="rgb(251,30,30)"/><text x="53.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.31%)</title><rect x="50" y="1620" width="4" height="15" fill="rgb(227,218,35)"/><text x="53.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.31%)</title><rect x="50" y="1636" width="4" height="15" fill="rgb(223,196,25)"/><text x="53.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.31%)</title><rect x="50" y="1652" width="4" height="15" fill="rgb(212,111,32)"/><text x="53.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.31%)</title><rect x="50" y="1668" width="4" height="15" fill="rgb(242,28,21)"/><text x="53.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.31%)</title><rect x="50" y="1684" width="4" height="15" fill="rgb(205,72,28)"/><text x="53.00" y="1694.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.31%)</title><rect x="50" y="1700" width="4" height="15" fill="rgb(244,113,41)"/><text x="53.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.31%)</title><rect x="50" y="1716" width="4" height="15" fill="rgb(237,114,32)"/><text x="53.00" y="1726.50"></text></g><g><title>visit_For (jinja2/compiler.py:1122) (1 samples, 0.31%)</title><rect x="50" y="1732" width="4" height="15" fill="rgb(244,72,2)"/><text x="53.00" y="1742.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.31%)</title><rect x="50" y="1748" width="4" height="15" fill="rgb(216,83,36)"/><text x="53.00" y="1758.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.31%)</title><rect x="50" y="1764" width="4" height="15" fill="rgb(251,178,20)"/><text x="53.00" y="1774.50"></text></g><g><title>visit_If (jinja2/compiler.py:1172) (1 samples, 0.31%)</title><rect x="50" y="1780" width="4" height="15" fill="rgb(216,229,0)"/><text x="53.00" y="1790.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.31%)</title><rect x="50" y="1796" width="4" height="15" fill="rgb(213,160,24)"/><text x="53.00" y="1806.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.31%)</title><rect x="50" y="1812" width="4" height="15" fill="rgb(212,94,31)"/><text x="53.00" y="1822.50"></text></g><g><title>visit_If (jinja2/compiler.py:1160) (1 samples, 0.31%)</title><rect x="50" y="1828" width="4" height="15" fill="rgb(246,224,12)"/><text x="53.00" y="1838.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.31%)</title><rect x="50" y="1844" width="4" height="15" fill="rgb(217,22,37)"/><text x="53.00" y="1854.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.31%)</title><rect x="50" y="1860" width="4" height="15" fill="rgb(252,127,7)"/><text x="53.00" y="1870.50"></text></g><g><title>visit_For (jinja2/compiler.py:1034) (1 samples, 0.31%)</title><rect x="50" y="1876" width="4" height="15" fill="rgb(231,175,29)"/><text x="53.00" y="1886.50"></text></g><g><title>find_undeclared (jinja2/compiler.py:115) (1 samples, 0.31%)</title><rect x="50" y="1892" width="4" height="15" fill="rgb(254,181,8)"/><text x="53.00" y="1902.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.31%)</title><rect x="50" y="1908" width="4" height="15" fill="rgb(228,140,30)"/><text x="53.00" y="1918.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.31%)</title><rect x="50" y="1924" width="4" height="15" fill="rgb(232,212,23)"/><text x="53.00" y="1934.50"></text></g><g><title>visit (jinja2/visitor.py:36) (1 samples, 0.31%)</title><rect x="50" y="1940" width="4" height="15" fill="rgb(231,129,17)"/><text x="53.00" y="1950.50"></text></g><g><title>get_visitor (jinja2/visitor.py:32) (1 samples, 0.31%)</title><rect x="50" y="1956" width="4" height="15" fill="rgb(233,87,50)"/><text x="53.00" y="1966.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="61" y="116" width="4" height="15" fill="rgb(224,70,3)"/><text x="64.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="61" y="132" width="4" height="15" fill="rgb(251,31,45)"/><text x="64.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.31%)</title><rect x="61" y="148" width="4" height="15" fill="rgb(218,73,17)"/><text x="64.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (2 samples, 0.63%)</title><rect x="76" y="180" width="7" height="15" fill="rgb(225,3,2)"/><text x="79.00" y="190.50"></text></g><g><title>0x7f41a33ef124 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="87" y="196" width="4" height="15" fill="rgb(242,206,21)"/><text x="90.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 1.57%)</title><rect x="117" y="212" width="18" height="15" fill="rgb(234,185,15)"/><text x="120.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (13 samples, 4.08%)</title><rect x="91" y="196" width="48" height="15" fill="rgb(211,92,32)"/><text x="94.00" y="206.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.31%)</title><rect x="135" y="212" width="4" height="15" fill="rgb(242,173,8)"/><text x="138.00" y="222.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:205) (22 samples, 6.90%)</title><rect x="72" y="164" width="82" height="15" fill="rgb(221,108,42)"/><text x="75.00" y="174.50">_decision..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (19 samples, 5.96%)</title><rect x="83" y="180" width="71" height="15" fill="rgb(215,204,14)"/><text x="86.00" y="190.50">check_is..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (4 samples, 1.25%)</title><rect x="139" y="196" width="15" height="15" fill="rgb(217,52,19)"/><text x="142.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.63%)</title><rect x="146" y="212" width="8" height="15" fill="rgb(238,223,46)"/><text x="149.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:434) (1 samples, 0.31%)</title><rect x="161" y="180" width="4" height="15" fill="rgb(209,124,26)"/><text x="164.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.31%)</title><rect x="165" y="180" width="4" height="15" fill="rgb(220,180,34)"/><text x="168.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:462) (1 samples, 0.31%)</title><rect x="169" y="180" width="3" height="15" fill="rgb(225,1,36)"/><text x="172.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (3 samples, 0.94%)</title><rect x="172" y="180" width="11" height="15" fill="rgb(220,177,36)"/><text x="175.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:487) (1 samples, 0.31%)</title><rect x="183" y="180" width="4" height="15" fill="rgb(241,92,28)"/><text x="186.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.31%)</title><rect x="187" y="180" width="4" height="15" fill="rgb(210,67,37)"/><text x="190.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.31%)</title><rect x="187" y="196" width="4" height="15" fill="rgb(208,140,53)"/><text x="190.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 0.63%)</title><rect x="217" y="196" width="7" height="15" fill="rgb(219,187,45)"/><text x="220.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (11 samples, 3.45%)</title><rect x="191" y="180" width="40" height="15" fill="rgb(221,87,26)"/><text x="194.00" y="190.50">che..</text></g><g><title>__init__ (warnings.py:462) (2 samples, 0.63%)</title><rect x="224" y="196" width="7" height="15" fill="rgb(231,51,8)"/><text x="227.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.31%)</title><rect x="239" y="196" width="4" height="15" fill="rgb(230,112,44)"/><text x="242.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (8 samples, 2.51%)</title><rect x="246" y="212" width="30" height="15" fill="rgb(211,222,51)"/><text x="249.00" y="222.50">_a..</text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.31%)</title><rect x="276" y="212" width="4" height="15" fill="rgb(227,141,33)"/><text x="279.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:188) (2 samples, 0.63%)</title><rect x="280" y="212" width="7" height="15" fill="rgb(210,82,31)"/><text x="283.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (17 samples, 5.33%)</title><rect x="231" y="180" width="63" height="15" fill="rgb(218,56,18)"/><text x="234.00" y="190.50">check_..</text></g><g><title>simplefilter (warnings.py:179) (14 samples, 4.39%)</title><rect x="243" y="196" width="51" height="15" fill="rgb(216,39,52)"/><text x="246.00" y="206.50">simpl..</text></g><g><title>_add_filter (warnings.py:189) (2 samples, 0.63%)</title><rect x="287" y="212" width="7" height="15" fill="rgb(224,185,27)"/><text x="290.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1631) (1 samples, 0.31%)</title><rect x="298" y="212" width="4" height="15" fill="rgb(224,187,26)"/><text x="301.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 0.94%)</title><rect x="294" y="180" width="11" height="15" fill="rgb(233,62,49)"/><text x="297.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.63%)</title><rect x="298" y="196" width="7" height="15" fill="rgb(205,161,49)"/><text x="301.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1640) (1 samples, 0.31%)</title><rect x="302" y="212" width="3" height="15" fill="rgb(207,82,47)"/><text x="305.00" y="222.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.31%)</title><rect x="317" y="196" width="3" height="15" fill="rgb(224,152,49)"/><text x="320.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:498) (2 samples, 0.63%)</title><rect x="320" y="196" width="8" height="15" fill="rgb(235,3,3)"/><text x="323.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (9 samples, 2.82%)</title><rect x="305" y="180" width="34" height="15" fill="rgb(246,117,16)"/><text x="308.00" y="190.50">ch..</text></g><g><title>__exit__ (warnings.py:499) (3 samples, 0.94%)</title><rect x="328" y="196" width="11" height="15" fill="rgb(252,192,37)"/><text x="331.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.31%)</title><rect x="339" y="180" width="3" height="15" fill="rgb(224,158,9)"/><text x="342.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:535) (1 samples, 0.31%)</title><rect x="342" y="180" width="4" height="15" fill="rgb(246,221,0)"/><text x="345.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:293) (1 samples, 0.31%)</title><rect x="361" y="212" width="4" height="15" fill="rgb(235,150,3)"/><text x="364.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (2 samples, 0.63%)</title><rect x="365" y="212" width="7" height="15" fill="rgb(228,155,32)"/><text x="368.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (6 samples, 1.88%)</title><rect x="354" y="196" width="22" height="15" fill="rgb(244,178,3)"/><text x="357.00" y="206.50">i..</text></g><g><title>issubclass_ (numpy/core/numerictypes.py:329) (1 samples, 0.31%)</title><rect x="372" y="212" width="4" height="15" fill="rgb(242,122,21)"/><text x="375.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.31%)</title><rect x="379" y="212" width="4" height="15" fill="rgb(226,64,38)"/><text x="382.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (11 samples, 3.45%)</title><rect x="346" y="180" width="41" height="15" fill="rgb(253,18,49)"/><text x="349.00" y="190.50">che..</text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (3 samples, 0.94%)</title><rect x="376" y="196" width="11" height="15" fill="rgb(232,137,36)"/><text x="379.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.31%)</title><rect x="383" y="212" width="4" height="15" fill="rgb(250,100,26)"/><text x="386.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1401) (1 samples, 0.31%)</title><rect x="383" y="228" width="4" height="15" fill="rgb(213,211,50)"/><text x="386.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.94%)</title><rect x="420" y="212" width="11" height="15" fill="rgb(253,51,17)"/><text x="423.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.31%)</title><rect x="431" y="212" width="4" height="15" fill="rgb(244,23,0)"/><text x="434.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (4 samples, 1.25%)</title><rect x="435" y="212" width="15" height="15" fill="rgb(230,138,31)"/><text x="438.00" y="222.50"></text></g><g><title>0x7f41a33ef124 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="446" y="228" width="4" height="15" fill="rgb(228,229,17)"/><text x="449.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (15 samples, 4.70%)</title><rect x="398" y="196" width="55" height="15" fill="rgb(235,190,43)"/><text x="401.00" y="206.50">_asse..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.31%)</title><rect x="450" y="212" width="3" height="15" fill="rgb(215,200,47)"/><text x="453.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (20 samples, 6.27%)</title><rect x="387" y="180" width="74" height="15" fill="rgb(250,178,31)"/><text x="390.00" y="190.50">check_ar..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.63%)</title><rect x="453" y="196" width="8" height="15" fill="rgb(243,219,29)"/><text x="456.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (2 samples, 0.63%)</title><rect x="453" y="212" width="8" height="15" fill="rgb(213,180,51)"/><text x="456.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.31%)</title><rect x="461" y="180" width="3" height="15" fill="rgb(239,162,0)"/><text x="464.00" y="190.50"></text></g><g><title>0x7f41a33e4b60 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="487" y="212" width="3" height="15" fill="rgb(227,165,14)"/><text x="490.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (7 samples, 2.19%)</title><rect x="468" y="196" width="26" height="15" fill="rgb(233,162,42)"/><text x="471.00" y="206.50">_..</text></g><g><title>0x7f41a33ef1ef (libc-2.29.so) (1 samples, 0.31%)</title><rect x="490" y="212" width="4" height="15" fill="rgb(216,24,53)"/><text x="493.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (2 samples, 0.63%)</title><rect x="494" y="196" width="7" height="15" fill="rgb(231,158,16)"/><text x="497.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.31%)</title><rect x="501" y="196" width="4" height="15" fill="rgb(208,59,38)"/><text x="504.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (18 samples, 5.64%)</title><rect x="464" y="180" width="67" height="15" fill="rgb(209,25,7)"/><text x="467.00" y="190.50">check_a..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (7 samples, 2.19%)</title><rect x="505" y="196" width="26" height="15" fill="rgb(206,107,44)"/><text x="508.00" y="206.50">_..</text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.63%)</title><rect x="524" y="212" width="7" height="15" fill="rgb(237,122,7)"/><text x="527.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.31%)</title><rect x="527" y="228" width="4" height="15" fill="rgb(221,171,6)"/><text x="530.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.31%)</title><rect x="531" y="180" width="4" height="15" fill="rgb(234,184,30)"/><text x="534.00" y="190.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:207) (104 samples, 32.60%)</title><rect x="154" y="164" width="384" height="15" fill="rgb(245,217,5)"/><text x="157.00" y="174.50">_decision_function (sklearn/linear_model/_base.py:20..</text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.31%)</title><rect x="535" y="180" width="3" height="15" fill="rgb(240,81,39)"/><text x="538.00" y="190.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.31%)</title><rect x="542" y="212" width="4" height="15" fill="rgb(240,71,21)"/><text x="545.00" y="222.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.31%)</title><rect x="542" y="228" width="4" height="15" fill="rgb(230,144,47)"/><text x="545.00" y="238.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:143) (1 samples, 0.31%)</title><rect x="542" y="244" width="4" height="15" fill="rgb(212,170,25)"/><text x="545.00" y="254.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (2 samples, 0.63%)</title><rect x="542" y="180" width="8" height="15" fill="rgb(244,48,1)"/><text x="545.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (2 samples, 0.63%)</title><rect x="542" y="196" width="8" height="15" fill="rgb(241,89,36)"/><text x="545.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.31%)</title><rect x="546" y="212" width="4" height="15" fill="rgb(249,212,11)"/><text x="549.00" y="222.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:208) (4 samples, 1.25%)</title><rect x="538" y="164" width="15" height="15" fill="rgb(247,228,31)"/><text x="541.00" y="174.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.31%)</title><rect x="550" y="180" width="3" height="15" fill="rgb(209,173,24)"/><text x="553.00" y="190.50"></text></g><g><title>0x7f41a34ac154 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="550" y="196" width="3" height="15" fill="rgb(208,133,37)"/><text x="553.00" y="206.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.31%)</title><rect x="561" y="276" width="3" height="15" fill="rgb(213,111,50)"/><text x="564.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (7 samples, 2.19%)</title><rect x="561" y="196" width="26" height="15" fill="rgb(219,17,43)"/><text x="564.00" y="206.50">u..</text></g><g><title>PyUFunc_CheckOverride (override.c:452) (7 samples, 2.19%)</title><rect x="561" y="212" width="26" height="15" fill="rgb(215,141,30)"/><text x="564.00" y="222.50">P..</text></g><g><title>get_array_ufunc_overrides (override.c:72) (7 samples, 2.19%)</title><rect x="561" y="228" width="26" height="15" fill="rgb(229,79,47)"/><text x="564.00" y="238.50">g..</text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (7 samples, 2.19%)</title><rect x="561" y="244" width="26" height="15" fill="rgb(223,80,2)"/><text x="564.00" y="254.50">P..</text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (7 samples, 2.19%)</title><rect x="561" y="260" width="26" height="15" fill="rgb(222,145,51)"/><text x="564.00" y="270.50">P..</text></g><g><title>maybe_get_attr (get_attr_string.h:80) (6 samples, 1.88%)</title><rect x="564" y="276" width="23" height="15" fill="rgb(226,54,50)"/><text x="567.00" y="286.50">m..</text></g><g><title>0x7f41a33e4e7e (libc-2.29.so) (1 samples, 0.31%)</title><rect x="583" y="292" width="4" height="15" fill="rgb(230,21,8)"/><text x="586.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.31%)</title><rect x="587" y="244" width="3" height="15" fill="rgb(242,106,30)"/><text x="590.00" y="254.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1618) (1 samples, 0.31%)</title><rect x="587" y="260" width="3" height="15" fill="rgb(238,85,42)"/><text x="590.00" y="270.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:540) (1 samples, 0.31%)</title><rect x="587" y="276" width="3" height="15" fill="rgb(205,103,22)"/><text x="590.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.31%)</title><rect x="590" y="244" width="4" height="15" fill="rgb(219,167,40)"/><text x="593.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.94%)</title><rect x="587" y="212" width="11" height="15" fill="rgb(244,62,4)"/><text x="590.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (3 samples, 0.94%)</title><rect x="587" y="228" width="11" height="15" fill="rgb(239,44,26)"/><text x="590.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.31%)</title><rect x="594" y="244" width="4" height="15" fill="rgb(243,192,26)"/><text x="597.00" y="254.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:308) (1 samples, 0.31%)</title><rect x="594" y="260" width="4" height="15" fill="rgb(254,169,26)"/><text x="597.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.31%)</title><rect x="594" y="276" width="4" height="15" fill="rgb(245,1,34)"/><text x="597.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.31%)</title><rect x="594" y="292" width="4" height="15" fill="rgb(208,5,16)"/><text x="597.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.31%)</title><rect x="594" y="308" width="4" height="15" fill="rgb(205,145,20)"/><text x="597.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:485) (1 samples, 0.31%)</title><rect x="598" y="228" width="3" height="15" fill="rgb(210,121,23)"/><text x="601.00" y="238.50"></text></g><g><title>DOUBLE_copyswap (arraytypes.c.src:1924) (1 samples, 0.31%)</title><rect x="601" y="276" width="4" height="15" fill="rgb(233,21,49)"/><text x="604.00" y="286.50"></text></g><g><title>_basic_copy (arraytypes.c.src:1890) (1 samples, 0.31%)</title><rect x="601" y="292" width="4" height="15" fill="rgb(212,117,32)"/><text x="604.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.94%)</title><rect x="598" y="212" width="11" height="15" fill="rgb(231,198,53)"/><text x="601.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (2 samples, 0.63%)</title><rect x="601" y="228" width="8" height="15" fill="rgb(248,175,44)"/><text x="604.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (2 samples, 0.63%)</title><rect x="601" y="244" width="8" height="15" fill="rgb(208,38,44)"/><text x="604.00" y="254.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (2 samples, 0.63%)</title><rect x="601" y="260" width="8" height="15" fill="rgb(209,123,26)"/><text x="604.00" y="270.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c:1630) (1 samples, 0.31%)</title><rect x="605" y="276" width="4" height="15" fill="rgb(207,198,43)"/><text x="608.00" y="286.50"></text></g><g><title>array_add (number.c:330) (14 samples, 4.39%)</title><rect x="561" y="180" width="51" height="15" fill="rgb(225,61,54)"/><text x="564.00" y="190.50">array..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.19%)</title><rect x="587" y="196" width="25" height="15" fill="rgb(241,215,21)"/><text x="590.00" y="206.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.31%)</title><rect x="609" y="212" width="3" height="15" fill="rgb(226,124,17)"/><text x="612.00" y="222.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.31%)</title><rect x="609" y="228" width="3" height="15" fill="rgb(207,50,30)"/><text x="612.00" y="238.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.31%)</title><rect x="609" y="244" width="3" height="15" fill="rgb(206,68,15)"/><text x="612.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2592) (1 samples, 0.31%)</title><rect x="624" y="228" width="3" height="15" fill="rgb(249,7,36)"/><text x="627.00" y="238.50"></text></g><g><title>_initialize_variable_parts (ufunc_object.c:2511) (1 samples, 0.31%)</title><rect x="624" y="244" width="3" height="15" fill="rgb(207,202,7)"/><text x="627.00" y="254.50"></text></g><g><title>0x7f41a33eedb3 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="624" y="260" width="3" height="15" fill="rgb(216,180,16)"/><text x="627.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1070) (1 samples, 0.31%)</title><rect x="627" y="244" width="4" height="15" fill="rgb(212,64,3)"/><text x="630.00" y="254.50"></text></g><g><title>0x7f41a25f19d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="627" y="260" width="4" height="15" fill="rgb(210,95,34)"/><text x="630.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.31%)</title><rect x="631" y="244" width="4" height="15" fill="rgb(229,207,22)"/><text x="634.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.31%)</title><rect x="631" y="260" width="4" height="15" fill="rgb(227,148,13)"/><text x="634.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2606) (3 samples, 0.94%)</title><rect x="627" y="228" width="11" height="15" fill="rgb(226,159,20)"/><text x="630.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1274) (1 samples, 0.31%)</title><rect x="635" y="244" width="3" height="15" fill="rgb(250,215,25)"/><text x="638.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2779) (1 samples, 0.31%)</title><rect x="638" y="228" width="4" height="15" fill="rgb(223,61,51)"/><text x="641.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.31%)</title><rect x="642" y="244" width="4" height="15" fill="rgb(247,40,29)"/><text x="645.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.31%)</title><rect x="646" y="260" width="3" height="15" fill="rgb(219,211,43)"/><text x="649.00" y="270.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2683) (1 samples, 0.31%)</title><rect x="646" y="276" width="3" height="15" fill="rgb(253,169,0)"/><text x="649.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.31%)</title><rect x="649" y="260" width="4" height="15" fill="rgb(223,73,36)"/><text x="652.00" y="270.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2684) (1 samples, 0.31%)</title><rect x="649" y="276" width="4" height="15" fill="rgb(205,31,43)"/><text x="652.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.31%)</title><rect x="649" y="292" width="4" height="15" fill="rgb(246,152,17)"/><text x="652.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:257) (1 samples, 0.31%)</title><rect x="653" y="276" width="4" height="15" fill="rgb(237,10,33)"/><text x="656.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:378) (1 samples, 0.31%)</title><rect x="657" y="276" width="4" height="15" fill="rgb(228,214,19)"/><text x="660.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="661" y="308" width="3" height="15" fill="rgb(229,88,31)"/><text x="664.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (4 samples, 1.25%)</title><rect x="653" y="260" width="15" height="15" fill="rgb(246,54,20)"/><text x="656.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.63%)</title><rect x="661" y="276" width="7" height="15" fill="rgb(245,167,41)"/><text x="664.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (2 samples, 0.63%)</title><rect x="661" y="292" width="7" height="15" fill="rgb(226,70,10)"/><text x="664.00" y="302.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="664" y="308" width="4" height="15" fill="rgb(242,104,30)"/><text x="667.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (8 samples, 2.51%)</title><rect x="642" y="228" width="30" height="15" fill="rgb(233,142,20)"/><text x="645.00" y="238.50">Py..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (7 samples, 2.19%)</title><rect x="646" y="244" width="26" height="15" fill="rgb(235,19,38)"/><text x="649.00" y="254.50">N..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3102) (1 samples, 0.31%)</title><rect x="668" y="260" width="4" height="15" fill="rgb(216,187,20)"/><text x="671.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2931) (1 samples, 0.31%)</title><rect x="672" y="228" width="3" height="15" fill="rgb(216,42,46)"/><text x="675.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.31%)</title><rect x="675" y="228" width="4" height="15" fill="rgb(247,175,37)"/><text x="678.00" y="238.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:414) (1 samples, 0.31%)</title><rect x="675" y="244" width="4" height="15" fill="rgb(254,84,22)"/><text x="678.00" y="254.50"></text></g><g><title>is_blasable2d (matmul.c.src:51) (1 samples, 0.31%)</title><rect x="675" y="260" width="4" height="15" fill="rgb(224,189,35)"/><text x="678.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (17 samples, 5.33%)</title><rect x="624" y="196" width="62" height="15" fill="rgb(240,52,0)"/><text x="627.00" y="206.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (17 samples, 5.33%)</title><rect x="624" y="212" width="62" height="15" fill="rgb(207,106,0)"/><text x="627.00" y="222.50">PyUFun..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (2 samples, 0.63%)</title><rect x="679" y="228" width="7" height="15" fill="rgb(237,78,13)"/><text x="682.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (2 samples, 0.63%)</title><rect x="679" y="244" width="7" height="15" fill="rgb(246,155,12)"/><text x="682.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.63%)</title><rect x="679" y="260" width="7" height="15" fill="rgb(235,52,43)"/><text x="682.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.63%)</title><rect x="679" y="276" width="7" height="15" fill="rgb(235,118,49)"/><text x="682.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (2 samples, 0.63%)</title><rect x="679" y="292" width="7" height="15" fill="rgb(211,174,45)"/><text x="682.00" y="302.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (21 samples, 6.58%)</title><rect x="612" y="180" width="78" height="15" fill="rgb(205,184,54)"/><text x="615.00" y="190.50">safe_spar..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.31%)</title><rect x="686" y="196" width="4" height="15" fill="rgb(254,80,42)"/><text x="689.00" y="206.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.31%)</title><rect x="686" y="212" width="4" height="15" fill="rgb(206,54,16)"/><text x="689.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1_50_12_float_.py:54) (176 samples, 55.17%)</title><rect x="54" y="52" width="651" height="15" fill="rgb(254,46,21)"/><text x="57.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_b_reg_1_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_LinearRegression_default_b_reg_1_50_12_float_.py:53) (176 samples, 55.17%)</title><rect x="54" y="68" width="651" height="15" fill="rgb(205,222,51)"/><text x="57.00" y="78.50">profile_skl (bench_LinearRegression_default_b_reg_1_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py:37) (176 samples, 55.17%)</title><rect x="54" y="84" width="651" height="15" fill="rgb(250,142,39)"/><text x="57.00" y="94.50">setup_profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py:37)</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py:31) (176 samples, 55.17%)</title><rect x="54" y="100" width="651" height="15" fill="rgb(222,19,52)"/><text x="57.00" y="110.50">profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (173 samples, 54.23%)</title><rect x="65" y="116" width="640" height="15" fill="rgb(209,28,35)"/><text x="68.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (171 samples, 53.61%)</title><rect x="72" y="132" width="633" height="15" fill="rgb(233,187,1)"/><text x="75.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/linear_model/_base.py:225) (171 samples, 53.61%)</title><rect x="72" y="148" width="633" height="15" fill="rgb(249,135,15)"/><text x="75.00" y="158.50">predict (sklearn/linear_model/_base.py:225)</text></g><g><title>_decision_function (sklearn/linear_model/_base.py:209) (41 samples, 12.85%)</title><rect x="553" y="164" width="152" height="15" fill="rgb(231,91,20)"/><text x="556.00" y="174.50">_decision_function ..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (4 samples, 1.25%)</title><rect x="690" y="180" width="15" height="15" fill="rgb(224,111,18)"/><text x="693.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (2 samples, 0.63%)</title><rect x="698" y="196" width="7" height="15" fill="rgb(233,132,46)"/><text x="701.00" y="206.50"></text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py:30) (1 samples, 0.31%)</title><rect x="705" y="100" width="4" height="15" fill="rgb(242,64,4)"/><text x="708.00" y="110.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="709" y="116" width="3" height="15" fill="rgb(229,228,19)"/><text x="712.00" y="126.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.31%)</title><rect x="735" y="148" width="3" height="15" fill="rgb(227,165,43)"/><text x="738.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:418) (1 samples, 0.31%)</title><rect x="746" y="164" width="3" height="15" fill="rgb(240,95,26)"/><text x="749.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.31%)</title><rect x="749" y="164" width="4" height="15" fill="rgb(231,146,43)"/><text x="752.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.31%)</title><rect x="753" y="164" width="4" height="15" fill="rgb(221,92,37)"/><text x="756.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.31%)</title><rect x="757" y="164" width="3" height="15" fill="rgb(225,58,1)"/><text x="760.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (1 samples, 0.31%)</title><rect x="760" y="164" width="4" height="15" fill="rgb(207,211,46)"/><text x="763.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:447) (1 samples, 0.31%)</title><rect x="764" y="164" width="4" height="15" fill="rgb(210,86,14)"/><text x="767.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (3 samples, 0.94%)</title><rect x="768" y="164" width="11" height="15" fill="rgb(235,180,51)"/><text x="771.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.63%)</title><rect x="786" y="180" width="8" height="15" fill="rgb(211,43,1)"/><text x="789.00" y="190.50"></text></g><g><title>0x7f41a33ef120 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="794" y="196" width="3" height="15" fill="rgb(236,202,12)"/><text x="797.00" y="206.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (2 samples, 0.63%)</title><rect x="820" y="260" width="7" height="15" fill="rgb(236,59,19)"/><text x="823.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.31%)</title><rect x="831" y="276" width="3" height="15" fill="rgb(247,15,8)"/><text x="834.00" y="286.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.31%)</title><rect x="831" y="292" width="3" height="15" fill="rgb(233,139,5)"/><text x="834.00" y="302.50"></text></g><g><title>get_array_function (arrayfunction_override.c:36) (1 samples, 0.31%)</title><rect x="831" y="308" width="3" height="15" fill="rgb(224,47,39)"/><text x="834.00" y="318.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (3 samples, 0.94%)</title><rect x="834" y="292" width="11" height="15" fill="rgb(238,203,2)"/><text x="837.00" y="302.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:242) (1 samples, 0.31%)</title><rect x="845" y="324" width="4" height="15" fill="rgb(238,47,32)"/><text x="848.00" y="334.50"></text></g><g><title>_bad_strides (cblasfuncs.c:193) (1 samples, 0.31%)</title><rect x="845" y="340" width="4" height="15" fill="rgb(218,110,43)"/><text x="848.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.31%)</title><rect x="849" y="372" width="4" height="15" fill="rgb(248,140,4)"/><text x="852.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.31%)</title><rect x="849" y="388" width="4" height="15" fill="rgb(214,125,37)"/><text x="852.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (2 samples, 0.63%)</title><rect x="853" y="372" width="7" height="15" fill="rgb(250,188,3)"/><text x="856.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (2 samples, 0.63%)</title><rect x="853" y="388" width="7" height="15" fill="rgb(242,152,31)"/><text x="856.00" y="398.50"></text></g><g><title>IsAligned (array_assign.c:140) (2 samples, 0.63%)</title><rect x="853" y="404" width="7" height="15" fill="rgb(254,34,7)"/><text x="856.00" y="414.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (2 samples, 0.63%)</title><rect x="853" y="420" width="7" height="15" fill="rgb(219,71,29)"/><text x="856.00" y="430.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (4 samples, 1.25%)</title><rect x="849" y="324" width="15" height="15" fill="rgb(230,120,46)"/><text x="852.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (4 samples, 1.25%)</title><rect x="849" y="340" width="15" height="15" fill="rgb(240,51,23)"/><text x="852.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (4 samples, 1.25%)</title><rect x="849" y="356" width="15" height="15" fill="rgb(227,7,4)"/><text x="852.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1151) (1 samples, 0.31%)</title><rect x="860" y="372" width="4" height="15" fill="rgb(228,127,24)"/><text x="863.00" y="382.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:527) (1 samples, 0.31%)</title><rect x="864" y="324" width="4" height="15" fill="rgb(205,8,22)"/><text x="867.00" y="334.50"></text></g><g><title>FLOAT_dot (arraytypes.c.src:3439) (1 samples, 0.31%)</title><rect x="868" y="340" width="3" height="15" fill="rgb(246,69,48)"/><text x="871.00" y="350.50"></text></g><g><title>cblas_sdot (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.31%)</title><rect x="868" y="356" width="3" height="15" fill="rgb(221,208,9)"/><text x="871.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py:28) (19 samples, 5.96%)</title><rect x="805" y="228" width="70" height="15" fill="rgb(233,107,28)"/><text x="808.00" y="238.50">_run (m..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (17 samples, 5.33%)</title><rect x="812" y="244" width="63" height="15" fill="rgb(226,24,39)"/><text x="815.00" y="254.50">numpy_..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (13 samples, 4.08%)</title><rect x="827" y="260" width="48" height="15" fill="rgb(248,105,1)"/><text x="830.00" y="270.50">dot ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (11 samples, 3.45%)</title><rect x="834" y="276" width="41" height="15" fill="rgb(228,8,19)"/><text x="837.00" y="286.50">arr..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (8 samples, 2.51%)</title><rect x="845" y="292" width="30" height="15" fill="rgb(247,144,48)"/><text x="848.00" y="302.50">ar..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (8 samples, 2.51%)</title><rect x="845" y="308" width="30" height="15" fill="rgb(229,177,22)"/><text x="848.00" y="318.50">Py..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:534) (2 samples, 0.63%)</title><rect x="868" y="324" width="7" height="15" fill="rgb(215,15,41)"/><text x="871.00" y="334.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="871" y="340" width="4" height="15" fill="rgb(253,174,52)"/><text x="874.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py:29) (2 samples, 0.63%)</title><rect x="875" y="228" width="7" height="15" fill="rgb(215,144,44)"/><text x="878.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.31%)</title><rect x="886" y="260" width="4" height="15" fill="rgb(230,139,32)"/><text x="889.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.31%)</title><rect x="886" y="276" width="4" height="15" fill="rgb(240,139,46)"/><text x="889.00" y="286.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.31%)</title><rect x="886" y="292" width="4" height="15" fill="rgb(250,223,51)"/><text x="889.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3178) (1 samples, 0.31%)</title><rect x="890" y="260" width="4" height="15" fill="rgb(240,97,6)"/><text x="893.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.31%)</title><rect x="894" y="292" width="3" height="15" fill="rgb(237,8,42)"/><text x="897.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.31%)</title><rect x="894" y="308" width="3" height="15" fill="rgb(250,116,24)"/><text x="897.00" y="318.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.31%)</title><rect x="894" y="324" width="3" height="15" fill="rgb(241,127,21)"/><text x="897.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.63%)</title><rect x="894" y="260" width="7" height="15" fill="rgb(252,50,38)"/><text x="897.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (2 samples, 0.63%)</title><rect x="894" y="276" width="7" height="15" fill="rgb(240,95,51)"/><text x="897.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1891) (1 samples, 0.31%)</title><rect x="897" y="292" width="4" height="15" fill="rgb(248,14,47)"/><text x="900.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1504) (1 samples, 0.31%)</title><rect x="901" y="292" width="4" height="15" fill="rgb(234,175,26)"/><text x="904.00" y="302.50"></text></g><g><title>prepare_ufunc_output (ufunc_object.c:1403) (1 samples, 0.31%)</title><rect x="901" y="308" width="4" height="15" fill="rgb(243,211,0)"/><text x="904.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (3 samples, 0.94%)</title><rect x="905" y="308" width="11" height="15" fill="rgb(226,41,31)"/><text x="908.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="912" y="324" width="4" height="15" fill="rgb(254,10,49)"/><text x="915.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.31%)</title><rect x="916" y="308" width="3" height="15" fill="rgb(244,12,51)"/><text x="919.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1240) (1 samples, 0.31%)</title><rect x="916" y="324" width="3" height="15" fill="rgb(230,142,48)"/><text x="919.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:236) (1 samples, 0.31%)</title><rect x="919" y="308" width="4" height="15" fill="rgb(236,73,33)"/><text x="922.00" y="318.50"></text></g><g><title>0x7f41a33ef14a (libc-2.29.so) (1 samples, 0.31%)</title><rect x="919" y="324" width="4" height="15" fill="rgb(244,174,7)"/><text x="922.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.31%)</title><rect x="923" y="308" width="4" height="15" fill="rgb(207,183,2)"/><text x="926.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.31%)</title><rect x="923" y="324" width="4" height="15" fill="rgb(220,200,36)"/><text x="926.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.31%)</title><rect x="927" y="308" width="4" height="15" fill="rgb(215,179,45)"/><text x="930.00" y="318.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c:2088) (1 samples, 0.31%)</title><rect x="927" y="324" width="4" height="15" fill="rgb(236,13,9)"/><text x="930.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.31%)</title><rect x="931" y="308" width="3" height="15" fill="rgb(237,48,22)"/><text x="934.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2790) (1 samples, 0.31%)</title><rect x="931" y="324" width="3" height="15" fill="rgb(205,136,17)"/><text x="934.00" y="334.50"></text></g><g><title>solve_may_have_internal_overlap (mem_overlap.c:853) (1 samples, 0.31%)</title><rect x="931" y="340" width="3" height="15" fill="rgb(247,129,40)"/><text x="934.00" y="350.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3502) (1 samples, 0.31%)</title><rect x="934" y="340" width="4" height="15" fill="rgb(230,59,50)"/><text x="937.00" y="350.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (2 samples, 0.63%)</title><rect x="934" y="324" width="8" height="15" fill="rgb(230,53,50)"/><text x="937.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.31%)</title><rect x="938" y="340" width="4" height="15" fill="rgb(233,76,44)"/><text x="941.00" y="350.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.31%)</title><rect x="938" y="356" width="4" height="15" fill="rgb(231,31,5)"/><text x="941.00" y="366.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:347) (1 samples, 0.31%)</title><rect x="938" y="372" width="4" height="15" fill="rgb(243,111,51)"/><text x="941.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (11 samples, 3.45%)</title><rect x="905" y="292" width="40" height="15" fill="rgb(238,40,8)"/><text x="908.00" y="302.50">ite..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (3 samples, 0.94%)</title><rect x="934" y="308" width="11" height="15" fill="rgb(219,170,44)"/><text x="937.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3218) (1 samples, 0.31%)</title><rect x="942" y="324" width="3" height="15" fill="rgb(216,122,12)"/><text x="945.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.31%)</title><rect x="945" y="292" width="4" height="15" fill="rgb(216,136,0)"/><text x="948.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.31%)</title><rect x="945" y="308" width="4" height="15" fill="rgb(217,203,9)"/><text x="948.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.31%)</title><rect x="945" y="324" width="4" height="15" fill="rgb(224,145,19)"/><text x="948.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="945" y="340" width="4" height="15" fill="rgb(233,29,4)"/><text x="948.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (14 samples, 4.39%)</title><rect x="901" y="260" width="52" height="15" fill="rgb(241,217,47)"/><text x="904.00" y="270.50">PyUFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (14 samples, 4.39%)</title><rect x="901" y="276" width="52" height="15" fill="rgb(225,105,39)"/><text x="904.00" y="286.50">execu..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.31%)</title><rect x="949" y="292" width="4" height="15" fill="rgb(206,148,26)"/><text x="952.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (1 samples, 0.31%)</title><rect x="949" y="308" width="4" height="15" fill="rgb(207,39,27)"/><text x="952.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (43 samples, 13.48%)</title><rect x="797" y="196" width="159" height="15" fill="rgb(208,87,28)"/><text x="800.00" y="206.50">run (mlprodict/onnxr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (42 samples, 13.17%)</title><rect x="801" y="212" width="155" height="15" fill="rgb(237,196,24)"/><text x="804.00" y="222.50">run (mlprodict/onnx..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py:30) (20 samples, 6.27%)</title><rect x="882" y="228" width="74" height="15" fill="rgb(243,216,29)"/><text x="885.00" y="238.50">_run (ml..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (19 samples, 5.96%)</title><rect x="886" y="244" width="70" height="15" fill="rgb(245,212,44)"/><text x="889.00" y="254.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.31%)</title><rect x="953" y="260" width="3" height="15" fill="rgb(217,0,50)"/><text x="956.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (46 samples, 14.42%)</title><rect x="794" y="180" width="170" height="15" fill="rgb(220,75,28)"/><text x="797.00" y="190.50">run (mlprodict/onnxrt/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (2 samples, 0.63%)</title><rect x="956" y="196" width="8" height="15" fill="rgb(210,87,6)"/><text x="959.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3248) (1 samples, 0.31%)</title><rect x="960" y="212" width="4" height="15" fill="rgb(215,152,28)"/><text x="963.00" y="222.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1501) (1 samples, 0.31%)</title><rect x="960" y="228" width="4" height="15" fill="rgb(224,4,36)"/><text x="963.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (2 samples, 0.63%)</title><rect x="964" y="180" width="7" height="15" fill="rgb(245,78,50)"/><text x="967.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.31%)</title><rect x="971" y="180" width="4" height="15" fill="rgb(209,102,38)"/><text x="974.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (54 samples, 16.93%)</title><rect x="779" y="164" width="200" height="15" fill="rgb(254,41,13)"/><text x="782.00" y="174.50">_run_sequence_runtime (mlp..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.31%)</title><rect x="975" y="180" width="4" height="15" fill="rgb(233,16,27)"/><text x="978.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:534) (1 samples, 0.31%)</title><rect x="979" y="164" width="3" height="15" fill="rgb(234,83,30)"/><text x="982.00" y="174.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (73 samples, 22.88%)</title><rect x="720" y="132" width="270" height="15" fill="rgb(242,1,4)"/><text x="723.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/co..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (68 samples, 21.32%)</title><rect x="738" y="148" width="252" height="15" fill="rgb(252,224,33)"/><text x="741.00" y="158.50">run (mlprodict/onnxrt/onnx_infere..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.63%)</title><rect x="982" y="164" width="8" height="15" fill="rgb(245,126,7)"/><text x="985.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.31%)</title><rect x="986" y="180" width="4" height="15" fill="rgb(210,44,4)"/><text x="989.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1_50_12_float_.py:61) (78 samples, 24.45%)</title><rect x="705" y="52" width="288" height="15" fill="rgb(214,218,54)"/><text x="708.00" y="62.50">&lt;module&gt; (bench_LinearRegression_defau..</text></g><g><title>profile_pyrt (bench_LinearRegression_default_b_reg_1_50_12_float_.py:60) (78 samples, 24.45%)</title><rect x="705" y="68" width="288" height="15" fill="rgb(224,118,8)"/><text x="708.00" y="78.50">profile_pyrt (bench_LinearRegression_d..</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py:37) (78 samples, 24.45%)</title><rect x="705" y="84" width="288" height="15" fill="rgb(244,226,1)"/><text x="708.00" y="94.50">setup_profile (bench_LinearRegression_..</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py:31) (77 samples, 24.14%)</title><rect x="709" y="100" width="284" height="15" fill="rgb(247,152,39)"/><text x="712.00" y="110.50">profile (bench_LinearRegression_defaul..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (76 samples, 23.82%)</title><rect x="712" y="116" width="281" height="15" fill="rgb(228,206,29)"/><text x="715.00" y="126.50">time_predict (mlprodict/asv_benchmark..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.31%)</title><rect x="990" y="132" width="3" height="15" fill="rgb(225,180,40)"/><text x="993.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="1001" y="116" width="4" height="15" fill="rgb(215,39,19)"/><text x="1004.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="1001" y="132" width="4" height="15" fill="rgb(249,139,40)"/><text x="1004.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.31%)</title><rect x="1001" y="148" width="4" height="15" fill="rgb(244,16,22)"/><text x="1004.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.31%)</title><rect x="1027" y="148" width="3" height="15" fill="rgb(240,128,40)"/><text x="1030.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (2 samples, 0.63%)</title><rect x="1049" y="196" width="7" height="15" fill="rgb(208,172,7)"/><text x="1052.00" y="206.50"></text></g><g><title>0x7f41613feff9 (?) (1 samples, 0.31%)</title><rect x="1060" y="212" width="4" height="15" fill="rgb(215,224,27)"/><text x="1063.00" y="222.50"></text></g><g><title>0x7f41613f9ef6 (?) (1 samples, 0.31%)</title><rect x="1060" y="228" width="4" height="15" fill="rgb(245,4,14)"/><text x="1063.00" y="238.50"></text></g><g><title>0x7f41613ee962 (?) (1 samples, 0.31%)</title><rect x="1060" y="244" width="4" height="15" fill="rgb(208,166,10)"/><text x="1063.00" y="254.50"></text></g><g><title>0x7f41614227a7 (?) (1 samples, 0.31%)</title><rect x="1060" y="260" width="4" height="15" fill="rgb(237,31,8)"/><text x="1063.00" y="270.50"></text></g><g><title>0x7f4161421f9c (?) (1 samples, 0.31%)</title><rect x="1060" y="276" width="4" height="15" fill="rgb(240,140,17)"/><text x="1063.00" y="286.50"></text></g><g><title>0x7f416183c98e (?) (1 samples, 0.31%)</title><rect x="1060" y="292" width="4" height="15" fill="rgb(251,123,34)"/><text x="1063.00" y="302.50"></text></g><g><title>0x7f416183c3df (?) (1 samples, 0.31%)</title><rect x="1060" y="308" width="4" height="15" fill="rgb(208,129,16)"/><text x="1063.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="1060" y="324" width="4" height="15" fill="rgb(231,113,16)"/><text x="1063.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1060" y="340" width="4" height="15" fill="rgb(225,8,12)"/><text x="1063.00" y="350.50"></text></g><g><title>0x7f41a33ce96a (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1064" y="244" width="3" height="15" fill="rgb(235,182,49)"/><text x="1067.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1071" y="260" width="4" height="15" fill="rgb(246,4,17)"/><text x="1074.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1075" y="260" width="4" height="15" fill="rgb(218,212,24)"/><text x="1078.00" y="270.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1075" y="276" width="4" height="15" fill="rgb(237,145,54)"/><text x="1078.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="1075" y="292" width="4" height="15" fill="rgb(225,96,19)"/><text x="1078.00" y="302.50"></text></g><g><title>0x7f41a33cfc44 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1086" y="340" width="4" height="15" fill="rgb(231,163,32)"/><text x="1089.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.63%)</title><rect x="1086" y="308" width="7" height="15" fill="rgb(245,164,30)"/><text x="1089.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.63%)</title><rect x="1086" y="324" width="7" height="15" fill="rgb(234,13,43)"/><text x="1089.00" y="334.50"></text></g><g><title>0x7f41a33d0003 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1090" y="340" width="3" height="15" fill="rgb(250,105,40)"/><text x="1093.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.25%)</title><rect x="1082" y="292" width="15" height="15" fill="rgb(207,136,6)"/><text x="1085.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1093" y="308" width="4" height="15" fill="rgb(211,38,34)"/><text x="1096.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="1093" y="324" width="4" height="15" fill="rgb(251,7,36)"/><text x="1096.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1093" y="340" width="4" height="15" fill="rgb(239,223,53)"/><text x="1096.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1101" y="340" width="3" height="15" fill="rgb(222,103,39)"/><text x="1104.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1101" y="356" width="3" height="15" fill="rgb(215,64,18)"/><text x="1104.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1101" y="372" width="3" height="15" fill="rgb(248,200,29)"/><text x="1104.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1101" y="388" width="3" height="15" fill="rgb(210,22,9)"/><text x="1104.00" y="398.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.57%)</title><rect x="1097" y="308" width="19" height="15" fill="rgb(233,173,18)"/><text x="1100.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.57%)</title><rect x="1097" y="324" width="19" height="15" fill="rgb(240,52,48)"/><text x="1100.00" y="334.50"></text></g><g><title>onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.94%)</title><rect x="1104" y="340" width="12" height="15" fill="rgb(251,50,52)"/><text x="1107.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1112" y="356" width="4" height="15" fill="rgb(226,80,0)"/><text x="1115.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1112" y="372" width="4" height="15" fill="rgb(211,100,31)"/><text x="1115.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1112" y="388" width="4" height="15" fill="rgb(242,131,54)"/><text x="1115.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1112" y="404" width="4" height="15" fill="rgb(245,12,37)"/><text x="1115.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1112" y="420" width="4" height="15" fill="rgb(222,129,11)"/><text x="1115.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1112" y="436" width="4" height="15" fill="rgb(212,54,3)"/><text x="1115.00" y="446.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1112" y="452" width="4" height="15" fill="rgb(252,11,26)"/><text x="1115.00" y="462.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.45%)</title><rect x="1079" y="260" width="40" height="15" fill="rgb(223,32,5)"/><text x="1082.00" y="270.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.13%)</title><rect x="1082" y="276" width="37" height="15" fill="rgb(231,135,46)"/><text x="1085.00" y="286.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.88%)</title><rect x="1097" y="292" width="22" height="15" fill="rgb(219,64,28)"/><text x="1100.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1116" y="308" width="3" height="15" fill="rgb(213,136,39)"/><text x="1119.00" y="318.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.63%)</title><rect x="1123" y="276" width="7" height="15" fill="rgb(215,111,15)"/><text x="1126.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.25%)</title><rect x="1119" y="260" width="15" height="15" fill="rgb(234,181,6)"/><text x="1122.00" y="270.50"></text></g><g><title>std::__shared_ptr&lt;onnxruntime::IAllocator, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr [clone .localalias.84] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1130" y="276" width="4" height="15" fill="rgb(249,135,19)"/><text x="1133.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1134" y="260" width="4" height="15" fill="rgb(253,33,44)"/><text x="1137.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.31%)</title><rect x="1134" y="276" width="4" height="15" fill="rgb(222,75,16)"/><text x="1137.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.31%)</title><rect x="1134" y="292" width="4" height="15" fill="rgb(216,202,28)"/><text x="1137.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.31%)</title><rect x="1134" y="308" width="4" height="15" fill="rgb(207,151,30)"/><text x="1137.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:132) (1 samples, 0.31%)</title><rect x="1134" y="324" width="4" height="15" fill="rgb(223,50,35)"/><text x="1137.00" y="334.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 6.27%)</title><rect x="1067" y="244" width="74" height="15" fill="rgb(240,120,31)"/><text x="1070.00" y="254.50">onnxrunt..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="1138" y="260" width="3" height="15" fill="rgb(214,130,36)"/><text x="1141.00" y="270.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="1141" y="244" width="4" height="15" fill="rgb(240,159,20)"/><text x="1144.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1141" y="260" width="4" height="15" fill="rgb(244,80,21)"/><text x="1144.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1145" y="244" width="4" height="15" fill="rgb(206,168,31)"/><text x="1148.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1145" y="260" width="4" height="15" fill="rgb(206,222,37)"/><text x="1148.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="1145" y="276" width="4" height="15" fill="rgb(208,64,26)"/><text x="1148.00" y="286.50"></text></g><g><title>0x7f4192e9db20 (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="1145" y="292" width="4" height="15" fill="rgb(216,184,41)"/><text x="1148.00" y="302.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1149" y="244" width="4" height="15" fill="rgb(250,84,50)"/><text x="1152.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1153" y="244" width="3" height="15" fill="rgb(224,74,0)"/><text x="1156.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1156" y="244" width="4" height="15" fill="rgb(242,2,49)"/><text x="1159.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1156" y="260" width="4" height="15" fill="rgb(212,220,24)"/><text x="1159.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (36 samples, 11.29%)</title><rect x="1034" y="164" width="133" height="15" fill="rgb(232,14,20)"/><text x="1037.00" y="174.50">_run_whole_runti..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (34 samples, 10.66%)</title><rect x="1042" y="180" width="125" height="15" fill="rgb(239,28,29)"/><text x="1045.00" y="190.50">run (mlprodict/..</text></g><g><title>run (onnxruntime/capi/session.py:136) (30 samples, 9.40%)</title><rect x="1056" y="196" width="111" height="15" fill="rgb(252,159,18)"/><text x="1059.00" y="206.50">run (onnxrunt..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 8.78%)</title><rect x="1064" y="212" width="103" height="15" fill="rgb(208,218,3)"/><text x="1067.00" y="222.50">pybind11::cp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 8.78%)</title><rect x="1064" y="228" width="103" height="15" fill="rgb(230,12,54)"/><text x="1067.00" y="238.50">void pybind1..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.63%)</title><rect x="1160" y="244" width="7" height="15" fill="rgb(253,116,1)"/><text x="1163.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (44 samples, 13.79%)</title><rect x="1019" y="132" width="163" height="15" fill="rgb(218,76,1)"/><text x="1022.00" y="142.50">&lt;lambda&gt; (mlprodict/a..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (41 samples, 12.85%)</title><rect x="1030" y="148" width="152" height="15" fill="rgb(241,91,3)"/><text x="1033.00" y="158.50">run (mlprodict/onnx..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (4 samples, 1.25%)</title><rect x="1167" y="164" width="15" height="15" fill="rgb(237,167,43)"/><text x="1170.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.31%)</title><rect x="1178" y="180" width="4" height="15" fill="rgb(246,150,27)"/><text x="1181.00" y="190.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.31%)</title><rect x="1182" y="132" width="4" height="15" fill="rgb(236,6,53)"/><text x="1185.00" y="142.50"></text></g><g><title>all (319 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(214,52,40)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1_50_12_float_.py:68) (53 samples, 16.61%)</title><rect x="993" y="52" width="197" height="15" fill="rgb(221,151,28)"/><text x="996.00" y="62.50">&lt;module&gt; (bench_LinearReg..</text></g><g><title>profile_ort (bench_LinearRegression_default_b_reg_1_50_12_float_.py:67) (53 samples, 16.61%)</title><rect x="993" y="68" width="197" height="15" fill="rgb(241,194,19)"/><text x="996.00" y="78.50">profile_ort (bench_Linear..</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py:37) (53 samples, 16.61%)</title><rect x="993" y="84" width="197" height="15" fill="rgb(211,57,29)"/><text x="996.00" y="94.50">setup_profile (bench_Line..</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py:31) (53 samples, 16.61%)</title><rect x="993" y="100" width="197" height="15" fill="rgb(220,150,21)"/><text x="996.00" y="110.50">profile (bench_LinearRegr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (50 samples, 15.67%)</title><rect x="1005" y="116" width="185" height="15" fill="rgb(216,78,10)"/><text x="1008.00" y="126.50">time_predict (mlprodict/..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.31%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(229,120,0)"/><text x="1189.00" y="142.50"></text></g></g></svg>