<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2070" onload="init(evt)" viewBox="0 0 1200 2070" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2070" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2053.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2053.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(215,169,28)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(216,154,22)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(239,73,0)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(210,30,10)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(245,69,22)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(205,9,43)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(235,23,27)"/><text x="13.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(205,91,19)"/><text x="13.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.09%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(235,188,20)"/><text x="13.00" y="1006.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.09%)</title><rect x="10" y="1012" width="1" height="15" fill="rgb(247,91,19)"/><text x="13.00" y="1022.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="11" y="868" width="1" height="15" fill="rgb(224,183,2)"/><text x="14.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="11" y="884" width="1" height="15" fill="rgb(248,126,27)"/><text x="14.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="11" y="900" width="1" height="15" fill="rgb(237,31,4)"/><text x="14.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="11" y="916" width="1" height="15" fill="rgb(221,76,20)"/><text x="14.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="11" y="932" width="1" height="15" fill="rgb(217,15,49)"/><text x="14.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.09%)</title><rect x="11" y="948" width="1" height="15" fill="rgb(250,42,9)"/><text x="14.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="11" y="964" width="1" height="15" fill="rgb(239,36,28)"/><text x="14.00" y="974.50"></text></g><g><title>0x7fccd6178237 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="11" y="980" width="1" height="15" fill="rgb(205,115,1)"/><text x="14.00" y="990.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.27%)</title><rect x="10" y="836" width="3" height="15" fill="rgb(215,170,38)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.27%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(237,25,47)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="12" y="868" width="1" height="15" fill="rgb(242,164,46)"/><text x="15.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="12" y="884" width="1" height="15" fill="rgb(233,72,14)"/><text x="15.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="12" y="900" width="1" height="15" fill="rgb(225,176,3)"/><text x="15.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="12" y="916" width="1" height="15" fill="rgb(206,105,16)"/><text x="15.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="10" y="596" width="4" height="15" fill="rgb(245,31,22)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="10" y="612" width="4" height="15" fill="rgb(248,41,11)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="10" y="628" width="4" height="15" fill="rgb(251,152,20)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="10" y="644" width="4" height="15" fill="rgb(233,46,48)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="10" y="660" width="4" height="15" fill="rgb(241,12,26)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="10" y="676" width="4" height="15" fill="rgb(214,175,5)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.37%)</title><rect x="10" y="692" width="4" height="15" fill="rgb(245,178,51)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="10" y="708" width="4" height="15" fill="rgb(251,193,41)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 0.37%)</title><rect x="10" y="724" width="4" height="15" fill="rgb(221,194,2)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="10" y="740" width="4" height="15" fill="rgb(218,120,19)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="10" y="756" width="4" height="15" fill="rgb(223,182,51)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="10" y="772" width="4" height="15" fill="rgb(213,39,42)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.37%)</title><rect x="10" y="788" width="4" height="15" fill="rgb(246,178,22)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="10" y="804" width="4" height="15" fill="rgb(230,177,32)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 0.37%)</title><rect x="10" y="820" width="4" height="15" fill="rgb(216,175,52)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="13" y="836" width="1" height="15" fill="rgb(244,208,29)"/><text x="16.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="13" y="852" width="1" height="15" fill="rgb(241,17,48)"/><text x="16.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="13" y="868" width="1" height="15" fill="rgb(235,12,43)"/><text x="16.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="13" y="884" width="1" height="15" fill="rgb(237,162,54)"/><text x="16.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="13" y="900" width="1" height="15" fill="rgb(217,29,51)"/><text x="16.00" y="910.50"></text></g><g><title>&lt;module&gt; (email/parser.py) (1 samples, 0.09%)</title><rect x="13" y="916" width="1" height="15" fill="rgb(252,51,25)"/><text x="16.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="13" y="932" width="1" height="15" fill="rgb(205,198,53)"/><text x="16.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="13" y="948" width="1" height="15" fill="rgb(248,117,11)"/><text x="16.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="13" y="964" width="1" height="15" fill="rgb(243,166,4)"/><text x="16.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="13" y="980" width="1" height="15" fill="rgb(251,96,10)"/><text x="16.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="13" y="996" width="1" height="15" fill="rgb(211,115,43)"/><text x="16.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py) (1 samples, 0.09%)</title><rect x="13" y="1012" width="1" height="15" fill="rgb(229,103,2)"/><text x="16.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="13" y="1028" width="1" height="15" fill="rgb(209,216,42)"/><text x="16.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="13" y="1044" width="1" height="15" fill="rgb(207,88,10)"/><text x="16.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="13" y="1060" width="1" height="15" fill="rgb(211,2,3)"/><text x="16.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="13" y="1076" width="1" height="15" fill="rgb(206,10,47)"/><text x="16.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="13" y="1092" width="1" height="15" fill="rgb(239,208,30)"/><text x="16.00" y="1102.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py) (1 samples, 0.09%)</title><rect x="13" y="1108" width="1" height="15" fill="rgb(208,137,7)"/><text x="16.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="13" y="1124" width="1" height="15" fill="rgb(236,172,16)"/><text x="16.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="13" y="1140" width="1" height="15" fill="rgb(224,133,30)"/><text x="16.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="13" y="1156" width="1" height="15" fill="rgb(227,226,23)"/><text x="16.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="13" y="1172" width="1" height="15" fill="rgb(212,35,3)"/><text x="16.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="13" y="1188" width="1" height="15" fill="rgb(219,80,15)"/><text x="16.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="13" y="1204" width="1" height="15" fill="rgb(253,224,35)"/><text x="16.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="13" y="1220" width="1" height="15" fill="rgb(233,43,7)"/><text x="16.00" y="1230.50"></text></g><g><title>&lt;module&gt; (email/header.py) (1 samples, 0.09%)</title><rect x="13" y="1236" width="1" height="15" fill="rgb(222,225,4)"/><text x="16.00" y="1246.50"></text></g><g><title>__or__ (enum.py) (1 samples, 0.09%)</title><rect x="13" y="1252" width="1" height="15" fill="rgb(220,223,46)"/><text x="16.00" y="1262.50"></text></g><g><title>__call__ (enum.py) (1 samples, 0.09%)</title><rect x="13" y="1268" width="1" height="15" fill="rgb(215,74,14)"/><text x="16.00" y="1278.50"></text></g><g><title>__new__ (enum.py) (1 samples, 0.09%)</title><rect x="13" y="1284" width="1" height="15" fill="rgb(220,206,2)"/><text x="16.00" y="1294.50"></text></g><g><title>_missing_ (enum.py) (1 samples, 0.09%)</title><rect x="13" y="1300" width="1" height="15" fill="rgb(209,122,34)"/><text x="16.00" y="1310.50"></text></g><g><title>_create_pseudo_member_ (enum.py) (1 samples, 0.09%)</title><rect x="13" y="1316" width="1" height="15" fill="rgb(207,24,42)"/><text x="16.00" y="1326.50"></text></g><g><title>_decompose (enum.py) (1 samples, 0.09%)</title><rect x="13" y="1332" width="1" height="15" fill="rgb(252,175,47)"/><text x="16.00" y="1342.50"></text></g><g><title>&lt;listcomp&gt; (enum.py) (1 samples, 0.09%)</title><rect x="13" y="1348" width="1" height="15" fill="rgb(244,43,54)"/><text x="16.00" y="1358.50"></text></g><g><title>__get__ (types.py) (1 samples, 0.09%)</title><rect x="13" y="1364" width="1" height="15" fill="rgb(246,106,40)"/><text x="16.00" y="1374.50"></text></g><g><title>name (enum.py) (1 samples, 0.09%)</title><rect x="13" y="1380" width="1" height="15" fill="rgb(217,133,14)"/><text x="16.00" y="1390.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 0.46%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(242,1,54)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.46%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(218,124,49)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.46%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(227,6,35)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.46%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(222,174,51)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.46%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(226,72,6)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.46%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(226,66,49)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 0.46%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(252,33,0)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.46%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(212,21,13)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.46%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(216,149,35)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.46%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(207,57,17)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.46%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(220,12,39)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.46%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(224,92,1)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 0.46%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(236,175,30)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.46%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(221,162,34)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.46%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(223,200,23)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.46%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(217,52,24)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.46%)</title><rect x="10" y="548" width="5" height="15" fill="rgb(249,22,31)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.46%)</title><rect x="10" y="564" width="5" height="15" fill="rgb(235,160,25)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 0.46%)</title><rect x="10" y="580" width="5" height="15" fill="rgb(242,196,28)"/><text x="13.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="14" y="596" width="1" height="15" fill="rgb(243,164,10)"/><text x="17.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="14" y="612" width="1" height="15" fill="rgb(252,49,12)"/><text x="17.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="14" y="628" width="1" height="15" fill="rgb(254,159,18)"/><text x="17.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="14" y="644" width="1" height="15" fill="rgb(236,226,11)"/><text x="17.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="14" y="660" width="1" height="15" fill="rgb(211,43,42)"/><text x="17.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="14" y="676" width="1" height="15" fill="rgb(250,163,32)"/><text x="17.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="14" y="692" width="1" height="15" fill="rgb(247,197,1)"/><text x="17.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor_pb2.py) (1 samples, 0.09%)</title><rect x="14" y="708" width="1" height="15" fill="rgb(210,150,48)"/><text x="17.00" y="718.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py) (1 samples, 0.09%)</title><rect x="15" y="580" width="1" height="15" fill="rgb(213,88,25)"/><text x="18.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="596" width="1" height="15" fill="rgb(209,214,9)"/><text x="18.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="612" width="1" height="15" fill="rgb(217,43,25)"/><text x="18.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="628" width="1" height="15" fill="rgb(229,42,12)"/><text x="18.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="15" y="644" width="1" height="15" fill="rgb(218,211,54)"/><text x="18.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="660" width="1" height="15" fill="rgb(230,180,10)"/><text x="18.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csr.py) (1 samples, 0.09%)</title><rect x="15" y="676" width="1" height="15" fill="rgb(251,48,17)"/><text x="18.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="692" width="1" height="15" fill="rgb(250,203,35)"/><text x="18.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="708" width="1" height="15" fill="rgb(224,64,4)"/><text x="18.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="724" width="1" height="15" fill="rgb(228,162,19)"/><text x="18.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="15" y="740" width="1" height="15" fill="rgb(238,114,6)"/><text x="18.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="756" width="1" height="15" fill="rgb(234,27,45)"/><text x="18.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/compressed.py) (1 samples, 0.09%)</title><rect x="15" y="772" width="1" height="15" fill="rgb(235,78,37)"/><text x="18.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="788" width="1" height="15" fill="rgb(248,222,21)"/><text x="18.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="804" width="1" height="15" fill="rgb(241,198,19)"/><text x="18.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="820" width="1" height="15" fill="rgb(232,62,46)"/><text x="18.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="15" y="836" width="1" height="15" fill="rgb(225,176,30)"/><text x="18.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="852" width="1" height="15" fill="rgb(231,11,54)"/><text x="18.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/_lib/_util.py) (1 samples, 0.09%)</title><rect x="15" y="868" width="1" height="15" fill="rgb(220,14,52)"/><text x="18.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="15" y="500" width="2" height="15" fill="rgb(223,94,21)"/><text x="18.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="15" y="516" width="2" height="15" fill="rgb(221,172,26)"/><text x="18.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="15" y="532" width="2" height="15" fill="rgb(236,52,22)"/><text x="18.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="15" y="548" width="2" height="15" fill="rgb(222,196,53)"/><text x="18.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="15" y="564" width="2" height="15" fill="rgb(243,65,33)"/><text x="18.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.09%)</title><rect x="16" y="580" width="1" height="15" fill="rgb(210,193,27)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="596" width="1" height="15" fill="rgb(232,47,35)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="612" width="1" height="15" fill="rgb(226,97,37)"/><text x="19.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="628" width="1" height="15" fill="rgb(212,187,34)"/><text x="19.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="644" width="1" height="15" fill="rgb(240,214,28)"/><text x="19.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="660" width="1" height="15" fill="rgb(237,28,45)"/><text x="19.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="676" width="1" height="15" fill="rgb(238,143,41)"/><text x="19.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="16" y="692" width="1" height="15" fill="rgb(208,95,41)"/><text x="19.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="708" width="1" height="15" fill="rgb(222,179,47)"/><text x="19.00" y="718.50"></text></g><g><title>&lt;module&gt; (distutils/__init__.py) (1 samples, 0.09%)</title><rect x="16" y="724" width="1" height="15" fill="rgb(221,94,51)"/><text x="19.00" y="734.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="740" width="1" height="15" fill="rgb(240,199,22)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="756" width="1" height="15" fill="rgb(234,153,15)"/><text x="19.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="772" width="1" height="15" fill="rgb(211,42,41)"/><text x="19.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="788" width="1" height="15" fill="rgb(245,52,4)"/><text x="19.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="804" width="1" height="15" fill="rgb(230,219,8)"/><text x="19.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="16" y="820" width="1" height="15" fill="rgb(248,165,40)"/><text x="19.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="836" width="1" height="15" fill="rgb(247,11,8)"/><text x="19.00" y="846.50"></text></g><g><title>&lt;module&gt; (distutils/dist.py) (1 samples, 0.09%)</title><rect x="16" y="852" width="1" height="15" fill="rgb(247,35,40)"/><text x="19.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="868" width="1" height="15" fill="rgb(210,54,24)"/><text x="19.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="884" width="1" height="15" fill="rgb(236,104,14)"/><text x="19.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="900" width="1" height="15" fill="rgb(229,41,9)"/><text x="19.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="16" y="916" width="1" height="15" fill="rgb(240,113,17)"/><text x="19.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="932" width="1" height="15" fill="rgb(218,90,52)"/><text x="19.00" y="942.50"></text></g><g><title>&lt;module&gt; (distutils/errors.py) (1 samples, 0.09%)</title><rect x="16" y="948" width="1" height="15" fill="rgb(237,61,14)"/><text x="19.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="196" width="8" height="15" fill="rgb(243,95,10)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="212" width="8" height="15" fill="rgb(227,113,3)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="228" width="8" height="15" fill="rgb(211,130,51)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="244" width="8" height="15" fill="rgb(244,165,23)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.73%)</title><rect x="10" y="260" width="8" height="15" fill="rgb(231,190,31)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="276" width="8" height="15" fill="rgb(237,16,24)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.27%)</title><rect x="15" y="292" width="3" height="15" fill="rgb(211,60,23)"/><text x="18.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="15" y="308" width="3" height="15" fill="rgb(211,164,10)"/><text x="18.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="15" y="324" width="3" height="15" fill="rgb(251,139,5)"/><text x="18.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="15" y="340" width="3" height="15" fill="rgb(242,134,45)"/><text x="18.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.27%)</title><rect x="15" y="356" width="3" height="15" fill="rgb(243,74,42)"/><text x="18.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="15" y="372" width="3" height="15" fill="rgb(214,11,34)"/><text x="18.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.27%)</title><rect x="15" y="388" width="3" height="15" fill="rgb(213,123,5)"/><text x="18.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="15" y="404" width="3" height="15" fill="rgb(213,60,52)"/><text x="18.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="15" y="420" width="3" height="15" fill="rgb(210,93,19)"/><text x="18.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="15" y="436" width="3" height="15" fill="rgb(214,83,12)"/><text x="18.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.27%)</title><rect x="15" y="452" width="3" height="15" fill="rgb(207,53,51)"/><text x="18.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="15" y="468" width="3" height="15" fill="rgb(238,164,45)"/><text x="18.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.27%)</title><rect x="15" y="484" width="3" height="15" fill="rgb(205,157,46)"/><text x="18.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="500" width="1" height="15" fill="rgb(219,63,6)"/><text x="20.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="516" width="1" height="15" fill="rgb(222,151,31)"/><text x="20.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="532" width="1" height="15" fill="rgb(238,97,1)"/><text x="20.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="548" width="1" height="15" fill="rgb(232,162,53)"/><text x="20.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="564" width="1" height="15" fill="rgb(236,84,2)"/><text x="20.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="17" y="580" width="1" height="15" fill="rgb(238,138,44)"/><text x="20.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="596" width="1" height="15" fill="rgb(224,170,26)"/><text x="20.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.09%)</title><rect x="17" y="612" width="1" height="15" fill="rgb(219,55,21)"/><text x="20.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="628" width="1" height="15" fill="rgb(237,175,42)"/><text x="20.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="644" width="1" height="15" fill="rgb(208,111,41)"/><text x="20.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="660" width="1" height="15" fill="rgb(215,160,27)"/><text x="20.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="17" y="676" width="1" height="15" fill="rgb(242,16,17)"/><text x="20.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="692" width="1" height="15" fill="rgb(240,155,44)"/><text x="20.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.09%)</title><rect x="17" y="708" width="1" height="15" fill="rgb(216,166,22)"/><text x="20.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="724" width="1" height="15" fill="rgb(205,71,12)"/><text x="20.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="740" width="1" height="15" fill="rgb(206,225,19)"/><text x="20.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="756" width="1" height="15" fill="rgb(219,214,16)"/><text x="20.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="17" y="772" width="1" height="15" fill="rgb(225,126,35)"/><text x="20.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="788" width="1" height="15" fill="rgb(213,116,34)"/><text x="20.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.09%)</title><rect x="17" y="804" width="1" height="15" fill="rgb(249,157,36)"/><text x="20.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="820" width="1" height="15" fill="rgb(234,103,24)"/><text x="20.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="836" width="1" height="15" fill="rgb(229,164,9)"/><text x="20.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="852" width="1" height="15" fill="rgb(252,34,50)"/><text x="20.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="17" y="868" width="1" height="15" fill="rgb(212,176,7)"/><text x="20.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="884" width="1" height="15" fill="rgb(241,22,45)"/><text x="20.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py) (1 samples, 0.09%)</title><rect x="17" y="900" width="1" height="15" fill="rgb(234,180,22)"/><text x="20.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="916" width="1" height="15" fill="rgb(237,122,14)"/><text x="20.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="932" width="1" height="15" fill="rgb(229,51,37)"/><text x="20.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="948" width="1" height="15" fill="rgb(234,105,24)"/><text x="20.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="964" width="1" height="15" fill="rgb(237,59,10)"/><text x="20.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="980" width="1" height="15" fill="rgb(242,194,14)"/><text x="20.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="17" y="996" width="1" height="15" fill="rgb(216,12,34)"/><text x="20.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1012" width="1" height="15" fill="rgb(216,150,7)"/><text x="20.00" y="1022.50"></text></g><g><title>&lt;module&gt; (joblib/numpy_pickle.py) (1 samples, 0.09%)</title><rect x="17" y="1028" width="1" height="15" fill="rgb(252,6,38)"/><text x="20.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1044" width="1" height="15" fill="rgb(211,224,11)"/><text x="20.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1060" width="1" height="15" fill="rgb(249,171,14)"/><text x="20.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1076" width="1" height="15" fill="rgb(224,199,25)"/><text x="20.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="17" y="1092" width="1" height="15" fill="rgb(210,206,35)"/><text x="20.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1108" width="1" height="15" fill="rgb(235,63,31)"/><text x="20.00" y="1118.50"></text></g><g><title>&lt;module&gt; (joblib/compressor.py) (1 samples, 0.09%)</title><rect x="17" y="1124" width="1" height="15" fill="rgb(212,19,12)"/><text x="20.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="18" y="1124" width="2" height="15" fill="rgb(208,220,23)"/><text x="21.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="18" y="1140" width="2" height="15" fill="rgb(236,193,23)"/><text x="21.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="18" y="1156" width="2" height="15" fill="rgb(243,141,13)"/><text x="21.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="18" y="1172" width="2" height="15" fill="rgb(239,151,44)"/><text x="21.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="18" y="1188" width="2" height="15" fill="rgb(236,95,26)"/><text x="21.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (2 samples, 0.18%)</title><rect x="18" y="1204" width="2" height="15" fill="rgb(207,35,2)"/><text x="21.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="18" y="1220" width="2" height="15" fill="rgb(242,43,27)"/><text x="21.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="18" y="1236" width="2" height="15" fill="rgb(234,97,37)"/><text x="21.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="18" y="1252" width="2" height="15" fill="rgb(216,81,24)"/><text x="21.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="18" y="1268" width="2" height="15" fill="rgb(248,41,52)"/><text x="21.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="18" y="1284" width="2" height="15" fill="rgb(249,165,34)"/><text x="21.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (2 samples, 0.18%)</title><rect x="18" y="1300" width="2" height="15" fill="rgb(233,198,19)"/><text x="21.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (2 samples, 0.18%)</title><rect x="18" y="1316" width="2" height="15" fill="rgb(211,196,14)"/><text x="21.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (2 samples, 0.18%)</title><rect x="18" y="1332" width="2" height="15" fill="rgb(240,126,11)"/><text x="21.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (2 samples, 0.18%)</title><rect x="18" y="1348" width="2" height="15" fill="rgb(228,163,27)"/><text x="21.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (2 samples, 0.18%)</title><rect x="18" y="1364" width="2" height="15" fill="rgb(232,1,23)"/><text x="21.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (2 samples, 0.18%)</title><rect x="18" y="1380" width="2" height="15" fill="rgb(236,92,22)"/><text x="21.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.09%)</title><rect x="19" y="1396" width="1" height="15" fill="rgb(229,61,16)"/><text x="22.00" y="1406.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1316" width="1" height="15" fill="rgb(214,10,2)"/><text x="23.00" y="1326.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="20" y="1332" width="1" height="15" fill="rgb(212,50,13)"/><text x="23.00" y="1342.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="20" y="1348" width="1" height="15" fill="rgb(235,83,21)"/><text x="23.00" y="1358.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="20" y="1364" width="1" height="15" fill="rgb(232,82,42)"/><text x="23.00" y="1374.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="20" y="1380" width="1" height="15" fill="rgb(251,53,53)"/><text x="23.00" y="1390.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.09%)</title><rect x="20" y="1396" width="1" height="15" fill="rgb(215,177,11)"/><text x="23.00" y="1406.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.09%)</title><rect x="20" y="1412" width="1" height="15" fill="rgb(224,50,36)"/><text x="23.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="484" width="4" height="15" fill="rgb(232,97,51)"/><text x="21.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="500" width="4" height="15" fill="rgb(245,183,35)"/><text x="21.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="516" width="4" height="15" fill="rgb(243,31,3)"/><text x="21.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="532" width="4" height="15" fill="rgb(229,147,32)"/><text x="21.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.37%)</title><rect x="18" y="548" width="4" height="15" fill="rgb(209,191,25)"/><text x="21.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="564" width="4" height="15" fill="rgb(223,185,50)"/><text x="21.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 0.37%)</title><rect x="18" y="580" width="4" height="15" fill="rgb(228,177,21)"/><text x="21.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="596" width="4" height="15" fill="rgb(225,112,17)"/><text x="21.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="612" width="4" height="15" fill="rgb(206,175,42)"/><text x="21.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="628" width="4" height="15" fill="rgb(240,13,8)"/><text x="21.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.37%)</title><rect x="18" y="644" width="4" height="15" fill="rgb(222,154,12)"/><text x="21.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="660" width="4" height="15" fill="rgb(252,83,30)"/><text x="21.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 0.37%)</title><rect x="18" y="676" width="4" height="15" fill="rgb(205,24,36)"/><text x="21.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="692" width="4" height="15" fill="rgb(230,70,36)"/><text x="21.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="708" width="4" height="15" fill="rgb(214,95,52)"/><text x="21.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="724" width="4" height="15" fill="rgb(248,11,34)"/><text x="21.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.37%)</title><rect x="18" y="740" width="4" height="15" fill="rgb(242,210,37)"/><text x="21.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="756" width="4" height="15" fill="rgb(207,127,36)"/><text x="21.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 0.37%)</title><rect x="18" y="772" width="4" height="15" fill="rgb(240,72,17)"/><text x="21.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="788" width="4" height="15" fill="rgb(217,95,38)"/><text x="21.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="804" width="4" height="15" fill="rgb(235,122,47)"/><text x="21.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="820" width="4" height="15" fill="rgb(241,93,18)"/><text x="21.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.37%)</title><rect x="18" y="836" width="4" height="15" fill="rgb(228,186,54)"/><text x="21.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="852" width="4" height="15" fill="rgb(217,60,13)"/><text x="21.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 0.37%)</title><rect x="18" y="868" width="4" height="15" fill="rgb(252,198,9)"/><text x="21.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="884" width="4" height="15" fill="rgb(213,5,47)"/><text x="21.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="900" width="4" height="15" fill="rgb(215,113,7)"/><text x="21.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="916" width="4" height="15" fill="rgb(219,20,37)"/><text x="21.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="932" width="4" height="15" fill="rgb(209,126,2)"/><text x="21.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="948" width="4" height="15" fill="rgb(235,217,24)"/><text x="21.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="964" width="4" height="15" fill="rgb(242,31,54)"/><text x="21.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.37%)</title><rect x="18" y="980" width="4" height="15" fill="rgb(228,223,4)"/><text x="21.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="996" width="4" height="15" fill="rgb(205,6,21)"/><text x="21.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 0.37%)</title><rect x="18" y="1012" width="4" height="15" fill="rgb(232,80,12)"/><text x="21.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="1028" width="4" height="15" fill="rgb(228,33,17)"/><text x="21.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="1044" width="4" height="15" fill="rgb(241,168,10)"/><text x="21.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="1060" width="4" height="15" fill="rgb(244,82,30)"/><text x="21.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.37%)</title><rect x="18" y="1076" width="4" height="15" fill="rgb(209,15,3)"/><text x="21.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="18" y="1092" width="4" height="15" fill="rgb(207,54,27)"/><text x="21.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 0.37%)</title><rect x="18" y="1108" width="4" height="15" fill="rgb(244,82,8)"/><text x="21.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="20" y="1124" width="2" height="15" fill="rgb(235,0,34)"/><text x="23.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="20" y="1140" width="2" height="15" fill="rgb(214,170,0)"/><text x="23.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="20" y="1156" width="2" height="15" fill="rgb(243,1,48)"/><text x="23.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="20" y="1172" width="2" height="15" fill="rgb(229,72,50)"/><text x="23.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="20" y="1188" width="2" height="15" fill="rgb(218,169,37)"/><text x="23.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="20" y="1204" width="2" height="15" fill="rgb(227,128,1)"/><text x="23.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="20" y="1220" width="2" height="15" fill="rgb(209,161,21)"/><text x="23.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.18%)</title><rect x="20" y="1236" width="2" height="15" fill="rgb(218,59,33)"/><text x="23.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="20" y="1252" width="2" height="15" fill="rgb(229,89,22)"/><text x="23.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="20" y="1268" width="2" height="15" fill="rgb(235,73,22)"/><text x="23.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="20" y="1284" width="2" height="15" fill="rgb(221,115,13)"/><text x="23.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="20" y="1300" width="2" height="15" fill="rgb(228,26,45)"/><text x="23.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="21" y="1316" width="1" height="15" fill="rgb(228,53,23)"/><text x="24.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="21" y="1332" width="1" height="15" fill="rgb(230,195,38)"/><text x="24.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="21" y="1348" width="1" height="15" fill="rgb(245,172,27)"/><text x="24.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.09%)</title><rect x="21" y="1364" width="1" height="15" fill="rgb(243,1,37)"/><text x="24.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="21" y="1380" width="1" height="15" fill="rgb(217,112,29)"/><text x="24.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="21" y="1396" width="1" height="15" fill="rgb(205,127,39)"/><text x="24.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="21" y="1412" width="1" height="15" fill="rgb(218,69,41)"/><text x="24.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="21" y="1428" width="1" height="15" fill="rgb(220,150,43)"/><text x="24.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="21" y="1444" width="1" height="15" fill="rgb(209,206,41)"/><text x="24.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.09%)</title><rect x="21" y="1460" width="1" height="15" fill="rgb(220,30,3)"/><text x="24.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.09%)</title><rect x="21" y="1476" width="1" height="15" fill="rgb(235,77,12)"/><text x="24.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.09%)</title><rect x="21" y="1492" width="1" height="15" fill="rgb(248,38,53)"/><text x="24.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.09%)</title><rect x="21" y="1508" width="1" height="15" fill="rgb(246,201,16)"/><text x="24.00" y="1518.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="21" y="1524" width="1" height="15" fill="rgb(226,59,47)"/><text x="24.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.09%)</title><rect x="22" y="724" width="2" height="15" fill="rgb(218,12,43)"/><text x="25.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="740" width="2" height="15" fill="rgb(249,58,9)"/><text x="25.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="756" width="2" height="15" fill="rgb(210,172,7)"/><text x="25.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="772" width="2" height="15" fill="rgb(205,99,53)"/><text x="25.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="22" y="788" width="2" height="15" fill="rgb(219,3,27)"/><text x="25.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="804" width="2" height="15" fill="rgb(249,104,2)"/><text x="25.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.09%)</title><rect x="22" y="820" width="2" height="15" fill="rgb(242,141,1)"/><text x="25.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="836" width="2" height="15" fill="rgb(220,120,13)"/><text x="25.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="852" width="2" height="15" fill="rgb(237,37,44)"/><text x="25.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="868" width="2" height="15" fill="rgb(206,200,2)"/><text x="25.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="22" y="884" width="2" height="15" fill="rgb(232,117,32)"/><text x="25.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="900" width="2" height="15" fill="rgb(232,118,32)"/><text x="25.00" y="910.50"></text></g><g><title>0x7fccab66940e (?) (1 samples, 0.09%)</title><rect x="22" y="916" width="2" height="15" fill="rgb(216,26,49)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="932" width="2" height="15" fill="rgb(205,211,32)"/><text x="25.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="948" width="2" height="15" fill="rgb(229,109,39)"/><text x="25.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="964" width="2" height="15" fill="rgb(254,117,25)"/><text x="25.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="22" y="980" width="2" height="15" fill="rgb(232,122,26)"/><text x="25.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="996" width="2" height="15" fill="rgb(224,174,25)"/><text x="25.00" y="1006.50"></text></g><g><title>0x7fccab422cd2 (?) (1 samples, 0.09%)</title><rect x="22" y="1012" width="2" height="15" fill="rgb(245,133,42)"/><text x="25.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1028" width="2" height="15" fill="rgb(205,187,22)"/><text x="25.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1044" width="2" height="15" fill="rgb(242,128,36)"/><text x="25.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1060" width="2" height="15" fill="rgb(234,187,25)"/><text x="25.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="22" y="1076" width="2" height="15" fill="rgb(253,213,14)"/><text x="25.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1092" width="2" height="15" fill="rgb(247,113,18)"/><text x="25.00" y="1102.50"></text></g><g><title>0x7fccaab180e5 (?) (1 samples, 0.09%)</title><rect x="22" y="1108" width="2" height="15" fill="rgb(227,92,31)"/><text x="25.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1124" width="2" height="15" fill="rgb(235,81,50)"/><text x="25.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1140" width="2" height="15" fill="rgb(216,109,47)"/><text x="25.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1156" width="2" height="15" fill="rgb(208,178,37)"/><text x="25.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="22" y="1172" width="2" height="15" fill="rgb(235,209,18)"/><text x="25.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1188" width="2" height="15" fill="rgb(231,43,13)"/><text x="25.00" y="1198.50"></text></g><g><title>0x7fccaa89ce68 (?) (1 samples, 0.09%)</title><rect x="22" y="1204" width="2" height="15" fill="rgb(218,83,22)"/><text x="25.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1220" width="2" height="15" fill="rgb(214,108,10)"/><text x="25.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1236" width="2" height="15" fill="rgb(244,206,18)"/><text x="25.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1252" width="2" height="15" fill="rgb(222,68,31)"/><text x="25.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="22" y="1268" width="2" height="15" fill="rgb(254,49,53)"/><text x="25.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1284" width="2" height="15" fill="rgb(223,42,26)"/><text x="25.00" y="1294.50"></text></g><g><title>0x7fccaa62d2fb (?) (1 samples, 0.09%)</title><rect x="22" y="1300" width="2" height="15" fill="rgb(205,163,5)"/><text x="25.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1316" width="2" height="15" fill="rgb(230,55,48)"/><text x="25.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1332" width="2" height="15" fill="rgb(246,84,20)"/><text x="25.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1348" width="2" height="15" fill="rgb(221,83,40)"/><text x="25.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="22" y="1364" width="2" height="15" fill="rgb(215,104,50)"/><text x="25.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1380" width="2" height="15" fill="rgb(215,34,51)"/><text x="25.00" y="1390.50"></text></g><g><title>0x7fccaa411153 (?) (1 samples, 0.09%)</title><rect x="22" y="1396" width="2" height="15" fill="rgb(206,1,6)"/><text x="25.00" y="1406.50"></text></g><g><title>0x7fccaa40fc13 (?) (1 samples, 0.09%)</title><rect x="22" y="1412" width="2" height="15" fill="rgb(243,17,39)"/><text x="25.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1428" width="2" height="15" fill="rgb(253,197,1)"/><text x="25.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1444" width="2" height="15" fill="rgb(251,95,3)"/><text x="25.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1460" width="2" height="15" fill="rgb(210,84,51)"/><text x="25.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="22" y="1476" width="2" height="15" fill="rgb(217,25,23)"/><text x="25.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1492" width="2" height="15" fill="rgb(224,157,1)"/><text x="25.00" y="1502.50"></text></g><g><title>0x7fccaa1ac181 (?) (1 samples, 0.09%)</title><rect x="22" y="1508" width="2" height="15" fill="rgb(226,214,49)"/><text x="25.00" y="1518.50"></text></g><g><title>0x7fccaa1af1c9 (?) (1 samples, 0.09%)</title><rect x="22" y="1524" width="2" height="15" fill="rgb(235,24,7)"/><text x="25.00" y="1534.50"></text></g><g><title>0x7fccaa1db167 (?) (1 samples, 0.09%)</title><rect x="22" y="1540" width="2" height="15" fill="rgb(227,12,6)"/><text x="25.00" y="1550.50"></text></g><g><title>0x7fccaa1d6b64 (?) (1 samples, 0.09%)</title><rect x="22" y="1556" width="2" height="15" fill="rgb(222,94,50)"/><text x="25.00" y="1566.50"></text></g><g><title>0x7fccaa1ba07b (?) (1 samples, 0.09%)</title><rect x="22" y="1572" width="2" height="15" fill="rgb(222,172,53)"/><text x="25.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.09%)</title><rect x="22" y="1588" width="2" height="15" fill="rgb(234,53,30)"/><text x="25.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.09%)</title><rect x="22" y="1604" width="2" height="15" fill="rgb(230,48,13)"/><text x="25.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.09%)</title><rect x="22" y="1620" width="2" height="15" fill="rgb(223,123,37)"/><text x="25.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.09%)</title><rect x="22" y="1636" width="2" height="15" fill="rgb(247,152,22)"/><text x="25.00" y="1646.50"></text></g><g><title>isatty (libc-2.29.so) (1 samples, 0.09%)</title><rect x="22" y="1652" width="2" height="15" fill="rgb(249,64,34)"/><text x="25.00" y="1662.50"></text></g><g><title>tcgetattr (libc-2.29.so) (1 samples, 0.09%)</title><rect x="22" y="1668" width="2" height="15" fill="rgb(232,181,25)"/><text x="25.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimes.py) (1 samples, 0.09%)</title><rect x="24" y="964" width="1" height="15" fill="rgb(217,7,44)"/><text x="27.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="24" y="980" width="1" height="15" fill="rgb(233,24,10)"/><text x="27.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="24" y="996" width="1" height="15" fill="rgb(226,60,3)"/><text x="27.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="24" y="1012" width="1" height="15" fill="rgb(224,23,16)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="24" y="1028" width="1" height="15" fill="rgb(223,0,39)"/><text x="27.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="24" y="1044" width="1" height="15" fill="rgb(220,5,42)"/><text x="27.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="24" y="1060" width="1" height="15" fill="rgb(225,221,53)"/><text x="27.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="24" y="1076" width="1" height="15" fill="rgb(246,178,54)"/><text x="27.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimelike.py) (1 samples, 0.09%)</title><rect x="24" y="1092" width="1" height="15" fill="rgb(210,37,34)"/><text x="27.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="24" y="1108" width="1" height="15" fill="rgb(228,136,41)"/><text x="27.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="24" y="1124" width="1" height="15" fill="rgb(252,102,2)"/><text x="27.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="24" y="1140" width="1" height="15" fill="rgb(232,3,39)"/><text x="27.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="24" y="1156" width="1" height="15" fill="rgb(215,208,42)"/><text x="27.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="24" y="1172" width="1" height="15" fill="rgb(223,181,50)"/><text x="27.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="24" y="1188" width="1" height="15" fill="rgb(230,179,21)"/><text x="27.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="24" y="1204" width="1" height="15" fill="rgb(218,120,12)"/><text x="27.00" y="1214.50"></text></g><g><title>&lt;module&gt; (pandas/tseries/frequencies.py) (1 samples, 0.09%)</title><rect x="24" y="1220" width="1" height="15" fill="rgb(241,186,41)"/><text x="27.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="24" y="1236" width="1" height="15" fill="rgb(225,6,5)"/><text x="27.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="24" y="1252" width="1" height="15" fill="rgb(253,127,27)"/><text x="27.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="24" y="1268" width="1" height="15" fill="rgb(231,34,36)"/><text x="27.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="24" y="1284" width="1" height="15" fill="rgb(243,226,15)"/><text x="27.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="24" y="1300" width="1" height="15" fill="rgb(207,90,46)"/><text x="27.00" y="1310.50"></text></g><g><title>&lt;module&gt; (pandas/tseries/offsets.py) (1 samples, 0.09%)</title><rect x="24" y="1316" width="1" height="15" fill="rgb(218,93,47)"/><text x="27.00" y="1326.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.09%)</title><rect x="24" y="1332" width="1" height="15" fill="rgb(231,48,33)"/><text x="27.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="24" y="772" width="2" height="15" fill="rgb(207,189,54)"/><text x="27.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="24" y="788" width="2" height="15" fill="rgb(208,170,34)"/><text x="27.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="24" y="804" width="2" height="15" fill="rgb(205,206,41)"/><text x="27.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="24" y="820" width="2" height="15" fill="rgb(225,58,0)"/><text x="27.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="24" y="836" width="2" height="15" fill="rgb(227,158,42)"/><text x="27.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="24" y="852" width="2" height="15" fill="rgb(247,55,41)"/><text x="27.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (2 samples, 0.18%)</title><rect x="24" y="868" width="2" height="15" fill="rgb(235,125,33)"/><text x="27.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="24" y="884" width="2" height="15" fill="rgb(206,146,33)"/><text x="27.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="24" y="900" width="2" height="15" fill="rgb(206,150,16)"/><text x="27.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="24" y="916" width="2" height="15" fill="rgb(209,215,33)"/><text x="27.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="24" y="932" width="2" height="15" fill="rgb(218,42,6)"/><text x="27.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="24" y="948" width="2" height="15" fill="rgb(212,182,25)"/><text x="27.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/sparse.py) (1 samples, 0.09%)</title><rect x="25" y="964" width="1" height="15" fill="rgb(228,116,12)"/><text x="28.00" y="974.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.09%)</title><rect x="26" y="1108" width="1" height="15" fill="rgb(240,206,3)"/><text x="29.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="1124" width="1" height="15" fill="rgb(223,201,45)"/><text x="29.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="1140" width="1" height="15" fill="rgb(239,200,46)"/><text x="29.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="1156" width="1" height="15" fill="rgb(211,200,36)"/><text x="29.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="26" y="1172" width="1" height="15" fill="rgb(240,193,39)"/><text x="29.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="1188" width="1" height="15" fill="rgb(229,208,33)"/><text x="29.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/io/formats/format.py) (1 samples, 0.09%)</title><rect x="26" y="1204" width="1" height="15" fill="rgb(213,43,6)"/><text x="29.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="1220" width="1" height="15" fill="rgb(239,64,23)"/><text x="29.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="1236" width="1" height="15" fill="rgb(246,65,27)"/><text x="29.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="1252" width="1" height="15" fill="rgb(233,85,54)"/><text x="29.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="26" y="1268" width="1" height="15" fill="rgb(251,203,41)"/><text x="29.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="1284" width="1" height="15" fill="rgb(236,170,51)"/><text x="29.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/io/common.py) (1 samples, 0.09%)</title><rect x="26" y="1300" width="1" height="15" fill="rgb(212,24,19)"/><text x="29.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="27" y="1540" width="2" height="15" fill="rgb(237,126,47)"/><text x="30.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="27" y="1556" width="2" height="15" fill="rgb(249,127,41)"/><text x="30.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="27" y="1572" width="2" height="15" fill="rgb(222,118,11)"/><text x="30.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="27" y="1588" width="2" height="15" fill="rgb(209,97,45)"/><text x="30.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="27" y="1604" width="2" height="15" fill="rgb(233,134,50)"/><text x="30.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="27" y="1620" width="2" height="15" fill="rgb(222,123,17)"/><text x="30.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (2 samples, 0.18%)</title><rect x="27" y="1636" width="2" height="15" fill="rgb(226,153,51)"/><text x="30.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="27" y="1652" width="2" height="15" fill="rgb(227,201,52)"/><text x="30.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="27" y="1668" width="2" height="15" fill="rgb(212,127,39)"/><text x="30.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="27" y="1684" width="2" height="15" fill="rgb(232,197,38)"/><text x="30.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="27" y="1700" width="2" height="15" fill="rgb(222,57,48)"/><text x="30.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="27" y="1716" width="2" height="15" fill="rgb(213,32,46)"/><text x="30.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="27" y="1732" width="2" height="15" fill="rgb(208,120,27)"/><text x="30.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="27" y="1748" width="2" height="15" fill="rgb(210,171,28)"/><text x="30.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (2 samples, 0.18%)</title><rect x="27" y="1764" width="2" height="15" fill="rgb(253,99,51)"/><text x="30.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="27" y="1780" width="2" height="15" fill="rgb(235,153,45)"/><text x="30.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="27" y="1796" width="2" height="15" fill="rgb(228,183,10)"/><text x="30.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="27" y="1812" width="2" height="15" fill="rgb(231,66,4)"/><text x="30.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="27" y="1828" width="2" height="15" fill="rgb(210,68,3)"/><text x="30.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="27" y="1844" width="2" height="15" fill="rgb(244,228,18)"/><text x="30.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (2 samples, 0.18%)</title><rect x="27" y="1860" width="2" height="15" fill="rgb(205,218,4)"/><text x="30.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="27" y="1876" width="2" height="15" fill="rgb(227,92,6)"/><text x="30.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="27" y="1892" width="2" height="15" fill="rgb(248,126,29)"/><text x="30.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="27" y="1908" width="2" height="15" fill="rgb(250,199,33)"/><text x="30.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="27" y="1924" width="2" height="15" fill="rgb(248,57,4)"/><text x="30.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="27" y="1940" width="2" height="15" fill="rgb(250,164,41)"/><text x="30.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py) (2 samples, 0.18%)</title><rect x="27" y="1956" width="2" height="15" fill="rgb(221,10,24)"/><text x="30.00" y="1966.50"></text></g><g><title>__add__ (pyparsing.py) (2 samples, 0.18%)</title><rect x="27" y="1972" width="2" height="15" fill="rgb(212,161,29)"/><text x="30.00" y="1982.50"></text></g><g><title>__init__ (pyparsing.py) (2 samples, 0.18%)</title><rect x="27" y="1988" width="2" height="15" fill="rgb(237,182,32)"/><text x="30.00" y="1998.50"></text></g><g><title>__init__ (pyparsing.py) (1 samples, 0.09%)</title><rect x="28" y="2004" width="1" height="15" fill="rgb(231,198,5)"/><text x="31.00" y="2014.50"></text></g><g><title>__init__ (pyparsing.py) (1 samples, 0.09%)</title><rect x="28" y="2020" width="1" height="15" fill="rgb(254,14,15)"/><text x="31.00" y="2030.50"></text></g><g><title>array_multiply (number.c) (1 samples, 0.09%)</title><rect x="30" y="1876" width="1" height="15" fill="rgb(240,54,6)"/><text x="33.00" y="1886.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.09%)</title><rect x="30" y="1892" width="1" height="15" fill="rgb(218,158,53)"/><text x="33.00" y="1902.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.09%)</title><rect x="30" y="1908" width="1" height="15" fill="rgb(234,138,34)"/><text x="33.00" y="1918.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.09%)</title><rect x="30" y="1924" width="1" height="15" fill="rgb(253,97,23)"/><text x="33.00" y="1934.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.09%)</title><rect x="30" y="1940" width="1" height="15" fill="rgb(229,8,2)"/><text x="33.00" y="1950.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.09%)</title><rect x="30" y="1956" width="1" height="15" fill="rgb(212,208,50)"/><text x="33.00" y="1966.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.09%)</title><rect x="30" y="1972" width="1" height="15" fill="rgb(205,90,24)"/><text x="33.00" y="1982.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.09%)</title><rect x="30" y="1988" width="1" height="15" fill="rgb(235,33,6)"/><text x="33.00" y="1998.50"></text></g><g><title>linspace (&lt;__array_function__ internals&gt;) (3 samples, 0.27%)</title><rect x="29" y="1828" width="3" height="15" fill="rgb(221,124,49)"/><text x="32.00" y="1838.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.27%)</title><rect x="29" y="1844" width="3" height="15" fill="rgb(228,212,16)"/><text x="32.00" y="1854.50"></text></g><g><title>linspace (numpy/core/function_base.py) (3 samples, 0.27%)</title><rect x="29" y="1860" width="3" height="15" fill="rgb(205,106,8)"/><text x="32.00" y="1870.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (1 samples, 0.09%)</title><rect x="31" y="1876" width="1" height="15" fill="rgb(251,96,52)"/><text x="34.00" y="1886.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.64%)</title><rect x="26" y="1092" width="7" height="15" fill="rgb(219,117,0)"/><text x="29.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (6 samples, 0.55%)</title><rect x="27" y="1108" width="6" height="15" fill="rgb(229,102,48)"/><text x="30.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.55%)</title><rect x="27" y="1124" width="6" height="15" fill="rgb(228,189,1)"/><text x="30.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.55%)</title><rect x="27" y="1140" width="6" height="15" fill="rgb(210,42,6)"/><text x="30.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.55%)</title><rect x="27" y="1156" width="6" height="15" fill="rgb(225,163,54)"/><text x="30.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.55%)</title><rect x="27" y="1172" width="6" height="15" fill="rgb(207,27,5)"/><text x="30.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.55%)</title><rect x="27" y="1188" width="6" height="15" fill="rgb(216,43,29)"/><text x="30.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (6 samples, 0.55%)</title><rect x="27" y="1204" width="6" height="15" fill="rgb(213,15,7)"/><text x="30.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.55%)</title><rect x="27" y="1220" width="6" height="15" fill="rgb(222,197,10)"/><text x="30.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.55%)</title><rect x="27" y="1236" width="6" height="15" fill="rgb(222,207,26)"/><text x="30.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.55%)</title><rect x="27" y="1252" width="6" height="15" fill="rgb(230,206,24)"/><text x="30.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.55%)</title><rect x="27" y="1268" width="6" height="15" fill="rgb(247,213,19)"/><text x="30.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.55%)</title><rect x="27" y="1284" width="6" height="15" fill="rgb(228,18,10)"/><text x="30.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (6 samples, 0.55%)</title><rect x="27" y="1300" width="6" height="15" fill="rgb(231,225,10)"/><text x="30.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.55%)</title><rect x="27" y="1316" width="6" height="15" fill="rgb(221,78,35)"/><text x="30.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.55%)</title><rect x="27" y="1332" width="6" height="15" fill="rgb(223,73,53)"/><text x="30.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.55%)</title><rect x="27" y="1348" width="6" height="15" fill="rgb(225,152,43)"/><text x="30.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.55%)</title><rect x="27" y="1364" width="6" height="15" fill="rgb(241,47,6)"/><text x="30.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.55%)</title><rect x="27" y="1380" width="6" height="15" fill="rgb(216,208,54)"/><text x="30.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (6 samples, 0.55%)</title><rect x="27" y="1396" width="6" height="15" fill="rgb(240,62,4)"/><text x="30.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.55%)</title><rect x="27" y="1412" width="6" height="15" fill="rgb(221,6,32)"/><text x="30.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.55%)</title><rect x="27" y="1428" width="6" height="15" fill="rgb(230,65,44)"/><text x="30.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.55%)</title><rect x="27" y="1444" width="6" height="15" fill="rgb(212,138,10)"/><text x="30.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.55%)</title><rect x="27" y="1460" width="6" height="15" fill="rgb(247,33,47)"/><text x="30.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.55%)</title><rect x="27" y="1476" width="6" height="15" fill="rgb(234,156,52)"/><text x="30.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (6 samples, 0.55%)</title><rect x="27" y="1492" width="6" height="15" fill="rgb(244,96,43)"/><text x="30.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.55%)</title><rect x="27" y="1508" width="6" height="15" fill="rgb(209,173,7)"/><text x="30.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.55%)</title><rect x="27" y="1524" width="6" height="15" fill="rgb(252,73,8)"/><text x="30.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="29" y="1540" width="4" height="15" fill="rgb(218,141,10)"/><text x="32.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.37%)</title><rect x="29" y="1556" width="4" height="15" fill="rgb(208,59,35)"/><text x="32.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="29" y="1572" width="4" height="15" fill="rgb(237,111,8)"/><text x="32.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (4 samples, 0.37%)</title><rect x="29" y="1588" width="4" height="15" fill="rgb(245,50,19)"/><text x="32.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="29" y="1604" width="4" height="15" fill="rgb(222,214,22)"/><text x="32.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="29" y="1620" width="4" height="15" fill="rgb(238,203,8)"/><text x="32.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="29" y="1636" width="4" height="15" fill="rgb(247,154,27)"/><text x="32.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.37%)</title><rect x="29" y="1652" width="4" height="15" fill="rgb(249,5,11)"/><text x="32.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="29" y="1668" width="4" height="15" fill="rgb(234,40,21)"/><text x="32.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py) (4 samples, 0.37%)</title><rect x="29" y="1684" width="4" height="15" fill="rgb(224,60,16)"/><text x="32.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="29" y="1700" width="4" height="15" fill="rgb(205,11,41)"/><text x="32.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="29" y="1716" width="4" height="15" fill="rgb(240,72,43)"/><text x="32.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="29" y="1732" width="4" height="15" fill="rgb(217,39,21)"/><text x="32.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.37%)</title><rect x="29" y="1748" width="4" height="15" fill="rgb(213,49,51)"/><text x="32.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="29" y="1764" width="4" height="15" fill="rgb(226,52,38)"/><text x="32.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py) (4 samples, 0.37%)</title><rect x="29" y="1780" width="4" height="15" fill="rgb(238,207,53)"/><text x="32.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py) (4 samples, 0.37%)</title><rect x="29" y="1796" width="4" height="15" fill="rgb(209,128,34)"/><text x="32.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py) (4 samples, 0.37%)</title><rect x="29" y="1812" width="4" height="15" fill="rgb(230,21,53)"/><text x="32.00" y="1822.50"></text></g><g><title>to_rgba (matplotlib/colors.py) (1 samples, 0.09%)</title><rect x="32" y="1828" width="1" height="15" fill="rgb(229,136,38)"/><text x="35.00" y="1838.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (15 samples, 1.37%)</title><rect x="18" y="244" width="16" height="15" fill="rgb(241,29,32)"/><text x="21.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.37%)</title><rect x="18" y="260" width="16" height="15" fill="rgb(210,81,41)"/><text x="21.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.37%)</title><rect x="18" y="276" width="16" height="15" fill="rgb(233,142,26)"/><text x="21.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.37%)</title><rect x="18" y="292" width="16" height="15" fill="rgb(205,101,38)"/><text x="21.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 1.37%)</title><rect x="18" y="308" width="16" height="15" fill="rgb(250,193,1)"/><text x="21.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.37%)</title><rect x="18" y="324" width="16" height="15" fill="rgb(252,125,46)"/><text x="21.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (15 samples, 1.37%)</title><rect x="18" y="340" width="16" height="15" fill="rgb(216,136,52)"/><text x="21.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.37%)</title><rect x="18" y="356" width="16" height="15" fill="rgb(248,161,48)"/><text x="21.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.37%)</title><rect x="18" y="372" width="16" height="15" fill="rgb(230,55,12)"/><text x="21.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.37%)</title><rect x="18" y="388" width="16" height="15" fill="rgb(224,128,51)"/><text x="21.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 1.37%)</title><rect x="18" y="404" width="16" height="15" fill="rgb(210,111,17)"/><text x="21.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.37%)</title><rect x="18" y="420" width="16" height="15" fill="rgb(214,104,2)"/><text x="21.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (15 samples, 1.37%)</title><rect x="18" y="436" width="16" height="15" fill="rgb(225,62,8)"/><text x="21.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.37%)</title><rect x="18" y="452" width="16" height="15" fill="rgb(211,226,0)"/><text x="21.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.37%)</title><rect x="18" y="468" width="16" height="15" fill="rgb(226,52,24)"/><text x="21.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.01%)</title><rect x="22" y="484" width="12" height="15" fill="rgb(213,206,50)"/><text x="25.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 1.01%)</title><rect x="22" y="500" width="12" height="15" fill="rgb(245,76,42)"/><text x="25.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.01%)</title><rect x="22" y="516" width="12" height="15" fill="rgb(223,12,51)"/><text x="25.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (11 samples, 1.01%)</title><rect x="22" y="532" width="12" height="15" fill="rgb(211,96,38)"/><text x="25.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.01%)</title><rect x="22" y="548" width="12" height="15" fill="rgb(253,108,6)"/><text x="25.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.01%)</title><rect x="22" y="564" width="12" height="15" fill="rgb(213,157,36)"/><text x="25.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.01%)</title><rect x="22" y="580" width="12" height="15" fill="rgb(234,217,38)"/><text x="25.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 1.01%)</title><rect x="22" y="596" width="12" height="15" fill="rgb(215,152,32)"/><text x="25.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.01%)</title><rect x="22" y="612" width="12" height="15" fill="rgb(231,94,26)"/><text x="25.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (11 samples, 1.01%)</title><rect x="22" y="628" width="12" height="15" fill="rgb(239,112,44)"/><text x="25.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.01%)</title><rect x="22" y="644" width="12" height="15" fill="rgb(234,143,10)"/><text x="25.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.01%)</title><rect x="22" y="660" width="12" height="15" fill="rgb(231,200,51)"/><text x="25.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.01%)</title><rect x="22" y="676" width="12" height="15" fill="rgb(243,171,39)"/><text x="25.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 1.01%)</title><rect x="22" y="692" width="12" height="15" fill="rgb(247,62,42)"/><text x="25.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.01%)</title><rect x="22" y="708" width="12" height="15" fill="rgb(231,26,40)"/><text x="25.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (10 samples, 0.91%)</title><rect x="24" y="724" width="10" height="15" fill="rgb(215,217,21)"/><text x="27.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 0.91%)</title><rect x="24" y="740" width="10" height="15" fill="rgb(230,58,31)"/><text x="27.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 0.91%)</title><rect x="24" y="756" width="10" height="15" fill="rgb(213,124,23)"/><text x="27.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="26" y="772" width="8" height="15" fill="rgb(212,86,28)"/><text x="29.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.73%)</title><rect x="26" y="788" width="8" height="15" fill="rgb(215,30,17)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="26" y="804" width="8" height="15" fill="rgb(248,174,44)"/><text x="29.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (8 samples, 0.73%)</title><rect x="26" y="820" width="8" height="15" fill="rgb(220,18,41)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="26" y="836" width="8" height="15" fill="rgb(208,204,48)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="26" y="852" width="8" height="15" fill="rgb(206,122,32)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="26" y="868" width="8" height="15" fill="rgb(248,153,42)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.73%)</title><rect x="26" y="884" width="8" height="15" fill="rgb(226,37,47)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="26" y="900" width="8" height="15" fill="rgb(222,81,5)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (8 samples, 0.73%)</title><rect x="26" y="916" width="8" height="15" fill="rgb(210,183,29)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="26" y="932" width="8" height="15" fill="rgb(211,27,3)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="26" y="948" width="8" height="15" fill="rgb(226,125,23)"/><text x="29.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="26" y="964" width="8" height="15" fill="rgb(225,89,30)"/><text x="29.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.73%)</title><rect x="26" y="980" width="8" height="15" fill="rgb(221,60,53)"/><text x="29.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="26" y="996" width="8" height="15" fill="rgb(229,196,20)"/><text x="29.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (8 samples, 0.73%)</title><rect x="26" y="1012" width="8" height="15" fill="rgb(247,147,43)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="26" y="1028" width="8" height="15" fill="rgb(238,37,8)"/><text x="29.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="26" y="1044" width="8" height="15" fill="rgb(252,145,54)"/><text x="29.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="26" y="1060" width="8" height="15" fill="rgb(225,194,7)"/><text x="29.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.73%)</title><rect x="26" y="1076" width="8" height="15" fill="rgb(237,175,50)"/><text x="29.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="33" y="1092" width="1" height="15" fill="rgb(235,92,9)"/><text x="36.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="33" y="1108" width="1" height="15" fill="rgb(247,217,21)"/><text x="36.00" y="1118.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.09%)</title><rect x="33" y="1124" width="1" height="15" fill="rgb(215,129,46)"/><text x="36.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (24 samples, 2.20%)</title><rect x="10" y="68" width="25" height="15" fill="rgb(224,31,12)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (24 samples, 2.20%)</title><rect x="10" y="84" width="25" height="15" fill="rgb(234,164,10)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (24 samples, 2.20%)</title><rect x="10" y="100" width="25" height="15" fill="rgb(248,86,22)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (24 samples, 2.20%)</title><rect x="10" y="116" width="25" height="15" fill="rgb(233,120,30)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (24 samples, 2.20%)</title><rect x="10" y="132" width="25" height="15" fill="rgb(247,12,43)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py) (24 samples, 2.20%)</title><rect x="10" y="148" width="25" height="15" fill="rgb(235,79,23)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (24 samples, 2.20%)</title><rect x="10" y="164" width="25" height="15" fill="rgb(221,101,52)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (24 samples, 2.20%)</title><rect x="10" y="180" width="25" height="15" fill="rgb(242,98,48)"/><text x="13.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 1.46%)</title><rect x="18" y="196" width="17" height="15" fill="rgb(232,200,36)"/><text x="21.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 1.46%)</title><rect x="18" y="212" width="17" height="15" fill="rgb(228,35,12)"/><text x="21.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 1.46%)</title><rect x="18" y="228" width="17" height="15" fill="rgb(207,34,26)"/><text x="21.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (1 samples, 0.09%)</title><rect x="34" y="244" width="1" height="15" fill="rgb(239,12,25)"/><text x="37.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="260" width="1" height="15" fill="rgb(252,122,41)"/><text x="37.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="276" width="1" height="15" fill="rgb(243,205,34)"/><text x="37.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="292" width="1" height="15" fill="rgb(217,130,44)"/><text x="37.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="34" y="308" width="1" height="15" fill="rgb(226,49,12)"/><text x="37.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="324" width="1" height="15" fill="rgb(239,107,45)"/><text x="37.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py) (1 samples, 0.09%)</title><rect x="34" y="340" width="1" height="15" fill="rgb(212,190,15)"/><text x="37.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="356" width="1" height="15" fill="rgb(205,134,0)"/><text x="37.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="372" width="1" height="15" fill="rgb(207,188,35)"/><text x="37.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="388" width="1" height="15" fill="rgb(235,195,18)"/><text x="37.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="34" y="404" width="1" height="15" fill="rgb(249,10,48)"/><text x="37.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="420" width="1" height="15" fill="rgb(251,190,0)"/><text x="37.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py) (1 samples, 0.09%)</title><rect x="34" y="436" width="1" height="15" fill="rgb(212,107,16)"/><text x="37.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="452" width="1" height="15" fill="rgb(237,196,30)"/><text x="37.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="468" width="1" height="15" fill="rgb(215,200,49)"/><text x="37.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="484" width="1" height="15" fill="rgb(223,141,11)"/><text x="37.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="34" y="500" width="1" height="15" fill="rgb(230,159,18)"/><text x="37.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="516" width="1" height="15" fill="rgb(254,213,49)"/><text x="37.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/_ranking.py) (1 samples, 0.09%)</title><rect x="34" y="532" width="1" height="15" fill="rgb(218,95,3)"/><text x="37.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="548" width="1" height="15" fill="rgb(209,153,15)"/><text x="37.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="564" width="1" height="15" fill="rgb(218,84,32)"/><text x="37.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="580" width="1" height="15" fill="rgb(251,4,3)"/><text x="37.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="34" y="596" width="1" height="15" fill="rgb(254,105,53)"/><text x="37.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="612" width="1" height="15" fill="rgb(218,34,24)"/><text x="37.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/preprocessing/__init__.py) (1 samples, 0.09%)</title><rect x="34" y="628" width="1" height="15" fill="rgb(210,178,31)"/><text x="37.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="644" width="1" height="15" fill="rgb(218,2,16)"/><text x="37.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="660" width="1" height="15" fill="rgb(250,221,54)"/><text x="37.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="676" width="1" height="15" fill="rgb(218,86,50)"/><text x="37.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="34" y="692" width="1" height="15" fill="rgb(239,196,11)"/><text x="37.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="708" width="1" height="15" fill="rgb(216,91,33)"/><text x="37.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/preprocessing/_data.py) (1 samples, 0.09%)</title><rect x="34" y="724" width="1" height="15" fill="rgb(208,181,43)"/><text x="37.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="740" width="1" height="15" fill="rgb(209,165,45)"/><text x="37.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="756" width="1" height="15" fill="rgb(234,105,21)"/><text x="37.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="772" width="1" height="15" fill="rgb(224,89,1)"/><text x="37.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="34" y="788" width="1" height="15" fill="rgb(210,158,2)"/><text x="37.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="804" width="1" height="15" fill="rgb(223,28,48)"/><text x="37.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/preprocessing/_encoders.py) (1 samples, 0.09%)</title><rect x="34" y="820" width="1" height="15" fill="rgb(239,92,51)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="836" width="1" height="15" fill="rgb(240,99,11)"/><text x="37.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="852" width="1" height="15" fill="rgb(222,193,10)"/><text x="37.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="34" y="868" width="1" height="15" fill="rgb(243,166,52)"/><text x="37.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="34" y="884" width="1" height="15" fill="rgb(238,86,14)"/><text x="37.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="34" y="900" width="1" height="15" fill="rgb(222,229,9)"/><text x="37.00" y="910.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="34" y="916" width="1" height="15" fill="rgb(210,161,25)"/><text x="37.00" y="926.50"></text></g><g><title>0x7fcc96176ff9 (?) (1 samples, 0.09%)</title><rect x="38" y="212" width="1" height="15" fill="rgb(247,39,25)"/><text x="41.00" y="222.50"></text></g><g><title>0x7fcc96171ef6 (?) (1 samples, 0.09%)</title><rect x="38" y="228" width="1" height="15" fill="rgb(254,26,30)"/><text x="41.00" y="238.50"></text></g><g><title>0x7fcc96166962 (?) (1 samples, 0.09%)</title><rect x="38" y="244" width="1" height="15" fill="rgb(237,138,9)"/><text x="41.00" y="254.50"></text></g><g><title>0x7fcc9619a7a7 (?) (1 samples, 0.09%)</title><rect x="38" y="260" width="1" height="15" fill="rgb(245,225,15)"/><text x="41.00" y="270.50"></text></g><g><title>0x7fcc9619a379 (?) (1 samples, 0.09%)</title><rect x="38" y="276" width="1" height="15" fill="rgb(244,169,27)"/><text x="41.00" y="286.50"></text></g><g><title>0x7fcc965f88b8 (?) (1 samples, 0.09%)</title><rect x="38" y="292" width="1" height="15" fill="rgb(208,77,53)"/><text x="41.00" y="302.50"></text></g><g><title>0x7fcc965f6c7f (?) (1 samples, 0.09%)</title><rect x="38" y="308" width="1" height="15" fill="rgb(213,125,13)"/><text x="41.00" y="318.50"></text></g><g><title>0x7fcc9660999c (?) (1 samples, 0.09%)</title><rect x="38" y="324" width="1" height="15" fill="rgb(230,188,31)"/><text x="41.00" y="334.50"></text></g><g><title>0x7fcc9640c1c9 (?) (1 samples, 0.09%)</title><rect x="38" y="340" width="1" height="15" fill="rgb(251,212,39)"/><text x="41.00" y="350.50"></text></g><g><title>0x7fccd6158db3 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="38" y="356" width="1" height="15" fill="rgb(229,75,18)"/><text x="41.00" y="366.50"></text></g><g><title>onnxruntime::ArgMin&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.73%)</title><rect x="39" y="340" width="8" height="15" fill="rgb(249,31,41)"/><text x="42.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.55%)</title><rect x="41" y="356" width="6" height="15" fill="rgb(235,39,41)"/><text x="44.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.18%)</title><rect x="45" y="372" width="2" height="15" fill="rgb(220,119,52)"/><text x="48.00" y="382.50"></text></g><g><title>onnxruntime::Cast&lt;bool&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.18%)</title><rect x="47" y="340" width="2" height="15" fill="rgb(212,86,38)"/><text x="50.00" y="350.50"></text></g><g><title>0x7fccd6158dc9 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="53" y="372" width="1" height="15" fill="rgb(236,47,6)"/><text x="56.00" y="382.50"></text></g><g><title>onnxruntime::Concat::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.46%)</title><rect x="49" y="340" width="6" height="15" fill="rgb(218,144,11)"/><text x="52.00" y="350.50"></text></g><g><title>onnxruntime::ConcatBase::ComputeImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.46%)</title><rect x="49" y="356" width="6" height="15" fill="rgb(247,181,1)"/><text x="52.00" y="366.50"></text></g><g><title>0x7fccd6158dcb (libc-2.29.so) (1 samples, 0.09%)</title><rect x="54" y="372" width="1" height="15" fill="rgb(222,142,54)"/><text x="57.00" y="382.50"></text></g><g><title>(anonymous namespace)::CopySlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.18%)</title><rect x="55" y="356" width="2" height="15" fill="rgb(221,170,14)"/><text x="58.00" y="366.50"></text></g><g><title>(anonymous namespace)::SumSlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 1.46%)</title><rect x="57" y="356" width="17" height="15" fill="rgb(241,96,24)"/><text x="60.00" y="366.50"></text></g><g><title>onnxruntime::CumSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 1.74%)</title><rect x="55" y="340" width="20" height="15" fill="rgb(219,65,24)"/><text x="58.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="74" y="356" width="1" height="15" fill="rgb(223,50,32)"/><text x="77.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="74" y="372" width="1" height="15" fill="rgb(225,87,12)"/><text x="77.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="74" y="388" width="1" height="15" fill="rgb(238,209,24)"/><text x="77.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="74" y="404" width="1" height="15" fill="rgb(212,180,53)"/><text x="77.00" y="414.50"></text></g><g><title>0x7fccd6158dc9 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="80" y="356" width="1" height="15" fill="rgb(236,38,27)"/><text x="83.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="81" y="356" width="1" height="15" fill="rgb(254,198,4)"/><text x="84.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="81" y="372" width="1" height="15" fill="rgb(207,165,4)"/><text x="84.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="81" y="388" width="1" height="15" fill="rgb(232,122,44)"/><text x="84.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="81" y="404" width="1" height="15" fill="rgb(214,185,0)"/><text x="84.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="81" y="420" width="1" height="15" fill="rgb(248,139,3)"/><text x="84.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="81" y="436" width="1" height="15" fill="rgb(252,215,19)"/><text x="84.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="81" y="452" width="1" height="15" fill="rgb(253,39,42)"/><text x="84.00" y="462.50"></text></g><g><title>onnxruntime::GatherElements::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.64%)</title><rect x="75" y="340" width="8" height="15" fill="rgb(233,178,16)"/><text x="78.00" y="350.50"></text></g><g><title>onnxruntime::parse_and_validate_indices_tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="82" y="356" width="1" height="15" fill="rgb(241,68,19)"/><text x="85.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="83" y="340" width="1" height="15" fill="rgb(218,227,52)"/><text x="86.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.18%)</title><rect x="86" y="372" width="2" height="15" fill="rgb(241,143,53)"/><text x="89.00" y="382.50"></text></g><g><title>onnxruntime::Less&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.46%)</title><rect x="84" y="340" width="5" height="15" fill="rgb(236,186,51)"/><text x="87.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.46%)</title><rect x="84" y="356" width="5" height="15" fill="rgb(213,157,47)"/><text x="87.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="88" y="372" width="1" height="15" fill="rgb(234,229,11)"/><text x="91.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="88" y="388" width="1" height="15" fill="rgb(225,122,53)"/><text x="91.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="88" y="404" width="1" height="15" fill="rgb(230,105,9)"/><text x="91.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="88" y="420" width="1" height="15" fill="rgb(210,86,25)"/><text x="91.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="88" y="436" width="1" height="15" fill="rgb(220,13,50)"/><text x="91.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="88" y="452" width="1" height="15" fill="rgb(249,123,16)"/><text x="91.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="88" y="468" width="1" height="15" fill="rgb(244,44,6)"/><text x="91.00" y="478.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.09%)</title><rect x="88" y="484" width="1" height="15" fill="rgb(209,159,46)"/><text x="91.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="88" y="500" width="1" height="15" fill="rgb(215,219,50)"/><text x="91.00" y="510.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.18%)</title><rect x="89" y="340" width="3" height="15" fill="rgb(245,184,4)"/><text x="92.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.18%)</title><rect x="89" y="356" width="3" height="15" fill="rgb(231,18,17)"/><text x="92.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.18%)</title><rect x="89" y="372" width="3" height="15" fill="rgb(253,41,7)"/><text x="92.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.18%)</title><rect x="89" y="388" width="3" height="15" fill="rgb(244,91,47)"/><text x="92.00" y="398.50"></text></g><g><title>0x7fccd6138945 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="130" y="388" width="1" height="15" fill="rgb(229,142,31)"/><text x="133.00" y="398.50"></text></g><g><title>0x7fccd613899b (libc-2.29.so) (1 samples, 0.09%)</title><rect x="131" y="388" width="2" height="15" fill="rgb(220,27,18)"/><text x="134.00" y="398.50"></text></g><g><title>0x7fccd6138bd4 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="133" y="388" width="1" height="15" fill="rgb(233,191,39)"/><text x="136.00" y="398.50"></text></g><g><title>0x7fccd630ae40 (libm-2.29.so) (1 samples, 0.09%)</title><rect x="134" y="388" width="1" height="15" fill="rgb(226,226,11)"/><text x="137.00" y="398.50"></text></g><g><title>0x7fccd630ae91 (libm-2.29.so) (1 samples, 0.09%)</title><rect x="135" y="388" width="1" height="15" fill="rgb(241,152,21)"/><text x="138.00" y="398.50"></text></g><g><title>0x7fccd630aea2 (libm-2.29.so) (1 samples, 0.09%)</title><rect x="136" y="388" width="1" height="15" fill="rgb(216,210,7)"/><text x="139.00" y="398.50"></text></g><g><title>0x7fccd630aece (libm-2.29.so) (1 samples, 0.09%)</title><rect x="137" y="388" width="1" height="15" fill="rgb(245,3,42)"/><text x="140.00" y="398.50"></text></g><g><title>0x7fccd630aed2 (libm-2.29.so) (2 samples, 0.18%)</title><rect x="138" y="388" width="2" height="15" fill="rgb(254,40,49)"/><text x="141.00" y="398.50"></text></g><g><title>0x7fccd630aeee (libm-2.29.so) (1 samples, 0.09%)</title><rect x="140" y="388" width="1" height="15" fill="rgb(221,85,42)"/><text x="143.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.09%)</title><rect x="141" y="388" width="1" height="15" fill="rgb(243,203,39)"/><text x="144.00" y="398.50"></text></g><g><title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, long, std::pair&lt;float, long&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::GreaterValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.55%)</title><rect x="142" y="388" width="7" height="15" fill="rgb(209,78,36)"/><text x="145.00" y="398.50"></text></g><g><title>0x7fccd613891e (libc-2.29.so) (1 samples, 0.09%)</title><rect x="160" y="404" width="1" height="15" fill="rgb(219,163,32)"/><text x="163.00" y="414.50"></text></g><g><title>0x7fccd613892c (libc-2.29.so) (1 samples, 0.09%)</title><rect x="161" y="404" width="1" height="15" fill="rgb(213,40,42)"/><text x="164.00" y="414.50"></text></g><g><title>0x7fccd6138945 (libc-2.29.so) (2 samples, 0.18%)</title><rect x="162" y="404" width="2" height="15" fill="rgb(232,172,25)"/><text x="165.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.18%)</title><rect x="164" y="404" width="2" height="15" fill="rgb(248,203,52)"/><text x="167.00" y="414.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.09%)</title><rect x="166" y="404" width="1" height="15" fill="rgb(219,71,25)"/><text x="169.00" y="414.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (73 samples, 6.68%)</title><rect x="92" y="340" width="78" height="15" fill="rgb(249,29,24)"/><text x="95.00" y="350.50">onnxrunti..</text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (73 samples, 6.68%)</title><rect x="92" y="356" width="78" height="15" fill="rgb(238,83,20)"/><text x="95.00" y="366.50">onnxrunti..</text></g><g><title>onnxruntime::extract_top_k_elements&lt;true, true, onnxruntime::GreaterValueCmp&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (73 samples, 6.68%)</title><rect x="92" y="372" width="78" height="15" fill="rgb(243,38,49)"/><text x="95.00" y="382.50">onnxrunti..</text></g><g><title>std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt;::_M_emplace_back_aux&lt;std::pair&lt;float, long&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 1.83%)</title><rect x="149" y="388" width="21" height="15" fill="rgb(228,24,17)"/><text x="152.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.27%)</title><rect x="167" y="404" width="3" height="15" fill="rgb(227,93,36)"/><text x="170.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.27%)</title><rect x="167" y="420" width="3" height="15" fill="rgb(218,95,40)"/><text x="170.00" y="430.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="170" y="340" width="1" height="15" fill="rgb(212,18,39)"/><text x="173.00" y="350.50"></text></g><g><title>0x7fccc5c057a0 (libstdc++.so.6.0.28) (2 samples, 0.18%)</title><rect x="214" y="356" width="2" height="15" fill="rgb(209,37,40)"/><text x="217.00" y="366.50"></text></g><g><title>0x7fccd6138906 (libc-2.29.so) (2 samples, 0.18%)</title><rect x="216" y="356" width="2" height="15" fill="rgb(205,59,23)"/><text x="219.00" y="366.50"></text></g><g><title>0x7fccd613890a (libc-2.29.so) (1 samples, 0.09%)</title><rect x="218" y="356" width="1" height="15" fill="rgb(220,189,7)"/><text x="221.00" y="366.50"></text></g><g><title>0x7fccd613890e (libc-2.29.so) (3 samples, 0.27%)</title><rect x="219" y="356" width="3" height="15" fill="rgb(218,127,27)"/><text x="222.00" y="366.50"></text></g><g><title>0x7fccd613891c (libc-2.29.so) (1 samples, 0.09%)</title><rect x="222" y="356" width="1" height="15" fill="rgb(223,127,51)"/><text x="225.00" y="366.50"></text></g><g><title>0x7fccd613891e (libc-2.29.so) (2 samples, 0.18%)</title><rect x="223" y="356" width="2" height="15" fill="rgb(232,47,23)"/><text x="226.00" y="366.50"></text></g><g><title>0x7fccd6138929 (libc-2.29.so) (2 samples, 0.18%)</title><rect x="225" y="356" width="3" height="15" fill="rgb(209,3,15)"/><text x="228.00" y="366.50"></text></g><g><title>0x7fccd613892c (libc-2.29.so) (1 samples, 0.09%)</title><rect x="228" y="356" width="1" height="15" fill="rgb(216,93,42)"/><text x="231.00" y="366.50"></text></g><g><title>0x7fccd613892f (libc-2.29.so) (1 samples, 0.09%)</title><rect x="229" y="356" width="1" height="15" fill="rgb(212,217,35)"/><text x="232.00" y="366.50"></text></g><g><title>0x7fccd6138938 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="230" y="356" width="1" height="15" fill="rgb(223,56,45)"/><text x="233.00" y="366.50"></text></g><g><title>0x7fccd613893b (libc-2.29.so) (2 samples, 0.18%)</title><rect x="231" y="356" width="2" height="15" fill="rgb(214,191,12)"/><text x="234.00" y="366.50"></text></g><g><title>0x7fccd613895e (libc-2.29.so) (1 samples, 0.09%)</title><rect x="233" y="356" width="1" height="15" fill="rgb(253,4,18)"/><text x="236.00" y="366.50"></text></g><g><title>0x7fccd6138965 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="234" y="356" width="1" height="15" fill="rgb(215,18,40)"/><text x="237.00" y="366.50"></text></g><g><title>0x7fccd613896a (libc-2.29.so) (1 samples, 0.09%)</title><rect x="235" y="356" width="1" height="15" fill="rgb(235,114,3)"/><text x="238.00" y="366.50"></text></g><g><title>0x7fccd613897c (libc-2.29.so) (1 samples, 0.09%)</title><rect x="236" y="356" width="1" height="15" fill="rgb(211,207,36)"/><text x="239.00" y="366.50"></text></g><g><title>0x7fccd6138991 (libc-2.29.so) (10 samples, 0.91%)</title><rect x="237" y="356" width="11" height="15" fill="rgb(251,110,15)"/><text x="240.00" y="366.50"></text></g><g><title>0x7fccd6138998 (libc-2.29.so) (2 samples, 0.18%)</title><rect x="248" y="356" width="2" height="15" fill="rgb(215,82,10)"/><text x="251.00" y="366.50"></text></g><g><title>0x7fccd6138a38 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="250" y="356" width="1" height="15" fill="rgb(235,129,12)"/><text x="253.00" y="366.50"></text></g><g><title>0x7fccd6138a55 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="251" y="356" width="1" height="15" fill="rgb(212,216,37)"/><text x="254.00" y="366.50"></text></g><g><title>0x7fccd6138bc0 (libc-2.29.so) (2 samples, 0.18%)</title><rect x="252" y="356" width="3" height="15" fill="rgb(218,156,2)"/><text x="255.00" y="366.50"></text></g><g><title>0x7fccd6138bd8 (libc-2.29.so) (2 samples, 0.18%)</title><rect x="255" y="356" width="2" height="15" fill="rgb(209,102,2)"/><text x="258.00" y="366.50"></text></g><g><title>0x7fccd6138be8 (libc-2.29.so) (2 samples, 0.18%)</title><rect x="257" y="356" width="2" height="15" fill="rgb(232,206,29)"/><text x="260.00" y="366.50"></text></g><g><title>0x7fccd6159120 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="259" y="356" width="1" height="15" fill="rgb(254,3,35)"/><text x="262.00" y="366.50"></text></g><g><title>0x7fccd615912b (libc-2.29.so) (1 samples, 0.09%)</title><rect x="260" y="356" width="1" height="15" fill="rgb(207,37,12)"/><text x="263.00" y="366.50"></text></g><g><title>0x7fccd6159144 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="261" y="356" width="1" height="15" fill="rgb(254,23,50)"/><text x="264.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (14 samples, 1.28%)</title><rect x="262" y="356" width="15" height="15" fill="rgb(209,160,3)"/><text x="265.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (10 samples, 0.91%)</title><rect x="375" y="388" width="11" height="15" fill="rgb(250,84,53)"/><text x="378.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (9 samples, 0.82%)</title><rect x="377" y="404" width="9" height="15" fill="rgb(234,47,45)"/><text x="380.00" y="414.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.01%)</title><rect x="401" y="404" width="12" height="15" fill="rgb(247,176,46)"/><text x="404.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (6 samples, 0.55%)</title><rect x="407" y="420" width="6" height="15" fill="rgb(219,51,52)"/><text x="410.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.46%)</title><rect x="408" y="436" width="5" height="15" fill="rgb(210,4,6)"/><text x="411.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (184 samples, 16.83%)</title><rect x="277" y="356" width="199" height="15" fill="rgb(254,154,53)"/><text x="280.00" y="366.50">onnxruntime::ml::TreeEnsem..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (106 samples, 9.70%)</title><rect x="361" y="372" width="115" height="15" fill="rgb(231,124,15)"/><text x="364.00" y="382.50">std::_Hashtabl..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (83 samples, 7.59%)</title><rect x="386" y="388" width="90" height="15" fill="rgb(233,68,49)"/><text x="389.00" y="398.50">std::_Hash..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (58 samples, 5.31%)</title><rect x="413" y="404" width="63" height="15" fill="rgb(228,111,15)"/><text x="416.00" y="414.50">std::_..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (30 samples, 2.74%)</title><rect x="443" y="420" width="33" height="15" fill="rgb(230,215,24)"/><text x="446.00" y="430.50">st..</text></g><g><title>0x7fccd6158d97 (libc-2.29.so) (2 samples, 0.18%)</title><rect x="483" y="372" width="3" height="15" fill="rgb(225,151,47)"/><text x="486.00" y="382.50"></text></g><g><title>0x7fccd6158dbf (libc-2.29.so) (2 samples, 0.18%)</title><rect x="486" y="372" width="2" height="15" fill="rgb(234,165,22)"/><text x="489.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.19%)</title><rect x="476" y="356" width="14" height="15" fill="rgb(230,126,0)"/><text x="479.00" y="366.50"></text></g><g><title>0x7fccd6158dc9 (libc-2.29.so) (2 samples, 0.18%)</title><rect x="488" y="372" width="2" height="15" fill="rgb(221,156,36)"/><text x="491.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (4 samples, 0.37%)</title><rect x="490" y="356" width="4" height="15" fill="rgb(218,206,19)"/><text x="493.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 1.65%)</title><rect x="494" y="356" width="20" height="15" fill="rgb(214,163,41)"/><text x="497.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (456 samples, 41.72%)</title><rect x="39" y="260" width="492" height="15" fill="rgb(239,113,7)"/><text x="42.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_py..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (456 samples, 41.72%)</title><rect x="39" y="276" width="492" height="15" fill="rgb(239,120,19)"/><text x="42.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_py..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (456 samples, 41.72%)</title><rect x="39" y="292" width="492" height="15" fill="rgb(243,161,19)"/><text x="42.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybi..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (456 samples, 41.72%)</title><rect x="39" y="308" width="492" height="15" fill="rgb(225,205,18)"/><text x="42.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (456 samples, 41.72%)</title><rect x="39" y="324" width="492" height="15" fill="rgb(231,131,44)"/><text x="42.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxrunt..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (333 samples, 30.47%)</title><rect x="171" y="340" width="360" height="15" fill="rgb(205,45,19)"/><text x="174.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::C..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 1.46%)</title><rect x="514" y="356" width="17" height="15" fill="rgb(230,84,12)"/><text x="517.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (13 samples, 1.19%)</title><rect x="517" y="372" width="14" height="15" fill="rgb(243,176,10)"/><text x="520.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (10 samples, 0.91%)</title><rect x="520" y="388" width="11" height="15" fill="rgb(220,195,43)"/><text x="523.00" y="398.50"></text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py) (460 samples, 42.09%)</title><rect x="35" y="68" width="497" height="15" fill="rgb(220,226,3)"/><text x="38.00" y="78.50">profile_ort (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py) (460 samples, 42.09%)</title><rect x="35" y="84" width="497" height="15" fill="rgb(243,41,9)"/><text x="38.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py) (460 samples, 42.09%)</title><rect x="35" y="100" width="497" height="15" fill="rgb(208,100,26)"/><text x="38.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (460 samples, 42.09%)</title><rect x="35" y="116" width="497" height="15" fill="rgb(222,127,31)"/><text x="38.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (460 samples, 42.09%)</title><rect x="35" y="132" width="497" height="15" fill="rgb(214,128,23)"/><text x="38.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (460 samples, 42.09%)</title><rect x="35" y="148" width="497" height="15" fill="rgb(219,2,18)"/><text x="38.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (460 samples, 42.09%)</title><rect x="35" y="164" width="497" height="15" fill="rgb(242,44,16)"/><text x="38.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (459 samples, 41.99%)</title><rect x="36" y="180" width="496" height="15" fill="rgb(205,152,3)"/><text x="39.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (459 samples, 41.99%)</title><rect x="36" y="196" width="496" height="15" fill="rgb(207,140,2)"/><text x="39.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (457 samples, 41.81%)</title><rect x="39" y="212" width="493" height="15" fill="rgb(229,101,30)"/><text x="42.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (457 samples, 41.81%)</title><rect x="39" y="228" width="493" height="15" fill="rgb(212,48,54)"/><text x="42.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObj..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (457 samples, 41.81%)</title><rect x="39" y="244" width="493" height="15" fill="rgb(249,186,21)"/><text x="42.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(o..</text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="531" y="260" width="1" height="15" fill="rgb(208,14,44)"/><text x="534.00" y="270.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.09%)</title><rect x="553" y="196" width="1" height="15" fill="rgb(211,176,7)"/><text x="556.00" y="206.50"></text></g><g><title>LONG_getitem (arraytypes.c.src) (1 samples, 0.09%)</title><rect x="561" y="260" width="1" height="15" fill="rgb(249,105,14)"/><text x="564.00" y="270.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="562" y="260" width="1" height="15" fill="rgb(230,176,8)"/><text x="565.00" y="270.50"></text></g><g><title>0x7fccd6159103 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="562" y="276" width="1" height="15" fill="rgb(215,114,43)"/><text x="565.00" y="286.50"></text></g><g><title>PyArray_ToList (convert.c) (6 samples, 0.55%)</title><rect x="560" y="228" width="7" height="15" fill="rgb(207,84,39)"/><text x="563.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (6 samples, 0.55%)</title><rect x="560" y="244" width="7" height="15" fill="rgb(207,12,54)"/><text x="563.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c) (3 samples, 0.27%)</title><rect x="563" y="260" width="4" height="15" fill="rgb(236,161,30)"/><text x="566.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="567" y="228" width="1" height="15" fill="rgb(229,127,20)"/><text x="570.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="568" y="292" width="1" height="15" fill="rgb(254,35,44)"/><text x="571.00" y="302.50"></text></g><g><title>array_ravel (methods.c) (2 samples, 0.18%)</title><rect x="568" y="228" width="2" height="15" fill="rgb(254,78,4)"/><text x="571.00" y="238.50"></text></g><g><title>PyArray_Ravel (shape.c) (2 samples, 0.18%)</title><rect x="568" y="244" width="2" height="15" fill="rgb(223,92,5)"/><text x="571.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.18%)</title><rect x="568" y="260" width="2" height="15" fill="rgb(230,145,39)"/><text x="571.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.18%)</title><rect x="568" y="276" width="2" height="15" fill="rgb(233,137,5)"/><text x="571.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.09%)</title><rect x="569" y="292" width="1" height="15" fill="rgb(213,139,27)"/><text x="572.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="569" y="308" width="1" height="15" fill="rgb(217,218,38)"/><text x="572.00" y="318.50"></text></g><g><title>0x7fccd6138902 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="570" y="244" width="1" height="15" fill="rgb(211,192,12)"/><text x="573.00" y="254.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (1 samples, 0.09%)</title><rect x="571" y="244" width="1" height="15" fill="rgb(238,61,29)"/><text x="574.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.09%)</title><rect x="571" y="260" width="1" height="15" fill="rgb(219,202,54)"/><text x="574.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.09%)</title><rect x="572" y="260" width="1" height="15" fill="rgb(224,18,25)"/><text x="575.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.09%)</title><rect x="572" y="276" width="1" height="15" fill="rgb(224,32,33)"/><text x="575.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (1 samples, 0.09%)</title><rect x="573" y="260" width="1" height="15" fill="rgb(211,25,21)"/><text x="576.00" y="270.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (1 samples, 0.09%)</title><rect x="573" y="276" width="1" height="15" fill="rgb(213,22,34)"/><text x="576.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.09%)</title><rect x="573" y="292" width="1" height="15" fill="rgb(215,186,4)"/><text x="576.00" y="302.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (3 samples, 0.27%)</title><rect x="572" y="244" width="3" height="15" fill="rgb(239,65,34)"/><text x="575.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="574" y="260" width="1" height="15" fill="rgb(215,211,33)"/><text x="577.00" y="270.50"></text></g><g><title>0x7fccd6139dd6 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="574" y="276" width="1" height="15" fill="rgb(229,22,30)"/><text x="577.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="575" y="244" width="1" height="15" fill="rgb(207,4,53)"/><text x="578.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.09%)</title><rect x="575" y="260" width="1" height="15" fill="rgb(230,22,47)"/><text x="578.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.09%)</title><rect x="575" y="276" width="1" height="15" fill="rgb(240,16,12)"/><text x="578.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (5 samples, 0.46%)</title><rect x="576" y="244" width="6" height="15" fill="rgb(212,77,0)"/><text x="579.00" y="254.50"></text></g><g><title>check_and_adjust_index (common.h) (1 samples, 0.09%)</title><rect x="581" y="260" width="1" height="15" fill="rgb(230,57,20)"/><text x="584.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (31 samples, 2.84%)</title><rect x="583" y="276" width="33" height="15" fill="rgb(250,135,45)"/><text x="586.00" y="286.50">Py..</text></g><g><title>setArrayFromSequence (ctors.c) (31 samples, 2.84%)</title><rect x="583" y="292" width="33" height="15" fill="rgb(223,192,50)"/><text x="586.00" y="302.50">se..</text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (27 samples, 2.47%)</title><rect x="587" y="308" width="29" height="15" fill="rgb(211,218,27)"/><text x="590.00" y="318.50">Py..</text></g><g><title>LONG_setitem (arraytypes.c.src) (26 samples, 2.38%)</title><rect x="588" y="324" width="28" height="15" fill="rgb(241,200,34)"/><text x="591.00" y="334.50">L..</text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (15 samples, 1.37%)</title><rect x="600" y="340" width="16" height="15" fill="rgb(216,118,37)"/><text x="603.00" y="350.50"></text></g><g><title>0x7fccd535b0a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="651" y="340" width="1" height="15" fill="rgb(247,18,30)"/><text x="654.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (9 samples, 0.82%)</title><rect x="652" y="340" width="10" height="15" fill="rgb(245,199,19)"/><text x="655.00" y="350.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c) (3 samples, 0.27%)</title><rect x="658" y="356" width="4" height="15" fill="rgb(231,173,30)"/><text x="661.00" y="366.50"></text></g><g><title>0x7fccd535a950 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="684" y="356" width="1" height="15" fill="rgb(253,146,48)"/><text x="687.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (69 samples, 6.31%)</title><rect x="616" y="292" width="75" height="15" fill="rgb(214,6,13)"/><text x="619.00" y="302.50">PyArray_..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (69 samples, 6.31%)</title><rect x="616" y="308" width="75" height="15" fill="rgb(232,102,47)"/><text x="619.00" y="318.50">PyArray_..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (62 samples, 5.67%)</title><rect x="624" y="324" width="67" height="15" fill="rgb(254,8,11)"/><text x="627.00" y="334.50">PyArray..</text></g><g><title>_array_find_python_scalar_type (common.c) (27 samples, 2.47%)</title><rect x="662" y="340" width="29" height="15" fill="rgb(208,63,24)"/><text x="665.00" y="350.50">_a..</text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (5 samples, 0.46%)</title><rect x="685" y="356" width="6" height="15" fill="rgb(225,212,52)"/><text x="688.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c) (151 samples, 13.82%)</title><rect x="582" y="260" width="163" height="15" fill="rgb(250,146,15)"/><text x="585.00" y="270.50">PyArray_FromAny (ctor..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (119 samples, 10.89%)</title><rect x="616" y="276" width="129" height="15" fill="rgb(232,69,43)"/><text x="619.00" y="286.50">PyArray_GetArray..</text></g><g><title>discover_dimensions (ctors.c) (50 samples, 4.57%)</title><rect x="691" y="292" width="54" height="15" fill="rgb(217,164,35)"/><text x="694.00" y="302.50">disco..</text></g><g><title>discover_dimensions (ctors.c) (43 samples, 3.93%)</title><rect x="698" y="308" width="47" height="15" fill="rgb(252,227,14)"/><text x="701.00" y="318.50">disc..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (173 samples, 15.83%)</title><rect x="559" y="212" width="187" height="15" fill="rgb(254,92,46)"/><text x="562.00" y="222.50">_run (mlprodict/onnxrt/o..</text></g><g><title>array_subscript (mapping.c) (163 samples, 14.91%)</title><rect x="570" y="228" width="176" height="15" fill="rgb(252,129,39)"/><text x="573.00" y="238.50">array_subscript (mappi..</text></g><g><title>prepare_index (mapping.c) (152 samples, 13.91%)</title><rect x="582" y="244" width="164" height="15" fill="rgb(240,195,25)"/><text x="585.00" y="254.50">prepare_index (mappin..</text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.09%)</title><rect x="745" y="260" width="1" height="15" fill="rgb(221,127,42)"/><text x="748.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.09%)</title><rect x="745" y="276" width="1" height="15" fill="rgb(220,157,33)"/><text x="748.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (5 samples, 0.46%)</title><rect x="746" y="212" width="5" height="15" fill="rgb(206,100,13)"/><text x="749.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (5 samples, 0.46%)</title><rect x="746" y="228" width="5" height="15" fill="rgb(231,87,12)"/><text x="749.00" y="238.50"></text></g><g><title>array_astype (methods.c) (5 samples, 0.46%)</title><rect x="746" y="244" width="5" height="15" fill="rgb(244,208,0)"/><text x="749.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (5 samples, 0.46%)</title><rect x="746" y="260" width="5" height="15" fill="rgb(241,32,52)"/><text x="749.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (5 samples, 0.46%)</title><rect x="746" y="276" width="5" height="15" fill="rgb(233,56,4)"/><text x="749.00" y="286.50"></text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src) (4 samples, 0.37%)</title><rect x="747" y="292" width="4" height="15" fill="rgb(239,165,44)"/><text x="750.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_concat.py) (1 samples, 0.09%)</title><rect x="751" y="212" width="1" height="15" fill="rgb(241,162,3)"/><text x="754.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (mlprodict/onnxrt/ops_cpu/op_concat.py) (1 samples, 0.09%)</title><rect x="751" y="228" width="1" height="15" fill="rgb(210,183,51)"/><text x="754.00" y="238.50"></text></g><g><title>_preprocess (mlprodict/onnxrt/ops_cpu/op_concat.py) (1 samples, 0.09%)</title><rect x="751" y="244" width="1" height="15" fill="rgb(205,194,39)"/><text x="754.00" y="254.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.09%)</title><rect x="751" y="260" width="1" height="15" fill="rgb(241,34,52)"/><text x="754.00" y="270.50"></text></g><g><title>0x7fccd535b800 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="751" y="276" width="1" height="15" fill="rgb(238,217,51)"/><text x="754.00" y="286.50"></text></g><g><title>FLOAT_add (loops.c.src) (4 samples, 0.37%)</title><rect x="756" y="388" width="4" height="15" fill="rgb(218,47,23)"/><text x="759.00" y="398.50"></text></g><g><title>PyArray_CumSum (calculation.c) (7 samples, 0.64%)</title><rect x="754" y="308" width="8" height="15" fill="rgb(246,201,53)"/><text x="757.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (7 samples, 0.64%)</title><rect x="754" y="324" width="8" height="15" fill="rgb(248,22,49)"/><text x="757.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (6 samples, 0.55%)</title><rect x="756" y="340" width="6" height="15" fill="rgb(249,223,25)"/><text x="759.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (6 samples, 0.55%)</title><rect x="756" y="356" width="6" height="15" fill="rgb(243,204,49)"/><text x="759.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (6 samples, 0.55%)</title><rect x="756" y="372" width="6" height="15" fill="rgb(229,147,49)"/><text x="759.00" y="382.50"></text></g><g><title>npyiter_iternext_itflags0_dims1_iters2 (nditer_templ.c.src) (2 samples, 0.18%)</title><rect x="760" y="388" width="2" height="15" fill="rgb(229,208,45)"/><text x="763.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py) (11 samples, 1.01%)</title><rect x="752" y="212" width="12" height="15" fill="rgb(218,182,31)"/><text x="755.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (10 samples, 0.91%)</title><rect x="753" y="228" width="11" height="15" fill="rgb(227,207,25)"/><text x="756.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (10 samples, 0.91%)</title><rect x="753" y="244" width="11" height="15" fill="rgb(217,24,53)"/><text x="756.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (9 samples, 0.82%)</title><rect x="754" y="260" width="10" height="15" fill="rgb(217,227,29)"/><text x="757.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (9 samples, 0.82%)</title><rect x="754" y="276" width="10" height="15" fill="rgb(216,119,47)"/><text x="757.00" y="286.50"></text></g><g><title>array_cumsum (methods.c) (9 samples, 0.82%)</title><rect x="754" y="292" width="10" height="15" fill="rgb(221,140,47)"/><text x="757.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.18%)</title><rect x="762" y="308" width="2" height="15" fill="rgb(237,100,28)"/><text x="765.00" y="318.50"></text></g><g><title>_choose_dispatcher (numpy/core/fromnumeric.py) (2 samples, 0.18%)</title><rect x="768" y="260" width="3" height="15" fill="rgb(241,73,9)"/><text x="771.00" y="270.50"></text></g><g><title>array_item (mapping.c) (2 samples, 0.18%)</title><rect x="768" y="276" width="3" height="15" fill="rgb(253,226,38)"/><text x="771.00" y="286.50"></text></g><g><title>array_item_asarray (mapping.c) (2 samples, 0.18%)</title><rect x="768" y="292" width="3" height="15" fill="rgb(216,225,14)"/><text x="771.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c) (2 samples, 0.18%)</title><rect x="768" y="308" width="3" height="15" fill="rgb(246,190,2)"/><text x="771.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (2 samples, 0.18%)</title><rect x="768" y="324" width="3" height="15" fill="rgb(251,87,35)"/><text x="771.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.18%)</title><rect x="768" y="340" width="3" height="15" fill="rgb(235,119,13)"/><text x="771.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="770" y="356" width="1" height="15" fill="rgb(235,227,43)"/><text x="773.00" y="366.50"></text></g><g><title>0x7fccd6158d97 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="794" y="324" width="1" height="15" fill="rgb(248,158,26)"/><text x="797.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.09%)</title><rect x="795" y="388" width="2" height="15" fill="rgb(216,202,51)"/><text x="798.00" y="398.50"></text></g><g><title>PyArray_NewCopy (convert.c) (2 samples, 0.18%)</title><rect x="795" y="340" width="3" height="15" fill="rgb(232,95,0)"/><text x="798.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.18%)</title><rect x="795" y="356" width="3" height="15" fill="rgb(228,203,0)"/><text x="798.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.18%)</title><rect x="795" y="372" width="3" height="15" fill="rgb(233,78,28)"/><text x="798.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size4 (lowlevel_strided_loops.c.src) (1 samples, 0.09%)</title><rect x="797" y="388" width="1" height="15" fill="rgb(249,221,52)"/><text x="800.00" y="398.50"></text></g><g><title>PyArray_ConvertToCommonType (convert_datatype.c) (3 samples, 0.27%)</title><rect x="795" y="324" width="4" height="15" fill="rgb(218,148,21)"/><text x="798.00" y="334.50"></text></g><g><title>array_length (mapping.c) (1 samples, 0.09%)</title><rect x="798" y="340" width="1" height="15" fill="rgb(208,203,18)"/><text x="801.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.09%)</title><rect x="799" y="324" width="1" height="15" fill="rgb(223,168,26)"/><text x="802.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.09%)</title><rect x="799" y="340" width="1" height="15" fill="rgb(207,0,11)"/><text x="802.00" y="350.50"></text></g><g><title>choose (&lt;__array_function__ internals&gt;) (31 samples, 2.84%)</title><rect x="767" y="228" width="34" height="15" fill="rgb(228,195,31)"/><text x="770.00" y="238.50">ch..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (31 samples, 2.84%)</title><rect x="767" y="244" width="34" height="15" fill="rgb(245,93,44)"/><text x="770.00" y="254.50">ar..</text></g><g><title>choose (numpy/core/fromnumeric.py) (28 samples, 2.56%)</title><rect x="771" y="260" width="30" height="15" fill="rgb(221,96,45)"/><text x="774.00" y="270.50">ch..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (27 samples, 2.47%)</title><rect x="772" y="276" width="29" height="15" fill="rgb(240,71,39)"/><text x="775.00" y="286.50">_w..</text></g><g><title>array_choose (methods.c) (26 samples, 2.38%)</title><rect x="773" y="292" width="28" height="15" fill="rgb(244,176,44)"/><text x="776.00" y="302.50">a..</text></g><g><title>PyArray_Choose (item_selection.c) (26 samples, 2.38%)</title><rect x="773" y="308" width="28" height="15" fill="rgb(230,112,31)"/><text x="776.00" y="318.50">P..</text></g><g><title>PyArray_MultiIterFromObjects (iterators.c) (1 samples, 0.09%)</title><rect x="800" y="324" width="1" height="15" fill="rgb(209,168,35)"/><text x="803.00" y="334.50"></text></g><g><title>multiiter_new_impl (iterators.c) (1 samples, 0.09%)</title><rect x="800" y="340" width="1" height="15" fill="rgb(223,163,0)"/><text x="803.00" y="350.50"></text></g><g><title>PyArray_IterNew (iterators.c) (1 samples, 0.09%)</title><rect x="800" y="356" width="1" height="15" fill="rgb(228,65,8)"/><text x="803.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="800" y="372" width="1" height="15" fill="rgb(212,229,3)"/><text x="803.00" y="382.50"></text></g><g><title>0x7fccd613a2f8 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="800" y="388" width="1" height="15" fill="rgb(227,174,42)"/><text x="803.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py) (36 samples, 3.29%)</title><rect x="764" y="212" width="39" height="15" fill="rgb(218,191,4)"/><text x="767.00" y="222.50">_ru..</text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;) (2 samples, 0.18%)</title><rect x="801" y="228" width="2" height="15" fill="rgb(215,16,23)"/><text x="804.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.09%)</title><rect x="802" y="244" width="1" height="15" fill="rgb(240,77,21)"/><text x="805.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py) (1 samples, 0.09%)</title><rect x="802" y="260" width="1" height="15" fill="rgb(223,193,20)"/><text x="805.00" y="270.50"></text></g><g><title>_mm_loadu_ps (xmmintrin.h) (1 samples, 0.09%)</title><rect x="803" y="340" width="1" height="15" fill="rgb(253,200,34)"/><text x="806.00" y="350.50"></text></g><g><title>FLOAT_less (loops.c.src) (2 samples, 0.18%)</title><rect x="803" y="292" width="2" height="15" fill="rgb(227,156,5)"/><text x="806.00" y="302.50"></text></g><g><title>run_binary_simd_less_FLOAT (simd.inc.src) (2 samples, 0.18%)</title><rect x="803" y="308" width="2" height="15" fill="rgb(210,57,46)"/><text x="806.00" y="318.50"></text></g><g><title>sse2_binary_less_FLOAT (simd.inc.src) (2 samples, 0.18%)</title><rect x="803" y="324" width="2" height="15" fill="rgb(249,41,2)"/><text x="806.00" y="334.50"></text></g><g><title>sse2_compress4_to_byte_FLOAT (simd.inc.src) (1 samples, 0.09%)</title><rect x="804" y="340" width="1" height="15" fill="rgb(223,194,7)"/><text x="807.00" y="350.50"></text></g><g><title>_mm_storeu_si128 (emmintrin.h) (1 samples, 0.09%)</title><rect x="804" y="356" width="1" height="15" fill="rgb(226,137,32)"/><text x="807.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.09%)</title><rect x="805" y="292" width="1" height="15" fill="rgb(217,30,49)"/><text x="808.00" y="302.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.09%)</title><rect x="805" y="308" width="1" height="15" fill="rgb(221,225,39)"/><text x="808.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_less.py) (5 samples, 0.46%)</title><rect x="803" y="212" width="5" height="15" fill="rgb(227,202,18)"/><text x="806.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.46%)</title><rect x="803" y="228" width="5" height="15" fill="rgb(231,165,34)"/><text x="806.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.46%)</title><rect x="803" y="244" width="5" height="15" fill="rgb(250,70,23)"/><text x="806.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 0.46%)</title><rect x="803" y="260" width="5" height="15" fill="rgb(237,122,14)"/><text x="806.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.46%)</title><rect x="803" y="276" width="5" height="15" fill="rgb(215,168,39)"/><text x="806.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.18%)</title><rect x="806" y="292" width="2" height="15" fill="rgb(229,225,17)"/><text x="809.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.18%)</title><rect x="806" y="308" width="2" height="15" fill="rgb(244,174,5)"/><text x="809.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.09%)</title><rect x="807" y="324" width="1" height="15" fill="rgb(235,174,2)"/><text x="810.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.09%)</title><rect x="807" y="340" width="1" height="15" fill="rgb(237,211,1)"/><text x="810.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c) (8 samples, 0.73%)</title><rect x="813" y="356" width="8" height="15" fill="rgb(252,149,36)"/><text x="816.00" y="366.50"></text></g><g><title>aintroselect_float (selection.c.src) (2 samples, 0.18%)</title><rect x="819" y="372" width="2" height="15" fill="rgb(250,163,2)"/><text x="822.00" y="382.50"></text></g><g><title>FLOAT_LT (npysort_common.h) (1 samples, 0.09%)</title><rect x="820" y="388" width="1" height="15" fill="rgb(218,90,31)"/><text x="823.00" y="398.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (9 samples, 0.82%)</title><rect x="813" y="260" width="9" height="15" fill="rgb(207,180,6)"/><text x="816.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 0.82%)</title><rect x="813" y="276" width="9" height="15" fill="rgb(219,60,15)"/><text x="816.00" y="286.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py) (9 samples, 0.82%)</title><rect x="813" y="292" width="9" height="15" fill="rgb(229,27,28)"/><text x="816.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (9 samples, 0.82%)</title><rect x="813" y="308" width="9" height="15" fill="rgb(249,166,41)"/><text x="816.00" y="318.50"></text></g><g><title>array_argpartition (methods.c) (9 samples, 0.82%)</title><rect x="813" y="324" width="9" height="15" fill="rgb(233,27,31)"/><text x="816.00" y="334.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c) (9 samples, 0.82%)</title><rect x="813" y="340" width="9" height="15" fill="rgb(222,10,35)"/><text x="816.00" y="350.50"></text></g><g><title>partition_prep_kth_array (item_selection.c) (1 samples, 0.09%)</title><rect x="821" y="356" width="1" height="15" fill="rgb(218,79,54)"/><text x="824.00" y="366.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.09%)</title><rect x="821" y="372" width="1" height="15" fill="rgb(207,109,16)"/><text x="824.00" y="382.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.09%)</title><rect x="821" y="388" width="1" height="15" fill="rgb(223,221,36)"/><text x="824.00" y="398.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.09%)</title><rect x="821" y="404" width="1" height="15" fill="rgb(231,23,11)"/><text x="824.00" y="414.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.09%)</title><rect x="821" y="420" width="1" height="15" fill="rgb(213,25,19)"/><text x="824.00" y="430.50"></text></g><g><title>FLOAT_LT (npysort_common.h) (2 samples, 0.18%)</title><rect x="836" y="388" width="3" height="15" fill="rgb(211,41,35)"/><text x="839.00" y="398.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (16 samples, 1.46%)</title><rect x="822" y="260" width="18" height="15" fill="rgb(243,177,7)"/><text x="825.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (16 samples, 1.46%)</title><rect x="822" y="276" width="18" height="15" fill="rgb(207,119,36)"/><text x="825.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (16 samples, 1.46%)</title><rect x="822" y="292" width="18" height="15" fill="rgb(244,153,27)"/><text x="825.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (15 samples, 1.37%)</title><rect x="824" y="308" width="16" height="15" fill="rgb(207,184,40)"/><text x="827.00" y="318.50"></text></g><g><title>array_argsort (methods.c) (15 samples, 1.37%)</title><rect x="824" y="324" width="16" height="15" fill="rgb(223,3,10)"/><text x="827.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (15 samples, 1.37%)</title><rect x="824" y="340" width="16" height="15" fill="rgb(215,210,34)"/><text x="827.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c) (15 samples, 1.37%)</title><rect x="824" y="356" width="16" height="15" fill="rgb(206,83,14)"/><text x="827.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src) (8 samples, 0.73%)</title><rect x="831" y="372" width="9" height="15" fill="rgb(245,85,21)"/><text x="834.00" y="382.50"></text></g><g><title>npy_get_msb (npy_sort.h.src) (1 samples, 0.09%)</title><rect x="839" y="388" width="1" height="15" fill="rgb(240,102,17)"/><text x="842.00" y="398.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.09%)</title><rect x="846" y="292" width="1" height="15" fill="rgb(222,29,43)"/><text x="849.00" y="302.50"></text></g><g><title>npy_uint_alignment (array_assign.c) (1 samples, 0.09%)</title><rect x="846" y="308" width="1" height="15" fill="rgb(250,136,26)"/><text x="849.00" y="318.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c) (10 samples, 0.91%)</title><rect x="840" y="276" width="11" height="15" fill="rgb(254,145,34)"/><text x="843.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h) (3 samples, 0.27%)</title><rect x="847" y="292" width="4" height="15" fill="rgb(215,102,26)"/><text x="850.00" y="302.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (4 samples, 0.37%)</title><rect x="851" y="292" width="4" height="15" fill="rgb(242,179,31)"/><text x="854.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (4 samples, 0.37%)</title><rect x="851" y="308" width="4" height="15" fill="rgb(244,46,34)"/><text x="854.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.37%)</title><rect x="851" y="324" width="4" height="15" fill="rgb(221,97,46)"/><text x="854.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.37%)</title><rect x="851" y="340" width="4" height="15" fill="rgb(225,133,3)"/><text x="854.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.18%)</title><rect x="853" y="356" width="2" height="15" fill="rgb(248,155,9)"/><text x="856.00" y="366.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (5 samples, 0.46%)</title><rect x="851" y="276" width="5" height="15" fill="rgb(208,200,29)"/><text x="854.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.09%)</title><rect x="855" y="292" width="1" height="15" fill="rgb(241,172,2)"/><text x="858.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.09%)</title><rect x="855" y="308" width="1" height="15" fill="rgb(234,175,35)"/><text x="858.00" y="318.50"></text></g><g><title>array_subscript (mapping.c) (41 samples, 3.75%)</title><rect x="840" y="260" width="44" height="15" fill="rgb(208,114,12)"/><text x="843.00" y="270.50">arra..</text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (26 samples, 2.38%)</title><rect x="856" y="276" width="28" height="15" fill="rgb(218,15,5)"/><text x="859.00" y="286.50">m..</text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.09%)</title><rect x="883" y="292" width="1" height="15" fill="rgb(216,215,6)"/><text x="886.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (71 samples, 6.50%)</title><rect x="808" y="212" width="77" height="15" fill="rgb(245,112,38)"/><text x="811.00" y="222.50">_run (ml..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (71 samples, 6.50%)</title><rect x="808" y="228" width="77" height="15" fill="rgb(243,85,46)"/><text x="811.00" y="238.50">_common_..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py) (71 samples, 6.50%)</title><rect x="808" y="244" width="77" height="15" fill="rgb(250,116,12)"/><text x="811.00" y="254.50">topk_sor..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.09%)</title><rect x="884" y="260" width="1" height="15" fill="rgb(235,42,25)"/><text x="887.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.09%)</title><rect x="884" y="276" width="1" height="15" fill="rgb(242,153,30)"/><text x="887.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.09%)</title><rect x="884" y="292" width="1" height="15" fill="rgb(224,70,9)"/><text x="887.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.09%)</title><rect x="884" y="308" width="1" height="15" fill="rgb(211,71,11)"/><text x="887.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.09%)</title><rect x="884" y="324" width="1" height="15" fill="rgb(211,43,6)"/><text x="887.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="884" y="340" width="1" height="15" fill="rgb(246,133,17)"/><text x="887.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="884" y="356" width="1" height="15" fill="rgb(245,109,42)"/><text x="887.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.09%)</title><rect x="884" y="372" width="1" height="15" fill="rgb(235,148,0)"/><text x="887.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="884" y="388" width="1" height="15" fill="rgb(206,228,33)"/><text x="887.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="885" y="212" width="1" height="15" fill="rgb(247,53,2)"/><text x="888.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.09%)</title><rect x="885" y="228" width="1" height="15" fill="rgb(234,189,35)"/><text x="888.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.09%)</title><rect x="885" y="244" width="1" height="15" fill="rgb(242,67,5)"/><text x="888.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.09%)</title><rect x="887" y="260" width="1" height="15" fill="rgb(227,185,5)"/><text x="890.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.09%)</title><rect x="887" y="276" width="1" height="15" fill="rgb(220,6,41)"/><text x="890.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.09%)</title><rect x="887" y="292" width="1" height="15" fill="rgb(217,123,44)"/><text x="890.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (3 samples, 0.27%)</title><rect x="886" y="228" width="3" height="15" fill="rgb(252,205,26)"/><text x="889.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.18%)</title><rect x="887" y="244" width="2" height="15" fill="rgb(244,30,9)"/><text x="890.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.09%)</title><rect x="888" y="260" width="1" height="15" fill="rgb(254,52,44)"/><text x="891.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.09%)</title><rect x="888" y="276" width="1" height="15" fill="rgb(249,195,14)"/><text x="891.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.09%)</title><rect x="888" y="292" width="1" height="15" fill="rgb(238,14,53)"/><text x="891.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.09%)</title><rect x="888" y="308" width="1" height="15" fill="rgb(237,139,48)"/><text x="891.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.09%)</title><rect x="888" y="324" width="1" height="15" fill="rgb(221,177,10)"/><text x="891.00" y="334.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.09%)</title><rect x="888" y="340" width="1" height="15" fill="rgb(240,162,44)"/><text x="891.00" y="350.50"></text></g><g><title>argmin (&lt;__array_function__ internals&gt;) (5 samples, 0.46%)</title><rect x="890" y="276" width="6" height="15" fill="rgb(214,42,45)"/><text x="893.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 0.46%)</title><rect x="890" y="292" width="6" height="15" fill="rgb(235,173,30)"/><text x="893.00" y="302.50"></text></g><g><title>argmin (numpy/core/fromnumeric.py) (5 samples, 0.46%)</title><rect x="890" y="308" width="6" height="15" fill="rgb(232,131,8)"/><text x="893.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (5 samples, 0.46%)</title><rect x="890" y="324" width="6" height="15" fill="rgb(238,68,0)"/><text x="893.00" y="334.50"></text></g><g><title>array_argmin (methods.c) (4 samples, 0.37%)</title><rect x="892" y="340" width="4" height="15" fill="rgb(249,42,18)"/><text x="895.00" y="350.50"></text></g><g><title>PyArray_ArgMin (calculation.c) (4 samples, 0.37%)</title><rect x="892" y="356" width="4" height="15" fill="rgb(210,168,31)"/><text x="895.00" y="366.50"></text></g><g><title>FLOAT_argmin (arraytypes.c.src) (4 samples, 0.37%)</title><rect x="892" y="372" width="4" height="15" fill="rgb(226,96,29)"/><text x="895.00" y="382.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py) (12 samples, 1.10%)</title><rect x="889" y="260" width="13" height="15" fill="rgb(210,94,10)"/><text x="892.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (6 samples, 0.55%)</title><rect x="896" y="276" width="6" height="15" fill="rgb(219,49,19)"/><text x="899.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 0.55%)</title><rect x="896" y="292" width="6" height="15" fill="rgb(222,140,28)"/><text x="899.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (6 samples, 0.55%)</title><rect x="896" y="308" width="6" height="15" fill="rgb(238,20,50)"/><text x="899.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py) (1 samples, 0.09%)</title><rect x="901" y="324" width="1" height="15" fill="rgb(217,4,21)"/><text x="904.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (13 samples, 1.19%)</title><rect x="889" y="228" width="14" height="15" fill="rgb(232,127,48)"/><text x="892.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (13 samples, 1.19%)</title><rect x="889" y="244" width="14" height="15" fill="rgb(241,195,34)"/><text x="892.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="902" y="260" width="1" height="15" fill="rgb(207,68,8)"/><text x="905.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="902" y="276" width="1" height="15" fill="rgb(245,221,31)"/><text x="905.00" y="286.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.09%)</title><rect x="902" y="292" width="1" height="15" fill="rgb(211,113,51)"/><text x="905.00" y="302.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.09%)</title><rect x="902" y="308" width="1" height="15" fill="rgb(223,27,24)"/><text x="905.00" y="318.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.09%)</title><rect x="902" y="324" width="1" height="15" fill="rgb(245,150,31)"/><text x="905.00" y="334.50"></text></g><g><title>0x7fccd6138e64 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="902" y="340" width="1" height="15" fill="rgb(250,11,9)"/><text x="905.00" y="350.50"></text></g><g><title>0x7fcc96bd154f (?) (1 samples, 0.09%)</title><rect x="903" y="244" width="1" height="15" fill="rgb(233,89,46)"/><text x="906.00" y="254.50"></text></g><g><title>0x7fcc96bd765e (?) (1 samples, 0.09%)</title><rect x="903" y="260" width="1" height="15" fill="rgb(211,56,3)"/><text x="906.00" y="270.50"></text></g><g><title>0x7fcc96bd750f (?) (1 samples, 0.09%)</title><rect x="903" y="276" width="1" height="15" fill="rgb(252,19,52)"/><text x="906.00" y="286.50"></text></g><g><title>0x7fcc96bddd6c (?) (1 samples, 0.09%)</title><rect x="903" y="292" width="1" height="15" fill="rgb(221,155,32)"/><text x="906.00" y="302.50"></text></g><g><title>0x7fcca0134cff (?) (1 samples, 0.09%)</title><rect x="903" y="308" width="1" height="15" fill="rgb(251,48,34)"/><text x="906.00" y="318.50"></text></g><g><title>0x7fcc96bc22db (?) (1 samples, 0.09%)</title><rect x="903" y="324" width="1" height="15" fill="rgb(253,71,36)"/><text x="906.00" y="334.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h) (1 samples, 0.09%)</title><rect x="904" y="292" width="2" height="15" fill="rgb(249,157,45)"/><text x="907.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple) (1 samples, 0.09%)</title><rect x="904" y="308" width="2" height="15" fill="rgb(220,164,32)"/><text x="907.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple) (1 samples, 0.09%)</title><rect x="904" y="324" width="2" height="15" fill="rgb(225,191,39)"/><text x="907.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;, false&gt;::_Head_base (tuple) (1 samples, 0.09%)</title><rect x="904" y="340" width="2" height="15" fill="rgb(213,60,15)"/><text x="907.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;::type_caster (cast.h) (1 samples, 0.09%)</title><rect x="904" y="356" width="2" height="15" fill="rgb(251,122,22)"/><text x="907.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeTreeEnsembleRegressorFloat&gt;::type_caster_base (cast.h) (1 samples, 0.09%)</title><rect x="904" y="372" width="2" height="15" fill="rgb(232,129,33)"/><text x="907.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeTreeEnsembleRegressorFloat&gt;::type_caster_base (cast.h) (1 samples, 0.09%)</title><rect x="904" y="388" width="2" height="15" fill="rgb(254,26,12)"/><text x="907.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (1 samples, 0.09%)</title><rect x="904" y="404" width="2" height="15" fill="rgb(251,192,14)"/><text x="907.00" y="414.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h) (1 samples, 0.09%)</title><rect x="904" y="420" width="2" height="15" fill="rgb(238,223,28)"/><text x="907.00" y="430.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.09%)</title><rect x="904" y="436" width="2" height="15" fill="rgb(211,136,34)"/><text x="907.00" y="446.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (1 samples, 0.09%)</title><rect x="904" y="452" width="2" height="15" fill="rgb(243,110,30)"/><text x="907.00" y="462.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h) (1 samples, 0.09%)</title><rect x="904" y="468" width="2" height="15" fill="rgb(208,179,54)"/><text x="907.00" y="478.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 0.09%)</title><rect x="904" y="484" width="2" height="15" fill="rgb(231,102,22)"/><text x="907.00" y="494.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.09%)</title><rect x="904" y="500" width="2" height="15" fill="rgb(248,97,19)"/><text x="907.00" y="510.50"></text></g><g><title>pybind11::array::array (numpy.h) (1 samples, 0.09%)</title><rect x="904" y="516" width="2" height="15" fill="rgb(219,66,26)"/><text x="907.00" y="526.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.09%)</title><rect x="904" y="532" width="2" height="15" fill="rgb(208,158,13)"/><text x="907.00" y="542.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.09%)</title><rect x="904" y="548" width="2" height="15" fill="rgb(254,44,19)"/><text x="907.00" y="558.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.09%)</title><rect x="904" y="564" width="2" height="15" fill="rgb(224,4,43)"/><text x="907.00" y="574.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="904" y="580" width="2" height="15" fill="rgb(236,125,38)"/><text x="907.00" y="590.50"></text></g><g><title>0x7fcca013fea0 (libgomp.so.1.0.0) (2 samples, 0.18%)</title><rect x="906" y="484" width="2" height="15" fill="rgb(217,104,25)"/><text x="909.00" y="494.50"></text></g><g><title>0x7fcca013fea9 (libgomp.so.1.0.0) (11 samples, 1.01%)</title><rect x="908" y="484" width="12" height="15" fill="rgb(238,64,24)"/><text x="911.00" y="494.50"></text></g><g><title>0x7fcca013feab (libgomp.so.1.0.0) (10 samples, 0.91%)</title><rect x="920" y="484" width="10" height="15" fill="rgb(213,58,39)"/><text x="923.00" y="494.50"></text></g><g><title>0x7fcca013eab9 (libgomp.so.1.0.0) (35 samples, 3.20%)</title><rect x="906" y="468" width="37" height="15" fill="rgb(248,33,4)"/><text x="909.00" y="478.50">0x7..</text></g><g><title>0x7fcca013fead (libgomp.so.1.0.0) (12 samples, 1.10%)</title><rect x="930" y="484" width="13" height="15" fill="rgb(214,206,9)"/><text x="933.00" y="494.50"></text></g><g><title>0x7fcca013fcf9 (libgomp.so.1.0.0) (1 samples, 0.09%)</title><rect x="943" y="500" width="1" height="15" fill="rgb(209,87,30)"/><text x="946.00" y="510.50"></text></g><g><title>0x7fcca013fcfd (libgomp.so.1.0.0) (1 samples, 0.09%)</title><rect x="944" y="500" width="2" height="15" fill="rgb(210,98,34)"/><text x="947.00" y="510.50"></text></g><g><title>0x7fcca013ddaa (libgomp.so.1.0.0) (3 samples, 0.27%)</title><rect x="943" y="484" width="4" height="15" fill="rgb(220,194,48)"/><text x="946.00" y="494.50"></text></g><g><title>0x7fcca013fd6d (libgomp.so.1.0.0) (1 samples, 0.09%)</title><rect x="946" y="500" width="1" height="15" fill="rgb(253,96,47)"/><text x="949.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator[] (stl_vector.h) (1 samples, 0.09%)</title><rect x="947" y="532" width="1" height="15" fill="rgb(214,113,20)"/><text x="950.00" y="542.50"></text></g><g><title>pybind11::array::size (numpy.h) (40 samples, 3.66%)</title><rect x="906" y="436" width="43" height="15" fill="rgb(220,135,32)"/><text x="909.00" y="446.50">pybi..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (40 samples, 3.66%)</title><rect x="906" y="452" width="43" height="15" fill="rgb(212,217,21)"/><text x="909.00" y="462.50">std:..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (5 samples, 0.46%)</title><rect x="943" y="468" width="6" height="15" fill="rgb(230,70,40)"/><text x="946.00" y="478.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (2 samples, 0.18%)</title><rect x="947" y="484" width="2" height="15" fill="rgb(231,88,46)"/><text x="950.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h) (2 samples, 0.18%)</title><rect x="947" y="500" width="2" height="15" fill="rgb(230,224,46)"/><text x="950.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (2 samples, 0.18%)</title><rect x="947" y="516" width="2" height="15" fill="rgb(234,216,41)"/><text x="950.00" y="526.50"></text></g><g><title>std::vector&lt;std::tuple&lt;long, long, long, float&gt;, std::allocator&lt;std::tuple&lt;long, long, long, float&gt; &gt; &gt;::operator[] (stl_vector.h) (1 samples, 0.09%)</title><rect x="948" y="532" width="1" height="15" fill="rgb(213,15,18)"/><text x="951.00" y="542.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (41 samples, 3.75%)</title><rect x="906" y="292" width="44" height="15" fill="rgb(225,102,51)"/><text x="909.00" y="302.50">pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (41 samples, 3.75%)</title><rect x="906" y="308" width="44" height="15" fill="rgb(229,10,19)"/><text x="909.00" y="318.50">pybi..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (41 samples, 3.75%)</title><rect x="906" y="324" width="44" height="15" fill="rgb(231,41,28)"/><text x="909.00" y="334.50">pybi..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (41 samples, 3.75%)</title><rect x="906" y="340" width="44" height="15" fill="rgb(230,63,20)"/><text x="909.00" y="350.50">pybi..</text></g><g><title>pybind11::array::~array (numpy.h) (41 samples, 3.75%)</title><rect x="906" y="356" width="44" height="15" fill="rgb(234,55,3)"/><text x="909.00" y="366.50">pybi..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (41 samples, 3.75%)</title><rect x="906" y="372" width="44" height="15" fill="rgb(237,67,28)"/><text x="909.00" y="382.50">pybi..</text></g><g><title>pybind11::object::~object (pytypes.h) (41 samples, 3.75%)</title><rect x="906" y="388" width="44" height="15" fill="rgb(231,189,22)"/><text x="909.00" y="398.50">pybi..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (41 samples, 3.75%)</title><rect x="906" y="404" width="44" height="15" fill="rgb(231,78,2)"/><text x="909.00" y="414.50">pybi..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (41 samples, 3.75%)</title><rect x="906" y="420" width="44" height="15" fill="rgb(212,197,14)"/><text x="909.00" y="430.50">Runt..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::array_t (numpy.h) (1 samples, 0.09%)</title><rect x="949" y="436" width="1" height="15" fill="rgb(210,8,2)"/><text x="952.00" y="446.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h) (1 samples, 0.09%)</title><rect x="949" y="452" width="1" height="15" fill="rgb(240,173,5)"/><text x="952.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.09%)</title><rect x="949" y="468" width="1" height="15" fill="rgb(235,99,18)"/><text x="952.00" y="478.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (1 samples, 0.09%)</title><rect x="949" y="484" width="1" height="15" fill="rgb(248,148,12)"/><text x="952.00" y="494.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h) (1 samples, 0.09%)</title><rect x="949" y="500" width="1" height="15" fill="rgb(248,91,7)"/><text x="952.00" y="510.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 0.09%)</title><rect x="949" y="516" width="1" height="15" fill="rgb(213,55,21)"/><text x="952.00" y="526.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.09%)</title><rect x="949" y="532" width="1" height="15" fill="rgb(241,107,20)"/><text x="952.00" y="542.50"></text></g><g><title>pybind11::array::array (numpy.h) (1 samples, 0.09%)</title><rect x="949" y="548" width="1" height="15" fill="rgb(238,97,2)"/><text x="952.00" y="558.50"></text></g><g><title>pybind11::array::c_strides (numpy.h) (1 samples, 0.09%)</title><rect x="949" y="564" width="1" height="15" fill="rgb(205,159,28)"/><text x="952.00" y="574.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (stl_vector.h) (1 samples, 0.09%)</title><rect x="949" y="580" width="1" height="15" fill="rgb(238,9,45)"/><text x="952.00" y="590.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_Vector_base (stl_vector.h) (1 samples, 0.09%)</title><rect x="949" y="596" width="1" height="15" fill="rgb(222,25,33)"/><text x="952.00" y="606.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_create_storage (stl_vector.h) (1 samples, 0.09%)</title><rect x="949" y="612" width="1" height="15" fill="rgb(215,33,31)"/><text x="952.00" y="622.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h) (1 samples, 0.09%)</title><rect x="949" y="628" width="1" height="15" fill="rgb(246,209,9)"/><text x="952.00" y="638.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h) (1 samples, 0.09%)</title><rect x="949" y="644" width="1" height="15" fill="rgb(226,201,34)"/><text x="952.00" y="654.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h) (1 samples, 0.09%)</title><rect x="949" y="660" width="1" height="15" fill="rgb(229,150,9)"/><text x="952.00" y="670.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.09%)</title><rect x="949" y="676" width="1" height="15" fill="rgb(223,84,9)"/><text x="952.00" y="686.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="949" y="692" width="1" height="15" fill="rgb(205,212,7)"/><text x="952.00" y="702.50"></text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py) (388 samples, 35.50%)</title><rect x="532" y="100" width="419" height="15" fill="rgb(212,203,44)"/><text x="535.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estim..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (388 samples, 35.50%)</title><rect x="532" y="116" width="419" height="15" fill="rgb(223,18,16)"/><text x="535.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (388 samples, 35.50%)</title><rect x="532" y="132" width="419" height="15" fill="rgb(245,37,29)"/><text x="535.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (387 samples, 35.41%)</title><rect x="533" y="148" width="418" height="15" fill="rgb(217,104,31)"/><text x="536.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (387 samples, 35.41%)</title><rect x="533" y="164" width="418" height="15" fill="rgb(246,57,36)"/><text x="536.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (385 samples, 35.22%)</title><rect x="535" y="180" width="416" height="15" fill="rgb(208,134,13)"/><text x="538.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (368 samples, 33.67%)</title><rect x="554" y="196" width="397" height="15" fill="rgb(226,109,25)"/><text x="557.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (60 samples, 5.49%)</title><rect x="886" y="212" width="65" height="15" fill="rgb(216,148,29)"/><text x="889.00" y="222.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (44 samples, 4.03%)</title><rect x="903" y="228" width="48" height="15" fill="rgb(228,195,35)"/><text x="906.00" y="238.50">_run..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (43 samples, 3.93%)</title><rect x="904" y="244" width="47" height="15" fill="rgb(218,216,54)"/><text x="907.00" y="254.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (43 samples, 3.93%)</title><rect x="904" y="260" width="47" height="15" fill="rgb(251,31,16)"/><text x="907.00" y="270.50">void..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (43 samples, 3.93%)</title><rect x="904" y="276" width="47" height="15" fill="rgb(241,192,1)"/><text x="907.00" y="286.50">void..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h) (1 samples, 0.09%)</title><rect x="950" y="292" width="1" height="15" fill="rgb(227,202,40)"/><text x="953.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h) (1 samples, 0.09%)</title><rect x="950" y="308" width="1" height="15" fill="rgb(234,178,3)"/><text x="953.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h) (1 samples, 0.09%)</title><rect x="950" y="324" width="1" height="15" fill="rgb(205,61,31)"/><text x="953.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::operator= (numpy.h) (1 samples, 0.09%)</title><rect x="950" y="340" width="1" height="15" fill="rgb(205,38,16)"/><text x="953.00" y="350.50"></text></g><g><title>pybind11::array::operator= (numpy.h) (1 samples, 0.09%)</title><rect x="950" y="356" width="1" height="15" fill="rgb(243,198,16)"/><text x="953.00" y="366.50"></text></g><g><title>pybind11::buffer::operator= (pytypes.h) (1 samples, 0.09%)</title><rect x="950" y="372" width="1" height="15" fill="rgb(217,166,49)"/><text x="953.00" y="382.50"></text></g><g><title>pybind11::object::operator= (pytypes.h) (1 samples, 0.09%)</title><rect x="950" y="388" width="1" height="15" fill="rgb(228,88,40)"/><text x="953.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.09%)</title><rect x="950" y="404" width="1" height="15" fill="rgb(245,222,33)"/><text x="953.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="950" y="420" width="1" height="15" fill="rgb(221,20,50)"/><text x="953.00" y="430.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.09%)</title><rect x="950" y="436" width="1" height="15" fill="rgb(219,30,47)"/><text x="953.00" y="446.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.09%)</title><rect x="950" y="452" width="1" height="15" fill="rgb(226,213,14)"/><text x="953.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="951" y="404" width="1" height="15" fill="rgb(235,75,52)"/><text x="954.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="951" y="420" width="1" height="15" fill="rgb(221,196,42)"/><text x="954.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="951" y="436" width="1" height="15" fill="rgb(220,126,46)"/><text x="954.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="951" y="452" width="1" height="15" fill="rgb(249,30,35)"/><text x="954.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="951" y="468" width="1" height="15" fill="rgb(247,52,34)"/><text x="954.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.09%)</title><rect x="951" y="484" width="1" height="15" fill="rgb(221,211,47)"/><text x="954.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.09%)</title><rect x="951" y="500" width="1" height="15" fill="rgb(234,113,47)"/><text x="954.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.09%)</title><rect x="951" y="516" width="1" height="15" fill="rgb(205,41,26)"/><text x="954.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.09%)</title><rect x="951" y="532" width="1" height="15" fill="rgb(250,35,44)"/><text x="954.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.09%)</title><rect x="951" y="548" width="1" height="15" fill="rgb(222,211,15)"/><text x="954.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.09%)</title><rect x="951" y="564" width="1" height="15" fill="rgb(223,80,35)"/><text x="954.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.09%)</title><rect x="951" y="580" width="1" height="15" fill="rgb(225,39,12)"/><text x="954.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.09%)</title><rect x="951" y="596" width="1" height="15" fill="rgb(209,110,14)"/><text x="954.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.09%)</title><rect x="951" y="612" width="1" height="15" fill="rgb(208,229,2)"/><text x="954.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.09%)</title><rect x="951" y="628" width="1" height="15" fill="rgb(237,0,2)"/><text x="954.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.09%)</title><rect x="951" y="644" width="1" height="15" fill="rgb(218,223,54)"/><text x="954.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.09%)</title><rect x="951" y="660" width="1" height="15" fill="rgb(249,72,25)"/><text x="954.00" y="670.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.09%)</title><rect x="951" y="676" width="1" height="15" fill="rgb(212,120,4)"/><text x="954.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.09%)</title><rect x="951" y="692" width="1" height="15" fill="rgb(236,51,23)"/><text x="954.00" y="702.50"></text></g><g><title>visit_If (jinja2/compiler.py) (1 samples, 0.09%)</title><rect x="951" y="708" width="1" height="15" fill="rgb(226,141,54)"/><text x="954.00" y="718.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.09%)</title><rect x="951" y="724" width="1" height="15" fill="rgb(216,175,38)"/><text x="954.00" y="734.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.09%)</title><rect x="951" y="740" width="1" height="15" fill="rgb(250,219,12)"/><text x="954.00" y="750.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.09%)</title><rect x="951" y="756" width="1" height="15" fill="rgb(233,97,40)"/><text x="954.00" y="766.50"></text></g><g><title>find_undeclared (jinja2/compiler.py) (1 samples, 0.09%)</title><rect x="951" y="772" width="1" height="15" fill="rgb(237,127,22)"/><text x="954.00" y="782.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.09%)</title><rect x="951" y="788" width="1" height="15" fill="rgb(247,181,8)"/><text x="954.00" y="798.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.09%)</title><rect x="951" y="804" width="1" height="15" fill="rgb(215,157,26)"/><text x="954.00" y="814.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.09%)</title><rect x="952" y="484" width="1" height="15" fill="rgb(209,24,39)"/><text x="955.00" y="494.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py) (1 samples, 0.09%)</title><rect x="952" y="500" width="1" height="15" fill="rgb(251,135,41)"/><text x="955.00" y="510.50"></text></g><g><title>0x7fccc44866d5 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="952" y="516" width="1" height="15" fill="rgb(222,216,6)"/><text x="955.00" y="526.50"></text></g><g><title>google::protobuf::DynamicMessage::New (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="952" y="532" width="1" height="15" fill="rgb(209,52,44)"/><text x="955.00" y="542.50"></text></g><g><title>google::protobuf::DynamicMessage::DynamicMessage (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="952" y="548" width="1" height="15" fill="rgb(246,194,28)"/><text x="955.00" y="558.50"></text></g><g><title>google::protobuf::DynamicMessage::SharedCtor (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="952" y="564" width="1" height="15" fill="rgb(237,125,10)"/><text x="955.00" y="574.50"></text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py) (391 samples, 35.77%)</title><rect x="532" y="68" width="422" height="15" fill="rgb(227,56,25)"/><text x="535.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py) (391 samples, 35.77%)</title><rect x="532" y="84" width="422" height="15" fill="rgb(222,81,16)"/><text x="535.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.27%)</title><rect x="951" y="100" width="3" height="15" fill="rgb(241,167,3)"/><text x="954.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.27%)</title><rect x="951" y="116" width="3" height="15" fill="rgb(217,60,26)"/><text x="954.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.27%)</title><rect x="951" y="132" width="3" height="15" fill="rgb(240,101,39)"/><text x="954.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.27%)</title><rect x="951" y="148" width="3" height="15" fill="rgb(253,183,35)"/><text x="954.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.27%)</title><rect x="951" y="164" width="3" height="15" fill="rgb(248,65,4)"/><text x="954.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (3 samples, 0.27%)</title><rect x="951" y="180" width="3" height="15" fill="rgb(244,149,14)"/><text x="954.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (3 samples, 0.27%)</title><rect x="951" y="196" width="3" height="15" fill="rgb(217,128,3)"/><text x="954.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="951" y="212" width="3" height="15" fill="rgb(220,106,14)"/><text x="954.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="951" y="228" width="3" height="15" fill="rgb(252,119,44)"/><text x="954.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="951" y="244" width="3" height="15" fill="rgb(222,159,15)"/><text x="954.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.27%)</title><rect x="951" y="260" width="3" height="15" fill="rgb(252,56,41)"/><text x="954.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="951" y="276" width="3" height="15" fill="rgb(209,7,49)"/><text x="954.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (3 samples, 0.27%)</title><rect x="951" y="292" width="3" height="15" fill="rgb(244,84,4)"/><text x="954.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="951" y="308" width="3" height="15" fill="rgb(235,23,5)"/><text x="954.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="951" y="324" width="3" height="15" fill="rgb(234,161,13)"/><text x="954.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="951" y="340" width="3" height="15" fill="rgb(234,116,26)"/><text x="954.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.27%)</title><rect x="951" y="356" width="3" height="15" fill="rgb(253,74,38)"/><text x="954.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="951" y="372" width="3" height="15" fill="rgb(252,1,37)"/><text x="954.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (3 samples, 0.27%)</title><rect x="951" y="388" width="3" height="15" fill="rgb(247,14,10)"/><text x="954.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (2 samples, 0.18%)</title><rect x="952" y="404" width="2" height="15" fill="rgb(232,123,3)"/><text x="955.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.18%)</title><rect x="952" y="420" width="2" height="15" fill="rgb(222,186,27)"/><text x="955.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.18%)</title><rect x="952" y="436" width="2" height="15" fill="rgb(231,161,3)"/><text x="955.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.18%)</title><rect x="952" y="452" width="2" height="15" fill="rgb(207,78,29)"/><text x="955.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.18%)</title><rect x="952" y="468" width="2" height="15" fill="rgb(244,194,30)"/><text x="955.00" y="478.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="953" y="484" width="1" height="15" fill="rgb(240,108,51)"/><text x="956.00" y="494.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#18}, bool, pybind11::object, pybind11::object, pybind11::is_method&gt;(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object&amp;&amp;, pybind11::object)#18}, bool (*)(pybind11::object, pybind11::object), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="953" y="500" width="1" height="15" fill="rgb(242,200,0)"/><text x="956.00" y="510.50"></text></g><g><title>pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#18}::operator() const (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="953" y="516" width="1" height="15" fill="rgb(222,179,31)"/><text x="956.00" y="526.50"></text></g><g><title>pybind11::int_::int_ (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="953" y="532" width="1" height="15" fill="rgb(208,195,45)"/><text x="956.00" y="542.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="953" y="548" width="1" height="15" fill="rgb(223,65,16)"/><text x="956.00" y="558.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::enum_&lt;onnx::OpSchema::SupportType&gt;::enum_&lt;&gt;(char const*, const&amp;)::{lambda(onnx::OpSchema::SupportType)#2}, unsigned char, onnx::OpSchema::SupportType, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(pybind11::enum_&lt;onnx::OpSchema::SupportType&gt;::enum_&lt;&gt;(char const*, const&amp;)::{lambda(onnx::OpSchema::SupportType&amp;&amp;)#2}, unsigned char (*)(onnx::OpSchema::SupportType), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="953" y="564" width="1" height="15" fill="rgb(216,133,26)"/><text x="956.00" y="574.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="955" y="116" width="1" height="15" fill="rgb(238,30,49)"/><text x="958.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.09%)</title><rect x="955" y="132" width="1" height="15" fill="rgb(220,40,46)"/><text x="958.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.09%)</title><rect x="955" y="148" width="1" height="15" fill="rgb(215,185,27)"/><text x="958.00" y="158.50"></text></g><g><title>0x7fccafb7bf55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="968" y="228" width="1" height="15" fill="rgb(220,162,47)"/><text x="971.00" y="238.50"></text></g><g><title>0x7fccafb6bd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="968" y="244" width="1" height="15" fill="rgb(221,25,51)"/><text x="971.00" y="254.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.09%)</title><rect x="968" y="260" width="1" height="15" fill="rgb(215,5,46)"/><text x="971.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.09%)</title><rect x="968" y="276" width="1" height="15" fill="rgb(241,207,23)"/><text x="971.00" y="286.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.09%)</title><rect x="968" y="292" width="1" height="15" fill="rgb(244,47,6)"/><text x="971.00" y="302.50"></text></g><g><title>0x7fccafb8b274 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="969" y="244" width="1" height="15" fill="rgb(243,86,31)"/><text x="972.00" y="254.50"></text></g><g><title>0x7fccafb8a1dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="970" y="260" width="1" height="15" fill="rgb(235,171,33)"/><text x="973.00" y="270.50"></text></g><g><title>0x7fccafb6ed04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="971" y="276" width="2" height="15" fill="rgb(216,111,26)"/><text x="974.00" y="286.50"></text></g><g><title>0x7fccafb6e666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="971" y="292" width="2" height="15" fill="rgb(245,26,38)"/><text x="974.00" y="302.50"></text></g><g><title>0x7fccafb642fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="971" y="308" width="2" height="15" fill="rgb(244,80,27)"/><text x="974.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.09%)</title><rect x="971" y="324" width="2" height="15" fill="rgb(254,203,44)"/><text x="974.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.09%)</title><rect x="971" y="340" width="2" height="15" fill="rgb(206,10,29)"/><text x="974.00" y="350.50"></text></g><g><title>0x7fccafb61a9a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="973" y="308" width="1" height="15" fill="rgb(235,27,11)"/><text x="976.00" y="318.50"></text></g><g><title>0x7fccafb8a2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.27%)</title><rect x="971" y="260" width="4" height="15" fill="rgb(209,88,31)"/><text x="974.00" y="270.50"></text></g><g><title>0x7fccafb6ee72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.18%)</title><rect x="973" y="276" width="2" height="15" fill="rgb(216,89,27)"/><text x="976.00" y="286.50"></text></g><g><title>0x7fccafb622bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.18%)</title><rect x="973" y="292" width="2" height="15" fill="rgb(231,228,20)"/><text x="976.00" y="302.50"></text></g><g><title>0x7fccafb61e2c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="974" y="308" width="1" height="15" fill="rgb(213,26,54)"/><text x="977.00" y="318.50"></text></g><g><title>0x7fccafb8a511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="975" y="260" width="1" height="15" fill="rgb(212,109,51)"/><text x="978.00" y="270.50"></text></g><g><title>0x7fccd6216134 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="975" y="276" width="1" height="15" fill="rgb(229,110,12)"/><text x="978.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.09%)</title><rect x="977" y="340" width="1" height="15" fill="rgb(236,194,20)"/><text x="980.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="978" y="340" width="1" height="15" fill="rgb(225,77,3)"/><text x="981.00" y="350.50"></text></g><g><title>0x7fccafb8a592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.37%)</title><rect x="976" y="260" width="4" height="15" fill="rgb(253,212,9)"/><text x="979.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c) (4 samples, 0.37%)</title><rect x="976" y="276" width="4" height="15" fill="rgb(223,64,26)"/><text x="979.00" y="286.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (3 samples, 0.27%)</title><rect x="977" y="292" width="3" height="15" fill="rgb(220,16,11)"/><text x="980.00" y="302.50"></text></g><g><title>PyArray_Zeros (ctors.c) (3 samples, 0.27%)</title><rect x="977" y="308" width="3" height="15" fill="rgb(218,74,49)"/><text x="980.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 0.27%)</title><rect x="977" y="324" width="3" height="15" fill="rgb(238,212,10)"/><text x="980.00" y="334.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (1 samples, 0.09%)</title><rect x="979" y="340" width="1" height="15" fill="rgb(236,50,22)"/><text x="982.00" y="350.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (1 samples, 0.09%)</title><rect x="979" y="356" width="1" height="15" fill="rgb(235,29,6)"/><text x="982.00" y="366.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="979" y="372" width="1" height="15" fill="rgb(223,185,27)"/><text x="982.00" y="382.50"></text></g><g><title>0x7fccd613a214 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="979" y="388" width="1" height="15" fill="rgb(239,77,19)"/><text x="982.00" y="398.50"></text></g><g><title>0x7fccafb8a698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="980" y="260" width="1" height="15" fill="rgb(221,18,35)"/><text x="983.00" y="270.50"></text></g><g><title>0x7fccafb8a69b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="981" y="260" width="1" height="15" fill="rgb(246,92,48)"/><text x="984.00" y="270.50"></text></g><g><title>0x7fccafb8a6a5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="982" y="260" width="1" height="15" fill="rgb(253,14,19)"/><text x="985.00" y="270.50"></text></g><g><title>0x7fccafb8a6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="983" y="260" width="1" height="15" fill="rgb(244,215,26)"/><text x="986.00" y="270.50"></text></g><g><title>0x7fccafb8a6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="984" y="260" width="1" height="15" fill="rgb(220,229,49)"/><text x="987.00" y="270.50"></text></g><g><title>0x7fccafb8a6e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="985" y="260" width="2" height="15" fill="rgb(211,219,16)"/><text x="988.00" y="270.50"></text></g><g><title>0x7fccafb8a731 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="987" y="260" width="1" height="15" fill="rgb(220,210,1)"/><text x="990.00" y="270.50"></text></g><g><title>0x7fccafb8a887 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="988" y="260" width="1" height="15" fill="rgb(253,201,36)"/><text x="991.00" y="270.50"></text></g><g><title>0x7fccafb8a8c3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="989" y="260" width="1" height="15" fill="rgb(244,225,36)"/><text x="992.00" y="270.50"></text></g><g><title>0x7fccafb8b405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (22 samples, 2.01%)</title><rect x="970" y="244" width="24" height="15" fill="rgb(231,137,17)"/><text x="973.00" y="254.50">0..</text></g><g><title>0x7fccafb8ac27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.37%)</title><rect x="990" y="260" width="4" height="15" fill="rgb(235,167,26)"/><text x="993.00" y="270.50"></text></g><g><title>0x7fccafb62529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.37%)</title><rect x="990" y="276" width="4" height="15" fill="rgb(248,92,54)"/><text x="993.00" y="286.50"></text></g><g><title>array_getbuffer (buffer.c) (4 samples, 0.37%)</title><rect x="990" y="292" width="4" height="15" fill="rgb(235,163,19)"/><text x="993.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c) (4 samples, 0.37%)</title><rect x="990" y="308" width="4" height="15" fill="rgb(241,165,50)"/><text x="993.00" y="318.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.18%)</title><rect x="992" y="324" width="2" height="15" fill="rgb(242,209,3)"/><text x="995.00" y="334.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.09%)</title><rect x="993" y="340" width="1" height="15" fill="rgb(242,207,37)"/><text x="996.00" y="350.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.09%)</title><rect x="993" y="356" width="1" height="15" fill="rgb(205,72,24)"/><text x="996.00" y="366.50"></text></g><g><title>0x7fccafb7bfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (24 samples, 2.20%)</title><rect x="969" y="228" width="26" height="15" fill="rgb(230,152,2)"/><text x="972.00" y="238.50">0..</text></g><g><title>0x7fccafb8b540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="994" y="244" width="1" height="15" fill="rgb(247,111,18)"/><text x="997.00" y="254.50"></text></g><g><title>0x7fccafb602f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="994" y="260" width="1" height="15" fill="rgb(230,227,50)"/><text x="997.00" y="270.50"></text></g><g><title>0x7fccafb5f4c0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="994" y="276" width="1" height="15" fill="rgb(212,121,21)"/><text x="997.00" y="286.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.09%)</title><rect x="995" y="260" width="1" height="15" fill="rgb(213,11,12)"/><text x="998.00" y="270.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (3 samples, 0.27%)</title><rect x="996" y="276" width="3" height="15" fill="rgb(247,64,41)"/><text x="999.00" y="286.50"></text></g><g><title>0x7fccafb7c05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.46%)</title><rect x="995" y="228" width="6" height="15" fill="rgb(247,127,9)"/><text x="998.00" y="238.50"></text></g><g><title>array_take (methods.c) (5 samples, 0.46%)</title><rect x="995" y="244" width="6" height="15" fill="rgb(230,70,12)"/><text x="998.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (4 samples, 0.37%)</title><rect x="996" y="260" width="5" height="15" fill="rgb(215,9,37)"/><text x="999.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.09%)</title><rect x="999" y="276" width="2" height="15" fill="rgb(212,100,22)"/><text x="1002.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.09%)</title><rect x="999" y="292" width="2" height="15" fill="rgb(220,26,36)"/><text x="1002.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.09%)</title><rect x="999" y="308" width="2" height="15" fill="rgb(241,174,18)"/><text x="1002.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.09%)</title><rect x="999" y="324" width="2" height="15" fill="rgb(210,79,15)"/><text x="1002.00" y="334.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.09%)</title><rect x="999" y="340" width="2" height="15" fill="rgb(227,45,20)"/><text x="1002.00" y="350.50"></text></g><g><title>0x7fccafb7c13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="1001" y="228" width="1" height="15" fill="rgb(222,141,52)"/><text x="1004.00" y="238.50"></text></g><g><title>0x7fccafb7c14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="1002" y="228" width="1" height="15" fill="rgb(230,110,2)"/><text x="1005.00" y="238.50"></text></g><g><title>0x7fccafb7c18f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="1003" y="228" width="1" height="15" fill="rgb(243,209,42)"/><text x="1006.00" y="238.50"></text></g><g><title>0x7fccafb7cd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (34 samples, 3.11%)</title><rect x="968" y="212" width="37" height="15" fill="rgb(245,159,13)"/><text x="971.00" y="222.50">0x7..</text></g><g><title>0x7fccafb7c328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="1004" y="228" width="1" height="15" fill="rgb(254,194,4)"/><text x="1007.00" y="238.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.09%)</title><rect x="1004" y="244" width="1" height="15" fill="rgb(211,137,4)"/><text x="1007.00" y="254.50"></text></g><g><title>0x7fccd6159120 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1014" y="244" width="1" height="15" fill="rgb(245,137,0)"/><text x="1017.00" y="254.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.09%)</title><rect x="1015" y="244" width="1" height="15" fill="rgb(220,57,21)"/><text x="1018.00" y="254.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.18%)</title><rect x="1016" y="244" width="2" height="15" fill="rgb(213,61,40)"/><text x="1019.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="1026" y="260" width="4" height="15" fill="rgb(238,183,28)"/><text x="1029.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (12 samples, 1.10%)</title><rect x="1018" y="244" width="13" height="15" fill="rgb(236,72,8)"/><text x="1021.00" y="254.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.09%)</title><rect x="1030" y="260" width="1" height="15" fill="rgb(227,162,24)"/><text x="1033.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (5 samples, 0.46%)</title><rect x="1031" y="244" width="5" height="15" fill="rgb(225,21,8)"/><text x="1034.00" y="254.50"></text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.27%)</title><rect x="1033" y="260" width="3" height="15" fill="rgb(249,83,29)"/><text x="1036.00" y="270.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.18%)</title><rect x="1034" y="276" width="2" height="15" fill="rgb(239,143,12)"/><text x="1037.00" y="286.50"></text></g><g><title>arraydescr_new (descriptor.c) (2 samples, 0.18%)</title><rect x="1036" y="244" width="2" height="15" fill="rgb(231,124,21)"/><text x="1039.00" y="254.50"></text></g><g><title>0x7fccd614e757 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1037" y="260" width="1" height="15" fill="rgb(218,5,21)"/><text x="1040.00" y="270.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (3 samples, 0.27%)</title><rect x="1038" y="244" width="4" height="15" fill="rgb(206,20,3)"/><text x="1041.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.09%)</title><rect x="1041" y="260" width="1" height="15" fill="rgb(228,113,13)"/><text x="1044.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (37 samples, 3.39%)</title><rect x="1005" y="212" width="40" height="15" fill="rgb(218,164,43)"/><text x="1008.00" y="222.50">_va..</text></g><g><title>check_array (sklearn/utils/validation.py) (36 samples, 3.29%)</title><rect x="1006" y="228" width="39" height="15" fill="rgb(237,0,41)"/><text x="1009.00" y="238.50">che..</text></g><g><title>simplefilter (warnings.py) (3 samples, 0.27%)</title><rect x="1042" y="244" width="3" height="15" fill="rgb(207,61,41)"/><text x="1045.00" y="254.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.18%)</title><rect x="1043" y="260" width="2" height="15" fill="rgb(235,201,23)"/><text x="1046.00" y="270.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.09%)</title><rect x="1045" y="212" width="1" height="15" fill="rgb(232,20,29)"/><text x="1048.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.09%)</title><rect x="1045" y="228" width="1" height="15" fill="rgb(212,190,1)"/><text x="1048.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.09%)</title><rect x="1045" y="244" width="1" height="15" fill="rgb(224,130,7)"/><text x="1048.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.09%)</title><rect x="1045" y="260" width="1" height="15" fill="rgb(231,218,50)"/><text x="1048.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (9 samples, 0.82%)</title><rect x="1048" y="228" width="10" height="15" fill="rgb(218,27,14)"/><text x="1051.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.09%)</title><rect x="1057" y="244" width="1" height="15" fill="rgb(254,22,12)"/><text x="1060.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (12 samples, 1.10%)</title><rect x="1046" y="212" width="13" height="15" fill="rgb(208,83,42)"/><text x="1049.00" y="222.50"></text></g><g><title>isclass (inspect.py) (1 samples, 0.09%)</title><rect x="1058" y="228" width="1" height="15" fill="rgb(251,95,13)"/><text x="1061.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py) (91 samples, 8.33%)</title><rect x="962" y="180" width="98" height="15" fill="rgb(222,106,4)"/><text x="965.00" y="190.50">&lt;listcomp&gt; ..</text></g><g><title>predict (sklearn/tree/_classes.py) (89 samples, 8.14%)</title><rect x="964" y="196" width="96" height="15" fill="rgb(232,97,11)"/><text x="967.00" y="206.50">predict (sk..</text></g><g><title>is_classifier (sklearn/base.py) (1 samples, 0.09%)</title><rect x="1059" y="212" width="1" height="15" fill="rgb(254,64,47)"/><text x="1062.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.09%)</title><rect x="1060" y="180" width="1" height="15" fill="rgb(219,185,3)"/><text x="1063.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.09%)</title><rect x="1060" y="196" width="1" height="15" fill="rgb(215,101,41)"/><text x="1063.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.09%)</title><rect x="1060" y="212" width="1" height="15" fill="rgb(219,191,54)"/><text x="1063.00" y="222.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (1 samples, 0.09%)</title><rect x="1060" y="228" width="1" height="15" fill="rgb(215,157,39)"/><text x="1063.00" y="238.50"></text></g><g><title>setArrayFromSequence (ctors.c) (1 samples, 0.09%)</title><rect x="1060" y="244" width="1" height="15" fill="rgb(238,93,35)"/><text x="1063.00" y="254.50"></text></g><g><title>setArrayFromSequence (ctors.c) (1 samples, 0.09%)</title><rect x="1060" y="260" width="1" height="15" fill="rgb(224,214,52)"/><text x="1063.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.09%)</title><rect x="1060" y="276" width="1" height="15" fill="rgb(215,110,48)"/><text x="1063.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.09%)</title><rect x="1060" y="292" width="1" height="15" fill="rgb(221,4,13)"/><text x="1063.00" y="302.50"></text></g><g><title>0x7fccd6158d94 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1060" y="308" width="1" height="15" fill="rgb(235,64,20)"/><text x="1063.00" y="318.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 0.27%)</title><rect x="1061" y="180" width="3" height="15" fill="rgb(238,211,2)"/><text x="1064.00" y="190.50"></text></g><g><title>DOUBLE_copyswapn (arraytypes.c.src) (1 samples, 0.09%)</title><rect x="1077" y="292" width="1" height="15" fill="rgb(218,200,41)"/><text x="1080.00" y="302.50"></text></g><g><title>_unaligned_strided_byte_copy (ctors.c) (1 samples, 0.09%)</title><rect x="1077" y="308" width="1" height="15" fill="rgb(244,185,45)"/><text x="1080.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.09%)</title><rect x="1078" y="292" width="1" height="15" fill="rgb(224,202,37)"/><text x="1081.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.09%)</title><rect x="1078" y="308" width="1" height="15" fill="rgb(218,114,27)"/><text x="1081.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="1078" y="324" width="1" height="15" fill="rgb(224,208,14)"/><text x="1081.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="1078" y="340" width="1" height="15" fill="rgb(218,183,1)"/><text x="1081.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.09%)</title><rect x="1078" y="356" width="1" height="15" fill="rgb(249,84,48)"/><text x="1081.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1078" y="372" width="1" height="15" fill="rgb(232,71,24)"/><text x="1081.00" y="382.50"></text></g><g><title>0x7fccd6139cc2 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1078" y="388" width="1" height="15" fill="rgb(206,183,6)"/><text x="1081.00" y="398.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (21 samples, 1.92%)</title><rect x="1064" y="212" width="23" height="15" fill="rgb(224,156,36)"/><text x="1067.00" y="222.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (20 samples, 1.83%)</title><rect x="1065" y="228" width="22" height="15" fill="rgb(254,62,10)"/><text x="1068.00" y="238.50">_..</text></g><g><title>array_argsort (methods.c) (19 samples, 1.74%)</title><rect x="1066" y="244" width="21" height="15" fill="rgb(236,183,20)"/><text x="1069.00" y="254.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (19 samples, 1.74%)</title><rect x="1066" y="260" width="21" height="15" fill="rgb(222,195,12)"/><text x="1069.00" y="270.50"></text></g><g><title>_new_argsortlike (item_selection.c) (19 samples, 1.74%)</title><rect x="1066" y="276" width="21" height="15" fill="rgb(244,155,54)"/><text x="1069.00" y="286.50"></text></g><g><title>aquicksort_double (quicksort.c.src) (7 samples, 0.64%)</title><rect x="1079" y="292" width="8" height="15" fill="rgb(237,181,48)"/><text x="1082.00" y="302.50"></text></g><g><title>DOUBLE_LT (npysort_common.h) (3 samples, 0.27%)</title><rect x="1084" y="308" width="3" height="15" fill="rgb(254,120,46)"/><text x="1087.00" y="318.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (22 samples, 2.01%)</title><rect x="1064" y="180" width="24" height="15" fill="rgb(208,138,39)"/><text x="1067.00" y="190.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (22 samples, 2.01%)</title><rect x="1064" y="196" width="24" height="15" fill="rgb(223,102,39)"/><text x="1067.00" y="206.50">a..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.09%)</title><rect x="1087" y="212" width="1" height="15" fill="rgb(254,46,54)"/><text x="1090.00" y="222.50"></text></g><g><title>BOOL_argmax (arraytypes.c.src) (2 samples, 0.18%)</title><rect x="1090" y="212" width="2" height="15" fill="rgb(226,15,24)"/><text x="1093.00" y="222.50"></text></g><g><title>array_argmax (methods.c) (5 samples, 0.46%)</title><rect x="1088" y="180" width="5" height="15" fill="rgb(220,73,7)"/><text x="1091.00" y="190.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (4 samples, 0.37%)</title><rect x="1089" y="196" width="4" height="15" fill="rgb(239,26,48)"/><text x="1092.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.09%)</title><rect x="1092" y="212" width="1" height="15" fill="rgb(234,33,27)"/><text x="1095.00" y="222.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.09%)</title><rect x="1092" y="228" width="1" height="15" fill="rgb(253,166,31)"/><text x="1095.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="1093" y="180" width="1" height="15" fill="rgb(219,82,25)"/><text x="1096.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.09%)</title><rect x="1093" y="196" width="1" height="15" fill="rgb(231,66,24)"/><text x="1096.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.09%)</title><rect x="1093" y="212" width="1" height="15" fill="rgb(236,165,18)"/><text x="1096.00" y="222.50"></text></g><g><title>DOUBLE_multiply (loops.c.src) (2 samples, 0.18%)</title><rect x="1094" y="260" width="3" height="15" fill="rgb(217,44,27)"/><text x="1097.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.27%)</title><rect x="1094" y="228" width="4" height="15" fill="rgb(217,11,35)"/><text x="1097.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.27%)</title><rect x="1094" y="244" width="4" height="15" fill="rgb(237,77,30)"/><text x="1097.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.09%)</title><rect x="1097" y="260" width="1" height="15" fill="rgb(212,60,14)"/><text x="1100.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.09%)</title><rect x="1097" y="276" width="1" height="15" fill="rgb(207,85,2)"/><text x="1100.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.09%)</title><rect x="1097" y="292" width="1" height="15" fill="rgb(231,126,49)"/><text x="1100.00" y="302.50"></text></g><g><title>array_multiply (number.c) (4 samples, 0.37%)</title><rect x="1094" y="180" width="5" height="15" fill="rgb(232,203,43)"/><text x="1097.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.37%)</title><rect x="1094" y="196" width="5" height="15" fill="rgb(206,102,53)"/><text x="1097.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.37%)</title><rect x="1094" y="212" width="5" height="15" fill="rgb(213,155,30)"/><text x="1097.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1098" y="228" width="1" height="15" fill="rgb(252,91,15)"/><text x="1101.00" y="238.50"></text></g><g><title>DOUBLE_greater_equal (loops.c.src) (1 samples, 0.09%)</title><rect x="1099" y="260" width="1" height="15" fill="rgb(222,108,4)"/><text x="1102.00" y="270.50"></text></g><g><title>run_binary_simd_greater_equal_DOUBLE (simd.inc.src) (1 samples, 0.09%)</title><rect x="1099" y="276" width="1" height="15" fill="rgb(223,26,54)"/><text x="1102.00" y="286.50"></text></g><g><title>sse2_binary_greater_equal_DOUBLE (simd.inc.src) (1 samples, 0.09%)</title><rect x="1099" y="292" width="1" height="15" fill="rgb(238,40,47)"/><text x="1102.00" y="302.50"></text></g><g><title>_mm_loadu_pd (emmintrin.h) (1 samples, 0.09%)</title><rect x="1099" y="308" width="1" height="15" fill="rgb(253,121,9)"/><text x="1102.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.09%)</title><rect x="1101" y="276" width="1" height="15" fill="rgb(253,11,22)"/><text x="1104.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (9 samples, 0.82%)</title><rect x="1100" y="260" width="10" height="15" fill="rgb(206,199,0)"/><text x="1103.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (7 samples, 0.64%)</title><rect x="1102" y="276" width="8" height="15" fill="rgb(239,116,2)"/><text x="1105.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (7 samples, 0.64%)</title><rect x="1102" y="292" width="8" height="15" fill="rgb(249,87,31)"/><text x="1105.00" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (4 samples, 0.37%)</title><rect x="1105" y="308" width="5" height="15" fill="rgb(237,179,7)"/><text x="1108.00" y="318.50"></text></g><g><title>array_richcompare (arrayobject.c) (11 samples, 1.01%)</title><rect x="1099" y="180" width="12" height="15" fill="rgb(250,196,0)"/><text x="1102.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 1.01%)</title><rect x="1099" y="196" width="12" height="15" fill="rgb(242,142,6)"/><text x="1102.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 1.01%)</title><rect x="1099" y="212" width="12" height="15" fill="rgb(243,210,14)"/><text x="1102.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (11 samples, 1.01%)</title><rect x="1099" y="228" width="12" height="15" fill="rgb(231,211,47)"/><text x="1102.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (11 samples, 1.01%)</title><rect x="1099" y="244" width="12" height="15" fill="rgb(240,66,11)"/><text x="1102.00" y="254.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.09%)</title><rect x="1110" y="260" width="1" height="15" fill="rgb(209,43,6)"/><text x="1113.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c) (4 samples, 0.37%)</title><rect x="1111" y="196" width="4" height="15" fill="rgb(221,115,13)"/><text x="1114.00" y="206.50"></text></g><g><title>check_and_adjust_index (common.h) (1 samples, 0.09%)</title><rect x="1114" y="212" width="1" height="15" fill="rgb(229,83,6)"/><text x="1117.00" y="222.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.09%)</title><rect x="1115" y="244" width="1" height="15" fill="rgb(237,12,47)"/><text x="1118.00" y="254.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (2 samples, 0.18%)</title><rect x="1115" y="196" width="2" height="15" fill="rgb(205,54,47)"/><text x="1118.00" y="206.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (2 samples, 0.18%)</title><rect x="1115" y="212" width="2" height="15" fill="rgb(222,109,47)"/><text x="1118.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.18%)</title><rect x="1115" y="228" width="2" height="15" fill="rgb(253,44,9)"/><text x="1118.00" y="238.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.09%)</title><rect x="1116" y="244" width="1" height="15" fill="rgb(219,133,48)"/><text x="1119.00" y="254.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.09%)</title><rect x="1117" y="196" width="1" height="15" fill="rgb(208,58,21)"/><text x="1120.00" y="206.50"></text></g><g><title>array_subscript (mapping.c) (9 samples, 0.82%)</title><rect x="1111" y="180" width="9" height="15" fill="rgb(205,192,14)"/><text x="1114.00" y="190.50"></text></g><g><title>mapiter_trivial_get (lowlevel_strided_loops.c.src) (2 samples, 0.18%)</title><rect x="1118" y="196" width="2" height="15" fill="rgb(210,196,30)"/><text x="1121.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.09%)</title><rect x="1124" y="276" width="1" height="15" fill="rgb(205,200,0)"/><text x="1127.00" y="286.50"></text></g><g><title>0x7fccd614e73b (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1125" y="292" width="1" height="15" fill="rgb(244,194,50)"/><text x="1128.00" y="302.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (3 samples, 0.27%)</title><rect x="1124" y="196" width="3" height="15" fill="rgb(219,210,41)"/><text x="1127.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.27%)</title><rect x="1124" y="212" width="3" height="15" fill="rgb(228,197,24)"/><text x="1127.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py) (3 samples, 0.27%)</title><rect x="1124" y="228" width="3" height="15" fill="rgb(216,93,29)"/><text x="1127.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (3 samples, 0.27%)</title><rect x="1124" y="244" width="3" height="15" fill="rgb(240,191,48)"/><text x="1127.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (3 samples, 0.27%)</title><rect x="1124" y="260" width="3" height="15" fill="rgb(240,183,0)"/><text x="1127.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.18%)</title><rect x="1125" y="276" width="2" height="15" fill="rgb(224,219,18)"/><text x="1128.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1126" y="292" width="1" height="15" fill="rgb(206,7,15)"/><text x="1129.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.09%)</title><rect x="1126" y="308" width="1" height="15" fill="rgb(223,194,46)"/><text x="1129.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1126" y="324" width="1" height="15" fill="rgb(222,89,22)"/><text x="1129.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.09%)</title><rect x="1126" y="340" width="1" height="15" fill="rgb(243,174,50)"/><text x="1129.00" y="350.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.09%)</title><rect x="1126" y="356" width="1" height="15" fill="rgb(210,136,30)"/><text x="1129.00" y="366.50"></text></g><g><title>array_take (methods.c) (1 samples, 0.09%)</title><rect x="1127" y="196" width="1" height="15" fill="rgb(213,69,10)"/><text x="1130.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (1 samples, 0.09%)</title><rect x="1127" y="212" width="1" height="15" fill="rgb(225,98,22)"/><text x="1130.00" y="222.50"></text></g><g><title>_get_keywords (number.c) (1 samples, 0.09%)</title><rect x="1129" y="308" width="1" height="15" fill="rgb(219,219,7)"/><text x="1132.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.09%)</title><rect x="1129" y="324" width="1" height="15" fill="rgb(215,149,25)"/><text x="1132.00" y="334.50"></text></g><g><title>0x7fccd535ad70 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="1132" y="356" width="1" height="15" fill="rgb(233,160,39)"/><text x="1135.00" y="366.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (9 samples, 0.82%)</title><rect x="1128" y="196" width="10" height="15" fill="rgb(234,160,28)"/><text x="1131.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 0.82%)</title><rect x="1128" y="212" width="10" height="15" fill="rgb(213,9,53)"/><text x="1131.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (9 samples, 0.82%)</title><rect x="1128" y="228" width="10" height="15" fill="rgb(254,186,14)"/><text x="1131.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (9 samples, 0.82%)</title><rect x="1128" y="244" width="10" height="15" fill="rgb(224,174,17)"/><text x="1131.00" y="254.50"></text></g><g><title>array_cumsum (methods.c) (9 samples, 0.82%)</title><rect x="1128" y="260" width="10" height="15" fill="rgb(252,45,41)"/><text x="1131.00" y="270.50"></text></g><g><title>PyArray_CumSum (calculation.c) (8 samples, 0.73%)</title><rect x="1129" y="276" width="9" height="15" fill="rgb(251,212,47)"/><text x="1132.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (8 samples, 0.73%)</title><rect x="1129" y="292" width="9" height="15" fill="rgb(228,89,10)"/><text x="1132.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (7 samples, 0.64%)</title><rect x="1130" y="308" width="8" height="15" fill="rgb(226,8,41)"/><text x="1133.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (7 samples, 0.64%)</title><rect x="1130" y="324" width="8" height="15" fill="rgb(210,11,40)"/><text x="1133.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (7 samples, 0.64%)</title><rect x="1130" y="340" width="8" height="15" fill="rgb(222,22,31)"/><text x="1133.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (4 samples, 0.37%)</title><rect x="1133" y="356" width="5" height="15" fill="rgb(231,183,15)"/><text x="1136.00" y="366.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (1 samples, 0.09%)</title><rect x="1143" y="308" width="1" height="15" fill="rgb(231,68,12)"/><text x="1146.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.09%)</title><rect x="1144" y="324" width="1" height="15" fill="rgb(230,151,4)"/><text x="1147.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.09%)</title><rect x="1144" y="340" width="1" height="15" fill="rgb(216,107,11)"/><text x="1147.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.09%)</title><rect x="1144" y="356" width="1" height="15" fill="rgb(250,131,54)"/><text x="1147.00" y="366.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (7 samples, 0.64%)</title><rect x="1141" y="244" width="7" height="15" fill="rgb(217,118,15)"/><text x="1144.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 0.55%)</title><rect x="1142" y="260" width="6" height="15" fill="rgb(235,121,47)"/><text x="1145.00" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py) (6 samples, 0.55%)</title><rect x="1142" y="276" width="6" height="15" fill="rgb(244,85,47)"/><text x="1145.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (6 samples, 0.55%)</title><rect x="1142" y="292" width="6" height="15" fill="rgb(227,77,6)"/><text x="1145.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (4 samples, 0.37%)</title><rect x="1144" y="308" width="4" height="15" fill="rgb(249,126,19)"/><text x="1147.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (3 samples, 0.27%)</title><rect x="1145" y="324" width="3" height="15" fill="rgb(221,67,43)"/><text x="1148.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.18%)</title><rect x="1146" y="340" width="2" height="15" fill="rgb(247,117,44)"/><text x="1149.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.18%)</title><rect x="1146" y="356" width="2" height="15" fill="rgb(226,82,49)"/><text x="1149.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.18%)</title><rect x="1146" y="372" width="2" height="15" fill="rgb(253,80,20)"/><text x="1149.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.09%)</title><rect x="1147" y="388" width="1" height="15" fill="rgb(230,72,31)"/><text x="1150.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.09%)</title><rect x="1147" y="404" width="1" height="15" fill="rgb(236,163,10)"/><text x="1150.00" y="414.50"></text></g><g><title>0x7fccd61591ef (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1147" y="420" width="1" height="15" fill="rgb(244,1,50)"/><text x="1150.00" y="430.50"></text></g><g><title>result_type (&lt;__array_function__ internals&gt;) (3 samples, 0.27%)</title><rect x="1148" y="244" width="4" height="15" fill="rgb(249,67,52)"/><text x="1151.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.18%)</title><rect x="1150" y="260" width="2" height="15" fill="rgb(232,80,32)"/><text x="1153.00" y="270.50"></text></g><g><title>array_result_type (multiarraymodule.c) (2 samples, 0.18%)</title><rect x="1150" y="276" width="2" height="15" fill="rgb(237,106,48)"/><text x="1153.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.09%)</title><rect x="1151" y="292" width="1" height="15" fill="rgb(220,109,50)"/><text x="1154.00" y="302.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.09%)</title><rect x="1151" y="308" width="1" height="15" fill="rgb(235,96,9)"/><text x="1154.00" y="318.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.09%)</title><rect x="1151" y="324" width="1" height="15" fill="rgb(251,8,53)"/><text x="1154.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.09%)</title><rect x="1151" y="340" width="1" height="15" fill="rgb(232,5,18)"/><text x="1154.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.27%)</title><rect x="1152" y="244" width="3" height="15" fill="rgb(205,78,18)"/><text x="1155.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.27%)</title><rect x="1152" y="260" width="3" height="15" fill="rgb(216,65,49)"/><text x="1155.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.27%)</title><rect x="1152" y="276" width="3" height="15" fill="rgb(239,227,14)"/><text x="1155.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (3 samples, 0.27%)</title><rect x="1152" y="292" width="3" height="15" fill="rgb(233,3,39)"/><text x="1155.00" y="302.50"></text></g><g><title>DOUBLE_isfinite (loops.c.src) (2 samples, 0.18%)</title><rect x="1153" y="308" width="2" height="15" fill="rgb(238,10,49)"/><text x="1156.00" y="318.50"></text></g><g><title>run_isfinite_simd_DOUBLE (simd.inc.src) (2 samples, 0.18%)</title><rect x="1153" y="324" width="2" height="15" fill="rgb(228,226,34)"/><text x="1156.00" y="334.50"></text></g><g><title>sse2_isfinite_DOUBLE (simd.inc.src) (2 samples, 0.18%)</title><rect x="1153" y="340" width="2" height="15" fill="rgb(253,26,12)"/><text x="1156.00" y="350.50"></text></g><g><title>_mm_andnot_pd (emmintrin.h) (2 samples, 0.18%)</title><rect x="1153" y="356" width="2" height="15" fill="rgb(248,38,20)"/><text x="1156.00" y="366.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py) (1 samples, 0.09%)</title><rect x="1156" y="260" width="1" height="15" fill="rgb(220,111,11)"/><text x="1159.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (1 samples, 0.09%)</title><rect x="1156" y="276" width="1" height="15" fill="rgb(235,118,1)"/><text x="1159.00" y="286.50"></text></g><g><title>ufunc_seterr (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1156" y="292" width="1" height="15" fill="rgb(253,147,25)"/><text x="1159.00" y="302.50"></text></g><g><title>0x7fccd535a760 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="1156" y="308" width="1" height="15" fill="rgb(216,157,40)"/><text x="1159.00" y="318.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py) (1 samples, 0.09%)</title><rect x="1157" y="260" width="1" height="15" fill="rgb(217,220,45)"/><text x="1160.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (1 samples, 0.09%)</title><rect x="1157" y="276" width="1" height="15" fill="rgb(206,48,48)"/><text x="1160.00" y="286.50"></text></g><g><title>array_add (number.c) (1 samples, 0.09%)</title><rect x="1158" y="260" width="1" height="15" fill="rgb(240,48,3)"/><text x="1161.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1158" y="276" width="1" height="15" fill="rgb(224,82,54)"/><text x="1161.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1158" y="292" width="1" height="15" fill="rgb(238,188,10)"/><text x="1161.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1158" y="308" width="1" height="15" fill="rgb(248,35,26)"/><text x="1161.00" y="318.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1158" y="324" width="1" height="15" fill="rgb(224,13,51)"/><text x="1161.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.09%)</title><rect x="1158" y="340" width="1" height="15" fill="rgb(250,67,10)"/><text x="1161.00" y="350.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.09%)</title><rect x="1158" y="356" width="1" height="15" fill="rgb(234,91,31)"/><text x="1161.00" y="366.50"></text></g><g><title>sse2_binary_scalar1_add_DOUBLE (simd.inc.src) (1 samples, 0.09%)</title><rect x="1158" y="372" width="1" height="15" fill="rgb(220,143,15)"/><text x="1161.00" y="382.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.09%)</title><rect x="1158" y="388" width="1" height="15" fill="rgb(208,110,54)"/><text x="1161.00" y="398.50"></text></g><g><title>array_multiply (number.c) (1 samples, 0.09%)</title><rect x="1159" y="260" width="1" height="15" fill="rgb(251,142,23)"/><text x="1162.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1159" y="276" width="1" height="15" fill="rgb(243,130,30)"/><text x="1162.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1159" y="292" width="1" height="15" fill="rgb(212,126,23)"/><text x="1162.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.09%)</title><rect x="1159" y="308" width="1" height="15" fill="rgb(252,66,22)"/><text x="1162.00" y="318.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 0.09%)</title><rect x="1160" y="292" width="1" height="15" fill="rgb(232,22,25)"/><text x="1163.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1161" y="292" width="2" height="15" fill="rgb(223,110,14)"/><text x="1164.00" y="302.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;) (25 samples, 2.29%)</title><rect x="1138" y="196" width="27" height="15" fill="rgb(251,222,46)"/><text x="1141.00" y="206.50">i..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (25 samples, 2.29%)</title><rect x="1138" y="212" width="27" height="15" fill="rgb(243,112,13)"/><text x="1141.00" y="222.50">a..</text></g><g><title>isclose (numpy/core/numeric.py) (24 samples, 2.20%)</title><rect x="1139" y="228" width="26" height="15" fill="rgb(250,38,42)"/><text x="1142.00" y="238.50">i..</text></g><g><title>within_tol (numpy/core/numeric.py) (9 samples, 0.82%)</title><rect x="1155" y="244" width="10" height="15" fill="rgb(238,63,30)"/><text x="1158.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.37%)</title><rect x="1160" y="260" width="5" height="15" fill="rgb(208,3,24)"/><text x="1163.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.37%)</title><rect x="1160" y="276" width="5" height="15" fill="rgb(209,64,20)"/><text x="1163.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.18%)</title><rect x="1163" y="292" width="2" height="15" fill="rgb(250,94,51)"/><text x="1166.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1164" y="308" width="1" height="15" fill="rgb(222,131,3)"/><text x="1167.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.09%)</title><rect x="1164" y="324" width="1" height="15" fill="rgb(243,114,9)"/><text x="1167.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.09%)</title><rect x="1167" y="276" width="1" height="15" fill="rgb(249,123,21)"/><text x="1170.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.09%)</title><rect x="1167" y="292" width="1" height="15" fill="rgb(218,225,28)"/><text x="1170.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.09%)</title><rect x="1167" y="308" width="1" height="15" fill="rgb(241,167,40)"/><text x="1170.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.09%)</title><rect x="1168" y="324" width="1" height="15" fill="rgb(208,2,29)"/><text x="1171.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.09%)</title><rect x="1168" y="340" width="1" height="15" fill="rgb(205,75,9)"/><text x="1171.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.09%)</title><rect x="1169" y="356" width="1" height="15" fill="rgb(209,155,5)"/><text x="1172.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.09%)</title><rect x="1169" y="372" width="1" height="15" fill="rgb(239,63,37)"/><text x="1172.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="1169" y="388" width="1" height="15" fill="rgb(235,138,52)"/><text x="1172.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="1169" y="404" width="1" height="15" fill="rgb(213,49,19)"/><text x="1172.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.09%)</title><rect x="1169" y="420" width="1" height="15" fill="rgb(247,137,20)"/><text x="1172.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1169" y="436" width="1" height="15" fill="rgb(208,39,46)"/><text x="1172.00" y="446.50"></text></g><g><title>0x7fccd613a8ea (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1169" y="452" width="1" height="15" fill="rgb(225,142,2)"/><text x="1172.00" y="462.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.18%)</title><rect x="1169" y="324" width="2" height="15" fill="rgb(248,148,13)"/><text x="1172.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.18%)</title><rect x="1169" y="340" width="2" height="15" fill="rgb(238,207,17)"/><text x="1172.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1170" y="356" width="1" height="15" fill="rgb(213,77,53)"/><text x="1173.00" y="366.50"></text></g><g><title>0x7fccd6158d50 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1170" y="372" width="1" height="15" fill="rgb(251,37,2)"/><text x="1173.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.18%)</title><rect x="1171" y="340" width="2" height="15" fill="rgb(218,127,28)"/><text x="1174.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.09%)</title><rect x="1172" y="356" width="1" height="15" fill="rgb(249,133,1)"/><text x="1175.00" y="366.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py) (202 samples, 18.48%)</title><rect x="958" y="164" width="219" height="15" fill="rgb(238,208,40)"/><text x="961.00" y="174.50">_get_median_predict (sklearn..</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py) (52 samples, 4.76%)</title><rect x="1120" y="180" width="57" height="15" fill="rgb(247,182,45)"/><text x="1123.00" y="190.50">stable..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (11 samples, 1.01%)</title><rect x="1165" y="196" width="12" height="15" fill="rgb(226,185,39)"/><text x="1168.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (11 samples, 1.01%)</title><rect x="1165" y="212" width="12" height="15" fill="rgb(229,181,36)"/><text x="1168.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (11 samples, 1.01%)</title><rect x="1165" y="228" width="12" height="15" fill="rgb(216,160,40)"/><text x="1168.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (10 samples, 0.91%)</title><rect x="1166" y="244" width="11" height="15" fill="rgb(253,46,50)"/><text x="1169.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (9 samples, 0.82%)</title><rect x="1167" y="260" width="10" height="15" fill="rgb(236,180,20)"/><text x="1170.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (8 samples, 0.73%)</title><rect x="1168" y="276" width="9" height="15" fill="rgb(224,165,29)"/><text x="1171.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (8 samples, 0.73%)</title><rect x="1168" y="292" width="9" height="15" fill="rgb(254,107,21)"/><text x="1171.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (8 samples, 0.73%)</title><rect x="1168" y="308" width="9" height="15" fill="rgb(227,125,5)"/><text x="1171.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (5 samples, 0.46%)</title><rect x="1171" y="324" width="6" height="15" fill="rgb(248,178,34)"/><text x="1174.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (3 samples, 0.27%)</title><rect x="1173" y="340" width="4" height="15" fill="rgb(208,7,6)"/><text x="1176.00" y="350.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (2 samples, 0.18%)</title><rect x="1180" y="196" width="2" height="15" fill="rgb(215,99,2)"/><text x="1183.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="1180" y="212" width="2" height="15" fill="rgb(246,91,28)"/><text x="1183.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.18%)</title><rect x="1182" y="196" width="2" height="15" fill="rgb(237,87,23)"/><text x="1185.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.09%)</title><rect x="1183" y="212" width="1" height="15" fill="rgb(243,199,17)"/><text x="1186.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.09%)</title><rect x="1183" y="228" width="1" height="15" fill="rgb(210,14,13)"/><text x="1186.00" y="238.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (11 samples, 1.01%)</title><rect x="1177" y="164" width="11" height="15" fill="rgb(222,120,19)"/><text x="1180.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (11 samples, 1.01%)</title><rect x="1177" y="180" width="11" height="15" fill="rgb(249,79,19)"/><text x="1180.00" y="190.50"></text></g><g><title>simplefilter (warnings.py) (4 samples, 0.37%)</title><rect x="1184" y="196" width="4" height="15" fill="rgb(254,96,40)"/><text x="1187.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (3 samples, 0.27%)</title><rect x="1185" y="212" width="3" height="15" fill="rgb(231,127,21)"/><text x="1188.00" y="222.50"></text></g><g><title>0x7fccd614ee50 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1187" y="228" width="1" height="15" fill="rgb(237,43,25)"/><text x="1190.00" y="238.50"></text></g><g><title>all (1,093 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(239,94,37)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py) (1,093 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(226,134,49)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py) (218 samples, 19.95%)</title><rect x="954" y="68" width="236" height="15" fill="rgb(244,33,15)"/><text x="957.00" y="78.50">profile_skl (bench_AdaBoostRegr..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py) (218 samples, 19.95%)</title><rect x="954" y="84" width="236" height="15" fill="rgb(226,55,3)"/><text x="957.00" y="94.50">setup_profile (bench_AdaBoostRe..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py) (218 samples, 19.95%)</title><rect x="954" y="100" width="236" height="15" fill="rgb(221,12,18)"/><text x="957.00" y="110.50">profile (bench_AdaBoostRegresso..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (216 samples, 19.76%)</title><rect x="956" y="116" width="234" height="15" fill="rgb(239,225,11)"/><text x="959.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (215 samples, 19.67%)</title><rect x="957" y="132" width="233" height="15" fill="rgb(242,1,14)"/><text x="960.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchm..</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py) (214 samples, 19.58%)</title><rect x="958" y="148" width="232" height="15" fill="rgb(212,150,32)"/><text x="961.00" y="158.50">predict (sklearn/ensemble/_wei..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.09%)</title><rect x="1188" y="164" width="2" height="15" fill="rgb(228,18,43)"/><text x="1191.00" y="174.50"></text></g></g></svg>