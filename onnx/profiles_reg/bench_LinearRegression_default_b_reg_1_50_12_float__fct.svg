<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1702" onload="init(evt)" viewBox="0 0 1200 1702" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1702" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1685.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1685.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="10" y="868" width="6" height="15" fill="rgb(217,222,35)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="10" y="884" width="6" height="15" fill="rgb(213,135,14)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="10" y="900" width="6" height="15" fill="rgb(229,165,43)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="10" y="916" width="6" height="15" fill="rgb(235,226,25)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="10" y="932" width="6" height="15" fill="rgb(253,119,7)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="10" y="948" width="6" height="15" fill="rgb(243,86,13)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="10" y="964" width="6" height="15" fill="rgb(233,20,34)"/><text x="13.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="10" y="980" width="6" height="15" fill="rgb(215,171,21)"/><text x="13.00" y="990.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="10" y="996" width="6" height="15" fill="rgb(249,203,7)"/><text x="13.00" y="1006.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="16" y="868" width="3" height="15" fill="rgb(247,150,41)"/><text x="19.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="16" y="884" width="3" height="15" fill="rgb(238,220,7)"/><text x="19.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="16" y="900" width="3" height="15" fill="rgb(239,195,8)"/><text x="19.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="16" y="916" width="3" height="15" fill="rgb(245,143,39)"/><text x="19.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="16" y="932" width="3" height="15" fill="rgb(247,180,12)"/><text x="19.00" y="942.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="16" y="948" width="3" height="15" fill="rgb(230,65,6)"/><text x="19.00" y="958.50"></text></g><g><title>dist_factory (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="16" y="964" width="3" height="15" fill="rgb(211,60,36)"/><text x="19.00" y="974.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="19" y="900" width="7" height="15" fill="rgb(214,110,2)"/><text x="22.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="19" y="916" width="7" height="15" fill="rgb(218,131,0)"/><text x="22.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="23" y="932" width="3" height="15" fill="rgb(222,115,5)"/><text x="26.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.28%)</title><rect x="23" y="948" width="3" height="15" fill="rgb(210,72,21)"/><text x="26.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.28%)</title><rect x="23" y="964" width="3" height="15" fill="rgb(248,105,24)"/><text x="26.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.28%)</title><rect x="23" y="980" width="3" height="15" fill="rgb(220,130,12)"/><text x="26.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="196" width="23" height="15" fill="rgb(247,135,47)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="212" width="23" height="15" fill="rgb(246,188,12)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="228" width="23" height="15" fill="rgb(214,175,17)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="244" width="23" height="15" fill="rgb(244,208,8)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.95%)</title><rect x="10" y="260" width="23" height="15" fill="rgb(209,63,6)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="276" width="23" height="15" fill="rgb(206,36,15)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (7 samples, 1.95%)</title><rect x="10" y="292" width="23" height="15" fill="rgb(229,63,32)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="308" width="23" height="15" fill="rgb(225,207,4)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="324" width="23" height="15" fill="rgb(250,13,44)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="340" width="23" height="15" fill="rgb(219,216,13)"/><text x="13.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.95%)</title><rect x="10" y="356" width="23" height="15" fill="rgb(230,162,52)"/><text x="13.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="372" width="23" height="15" fill="rgb(250,87,36)"/><text x="13.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (7 samples, 1.95%)</title><rect x="10" y="388" width="23" height="15" fill="rgb(211,151,10)"/><text x="13.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="404" width="23" height="15" fill="rgb(233,220,54)"/><text x="13.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="420" width="23" height="15" fill="rgb(217,88,28)"/><text x="13.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="436" width="23" height="15" fill="rgb(223,216,46)"/><text x="13.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.95%)</title><rect x="10" y="452" width="23" height="15" fill="rgb(213,53,27)"/><text x="13.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="468" width="23" height="15" fill="rgb(218,75,32)"/><text x="13.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (7 samples, 1.95%)</title><rect x="10" y="484" width="23" height="15" fill="rgb(222,65,7)"/><text x="13.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="500" width="23" height="15" fill="rgb(219,53,8)"/><text x="13.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="516" width="23" height="15" fill="rgb(216,105,19)"/><text x="13.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="532" width="23" height="15" fill="rgb(222,166,9)"/><text x="13.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.95%)</title><rect x="10" y="548" width="23" height="15" fill="rgb(249,75,22)"/><text x="13.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="564" width="23" height="15" fill="rgb(254,63,4)"/><text x="13.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (7 samples, 1.95%)</title><rect x="10" y="580" width="23" height="15" fill="rgb(215,76,51)"/><text x="13.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="596" width="23" height="15" fill="rgb(211,225,32)"/><text x="13.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="612" width="23" height="15" fill="rgb(245,155,8)"/><text x="13.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="628" width="23" height="15" fill="rgb(216,142,7)"/><text x="13.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="644" width="23" height="15" fill="rgb(217,132,34)"/><text x="13.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="660" width="23" height="15" fill="rgb(238,180,17)"/><text x="13.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="676" width="23" height="15" fill="rgb(230,177,43)"/><text x="13.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.95%)</title><rect x="10" y="692" width="23" height="15" fill="rgb(236,20,48)"/><text x="13.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="708" width="23" height="15" fill="rgb(245,198,1)"/><text x="13.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (7 samples, 1.95%)</title><rect x="10" y="724" width="23" height="15" fill="rgb(213,70,26)"/><text x="13.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="740" width="23" height="15" fill="rgb(210,80,43)"/><text x="13.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="756" width="23" height="15" fill="rgb(209,179,30)"/><text x="13.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="772" width="23" height="15" fill="rgb(254,125,40)"/><text x="13.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.95%)</title><rect x="10" y="788" width="23" height="15" fill="rgb(247,27,42)"/><text x="13.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.95%)</title><rect x="10" y="804" width="23" height="15" fill="rgb(221,91,13)"/><text x="13.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (7 samples, 1.95%)</title><rect x="10" y="820" width="23" height="15" fill="rgb(231,131,22)"/><text x="13.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py) (7 samples, 1.95%)</title><rect x="10" y="836" width="23" height="15" fill="rgb(219,4,3)"/><text x="13.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (7 samples, 1.95%)</title><rect x="10" y="852" width="23" height="15" fill="rgb(235,3,41)"/><text x="13.00" y="862.50">_..</text></g><g><title>add_entry (pkg_resources/__init__.py) (4 samples, 1.11%)</title><rect x="19" y="868" width="14" height="15" fill="rgb(206,184,42)"/><text x="22.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (4 samples, 1.11%)</title><rect x="19" y="884" width="14" height="15" fill="rgb(233,41,17)"/><text x="22.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="26" y="900" width="7" height="15" fill="rgb(229,179,11)"/><text x="29.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (2 samples, 0.56%)</title><rect x="26" y="916" width="7" height="15" fill="rgb(252,120,18)"/><text x="29.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (2 samples, 0.56%)</title><rect x="26" y="932" width="7" height="15" fill="rgb(233,111,28)"/><text x="29.00" y="942.50"></text></g><g><title>0x7f89b06a1237 (libc-2.29.so) (2 samples, 0.56%)</title><rect x="26" y="948" width="7" height="15" fill="rgb(248,70,1)"/><text x="29.00" y="958.50"></text></g><g><title>call (jinja2/runtime.py) (3 samples, 0.84%)</title><rect x="33" y="1588" width="9" height="15" fill="rgb(215,119,6)"/><text x="36.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.28%)</title><rect x="39" y="1604" width="3" height="15" fill="rgb(218,49,50)"/><text x="42.00" y="1614.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.28%)</title><rect x="39" y="1620" width="3" height="15" fill="rgb(238,182,33)"/><text x="42.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.28%)</title><rect x="39" y="1636" width="3" height="15" fill="rgb(222,210,34)"/><text x="42.00" y="1646.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.28%)</title><rect x="39" y="1652" width="3" height="15" fill="rgb(216,176,3)"/><text x="42.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="484" width="13" height="15" fill="rgb(240,42,45)"/><text x="36.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="500" width="13" height="15" fill="rgb(251,6,15)"/><text x="36.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="516" width="13" height="15" fill="rgb(213,195,1)"/><text x="36.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="532" width="13" height="15" fill="rgb(212,40,38)"/><text x="36.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.11%)</title><rect x="33" y="548" width="13" height="15" fill="rgb(238,38,22)"/><text x="36.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="564" width="13" height="15" fill="rgb(212,48,25)"/><text x="36.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 1.11%)</title><rect x="33" y="580" width="13" height="15" fill="rgb(247,139,54)"/><text x="36.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="596" width="13" height="15" fill="rgb(245,165,45)"/><text x="36.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="612" width="13" height="15" fill="rgb(232,103,22)"/><text x="36.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="628" width="13" height="15" fill="rgb(253,98,37)"/><text x="36.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.11%)</title><rect x="33" y="644" width="13" height="15" fill="rgb(240,32,29)"/><text x="36.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="660" width="13" height="15" fill="rgb(225,40,19)"/><text x="36.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 1.11%)</title><rect x="33" y="676" width="13" height="15" fill="rgb(244,135,47)"/><text x="36.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="692" width="13" height="15" fill="rgb(249,131,52)"/><text x="36.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="708" width="13" height="15" fill="rgb(235,204,47)"/><text x="36.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="724" width="13" height="15" fill="rgb(249,84,45)"/><text x="36.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.11%)</title><rect x="33" y="740" width="13" height="15" fill="rgb(237,215,51)"/><text x="36.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="756" width="13" height="15" fill="rgb(234,225,46)"/><text x="36.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 1.11%)</title><rect x="33" y="772" width="13" height="15" fill="rgb(219,35,32)"/><text x="36.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="788" width="13" height="15" fill="rgb(221,147,40)"/><text x="36.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="804" width="13" height="15" fill="rgb(226,182,22)"/><text x="36.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="820" width="13" height="15" fill="rgb(245,144,25)"/><text x="36.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.11%)</title><rect x="33" y="836" width="13" height="15" fill="rgb(210,126,51)"/><text x="36.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="852" width="13" height="15" fill="rgb(253,170,2)"/><text x="36.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 1.11%)</title><rect x="33" y="868" width="13" height="15" fill="rgb(225,106,41)"/><text x="36.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="884" width="13" height="15" fill="rgb(248,223,8)"/><text x="36.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="900" width="13" height="15" fill="rgb(249,116,28)"/><text x="36.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="916" width="13" height="15" fill="rgb(208,7,23)"/><text x="36.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="932" width="13" height="15" fill="rgb(243,104,23)"/><text x="36.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="948" width="13" height="15" fill="rgb(229,35,28)"/><text x="36.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="964" width="13" height="15" fill="rgb(207,206,45)"/><text x="36.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.11%)</title><rect x="33" y="980" width="13" height="15" fill="rgb(246,59,12)"/><text x="36.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="996" width="13" height="15" fill="rgb(248,20,25)"/><text x="36.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 1.11%)</title><rect x="33" y="1012" width="13" height="15" fill="rgb(234,11,35)"/><text x="36.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="1028" width="13" height="15" fill="rgb(229,14,39)"/><text x="36.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="1044" width="13" height="15" fill="rgb(236,182,16)"/><text x="36.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="1060" width="13" height="15" fill="rgb(215,130,38)"/><text x="36.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.11%)</title><rect x="33" y="1076" width="13" height="15" fill="rgb(247,85,49)"/><text x="36.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="1092" width="13" height="15" fill="rgb(220,37,27)"/><text x="36.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 1.11%)</title><rect x="33" y="1108" width="13" height="15" fill="rgb(216,1,49)"/><text x="36.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="1124" width="13" height="15" fill="rgb(206,55,26)"/><text x="36.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="1140" width="13" height="15" fill="rgb(226,59,20)"/><text x="36.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="1156" width="13" height="15" fill="rgb(217,145,11)"/><text x="36.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="1172" width="13" height="15" fill="rgb(235,122,46)"/><text x="36.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="1188" width="13" height="15" fill="rgb(226,184,22)"/><text x="36.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.11%)</title><rect x="33" y="1204" width="13" height="15" fill="rgb(210,2,54)"/><text x="36.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="1220" width="13" height="15" fill="rgb(247,125,8)"/><text x="36.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (4 samples, 1.11%)</title><rect x="33" y="1236" width="13" height="15" fill="rgb(233,120,29)"/><text x="36.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="1252" width="13" height="15" fill="rgb(237,137,34)"/><text x="36.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="1268" width="13" height="15" fill="rgb(252,35,22)"/><text x="36.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="1284" width="13" height="15" fill="rgb(240,177,32)"/><text x="36.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="1300" width="13" height="15" fill="rgb(206,84,21)"/><text x="36.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="1316" width="13" height="15" fill="rgb(247,182,1)"/><text x="36.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.11%)</title><rect x="33" y="1332" width="13" height="15" fill="rgb(227,9,31)"/><text x="36.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="1348" width="13" height="15" fill="rgb(249,143,48)"/><text x="36.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (4 samples, 1.11%)</title><rect x="33" y="1364" width="13" height="15" fill="rgb(252,190,45)"/><text x="36.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="1380" width="13" height="15" fill="rgb(207,170,20)"/><text x="36.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="1396" width="13" height="15" fill="rgb(212,167,24)"/><text x="36.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="1412" width="13" height="15" fill="rgb(220,218,37)"/><text x="36.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.11%)</title><rect x="33" y="1428" width="13" height="15" fill="rgb(241,95,5)"/><text x="36.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="33" y="1444" width="13" height="15" fill="rgb(208,177,54)"/><text x="36.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (4 samples, 1.11%)</title><rect x="33" y="1460" width="13" height="15" fill="rgb(239,199,52)"/><text x="36.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (4 samples, 1.11%)</title><rect x="33" y="1476" width="13" height="15" fill="rgb(237,170,42)"/><text x="36.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (4 samples, 1.11%)</title><rect x="33" y="1492" width="13" height="15" fill="rgb(243,75,34)"/><text x="36.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (4 samples, 1.11%)</title><rect x="33" y="1508" width="13" height="15" fill="rgb(246,195,18)"/><text x="36.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (4 samples, 1.11%)</title><rect x="33" y="1524" width="13" height="15" fill="rgb(208,61,29)"/><text x="36.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (4 samples, 1.11%)</title><rect x="33" y="1540" width="13" height="15" fill="rgb(219,132,24)"/><text x="36.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (4 samples, 1.11%)</title><rect x="33" y="1556" width="13" height="15" fill="rgb(247,44,4)"/><text x="36.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (4 samples, 1.11%)</title><rect x="33" y="1572" width="13" height="15" fill="rgb(209,51,36)"/><text x="36.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.28%)</title><rect x="42" y="1588" width="4" height="15" fill="rgb(209,30,35)"/><text x="45.00" y="1598.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py) (1 samples, 0.28%)</title><rect x="46" y="628" width="3" height="15" fill="rgb(251,46,18)"/><text x="49.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="644" width="3" height="15" fill="rgb(245,42,27)"/><text x="49.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="660" width="3" height="15" fill="rgb(220,85,52)"/><text x="49.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="676" width="3" height="15" fill="rgb(239,114,42)"/><text x="49.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="692" width="3" height="15" fill="rgb(243,198,34)"/><text x="49.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="708" width="3" height="15" fill="rgb(240,151,13)"/><text x="49.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="46" y="724" width="3" height="15" fill="rgb(238,164,52)"/><text x="49.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="740" width="3" height="15" fill="rgb(234,46,43)"/><text x="49.00" y="750.50"></text></g><g><title>&lt;module&gt; (onnx/numpy_helper.py) (1 samples, 0.28%)</title><rect x="46" y="756" width="3" height="15" fill="rgb(207,161,41)"/><text x="49.00" y="766.50"></text></g><g><title>system (platform.py) (1 samples, 0.28%)</title><rect x="46" y="772" width="3" height="15" fill="rgb(241,158,5)"/><text x="49.00" y="782.50"></text></g><g><title>uname (platform.py) (1 samples, 0.28%)</title><rect x="46" y="788" width="3" height="15" fill="rgb(218,135,1)"/><text x="49.00" y="798.50"></text></g><g><title>_syscmd_uname (platform.py) (1 samples, 0.28%)</title><rect x="46" y="804" width="3" height="15" fill="rgb(238,145,48)"/><text x="49.00" y="814.50"></text></g><g><title>popen (os.py) (1 samples, 0.28%)</title><rect x="46" y="820" width="3" height="15" fill="rgb(236,55,3)"/><text x="49.00" y="830.50"></text></g><g><title>__init__ (os.py) (1 samples, 0.28%)</title><rect x="46" y="836" width="3" height="15" fill="rgb(249,17,45)"/><text x="49.00" y="846.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 1.67%)</title><rect x="33" y="340" width="19" height="15" fill="rgb(232,217,48)"/><text x="36.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.67%)</title><rect x="33" y="356" width="19" height="15" fill="rgb(229,65,26)"/><text x="36.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.67%)</title><rect x="33" y="372" width="19" height="15" fill="rgb(222,107,3)"/><text x="36.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.67%)</title><rect x="33" y="388" width="19" height="15" fill="rgb(227,217,25)"/><text x="36.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.67%)</title><rect x="33" y="404" width="19" height="15" fill="rgb(232,13,48)"/><text x="36.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.67%)</title><rect x="33" y="420" width="19" height="15" fill="rgb(248,137,8)"/><text x="36.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 1.67%)</title><rect x="33" y="436" width="19" height="15" fill="rgb(217,128,21)"/><text x="36.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.67%)</title><rect x="33" y="452" width="19" height="15" fill="rgb(252,130,39)"/><text x="36.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.67%)</title><rect x="33" y="468" width="19" height="15" fill="rgb(245,14,3)"/><text x="36.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="46" y="484" width="6" height="15" fill="rgb(208,217,50)"/><text x="49.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="46" y="500" width="6" height="15" fill="rgb(226,174,24)"/><text x="49.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="46" y="516" width="6" height="15" fill="rgb(220,13,38)"/><text x="49.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.56%)</title><rect x="46" y="532" width="6" height="15" fill="rgb(224,117,7)"/><text x="49.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="46" y="548" width="6" height="15" fill="rgb(213,116,21)"/><text x="49.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="46" y="564" width="6" height="15" fill="rgb(219,94,32)"/><text x="49.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="46" y="580" width="6" height="15" fill="rgb(210,207,51)"/><text x="49.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="46" y="596" width="6" height="15" fill="rgb(222,54,25)"/><text x="49.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="46" y="612" width="6" height="15" fill="rgb(247,210,37)"/><text x="49.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.28%)</title><rect x="49" y="628" width="3" height="15" fill="rgb(208,174,36)"/><text x="52.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="644" width="3" height="15" fill="rgb(223,53,27)"/><text x="52.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="660" width="3" height="15" fill="rgb(215,164,49)"/><text x="52.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="676" width="3" height="15" fill="rgb(252,148,23)"/><text x="52.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="49" y="692" width="3" height="15" fill="rgb(236,146,32)"/><text x="52.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="708" width="3" height="15" fill="rgb(212,167,48)"/><text x="52.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.28%)</title><rect x="49" y="724" width="3" height="15" fill="rgb(214,53,13)"/><text x="52.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="740" width="3" height="15" fill="rgb(222,66,36)"/><text x="52.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="756" width="3" height="15" fill="rgb(235,23,9)"/><text x="52.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="772" width="3" height="15" fill="rgb(245,51,43)"/><text x="52.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="49" y="788" width="3" height="15" fill="rgb(225,54,50)"/><text x="52.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="804" width="3" height="15" fill="rgb(233,61,33)"/><text x="52.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.28%)</title><rect x="49" y="820" width="3" height="15" fill="rgb(243,14,38)"/><text x="52.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="836" width="3" height="15" fill="rgb(213,110,44)"/><text x="52.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="852" width="3" height="15" fill="rgb(231,29,38)"/><text x="52.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="868" width="3" height="15" fill="rgb(209,162,36)"/><text x="52.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="49" y="884" width="3" height="15" fill="rgb(243,107,3)"/><text x="52.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="900" width="3" height="15" fill="rgb(244,18,42)"/><text x="52.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.28%)</title><rect x="49" y="916" width="3" height="15" fill="rgb(228,164,51)"/><text x="52.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="932" width="3" height="15" fill="rgb(214,219,40)"/><text x="52.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="948" width="3" height="15" fill="rgb(230,83,10)"/><text x="52.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="964" width="3" height="15" fill="rgb(212,19,32)"/><text x="52.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="49" y="980" width="3" height="15" fill="rgb(217,67,7)"/><text x="52.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="996" width="3" height="15" fill="rgb(228,150,6)"/><text x="52.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.28%)</title><rect x="49" y="1012" width="3" height="15" fill="rgb(218,128,49)"/><text x="52.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1028" width="3" height="15" fill="rgb(247,191,53)"/><text x="52.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1044" width="3" height="15" fill="rgb(247,110,4)"/><text x="52.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1060" width="3" height="15" fill="rgb(217,148,54)"/><text x="52.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="49" y="1076" width="3" height="15" fill="rgb(229,154,48)"/><text x="52.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1092" width="3" height="15" fill="rgb(220,195,52)"/><text x="52.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.28%)</title><rect x="49" y="1108" width="3" height="15" fill="rgb(249,78,39)"/><text x="52.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1124" width="3" height="15" fill="rgb(210,84,2)"/><text x="52.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1140" width="3" height="15" fill="rgb(223,176,54)"/><text x="52.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1156" width="3" height="15" fill="rgb(215,218,28)"/><text x="52.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="49" y="1172" width="3" height="15" fill="rgb(226,227,51)"/><text x="52.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1188" width="3" height="15" fill="rgb(249,146,27)"/><text x="52.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.28%)</title><rect x="49" y="1204" width="3" height="15" fill="rgb(205,94,9)"/><text x="52.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1220" width="3" height="15" fill="rgb(213,24,25)"/><text x="52.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1236" width="3" height="15" fill="rgb(221,73,4)"/><text x="52.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1252" width="3" height="15" fill="rgb(245,183,47)"/><text x="52.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="49" y="1268" width="3" height="15" fill="rgb(252,121,37)"/><text x="52.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1284" width="3" height="15" fill="rgb(233,2,21)"/><text x="52.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.28%)</title><rect x="49" y="1300" width="3" height="15" fill="rgb(220,128,40)"/><text x="52.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1316" width="3" height="15" fill="rgb(243,140,25)"/><text x="52.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1332" width="3" height="15" fill="rgb(242,63,24)"/><text x="52.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1348" width="3" height="15" fill="rgb(236,226,45)"/><text x="52.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="49" y="1364" width="3" height="15" fill="rgb(236,155,21)"/><text x="52.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1380" width="3" height="15" fill="rgb(229,40,47)"/><text x="52.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/datetimes.py) (1 samples, 0.28%)</title><rect x="49" y="1396" width="3" height="15" fill="rgb(211,79,40)"/><text x="52.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1412" width="3" height="15" fill="rgb(242,167,4)"/><text x="52.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1428" width="3" height="15" fill="rgb(248,222,0)"/><text x="52.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1444" width="3" height="15" fill="rgb(218,216,8)"/><text x="52.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="49" y="1460" width="3" height="15" fill="rgb(211,193,34)"/><text x="52.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1476" width="3" height="15" fill="rgb(230,110,9)"/><text x="52.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/numeric.py) (1 samples, 0.28%)</title><rect x="49" y="1492" width="3" height="15" fill="rgb(250,229,32)"/><text x="52.00" y="1502.50"></text></g><g><title>_add_logical_methods (pandas/core/indexes/base.py) (1 samples, 0.28%)</title><rect x="49" y="1508" width="3" height="15" fill="rgb(249,19,22)"/><text x="52.00" y="1518.50"></text></g><g><title>_make_logical_function (pandas/core/indexes/base.py) (1 samples, 0.28%)</title><rect x="49" y="1524" width="3" height="15" fill="rgb(252,158,23)"/><text x="52.00" y="1534.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.28%)</title><rect x="49" y="1540" width="3" height="15" fill="rgb(246,137,43)"/><text x="52.00" y="1550.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.28%)</title><rect x="49" y="1556" width="3" height="15" fill="rgb(252,213,17)"/><text x="52.00" y="1566.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.28%)</title><rect x="49" y="1572" width="3" height="15" fill="rgb(242,114,18)"/><text x="52.00" y="1582.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.28%)</title><rect x="49" y="1588" width="3" height="15" fill="rgb(238,10,5)"/><text x="52.00" y="1598.50"></text></g><g><title>sre_ucs1_charset.isra.9 (python3.7) (1 samples, 0.28%)</title><rect x="49" y="1604" width="3" height="15" fill="rgb(206,7,3)"/><text x="52.00" y="1614.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (2 samples, 0.56%)</title><rect x="52" y="580" width="7" height="15" fill="rgb(244,191,10)"/><text x="55.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="596" width="7" height="15" fill="rgb(229,139,37)"/><text x="55.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="612" width="7" height="15" fill="rgb(230,163,1)"/><text x="55.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="628" width="7" height="15" fill="rgb(241,202,3)"/><text x="55.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="644" width="7" height="15" fill="rgb(234,9,22)"/><text x="55.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="660" width="7" height="15" fill="rgb(253,98,8)"/><text x="55.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="676" width="7" height="15" fill="rgb(230,7,24)"/><text x="55.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="52" y="692" width="7" height="15" fill="rgb(247,99,46)"/><text x="55.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="708" width="7" height="15" fill="rgb(248,197,12)"/><text x="55.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (2 samples, 0.56%)</title><rect x="52" y="724" width="7" height="15" fill="rgb(240,118,13)"/><text x="55.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="740" width="7" height="15" fill="rgb(245,58,24)"/><text x="55.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="756" width="7" height="15" fill="rgb(222,225,24)"/><text x="55.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="772" width="7" height="15" fill="rgb(226,108,29)"/><text x="55.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="52" y="788" width="7" height="15" fill="rgb(237,175,6)"/><text x="55.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="804" width="7" height="15" fill="rgb(209,138,8)"/><text x="55.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (2 samples, 0.56%)</title><rect x="52" y="820" width="7" height="15" fill="rgb(220,204,4)"/><text x="55.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="836" width="7" height="15" fill="rgb(214,128,33)"/><text x="55.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="852" width="7" height="15" fill="rgb(227,130,50)"/><text x="55.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="868" width="7" height="15" fill="rgb(205,27,44)"/><text x="55.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="52" y="884" width="7" height="15" fill="rgb(253,106,24)"/><text x="55.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="900" width="7" height="15" fill="rgb(225,10,5)"/><text x="55.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (2 samples, 0.56%)</title><rect x="52" y="916" width="7" height="15" fill="rgb(231,154,39)"/><text x="55.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="932" width="7" height="15" fill="rgb(238,158,1)"/><text x="55.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="948" width="7" height="15" fill="rgb(242,173,52)"/><text x="55.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="964" width="7" height="15" fill="rgb(226,28,46)"/><text x="55.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="980" width="7" height="15" fill="rgb(218,6,25)"/><text x="55.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="996" width="7" height="15" fill="rgb(218,94,23)"/><text x="55.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="1012" width="7" height="15" fill="rgb(213,198,9)"/><text x="55.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="52" y="1028" width="7" height="15" fill="rgb(211,96,31)"/><text x="55.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="1044" width="7" height="15" fill="rgb(249,176,8)"/><text x="55.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (2 samples, 0.56%)</title><rect x="52" y="1060" width="7" height="15" fill="rgb(216,177,9)"/><text x="55.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="1076" width="7" height="15" fill="rgb(210,20,16)"/><text x="55.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="1092" width="7" height="15" fill="rgb(229,64,46)"/><text x="55.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="1108" width="7" height="15" fill="rgb(245,142,24)"/><text x="55.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="52" y="1124" width="7" height="15" fill="rgb(231,112,47)"/><text x="55.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="1140" width="7" height="15" fill="rgb(253,31,47)"/><text x="55.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py) (2 samples, 0.56%)</title><rect x="52" y="1156" width="7" height="15" fill="rgb(234,220,20)"/><text x="55.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="1172" width="7" height="15" fill="rgb(222,111,3)"/><text x="55.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="1188" width="7" height="15" fill="rgb(232,158,21)"/><text x="55.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="52" y="1204" width="7" height="15" fill="rgb(213,80,13)"/><text x="55.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="52" y="1220" width="7" height="15" fill="rgb(218,130,17)"/><text x="55.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="52" y="1236" width="7" height="15" fill="rgb(250,74,20)"/><text x="55.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="52" y="1252" width="7" height="15" fill="rgb(220,185,34)"/><text x="55.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 4.46%)</title><rect x="10" y="68" width="52" height="15" fill="rgb(216,212,17)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 4.46%)</title><rect x="10" y="84" width="52" height="15" fill="rgb(234,137,38)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 4.46%)</title><rect x="10" y="100" width="52" height="15" fill="rgb(211,166,4)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 4.46%)</title><rect x="10" y="116" width="52" height="15" fill="rgb(242,78,15)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 4.46%)</title><rect x="10" y="132" width="52" height="15" fill="rgb(212,174,15)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_b_reg.py) (16 samples, 4.46%)</title><rect x="10" y="148" width="52" height="15" fill="rgb(236,206,12)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 4.46%)</title><rect x="10" y="164" width="52" height="15" fill="rgb(205,192,36)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 4.46%)</title><rect x="10" y="180" width="52" height="15" fill="rgb(228,88,41)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.51%)</title><rect x="33" y="196" width="29" height="15" fill="rgb(247,105,25)"/><text x="36.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.51%)</title><rect x="33" y="212" width="29" height="15" fill="rgb(242,9,39)"/><text x="36.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.51%)</title><rect x="33" y="228" width="29" height="15" fill="rgb(218,39,6)"/><text x="36.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (9 samples, 2.51%)</title><rect x="33" y="244" width="29" height="15" fill="rgb(251,35,4)"/><text x="36.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.51%)</title><rect x="33" y="260" width="29" height="15" fill="rgb(244,27,36)"/><text x="36.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.51%)</title><rect x="33" y="276" width="29" height="15" fill="rgb(233,119,9)"/><text x="36.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.51%)</title><rect x="33" y="292" width="29" height="15" fill="rgb(243,103,41)"/><text x="36.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.51%)</title><rect x="33" y="308" width="29" height="15" fill="rgb(215,3,29)"/><text x="36.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.51%)</title><rect x="33" y="324" width="29" height="15" fill="rgb(243,3,11)"/><text x="36.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 0.84%)</title><rect x="52" y="340" width="10" height="15" fill="rgb(229,47,49)"/><text x="55.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.84%)</title><rect x="52" y="356" width="10" height="15" fill="rgb(241,109,2)"/><text x="55.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.84%)</title><rect x="52" y="372" width="10" height="15" fill="rgb(253,177,28)"/><text x="55.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.84%)</title><rect x="52" y="388" width="10" height="15" fill="rgb(214,229,5)"/><text x="55.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.84%)</title><rect x="52" y="404" width="10" height="15" fill="rgb(248,215,25)"/><text x="55.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.84%)</title><rect x="52" y="420" width="10" height="15" fill="rgb(220,75,54)"/><text x="55.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.84%)</title><rect x="52" y="436" width="10" height="15" fill="rgb(232,132,6)"/><text x="55.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.84%)</title><rect x="52" y="452" width="10" height="15" fill="rgb(235,185,23)"/><text x="55.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.84%)</title><rect x="52" y="468" width="10" height="15" fill="rgb(252,224,37)"/><text x="55.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 0.84%)</title><rect x="52" y="484" width="10" height="15" fill="rgb(231,25,24)"/><text x="55.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.84%)</title><rect x="52" y="500" width="10" height="15" fill="rgb(215,145,32)"/><text x="55.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.84%)</title><rect x="52" y="516" width="10" height="15" fill="rgb(249,125,18)"/><text x="55.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.84%)</title><rect x="52" y="532" width="10" height="15" fill="rgb(218,164,44)"/><text x="55.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.84%)</title><rect x="52" y="548" width="10" height="15" fill="rgb(206,204,4)"/><text x="55.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.84%)</title><rect x="52" y="564" width="10" height="15" fill="rgb(249,220,14)"/><text x="55.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.28%)</title><rect x="59" y="580" width="3" height="15" fill="rgb(226,149,42)"/><text x="62.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="596" width="3" height="15" fill="rgb(243,96,24)"/><text x="62.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="612" width="3" height="15" fill="rgb(245,138,13)"/><text x="62.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="628" width="3" height="15" fill="rgb(213,7,49)"/><text x="62.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="59" y="644" width="3" height="15" fill="rgb(228,25,13)"/><text x="62.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="660" width="3" height="15" fill="rgb(254,105,48)"/><text x="62.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.28%)</title><rect x="59" y="676" width="3" height="15" fill="rgb(243,199,48)"/><text x="62.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="692" width="3" height="15" fill="rgb(246,134,1)"/><text x="62.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="708" width="3" height="15" fill="rgb(232,201,44)"/><text x="62.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="724" width="3" height="15" fill="rgb(210,126,12)"/><text x="62.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="59" y="740" width="3" height="15" fill="rgb(209,31,34)"/><text x="62.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="756" width="3" height="15" fill="rgb(239,110,12)"/><text x="62.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.28%)</title><rect x="59" y="772" width="3" height="15" fill="rgb(248,46,53)"/><text x="62.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="788" width="3" height="15" fill="rgb(235,177,53)"/><text x="62.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="804" width="3" height="15" fill="rgb(228,134,11)"/><text x="62.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="820" width="3" height="15" fill="rgb(248,205,27)"/><text x="62.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="59" y="836" width="3" height="15" fill="rgb(222,109,7)"/><text x="62.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="852" width="3" height="15" fill="rgb(244,69,35)"/><text x="62.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.28%)</title><rect x="59" y="868" width="3" height="15" fill="rgb(253,119,33)"/><text x="62.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="884" width="3" height="15" fill="rgb(241,59,48)"/><text x="62.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="900" width="3" height="15" fill="rgb(241,50,52)"/><text x="62.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="916" width="3" height="15" fill="rgb(250,103,50)"/><text x="62.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="59" y="932" width="3" height="15" fill="rgb(221,99,46)"/><text x="62.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="948" width="3" height="15" fill="rgb(229,28,34)"/><text x="62.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.28%)</title><rect x="59" y="964" width="3" height="15" fill="rgb(211,168,7)"/><text x="62.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="980" width="3" height="15" fill="rgb(217,86,42)"/><text x="62.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="996" width="3" height="15" fill="rgb(206,187,51)"/><text x="62.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="1012" width="3" height="15" fill="rgb(245,80,48)"/><text x="62.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="59" y="1028" width="3" height="15" fill="rgb(242,125,49)"/><text x="62.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="1044" width="3" height="15" fill="rgb(246,207,26)"/><text x="62.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (1 samples, 0.28%)</title><rect x="59" y="1060" width="3" height="15" fill="rgb(236,46,18)"/><text x="62.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="1076" width="3" height="15" fill="rgb(227,51,29)"/><text x="62.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="1092" width="3" height="15" fill="rgb(235,15,34)"/><text x="62.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="1108" width="3" height="15" fill="rgb(213,81,9)"/><text x="62.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="1124" width="3" height="15" fill="rgb(222,217,49)"/><text x="62.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="1140" width="3" height="15" fill="rgb(235,204,46)"/><text x="62.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="1156" width="3" height="15" fill="rgb(253,54,23)"/><text x="62.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="59" y="1172" width="3" height="15" fill="rgb(212,24,30)"/><text x="62.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="1188" width="3" height="15" fill="rgb(250,6,47)"/><text x="62.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (1 samples, 0.28%)</title><rect x="59" y="1204" width="3" height="15" fill="rgb(246,0,34)"/><text x="62.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="1220" width="3" height="15" fill="rgb(242,174,33)"/><text x="62.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="1236" width="3" height="15" fill="rgb(249,77,33)"/><text x="62.00" y="1246.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="59" y="1252" width="3" height="15" fill="rgb(236,52,6)"/><text x="62.00" y="1262.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="59" y="1268" width="3" height="15" fill="rgb(248,41,11)"/><text x="62.00" y="1278.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="59" y="1284" width="3" height="15" fill="rgb(246,192,33)"/><text x="62.00" y="1294.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="59" y="1300" width="3" height="15" fill="rgb(217,133,44)"/><text x="62.00" y="1310.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="59" y="1316" width="3" height="15" fill="rgb(243,71,33)"/><text x="62.00" y="1326.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="59" y="1332" width="3" height="15" fill="rgb(229,36,28)"/><text x="62.00" y="1342.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="59" y="1348" width="3" height="15" fill="rgb(241,141,35)"/><text x="62.00" y="1358.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.56%)</title><rect x="62" y="116" width="7" height="15" fill="rgb(222,138,14)"/><text x="65.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.28%)</title><rect x="65" y="132" width="4" height="15" fill="rgb(216,108,32)"/><text x="68.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.28%)</title><rect x="65" y="148" width="4" height="15" fill="rgb(245,95,3)"/><text x="68.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.56%)</title><rect x="118" y="180" width="7" height="15" fill="rgb(208,206,43)"/><text x="121.00" y="190.50"></text></g><g><title>0x7f896e691ff9 (?) (1 samples, 0.28%)</title><rect x="148" y="212" width="3" height="15" fill="rgb(221,127,30)"/><text x="151.00" y="222.50"></text></g><g><title>0x7f896e68cef6 (?) (1 samples, 0.28%)</title><rect x="148" y="228" width="3" height="15" fill="rgb(214,50,29)"/><text x="151.00" y="238.50"></text></g><g><title>0x7f896e681962 (?) (1 samples, 0.28%)</title><rect x="148" y="244" width="3" height="15" fill="rgb(240,32,3)"/><text x="151.00" y="254.50"></text></g><g><title>0x7f896e6b57a7 (?) (1 samples, 0.28%)</title><rect x="148" y="260" width="3" height="15" fill="rgb(210,135,44)"/><text x="151.00" y="270.50"></text></g><g><title>0x7f896e6b4ea2 (?) (1 samples, 0.28%)</title><rect x="148" y="276" width="3" height="15" fill="rgb(218,58,52)"/><text x="151.00" y="286.50"></text></g><g><title>0x7f896e6b4bf8 (?) (1 samples, 0.28%)</title><rect x="148" y="292" width="3" height="15" fill="rgb(222,200,35)"/><text x="151.00" y="302.50"></text></g><g><title>0x7f896e6b44d2 (?) (1 samples, 0.28%)</title><rect x="148" y="308" width="3" height="15" fill="rgb(225,56,2)"/><text x="151.00" y="318.50"></text></g><g><title>0x7fff459c0a01 ([vdso]) (1 samples, 0.28%)</title><rect x="151" y="212" width="3" height="15" fill="rgb(242,111,7)"/><text x="154.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (4 samples, 1.11%)</title><rect x="154" y="212" width="13" height="15" fill="rgb(237,156,7)"/><text x="157.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="164" y="228" width="3" height="15" fill="rgb(206,73,34)"/><text x="167.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="164" y="244" width="3" height="15" fill="rgb(217,193,3)"/><text x="167.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="164" y="260" width="3" height="15" fill="rgb(211,28,52)"/><text x="167.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="164" y="276" width="3" height="15" fill="rgb(219,165,19)"/><text x="167.00" y="286.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_value [clone .isra.101] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="164" y="292" width="3" height="15" fill="rgb(226,22,48)"/><text x="167.00" y="302.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="167" y="228" width="4" height="15" fill="rgb(251,124,24)"/><text x="170.00" y="238.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="184" y="292" width="3" height="15" fill="rgb(244,65,28)"/><text x="187.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="187" y="292" width="3" height="15" fill="rgb(214,35,27)"/><text x="190.00" y="302.50"></text></g><g><title>0x7f89b0661957 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="187" y="308" width="3" height="15" fill="rgb(226,200,15)"/><text x="190.00" y="318.50"></text></g><g><title>0x7f89b0681dbf (libc-2.29.so) (1 samples, 0.28%)</title><rect x="190" y="308" width="4" height="15" fill="rgb(251,189,6)"/><text x="193.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.11%)</title><rect x="190" y="292" width="13" height="15" fill="rgb(235,50,4)"/><text x="193.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.84%)</title><rect x="194" y="308" width="9" height="15" fill="rgb(209,70,39)"/><text x="197.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.56%)</title><rect x="197" y="324" width="6" height="15" fill="rgb(246,199,46)"/><text x="200.00" y="334.50"></text></g><g><title>0x7f89b0662efa (libc-2.29.so) (1 samples, 0.28%)</title><rect x="200" y="340" width="3" height="15" fill="rgb(212,80,6)"/><text x="203.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="203" y="292" width="7" height="15" fill="rgb(229,117,27)"/><text x="206.00" y="302.50"></text></g><g><title>onnxruntime::TensorTypeBase::AsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="207" y="308" width="3" height="15" fill="rgb(223,112,49)"/><text x="210.00" y="318.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="210" y="340" width="3" height="15" fill="rgb(205,7,3)"/><text x="213.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="213" y="340" width="4" height="15" fill="rgb(247,1,25)"/><text x="216.00" y="350.50"></text></g><g><title>0x7f896e6590f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="220" y="356" width="3" height="15" fill="rgb(247,154,8)"/><text x="223.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.84%)</title><rect x="223" y="420" width="10" height="15" fill="rgb(228,69,22)"/><text x="226.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.84%)</title><rect x="223" y="436" width="10" height="15" fill="rgb(224,0,4)"/><text x="226.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.84%)</title><rect x="223" y="452" width="10" height="15" fill="rgb(251,72,6)"/><text x="226.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="226" y="468" width="7" height="15" fill="rgb(250,51,15)"/><text x="229.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="226" y="484" width="7" height="15" fill="rgb(243,169,12)"/><text x="229.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="226" y="500" width="7" height="15" fill="rgb(240,156,36)"/><text x="229.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="230" y="516" width="3" height="15" fill="rgb(246,4,45)"/><text x="233.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="230" y="532" width="3" height="15" fill="rgb(234,14,52)"/><text x="233.00" y="542.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 5.57%)</title><rect x="171" y="260" width="65" height="15" fill="rgb(233,61,6)"/><text x="174.00" y="270.50">onnxrun..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 4.46%)</title><rect x="184" y="276" width="52" height="15" fill="rgb(230,95,14)"/><text x="187.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.23%)</title><rect x="210" y="292" width="26" height="15" fill="rgb(252,50,25)"/><text x="213.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.23%)</title><rect x="210" y="308" width="26" height="15" fill="rgb(217,101,17)"/><text x="213.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.23%)</title><rect x="210" y="324" width="26" height="15" fill="rgb(245,144,45)"/><text x="213.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.67%)</title><rect x="217" y="340" width="19" height="15" fill="rgb(213,19,39)"/><text x="220.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.11%)</title><rect x="223" y="356" width="13" height="15" fill="rgb(216,196,18)"/><text x="226.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.11%)</title><rect x="223" y="372" width="13" height="15" fill="rgb(207,74,26)"/><text x="226.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.11%)</title><rect x="223" y="388" width="13" height="15" fill="rgb(239,171,27)"/><text x="226.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.11%)</title><rect x="223" y="404" width="13" height="15" fill="rgb(231,4,13)"/><text x="226.00" y="414.50"></text></g><g><title>onnxruntime::PrimitiveDataType&lt;float&gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="233" y="420" width="3" height="15" fill="rgb(212,168,52)"/><text x="236.00" y="430.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="236" y="260" width="7" height="15" fill="rgb(213,76,45)"/><text x="239.00" y="270.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="240" y="276" width="3" height="15" fill="rgb(252,122,49)"/><text x="243.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.28%)</title><rect x="249" y="292" width="4" height="15" fill="rgb(221,12,45)"/><text x="252.00" y="302.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.11%)</title><rect x="243" y="260" width="13" height="15" fill="rgb(221,71,40)"/><text x="246.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (3 samples, 0.84%)</title><rect x="246" y="276" width="10" height="15" fill="rgb(251,195,49)"/><text x="249.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="253" y="292" width="3" height="15" fill="rgb(205,24,13)"/><text x="256.00" y="302.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 7.52%)</title><rect x="171" y="244" width="88" height="15" fill="rgb(224,51,40)"/><text x="174.00" y="254.50">onnxruntim..</text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="256" y="260" width="3" height="15" fill="rgb(254,204,44)"/><text x="259.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="263" y="276" width="3" height="15" fill="rgb(236,69,13)"/><text x="266.00" y="286.50"></text></g><g><title>0x7f89b0681d50 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="263" y="292" width="3" height="15" fill="rgb(228,175,41)"/><text x="266.00" y="302.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.84%)</title><rect x="259" y="244" width="10" height="15" fill="rgb(230,50,2)"/><text x="262.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.84%)</title><rect x="259" y="260" width="10" height="15" fill="rgb(208,125,19)"/><text x="262.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="266" y="276" width="3" height="15" fill="rgb(232,103,42)"/><text x="269.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (59 samples, 16.43%)</title><rect x="79" y="132" width="193" height="15" fill="rgb(242,140,19)"/><text x="82.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_b..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (57 samples, 15.88%)</title><rect x="85" y="148" width="187" height="15" fill="rgb(247,13,37)"/><text x="88.00" y="158.50">run (mlprodict/onnxrt/on..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (52 samples, 14.48%)</title><rect x="102" y="164" width="170" height="15" fill="rgb(249,166,25)"/><text x="105.00" y="174.50">_run_whole_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (45 samples, 12.53%)</title><rect x="125" y="180" width="147" height="15" fill="rgb(247,197,6)"/><text x="128.00" y="190.50">run (mlprodict/onn..</text></g><g><title>run (onnxruntime/capi/session.py) (42 samples, 11.70%)</title><rect x="134" y="196" width="138" height="15" fill="rgb(252,18,30)"/><text x="137.00" y="206.50">run (onnxruntime/..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 8.91%)</title><rect x="167" y="212" width="105" height="15" fill="rgb(235,138,11)"/><text x="170.00" y="222.50">pybind11::cp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (31 samples, 8.64%)</title><rect x="171" y="228" width="101" height="15" fill="rgb(246,130,11)"/><text x="174.00" y="238.50">void pybind1..</text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="269" y="244" width="3" height="15" fill="rgb(207,96,28)"/><text x="272.00" y="254.50"></text></g><g><title>pybind11::detail::instance::get_value_and_holder (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="269" y="260" width="3" height="15" fill="rgb(220,38,4)"/><text x="272.00" y="270.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.28%)</title><rect x="272" y="132" width="4" height="15" fill="rgb(250,62,49)"/><text x="275.00" y="142.50"></text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py) (66 samples, 18.38%)</title><rect x="62" y="100" width="217" height="15" fill="rgb(210,181,49)"/><text x="65.00" y="110.50">profile (bench_LinearRegress..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (64 samples, 17.83%)</title><rect x="69" y="116" width="210" height="15" fill="rgb(230,63,6)"/><text x="72.00" y="126.50">time_predict (mlprodict/asv..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.28%)</title><rect x="276" y="132" width="3" height="15" fill="rgb(241,71,32)"/><text x="279.00" y="142.50"></text></g><g><title>profile_ort (bench_LinearRegression_default_b_reg_1_50_12_float_.py) (67 samples, 18.66%)</title><rect x="62" y="68" width="220" height="15" fill="rgb(231,126,40)"/><text x="65.00" y="78.50">profile_ort (bench_LinearRegr..</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py) (67 samples, 18.66%)</title><rect x="62" y="84" width="220" height="15" fill="rgb(245,162,29)"/><text x="65.00" y="94.50">setup_profile (bench_LinearRe..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="279" y="100" width="3" height="15" fill="rgb(253,187,38)"/><text x="282.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="279" y="116" width="3" height="15" fill="rgb(229,226,12)"/><text x="282.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="279" y="132" width="3" height="15" fill="rgb(219,43,28)"/><text x="282.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.28%)</title><rect x="279" y="148" width="3" height="15" fill="rgb(234,36,5)"/><text x="282.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.28%)</title><rect x="279" y="164" width="3" height="15" fill="rgb(219,137,28)"/><text x="282.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="279" y="180" width="3" height="15" fill="rgb(224,135,25)"/><text x="282.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="279" y="196" width="3" height="15" fill="rgb(248,137,41)"/><text x="282.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="279" y="212" width="3" height="15" fill="rgb(246,55,14)"/><text x="282.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="279" y="228" width="3" height="15" fill="rgb(254,182,0)"/><text x="282.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="279" y="244" width="3" height="15" fill="rgb(234,152,37)"/><text x="282.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.28%)</title><rect x="279" y="260" width="3" height="15" fill="rgb(227,178,43)"/><text x="282.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="279" y="276" width="3" height="15" fill="rgb(206,63,38)"/><text x="282.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="279" y="292" width="3" height="15" fill="rgb(210,167,51)"/><text x="282.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="279" y="308" width="3" height="15" fill="rgb(254,96,32)"/><text x="282.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="279" y="324" width="3" height="15" fill="rgb(221,40,21)"/><text x="282.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="279" y="340" width="3" height="15" fill="rgb(216,128,4)"/><text x="282.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.28%)</title><rect x="279" y="356" width="3" height="15" fill="rgb(225,68,39)"/><text x="282.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="279" y="372" width="3" height="15" fill="rgb(241,42,14)"/><text x="282.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="279" y="388" width="3" height="15" fill="rgb(229,104,1)"/><text x="282.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="279" y="404" width="3" height="15" fill="rgb(250,181,13)"/><text x="282.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="279" y="420" width="3" height="15" fill="rgb(238,12,22)"/><text x="282.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="279" y="436" width="3" height="15" fill="rgb(238,140,17)"/><text x="282.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (1 samples, 0.28%)</title><rect x="279" y="452" width="3" height="15" fill="rgb(216,6,34)"/><text x="282.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="279" y="468" width="3" height="15" fill="rgb(213,102,7)"/><text x="282.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="279" y="484" width="3" height="15" fill="rgb(218,224,6)"/><text x="282.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="279" y="500" width="3" height="15" fill="rgb(215,72,12)"/><text x="282.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="279" y="516" width="3" height="15" fill="rgb(226,156,25)"/><text x="282.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="279" y="532" width="3" height="15" fill="rgb(207,9,15)"/><text x="282.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="279" y="548" width="3" height="15" fill="rgb(243,128,43)"/><text x="282.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.28%)</title><rect x="279" y="564" width="3" height="15" fill="rgb(230,131,34)"/><text x="282.00" y="574.50"></text></g><g><title>0x7f89b08e9995 (libdl-2.29.so) (1 samples, 0.28%)</title><rect x="279" y="580" width="3" height="15" fill="rgb(246,6,2)"/><text x="282.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.28%)</title><rect x="279" y="596" width="3" height="15" fill="rgb(209,179,53)"/><text x="282.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.28%)</title><rect x="279" y="612" width="3" height="15" fill="rgb(215,97,54)"/><text x="282.00" y="622.50"></text></g><g><title>0x7f89b08e9258 (libdl-2.29.so) (1 samples, 0.28%)</title><rect x="279" y="628" width="3" height="15" fill="rgb(205,125,43)"/><text x="282.00" y="638.50"></text></g><g><title>0x7f89b0936d7a (ld-2.29.so) (1 samples, 0.28%)</title><rect x="279" y="644" width="3" height="15" fill="rgb(219,103,9)"/><text x="282.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.28%)</title><rect x="279" y="660" width="3" height="15" fill="rgb(254,23,27)"/><text x="282.00" y="670.50"></text></g><g><title>0x7f89b0937345 (ld-2.29.so) (1 samples, 0.28%)</title><rect x="279" y="676" width="3" height="15" fill="rgb(227,222,22)"/><text x="282.00" y="686.50"></text></g><g><title>0x7f89b092ffec (ld-2.29.so) (1 samples, 0.28%)</title><rect x="279" y="692" width="3" height="15" fill="rgb(221,182,8)"/><text x="282.00" y="702.50"></text></g><g><title>0x7f89b092e56b (ld-2.29.so) (1 samples, 0.28%)</title><rect x="279" y="708" width="3" height="15" fill="rgb(248,183,54)"/><text x="282.00" y="718.50"></text></g><g><title>0x7f89b092e102 (ld-2.29.so) (1 samples, 0.28%)</title><rect x="279" y="724" width="3" height="15" fill="rgb(233,33,43)"/><text x="282.00" y="734.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.28%)</title><rect x="289" y="116" width="3" height="15" fill="rgb(233,134,47)"/><text x="292.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.28%)</title><rect x="289" y="132" width="3" height="15" fill="rgb(230,225,10)"/><text x="292.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.28%)</title><rect x="289" y="148" width="3" height="15" fill="rgb(243,203,47)"/><text x="292.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.28%)</title><rect x="364" y="180" width="4" height="15" fill="rgb(237,154,25)"/><text x="367.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.56%)</title><rect x="404" y="196" width="7" height="15" fill="rgb(230,18,48)"/><text x="407.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.56%)</title><rect x="447" y="324" width="6" height="15" fill="rgb(244,117,15)"/><text x="450.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.28%)</title><rect x="450" y="340" width="3" height="15" fill="rgb(234,92,52)"/><text x="453.00" y="350.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.28%)</title><rect x="450" y="356" width="3" height="15" fill="rgb(233,158,16)"/><text x="453.00" y="366.50"></text></g><g><title>FLOAT_dot (arraytypes.c.src) (1 samples, 0.28%)</title><rect x="460" y="340" width="3" height="15" fill="rgb(232,142,12)"/><text x="463.00" y="350.50"></text></g><g><title>cblas_sdot (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="460" y="356" width="3" height="15" fill="rgb(217,93,0)"/><text x="463.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="463" y="340" width="3" height="15" fill="rgb(206,119,21)"/><text x="466.00" y="350.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (2 samples, 0.56%)</title><rect x="466" y="340" width="7" height="15" fill="rgb(205,55,12)"/><text x="469.00" y="350.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="473" y="340" width="3" height="15" fill="rgb(211,48,3)"/><text x="476.00" y="350.50"></text></g><g><title>_bad_strides (cblasfuncs.c) (1 samples, 0.28%)</title><rect x="476" y="340" width="4" height="15" fill="rgb(223,59,48)"/><text x="479.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (16 samples, 4.46%)</title><rect x="430" y="244" width="53" height="15" fill="rgb(222,85,19)"/><text x="433.00" y="254.50">numpy..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (14 samples, 3.90%)</title><rect x="437" y="260" width="46" height="15" fill="rgb(243,177,40)"/><text x="440.00" y="270.50">dot ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (14 samples, 3.90%)</title><rect x="437" y="276" width="46" height="15" fill="rgb(249,100,3)"/><text x="440.00" y="286.50">arra..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (12 samples, 3.34%)</title><rect x="443" y="292" width="40" height="15" fill="rgb(238,58,9)"/><text x="446.00" y="302.50">arr..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (11 samples, 3.06%)</title><rect x="447" y="308" width="36" height="15" fill="rgb(247,40,54)"/><text x="450.00" y="318.50">PyA..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (9 samples, 2.51%)</title><rect x="453" y="324" width="30" height="15" fill="rgb(233,118,2)"/><text x="456.00" y="334.50">cb..</text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.28%)</title><rect x="480" y="340" width="3" height="15" fill="rgb(223,46,28)"/><text x="483.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.28%)</title><rect x="480" y="356" width="3" height="15" fill="rgb(227,97,19)"/><text x="483.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="480" y="372" width="3" height="15" fill="rgb(236,178,18)"/><text x="483.00" y="382.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.56%)</title><rect x="483" y="260" width="6" height="15" fill="rgb(221,206,24)"/><text x="486.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.28%)</title><rect x="486" y="276" width="3" height="15" fill="rgb(254,91,33)"/><text x="489.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.28%)</title><rect x="489" y="276" width="4" height="15" fill="rgb(208,211,30)"/><text x="492.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.28%)</title><rect x="489" y="292" width="4" height="15" fill="rgb(211,48,49)"/><text x="492.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.28%)</title><rect x="499" y="308" width="4" height="15" fill="rgb(245,43,16)"/><text x="502.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.28%)</title><rect x="506" y="324" width="3" height="15" fill="rgb(233,63,22)"/><text x="509.00" y="334.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.28%)</title><rect x="506" y="340" width="3" height="15" fill="rgb(211,215,12)"/><text x="509.00" y="350.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.28%)</title><rect x="509" y="324" width="3" height="15" fill="rgb(227,92,41)"/><text x="512.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.11%)</title><rect x="503" y="308" width="13" height="15" fill="rgb(238,88,16)"/><text x="506.00" y="318.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.28%)</title><rect x="512" y="324" width="4" height="15" fill="rgb(207,2,41)"/><text x="515.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.28%)</title><rect x="516" y="308" width="3" height="15" fill="rgb(225,0,5)"/><text x="519.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.28%)</title><rect x="516" y="324" width="3" height="15" fill="rgb(235,44,10)"/><text x="519.00" y="334.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (67 samples, 18.66%)</title><rect x="302" y="132" width="220" height="15" fill="rgb(205,11,44)"/><text x="305.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (67 samples, 18.66%)</title><rect x="302" y="148" width="220" height="15" fill="rgb(243,132,42)"/><text x="305.00" y="158.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (61 samples, 16.99%)</title><rect x="322" y="164" width="200" height="15" fill="rgb(221,63,0)"/><text x="325.00" y="174.50">_run_sequence_runtime (mlp..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (47 samples, 13.09%)</title><rect x="368" y="180" width="154" height="15" fill="rgb(243,121,6)"/><text x="371.00" y="190.50">run (mlprodict/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (34 samples, 9.47%)</title><rect x="411" y="196" width="111" height="15" fill="rgb(216,25,51)"/><text x="414.00" y="206.50">run (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (34 samples, 9.47%)</title><rect x="411" y="212" width="111" height="15" fill="rgb(205,41,47)"/><text x="414.00" y="222.50">run (mlprodic..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py) (32 samples, 8.91%)</title><rect x="417" y="228" width="105" height="15" fill="rgb(244,171,16)"/><text x="420.00" y="238.50">_run (mlprod..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 3.34%)</title><rect x="483" y="244" width="39" height="15" fill="rgb(226,170,29)"/><text x="486.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 2.79%)</title><rect x="489" y="260" width="33" height="15" fill="rgb(223,26,28)"/><text x="492.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (9 samples, 2.51%)</title><rect x="493" y="276" width="29" height="15" fill="rgb(211,206,40)"/><text x="496.00" y="286.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (8 samples, 2.23%)</title><rect x="496" y="292" width="26" height="15" fill="rgb(231,53,46)"/><text x="499.00" y="302.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.28%)</title><rect x="519" y="308" width="3" height="15" fill="rgb(249,74,6)"/><text x="522.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.28%)</title><rect x="519" y="324" width="3" height="15" fill="rgb(212,204,51)"/><text x="522.00" y="334.50"></text></g><g><title>profile_pyrt (bench_LinearRegression_default_b_reg_1_50_12_float_.py) (75 samples, 20.89%)</title><rect x="282" y="68" width="247" height="15" fill="rgb(212,203,36)"/><text x="285.00" y="78.50">profile_pyrt (bench_LinearRegres..</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py) (75 samples, 20.89%)</title><rect x="282" y="84" width="247" height="15" fill="rgb(206,125,53)"/><text x="285.00" y="94.50">setup_profile (bench_LinearRegre..</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py) (75 samples, 20.89%)</title><rect x="282" y="100" width="247" height="15" fill="rgb(206,174,41)"/><text x="285.00" y="110.50">profile (bench_LinearRegression_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (72 samples, 20.06%)</title><rect x="292" y="116" width="237" height="15" fill="rgb(223,77,33)"/><text x="295.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>unicode_hash (python3.7) (2 samples, 0.56%)</title><rect x="522" y="132" width="7" height="15" fill="rgb(210,227,18)"/><text x="525.00" y="142.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h) (1 samples, 0.28%)</title><rect x="585" y="260" width="3" height="15" fill="rgb(247,182,2)"/><text x="588.00" y="270.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (2 samples, 0.56%)</title><rect x="585" y="228" width="6" height="15" fill="rgb(231,158,1)"/><text x="588.00" y="238.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (2 samples, 0.56%)</title><rect x="585" y="244" width="6" height="15" fill="rgb(230,175,35)"/><text x="588.00" y="254.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h) (1 samples, 0.28%)</title><rect x="588" y="260" width="3" height="15" fill="rgb(207,92,33)"/><text x="591.00" y="270.50"></text></g><g><title>PyArray_Transpose (shape.c) (6 samples, 1.67%)</title><rect x="578" y="180" width="20" height="15" fill="rgb(214,121,28)"/><text x="581.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (6 samples, 1.67%)</title><rect x="578" y="196" width="20" height="15" fill="rgb(238,38,35)"/><text x="581.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (6 samples, 1.67%)</title><rect x="578" y="212" width="20" height="15" fill="rgb(245,164,34)"/><text x="581.00" y="222.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (2 samples, 0.56%)</title><rect x="591" y="228" width="7" height="15" fill="rgb(226,101,8)"/><text x="594.00" y="238.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (2 samples, 0.56%)</title><rect x="591" y="244" width="7" height="15" fill="rgb(214,200,8)"/><text x="594.00" y="254.50"></text></g><g><title>0x7f89b0677e7a (libc-2.29.so) (1 samples, 0.28%)</title><rect x="614" y="292" width="4" height="15" fill="rgb(238,220,10)"/><text x="617.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (6 samples, 1.67%)</title><rect x="601" y="212" width="20" height="15" fill="rgb(223,80,46)"/><text x="604.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (6 samples, 1.67%)</title><rect x="601" y="228" width="20" height="15" fill="rgb(232,172,19)"/><text x="604.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (6 samples, 1.67%)</title><rect x="601" y="244" width="20" height="15" fill="rgb(244,27,28)"/><text x="604.00" y="254.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (6 samples, 1.67%)</title><rect x="601" y="260" width="20" height="15" fill="rgb(244,127,45)"/><text x="604.00" y="270.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (6 samples, 1.67%)</title><rect x="601" y="276" width="20" height="15" fill="rgb(229,82,10)"/><text x="604.00" y="286.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.28%)</title><rect x="618" y="292" width="3" height="15" fill="rgb(219,180,25)"/><text x="621.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (2 samples, 0.56%)</title><rect x="621" y="228" width="6" height="15" fill="rgb(230,116,25)"/><text x="624.00" y="238.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.28%)</title><rect x="624" y="244" width="3" height="15" fill="rgb(220,90,28)"/><text x="627.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.28%)</title><rect x="627" y="244" width="4" height="15" fill="rgb(216,101,9)"/><text x="630.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="627" y="260" width="4" height="15" fill="rgb(247,175,5)"/><text x="630.00" y="270.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.28%)</title><rect x="627" y="276" width="4" height="15" fill="rgb(218,187,42)"/><text x="630.00" y="286.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.28%)</title><rect x="627" y="292" width="4" height="15" fill="rgb(218,119,39)"/><text x="630.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.84%)</title><rect x="627" y="228" width="10" height="15" fill="rgb(215,96,37)"/><text x="630.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.56%)</title><rect x="631" y="244" width="6" height="15" fill="rgb(216,33,18)"/><text x="634.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.28%)</title><rect x="634" y="260" width="3" height="15" fill="rgb(224,192,34)"/><text x="637.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.67%)</title><rect x="621" y="212" width="20" height="15" fill="rgb(232,46,22)"/><text x="624.00" y="222.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.28%)</title><rect x="637" y="228" width="4" height="15" fill="rgb(230,68,41)"/><text x="640.00" y="238.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.28%)</title><rect x="637" y="244" width="4" height="15" fill="rgb(238,63,54)"/><text x="640.00" y="254.50"></text></g><g><title>array_add (number.c) (14 samples, 3.90%)</title><rect x="598" y="180" width="46" height="15" fill="rgb(250,59,2)"/><text x="601.00" y="190.50">arra..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 3.62%)</title><rect x="601" y="196" width="43" height="15" fill="rgb(211,216,20)"/><text x="604.00" y="206.50">ufun..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.28%)</title><rect x="641" y="212" width="3" height="15" fill="rgb(215,1,22)"/><text x="644.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.28%)</title><rect x="641" y="228" width="3" height="15" fill="rgb(245,206,9)"/><text x="644.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.28%)</title><rect x="641" y="244" width="3" height="15" fill="rgb(244,134,18)"/><text x="644.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.84%)</title><rect x="644" y="180" width="10" height="15" fill="rgb(235,94,11)"/><text x="647.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.56%)</title><rect x="647" y="196" width="7" height="15" fill="rgb(220,61,36)"/><text x="650.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.56%)</title><rect x="647" y="212" width="7" height="15" fill="rgb(215,82,50)"/><text x="650.00" y="222.50"></text></g><g><title>__enter__ (warnings.py) (4 samples, 1.11%)</title><rect x="752" y="196" width="13" height="15" fill="rgb(232,214,24)"/><text x="755.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.28%)</title><rect x="765" y="196" width="4" height="15" fill="rgb(212,27,21)"/><text x="768.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.56%)</title><rect x="769" y="196" width="6" height="15" fill="rgb(233,16,11)"/><text x="772.00" y="206.50"></text></g><g><title>0x7f89b073fdc0 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="808" y="212" width="4" height="15" fill="rgb(224,49,45)"/><text x="811.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.39%)</title><rect x="812" y="212" width="16" height="15" fill="rgb(219,27,8)"/><text x="815.00" y="222.50"></text></g><g><title>0x7f89b0677e50 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="825" y="228" width="3" height="15" fill="rgb(206,208,13)"/><text x="828.00" y="238.50"></text></g><g><title>get_config (sklearn/_config.py) (2 samples, 0.56%)</title><rect x="828" y="212" width="7" height="15" fill="rgb(234,224,24)"/><text x="831.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (22 samples, 6.13%)</title><rect x="775" y="196" width="73" height="15" fill="rgb(244,36,46)"/><text x="778.00" y="206.50">_assert_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="835" y="212" width="13" height="15" fill="rgb(234,52,34)"/><text x="838.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.56%)</title><rect x="848" y="196" width="6" height="15" fill="rgb(235,128,54)"/><text x="851.00" y="206.50"></text></g><g><title>0x7f89b0677b60 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="920" y="212" width="3" height="15" fill="rgb(220,123,45)"/><text x="923.00" y="222.50"></text></g><g><title>0x7f89b0677e50 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="923" y="212" width="4" height="15" fill="rgb(247,22,35)"/><text x="926.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.28%)</title><rect x="927" y="212" width="3" height="15" fill="rgb(224,158,27)"/><text x="930.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (6 samples, 1.67%)</title><rect x="930" y="212" width="20" height="15" fill="rgb(232,124,39)"/><text x="933.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.56%)</title><rect x="943" y="228" width="7" height="15" fill="rgb(235,48,22)"/><text x="946.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (30 samples, 8.36%)</title><rect x="854" y="196" width="99" height="15" fill="rgb(214,202,7)"/><text x="857.00" y="206.50">_num_sample..</text></g><g><title>array_shape_get (getset.c) (1 samples, 0.28%)</title><rect x="950" y="212" width="3" height="15" fill="rgb(220,5,46)"/><text x="953.00" y="222.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.28%)</title><rect x="953" y="196" width="3" height="15" fill="rgb(239,224,8)"/><text x="956.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (3 samples, 0.84%)</title><rect x="956" y="196" width="10" height="15" fill="rgb(218,42,46)"/><text x="959.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.28%)</title><rect x="969" y="212" width="4" height="15" fill="rgb(224,178,3)"/><text x="972.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (8 samples, 2.23%)</title><rect x="966" y="196" width="26" height="15" fill="rgb(244,199,47)"/><text x="969.00" y="206.50">i..</text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (6 samples, 1.67%)</title><rect x="973" y="212" width="19" height="15" fill="rgb(250,215,25)"/><text x="976.00" y="222.50"></text></g><g><title>0x7f89b06821f2 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="989" y="228" width="3" height="15" fill="rgb(223,153,27)"/><text x="992.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (118 samples, 32.87%)</title><rect x="654" y="180" width="388" height="15" fill="rgb(231,58,1)"/><text x="657.00" y="190.50">check_array (sklearn/utils/validation.py)</text></g><g><title>simplefilter (warnings.py) (15 samples, 4.18%)</title><rect x="992" y="196" width="50" height="15" fill="rgb(225,57,25)"/><text x="995.00" y="206.50">simpl..</text></g><g><title>_add_filter (warnings.py) (15 samples, 4.18%)</title><rect x="992" y="212" width="50" height="15" fill="rgb(218,95,12)"/><text x="995.00" y="222.50">_add_..</text></g><g><title>0x7f89b0682124 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1061" y="196" width="4" height="15" fill="rgb(248,83,47)"/><text x="1064.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.28%)</title><rect x="1084" y="212" width="4" height="15" fill="rgb(242,212,7)"/><text x="1087.00" y="222.50"></text></g><g><title>0x7f89b073f130 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1084" y="228" width="4" height="15" fill="rgb(229,162,2)"/><text x="1087.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (8 samples, 2.23%)</title><rect x="1065" y="196" width="26" height="15" fill="rgb(213,151,39)"/><text x="1068.00" y="206.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.28%)</title><rect x="1088" y="212" width="3" height="15" fill="rgb(205,103,45)"/><text x="1091.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (17 samples, 4.74%)</title><rect x="1042" y="180" width="55" height="15" fill="rgb(211,124,32)"/><text x="1045.00" y="190.50">check..</text></g><g><title>isclass (inspect.py) (2 samples, 0.56%)</title><rect x="1091" y="196" width="6" height="15" fill="rgb(245,152,49)"/><text x="1094.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.56%)</title><rect x="1104" y="196" width="7" height="15" fill="rgb(244,112,25)"/><text x="1107.00" y="206.50"></text></g><g><title>0x7f89b0661be4 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1120" y="244" width="4" height="15" fill="rgb(232,139,0)"/><text x="1123.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.28%)</title><rect x="1124" y="244" width="3" height="15" fill="rgb(205,184,2)"/><text x="1127.00" y="254.50"></text></g><g><title>DOUBLE_dot (arraytypes.c.src) (1 samples, 0.28%)</title><rect x="1124" y="260" width="3" height="15" fill="rgb(223,63,48)"/><text x="1127.00" y="270.50"></text></g><g><title>ddot_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="1124" y="276" width="3" height="15" fill="rgb(248,178,31)"/><text x="1127.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.56%)</title><rect x="1134" y="276" width="6" height="15" fill="rgb(207,203,28)"/><text x="1137.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.56%)</title><rect x="1134" y="292" width="6" height="15" fill="rgb(235,171,49)"/><text x="1137.00" y="302.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.28%)</title><rect x="1137" y="308" width="3" height="15" fill="rgb(230,47,10)"/><text x="1140.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1137" y="324" width="3" height="15" fill="rgb(210,153,26)"/><text x="1140.00" y="334.50"></text></g><g><title>0x7f89b0681d50 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1137" y="340" width="3" height="15" fill="rgb(237,185,2)"/><text x="1140.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (5 samples, 1.39%)</title><rect x="1130" y="260" width="17" height="15" fill="rgb(212,202,21)"/><text x="1133.00" y="270.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.56%)</title><rect x="1140" y="276" width="7" height="15" fill="rgb(223,207,39)"/><text x="1143.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.28%)</title><rect x="1143" y="292" width="4" height="15" fill="rgb(250,223,49)"/><text x="1146.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="1143" y="308" width="4" height="15" fill="rgb(233,162,22)"/><text x="1146.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.28%)</title><rect x="1143" y="324" width="4" height="15" fill="rgb(219,123,10)"/><text x="1146.00" y="334.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.28%)</title><rect x="1147" y="260" width="3" height="15" fill="rgb(228,19,39)"/><text x="1150.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (9 samples, 2.51%)</title><rect x="1127" y="244" width="30" height="15" fill="rgb(247,99,27)"/><text x="1130.00" y="254.50">Np..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.56%)</title><rect x="1150" y="260" width="7" height="15" fill="rgb(242,57,11)"/><text x="1153.00" y="270.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.28%)</title><rect x="1153" y="276" width="4" height="15" fill="rgb(236,188,10)"/><text x="1156.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.28%)</title><rect x="1157" y="244" width="3" height="15" fill="rgb(246,217,44)"/><text x="1160.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.28%)</title><rect x="1157" y="260" width="3" height="15" fill="rgb(231,73,10)"/><text x="1160.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.28%)</title><rect x="1157" y="276" width="3" height="15" fill="rgb(242,137,10)"/><text x="1160.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.28%)</title><rect x="1157" y="292" width="3" height="15" fill="rgb(231,176,53)"/><text x="1160.00" y="302.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c) (3 samples, 0.84%)</title><rect x="1160" y="244" width="10" height="15" fill="rgb(254,213,49)"/><text x="1163.00" y="254.50"></text></g><g><title>0x7f89b0681d50 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1166" y="260" width="4" height="15" fill="rgb(252,40,28)"/><text x="1169.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.28%)</title><rect x="1170" y="260" width="3" height="15" fill="rgb(226,218,42)"/><text x="1173.00" y="270.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.28%)</title><rect x="1170" y="276" width="3" height="15" fill="rgb(253,107,26)"/><text x="1173.00" y="286.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.28%)</title><rect x="1170" y="292" width="3" height="15" fill="rgb(237,111,15)"/><text x="1173.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.56%)</title><rect x="1170" y="244" width="6" height="15" fill="rgb(233,167,43)"/><text x="1173.00" y="254.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.28%)</title><rect x="1173" y="260" width="3" height="15" fill="rgb(211,187,9)"/><text x="1176.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.28%)</title><rect x="1173" y="276" width="3" height="15" fill="rgb(244,191,1)"/><text x="1176.00" y="286.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.28%)</title><rect x="1173" y="292" width="3" height="15" fill="rgb(207,156,18)"/><text x="1176.00" y="302.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.28%)</title><rect x="1173" y="308" width="3" height="15" fill="rgb(243,49,28)"/><text x="1176.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.28%)</title><rect x="1176" y="244" width="4" height="15" fill="rgb(250,95,51)"/><text x="1179.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1180" y="244" width="3" height="15" fill="rgb(239,116,8)"/><text x="1183.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (195 samples, 54.32%)</title><rect x="545" y="132" width="641" height="15" fill="rgb(214,147,24)"/><text x="548.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/linear_model/_base.py) (194 samples, 54.04%)</title><rect x="549" y="148" width="637" height="15" fill="rgb(235,27,27)"/><text x="552.00" y="158.50">predict (sklearn/linear_model/_base.py)</text></g><g><title>_decision_function (sklearn/linear_model/_base.py) (192 samples, 53.48%)</title><rect x="555" y="164" width="631" height="15" fill="rgb(213,138,15)"/><text x="558.00" y="174.50">_decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (27 samples, 7.52%)</title><rect x="1097" y="180" width="89" height="15" fill="rgb(249,125,10)"/><text x="1100.00" y="190.50">safe_spars..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (23 samples, 6.41%)</title><rect x="1111" y="196" width="75" height="15" fill="rgb(241,223,46)"/><text x="1114.00" y="206.50">ufunc_ge..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (23 samples, 6.41%)</title><rect x="1111" y="212" width="75" height="15" fill="rgb(214,197,21)"/><text x="1114.00" y="222.50">PyUFunc_..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (23 samples, 6.41%)</title><rect x="1111" y="228" width="75" height="15" fill="rgb(226,152,14)"/><text x="1114.00" y="238.50">PyUFunc_..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.28%)</title><rect x="1183" y="244" width="3" height="15" fill="rgb(210,57,15)"/><text x="1186.00" y="254.50"></text></g><g><title>all (359 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(221,121,19)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1_50_12_float_.py) (359 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(226,189,17)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_b_reg_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_LinearRegression_default_b_reg_1_50_12_float_.py) (201 samples, 55.99%)</title><rect x="529" y="68" width="661" height="15" fill="rgb(228,160,25)"/><text x="532.00" y="78.50">profile_skl (bench_LinearRegression_default_b_reg_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py) (201 samples, 55.99%)</title><rect x="529" y="84" width="661" height="15" fill="rgb(251,36,12)"/><text x="532.00" y="94.50">setup_profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py)</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py) (201 samples, 55.99%)</title><rect x="529" y="100" width="661" height="15" fill="rgb(242,57,49)"/><text x="532.00" y="110.50">profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (198 samples, 55.15%)</title><rect x="539" y="116" width="651" height="15" fill="rgb(228,131,24)"/><text x="542.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.28%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(209,222,50)"/><text x="1189.00" y="142.50"></text></g></g></svg>