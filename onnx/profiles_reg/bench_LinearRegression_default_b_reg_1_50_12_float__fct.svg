<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2374" onload="init(evt)" viewBox="0 0 1200 2374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2374" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2357.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2357.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(222,166,3)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(247,107,11)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(248,133,21)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(247,213,52)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(251,123,50)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(235,108,17)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(227,75,52)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(225,42,5)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(236,34,3)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="10" y="1012" width="3" height="15" fill="rgb(250,133,40)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.30%)</title><rect x="10" y="1028" width="3" height="15" fill="rgb(228,164,41)"/><text x="13.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.30%)</title><rect x="10" y="1044" width="3" height="15" fill="rgb(226,22,27)"/><text x="13.00" y="1054.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.60%)</title><rect x="13" y="932" width="7" height="15" fill="rgb(224,186,41)"/><text x="16.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.60%)</title><rect x="13" y="948" width="7" height="15" fill="rgb(227,4,44)"/><text x="16.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="17" y="964" width="3" height="15" fill="rgb(218,221,52)"/><text x="20.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="17" y="980" width="3" height="15" fill="rgb(226,86,44)"/><text x="20.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.30%)</title><rect x="17" y="996" width="3" height="15" fill="rgb(210,187,36)"/><text x="20.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.30%)</title><rect x="17" y="1012" width="3" height="15" fill="rgb(210,87,32)"/><text x="20.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.30%)</title><rect x="17" y="1028" width="3" height="15" fill="rgb(247,105,48)"/><text x="20.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.30%)</title><rect x="17" y="1044" width="3" height="15" fill="rgb(230,162,45)"/><text x="20.00" y="1054.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="17" y="1060" width="3" height="15" fill="rgb(211,175,42)"/><text x="20.00" y="1070.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 0.90%)</title><rect x="13" y="868" width="11" height="15" fill="rgb(212,217,16)"/><text x="16.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 0.90%)</title><rect x="13" y="884" width="11" height="15" fill="rgb(230,20,9)"/><text x="16.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.90%)</title><rect x="13" y="900" width="11" height="15" fill="rgb(222,175,32)"/><text x="16.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.90%)</title><rect x="13" y="916" width="11" height="15" fill="rgb(228,41,26)"/><text x="16.00" y="926.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.30%)</title><rect x="20" y="932" width="4" height="15" fill="rgb(215,229,41)"/><text x="23.00" y="942.50"></text></g><g><title>_get_sep (posixpath.py) (1 samples, 0.30%)</title><rect x="20" y="948" width="4" height="15" fill="rgb(233,157,4)"/><text x="23.00" y="958.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 1.49%)</title><rect x="10" y="292" width="17" height="15" fill="rgb(250,41,39)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="308" width="17" height="15" fill="rgb(210,42,24)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="324" width="17" height="15" fill="rgb(254,99,42)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="340" width="17" height="15" fill="rgb(220,29,4)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.49%)</title><rect x="10" y="356" width="17" height="15" fill="rgb(208,77,39)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="372" width="17" height="15" fill="rgb(217,31,15)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 1.49%)</title><rect x="10" y="388" width="17" height="15" fill="rgb(246,28,35)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="404" width="17" height="15" fill="rgb(227,147,52)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="420" width="17" height="15" fill="rgb(219,95,1)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="436" width="17" height="15" fill="rgb(241,28,16)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.49%)</title><rect x="10" y="452" width="17" height="15" fill="rgb(254,229,44)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="468" width="17" height="15" fill="rgb(241,146,39)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 1.49%)</title><rect x="10" y="484" width="17" height="15" fill="rgb(205,86,9)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="500" width="17" height="15" fill="rgb(212,188,15)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="516" width="17" height="15" fill="rgb(236,0,32)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="532" width="17" height="15" fill="rgb(219,119,14)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.49%)</title><rect x="10" y="548" width="17" height="15" fill="rgb(243,132,49)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="564" width="17" height="15" fill="rgb(231,43,10)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 1.49%)</title><rect x="10" y="580" width="17" height="15" fill="rgb(211,98,45)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="596" width="17" height="15" fill="rgb(251,29,26)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="612" width="17" height="15" fill="rgb(226,152,39)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="628" width="17" height="15" fill="rgb(247,85,44)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="644" width="17" height="15" fill="rgb(227,60,43)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="660" width="17" height="15" fill="rgb(212,39,7)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="676" width="17" height="15" fill="rgb(234,179,4)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.49%)</title><rect x="10" y="692" width="17" height="15" fill="rgb(238,117,35)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="708" width="17" height="15" fill="rgb(251,54,23)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 1.49%)</title><rect x="10" y="724" width="17" height="15" fill="rgb(222,216,37)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="740" width="17" height="15" fill="rgb(249,59,0)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="756" width="17" height="15" fill="rgb(250,102,50)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="772" width="17" height="15" fill="rgb(241,131,23)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.49%)</title><rect x="10" y="788" width="17" height="15" fill="rgb(244,166,7)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="10" y="804" width="17" height="15" fill="rgb(236,129,23)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 1.49%)</title><rect x="10" y="820" width="17" height="15" fill="rgb(218,120,30)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 1.49%)</title><rect x="10" y="836" width="17" height="15" fill="rgb(214,170,39)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 1.49%)</title><rect x="10" y="852" width="17" height="15" fill="rgb(231,115,34)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="24" y="868" width="3" height="15" fill="rgb(227,96,19)"/><text x="27.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="24" y="884" width="3" height="15" fill="rgb(237,151,20)"/><text x="27.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="24" y="900" width="3" height="15" fill="rgb(248,125,42)"/><text x="27.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="24" y="916" width="3" height="15" fill="rgb(211,225,11)"/><text x="27.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="24" y="932" width="3" height="15" fill="rgb(234,152,24)"/><text x="27.00" y="942.50"></text></g><g><title>safe_name (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="24" y="948" width="3" height="15" fill="rgb(236,135,36)"/><text x="27.00" y="958.50"></text></g><g><title>sub (re.py) (1 samples, 0.30%)</title><rect x="24" y="964" width="3" height="15" fill="rgb(235,1,50)"/><text x="27.00" y="974.50"></text></g><g><title>_compile (re.py) (1 samples, 0.30%)</title><rect x="24" y="980" width="3" height="15" fill="rgb(213,79,21)"/><text x="27.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.30%)</title><rect x="27" y="900" width="4" height="15" fill="rgb(253,143,48)"/><text x="30.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="916" width="4" height="15" fill="rgb(209,120,21)"/><text x="30.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="932" width="4" height="15" fill="rgb(220,102,17)"/><text x="30.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="948" width="4" height="15" fill="rgb(241,11,18)"/><text x="30.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="27" y="964" width="4" height="15" fill="rgb(253,217,24)"/><text x="30.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="980" width="4" height="15" fill="rgb(208,198,38)"/><text x="30.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.30%)</title><rect x="27" y="996" width="4" height="15" fill="rgb(206,70,34)"/><text x="30.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="1012" width="4" height="15" fill="rgb(223,37,2)"/><text x="30.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="1028" width="4" height="15" fill="rgb(248,83,35)"/><text x="30.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="1044" width="4" height="15" fill="rgb(220,56,19)"/><text x="30.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="1060" width="4" height="15" fill="rgb(215,225,23)"/><text x="30.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="1076" width="4" height="15" fill="rgb(228,17,17)"/><text x="30.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="27" y="1092" width="4" height="15" fill="rgb(237,55,4)"/><text x="30.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="1108" width="4" height="15" fill="rgb(253,113,26)"/><text x="30.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.30%)</title><rect x="27" y="1124" width="4" height="15" fill="rgb(232,141,22)"/><text x="30.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="1140" width="4" height="15" fill="rgb(232,202,16)"/><text x="30.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="1156" width="4" height="15" fill="rgb(245,201,46)"/><text x="30.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="1172" width="4" height="15" fill="rgb(248,97,6)"/><text x="30.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="27" y="1188" width="4" height="15" fill="rgb(250,193,18)"/><text x="30.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="1204" width="4" height="15" fill="rgb(216,144,30)"/><text x="30.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_shgo.py) (1 samples, 0.30%)</title><rect x="27" y="1220" width="4" height="15" fill="rgb(239,108,54)"/><text x="30.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="1236" width="4" height="15" fill="rgb(229,139,9)"/><text x="30.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="1252" width="4" height="15" fill="rgb(231,160,26)"/><text x="30.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="1268" width="4" height="15" fill="rgb(235,4,8)"/><text x="30.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="27" y="1284" width="4" height="15" fill="rgb(231,71,45)"/><text x="30.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="1300" width="4" height="15" fill="rgb(252,208,27)"/><text x="30.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_shgo_lib/triangulation.py) (1 samples, 0.30%)</title><rect x="27" y="1316" width="4" height="15" fill="rgb(249,34,34)"/><text x="30.00" y="1326.50"></text></g><g><title>Complex (scipy/optimize/_shgo_lib/triangulation.py) (1 samples, 0.30%)</title><rect x="27" y="1332" width="4" height="15" fill="rgb(206,71,26)"/><text x="30.00" y="1342.50"></text></g><g><title>decorating_function (functools.py) (1 samples, 0.30%)</title><rect x="27" y="1348" width="4" height="15" fill="rgb(218,213,1)"/><text x="30.00" y="1358.50"></text></g><g><title>update_wrapper (functools.py) (1 samples, 0.30%)</title><rect x="27" y="1364" width="4" height="15" fill="rgb(234,155,45)"/><text x="30.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.09%)</title><rect x="10" y="196" width="24" height="15" fill="rgb(205,183,35)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.09%)</title><rect x="10" y="212" width="24" height="15" fill="rgb(251,171,21)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.09%)</title><rect x="10" y="228" width="24" height="15" fill="rgb(250,61,38)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.09%)</title><rect x="10" y="244" width="24" height="15" fill="rgb(222,189,29)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.09%)</title><rect x="10" y="260" width="24" height="15" fill="rgb(235,167,21)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.09%)</title><rect x="10" y="276" width="24" height="15" fill="rgb(251,165,26)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.60%)</title><rect x="27" y="292" width="7" height="15" fill="rgb(205,14,41)"/><text x="30.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="308" width="7" height="15" fill="rgb(220,108,48)"/><text x="30.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="324" width="7" height="15" fill="rgb(215,100,26)"/><text x="30.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="340" width="7" height="15" fill="rgb(224,225,52)"/><text x="30.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="27" y="356" width="7" height="15" fill="rgb(247,152,12)"/><text x="30.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="372" width="7" height="15" fill="rgb(212,199,0)"/><text x="30.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.60%)</title><rect x="27" y="388" width="7" height="15" fill="rgb(228,223,33)"/><text x="30.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="404" width="7" height="15" fill="rgb(216,66,44)"/><text x="30.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="420" width="7" height="15" fill="rgb(247,198,27)"/><text x="30.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="436" width="7" height="15" fill="rgb(250,178,43)"/><text x="30.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="27" y="452" width="7" height="15" fill="rgb(243,72,16)"/><text x="30.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="468" width="7" height="15" fill="rgb(224,146,48)"/><text x="30.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.60%)</title><rect x="27" y="484" width="7" height="15" fill="rgb(226,74,14)"/><text x="30.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="500" width="7" height="15" fill="rgb(235,62,2)"/><text x="30.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="516" width="7" height="15" fill="rgb(242,19,32)"/><text x="30.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="532" width="7" height="15" fill="rgb(207,57,45)"/><text x="30.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="27" y="548" width="7" height="15" fill="rgb(229,214,40)"/><text x="30.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="564" width="7" height="15" fill="rgb(247,29,1)"/><text x="30.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.60%)</title><rect x="27" y="580" width="7" height="15" fill="rgb(249,58,26)"/><text x="30.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="596" width="7" height="15" fill="rgb(206,51,27)"/><text x="30.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="612" width="7" height="15" fill="rgb(228,162,43)"/><text x="30.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="628" width="7" height="15" fill="rgb(211,49,45)"/><text x="30.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="27" y="644" width="7" height="15" fill="rgb(236,183,14)"/><text x="30.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="660" width="7" height="15" fill="rgb(241,144,12)"/><text x="30.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.60%)</title><rect x="27" y="676" width="7" height="15" fill="rgb(233,108,10)"/><text x="30.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="692" width="7" height="15" fill="rgb(210,7,50)"/><text x="30.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="708" width="7" height="15" fill="rgb(212,122,20)"/><text x="30.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="724" width="7" height="15" fill="rgb(232,90,16)"/><text x="30.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="27" y="740" width="7" height="15" fill="rgb(229,73,50)"/><text x="30.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="756" width="7" height="15" fill="rgb(223,31,33)"/><text x="30.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.60%)</title><rect x="27" y="772" width="7" height="15" fill="rgb(226,19,51)"/><text x="30.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="788" width="7" height="15" fill="rgb(221,94,17)"/><text x="30.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="804" width="7" height="15" fill="rgb(242,214,2)"/><text x="30.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="820" width="7" height="15" fill="rgb(237,194,44)"/><text x="30.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="836" width="7" height="15" fill="rgb(247,223,1)"/><text x="30.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="852" width="7" height="15" fill="rgb(234,67,9)"/><text x="30.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="27" y="868" width="7" height="15" fill="rgb(224,60,30)"/><text x="30.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="27" y="884" width="7" height="15" fill="rgb(239,123,28)"/><text x="30.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/mstats_basic.py) (1 samples, 0.30%)</title><rect x="31" y="900" width="3" height="15" fill="rgb(214,10,29)"/><text x="34.00" y="910.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.30%)</title><rect x="31" y="916" width="3" height="15" fill="rgb(241,85,41)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1124" width="4" height="15" fill="rgb(223,30,6)"/><text x="37.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1140" width="4" height="15" fill="rgb(214,115,36)"/><text x="37.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1156" width="4" height="15" fill="rgb(234,112,33)"/><text x="37.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="1172" width="4" height="15" fill="rgb(253,8,14)"/><text x="37.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1188" width="4" height="15" fill="rgb(229,73,39)"/><text x="37.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.30%)</title><rect x="34" y="1204" width="4" height="15" fill="rgb(206,159,53)"/><text x="37.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1220" width="4" height="15" fill="rgb(208,46,54)"/><text x="37.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1236" width="4" height="15" fill="rgb(229,160,10)"/><text x="37.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1252" width="4" height="15" fill="rgb(253,113,17)"/><text x="37.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="1268" width="4" height="15" fill="rgb(241,213,12)"/><text x="37.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1284" width="4" height="15" fill="rgb(232,87,32)"/><text x="37.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (1 samples, 0.30%)</title><rect x="34" y="1300" width="4" height="15" fill="rgb(235,38,7)"/><text x="37.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1316" width="4" height="15" fill="rgb(237,130,17)"/><text x="37.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1332" width="4" height="15" fill="rgb(250,5,35)"/><text x="37.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1348" width="4" height="15" fill="rgb(253,163,36)"/><text x="37.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="1364" width="4" height="15" fill="rgb(250,56,20)"/><text x="37.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1380" width="4" height="15" fill="rgb(212,46,30)"/><text x="37.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/discriminant_analysis.py) (1 samples, 0.30%)</title><rect x="34" y="1396" width="4" height="15" fill="rgb(239,40,24)"/><text x="37.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1412" width="4" height="15" fill="rgb(248,185,35)"/><text x="37.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1428" width="4" height="15" fill="rgb(207,58,7)"/><text x="37.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1444" width="4" height="15" fill="rgb(248,5,20)"/><text x="37.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="1460" width="4" height="15" fill="rgb(221,42,20)"/><text x="37.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1476" width="4" height="15" fill="rgb(239,47,25)"/><text x="37.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/covariance/__init__.py) (1 samples, 0.30%)</title><rect x="34" y="1492" width="4" height="15" fill="rgb(229,39,9)"/><text x="37.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1508" width="4" height="15" fill="rgb(218,16,15)"/><text x="37.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1524" width="4" height="15" fill="rgb(233,228,23)"/><text x="37.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1540" width="4" height="15" fill="rgb(254,214,12)"/><text x="37.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="1556" width="4" height="15" fill="rgb(217,22,35)"/><text x="37.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1572" width="4" height="15" fill="rgb(240,107,27)"/><text x="37.00" y="1582.50"></text></g><g><title>&lt;module&gt; (sklearn/covariance/_graph_lasso.py) (1 samples, 0.30%)</title><rect x="34" y="1588" width="4" height="15" fill="rgb(250,225,37)"/><text x="37.00" y="1598.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1604" width="4" height="15" fill="rgb(233,201,0)"/><text x="37.00" y="1614.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.30%)</title><rect x="38" y="1636" width="3" height="15" fill="rgb(221,212,31)"/><text x="41.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.30%)</title><rect x="38" y="1652" width="3" height="15" fill="rgb(232,100,15)"/><text x="41.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.30%)</title><rect x="38" y="1668" width="3" height="15" fill="rgb(248,64,54)"/><text x="41.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.30%)</title><rect x="38" y="1684" width="3" height="15" fill="rgb(220,119,29)"/><text x="41.00" y="1694.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.30%)</title><rect x="38" y="1700" width="3" height="15" fill="rgb(208,71,17)"/><text x="41.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.30%)</title><rect x="38" y="1716" width="3" height="15" fill="rgb(225,13,31)"/><text x="41.00" y="1726.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.30%)</title><rect x="38" y="1732" width="3" height="15" fill="rgb(238,137,3)"/><text x="41.00" y="1742.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.30%)</title><rect x="38" y="1748" width="3" height="15" fill="rgb(229,106,0)"/><text x="41.00" y="1758.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.30%)</title><rect x="38" y="1764" width="3" height="15" fill="rgb(215,69,50)"/><text x="41.00" y="1774.50"></text></g><g><title>visit_Output (jinja2/compiler.py) (1 samples, 0.30%)</title><rect x="38" y="1780" width="3" height="15" fill="rgb(216,119,33)"/><text x="41.00" y="1790.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.30%)</title><rect x="38" y="1796" width="3" height="15" fill="rgb(218,205,13)"/><text x="41.00" y="1806.50"></text></g><g><title>new_func (jinja2/compiler.py) (1 samples, 0.30%)</title><rect x="38" y="1812" width="3" height="15" fill="rgb(244,212,4)"/><text x="41.00" y="1822.50"></text></g><g><title>__ne__ (jinja2/nodes.py) (1 samples, 0.30%)</title><rect x="38" y="1828" width="3" height="15" fill="rgb(225,123,51)"/><text x="41.00" y="1838.50"></text></g><g><title>__eq__ (jinja2/nodes.py) (1 samples, 0.30%)</title><rect x="38" y="1844" width="3" height="15" fill="rgb(224,171,29)"/><text x="41.00" y="1854.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="1476" width="7" height="15" fill="rgb(224,171,15)"/><text x="41.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="1492" width="7" height="15" fill="rgb(213,70,42)"/><text x="41.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="1508" width="7" height="15" fill="rgb(238,116,22)"/><text x="41.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="38" y="1524" width="7" height="15" fill="rgb(210,2,29)"/><text x="41.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="1540" width="7" height="15" fill="rgb(254,127,5)"/><text x="41.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (2 samples, 0.60%)</title><rect x="38" y="1556" width="7" height="15" fill="rgb(226,228,53)"/><text x="41.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (2 samples, 0.60%)</title><rect x="38" y="1572" width="7" height="15" fill="rgb(236,134,0)"/><text x="41.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (2 samples, 0.60%)</title><rect x="38" y="1588" width="7" height="15" fill="rgb(217,219,1)"/><text x="41.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (2 samples, 0.60%)</title><rect x="38" y="1604" width="7" height="15" fill="rgb(213,226,10)"/><text x="41.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (2 samples, 0.60%)</title><rect x="38" y="1620" width="7" height="15" fill="rgb(212,37,5)"/><text x="41.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.30%)</title><rect x="41" y="1636" width="4" height="15" fill="rgb(241,101,22)"/><text x="44.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1652" width="4" height="15" fill="rgb(217,39,30)"/><text x="44.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1668" width="4" height="15" fill="rgb(225,89,24)"/><text x="44.00" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1684" width="4" height="15" fill="rgb(209,67,53)"/><text x="44.00" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1700" width="4" height="15" fill="rgb(219,209,43)"/><text x="44.00" y="1710.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1716" width="4" height="15" fill="rgb(208,189,33)"/><text x="44.00" y="1726.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1732" width="4" height="15" fill="rgb(248,148,0)"/><text x="44.00" y="1742.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1748" width="4" height="15" fill="rgb(249,13,46)"/><text x="44.00" y="1758.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1764" width="4" height="15" fill="rgb(243,62,18)"/><text x="44.00" y="1774.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1780" width="4" height="15" fill="rgb(224,131,39)"/><text x="44.00" y="1790.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1796" width="4" height="15" fill="rgb(229,123,34)"/><text x="44.00" y="1806.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1812" width="4" height="15" fill="rgb(239,105,3)"/><text x="44.00" y="1822.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1828" width="4" height="15" fill="rgb(250,20,15)"/><text x="44.00" y="1838.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1844" width="4" height="15" fill="rgb(211,17,3)"/><text x="44.00" y="1854.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1860" width="4" height="15" fill="rgb(215,225,15)"/><text x="44.00" y="1870.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1876" width="4" height="15" fill="rgb(211,86,52)"/><text x="44.00" y="1886.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1892" width="4" height="15" fill="rgb(211,5,50)"/><text x="44.00" y="1902.50"></text></g><g><title>parse_tuple (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1908" width="4" height="15" fill="rgb(249,25,21)"/><text x="44.00" y="1918.50"></text></g><g><title>&lt;lambda&gt; (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1924" width="4" height="15" fill="rgb(243,57,36)"/><text x="44.00" y="1934.50"></text></g><g><title>parse_expression (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1940" width="4" height="15" fill="rgb(247,147,26)"/><text x="44.00" y="1950.50"></text></g><g><title>parse_or (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1956" width="4" height="15" fill="rgb(211,100,15)"/><text x="44.00" y="1966.50"></text></g><g><title>parse_and (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1972" width="4" height="15" fill="rgb(214,99,36)"/><text x="44.00" y="1982.50"></text></g><g><title>parse_not (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="1988" width="4" height="15" fill="rgb(224,52,3)"/><text x="44.00" y="1998.50"></text></g><g><title>parse_compare (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="2004" width="4" height="15" fill="rgb(220,130,47)"/><text x="44.00" y="2014.50"></text></g><g><title>parse_math1 (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="2020" width="4" height="15" fill="rgb(213,125,43)"/><text x="44.00" y="2030.50"></text></g><g><title>parse_concat (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="2036" width="4" height="15" fill="rgb(252,111,37)"/><text x="44.00" y="2046.50"></text></g><g><title>parse_math2 (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="2052" width="4" height="15" fill="rgb(205,112,6)"/><text x="44.00" y="2062.50"></text></g><g><title>parse_pow (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="2068" width="4" height="15" fill="rgb(241,32,24)"/><text x="44.00" y="2078.50"></text></g><g><title>parse_unary (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="2084" width="4" height="15" fill="rgb(210,22,6)"/><text x="44.00" y="2094.50"></text></g><g><title>parse_postfix (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="2100" width="4" height="15" fill="rgb(210,154,10)"/><text x="44.00" y="2110.50"></text></g><g><title>parse_subscript (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="2116" width="4" height="15" fill="rgb(225,159,28)"/><text x="44.00" y="2126.50"></text></g><g><title>parse_subscribed (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="2132" width="4" height="15" fill="rgb(209,124,34)"/><text x="44.00" y="2142.50"></text></g><g><title>parse_expression (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="2148" width="4" height="15" fill="rgb(246,41,5)"/><text x="44.00" y="2158.50"></text></g><g><title>parse_condexpr (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="2164" width="4" height="15" fill="rgb(232,149,16)"/><text x="44.00" y="2174.50"></text></g><g><title>parse_or (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="2180" width="4" height="15" fill="rgb(242,53,47)"/><text x="44.00" y="2190.50"></text></g><g><title>parse_and (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="2196" width="4" height="15" fill="rgb(228,2,36)"/><text x="44.00" y="2206.50"></text></g><g><title>parse_not (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="2212" width="4" height="15" fill="rgb(254,74,22)"/><text x="44.00" y="2222.50"></text></g><g><title>parse_compare (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="2228" width="4" height="15" fill="rgb(231,127,26)"/><text x="44.00" y="2238.50"></text></g><g><title>parse_math1 (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="2244" width="4" height="15" fill="rgb(244,128,14)"/><text x="44.00" y="2254.50"></text></g><g><title>parse_concat (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="2260" width="4" height="15" fill="rgb(242,24,33)"/><text x="44.00" y="2270.50"></text></g><g><title>parse_math2 (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="2276" width="4" height="15" fill="rgb(246,177,12)"/><text x="44.00" y="2286.50"></text></g><g><title>parse_pow (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="2292" width="4" height="15" fill="rgb(233,201,44)"/><text x="44.00" y="2302.50"></text></g><g><title>parse_unary (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="41" y="2308" width="4" height="15" fill="rgb(205,130,47)"/><text x="44.00" y="2318.50"></text></g><g><title>__init__ (jinja2/nodes.py) (1 samples, 0.30%)</title><rect x="41" y="2324" width="4" height="15" fill="rgb(217,149,31)"/><text x="44.00" y="2334.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.30%)</title><rect x="45" y="1508" width="3" height="15" fill="rgb(235,66,2)"/><text x="48.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="484" width="18" height="15" fill="rgb(235,12,35)"/><text x="37.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="500" width="18" height="15" fill="rgb(249,102,50)"/><text x="37.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="516" width="18" height="15" fill="rgb(238,151,7)"/><text x="37.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="532" width="18" height="15" fill="rgb(215,201,36)"/><text x="37.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.49%)</title><rect x="34" y="548" width="18" height="15" fill="rgb(238,35,41)"/><text x="37.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="564" width="18" height="15" fill="rgb(216,21,46)"/><text x="37.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (5 samples, 1.49%)</title><rect x="34" y="580" width="18" height="15" fill="rgb(227,117,38)"/><text x="37.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="596" width="18" height="15" fill="rgb(227,93,34)"/><text x="37.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="612" width="18" height="15" fill="rgb(214,224,27)"/><text x="37.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="628" width="18" height="15" fill="rgb(218,133,46)"/><text x="37.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.49%)</title><rect x="34" y="644" width="18" height="15" fill="rgb(212,211,18)"/><text x="37.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="660" width="18" height="15" fill="rgb(231,11,21)"/><text x="37.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (5 samples, 1.49%)</title><rect x="34" y="676" width="18" height="15" fill="rgb(215,116,43)"/><text x="37.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="692" width="18" height="15" fill="rgb(253,213,25)"/><text x="37.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="708" width="18" height="15" fill="rgb(248,222,14)"/><text x="37.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="724" width="18" height="15" fill="rgb(252,131,37)"/><text x="37.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.49%)</title><rect x="34" y="740" width="18" height="15" fill="rgb(211,131,4)"/><text x="37.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="756" width="18" height="15" fill="rgb(252,174,51)"/><text x="37.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (5 samples, 1.49%)</title><rect x="34" y="772" width="18" height="15" fill="rgb(243,103,53)"/><text x="37.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="788" width="18" height="15" fill="rgb(241,177,36)"/><text x="37.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="804" width="18" height="15" fill="rgb(229,33,19)"/><text x="37.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="820" width="18" height="15" fill="rgb(205,54,48)"/><text x="37.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.49%)</title><rect x="34" y="836" width="18" height="15" fill="rgb(254,207,13)"/><text x="37.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="852" width="18" height="15" fill="rgb(243,32,23)"/><text x="37.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (5 samples, 1.49%)</title><rect x="34" y="868" width="18" height="15" fill="rgb(241,158,1)"/><text x="37.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="884" width="18" height="15" fill="rgb(243,142,18)"/><text x="37.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="900" width="18" height="15" fill="rgb(215,212,0)"/><text x="37.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="916" width="18" height="15" fill="rgb(210,99,29)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="932" width="18" height="15" fill="rgb(224,190,34)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="948" width="18" height="15" fill="rgb(229,2,47)"/><text x="37.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="964" width="18" height="15" fill="rgb(227,145,44)"/><text x="37.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.49%)</title><rect x="34" y="980" width="18" height="15" fill="rgb(208,146,37)"/><text x="37.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="996" width="18" height="15" fill="rgb(234,142,20)"/><text x="37.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (5 samples, 1.49%)</title><rect x="34" y="1012" width="18" height="15" fill="rgb(222,90,2)"/><text x="37.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="1028" width="18" height="15" fill="rgb(242,173,4)"/><text x="37.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="1044" width="18" height="15" fill="rgb(242,58,30)"/><text x="37.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="1060" width="18" height="15" fill="rgb(226,62,11)"/><text x="37.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.49%)</title><rect x="34" y="1076" width="18" height="15" fill="rgb(237,129,51)"/><text x="37.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="1092" width="18" height="15" fill="rgb(218,160,51)"/><text x="37.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (5 samples, 1.49%)</title><rect x="34" y="1108" width="18" height="15" fill="rgb(253,64,36)"/><text x="37.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="38" y="1124" width="14" height="15" fill="rgb(236,3,42)"/><text x="41.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="38" y="1140" width="14" height="15" fill="rgb(222,90,9)"/><text x="41.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="38" y="1156" width="14" height="15" fill="rgb(233,30,46)"/><text x="41.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="38" y="1172" width="14" height="15" fill="rgb(249,115,23)"/><text x="41.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="38" y="1188" width="14" height="15" fill="rgb(207,68,41)"/><text x="41.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.19%)</title><rect x="38" y="1204" width="14" height="15" fill="rgb(251,18,0)"/><text x="41.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="38" y="1220" width="14" height="15" fill="rgb(205,87,17)"/><text x="41.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (4 samples, 1.19%)</title><rect x="38" y="1236" width="14" height="15" fill="rgb(222,115,40)"/><text x="41.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="38" y="1252" width="14" height="15" fill="rgb(244,219,26)"/><text x="41.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="38" y="1268" width="14" height="15" fill="rgb(232,32,52)"/><text x="41.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="38" y="1284" width="14" height="15" fill="rgb(243,85,49)"/><text x="41.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="38" y="1300" width="14" height="15" fill="rgb(228,160,41)"/><text x="41.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="38" y="1316" width="14" height="15" fill="rgb(206,130,38)"/><text x="41.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.19%)</title><rect x="38" y="1332" width="14" height="15" fill="rgb(226,41,43)"/><text x="41.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="38" y="1348" width="14" height="15" fill="rgb(211,48,18)"/><text x="41.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (4 samples, 1.19%)</title><rect x="38" y="1364" width="14" height="15" fill="rgb(251,96,36)"/><text x="41.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="38" y="1380" width="14" height="15" fill="rgb(213,216,27)"/><text x="41.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="38" y="1396" width="14" height="15" fill="rgb(227,131,35)"/><text x="41.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="38" y="1412" width="14" height="15" fill="rgb(212,187,37)"/><text x="41.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.19%)</title><rect x="38" y="1428" width="14" height="15" fill="rgb(234,220,33)"/><text x="41.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="38" y="1444" width="14" height="15" fill="rgb(228,225,17)"/><text x="41.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (4 samples, 1.19%)</title><rect x="38" y="1460" width="14" height="15" fill="rgb(225,123,8)"/><text x="41.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.60%)</title><rect x="45" y="1476" width="7" height="15" fill="rgb(237,118,11)"/><text x="48.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.60%)</title><rect x="45" y="1492" width="7" height="15" fill="rgb(212,159,21)"/><text x="48.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.30%)</title><rect x="48" y="1508" width="4" height="15" fill="rgb(217,82,33)"/><text x="51.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.30%)</title><rect x="48" y="1524" width="4" height="15" fill="rgb(227,92,27)"/><text x="51.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.30%)</title><rect x="48" y="1540" width="4" height="15" fill="rgb(252,173,24)"/><text x="51.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.30%)</title><rect x="48" y="1556" width="4" height="15" fill="rgb(246,50,49)"/><text x="51.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.30%)</title><rect x="48" y="1572" width="4" height="15" fill="rgb(219,191,51)"/><text x="51.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.30%)</title><rect x="48" y="1588" width="4" height="15" fill="rgb(211,33,37)"/><text x="51.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.30%)</title><rect x="48" y="1604" width="4" height="15" fill="rgb(212,54,45)"/><text x="51.00" y="1614.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.30%)</title><rect x="48" y="1620" width="4" height="15" fill="rgb(237,108,14)"/><text x="51.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.30%)</title><rect x="48" y="1636" width="4" height="15" fill="rgb(247,66,22)"/><text x="51.00" y="1646.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.30%)</title><rect x="48" y="1652" width="4" height="15" fill="rgb(220,97,23)"/><text x="51.00" y="1662.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.30%)</title><rect x="48" y="1668" width="4" height="15" fill="rgb(252,3,32)"/><text x="51.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.30%)</title><rect x="52" y="724" width="3" height="15" fill="rgb(249,18,8)"/><text x="55.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="740" width="3" height="15" fill="rgb(222,59,49)"/><text x="55.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="756" width="3" height="15" fill="rgb(246,99,3)"/><text x="55.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="772" width="3" height="15" fill="rgb(239,87,39)"/><text x="55.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="52" y="788" width="3" height="15" fill="rgb(210,178,31)"/><text x="55.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="804" width="3" height="15" fill="rgb(245,90,42)"/><text x="55.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.30%)</title><rect x="52" y="820" width="3" height="15" fill="rgb(219,46,21)"/><text x="55.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="836" width="3" height="15" fill="rgb(245,107,1)"/><text x="55.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="852" width="3" height="15" fill="rgb(214,148,40)"/><text x="55.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="868" width="3" height="15" fill="rgb(223,76,53)"/><text x="55.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="52" y="884" width="3" height="15" fill="rgb(236,31,22)"/><text x="55.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="900" width="3" height="15" fill="rgb(220,197,16)"/><text x="55.00" y="910.50"></text></g><g><title>0x7fb6b7ca440e (?) (1 samples, 0.30%)</title><rect x="52" y="916" width="3" height="15" fill="rgb(241,144,21)"/><text x="55.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="932" width="3" height="15" fill="rgb(250,206,27)"/><text x="55.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="948" width="3" height="15" fill="rgb(234,216,39)"/><text x="55.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="964" width="3" height="15" fill="rgb(213,229,30)"/><text x="55.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="52" y="980" width="3" height="15" fill="rgb(235,36,53)"/><text x="55.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="996" width="3" height="15" fill="rgb(214,25,28)"/><text x="55.00" y="1006.50"></text></g><g><title>0x7fb6b7a5dcd2 (?) (1 samples, 0.30%)</title><rect x="52" y="1012" width="3" height="15" fill="rgb(222,151,9)"/><text x="55.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="1028" width="3" height="15" fill="rgb(244,217,26)"/><text x="55.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="1044" width="3" height="15" fill="rgb(229,158,0)"/><text x="55.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="1060" width="3" height="15" fill="rgb(231,7,45)"/><text x="55.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="52" y="1076" width="3" height="15" fill="rgb(241,171,12)"/><text x="55.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="1092" width="3" height="15" fill="rgb(226,219,52)"/><text x="55.00" y="1102.50"></text></g><g><title>0x7fb6b71530e5 (?) (1 samples, 0.30%)</title><rect x="52" y="1108" width="3" height="15" fill="rgb(239,146,18)"/><text x="55.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="1124" width="3" height="15" fill="rgb(211,228,41)"/><text x="55.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="1140" width="3" height="15" fill="rgb(225,34,9)"/><text x="55.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="1156" width="3" height="15" fill="rgb(254,173,47)"/><text x="55.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="52" y="1172" width="3" height="15" fill="rgb(234,30,29)"/><text x="55.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="1188" width="3" height="15" fill="rgb(247,60,39)"/><text x="55.00" y="1198.50"></text></g><g><title>0x7fb6b6ed7e68 (?) (1 samples, 0.30%)</title><rect x="52" y="1204" width="3" height="15" fill="rgb(248,182,44)"/><text x="55.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="1220" width="3" height="15" fill="rgb(222,21,11)"/><text x="55.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="1236" width="3" height="15" fill="rgb(227,17,3)"/><text x="55.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="1252" width="3" height="15" fill="rgb(246,70,42)"/><text x="55.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="52" y="1268" width="3" height="15" fill="rgb(210,110,16)"/><text x="55.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="1284" width="3" height="15" fill="rgb(213,151,6)"/><text x="55.00" y="1294.50"></text></g><g><title>0x7fb6b6c682fb (?) (1 samples, 0.30%)</title><rect x="52" y="1300" width="3" height="15" fill="rgb(225,30,32)"/><text x="55.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="1316" width="3" height="15" fill="rgb(228,151,36)"/><text x="55.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="1332" width="3" height="15" fill="rgb(206,67,11)"/><text x="55.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="1348" width="3" height="15" fill="rgb(222,148,38)"/><text x="55.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="52" y="1364" width="3" height="15" fill="rgb(252,54,9)"/><text x="55.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="1380" width="3" height="15" fill="rgb(242,154,52)"/><text x="55.00" y="1390.50"></text></g><g><title>0x7fb6b6a4c153 (?) (1 samples, 0.30%)</title><rect x="52" y="1396" width="3" height="15" fill="rgb(218,144,5)"/><text x="55.00" y="1406.50"></text></g><g><title>0x7fb6b6a4ac13 (?) (1 samples, 0.30%)</title><rect x="52" y="1412" width="3" height="15" fill="rgb(251,201,29)"/><text x="55.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="1428" width="3" height="15" fill="rgb(246,108,50)"/><text x="55.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="1444" width="3" height="15" fill="rgb(250,134,11)"/><text x="55.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="1460" width="3" height="15" fill="rgb(220,71,29)"/><text x="55.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="52" y="1476" width="3" height="15" fill="rgb(216,103,23)"/><text x="55.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="1492" width="3" height="15" fill="rgb(253,27,27)"/><text x="55.00" y="1502.50"></text></g><g><title>0x7fb6b67a548f (?) (1 samples, 0.30%)</title><rect x="52" y="1508" width="3" height="15" fill="rgb(211,167,0)"/><text x="55.00" y="1518.50"></text></g><g><title>0x7fb6b67a32d6 (?) (1 samples, 0.30%)</title><rect x="52" y="1524" width="3" height="15" fill="rgb(205,156,41)"/><text x="55.00" y="1534.50"></text></g><g><title>&lt;module&gt; (&lt;string&gt;) (1 samples, 0.30%)</title><rect x="52" y="1540" width="3" height="15" fill="rgb(227,159,20)"/><text x="55.00" y="1550.50"></text></g><g><title>register (abc.py) (1 samples, 0.30%)</title><rect x="52" y="1556" width="3" height="15" fill="rgb(208,61,25)"/><text x="55.00" y="1566.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.30%)</title><rect x="52" y="1572" width="3" height="15" fill="rgb(214,34,20)"/><text x="55.00" y="1582.50"></text></g><g><title>DataFrame (pandas/core/frame.py) (1 samples, 0.30%)</title><rect x="55" y="1028" width="4" height="15" fill="rgb(229,53,21)"/><text x="58.00" y="1038.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.30%)</title><rect x="59" y="1108" width="3" height="15" fill="rgb(228,72,13)"/><text x="62.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="59" y="1124" width="3" height="15" fill="rgb(243,187,0)"/><text x="62.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="59" y="1140" width="3" height="15" fill="rgb(242,113,16)"/><text x="62.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="59" y="1156" width="3" height="15" fill="rgb(235,132,6)"/><text x="62.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="59" y="1172" width="3" height="15" fill="rgb(253,137,19)"/><text x="62.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="59" y="1188" width="3" height="15" fill="rgb(253,195,28)"/><text x="62.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.30%)</title><rect x="59" y="1204" width="3" height="15" fill="rgb(250,16,26)"/><text x="62.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="59" y="1220" width="3" height="15" fill="rgb(217,221,43)"/><text x="62.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="59" y="1236" width="3" height="15" fill="rgb(211,224,46)"/><text x="62.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="59" y="1252" width="3" height="15" fill="rgb(243,115,29)"/><text x="62.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="59" y="1268" width="3" height="15" fill="rgb(254,127,3)"/><text x="62.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="59" y="1284" width="3" height="15" fill="rgb(253,159,25)"/><text x="62.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.30%)</title><rect x="59" y="1300" width="3" height="15" fill="rgb(243,221,43)"/><text x="62.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="59" y="1316" width="3" height="15" fill="rgb(219,14,36)"/><text x="62.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="59" y="1332" width="3" height="15" fill="rgb(210,57,14)"/><text x="62.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="59" y="1348" width="3" height="15" fill="rgb(211,108,21)"/><text x="62.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="59" y="1364" width="3" height="15" fill="rgb(215,145,15)"/><text x="62.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="59" y="1380" width="3" height="15" fill="rgb(228,205,24)"/><text x="62.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/category.py) (1 samples, 0.30%)</title><rect x="59" y="1396" width="3" height="15" fill="rgb(238,42,5)"/><text x="62.00" y="1406.50"></text></g><g><title>CategoricalIndex (pandas/core/indexes/category.py) (1 samples, 0.30%)</title><rect x="59" y="1412" width="3" height="15" fill="rgb(219,202,10)"/><text x="62.00" y="1422.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.30%)</title><rect x="59" y="1428" width="3" height="15" fill="rgb(206,218,9)"/><text x="62.00" y="1438.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.30%)</title><rect x="59" y="1444" width="3" height="15" fill="rgb(209,14,25)"/><text x="62.00" y="1454.50"></text></g><g><title>sub (re.py) (1 samples, 0.30%)</title><rect x="59" y="1460" width="3" height="15" fill="rgb(216,229,22)"/><text x="62.00" y="1470.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.30%)</title><rect x="59" y="1476" width="3" height="15" fill="rgb(228,77,19)"/><text x="62.00" y="1486.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (9 samples, 2.69%)</title><rect x="34" y="340" width="32" height="15" fill="rgb(226,133,9)"/><text x="37.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.69%)</title><rect x="34" y="356" width="32" height="15" fill="rgb(224,181,49)"/><text x="37.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.69%)</title><rect x="34" y="372" width="32" height="15" fill="rgb(232,126,21)"/><text x="37.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.69%)</title><rect x="34" y="388" width="32" height="15" fill="rgb(242,29,15)"/><text x="37.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.69%)</title><rect x="34" y="404" width="32" height="15" fill="rgb(245,223,53)"/><text x="37.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.69%)</title><rect x="34" y="420" width="32" height="15" fill="rgb(254,202,52)"/><text x="37.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (9 samples, 2.69%)</title><rect x="34" y="436" width="32" height="15" fill="rgb(249,9,12)"/><text x="37.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.69%)</title><rect x="34" y="452" width="32" height="15" fill="rgb(212,212,41)"/><text x="37.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.69%)</title><rect x="34" y="468" width="32" height="15" fill="rgb(216,94,53)"/><text x="37.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="52" y="484" width="14" height="15" fill="rgb(252,170,14)"/><text x="55.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.19%)</title><rect x="52" y="500" width="14" height="15" fill="rgb(228,197,13)"/><text x="55.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="52" y="516" width="14" height="15" fill="rgb(243,204,26)"/><text x="55.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 1.19%)</title><rect x="52" y="532" width="14" height="15" fill="rgb(250,128,16)"/><text x="55.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="52" y="548" width="14" height="15" fill="rgb(239,203,18)"/><text x="55.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="52" y="564" width="14" height="15" fill="rgb(228,84,43)"/><text x="55.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="52" y="580" width="14" height="15" fill="rgb(247,107,46)"/><text x="55.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.19%)</title><rect x="52" y="596" width="14" height="15" fill="rgb(254,6,50)"/><text x="55.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="52" y="612" width="14" height="15" fill="rgb(254,193,5)"/><text x="55.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 1.19%)</title><rect x="52" y="628" width="14" height="15" fill="rgb(233,185,5)"/><text x="55.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="52" y="644" width="14" height="15" fill="rgb(237,162,27)"/><text x="55.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="52" y="660" width="14" height="15" fill="rgb(220,23,40)"/><text x="55.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="52" y="676" width="14" height="15" fill="rgb(250,210,2)"/><text x="55.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.19%)</title><rect x="52" y="692" width="14" height="15" fill="rgb(205,142,28)"/><text x="55.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="52" y="708" width="14" height="15" fill="rgb(248,23,34)"/><text x="55.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.90%)</title><rect x="55" y="724" width="11" height="15" fill="rgb(219,82,45)"/><text x="58.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.90%)</title><rect x="55" y="740" width="11" height="15" fill="rgb(238,224,36)"/><text x="58.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.90%)</title><rect x="55" y="756" width="11" height="15" fill="rgb(233,111,9)"/><text x="58.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.90%)</title><rect x="55" y="772" width="11" height="15" fill="rgb(229,37,42)"/><text x="58.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.90%)</title><rect x="55" y="788" width="11" height="15" fill="rgb(205,99,44)"/><text x="58.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.90%)</title><rect x="55" y="804" width="11" height="15" fill="rgb(242,161,25)"/><text x="58.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 0.90%)</title><rect x="55" y="820" width="11" height="15" fill="rgb(231,44,52)"/><text x="58.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.90%)</title><rect x="55" y="836" width="11" height="15" fill="rgb(245,140,15)"/><text x="58.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.90%)</title><rect x="55" y="852" width="11" height="15" fill="rgb(240,43,53)"/><text x="58.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.90%)</title><rect x="55" y="868" width="11" height="15" fill="rgb(212,47,17)"/><text x="58.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.90%)</title><rect x="55" y="884" width="11" height="15" fill="rgb(227,95,5)"/><text x="58.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.90%)</title><rect x="55" y="900" width="11" height="15" fill="rgb(237,128,16)"/><text x="58.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 0.90%)</title><rect x="55" y="916" width="11" height="15" fill="rgb(223,38,41)"/><text x="58.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.90%)</title><rect x="55" y="932" width="11" height="15" fill="rgb(235,22,22)"/><text x="58.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.90%)</title><rect x="55" y="948" width="11" height="15" fill="rgb(238,215,23)"/><text x="58.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.90%)</title><rect x="55" y="964" width="11" height="15" fill="rgb(242,157,34)"/><text x="58.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.90%)</title><rect x="55" y="980" width="11" height="15" fill="rgb(242,174,19)"/><text x="58.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.90%)</title><rect x="55" y="996" width="11" height="15" fill="rgb(246,24,17)"/><text x="58.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.90%)</title><rect x="55" y="1012" width="11" height="15" fill="rgb(245,126,8)"/><text x="58.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="59" y="1028" width="7" height="15" fill="rgb(216,175,52)"/><text x="62.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="59" y="1044" width="7" height="15" fill="rgb(206,173,45)"/><text x="62.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="59" y="1060" width="7" height="15" fill="rgb(253,136,15)"/><text x="62.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="59" y="1076" width="7" height="15" fill="rgb(223,132,40)"/><text x="62.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="59" y="1092" width="7" height="15" fill="rgb(219,42,40)"/><text x="62.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.30%)</title><rect x="62" y="1108" width="4" height="15" fill="rgb(223,170,23)"/><text x="65.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1124" width="4" height="15" fill="rgb(219,26,18)"/><text x="65.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1140" width="4" height="15" fill="rgb(222,98,39)"/><text x="65.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1156" width="4" height="15" fill="rgb(251,141,4)"/><text x="65.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="62" y="1172" width="4" height="15" fill="rgb(208,36,25)"/><text x="65.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1188" width="4" height="15" fill="rgb(226,75,21)"/><text x="65.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.30%)</title><rect x="62" y="1204" width="4" height="15" fill="rgb(217,192,32)"/><text x="65.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1220" width="4" height="15" fill="rgb(205,34,12)"/><text x="65.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1236" width="4" height="15" fill="rgb(242,83,51)"/><text x="65.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1252" width="4" height="15" fill="rgb(212,165,15)"/><text x="65.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="62" y="1268" width="4" height="15" fill="rgb(237,177,11)"/><text x="65.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1284" width="4" height="15" fill="rgb(235,34,5)"/><text x="65.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.30%)</title><rect x="62" y="1300" width="4" height="15" fill="rgb(215,18,50)"/><text x="65.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1316" width="4" height="15" fill="rgb(234,98,18)"/><text x="65.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1332" width="4" height="15" fill="rgb(206,115,18)"/><text x="65.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1348" width="4" height="15" fill="rgb(234,93,27)"/><text x="65.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="62" y="1364" width="4" height="15" fill="rgb(254,130,13)"/><text x="65.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1380" width="4" height="15" fill="rgb(220,124,41)"/><text x="65.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.30%)</title><rect x="62" y="1396" width="4" height="15" fill="rgb(237,140,44)"/><text x="65.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1412" width="4" height="15" fill="rgb(229,188,40)"/><text x="65.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1428" width="4" height="15" fill="rgb(246,183,35)"/><text x="65.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1444" width="4" height="15" fill="rgb(230,75,22)"/><text x="65.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="62" y="1460" width="4" height="15" fill="rgb(243,147,11)"/><text x="65.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1476" width="4" height="15" fill="rgb(222,47,13)"/><text x="65.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.30%)</title><rect x="62" y="1492" width="4" height="15" fill="rgb(240,90,18)"/><text x="65.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1508" width="4" height="15" fill="rgb(213,4,26)"/><text x="65.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1524" width="4" height="15" fill="rgb(247,51,36)"/><text x="65.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1540" width="4" height="15" fill="rgb(245,1,19)"/><text x="65.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1556" width="4" height="15" fill="rgb(244,179,14)"/><text x="65.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1572" width="4" height="15" fill="rgb(205,131,0)"/><text x="65.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="62" y="1588" width="4" height="15" fill="rgb(243,85,35)"/><text x="65.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1604" width="4" height="15" fill="rgb(244,25,1)"/><text x="65.00" y="1614.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/converter.py) (1 samples, 0.30%)</title><rect x="62" y="1620" width="4" height="15" fill="rgb(214,123,29)"/><text x="65.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1636" width="4" height="15" fill="rgb(222,13,43)"/><text x="65.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1652" width="4" height="15" fill="rgb(232,159,51)"/><text x="65.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1668" width="4" height="15" fill="rgb(215,24,14)"/><text x="65.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="62" y="1684" width="4" height="15" fill="rgb(230,143,45)"/><text x="65.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1700" width="4" height="15" fill="rgb(245,174,3)"/><text x="65.00" y="1710.50"></text></g><g><title>&lt;module&gt; (matplotlib/dates.py) (1 samples, 0.30%)</title><rect x="62" y="1716" width="4" height="15" fill="rgb(249,139,25)"/><text x="65.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1732" width="4" height="15" fill="rgb(246,104,36)"/><text x="65.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1748" width="4" height="15" fill="rgb(205,42,53)"/><text x="65.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1764" width="4" height="15" fill="rgb(236,188,25)"/><text x="65.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="62" y="1780" width="4" height="15" fill="rgb(210,174,28)"/><text x="65.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="62" y="1796" width="4" height="15" fill="rgb(246,197,3)"/><text x="65.00" y="1806.50"></text></g><g><title>&lt;module&gt; (matplotlib/ticker.py) (1 samples, 0.30%)</title><rect x="62" y="1812" width="4" height="15" fill="rgb(228,85,30)"/><text x="65.00" y="1822.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="660" width="3" height="15" fill="rgb(229,131,2)"/><text x="69.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.30%)</title><rect x="66" y="676" width="3" height="15" fill="rgb(205,62,20)"/><text x="69.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="692" width="3" height="15" fill="rgb(249,161,38)"/><text x="69.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="708" width="3" height="15" fill="rgb(230,112,6)"/><text x="69.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="724" width="3" height="15" fill="rgb(218,191,45)"/><text x="69.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="66" y="740" width="3" height="15" fill="rgb(240,17,39)"/><text x="69.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="756" width="3" height="15" fill="rgb(219,3,36)"/><text x="69.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.30%)</title><rect x="66" y="772" width="3" height="15" fill="rgb(215,201,4)"/><text x="69.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="788" width="3" height="15" fill="rgb(216,39,7)"/><text x="69.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="804" width="3" height="15" fill="rgb(209,118,3)"/><text x="69.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="820" width="3" height="15" fill="rgb(220,204,10)"/><text x="69.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="836" width="3" height="15" fill="rgb(216,147,38)"/><text x="69.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="852" width="3" height="15" fill="rgb(212,107,30)"/><text x="69.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="66" y="868" width="3" height="15" fill="rgb(237,148,20)"/><text x="69.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="884" width="3" height="15" fill="rgb(236,170,14)"/><text x="69.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.30%)</title><rect x="66" y="900" width="3" height="15" fill="rgb(247,32,14)"/><text x="69.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="916" width="3" height="15" fill="rgb(221,76,23)"/><text x="69.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="932" width="3" height="15" fill="rgb(219,146,40)"/><text x="69.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="948" width="3" height="15" fill="rgb(219,16,7)"/><text x="69.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="66" y="964" width="3" height="15" fill="rgb(208,115,30)"/><text x="69.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="980" width="3" height="15" fill="rgb(218,117,40)"/><text x="69.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.30%)</title><rect x="66" y="996" width="3" height="15" fill="rgb(232,206,13)"/><text x="69.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="1012" width="3" height="15" fill="rgb(226,101,35)"/><text x="69.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="1028" width="3" height="15" fill="rgb(205,169,6)"/><text x="69.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="1044" width="3" height="15" fill="rgb(235,109,37)"/><text x="69.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="66" y="1060" width="3" height="15" fill="rgb(222,170,32)"/><text x="69.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="1076" width="3" height="15" fill="rgb(249,104,40)"/><text x="69.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.30%)</title><rect x="66" y="1092" width="3" height="15" fill="rgb(239,8,18)"/><text x="69.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="1108" width="3" height="15" fill="rgb(228,131,15)"/><text x="69.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="1124" width="3" height="15" fill="rgb(236,150,29)"/><text x="69.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="66" y="1140" width="3" height="15" fill="rgb(226,128,7)"/><text x="69.00" y="1150.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (11 samples, 3.28%)</title><rect x="34" y="244" width="39" height="15" fill="rgb(216,219,28)"/><text x="37.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.28%)</title><rect x="34" y="260" width="39" height="15" fill="rgb(230,136,11)"/><text x="37.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.28%)</title><rect x="34" y="276" width="39" height="15" fill="rgb(229,215,5)"/><text x="37.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.28%)</title><rect x="34" y="292" width="39" height="15" fill="rgb(244,156,44)"/><text x="37.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 3.28%)</title><rect x="34" y="308" width="39" height="15" fill="rgb(219,46,38)"/><text x="37.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.28%)</title><rect x="34" y="324" width="39" height="15" fill="rgb(218,1,14)"/><text x="37.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.60%)</title><rect x="66" y="340" width="7" height="15" fill="rgb(250,208,1)"/><text x="69.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="66" y="356" width="7" height="15" fill="rgb(244,98,10)"/><text x="69.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="66" y="372" width="7" height="15" fill="rgb(213,116,16)"/><text x="69.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="66" y="388" width="7" height="15" fill="rgb(246,90,28)"/><text x="69.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="66" y="404" width="7" height="15" fill="rgb(220,31,28)"/><text x="69.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="66" y="420" width="7" height="15" fill="rgb(245,34,53)"/><text x="69.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="66" y="436" width="7" height="15" fill="rgb(222,119,50)"/><text x="69.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="66" y="452" width="7" height="15" fill="rgb(244,67,12)"/><text x="69.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="66" y="468" width="7" height="15" fill="rgb(249,114,18)"/><text x="69.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.60%)</title><rect x="66" y="484" width="7" height="15" fill="rgb(226,229,42)"/><text x="69.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="66" y="500" width="7" height="15" fill="rgb(242,92,28)"/><text x="69.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="66" y="516" width="7" height="15" fill="rgb(231,46,19)"/><text x="69.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="66" y="532" width="7" height="15" fill="rgb(239,195,53)"/><text x="69.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="66" y="548" width="7" height="15" fill="rgb(238,83,17)"/><text x="69.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="66" y="564" width="7" height="15" fill="rgb(205,209,25)"/><text x="69.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.60%)</title><rect x="66" y="580" width="7" height="15" fill="rgb(241,226,50)"/><text x="69.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="66" y="596" width="7" height="15" fill="rgb(245,176,23)"/><text x="69.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="66" y="612" width="7" height="15" fill="rgb(235,142,27)"/><text x="69.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="66" y="628" width="7" height="15" fill="rgb(217,21,18)"/><text x="69.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="66" y="644" width="7" height="15" fill="rgb(207,43,52)"/><text x="69.00" y="654.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="69" y="660" width="4" height="15" fill="rgb(233,145,34)"/><text x="72.00" y="670.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="69" y="676" width="4" height="15" fill="rgb(251,211,43)"/><text x="72.00" y="686.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.30%)</title><rect x="73" y="372" width="3" height="15" fill="rgb(224,139,16)"/><text x="76.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="73" y="388" width="3" height="15" fill="rgb(229,142,36)"/><text x="76.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="73" y="404" width="3" height="15" fill="rgb(248,17,46)"/><text x="76.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="73" y="420" width="3" height="15" fill="rgb(208,0,49)"/><text x="76.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="73" y="436" width="3" height="15" fill="rgb(207,165,35)"/><text x="76.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="73" y="452" width="3" height="15" fill="rgb(231,107,29)"/><text x="76.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="73" y="468" width="3" height="15" fill="rgb(223,162,39)"/><text x="76.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="73" y="484" width="3" height="15" fill="rgb(252,135,43)"/><text x="76.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_add_newdocs.py) (1 samples, 0.30%)</title><rect x="73" y="500" width="3" height="15" fill="rgb(254,214,29)"/><text x="76.00" y="510.50"></text></g><g><title>add_newdoc (numpy/core/function_base.py) (1 samples, 0.30%)</title><rect x="73" y="516" width="3" height="15" fill="rgb(248,33,11)"/><text x="76.00" y="526.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.60%)</title><rect x="73" y="244" width="7" height="15" fill="rgb(245,115,5)"/><text x="76.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="73" y="260" width="7" height="15" fill="rgb(221,216,11)"/><text x="76.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="73" y="276" width="7" height="15" fill="rgb(237,139,7)"/><text x="76.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="73" y="292" width="7" height="15" fill="rgb(251,46,46)"/><text x="76.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="73" y="308" width="7" height="15" fill="rgb(229,196,31)"/><text x="76.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="73" y="324" width="7" height="15" fill="rgb(254,31,40)"/><text x="76.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="73" y="340" width="7" height="15" fill="rgb(245,81,2)"/><text x="76.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="73" y="356" width="7" height="15" fill="rgb(221,58,38)"/><text x="76.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/ma/__init__.py) (1 samples, 0.30%)</title><rect x="76" y="372" width="4" height="15" fill="rgb(233,141,0)"/><text x="79.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="76" y="388" width="4" height="15" fill="rgb(223,111,4)"/><text x="79.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="76" y="404" width="4" height="15" fill="rgb(210,91,37)"/><text x="79.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="76" y="420" width="4" height="15" fill="rgb(232,17,52)"/><text x="79.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="76" y="436" width="4" height="15" fill="rgb(209,40,33)"/><text x="79.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="76" y="452" width="4" height="15" fill="rgb(243,74,4)"/><text x="79.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="76" y="468" width="4" height="15" fill="rgb(220,76,50)"/><text x="79.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="76" y="484" width="4" height="15" fill="rgb(233,80,51)"/><text x="79.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/ma/core.py) (1 samples, 0.30%)</title><rect x="76" y="500" width="4" height="15" fill="rgb(235,4,52)"/><text x="79.00" y="510.50"></text></g><g><title>__init__ (numpy/ma/core.py) (1 samples, 0.30%)</title><rect x="76" y="516" width="4" height="15" fill="rgb(208,82,21)"/><text x="79.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 6.27%)</title><rect x="10" y="68" width="73" height="15" fill="rgb(213,229,2)"/><text x="13.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 6.27%)</title><rect x="10" y="84" width="73" height="15" fill="rgb(235,213,42)"/><text x="13.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 6.27%)</title><rect x="10" y="100" width="73" height="15" fill="rgb(245,82,40)"/><text x="13.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (21 samples, 6.27%)</title><rect x="10" y="116" width="73" height="15" fill="rgb(243,143,1)"/><text x="13.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (21 samples, 6.27%)</title><rect x="10" y="132" width="73" height="15" fill="rgb(217,187,31)"/><text x="13.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_b_reg.py) (21 samples, 6.27%)</title><rect x="10" y="148" width="73" height="15" fill="rgb(239,77,29)"/><text x="13.00" y="158.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 6.27%)</title><rect x="10" y="164" width="73" height="15" fill="rgb(211,114,1)"/><text x="13.00" y="174.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 6.27%)</title><rect x="10" y="180" width="73" height="15" fill="rgb(217,188,50)"/><text x="13.00" y="190.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.18%)</title><rect x="34" y="196" width="49" height="15" fill="rgb(242,29,13)"/><text x="37.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 4.18%)</title><rect x="34" y="212" width="49" height="15" fill="rgb(220,210,29)"/><text x="37.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.18%)</title><rect x="34" y="228" width="49" height="15" fill="rgb(251,71,49)"/><text x="37.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.30%)</title><rect x="80" y="244" width="3" height="15" fill="rgb(228,30,33)"/><text x="83.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="80" y="260" width="3" height="15" fill="rgb(243,97,12)"/><text x="83.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="80" y="276" width="3" height="15" fill="rgb(254,163,8)"/><text x="83.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="80" y="292" width="3" height="15" fill="rgb(241,176,44)"/><text x="83.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="80" y="308" width="3" height="15" fill="rgb(221,84,18)"/><text x="83.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="80" y="324" width="3" height="15" fill="rgb(247,200,24)"/><text x="83.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_least_angle.py) (1 samples, 0.30%)</title><rect x="80" y="340" width="3" height="15" fill="rgb(230,163,31)"/><text x="83.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="80" y="356" width="3" height="15" fill="rgb(252,10,14)"/><text x="83.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="80" y="372" width="3" height="15" fill="rgb(239,3,13)"/><text x="83.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="80" y="388" width="3" height="15" fill="rgb(232,77,33)"/><text x="83.00" y="398.50"></text></g><g><title>datetime_datetime_now (_datetimemodule.c.h) (1 samples, 0.30%)</title><rect x="83" y="68" width="4" height="15" fill="rgb(213,108,35)"/><text x="86.00" y="78.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.30%)</title><rect x="91" y="132" width="3" height="15" fill="rgb(243,153,14)"/><text x="94.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.90%)</title><rect x="91" y="116" width="10" height="15" fill="rgb(251,19,45)"/><text x="94.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.60%)</title><rect x="94" y="132" width="7" height="15" fill="rgb(231,102,3)"/><text x="97.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.60%)</title><rect x="94" y="148" width="7" height="15" fill="rgb(250,144,41)"/><text x="97.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.30%)</title><rect x="172" y="180" width="3" height="15" fill="rgb(218,106,21)"/><text x="175.00" y="190.50"></text></g><g><title>0x15dddcc6c0998262 (?) (1 samples, 0.30%)</title><rect x="196" y="212" width="4" height="15" fill="rgb(224,111,40)"/><text x="199.00" y="222.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.30%)</title><rect x="196" y="228" width="4" height="15" fill="rgb(241,96,37)"/><text x="199.00" y="238.50"></text></g><g><title>0x7ffc79ce4940 ([vdso]) (1 samples, 0.30%)</title><rect x="196" y="244" width="4" height="15" fill="rgb(206,193,36)"/><text x="199.00" y="254.50"></text></g><g><title>0x7fb69eb4dff9 (?) (1 samples, 0.30%)</title><rect x="200" y="212" width="3" height="15" fill="rgb(208,109,39)"/><text x="203.00" y="222.50"></text></g><g><title>0x7fb69eb48ef6 (?) (1 samples, 0.30%)</title><rect x="200" y="228" width="3" height="15" fill="rgb(213,167,43)"/><text x="203.00" y="238.50"></text></g><g><title>0x7fb69eb3d962 (?) (1 samples, 0.30%)</title><rect x="200" y="244" width="3" height="15" fill="rgb(236,55,20)"/><text x="203.00" y="254.50"></text></g><g><title>0x7fb69eb717a7 (?) (1 samples, 0.30%)</title><rect x="200" y="260" width="3" height="15" fill="rgb(218,132,1)"/><text x="203.00" y="270.50"></text></g><g><title>0x7fb69eb71379 (?) (1 samples, 0.30%)</title><rect x="200" y="276" width="3" height="15" fill="rgb(232,17,18)"/><text x="203.00" y="286.50"></text></g><g><title>0x7fb69efcf8b8 (?) (1 samples, 0.30%)</title><rect x="200" y="292" width="3" height="15" fill="rgb(220,31,35)"/><text x="203.00" y="302.50"></text></g><g><title>0x7fb69efcdc7f (?) (1 samples, 0.30%)</title><rect x="200" y="308" width="3" height="15" fill="rgb(210,71,38)"/><text x="203.00" y="318.50"></text></g><g><title>0x7fb69efe099c (?) (1 samples, 0.30%)</title><rect x="200" y="324" width="3" height="15" fill="rgb(208,48,44)"/><text x="203.00" y="334.50"></text></g><g><title>0x7fb69ecc78d6 (?) (1 samples, 0.30%)</title><rect x="200" y="340" width="3" height="15" fill="rgb(221,177,37)"/><text x="203.00" y="350.50"></text></g><g><title>0x7fb69ef7fa18 (?) (1 samples, 0.30%)</title><rect x="200" y="356" width="3" height="15" fill="rgb(214,126,8)"/><text x="203.00" y="366.50"></text></g><g><title>0x7fb6e0b3e144 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="203" y="212" width="4" height="15" fill="rgb(229,160,42)"/><text x="206.00" y="222.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="217" y="244" width="4" height="15" fill="rgb(213,63,9)"/><text x="220.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (5 samples, 1.49%)</title><rect x="207" y="212" width="17" height="15" fill="rgb(248,189,29)"/><text x="210.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="217" y="228" width="7" height="15" fill="rgb(227,161,18)"/><text x="220.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="221" y="244" width="3" height="15" fill="rgb(216,221,28)"/><text x="224.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="221" y="260" width="3" height="15" fill="rgb(244,136,42)"/><text x="224.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="221" y="276" width="3" height="15" fill="rgb(209,132,34)"/><text x="224.00" y="286.50"></text></g><g><title>0x7fb6e0b1da4b (libc-2.29.so) (1 samples, 0.30%)</title><rect x="228" y="228" width="3" height="15" fill="rgb(243,32,52)"/><text x="231.00" y="238.50"></text></g><g><title>0x7fb69eb15ba0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="235" y="244" width="3" height="15" fill="rgb(220,213,16)"/><text x="238.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.30%)</title><rect x="246" y="292" width="3" height="15" fill="rgb(242,34,26)"/><text x="249.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="249" y="292" width="7" height="15" fill="rgb(232,210,51)"/><text x="252.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="249" y="308" width="7" height="15" fill="rgb(215,175,30)"/><text x="252.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="253" y="324" width="3" height="15" fill="rgb(216,76,31)"/><text x="256.00" y="334.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="253" y="340" width="3" height="15" fill="rgb(236,64,11)"/><text x="256.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="256" y="308" width="4" height="15" fill="rgb(251,143,11)"/><text x="259.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="256" y="324" width="4" height="15" fill="rgb(224,3,54)"/><text x="259.00" y="334.50"></text></g><g><title>0x7fb6e0b1ec34 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="263" y="356" width="4" height="15" fill="rgb(223,184,22)"/><text x="266.00" y="366.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.19%)</title><rect x="256" y="292" width="14" height="15" fill="rgb(223,2,7)"/><text x="259.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.90%)</title><rect x="260" y="308" width="10" height="15" fill="rgb(220,29,43)"/><text x="263.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.60%)</title><rect x="263" y="324" width="7" height="15" fill="rgb(249,145,39)"/><text x="266.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.60%)</title><rect x="263" y="340" width="7" height="15" fill="rgb(236,103,54)"/><text x="266.00" y="350.50"></text></g><g><title>0x7fb6e0b1f00a (libc-2.29.so) (1 samples, 0.30%)</title><rect x="267" y="356" width="3" height="15" fill="rgb(206,145,51)"/><text x="270.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionProvider::OnRunStart (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="270" y="292" width="4" height="15" fill="rgb(233,176,52)"/><text x="273.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="274" y="292" width="3" height="15" fill="rgb(230,84,23)"/><text x="277.00" y="302.50"></text></g><g><title>onnxruntime::CheckTypes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="274" y="308" width="3" height="15" fill="rgb(252,219,5)"/><text x="277.00" y="318.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="295" y="356" width="3" height="15" fill="rgb(220,13,6)"/><text x="298.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="295" y="372" width="3" height="15" fill="rgb(219,61,21)"/><text x="298.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.90%)</title><rect x="291" y="340" width="11" height="15" fill="rgb(230,143,0)"/><text x="294.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="298" y="356" width="4" height="15" fill="rgb(208,107,36)"/><text x="301.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="302" y="340" width="3" height="15" fill="rgb(237,217,31)"/><text x="305.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="312" y="500" width="4" height="15" fill="rgb(233,18,24)"/><text x="315.00" y="510.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="312" y="516" width="4" height="15" fill="rgb(208,28,32)"/><text x="315.00" y="526.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="312" y="484" width="7" height="15" fill="rgb(216,82,43)"/><text x="315.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="316" y="500" width="3" height="15" fill="rgb(240,118,7)"/><text x="319.00" y="510.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 6.57%)</title><rect x="246" y="276" width="77" height="15" fill="rgb(210,113,36)"/><text x="249.00" y="286.50">onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 3.88%)</title><rect x="277" y="292" width="46" height="15" fill="rgb(208,213,30)"/><text x="280.00" y="302.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 3.88%)</title><rect x="277" y="308" width="46" height="15" fill="rgb(246,45,25)"/><text x="280.00" y="318.50">onnx..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.58%)</title><rect x="281" y="324" width="42" height="15" fill="rgb(223,191,5)"/><text x="284.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.49%)</title><rect x="305" y="340" width="18" height="15" fill="rgb(253,38,17)"/><text x="308.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.19%)</title><rect x="309" y="356" width="14" height="15" fill="rgb(209,64,51)"/><text x="312.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.19%)</title><rect x="309" y="372" width="14" height="15" fill="rgb(227,3,52)"/><text x="312.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.19%)</title><rect x="309" y="388" width="14" height="15" fill="rgb(225,135,40)"/><text x="312.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.19%)</title><rect x="309" y="404" width="14" height="15" fill="rgb(215,52,20)"/><text x="312.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.19%)</title><rect x="309" y="420" width="14" height="15" fill="rgb(216,158,24)"/><text x="312.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.19%)</title><rect x="309" y="436" width="14" height="15" fill="rgb(225,66,16)"/><text x="312.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.90%)</title><rect x="312" y="452" width="11" height="15" fill="rgb(215,20,18)"/><text x="315.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.90%)</title><rect x="312" y="468" width="11" height="15" fill="rgb(246,110,44)"/><text x="315.00" y="478.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="319" y="484" width="4" height="15" fill="rgb(206,64,21)"/><text x="322.00" y="494.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="319" y="500" width="4" height="15" fill="rgb(242,56,8)"/><text x="322.00" y="510.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 7.16%)</title><rect x="242" y="260" width="85" height="15" fill="rgb(231,149,31)"/><text x="245.00" y="270.50">onnxruntim..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; [clone .isra.484] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="323" y="276" width="4" height="15" fill="rgb(232,8,22)"/><text x="326.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="327" y="260" width="7" height="15" fill="rgb(221,153,52)"/><text x="330.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.30%)</title><rect x="330" y="276" width="4" height="15" fill="rgb(210,133,54)"/><text x="333.00" y="286.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="334" y="260" width="3" height="15" fill="rgb(220,70,42)"/><text x="337.00" y="270.50"></text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="337" y="260" width="4" height="15" fill="rgb(218,73,4)"/><text x="340.00" y="270.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="341" y="260" width="3" height="15" fill="rgb(211,52,18)"/><text x="344.00" y="270.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="341" y="276" width="3" height="15" fill="rgb(217,79,11)"/><text x="344.00" y="286.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="348" y="308" width="3" height="15" fill="rgb(235,27,33)"/><text x="351.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="348" y="324" width="3" height="15" fill="rgb(206,124,47)"/><text x="351.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="348" y="340" width="3" height="15" fill="rgb(238,87,4)"/><text x="351.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="348" y="356" width="3" height="15" fill="rgb(221,63,53)"/><text x="351.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="348" y="372" width="3" height="15" fill="rgb(238,43,34)"/><text x="351.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="348" y="388" width="3" height="15" fill="rgb(237,120,49)"/><text x="351.00" y="398.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 9.85%)</title><rect x="238" y="244" width="117" height="15" fill="rgb(249,203,48)"/><text x="241.00" y="254.50">onnxruntime::p..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.90%)</title><rect x="344" y="260" width="11" height="15" fill="rgb(214,201,14)"/><text x="347.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="348" y="276" width="7" height="15" fill="rgb(208,227,31)"/><text x="351.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="348" y="292" width="7" height="15" fill="rgb(248,51,54)"/><text x="351.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::ReleaseBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="351" y="308" width="4" height="15" fill="rgb(237,112,28)"/><text x="354.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="355" y="244" width="3" height="15" fill="rgb(251,63,9)"/><text x="358.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="355" y="260" width="3" height="15" fill="rgb(236,132,26)"/><text x="358.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="355" y="276" width="3" height="15" fill="rgb(220,80,37)"/><text x="358.00" y="286.50"></text></g><g><title>run (onnxruntime/capi/session.py) (53 samples, 15.82%)</title><rect x="179" y="196" width="186" height="15" fill="rgb(221,11,38)"/><text x="182.00" y="206.50">run (onnxruntime/capi/se..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (40 samples, 11.94%)</title><rect x="224" y="212" width="141" height="15" fill="rgb(238,94,7)"/><text x="227.00" y="222.50">pybind11::cpp_fun..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (38 samples, 11.34%)</title><rect x="231" y="228" width="134" height="15" fill="rgb(207,0,23)"/><text x="234.00" y="238.50">void pybind11::c..</text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="358" y="244" width="7" height="15" fill="rgb(249,100,26)"/><text x="361.00" y="254.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="362" y="260" width="3" height="15" fill="rgb(213,64,45)"/><text x="365.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (69 samples, 20.60%)</title><rect x="126" y="132" width="243" height="15" fill="rgb(248,134,29)"/><text x="129.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (69 samples, 20.60%)</title><rect x="126" y="148" width="243" height="15" fill="rgb(215,161,12)"/><text x="129.00" y="158.50">run (mlprodict/onnxrt/onnx_infer..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (65 samples, 19.40%)</title><rect x="140" y="164" width="229" height="15" fill="rgb(227,0,16)"/><text x="143.00" y="174.50">_run_whole_runtime (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (55 samples, 16.42%)</title><rect x="175" y="180" width="194" height="15" fill="rgb(229,76,13)"/><text x="178.00" y="190.50">run (mlprodict/onnxrt/ops..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.30%)</title><rect x="365" y="196" width="4" height="15" fill="rgb(225,209,46)"/><text x="368.00" y="206.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.30%)</title><rect x="369" y="132" width="3" height="15" fill="rgb(251,23,51)"/><text x="372.00" y="142.50"></text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py) (82 samples, 24.48%)</title><rect x="87" y="100" width="289" height="15" fill="rgb(212,114,34)"/><text x="90.00" y="110.50">profile (bench_LinearRegression_defaul..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (78 samples, 23.28%)</title><rect x="101" y="116" width="275" height="15" fill="rgb(239,0,12)"/><text x="104.00" y="126.50">time_predict (mlprodict/asv_benchmar..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.30%)</title><rect x="372" y="132" width="4" height="15" fill="rgb(226,201,53)"/><text x="375.00" y="142.50"></text></g><g><title>profile_ort (bench_LinearRegression_default_b_reg_1_50_12_float_.py) (83 samples, 24.78%)</title><rect x="87" y="68" width="292" height="15" fill="rgb(254,38,7)"/><text x="90.00" y="78.50">profile_ort (bench_LinearRegression_def..</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py) (83 samples, 24.78%)</title><rect x="87" y="84" width="292" height="15" fill="rgb(233,108,26)"/><text x="90.00" y="94.50">setup_profile (bench_LinearRegression_d..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.30%)</title><rect x="376" y="100" width="3" height="15" fill="rgb(223,183,52)"/><text x="379.00" y="110.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.30%)</title><rect x="376" y="116" width="3" height="15" fill="rgb(239,37,25)"/><text x="379.00" y="126.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.30%)</title><rect x="376" y="132" width="3" height="15" fill="rgb(228,212,45)"/><text x="379.00" y="142.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.30%)</title><rect x="383" y="132" width="3" height="15" fill="rgb(250,90,39)"/><text x="386.00" y="142.50"></text></g><g><title>0x7fb6dfd3f7c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="383" y="148" width="3" height="15" fill="rgb(224,46,32)"/><text x="386.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.60%)</title><rect x="383" y="116" width="7" height="15" fill="rgb(226,150,50)"/><text x="386.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.30%)</title><rect x="386" y="132" width="4" height="15" fill="rgb(243,139,49)"/><text x="389.00" y="142.50"></text></g><g><title>array_inplace_add (number.c) (1 samples, 0.30%)</title><rect x="541" y="244" width="4" height="15" fill="rgb(236,83,14)"/><text x="544.00" y="254.50"></text></g><g><title>0x7fb6e0b33757 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="573" y="308" width="4" height="15" fill="rgb(208,98,21)"/><text x="576.00" y="318.50"></text></g><g><title>PyArray_Return (scalarapi.c) (2 samples, 0.60%)</title><rect x="577" y="340" width="7" height="15" fill="rgb(234,125,44)"/><text x="580.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="584" y="340" width="3" height="15" fill="rgb(242,65,31)"/><text x="587.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.30%)</title><rect x="587" y="388" width="4" height="15" fill="rgb(210,140,50)"/><text x="590.00" y="398.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.30%)</title><rect x="587" y="404" width="4" height="15" fill="rgb(226,62,4)"/><text x="590.00" y="414.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h) (1 samples, 0.30%)</title><rect x="587" y="420" width="4" height="15" fill="rgb(209,174,39)"/><text x="590.00" y="430.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 2.39%)</title><rect x="566" y="276" width="28" height="15" fill="rgb(236,166,29)"/><text x="569.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (8 samples, 2.39%)</title><rect x="566" y="292" width="28" height="15" fill="rgb(248,120,28)"/><text x="569.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (5 samples, 1.49%)</title><rect x="577" y="308" width="17" height="15" fill="rgb(209,113,38)"/><text x="580.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (5 samples, 1.49%)</title><rect x="577" y="324" width="17" height="15" fill="rgb(254,120,17)"/><text x="580.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (2 samples, 0.60%)</title><rect x="587" y="340" width="7" height="15" fill="rgb(213,112,1)"/><text x="590.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.60%)</title><rect x="587" y="356" width="7" height="15" fill="rgb(249,191,21)"/><text x="590.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.60%)</title><rect x="587" y="372" width="7" height="15" fill="rgb(205,154,9)"/><text x="590.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.30%)</title><rect x="591" y="388" width="3" height="15" fill="rgb(228,176,35)"/><text x="594.00" y="398.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (15 samples, 4.48%)</title><rect x="545" y="244" width="53" height="15" fill="rgb(230,204,45)"/><text x="548.00" y="254.50">numpy..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (11 samples, 3.28%)</title><rect x="559" y="260" width="39" height="15" fill="rgb(247,44,7)"/><text x="562.00" y="270.50">dot..</text></g><g><title>dot (numpy/core/multiarray.py) (1 samples, 0.30%)</title><rect x="594" y="276" width="4" height="15" fill="rgb(233,215,18)"/><text x="597.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (2 samples, 0.60%)</title><rect x="601" y="292" width="7" height="15" fill="rgb(233,171,26)"/><text x="604.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.30%)</title><rect x="608" y="308" width="4" height="15" fill="rgb(213,118,4)"/><text x="611.00" y="318.50"></text></g><g><title>0x7fb6e0b1d929 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="608" y="324" width="4" height="15" fill="rgb(243,20,7)"/><text x="611.00" y="334.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (61 samples, 18.21%)</title><rect x="400" y="132" width="215" height="15" fill="rgb(244,145,16)"/><text x="403.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (61 samples, 18.21%)</title><rect x="400" y="148" width="215" height="15" fill="rgb(250,144,43)"/><text x="403.00" y="158.50">run (mlprodict/onnxrt/onnx_i..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (54 samples, 16.12%)</title><rect x="425" y="164" width="190" height="15" fill="rgb(236,30,51)"/><text x="428.00" y="174.50">_run_sequence_runtime (m..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (48 samples, 14.33%)</title><rect x="446" y="180" width="169" height="15" fill="rgb(248,153,6)"/><text x="449.00" y="190.50">run (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (31 samples, 9.25%)</title><rect x="506" y="196" width="109" height="15" fill="rgb(235,113,42)"/><text x="509.00" y="206.50">run (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (26 samples, 7.76%)</title><rect x="524" y="212" width="91" height="15" fill="rgb(235,146,42)"/><text x="527.00" y="222.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py) (25 samples, 7.46%)</title><rect x="527" y="228" width="88" height="15" fill="rgb(250,166,2)"/><text x="530.00" y="238.50">_run (mlpr..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.49%)</title><rect x="598" y="244" width="17" height="15" fill="rgb(217,67,14)"/><text x="601.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.49%)</title><rect x="598" y="260" width="17" height="15" fill="rgb(249,201,49)"/><text x="601.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.49%)</title><rect x="598" y="276" width="17" height="15" fill="rgb(209,147,0)"/><text x="601.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.60%)</title><rect x="608" y="292" width="7" height="15" fill="rgb(251,133,3)"/><text x="611.00" y="302.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c) (1 samples, 0.30%)</title><rect x="612" y="308" width="3" height="15" fill="rgb(244,177,28)"/><text x="615.00" y="318.50"></text></g><g><title>profile_pyrt (bench_LinearRegression_default_b_reg_1_50_12_float_.py) (68 samples, 20.30%)</title><rect x="379" y="68" width="240" height="15" fill="rgb(239,30,50)"/><text x="382.00" y="78.50">profile_pyrt (bench_LinearRegre..</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py) (68 samples, 20.30%)</title><rect x="379" y="84" width="240" height="15" fill="rgb(237,149,18)"/><text x="382.00" y="94.50">setup_profile (bench_LinearRegr..</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py) (68 samples, 20.30%)</title><rect x="379" y="100" width="240" height="15" fill="rgb(220,40,47)"/><text x="382.00" y="110.50">profile (bench_LinearRegression..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (65 samples, 19.40%)</title><rect x="390" y="116" width="229" height="15" fill="rgb(215,65,21)"/><text x="393.00" y="126.50">time_predict (mlprodict/asv_be..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.30%)</title><rect x="615" y="132" width="4" height="15" fill="rgb(241,40,33)"/><text x="618.00" y="142.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.30%)</title><rect x="654" y="180" width="4" height="15" fill="rgb(235,89,19)"/><text x="657.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.30%)</title><rect x="654" y="196" width="4" height="15" fill="rgb(211,113,44)"/><text x="657.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.30%)</title><rect x="654" y="212" width="4" height="15" fill="rgb(223,133,39)"/><text x="657.00" y="222.50"></text></g><g><title>try_binary_elide (temp_elide.c) (1 samples, 0.30%)</title><rect x="661" y="196" width="4" height="15" fill="rgb(206,162,43)"/><text x="664.00" y="206.50"></text></g><g><title>can_elide_temp (temp_elide.c) (1 samples, 0.30%)</title><rect x="661" y="212" width="4" height="15" fill="rgb(229,138,10)"/><text x="664.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.60%)</title><rect x="665" y="212" width="7" height="15" fill="rgb(219,222,7)"/><text x="668.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.60%)</title><rect x="665" y="228" width="7" height="15" fill="rgb(229,176,27)"/><text x="668.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.30%)</title><rect x="668" y="244" width="4" height="15" fill="rgb(253,70,32)"/><text x="671.00" y="254.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.30%)</title><rect x="668" y="260" width="4" height="15" fill="rgb(223,86,17)"/><text x="671.00" y="270.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.30%)</title><rect x="668" y="276" width="4" height="15" fill="rgb(238,159,40)"/><text x="671.00" y="286.50"></text></g><g><title>array_add (number.c) (6 samples, 1.79%)</title><rect x="658" y="180" width="21" height="15" fill="rgb(249,149,36)"/><text x="661.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 1.19%)</title><rect x="665" y="196" width="14" height="15" fill="rgb(220,32,45)"/><text x="668.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.60%)</title><rect x="672" y="212" width="7" height="15" fill="rgb(229,46,0)"/><text x="675.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.60%)</title><rect x="672" y="228" width="7" height="15" fill="rgb(251,142,20)"/><text x="675.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.30%)</title><rect x="675" y="244" width="4" height="15" fill="rgb(206,71,8)"/><text x="678.00" y="254.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.30%)</title><rect x="675" y="260" width="4" height="15" fill="rgb(207,52,28)"/><text x="678.00" y="270.50"></text></g><g><title>scalar_value (scalarapi.c) (1 samples, 0.30%)</title><rect x="675" y="276" width="4" height="15" fill="rgb(230,143,54)"/><text x="678.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.30%)</title><rect x="679" y="196" width="3" height="15" fill="rgb(235,88,16)"/><text x="682.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.30%)</title><rect x="679" y="212" width="3" height="15" fill="rgb(237,146,42)"/><text x="682.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.60%)</title><rect x="679" y="180" width="7" height="15" fill="rgb(210,162,19)"/><text x="682.00" y="190.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.30%)</title><rect x="682" y="196" width="4" height="15" fill="rgb(253,161,25)"/><text x="685.00" y="206.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.30%)</title><rect x="682" y="212" width="4" height="15" fill="rgb(250,206,47)"/><text x="685.00" y="222.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 0.90%)</title><rect x="756" y="196" width="11" height="15" fill="rgb(242,100,47)"/><text x="759.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (3 samples, 0.90%)</title><rect x="767" y="196" width="10" height="15" fill="rgb(213,74,20)"/><text x="770.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (5 samples, 1.49%)</title><rect x="777" y="196" width="18" height="15" fill="rgb(245,26,39)"/><text x="780.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="844" y="212" width="7" height="15" fill="rgb(246,158,26)"/><text x="847.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.30%)</title><rect x="851" y="212" width="4" height="15" fill="rgb(219,150,3)"/><text x="854.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (20 samples, 5.97%)</title><rect x="795" y="196" width="70" height="15" fill="rgb(220,159,42)"/><text x="798.00" y="206.50">_assert..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.90%)</title><rect x="855" y="212" width="10" height="15" fill="rgb(212,131,44)"/><text x="858.00" y="222.50"></text></g><g><title>0x7fb6e0b2e910 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="862" y="228" width="3" height="15" fill="rgb(220,82,21)"/><text x="865.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.30%)</title><rect x="865" y="196" width="4" height="15" fill="rgb(237,175,26)"/><text x="868.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (22 samples, 6.57%)</title><rect x="869" y="196" width="77" height="15" fill="rgb(229,124,6)"/><text x="872.00" y="206.50">_num_sam..</text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.90%)</title><rect x="936" y="212" width="10" height="15" fill="rgb(219,133,25)"/><text x="939.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.30%)</title><rect x="943" y="228" width="3" height="15" fill="rgb(240,205,18)"/><text x="946.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.30%)</title><rect x="946" y="196" width="4" height="15" fill="rgb(206,33,15)"/><text x="949.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.30%)</title><rect x="946" y="212" width="4" height="15" fill="rgb(235,23,21)"/><text x="949.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.30%)</title><rect x="950" y="196" width="4" height="15" fill="rgb(205,0,4)"/><text x="953.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.30%)</title><rect x="954" y="212" width="3" height="15" fill="rgb(213,199,27)"/><text x="957.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (5 samples, 1.49%)</title><rect x="954" y="196" width="17" height="15" fill="rgb(251,6,30)"/><text x="957.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (4 samples, 1.19%)</title><rect x="957" y="212" width="14" height="15" fill="rgb(225,179,40)"/><text x="960.00" y="222.50"></text></g><g><title>simplefilter (warnings.py) (11 samples, 3.28%)</title><rect x="971" y="196" width="39" height="15" fill="rgb(234,128,18)"/><text x="974.00" y="206.50">sim..</text></g><g><title>_add_filter (warnings.py) (7 samples, 2.09%)</title><rect x="985" y="212" width="25" height="15" fill="rgb(205,158,39)"/><text x="988.00" y="222.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py) (93 samples, 27.76%)</title><rect x="686" y="180" width="327" height="15" fill="rgb(253,81,18)"/><text x="689.00" y="190.50">check_array (sklearn/utils/validation.py)</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.30%)</title><rect x="1010" y="196" width="3" height="15" fill="rgb(212,185,16)"/><text x="1013.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.60%)</title><rect x="1052" y="212" width="7" height="15" fill="rgb(218,211,50)"/><text x="1055.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (10 samples, 2.99%)</title><rect x="1031" y="196" width="35" height="15" fill="rgb(211,64,26)"/><text x="1034.00" y="206.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.60%)</title><rect x="1059" y="212" width="7" height="15" fill="rgb(230,69,1)"/><text x="1062.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (18 samples, 5.37%)</title><rect x="1013" y="180" width="64" height="15" fill="rgb(247,73,33)"/><text x="1016.00" y="190.50">check_i..</text></g><g><title>isclass (inspect.py) (3 samples, 0.90%)</title><rect x="1066" y="196" width="11" height="15" fill="rgb(219,123,38)"/><text x="1069.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.30%)</title><rect x="1091" y="196" width="3" height="15" fill="rgb(224,46,15)"/><text x="1094.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.60%)</title><rect x="1098" y="212" width="7" height="15" fill="rgb(243,67,7)"/><text x="1101.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.30%)</title><rect x="1101" y="228" width="4" height="15" fill="rgb(254,66,9)"/><text x="1104.00" y="238.50"></text></g><g><title>0x7fb6e0b3e120 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1116" y="244" width="3" height="15" fill="rgb(233,87,29)"/><text x="1119.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.30%)</title><rect x="1119" y="244" width="4" height="15" fill="rgb(237,190,2)"/><text x="1122.00" y="254.50"></text></g><g><title>DOUBLE_dot (arraytypes.c.src) (1 samples, 0.30%)</title><rect x="1119" y="260" width="4" height="15" fill="rgb(233,47,17)"/><text x="1122.00" y="270.50"></text></g><g><title>0x7fb6dfd3edc0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="1119" y="276" width="4" height="15" fill="rgb(212,26,53)"/><text x="1122.00" y="286.50"></text></g><g><title>arrays_overlap (array_assign.c) (1 samples, 0.30%)</title><rect x="1126" y="292" width="4" height="15" fill="rgb(215,143,42)"/><text x="1129.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.30%)</title><rect x="1126" y="308" width="4" height="15" fill="rgb(238,83,21)"/><text x="1129.00" y="318.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.30%)</title><rect x="1126" y="324" width="4" height="15" fill="rgb(232,173,16)"/><text x="1129.00" y="334.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.30%)</title><rect x="1126" y="340" width="4" height="15" fill="rgb(221,138,2)"/><text x="1129.00" y="350.50"></text></g><g><title>broadcast_strides (array_assign.c) (1 samples, 0.30%)</title><rect x="1130" y="292" width="3" height="15" fill="rgb(244,104,15)"/><text x="1133.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (5 samples, 1.49%)</title><rect x="1126" y="276" width="18" height="15" fill="rgb(229,224,19)"/><text x="1129.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 0.90%)</title><rect x="1133" y="292" width="11" height="15" fill="rgb(214,40,47)"/><text x="1136.00" y="302.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.30%)</title><rect x="1140" y="308" width="4" height="15" fill="rgb(240,35,23)"/><text x="1143.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (9 samples, 2.69%)</title><rect x="1126" y="260" width="32" height="15" fill="rgb(211,56,33)"/><text x="1129.00" y="270.50">np..</text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (4 samples, 1.19%)</title><rect x="1144" y="276" width="14" height="15" fill="rgb(248,8,53)"/><text x="1147.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.30%)</title><rect x="1154" y="292" width="4" height="15" fill="rgb(205,195,45)"/><text x="1157.00" y="302.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.30%)</title><rect x="1154" y="308" width="4" height="15" fill="rgb(222,7,33)"/><text x="1157.00" y="318.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.30%)</title><rect x="1158" y="260" width="3" height="15" fill="rgb(245,144,39)"/><text x="1161.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (13 samples, 3.88%)</title><rect x="1123" y="244" width="45" height="15" fill="rgb(212,181,43)"/><text x="1126.00" y="254.50">NpyI..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.60%)</title><rect x="1161" y="260" width="7" height="15" fill="rgb(206,31,30)"/><text x="1164.00" y="270.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.30%)</title><rect x="1165" y="276" width="3" height="15" fill="rgb(233,157,36)"/><text x="1168.00" y="286.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.30%)</title><rect x="1165" y="292" width="3" height="15" fill="rgb(229,188,19)"/><text x="1168.00" y="302.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.30%)</title><rect x="1168" y="244" width="4" height="15" fill="rgb(217,125,53)"/><text x="1171.00" y="254.50"></text></g><g><title>NpyIter_IterationNeedsAPI (nditer_api.c) (1 samples, 0.30%)</title><rect x="1172" y="244" width="3" height="15" fill="rgb(217,83,46)"/><text x="1175.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.30%)</title><rect x="1175" y="244" width="4" height="15" fill="rgb(218,13,2)"/><text x="1178.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.30%)</title><rect x="1175" y="260" width="4" height="15" fill="rgb(216,201,42)"/><text x="1178.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (158 samples, 47.16%)</title><rect x="626" y="132" width="556" height="15" fill="rgb(215,175,16)"/><text x="629.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/linear_model/_base.py) (158 samples, 47.16%)</title><rect x="626" y="148" width="556" height="15" fill="rgb(248,191,25)"/><text x="629.00" y="158.50">predict (sklearn/linear_model/_base.py)</text></g><g><title>_decision_function (sklearn/linear_model/_base.py) (157 samples, 46.87%)</title><rect x="629" y="164" width="553" height="15" fill="rgb(253,64,10)"/><text x="632.00" y="174.50">_decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (30 samples, 8.96%)</title><rect x="1077" y="180" width="105" height="15" fill="rgb(247,135,49)"/><text x="1080.00" y="190.50">safe_sparse_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (25 samples, 7.46%)</title><rect x="1094" y="196" width="88" height="15" fill="rgb(238,89,4)"/><text x="1097.00" y="206.50">ufunc_gene..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (22 samples, 6.57%)</title><rect x="1105" y="212" width="77" height="15" fill="rgb(219,26,6)"/><text x="1108.00" y="222.50">PyUFunc_..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (22 samples, 6.57%)</title><rect x="1105" y="228" width="77" height="15" fill="rgb(250,218,1)"/><text x="1108.00" y="238.50">PyUFunc_..</text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.30%)</title><rect x="1179" y="244" width="3" height="15" fill="rgb(218,208,39)"/><text x="1182.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1_50_12_float_.py) (334 samples, 99.70%)</title><rect x="10" y="52" width="1176" height="15" fill="rgb(240,116,38)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_b_reg_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_LinearRegression_default_b_reg_1_50_12_float_.py) (161 samples, 48.06%)</title><rect x="619" y="68" width="567" height="15" fill="rgb(232,63,17)"/><text x="622.00" y="78.50">profile_skl (bench_LinearRegression_default_b_reg_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py) (161 samples, 48.06%)</title><rect x="619" y="84" width="567" height="15" fill="rgb(217,123,32)"/><text x="622.00" y="94.50">setup_profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py)</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py) (161 samples, 48.06%)</title><rect x="619" y="100" width="567" height="15" fill="rgb(254,128,3)"/><text x="622.00" y="110.50">profile (bench_LinearRegression_default_b_reg_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (160 samples, 47.76%)</title><rect x="622" y="116" width="564" height="15" fill="rgb(242,167,37)"/><text x="625.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.30%)</title><rect x="1182" y="132" width="4" height="15" fill="rgb(233,50,11)"/><text x="1185.00" y="142.50"></text></g><g><title>all (335 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(235,216,18)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.30%)</title><rect x="1186" y="52" width="4" height="15" fill="rgb(214,50,24)"/><text x="1189.00" y="62.50"></text></g></g></svg>