<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2150" onload="init(evt)" viewBox="0 0 1200 2150" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2150" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2133.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2133.00"> </text><g id="frames"><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.25%)</title><rect x="10" y="372" width="2" height="15" fill="rgb(247,68,44)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="10" y="388" width="2" height="15" fill="rgb(230,73,16)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="10" y="404" width="2" height="15" fill="rgb(235,220,33)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="10" y="420" width="2" height="15" fill="rgb(246,81,49)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="10" y="436" width="2" height="15" fill="rgb(241,169,7)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="10" y="452" width="2" height="15" fill="rgb(239,184,26)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="10" y="468" width="2" height="15" fill="rgb(241,28,35)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="10" y="484" width="2" height="15" fill="rgb(222,205,50)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:14) (1 samples, 0.25%)</title><rect x="10" y="500" width="2" height="15" fill="rgb(212,196,14)"/><text x="13.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="10" y="516" width="2" height="15" fill="rgb(237,99,25)"/><text x="13.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="10" y="532" width="2" height="15" fill="rgb(211,117,29)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="10" y="548" width="2" height="15" fill="rgb(245,122,38)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="10" y="564" width="2" height="15" fill="rgb(245,49,34)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="10" y="580" width="2" height="15" fill="rgb(218,75,19)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="10" y="596" width="2" height="15" fill="rgb(211,110,14)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="10" y="612" width="2" height="15" fill="rgb(241,93,4)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:9) (1 samples, 0.25%)</title><rect x="10" y="628" width="2" height="15" fill="rgb(242,112,5)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="10" y="644" width="2" height="15" fill="rgb(221,216,50)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.25%)</title><rect x="10" y="660" width="2" height="15" fill="rgb(211,212,31)"/><text x="13.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="10" y="676" width="2" height="15" fill="rgb(240,79,1)"/><text x="13.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="10" y="692" width="2" height="15" fill="rgb(234,78,25)"/><text x="13.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="10" y="708" width="2" height="15" fill="rgb(222,91,45)"/><text x="13.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="10" y="724" width="2" height="15" fill="rgb(236,134,5)"/><text x="13.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="10" y="740" width="2" height="15" fill="rgb(216,135,37)"/><text x="13.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="10" y="756" width="2" height="15" fill="rgb(207,158,8)"/><text x="13.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py:15) (1 samples, 0.25%)</title><rect x="10" y="772" width="2" height="15" fill="rgb(245,189,45)"/><text x="13.00" y="782.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (2 samples, 0.50%)</title><rect x="10" y="244" width="5" height="15" fill="rgb(214,67,32)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.50%)</title><rect x="10" y="260" width="5" height="15" fill="rgb(240,180,17)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="10" y="276" width="5" height="15" fill="rgb(243,93,27)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(226,209,11)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(248,16,51)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(252,153,18)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(244,70,2)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(214,33,41)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:75) (1 samples, 0.25%)</title><rect x="12" y="372" width="3" height="15" fill="rgb(222,117,42)"/><text x="15.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="12" y="388" width="3" height="15" fill="rgb(220,152,37)"/><text x="15.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="12" y="404" width="3" height="15" fill="rgb(232,86,21)"/><text x="15.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="12" y="420" width="3" height="15" fill="rgb(236,181,53)"/><text x="15.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="12" y="436" width="3" height="15" fill="rgb(245,39,52)"/><text x="15.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="12" y="452" width="3" height="15" fill="rgb(250,84,53)"/><text x="15.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="12" y="468" width="3" height="15" fill="rgb(219,78,1)"/><text x="15.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="12" y="484" width="3" height="15" fill="rgb(241,168,53)"/><text x="15.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py:606) (1 samples, 0.25%)</title><rect x="12" y="500" width="3" height="15" fill="rgb(240,221,41)"/><text x="15.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.25%)</title><rect x="12" y="516" width="3" height="15" fill="rgb(250,137,32)"/><text x="15.00" y="526.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.25%)</title><rect x="12" y="532" width="3" height="15" fill="rgb(206,138,21)"/><text x="15.00" y="542.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:1) (3 samples, 0.75%)</title><rect x="10" y="148" width="8" height="15" fill="rgb(252,25,15)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.75%)</title><rect x="10" y="164" width="8" height="15" fill="rgb(212,77,25)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.75%)</title><rect x="10" y="180" width="8" height="15" fill="rgb(210,141,35)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.75%)</title><rect x="10" y="196" width="8" height="15" fill="rgb(209,52,54)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.75%)</title><rect x="10" y="212" width="8" height="15" fill="rgb(251,82,4)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.75%)</title><rect x="10" y="228" width="8" height="15" fill="rgb(208,100,12)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.25%)</title><rect x="15" y="244" width="3" height="15" fill="rgb(252,7,13)"/><text x="18.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="15" y="260" width="3" height="15" fill="rgb(245,139,4)"/><text x="18.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="15" y="276" width="3" height="15" fill="rgb(207,181,36)"/><text x="18.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="15" y="292" width="3" height="15" fill="rgb(224,67,8)"/><text x="18.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="15" y="308" width="3" height="15" fill="rgb(230,193,28)"/><text x="18.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="15" y="324" width="3" height="15" fill="rgb(216,176,24)"/><text x="18.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="15" y="340" width="3" height="15" fill="rgb(221,5,21)"/><text x="18.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="15" y="356" width="3" height="15" fill="rgb(228,153,23)"/><text x="18.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:12) (1 samples, 0.25%)</title><rect x="15" y="372" width="3" height="15" fill="rgb(233,99,29)"/><text x="18.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="15" y="388" width="3" height="15" fill="rgb(217,71,28)"/><text x="18.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="15" y="404" width="3" height="15" fill="rgb(217,28,19)"/><text x="18.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="15" y="420" width="3" height="15" fill="rgb(229,106,3)"/><text x="18.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="15" y="436" width="3" height="15" fill="rgb(218,128,6)"/><text x="18.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="15" y="452" width="3" height="15" fill="rgb(226,34,45)"/><text x="18.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/nanfunctions.py:797) (1 samples, 0.25%)</title><rect x="15" y="468" width="3" height="15" fill="rgb(232,64,45)"/><text x="18.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.25%)</title><rect x="15" y="484" width="3" height="15" fill="rgb(207,60,35)"/><text x="18.00" y="494.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.25%)</title><rect x="18" y="932" width="3" height="15" fill="rgb(211,24,47)"/><text x="21.00" y="942.50"></text></g><g><title>isdir (genericpath.py:42) (1 samples, 0.25%)</title><rect x="18" y="948" width="3" height="15" fill="rgb(249,172,53)"/><text x="21.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.25%)</title><rect x="18" y="964" width="3" height="15" fill="rgb(231,101,26)"/><text x="21.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.50%)</title><rect x="18" y="852" width="6" height="15" fill="rgb(222,27,39)"/><text x="21.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.50%)</title><rect x="18" y="868" width="6" height="15" fill="rgb(227,192,33)"/><text x="21.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.50%)</title><rect x="18" y="884" width="6" height="15" fill="rgb(239,55,29)"/><text x="21.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.50%)</title><rect x="18" y="900" width="6" height="15" fill="rgb(220,32,2)"/><text x="21.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.50%)</title><rect x="18" y="916" width="6" height="15" fill="rgb(239,75,21)"/><text x="21.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.25%)</title><rect x="21" y="932" width="3" height="15" fill="rgb(249,180,54)"/><text x="24.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.25%)</title><rect x="21" y="948" width="3" height="15" fill="rgb(249,213,47)"/><text x="24.00" y="958.50"></text></g><g><title>__close_nocancel (libc-2.29.so) (1 samples, 0.25%)</title><rect x="21" y="964" width="3" height="15" fill="rgb(215,31,36)"/><text x="24.00" y="974.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.25%)</title><rect x="24" y="964" width="3" height="15" fill="rgb(222,33,10)"/><text x="27.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.25%)</title><rect x="24" y="980" width="3" height="15" fill="rgb(234,57,11)"/><text x="27.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.25%)</title><rect x="24" y="996" width="3" height="15" fill="rgb(218,82,40)"/><text x="27.00" y="1006.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (3 samples, 0.75%)</title><rect x="24" y="932" width="9" height="15" fill="rgb(242,123,48)"/><text x="27.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (3 samples, 0.75%)</title><rect x="24" y="948" width="9" height="15" fill="rgb(218,172,35)"/><text x="27.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (2 samples, 0.50%)</title><rect x="27" y="964" width="6" height="15" fill="rgb(225,206,16)"/><text x="30.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (2 samples, 0.50%)</title><rect x="27" y="980" width="6" height="15" fill="rgb(241,8,40)"/><text x="30.00" y="990.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.25%)</title><rect x="30" y="996" width="3" height="15" fill="rgb(212,17,39)"/><text x="33.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (4 samples, 1.00%)</title><rect x="24" y="852" width="12" height="15" fill="rgb(219,23,42)"/><text x="27.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (4 samples, 1.00%)</title><rect x="24" y="868" width="12" height="15" fill="rgb(225,157,2)"/><text x="27.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (4 samples, 1.00%)</title><rect x="24" y="884" width="12" height="15" fill="rgb(240,56,7)"/><text x="27.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (4 samples, 1.00%)</title><rect x="24" y="900" width="12" height="15" fill="rgb(238,138,10)"/><text x="27.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (4 samples, 1.00%)</title><rect x="24" y="916" width="12" height="15" fill="rgb(240,172,22)"/><text x="27.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:434) (1 samples, 0.25%)</title><rect x="33" y="932" width="3" height="15" fill="rgb(245,171,49)"/><text x="36.00" y="942.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py:54) (1 samples, 0.25%)</title><rect x="36" y="916" width="3" height="15" fill="rgb(248,78,41)"/><text x="39.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:69) (1 samples, 0.25%)</title><rect x="36" y="932" width="3" height="15" fill="rgb(222,56,10)"/><text x="39.00" y="942.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.50%)</title><rect x="36" y="868" width="6" height="15" fill="rgb(239,6,31)"/><text x="39.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.50%)</title><rect x="36" y="884" width="6" height="15" fill="rgb(231,31,53)"/><text x="39.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.50%)</title><rect x="36" y="900" width="6" height="15" fill="rgb(233,181,48)"/><text x="39.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.25%)</title><rect x="39" y="916" width="3" height="15" fill="rgb(249,147,42)"/><text x="42.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.25%)</title><rect x="39" y="932" width="3" height="15" fill="rgb(241,164,9)"/><text x="42.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.25%)</title><rect x="39" y="948" width="3" height="15" fill="rgb(239,85,43)"/><text x="42.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.25%)</title><rect x="39" y="964" width="3" height="15" fill="rgb(237,177,29)"/><text x="42.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.25%)</title><rect x="39" y="980" width="3" height="15" fill="rgb(206,187,53)"/><text x="42.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:121) (1 samples, 0.25%)</title><rect x="39" y="996" width="3" height="15" fill="rgb(248,29,34)"/><text x="42.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:2) (9 samples, 2.25%)</title><rect x="18" y="148" width="27" height="15" fill="rgb(215,111,47)"/><text x="21.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.25%)</title><rect x="18" y="164" width="27" height="15" fill="rgb(244,104,20)"/><text x="21.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 2.25%)</title><rect x="18" y="180" width="27" height="15" fill="rgb(231,100,21)"/><text x="21.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.25%)</title><rect x="18" y="196" width="27" height="15" fill="rgb(228,36,3)"/><text x="21.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.25%)</title><rect x="18" y="212" width="27" height="15" fill="rgb(205,156,16)"/><text x="21.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.25%)</title><rect x="18" y="228" width="27" height="15" fill="rgb(205,211,42)"/><text x="21.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.25%)</title><rect x="18" y="244" width="27" height="15" fill="rgb(253,209,52)"/><text x="21.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.25%)</title><rect x="18" y="260" width="27" height="15" fill="rgb(231,134,28)"/><text x="21.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.25%)</title><rect x="18" y="276" width="27" height="15" fill="rgb(237,73,15)"/><text x="21.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (9 samples, 2.25%)</title><rect x="18" y="292" width="27" height="15" fill="rgb(249,111,46)"/><text x="21.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.25%)</title><rect x="18" y="308" width="27" height="15" fill="rgb(233,184,53)"/><text x="21.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.25%)</title><rect x="18" y="324" width="27" height="15" fill="rgb(242,177,24)"/><text x="21.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.25%)</title><rect x="18" y="340" width="27" height="15" fill="rgb(251,115,0)"/><text x="21.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.25%)</title><rect x="18" y="356" width="27" height="15" fill="rgb(238,128,46)"/><text x="21.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.25%)</title><rect x="18" y="372" width="27" height="15" fill="rgb(234,157,7)"/><text x="21.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (9 samples, 2.25%)</title><rect x="18" y="388" width="27" height="15" fill="rgb(210,33,53)"/><text x="21.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.25%)</title><rect x="18" y="404" width="27" height="15" fill="rgb(206,187,51)"/><text x="21.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.25%)</title><rect x="18" y="420" width="27" height="15" fill="rgb(234,212,20)"/><text x="21.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.25%)</title><rect x="18" y="436" width="27" height="15" fill="rgb(250,133,44)"/><text x="21.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.25%)</title><rect x="18" y="452" width="27" height="15" fill="rgb(214,218,27)"/><text x="21.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.25%)</title><rect x="18" y="468" width="27" height="15" fill="rgb(233,175,16)"/><text x="21.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (9 samples, 2.25%)</title><rect x="18" y="484" width="27" height="15" fill="rgb(213,102,50)"/><text x="21.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.25%)</title><rect x="18" y="500" width="27" height="15" fill="rgb(233,109,36)"/><text x="21.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.25%)</title><rect x="18" y="516" width="27" height="15" fill="rgb(205,0,44)"/><text x="21.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.25%)</title><rect x="18" y="532" width="27" height="15" fill="rgb(227,113,34)"/><text x="21.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.25%)</title><rect x="18" y="548" width="27" height="15" fill="rgb(205,79,25)"/><text x="21.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.25%)</title><rect x="18" y="564" width="27" height="15" fill="rgb(237,222,51)"/><text x="21.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (9 samples, 2.25%)</title><rect x="18" y="580" width="27" height="15" fill="rgb(224,41,16)"/><text x="21.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.25%)</title><rect x="18" y="596" width="27" height="15" fill="rgb(254,107,25)"/><text x="21.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 2.25%)</title><rect x="18" y="612" width="27" height="15" fill="rgb(208,177,12)"/><text x="21.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.25%)</title><rect x="18" y="628" width="27" height="15" fill="rgb(212,217,26)"/><text x="21.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.25%)</title><rect x="18" y="644" width="27" height="15" fill="rgb(243,152,1)"/><text x="21.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.25%)</title><rect x="18" y="660" width="27" height="15" fill="rgb(211,221,54)"/><text x="21.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.25%)</title><rect x="18" y="676" width="27" height="15" fill="rgb(243,215,16)"/><text x="21.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.25%)</title><rect x="18" y="692" width="27" height="15" fill="rgb(252,81,20)"/><text x="21.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.25%)</title><rect x="18" y="708" width="27" height="15" fill="rgb(216,86,47)"/><text x="21.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (9 samples, 2.25%)</title><rect x="18" y="724" width="27" height="15" fill="rgb(250,105,27)"/><text x="21.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.25%)</title><rect x="18" y="740" width="27" height="15" fill="rgb(235,18,47)"/><text x="21.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.25%)</title><rect x="18" y="756" width="27" height="15" fill="rgb(225,124,0)"/><text x="21.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.25%)</title><rect x="18" y="772" width="27" height="15" fill="rgb(244,182,21)"/><text x="21.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.25%)</title><rect x="18" y="788" width="27" height="15" fill="rgb(211,121,32)"/><text x="21.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.25%)</title><rect x="18" y="804" width="27" height="15" fill="rgb(246,229,4)"/><text x="21.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (9 samples, 2.25%)</title><rect x="18" y="820" width="27" height="15" fill="rgb(248,27,18)"/><text x="21.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (9 samples, 2.25%)</title><rect x="18" y="836" width="27" height="15" fill="rgb(224,48,3)"/><text x="21.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 0.75%)</title><rect x="36" y="852" width="9" height="15" fill="rgb(249,140,30)"/><text x="39.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.25%)</title><rect x="42" y="868" width="3" height="15" fill="rgb(218,115,30)"/><text x="45.00" y="878.50"></text></g><g><title>add (pkg_resources/__init__.py:704) (1 samples, 0.25%)</title><rect x="42" y="884" width="3" height="15" fill="rgb(212,8,33)"/><text x="45.00" y="894.50"></text></g><g><title>key (pkg_resources/__init__.py:2639) (1 samples, 0.25%)</title><rect x="42" y="900" width="3" height="15" fill="rgb(252,122,11)"/><text x="45.00" y="910.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py:47) (1 samples, 0.25%)</title><rect x="45" y="964" width="3" height="15" fill="rgb(247,20,46)"/><text x="48.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="45" y="980" width="3" height="15" fill="rgb(252,28,13)"/><text x="48.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="45" y="996" width="3" height="15" fill="rgb(251,79,24)"/><text x="48.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="45" y="1012" width="3" height="15" fill="rgb(223,27,3)"/><text x="48.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="45" y="1028" width="3" height="15" fill="rgb(227,157,23)"/><text x="48.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="45" y="1044" width="3" height="15" fill="rgb(227,174,26)"/><text x="48.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/mbcsgroupprober.py:31) (1 samples, 0.25%)</title><rect x="45" y="1060" width="3" height="15" fill="rgb(217,15,45)"/><text x="48.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="45" y="1076" width="3" height="15" fill="rgb(217,192,29)"/><text x="48.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="45" y="1092" width="3" height="15" fill="rgb(230,145,25)"/><text x="48.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="45" y="1108" width="3" height="15" fill="rgb(250,118,33)"/><text x="48.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="45" y="1124" width="3" height="15" fill="rgb(233,15,33)"/><text x="48.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="45" y="1140" width="3" height="15" fill="rgb(226,65,18)"/><text x="48.00" y="1150.50"></text></g><g><title>&lt;module&gt; (chardet/utf8prober.py:35) (1 samples, 0.25%)</title><rect x="45" y="1156" width="3" height="15" fill="rgb(231,107,29)"/><text x="48.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.50%)</title><rect x="45" y="244" width="6" height="15" fill="rgb(240,108,14)"/><text x="48.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="45" y="260" width="6" height="15" fill="rgb(230,88,17)"/><text x="48.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="45" y="276" width="6" height="15" fill="rgb(228,51,49)"/><text x="48.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="45" y="292" width="6" height="15" fill="rgb(252,144,41)"/><text x="48.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="45" y="308" width="6" height="15" fill="rgb(253,2,52)"/><text x="48.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="45" y="324" width="6" height="15" fill="rgb(239,217,37)"/><text x="48.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.50%)</title><rect x="45" y="340" width="6" height="15" fill="rgb(228,195,17)"/><text x="48.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="45" y="356" width="6" height="15" fill="rgb(215,100,50)"/><text x="48.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.50%)</title><rect x="45" y="372" width="6" height="15" fill="rgb(250,19,24)"/><text x="48.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="45" y="388" width="6" height="15" fill="rgb(218,65,31)"/><text x="48.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="45" y="404" width="6" height="15" fill="rgb(230,171,45)"/><text x="48.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="45" y="420" width="6" height="15" fill="rgb(205,6,37)"/><text x="48.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="45" y="436" width="6" height="15" fill="rgb(238,153,5)"/><text x="48.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="45" y="452" width="6" height="15" fill="rgb(243,61,30)"/><text x="48.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="45" y="468" width="6" height="15" fill="rgb(240,115,17)"/><text x="48.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.50%)</title><rect x="45" y="484" width="6" height="15" fill="rgb(206,190,53)"/><text x="48.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="45" y="500" width="6" height="15" fill="rgb(233,94,46)"/><text x="48.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="45" y="516" width="6" height="15" fill="rgb(246,155,40)"/><text x="48.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="45" y="532" width="6" height="15" fill="rgb(251,140,3)"/><text x="48.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="45" y="548" width="6" height="15" fill="rgb(237,143,49)"/><text x="48.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="45" y="564" width="6" height="15" fill="rgb(240,165,3)"/><text x="48.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.50%)</title><rect x="45" y="580" width="6" height="15" fill="rgb(254,211,51)"/><text x="48.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="45" y="596" width="6" height="15" fill="rgb(251,122,9)"/><text x="48.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="45" y="612" width="6" height="15" fill="rgb(231,76,18)"/><text x="48.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="45" y="628" width="6" height="15" fill="rgb(225,100,50)"/><text x="48.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="45" y="644" width="6" height="15" fill="rgb(242,159,37)"/><text x="48.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="45" y="660" width="6" height="15" fill="rgb(236,104,42)"/><text x="48.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.50%)</title><rect x="45" y="676" width="6" height="15" fill="rgb(237,175,42)"/><text x="48.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="45" y="692" width="6" height="15" fill="rgb(249,224,24)"/><text x="48.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="45" y="708" width="6" height="15" fill="rgb(216,52,32)"/><text x="48.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="45" y="724" width="6" height="15" fill="rgb(244,174,6)"/><text x="48.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="45" y="740" width="6" height="15" fill="rgb(230,44,45)"/><text x="48.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="45" y="756" width="6" height="15" fill="rgb(216,195,28)"/><text x="48.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:44) (2 samples, 0.50%)</title><rect x="45" y="772" width="6" height="15" fill="rgb(212,222,42)"/><text x="48.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="45" y="788" width="6" height="15" fill="rgb(216,105,43)"/><text x="48.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="45" y="804" width="6" height="15" fill="rgb(242,5,17)"/><text x="48.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="45" y="820" width="6" height="15" fill="rgb(222,207,4)"/><text x="48.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="45" y="836" width="6" height="15" fill="rgb(223,3,33)"/><text x="48.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="45" y="852" width="6" height="15" fill="rgb(250,96,14)"/><text x="48.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py:20) (2 samples, 0.50%)</title><rect x="45" y="868" width="6" height="15" fill="rgb(215,49,31)"/><text x="48.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="45" y="884" width="6" height="15" fill="rgb(240,198,15)"/><text x="48.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="45" y="900" width="6" height="15" fill="rgb(248,170,17)"/><text x="48.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="45" y="916" width="6" height="15" fill="rgb(213,200,5)"/><text x="48.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="45" y="932" width="6" height="15" fill="rgb(238,0,18)"/><text x="48.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="45" y="948" width="6" height="15" fill="rgb(221,74,20)"/><text x="48.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py:48) (1 samples, 0.25%)</title><rect x="48" y="964" width="3" height="15" fill="rgb(225,185,7)"/><text x="51.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="48" y="980" width="3" height="15" fill="rgb(237,54,29)"/><text x="51.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="48" y="996" width="3" height="15" fill="rgb(242,149,26)"/><text x="51.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="48" y="1012" width="3" height="15" fill="rgb(229,149,15)"/><text x="51.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="48" y="1028" width="3" height="15" fill="rgb(215,223,15)"/><text x="51.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="48" y="1044" width="3" height="15" fill="rgb(240,200,10)"/><text x="51.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/sbcsgroupprober.py:38) (1 samples, 0.25%)</title><rect x="48" y="1060" width="3" height="15" fill="rgb(205,52,16)"/><text x="51.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="48" y="1076" width="3" height="15" fill="rgb(252,131,19)"/><text x="51.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="48" y="1092" width="3" height="15" fill="rgb(234,116,8)"/><text x="51.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="48" y="1108" width="3" height="15" fill="rgb(238,14,24)"/><text x="51.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.25%)</title><rect x="48" y="1124" width="3" height="15" fill="rgb(220,89,11)"/><text x="51.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.25%)</title><rect x="48" y="1140" width="3" height="15" fill="rgb(245,47,50)"/><text x="51.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.25%)</title><rect x="48" y="1156" width="3" height="15" fill="rgb(245,127,13)"/><text x="51.00" y="1166.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.25%)</title><rect x="51" y="628" width="3" height="15" fill="rgb(242,195,12)"/><text x="54.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="51" y="644" width="3" height="15" fill="rgb(215,62,41)"/><text x="54.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="51" y="660" width="3" height="15" fill="rgb(248,220,39)"/><text x="54.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="51" y="676" width="3" height="15" fill="rgb(234,136,19)"/><text x="54.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="51" y="692" width="3" height="15" fill="rgb(223,16,48)"/><text x="54.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="51" y="708" width="3" height="15" fill="rgb(215,119,29)"/><text x="54.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.25%)</title><rect x="51" y="724" width="3" height="15" fill="rgb(246,221,46)"/><text x="54.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="51" y="740" width="3" height="15" fill="rgb(215,48,49)"/><text x="54.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="51" y="756" width="3" height="15" fill="rgb(244,14,41)"/><text x="54.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="51" y="772" width="3" height="15" fill="rgb(237,83,39)"/><text x="54.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="51" y="788" width="3" height="15" fill="rgb(221,172,0)"/><text x="54.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="51" y="804" width="3" height="15" fill="rgb(234,159,23)"/><text x="54.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.25%)</title><rect x="51" y="820" width="3" height="15" fill="rgb(218,73,24)"/><text x="54.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="51" y="836" width="3" height="15" fill="rgb(227,144,28)"/><text x="54.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="51" y="852" width="3" height="15" fill="rgb(218,148,28)"/><text x="54.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="51" y="868" width="3" height="15" fill="rgb(245,195,54)"/><text x="54.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.25%)</title><rect x="51" y="884" width="3" height="15" fill="rgb(222,203,51)"/><text x="54.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="51" y="900" width="3" height="15" fill="rgb(250,159,33)"/><text x="54.00" y="910.50"></text></g><g><title>0x7f141b94340e (?) (1 samples, 0.25%)</title><rect x="51" y="916" width="3" height="15" fill="rgb(235,14,41)"/><text x="54.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="51" y="932" width="3" height="15" fill="rgb(214,219,43)"/><text x="54.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="51" y="948" width="3" height="15" fill="rgb(251,153,43)"/><text x="54.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="51" y="964" width="3" height="15" fill="rgb(212,35,7)"/><text x="54.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.25%)</title><rect x="51" y="980" width="3" height="15" fill="rgb(212,30,8)"/><text x="54.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="51" y="996" width="3" height="15" fill="rgb(225,91,26)"/><text x="54.00" y="1006.50"></text></g><g><title>0x7f141b6fccd2 (?) (1 samples, 0.25%)</title><rect x="51" y="1012" width="3" height="15" fill="rgb(238,25,40)"/><text x="54.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="51" y="1028" width="3" height="15" fill="rgb(250,160,48)"/><text x="54.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="51" y="1044" width="3" height="15" fill="rgb(227,44,43)"/><text x="54.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="51" y="1060" width="3" height="15" fill="rgb(229,201,1)"/><text x="54.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.25%)</title><rect x="51" y="1076" width="3" height="15" fill="rgb(206,69,47)"/><text x="54.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="51" y="1092" width="3" height="15" fill="rgb(240,178,48)"/><text x="54.00" y="1102.50"></text></g><g><title>0x7f141adf20e5 (?) (1 samples, 0.25%)</title><rect x="51" y="1108" width="3" height="15" fill="rgb(231,84,28)"/><text x="54.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="51" y="1124" width="3" height="15" fill="rgb(219,58,26)"/><text x="54.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="51" y="1140" width="3" height="15" fill="rgb(254,123,36)"/><text x="54.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="51" y="1156" width="3" height="15" fill="rgb(243,190,53)"/><text x="54.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.25%)</title><rect x="51" y="1172" width="3" height="15" fill="rgb(251,104,27)"/><text x="54.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="51" y="1188" width="3" height="15" fill="rgb(238,213,27)"/><text x="54.00" y="1198.50"></text></g><g><title>0x7f141ab76e68 (?) (1 samples, 0.25%)</title><rect x="51" y="1204" width="3" height="15" fill="rgb(244,140,42)"/><text x="54.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="51" y="1220" width="3" height="15" fill="rgb(252,203,27)"/><text x="54.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="51" y="1236" width="3" height="15" fill="rgb(230,62,49)"/><text x="54.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="51" y="1252" width="3" height="15" fill="rgb(244,174,18)"/><text x="54.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.25%)</title><rect x="51" y="1268" width="3" height="15" fill="rgb(216,46,11)"/><text x="54.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="51" y="1284" width="3" height="15" fill="rgb(213,64,38)"/><text x="54.00" y="1294.50"></text></g><g><title>0x7f141a9072fb (?) (1 samples, 0.25%)</title><rect x="51" y="1300" width="3" height="15" fill="rgb(245,158,0)"/><text x="54.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="51" y="1316" width="3" height="15" fill="rgb(250,140,17)"/><text x="54.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="51" y="1332" width="3" height="15" fill="rgb(208,152,6)"/><text x="54.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="51" y="1348" width="3" height="15" fill="rgb(251,105,39)"/><text x="54.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.25%)</title><rect x="51" y="1364" width="3" height="15" fill="rgb(223,85,46)"/><text x="54.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="51" y="1380" width="3" height="15" fill="rgb(219,111,45)"/><text x="54.00" y="1390.50"></text></g><g><title>0x7f141a6eb153 (?) (1 samples, 0.25%)</title><rect x="51" y="1396" width="3" height="15" fill="rgb(209,36,35)"/><text x="54.00" y="1406.50"></text></g><g><title>0x7f141a6e9c13 (?) (1 samples, 0.25%)</title><rect x="51" y="1412" width="3" height="15" fill="rgb(234,130,19)"/><text x="54.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="51" y="1428" width="3" height="15" fill="rgb(232,178,11)"/><text x="54.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="51" y="1444" width="3" height="15" fill="rgb(249,6,37)"/><text x="54.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="51" y="1460" width="3" height="15" fill="rgb(246,186,27)"/><text x="54.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.25%)</title><rect x="51" y="1476" width="3" height="15" fill="rgb(228,19,42)"/><text x="54.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="51" y="1492" width="3" height="15" fill="rgb(249,75,33)"/><text x="54.00" y="1502.50"></text></g><g><title>0x7f141a486181 (?) (1 samples, 0.25%)</title><rect x="51" y="1508" width="3" height="15" fill="rgb(237,54,28)"/><text x="54.00" y="1518.50"></text></g><g><title>0x7f141a4891c9 (?) (1 samples, 0.25%)</title><rect x="51" y="1524" width="3" height="15" fill="rgb(248,43,48)"/><text x="54.00" y="1534.50"></text></g><g><title>0x7f141a4b5167 (?) (1 samples, 0.25%)</title><rect x="51" y="1540" width="3" height="15" fill="rgb(229,9,27)"/><text x="54.00" y="1550.50"></text></g><g><title>0x7f141a4b0b64 (?) (1 samples, 0.25%)</title><rect x="51" y="1556" width="3" height="15" fill="rgb(224,53,41)"/><text x="54.00" y="1566.50"></text></g><g><title>0x7f141a49407b (?) (1 samples, 0.25%)</title><rect x="51" y="1572" width="3" height="15" fill="rgb(219,50,19)"/><text x="54.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py:101) (1 samples, 0.25%)</title><rect x="51" y="1588" width="3" height="15" fill="rgb(234,173,7)"/><text x="54.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py:1104) (1 samples, 0.25%)</title><rect x="51" y="1604" width="3" height="15" fill="rgb(237,31,47)"/><text x="54.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py:114) (1 samples, 0.25%)</title><rect x="51" y="1620" width="3" height="15" fill="rgb(207,148,9)"/><text x="54.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py:95) (1 samples, 0.25%)</title><rect x="51" y="1636" width="3" height="15" fill="rgb(247,29,3)"/><text x="54.00" y="1646.50"></text></g><g><title>dirname (posixpath.py:159) (1 samples, 0.25%)</title><rect x="51" y="1652" width="3" height="15" fill="rgb(208,226,45)"/><text x="54.00" y="1662.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:33) (1 samples, 0.25%)</title><rect x="54" y="1588" width="3" height="15" fill="rgb(230,9,31)"/><text x="57.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="54" y="1604" width="3" height="15" fill="rgb(209,187,28)"/><text x="57.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="54" y="1620" width="3" height="15" fill="rgb(231,23,18)"/><text x="57.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="54" y="1636" width="3" height="15" fill="rgb(253,4,52)"/><text x="57.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="54" y="1652" width="3" height="15" fill="rgb(219,122,22)"/><text x="57.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="54" y="1668" width="3" height="15" fill="rgb(231,217,32)"/><text x="57.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py:4) (1 samples, 0.25%)</title><rect x="54" y="1684" width="3" height="15" fill="rgb(253,160,3)"/><text x="57.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="54" y="1700" width="3" height="15" fill="rgb(207,38,3)"/><text x="57.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="54" y="1716" width="3" height="15" fill="rgb(236,145,53)"/><text x="57.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="54" y="1732" width="3" height="15" fill="rgb(237,100,10)"/><text x="57.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="54" y="1748" width="3" height="15" fill="rgb(211,18,9)"/><text x="57.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="54" y="1764" width="3" height="15" fill="rgb(240,116,31)"/><text x="57.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py:106) (1 samples, 0.25%)</title><rect x="54" y="1780" width="3" height="15" fill="rgb(245,174,51)"/><text x="57.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py:93) (1 samples, 0.25%)</title><rect x="54" y="1796" width="3" height="15" fill="rgb(244,215,13)"/><text x="57.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py:748) (1 samples, 0.25%)</title><rect x="54" y="1812" width="3" height="15" fill="rgb(218,137,3)"/><text x="57.00" y="1822.50"></text></g><g><title>linspace (&lt;__array_function__ internals&gt;:6) (1 samples, 0.25%)</title><rect x="54" y="1828" width="3" height="15" fill="rgb(249,200,44)"/><text x="57.00" y="1838.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.25%)</title><rect x="54" y="1844" width="3" height="15" fill="rgb(224,187,39)"/><text x="57.00" y="1854.50"></text></g><g><title>linspace (numpy/core/function_base.py:150) (1 samples, 0.25%)</title><rect x="54" y="1860" width="3" height="15" fill="rgb(235,137,51)"/><text x="57.00" y="1870.50"></text></g><g><title>any (&lt;__array_function__ internals&gt;:6) (1 samples, 0.25%)</title><rect x="54" y="1876" width="3" height="15" fill="rgb(216,4,24)"/><text x="57.00" y="1886.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.25%)</title><rect x="54" y="1892" width="3" height="15" fill="rgb(214,227,19)"/><text x="57.00" y="1902.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.25%)</title><rect x="54" y="1908" width="3" height="15" fill="rgb(251,216,30)"/><text x="57.00" y="1918.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.25%)</title><rect x="54" y="1924" width="3" height="15" fill="rgb(216,147,53)"/><text x="57.00" y="1934.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.25%)</title><rect x="54" y="1940" width="3" height="15" fill="rgb(223,152,37)"/><text x="57.00" y="1950.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.25%)</title><rect x="54" y="1956" width="3" height="15" fill="rgb(239,9,25)"/><text x="57.00" y="1966.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (2 samples, 0.50%)</title><rect x="54" y="1492" width="6" height="15" fill="rgb(206,76,5)"/><text x="57.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="54" y="1508" width="6" height="15" fill="rgb(224,132,16)"/><text x="57.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="54" y="1524" width="6" height="15" fill="rgb(215,219,10)"/><text x="57.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="54" y="1540" width="6" height="15" fill="rgb(219,154,20)"/><text x="57.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="54" y="1556" width="6" height="15" fill="rgb(205,119,2)"/><text x="57.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="54" y="1572" width="6" height="15" fill="rgb(230,44,0)"/><text x="57.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.25%)</title><rect x="57" y="1588" width="3" height="15" fill="rgb(211,35,21)"/><text x="60.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="57" y="1604" width="3" height="15" fill="rgb(244,18,49)"/><text x="60.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="57" y="1620" width="3" height="15" fill="rgb(226,149,2)"/><text x="60.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="57" y="1636" width="3" height="15" fill="rgb(221,171,1)"/><text x="60.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="57" y="1652" width="3" height="15" fill="rgb(225,165,46)"/><text x="60.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="57" y="1668" width="3" height="15" fill="rgb(214,25,42)"/><text x="60.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.25%)</title><rect x="57" y="1684" width="3" height="15" fill="rgb(237,36,44)"/><text x="60.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="57" y="1700" width="3" height="15" fill="rgb(226,40,53)"/><text x="60.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="57" y="1716" width="3" height="15" fill="rgb(244,83,34)"/><text x="60.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="57" y="1732" width="3" height="15" fill="rgb(245,186,32)"/><text x="60.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="57" y="1748" width="3" height="15" fill="rgb(242,152,52)"/><text x="60.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="57" y="1764" width="3" height="15" fill="rgb(234,16,36)"/><text x="60.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.25%)</title><rect x="57" y="1780" width="3" height="15" fill="rgb(224,18,18)"/><text x="60.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="57" y="1796" width="3" height="15" fill="rgb(246,219,27)"/><text x="60.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="57" y="1812" width="3" height="15" fill="rgb(218,190,47)"/><text x="60.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="57" y="1828" width="3" height="15" fill="rgb(208,48,13)"/><text x="60.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="57" y="1844" width="3" height="15" fill="rgb(229,90,15)"/><text x="60.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="57" y="1860" width="3" height="15" fill="rgb(225,74,5)"/><text x="60.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py:11) (1 samples, 0.25%)</title><rect x="57" y="1876" width="3" height="15" fill="rgb(237,81,54)"/><text x="60.00" y="1886.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="57" y="1892" width="3" height="15" fill="rgb(253,30,44)"/><text x="60.00" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="57" y="1908" width="3" height="15" fill="rgb(245,59,15)"/><text x="60.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="57" y="1924" width="3" height="15" fill="rgb(223,13,35)"/><text x="60.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="57" y="1940" width="3" height="15" fill="rgb(233,207,15)"/><text x="60.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="57" y="1956" width="3" height="15" fill="rgb(249,172,30)"/><text x="60.00" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="57" y="1972" width="3" height="15" fill="rgb(253,76,33)"/><text x="60.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="57" y="1988" width="3" height="15" fill="rgb(233,224,27)"/><text x="60.00" y="1998.50"></text></g><g><title>&lt;module&gt; (matplotlib/lines.py:1528) (1 samples, 0.25%)</title><rect x="57" y="2004" width="3" height="15" fill="rgb(235,121,42)"/><text x="60.00" y="2014.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.25%)</title><rect x="57" y="2020" width="3" height="15" fill="rgb(236,27,2)"/><text x="60.00" y="2030.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1366) (1 samples, 0.25%)</title><rect x="57" y="2036" width="3" height="15" fill="rgb(218,147,53)"/><text x="60.00" y="2046.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py:1290) (1 samples, 0.25%)</title><rect x="57" y="2052" width="3" height="15" fill="rgb(211,204,28)"/><text x="60.00" y="2062.50"></text></g><g><title>is_alias (matplotlib/artist.py:1321) (1 samples, 0.25%)</title><rect x="57" y="2068" width="3" height="15" fill="rgb(205,228,16)"/><text x="60.00" y="2078.50"></text></g><g><title>getdoc (inspect.py:611) (1 samples, 0.25%)</title><rect x="57" y="2084" width="3" height="15" fill="rgb(244,154,42)"/><text x="60.00" y="2094.50"></text></g><g><title>cleandoc (inspect.py:634) (1 samples, 0.25%)</title><rect x="57" y="2100" width="3" height="15" fill="rgb(215,31,48)"/><text x="60.00" y="2110.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.25%)</title><rect x="60" y="1524" width="3" height="15" fill="rgb(250,147,28)"/><text x="63.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="60" y="1540" width="3" height="15" fill="rgb(208,144,23)"/><text x="63.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="60" y="1556" width="3" height="15" fill="rgb(209,101,18)"/><text x="63.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="60" y="1572" width="3" height="15" fill="rgb(254,143,27)"/><text x="63.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="60" y="1588" width="3" height="15" fill="rgb(234,2,43)"/><text x="63.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="60" y="1604" width="3" height="15" fill="rgb(230,33,0)"/><text x="63.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="60" y="1620" width="3" height="15" fill="rgb(242,159,53)"/><text x="63.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:1015) (1 samples, 0.25%)</title><rect x="60" y="1636" width="3" height="15" fill="rgb(241,146,7)"/><text x="63.00" y="1646.50"></text></g><g><title>rc_params (matplotlib/__init__.py:879) (1 samples, 0.25%)</title><rect x="60" y="1652" width="3" height="15" fill="rgb(208,19,31)"/><text x="63.00" y="1662.50"></text></g><g><title>rc_params_from_file (matplotlib/__init__.py:994) (1 samples, 0.25%)</title><rect x="60" y="1668" width="3" height="15" fill="rgb(243,115,42)"/><text x="63.00" y="1678.50"></text></g><g><title>__init__ (matplotlib/__init__.py:772) (1 samples, 0.25%)</title><rect x="60" y="1684" width="3" height="15" fill="rgb(254,197,32)"/><text x="63.00" y="1694.50"></text></g><g><title>update (_collections_abc.py:847) (1 samples, 0.25%)</title><rect x="60" y="1700" width="3" height="15" fill="rgb(235,60,25)"/><text x="63.00" y="1710.50"></text></g><g><title>__setitem__ (matplotlib/__init__.py:801) (1 samples, 0.25%)</title><rect x="60" y="1716" width="3" height="15" fill="rgb(252,205,28)"/><text x="63.00" y="1726.50"></text></g><g><title>validate_font_properties (matplotlib/rcsetup.py:465) (1 samples, 0.25%)</title><rect x="60" y="1732" width="3" height="15" fill="rgb(231,141,29)"/><text x="63.00" y="1742.50"></text></g><g><title>parse (matplotlib/fontconfig_pattern.py:121) (1 samples, 0.25%)</title><rect x="60" y="1748" width="3" height="15" fill="rgb(212,77,35)"/><text x="63.00" y="1758.50"></text></g><g><title>parseString (pyparsing.py:1935) (1 samples, 0.25%)</title><rect x="60" y="1764" width="3" height="15" fill="rgb(207,132,14)"/><text x="63.00" y="1774.50"></text></g><g><title>_parseNoCache (pyparsing.py:1675) (1 samples, 0.25%)</title><rect x="60" y="1780" width="3" height="15" fill="rgb(208,33,25)"/><text x="63.00" y="1790.50"></text></g><g><title>parseImpl (pyparsing.py:4050) (1 samples, 0.25%)</title><rect x="60" y="1796" width="3" height="15" fill="rgb(205,95,26)"/><text x="63.00" y="1806.50"></text></g><g><title>_parseNoCache (pyparsing.py:1675) (1 samples, 0.25%)</title><rect x="60" y="1812" width="3" height="15" fill="rgb(242,217,11)"/><text x="63.00" y="1822.50"></text></g><g><title>parseImpl (pyparsing.py:4762) (1 samples, 0.25%)</title><rect x="60" y="1828" width="3" height="15" fill="rgb(225,198,43)"/><text x="63.00" y="1838.50"></text></g><g><title>parseImpl (pyparsing.py:4678) (1 samples, 0.25%)</title><rect x="60" y="1844" width="3" height="15" fill="rgb(254,121,23)"/><text x="63.00" y="1854.50"></text></g><g><title>_parseNoCache (pyparsing.py:1675) (1 samples, 0.25%)</title><rect x="60" y="1860" width="3" height="15" fill="rgb(215,131,42)"/><text x="63.00" y="1870.50"></text></g><g><title>parseImpl (pyparsing.py:4050) (1 samples, 0.25%)</title><rect x="60" y="1876" width="3" height="15" fill="rgb(241,41,51)"/><text x="63.00" y="1886.50"></text></g><g><title>_parseNoCache (pyparsing.py:1675) (1 samples, 0.25%)</title><rect x="60" y="1892" width="3" height="15" fill="rgb(254,184,16)"/><text x="63.00" y="1902.50"></text></g><g><title>parseImpl (pyparsing.py:4235) (1 samples, 0.25%)</title><rect x="60" y="1908" width="3" height="15" fill="rgb(230,224,24)"/><text x="63.00" y="1918.50"></text></g><g><title>_parseNoCache (pyparsing.py:1675) (1 samples, 0.25%)</title><rect x="60" y="1924" width="3" height="15" fill="rgb(220,172,18)"/><text x="63.00" y="1934.50"></text></g><g><title>parseImpl (pyparsing.py:4050) (1 samples, 0.25%)</title><rect x="60" y="1940" width="3" height="15" fill="rgb(234,209,44)"/><text x="63.00" y="1950.50"></text></g><g><title>_parseNoCache (pyparsing.py:1675) (1 samples, 0.25%)</title><rect x="60" y="1956" width="3" height="15" fill="rgb(232,17,26)"/><text x="63.00" y="1966.50"></text></g><g><title>parseImpl (pyparsing.py:4443) (1 samples, 0.25%)</title><rect x="60" y="1972" width="3" height="15" fill="rgb(216,216,53)"/><text x="63.00" y="1982.50"></text></g><g><title>_parseNoCache (pyparsing.py:1675) (1 samples, 0.25%)</title><rect x="60" y="1988" width="3" height="15" fill="rgb(212,139,52)"/><text x="63.00" y="1998.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (4 samples, 1.00%)</title><rect x="54" y="916" width="12" height="15" fill="rgb(238,102,39)"/><text x="57.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.00%)</title><rect x="54" y="932" width="12" height="15" fill="rgb(239,221,42)"/><text x="57.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.00%)</title><rect x="54" y="948" width="12" height="15" fill="rgb(241,118,16)"/><text x="57.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.00%)</title><rect x="54" y="964" width="12" height="15" fill="rgb(220,115,26)"/><text x="57.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.00%)</title><rect x="54" y="980" width="12" height="15" fill="rgb(243,153,11)"/><text x="57.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.00%)</title><rect x="54" y="996" width="12" height="15" fill="rgb(210,161,22)"/><text x="57.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (4 samples, 1.00%)</title><rect x="54" y="1012" width="12" height="15" fill="rgb(224,17,15)"/><text x="57.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.00%)</title><rect x="54" y="1028" width="12" height="15" fill="rgb(232,129,40)"/><text x="57.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.00%)</title><rect x="54" y="1044" width="12" height="15" fill="rgb(230,54,34)"/><text x="57.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.00%)</title><rect x="54" y="1060" width="12" height="15" fill="rgb(229,92,37)"/><text x="57.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.00%)</title><rect x="54" y="1076" width="12" height="15" fill="rgb(207,209,31)"/><text x="57.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.00%)</title><rect x="54" y="1092" width="12" height="15" fill="rgb(208,214,10)"/><text x="57.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (4 samples, 1.00%)</title><rect x="54" y="1108" width="12" height="15" fill="rgb(220,135,18)"/><text x="57.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.00%)</title><rect x="54" y="1124" width="12" height="15" fill="rgb(220,174,24)"/><text x="57.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.00%)</title><rect x="54" y="1140" width="12" height="15" fill="rgb(230,110,22)"/><text x="57.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.00%)</title><rect x="54" y="1156" width="12" height="15" fill="rgb(222,36,40)"/><text x="57.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.00%)</title><rect x="54" y="1172" width="12" height="15" fill="rgb(210,73,46)"/><text x="57.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.00%)</title><rect x="54" y="1188" width="12" height="15" fill="rgb(221,10,6)"/><text x="57.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (4 samples, 1.00%)</title><rect x="54" y="1204" width="12" height="15" fill="rgb(231,213,49)"/><text x="57.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.00%)</title><rect x="54" y="1220" width="12" height="15" fill="rgb(236,81,36)"/><text x="57.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.00%)</title><rect x="54" y="1236" width="12" height="15" fill="rgb(245,19,46)"/><text x="57.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.00%)</title><rect x="54" y="1252" width="12" height="15" fill="rgb(220,135,51)"/><text x="57.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.00%)</title><rect x="54" y="1268" width="12" height="15" fill="rgb(225,98,44)"/><text x="57.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.00%)</title><rect x="54" y="1284" width="12" height="15" fill="rgb(206,213,14)"/><text x="57.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (4 samples, 1.00%)</title><rect x="54" y="1300" width="12" height="15" fill="rgb(233,218,19)"/><text x="57.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.00%)</title><rect x="54" y="1316" width="12" height="15" fill="rgb(223,107,3)"/><text x="57.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.00%)</title><rect x="54" y="1332" width="12" height="15" fill="rgb(239,168,44)"/><text x="57.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.00%)</title><rect x="54" y="1348" width="12" height="15" fill="rgb(234,130,20)"/><text x="57.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.00%)</title><rect x="54" y="1364" width="12" height="15" fill="rgb(237,124,26)"/><text x="57.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.00%)</title><rect x="54" y="1380" width="12" height="15" fill="rgb(241,123,23)"/><text x="57.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (4 samples, 1.00%)</title><rect x="54" y="1396" width="12" height="15" fill="rgb(248,167,52)"/><text x="57.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.00%)</title><rect x="54" y="1412" width="12" height="15" fill="rgb(222,96,26)"/><text x="57.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.00%)</title><rect x="54" y="1428" width="12" height="15" fill="rgb(233,186,30)"/><text x="57.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.00%)</title><rect x="54" y="1444" width="12" height="15" fill="rgb(248,197,32)"/><text x="57.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.00%)</title><rect x="54" y="1460" width="12" height="15" fill="rgb(240,167,0)"/><text x="57.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.00%)</title><rect x="54" y="1476" width="12" height="15" fill="rgb(244,76,35)"/><text x="57.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (2 samples, 0.50%)</title><rect x="60" y="1492" width="6" height="15" fill="rgb(253,59,24)"/><text x="63.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="60" y="1508" width="6" height="15" fill="rgb(235,126,11)"/><text x="63.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="63" y="1524" width="3" height="15" fill="rgb(213,182,8)"/><text x="66.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="63" y="1540" width="3" height="15" fill="rgb(235,139,33)"/><text x="66.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="63" y="1556" width="3" height="15" fill="rgb(237,209,28)"/><text x="66.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="63" y="1572" width="3" height="15" fill="rgb(245,101,40)"/><text x="66.00" y="1582.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py:1602) (1 samples, 0.25%)</title><rect x="63" y="1588" width="3" height="15" fill="rgb(234,39,9)"/><text x="66.00" y="1598.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.25%)</title><rect x="63" y="1604" width="3" height="15" fill="rgb(254,23,7)"/><text x="66.00" y="1614.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.25%)</title><rect x="63" y="1620" width="3" height="15" fill="rgb(214,29,14)"/><text x="66.00" y="1630.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1255) (1 samples, 0.25%)</title><rect x="63" y="1636" width="3" height="15" fill="rgb(233,118,6)"/><text x="66.00" y="1646.50"></text></g><g><title>getdoc (inspect.py:611) (1 samples, 0.25%)</title><rect x="63" y="1652" width="3" height="15" fill="rgb(207,176,0)"/><text x="66.00" y="1662.50"></text></g><g><title>cleandoc (inspect.py:619) (1 samples, 0.25%)</title><rect x="63" y="1668" width="3" height="15" fill="rgb(239,4,23)"/><text x="66.00" y="1678.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.25%)</title><rect x="63" y="1684" width="3" height="15" fill="rgb(233,135,23)"/><text x="66.00" y="1694.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (6 samples, 1.50%)</title><rect x="51" y="532" width="18" height="15" fill="rgb(248,218,3)"/><text x="54.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.50%)</title><rect x="51" y="548" width="18" height="15" fill="rgb(222,66,21)"/><text x="54.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.50%)</title><rect x="51" y="564" width="18" height="15" fill="rgb(227,212,34)"/><text x="54.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.50%)</title><rect x="51" y="580" width="18" height="15" fill="rgb(216,204,12)"/><text x="54.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.50%)</title><rect x="51" y="596" width="18" height="15" fill="rgb(254,32,31)"/><text x="54.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.50%)</title><rect x="51" y="612" width="18" height="15" fill="rgb(232,125,2)"/><text x="54.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (5 samples, 1.25%)</title><rect x="54" y="628" width="15" height="15" fill="rgb(250,209,32)"/><text x="57.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.25%)</title><rect x="54" y="644" width="15" height="15" fill="rgb(228,117,12)"/><text x="57.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.25%)</title><rect x="54" y="660" width="15" height="15" fill="rgb(221,15,20)"/><text x="57.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.25%)</title><rect x="54" y="676" width="15" height="15" fill="rgb(220,53,41)"/><text x="57.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.25%)</title><rect x="54" y="692" width="15" height="15" fill="rgb(233,46,51)"/><text x="57.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.25%)</title><rect x="54" y="708" width="15" height="15" fill="rgb(243,17,24)"/><text x="57.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (5 samples, 1.25%)</title><rect x="54" y="724" width="15" height="15" fill="rgb(230,229,24)"/><text x="57.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.25%)</title><rect x="54" y="740" width="15" height="15" fill="rgb(225,76,16)"/><text x="57.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.25%)</title><rect x="54" y="756" width="15" height="15" fill="rgb(249,6,7)"/><text x="57.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.25%)</title><rect x="54" y="772" width="15" height="15" fill="rgb(224,146,24)"/><text x="57.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.25%)</title><rect x="54" y="788" width="15" height="15" fill="rgb(220,90,6)"/><text x="57.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.25%)</title><rect x="54" y="804" width="15" height="15" fill="rgb(233,193,4)"/><text x="57.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (5 samples, 1.25%)</title><rect x="54" y="820" width="15" height="15" fill="rgb(221,206,46)"/><text x="57.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.25%)</title><rect x="54" y="836" width="15" height="15" fill="rgb(226,1,18)"/><text x="57.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.25%)</title><rect x="54" y="852" width="15" height="15" fill="rgb(205,36,37)"/><text x="57.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.25%)</title><rect x="54" y="868" width="15" height="15" fill="rgb(240,205,28)"/><text x="57.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.25%)</title><rect x="54" y="884" width="15" height="15" fill="rgb(222,30,4)"/><text x="57.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.25%)</title><rect x="54" y="900" width="15" height="15" fill="rgb(208,59,12)"/><text x="57.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:52) (1 samples, 0.25%)</title><rect x="66" y="916" width="3" height="15" fill="rgb(229,116,21)"/><text x="69.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="66" y="932" width="3" height="15" fill="rgb(206,37,26)"/><text x="69.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="66" y="948" width="3" height="15" fill="rgb(226,79,26)"/><text x="69.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="66" y="964" width="3" height="15" fill="rgb(220,125,45)"/><text x="69.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="66" y="980" width="3" height="15" fill="rgb(243,106,18)"/><text x="69.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="66" y="996" width="3" height="15" fill="rgb(211,2,45)"/><text x="69.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py:1088) (1 samples, 0.25%)</title><rect x="66" y="1012" width="3" height="15" fill="rgb(221,59,7)"/><text x="69.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py:873) (1 samples, 0.25%)</title><rect x="66" y="1028" width="3" height="15" fill="rgb(241,65,2)"/><text x="69.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py:744) (1 samples, 0.25%)</title><rect x="66" y="1044" width="3" height="15" fill="rgb(217,218,45)"/><text x="69.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py:1486) (1 samples, 0.25%)</title><rect x="66" y="1060" width="3" height="15" fill="rgb(252,15,53)"/><text x="69.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.25%)</title><rect x="66" y="1076" width="3" height="15" fill="rgb(206,91,2)"/><text x="69.00" y="1086.50"></text></g><g><title>dedent (textwrap.py:432) (1 samples, 0.25%)</title><rect x="66" y="1092" width="3" height="15" fill="rgb(249,43,5)"/><text x="69.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (7 samples, 1.75%)</title><rect x="51" y="436" width="20" height="15" fill="rgb(246,14,27)"/><text x="54.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.75%)</title><rect x="51" y="452" width="20" height="15" fill="rgb(235,55,20)"/><text x="54.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.75%)</title><rect x="51" y="468" width="20" height="15" fill="rgb(246,3,12)"/><text x="54.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.75%)</title><rect x="51" y="484" width="20" height="15" fill="rgb(216,145,35)"/><text x="54.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.75%)</title><rect x="51" y="500" width="20" height="15" fill="rgb(215,25,54)"/><text x="54.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.75%)</title><rect x="51" y="516" width="20" height="15" fill="rgb(226,28,3)"/><text x="54.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:20) (1 samples, 0.25%)</title><rect x="69" y="532" width="2" height="15" fill="rgb(230,122,41)"/><text x="72.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="69" y="548" width="2" height="15" fill="rgb(215,35,39)"/><text x="72.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="69" y="564" width="2" height="15" fill="rgb(226,17,2)"/><text x="72.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="69" y="580" width="2" height="15" fill="rgb(205,103,27)"/><text x="72.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="69" y="596" width="2" height="15" fill="rgb(227,189,24)"/><text x="72.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="69" y="612" width="2" height="15" fill="rgb(250,197,27)"/><text x="72.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py:10) (1 samples, 0.25%)</title><rect x="69" y="628" width="2" height="15" fill="rgb(218,208,18)"/><text x="72.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="69" y="644" width="2" height="15" fill="rgb(213,141,14)"/><text x="72.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="69" y="660" width="2" height="15" fill="rgb(242,89,45)"/><text x="72.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="69" y="676" width="2" height="15" fill="rgb(235,22,25)"/><text x="72.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="69" y="692" width="2" height="15" fill="rgb(226,86,26)"/><text x="72.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="69" y="708" width="2" height="15" fill="rgb(252,87,28)"/><text x="72.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="69" y="724" width="2" height="15" fill="rgb(225,112,6)"/><text x="72.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="69" y="740" width="2" height="15" fill="rgb(205,77,3)"/><text x="72.00" y="750.50"></text></g><g><title>&lt;module&gt; (onnx/numpy_helper.py:15) (1 samples, 0.25%)</title><rect x="69" y="756" width="2" height="15" fill="rgb(208,66,19)"/><text x="72.00" y="766.50"></text></g><g><title>system (platform.py:1068) (1 samples, 0.25%)</title><rect x="69" y="772" width="2" height="15" fill="rgb(235,194,30)"/><text x="72.00" y="782.50"></text></g><g><title>uname (platform.py:1034) (1 samples, 0.25%)</title><rect x="69" y="788" width="2" height="15" fill="rgb(242,174,51)"/><text x="72.00" y="798.50"></text></g><g><title>_syscmd_uname (platform.py:788) (1 samples, 0.25%)</title><rect x="69" y="804" width="2" height="15" fill="rgb(215,213,19)"/><text x="72.00" y="814.50"></text></g><g><title>popen (os.py:989) (1 samples, 0.25%)</title><rect x="69" y="820" width="2" height="15" fill="rgb(229,170,46)"/><text x="72.00" y="830.50"></text></g><g><title>__init__ (subprocess.py:775) (1 samples, 0.25%)</title><rect x="69" y="836" width="2" height="15" fill="rgb(220,225,16)"/><text x="72.00" y="846.50"></text></g><g><title>_execute_child (subprocess.py:1453) (1 samples, 0.25%)</title><rect x="69" y="852" width="2" height="15" fill="rgb(251,115,18)"/><text x="72.00" y="862.50"></text></g><g><title>subprocess_fork_exec (_posixsubprocess.c:687) (1 samples, 0.25%)</title><rect x="69" y="868" width="2" height="15" fill="rgb(215,103,28)"/><text x="72.00" y="878.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.25%)</title><rect x="69" y="884" width="2" height="15" fill="rgb(216,100,50)"/><text x="72.00" y="894.50"></text></g><g><title>getsourcelines (inspect.py:955) (1 samples, 0.25%)</title><rect x="71" y="1348" width="3" height="15" fill="rgb(229,7,5)"/><text x="74.00" y="1358.50"></text></g><g><title>findsource (inspect.py:826) (1 samples, 0.25%)</title><rect x="71" y="1364" width="3" height="15" fill="rgb(236,127,22)"/><text x="74.00" y="1374.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.25%)</title><rect x="71" y="1380" width="3" height="15" fill="rgb(207,116,41)"/><text x="74.00" y="1390.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.25%)</title><rect x="71" y="1396" width="3" height="15" fill="rgb(232,214,37)"/><text x="74.00" y="1406.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.25%)</title><rect x="71" y="1412" width="3" height="15" fill="rgb(235,189,22)"/><text x="74.00" y="1422.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.25%)</title><rect x="71" y="1428" width="3" height="15" fill="rgb(234,167,35)"/><text x="74.00" y="1438.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.25%)</title><rect x="71" y="1444" width="3" height="15" fill="rgb(246,65,43)"/><text x="74.00" y="1454.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.25%)</title><rect x="71" y="1460" width="3" height="15" fill="rgb(222,16,33)"/><text x="74.00" y="1470.50"></text></g><g><title>_compile (sre_compile.py:90) (1 samples, 0.25%)</title><rect x="71" y="1476" width="3" height="15" fill="rgb(218,160,46)"/><text x="74.00" y="1486.50"></text></g><g><title>__getitem__ (sre_parse.py:167) (1 samples, 0.25%)</title><rect x="71" y="1492" width="3" height="15" fill="rgb(235,139,8)"/><text x="74.00" y="1502.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 0.50%)</title><rect x="71" y="1108" width="6" height="15" fill="rgb(217,60,31)"/><text x="74.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="71" y="1124" width="6" height="15" fill="rgb(225,222,51)"/><text x="74.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="71" y="1140" width="6" height="15" fill="rgb(210,45,51)"/><text x="74.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="71" y="1156" width="6" height="15" fill="rgb(229,211,10)"/><text x="74.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="71" y="1172" width="6" height="15" fill="rgb(223,155,33)"/><text x="74.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="71" y="1188" width="6" height="15" fill="rgb(244,137,27)"/><text x="74.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (2 samples, 0.50%)</title><rect x="71" y="1204" width="6" height="15" fill="rgb(237,107,27)"/><text x="74.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="71" y="1220" width="6" height="15" fill="rgb(226,23,25)"/><text x="74.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="71" y="1236" width="6" height="15" fill="rgb(236,202,43)"/><text x="74.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="71" y="1252" width="6" height="15" fill="rgb(216,225,51)"/><text x="74.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="71" y="1268" width="6" height="15" fill="rgb(227,48,42)"/><text x="74.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="71" y="1284" width="6" height="15" fill="rgb(215,80,4)"/><text x="74.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (2 samples, 0.50%)</title><rect x="71" y="1300" width="6" height="15" fill="rgb(238,222,24)"/><text x="74.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (2 samples, 0.50%)</title><rect x="71" y="1316" width="6" height="15" fill="rgb(224,36,20)"/><text x="74.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (2 samples, 0.50%)</title><rect x="71" y="1332" width="6" height="15" fill="rgb(237,109,17)"/><text x="74.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.25%)</title><rect x="74" y="1348" width="3" height="15" fill="rgb(251,200,27)"/><text x="77.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.25%)</title><rect x="74" y="1364" width="3" height="15" fill="rgb(213,66,34)"/><text x="77.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.25%)</title><rect x="74" y="1380" width="3" height="15" fill="rgb(252,39,27)"/><text x="77.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.25%)</title><rect x="74" y="1396" width="3" height="15" fill="rgb(218,136,10)"/><text x="77.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.25%)</title><rect x="74" y="1412" width="3" height="15" fill="rgb(214,164,9)"/><text x="77.00" y="1422.50"></text></g><g><title>_compile (re.py:276) (1 samples, 0.25%)</title><rect x="74" y="1428" width="3" height="15" fill="rgb(251,142,8)"/><text x="77.00" y="1438.50"></text></g><g><title>root (&lt;template&gt;:117) (1 samples, 0.25%)</title><rect x="77" y="1572" width="3" height="15" fill="rgb(232,193,40)"/><text x="80.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:261) (1 samples, 0.25%)</title><rect x="77" y="1588" width="3" height="15" fill="rgb(213,209,20)"/><text x="80.00" y="1598.50"></text></g><g><title>root (&lt;template&gt;:18) (1 samples, 0.25%)</title><rect x="80" y="1572" width="3" height="15" fill="rgb(246,156,12)"/><text x="83.00" y="1582.50"></text></g><g><title>resolve_or_missing (jinja2/runtime.py:217) (1 samples, 0.25%)</title><rect x="80" y="1588" width="3" height="15" fill="rgb(223,50,41)"/><text x="83.00" y="1598.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:4) (26 samples, 6.50%)</title><rect x="10" y="52" width="76" height="15" fill="rgb(247,47,40)"/><text x="13.00" y="62.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (26 samples, 6.50%)</title><rect x="10" y="68" width="76" height="15" fill="rgb(206,168,43)"/><text x="13.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (26 samples, 6.50%)</title><rect x="10" y="84" width="76" height="15" fill="rgb(234,3,31)"/><text x="13.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (26 samples, 6.50%)</title><rect x="10" y="100" width="76" height="15" fill="rgb(251,36,25)"/><text x="13.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (26 samples, 6.50%)</title><rect x="10" y="116" width="76" height="15" fill="rgb(227,103,9)"/><text x="13.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (26 samples, 6.50%)</title><rect x="10" y="132" width="76" height="15" fill="rgb(229,119,28)"/><text x="13.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:7) (14 samples, 3.50%)</title><rect x="45" y="148" width="41" height="15" fill="rgb(223,107,19)"/><text x="48.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 3.50%)</title><rect x="45" y="164" width="41" height="15" fill="rgb(231,117,37)"/><text x="48.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 3.50%)</title><rect x="45" y="180" width="41" height="15" fill="rgb(236,168,27)"/><text x="48.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 3.50%)</title><rect x="45" y="196" width="41" height="15" fill="rgb(250,46,34)"/><text x="48.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 3.50%)</title><rect x="45" y="212" width="41" height="15" fill="rgb(224,46,2)"/><text x="48.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 3.50%)</title><rect x="45" y="228" width="41" height="15" fill="rgb(213,46,47)"/><text x="48.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (12 samples, 3.00%)</title><rect x="51" y="244" width="35" height="15" fill="rgb(238,60,4)"/><text x="54.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 3.00%)</title><rect x="51" y="260" width="35" height="15" fill="rgb(250,38,22)"/><text x="54.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 3.00%)</title><rect x="51" y="276" width="35" height="15" fill="rgb(235,12,7)"/><text x="54.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 3.00%)</title><rect x="51" y="292" width="35" height="15" fill="rgb(233,165,21)"/><text x="54.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 3.00%)</title><rect x="51" y="308" width="35" height="15" fill="rgb(222,107,23)"/><text x="54.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 3.00%)</title><rect x="51" y="324" width="35" height="15" fill="rgb(233,92,18)"/><text x="54.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (12 samples, 3.00%)</title><rect x="51" y="340" width="35" height="15" fill="rgb(224,116,2)"/><text x="54.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 3.00%)</title><rect x="51" y="356" width="35" height="15" fill="rgb(234,17,3)"/><text x="54.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 3.00%)</title><rect x="51" y="372" width="35" height="15" fill="rgb(254,155,3)"/><text x="54.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 3.00%)</title><rect x="51" y="388" width="35" height="15" fill="rgb(212,49,35)"/><text x="54.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 3.00%)</title><rect x="51" y="404" width="35" height="15" fill="rgb(239,194,47)"/><text x="54.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 3.00%)</title><rect x="51" y="420" width="35" height="15" fill="rgb(225,202,32)"/><text x="54.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 1.25%)</title><rect x="71" y="436" width="15" height="15" fill="rgb(224,161,39)"/><text x="74.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.25%)</title><rect x="71" y="452" width="15" height="15" fill="rgb(230,204,48)"/><text x="74.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.25%)</title><rect x="71" y="468" width="15" height="15" fill="rgb(242,121,19)"/><text x="74.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.25%)</title><rect x="71" y="484" width="15" height="15" fill="rgb(232,51,11)"/><text x="74.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.25%)</title><rect x="71" y="500" width="15" height="15" fill="rgb(230,57,34)"/><text x="74.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.25%)</title><rect x="71" y="516" width="15" height="15" fill="rgb(231,64,29)"/><text x="74.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.25%)</title><rect x="71" y="532" width="15" height="15" fill="rgb(205,104,6)"/><text x="74.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.25%)</title><rect x="71" y="548" width="15" height="15" fill="rgb(216,28,16)"/><text x="74.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.25%)</title><rect x="71" y="564" width="15" height="15" fill="rgb(250,49,19)"/><text x="74.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 1.25%)</title><rect x="71" y="580" width="15" height="15" fill="rgb(223,98,37)"/><text x="74.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.25%)</title><rect x="71" y="596" width="15" height="15" fill="rgb(208,155,1)"/><text x="74.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.25%)</title><rect x="71" y="612" width="15" height="15" fill="rgb(245,128,51)"/><text x="74.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.25%)</title><rect x="71" y="628" width="15" height="15" fill="rgb(243,129,11)"/><text x="74.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.25%)</title><rect x="71" y="644" width="15" height="15" fill="rgb(238,13,22)"/><text x="74.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.25%)</title><rect x="71" y="660" width="15" height="15" fill="rgb(218,224,10)"/><text x="74.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (5 samples, 1.25%)</title><rect x="71" y="676" width="15" height="15" fill="rgb(232,99,19)"/><text x="74.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.25%)</title><rect x="71" y="692" width="15" height="15" fill="rgb(251,12,27)"/><text x="74.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.25%)</title><rect x="71" y="708" width="15" height="15" fill="rgb(207,164,10)"/><text x="74.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.25%)</title><rect x="71" y="724" width="15" height="15" fill="rgb(245,169,22)"/><text x="74.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.25%)</title><rect x="71" y="740" width="15" height="15" fill="rgb(225,62,45)"/><text x="74.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.25%)</title><rect x="71" y="756" width="15" height="15" fill="rgb(227,61,48)"/><text x="74.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 1.25%)</title><rect x="71" y="772" width="15" height="15" fill="rgb(212,208,31)"/><text x="74.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.25%)</title><rect x="71" y="788" width="15" height="15" fill="rgb(207,145,23)"/><text x="74.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.25%)</title><rect x="71" y="804" width="15" height="15" fill="rgb(225,77,19)"/><text x="74.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.25%)</title><rect x="71" y="820" width="15" height="15" fill="rgb(237,85,46)"/><text x="74.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.25%)</title><rect x="71" y="836" width="15" height="15" fill="rgb(250,111,31)"/><text x="74.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.25%)</title><rect x="71" y="852" width="15" height="15" fill="rgb(233,80,40)"/><text x="74.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 1.25%)</title><rect x="71" y="868" width="15" height="15" fill="rgb(234,46,1)"/><text x="74.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.25%)</title><rect x="71" y="884" width="15" height="15" fill="rgb(236,154,0)"/><text x="74.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.25%)</title><rect x="71" y="900" width="15" height="15" fill="rgb(227,77,3)"/><text x="74.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.25%)</title><rect x="71" y="916" width="15" height="15" fill="rgb(217,134,15)"/><text x="74.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.25%)</title><rect x="71" y="932" width="15" height="15" fill="rgb(239,125,32)"/><text x="74.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.25%)</title><rect x="71" y="948" width="15" height="15" fill="rgb(215,77,9)"/><text x="74.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.25%)</title><rect x="71" y="964" width="15" height="15" fill="rgb(253,77,10)"/><text x="74.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.25%)</title><rect x="71" y="980" width="15" height="15" fill="rgb(226,156,30)"/><text x="74.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.25%)</title><rect x="71" y="996" width="15" height="15" fill="rgb(221,6,23)"/><text x="74.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 1.25%)</title><rect x="71" y="1012" width="15" height="15" fill="rgb(205,23,4)"/><text x="74.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.25%)</title><rect x="71" y="1028" width="15" height="15" fill="rgb(250,35,36)"/><text x="74.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.25%)</title><rect x="71" y="1044" width="15" height="15" fill="rgb(226,226,42)"/><text x="74.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.25%)</title><rect x="71" y="1060" width="15" height="15" fill="rgb(248,146,1)"/><text x="74.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.25%)</title><rect x="71" y="1076" width="15" height="15" fill="rgb(236,53,12)"/><text x="74.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.25%)</title><rect x="71" y="1092" width="15" height="15" fill="rgb(238,139,29)"/><text x="74.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 0.75%)</title><rect x="77" y="1108" width="9" height="15" fill="rgb(207,170,27)"/><text x="80.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.75%)</title><rect x="77" y="1124" width="9" height="15" fill="rgb(246,104,37)"/><text x="80.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.75%)</title><rect x="77" y="1140" width="9" height="15" fill="rgb(220,45,26)"/><text x="80.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.75%)</title><rect x="77" y="1156" width="9" height="15" fill="rgb(218,130,21)"/><text x="80.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.75%)</title><rect x="77" y="1172" width="9" height="15" fill="rgb(226,168,0)"/><text x="80.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.75%)</title><rect x="77" y="1188" width="9" height="15" fill="rgb(214,141,39)"/><text x="80.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.75%)</title><rect x="77" y="1204" width="9" height="15" fill="rgb(253,152,1)"/><text x="80.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.75%)</title><rect x="77" y="1220" width="9" height="15" fill="rgb(213,131,54)"/><text x="80.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 0.75%)</title><rect x="77" y="1236" width="9" height="15" fill="rgb(237,196,28)"/><text x="80.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.75%)</title><rect x="77" y="1252" width="9" height="15" fill="rgb(211,118,21)"/><text x="80.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.75%)</title><rect x="77" y="1268" width="9" height="15" fill="rgb(217,2,15)"/><text x="80.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.75%)</title><rect x="77" y="1284" width="9" height="15" fill="rgb(206,40,6)"/><text x="80.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.75%)</title><rect x="77" y="1300" width="9" height="15" fill="rgb(239,112,18)"/><text x="80.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.75%)</title><rect x="77" y="1316" width="9" height="15" fill="rgb(219,219,45)"/><text x="80.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.75%)</title><rect x="77" y="1332" width="9" height="15" fill="rgb(228,37,32)"/><text x="80.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.75%)</title><rect x="77" y="1348" width="9" height="15" fill="rgb(210,150,28)"/><text x="80.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 0.75%)</title><rect x="77" y="1364" width="9" height="15" fill="rgb(212,33,14)"/><text x="80.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.75%)</title><rect x="77" y="1380" width="9" height="15" fill="rgb(245,67,26)"/><text x="80.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.75%)</title><rect x="77" y="1396" width="9" height="15" fill="rgb(246,159,54)"/><text x="80.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.75%)</title><rect x="77" y="1412" width="9" height="15" fill="rgb(207,80,54)"/><text x="80.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.75%)</title><rect x="77" y="1428" width="9" height="15" fill="rgb(213,194,39)"/><text x="80.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.75%)</title><rect x="77" y="1444" width="9" height="15" fill="rgb(237,1,28)"/><text x="80.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (3 samples, 0.75%)</title><rect x="77" y="1460" width="9" height="15" fill="rgb(253,196,31)"/><text x="80.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (3 samples, 0.75%)</title><rect x="77" y="1476" width="9" height="15" fill="rgb(221,150,4)"/><text x="80.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (3 samples, 0.75%)</title><rect x="77" y="1492" width="9" height="15" fill="rgb(246,40,31)"/><text x="80.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (3 samples, 0.75%)</title><rect x="77" y="1508" width="9" height="15" fill="rgb(252,91,40)"/><text x="80.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (3 samples, 0.75%)</title><rect x="77" y="1524" width="9" height="15" fill="rgb(247,73,11)"/><text x="80.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (3 samples, 0.75%)</title><rect x="77" y="1540" width="9" height="15" fill="rgb(254,17,30)"/><text x="80.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.75%)</title><rect x="77" y="1556" width="9" height="15" fill="rgb(244,21,18)"/><text x="80.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:25) (1 samples, 0.25%)</title><rect x="83" y="1572" width="3" height="15" fill="rgb(213,50,35)"/><text x="86.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.25%)</title><rect x="83" y="1588" width="3" height="15" fill="rgb(210,80,23)"/><text x="86.00" y="1598.50"></text></g><g><title>build_doc_url (skl2onnx/algebra/automation.py:222) (1 samples, 0.25%)</title><rect x="83" y="1604" width="3" height="15" fill="rgb(208,172,42)"/><text x="86.00" y="1614.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:149) (1 samples, 0.25%)</title><rect x="86" y="148" width="3" height="15" fill="rgb(224,108,51)"/><text x="89.00" y="158.50"></text></g><g><title>clone (sklearn/base.py:69) (1 samples, 0.25%)</title><rect x="86" y="164" width="3" height="15" fill="rgb(206,101,31)"/><text x="89.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.25%)</title><rect x="86" y="180" width="3" height="15" fill="rgb(222,33,13)"/><text x="89.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.25%)</title><rect x="86" y="196" width="3" height="15" fill="rgb(227,53,44)"/><text x="89.00" y="206.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.25%)</title><rect x="86" y="212" width="3" height="15" fill="rgb(240,55,12)"/><text x="89.00" y="222.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.25%)</title><rect x="86" y="228" width="3" height="15" fill="rgb(205,225,24)"/><text x="89.00" y="238.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.25%)</title><rect x="86" y="244" width="3" height="15" fill="rgb(213,102,30)"/><text x="89.00" y="254.50"></text></g><g><title>_signature_from_function (inspect.py:2195) (1 samples, 0.25%)</title><rect x="86" y="260" width="3" height="15" fill="rgb(215,135,4)"/><text x="89.00" y="270.50"></text></g><g><title>__init__ (inspect.py:2800) (1 samples, 0.25%)</title><rect x="86" y="276" width="3" height="15" fill="rgb(227,29,5)"/><text x="89.00" y="286.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:151) (1 samples, 0.25%)</title><rect x="89" y="148" width="3" height="15" fill="rgb(205,169,14)"/><text x="92.00" y="158.50"></text></g><g><title>set_params (sklearn/base.py:227) (1 samples, 0.25%)</title><rect x="89" y="164" width="3" height="15" fill="rgb(231,151,25)"/><text x="92.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.25%)</title><rect x="89" y="180" width="3" height="15" fill="rgb(245,34,15)"/><text x="92.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.25%)</title><rect x="89" y="196" width="3" height="15" fill="rgb(212,91,2)"/><text x="92.00" y="206.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.25%)</title><rect x="89" y="212" width="3" height="15" fill="rgb(253,44,53)"/><text x="92.00" y="222.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.25%)</title><rect x="89" y="228" width="3" height="15" fill="rgb(214,153,29)"/><text x="92.00" y="238.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.25%)</title><rect x="89" y="244" width="3" height="15" fill="rgb(208,137,8)"/><text x="92.00" y="254.50"></text></g><g><title>_signature_from_function (inspect.py:2161) (1 samples, 0.25%)</title><rect x="89" y="260" width="3" height="15" fill="rgb(229,148,18)"/><text x="92.00" y="270.50"></text></g><g><title>__init__ (inspect.py:2502) (1 samples, 0.25%)</title><rect x="89" y="276" width="3" height="15" fill="rgb(248,155,35)"/><text x="92.00" y="286.50"></text></g><g><title>unicode_isidentifier (python3.7) (1 samples, 0.25%)</title><rect x="89" y="292" width="3" height="15" fill="rgb(250,144,19)"/><text x="92.00" y="302.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:369) (3 samples, 0.75%)</title><rect x="86" y="116" width="9" height="15" fill="rgb(248,125,37)"/><text x="89.00" y="126.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py:369) (3 samples, 0.75%)</title><rect x="86" y="132" width="9" height="15" fill="rgb(223,184,6)"/><text x="89.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:154) (1 samples, 0.25%)</title><rect x="92" y="148" width="3" height="15" fill="rgb(224,19,43)"/><text x="95.00" y="158.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:77) (1 samples, 0.25%)</title><rect x="92" y="164" width="3" height="15" fill="rgb(220,115,1)"/><text x="95.00" y="174.50"></text></g><g><title>set_params (sklearn/base.py:227) (1 samples, 0.25%)</title><rect x="92" y="180" width="3" height="15" fill="rgb(211,127,37)"/><text x="95.00" y="190.50"></text></g><g><title>get_params (sklearn/base.py:191) (1 samples, 0.25%)</title><rect x="92" y="196" width="3" height="15" fill="rgb(248,115,8)"/><text x="95.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:40) (4 samples, 1.00%)</title><rect x="86" y="52" width="12" height="15" fill="rgb(210,198,51)"/><text x="89.00" y="62.50"></text></g><g><title>start (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:11) (4 samples, 1.00%)</title><rect x="86" y="68" width="12" height="15" fill="rgb(217,20,30)"/><text x="89.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:39) (4 samples, 1.00%)</title><rect x="86" y="84" width="12" height="15" fill="rgb(232,145,54)"/><text x="89.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (4 samples, 1.00%)</title><rect x="86" y="100" width="12" height="15" fill="rgb(207,188,43)"/><text x="89.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (1 samples, 0.25%)</title><rect x="95" y="116" width="3" height="15" fill="rgb(238,72,51)"/><text x="98.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (1 samples, 0.25%)</title><rect x="95" y="132" width="3" height="15" fill="rgb(254,193,37)"/><text x="98.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (1 samples, 0.25%)</title><rect x="95" y="148" width="3" height="15" fill="rgb(216,80,1)"/><text x="98.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (1 samples, 0.25%)</title><rect x="95" y="164" width="3" height="15" fill="rgb(222,76,54)"/><text x="98.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (1 samples, 0.25%)</title><rect x="95" y="180" width="3" height="15" fill="rgb(240,90,38)"/><text x="98.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (1 samples, 0.25%)</title><rect x="95" y="196" width="3" height="15" fill="rgb(223,179,38)"/><text x="98.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (1 samples, 0.25%)</title><rect x="95" y="212" width="3" height="15" fill="rgb(245,115,18)"/><text x="98.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (1 samples, 0.25%)</title><rect x="95" y="228" width="3" height="15" fill="rgb(226,141,44)"/><text x="98.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:165) (1 samples, 0.25%)</title><rect x="95" y="244" width="3" height="15" fill="rgb(237,39,28)"/><text x="98.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py:1226) (1 samples, 0.25%)</title><rect x="95" y="260" width="3" height="15" fill="rgb(224,207,43)"/><text x="98.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py:275) (1 samples, 0.25%)</title><rect x="95" y="276" width="3" height="15" fill="rgb(235,197,11)"/><text x="98.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.25%)</title><rect x="101" y="308" width="3" height="15" fill="rgb(242,209,12)"/><text x="104.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.25%)</title><rect x="101" y="324" width="3" height="15" fill="rgb(239,32,8)"/><text x="104.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.25%)</title><rect x="101" y="340" width="3" height="15" fill="rgb(207,76,42)"/><text x="104.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.25%)</title><rect x="101" y="356" width="3" height="15" fill="rgb(225,77,35)"/><text x="104.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.25%)</title><rect x="101" y="372" width="3" height="15" fill="rgb(219,72,39)"/><text x="104.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.25%)</title><rect x="101" y="388" width="3" height="15" fill="rgb(227,68,30)"/><text x="104.00" y="398.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py:89) (3 samples, 0.75%)</title><rect x="98" y="244" width="9" height="15" fill="rgb(253,124,9)"/><text x="101.00" y="254.50"></text></g><g><title>float_richcompare (scalarmath.c.src:1526) (2 samples, 0.50%)</title><rect x="101" y="260" width="6" height="15" fill="rgb(222,42,29)"/><text x="104.00" y="270.50"></text></g><g><title>gentype_richcompare (scalartypes.c.src:1220) (2 samples, 0.50%)</title><rect x="101" y="276" width="6" height="15" fill="rgb(252,142,19)"/><text x="104.00" y="286.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (2 samples, 0.50%)</title><rect x="101" y="292" width="6" height="15" fill="rgb(231,160,7)"/><text x="104.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.25%)</title><rect x="104" y="308" width="3" height="15" fill="rgb(220,17,45)"/><text x="107.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.25%)</title><rect x="104" y="324" width="3" height="15" fill="rgb(252,90,15)"/><text x="107.00" y="334.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.25%)</title><rect x="104" y="340" width="3" height="15" fill="rgb(240,5,21)"/><text x="107.00" y="350.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.25%)</title><rect x="104" y="356" width="3" height="15" fill="rgb(244,209,54)"/><text x="107.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.25%)</title><rect x="104" y="372" width="3" height="15" fill="rgb(244,208,2)"/><text x="107.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.25%)</title><rect x="104" y="388" width="3" height="15" fill="rgb(210,61,19)"/><text x="107.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.25%)</title><rect x="104" y="404" width="3" height="15" fill="rgb(210,52,34)"/><text x="107.00" y="414.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src:816) (1 samples, 0.25%)</title><rect x="104" y="420" width="3" height="15" fill="rgb(223,51,52)"/><text x="107.00" y="430.50"></text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:25) (4 samples, 1.00%)</title><rect x="98" y="84" width="12" height="15" fill="rgb(215,9,37)"/><text x="101.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (4 samples, 1.00%)</title><rect x="98" y="100" width="12" height="15" fill="rgb(206,136,5)"/><text x="101.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (4 samples, 1.00%)</title><rect x="98" y="116" width="12" height="15" fill="rgb(250,68,29)"/><text x="101.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (4 samples, 1.00%)</title><rect x="98" y="132" width="12" height="15" fill="rgb(210,192,45)"/><text x="101.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (4 samples, 1.00%)</title><rect x="98" y="148" width="12" height="15" fill="rgb(209,163,9)"/><text x="101.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (4 samples, 1.00%)</title><rect x="98" y="164" width="12" height="15" fill="rgb(215,83,48)"/><text x="101.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (4 samples, 1.00%)</title><rect x="98" y="180" width="12" height="15" fill="rgb(226,222,45)"/><text x="101.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py:139) (4 samples, 1.00%)</title><rect x="98" y="196" width="12" height="15" fill="rgb(212,168,13)"/><text x="101.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (4 samples, 1.00%)</title><rect x="98" y="212" width="12" height="15" fill="rgb(229,153,30)"/><text x="101.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:123) (4 samples, 1.00%)</title><rect x="98" y="228" width="12" height="15" fill="rgb(237,228,11)"/><text x="101.00" y="238.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py:93) (1 samples, 0.25%)</title><rect x="107" y="244" width="3" height="15" fill="rgb(249,191,33)"/><text x="110.00" y="254.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:372) (1 samples, 0.25%)</title><rect x="107" y="260" width="3" height="15" fill="rgb(211,12,36)"/><text x="110.00" y="270.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:780) (1 samples, 0.25%)</title><rect x="110" y="148" width="3" height="15" fill="rgb(233,26,11)"/><text x="113.00" y="158.50"></text></g><g><title>__init__ (joblib/parallel.py:695) (1 samples, 0.25%)</title><rect x="110" y="164" width="3" height="15" fill="rgb(209,139,37)"/><text x="113.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (1 samples, 0.25%)</title><rect x="113" y="180" width="3" height="15" fill="rgb(245,189,4)"/><text x="116.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (1 samples, 0.25%)</title><rect x="113" y="196" width="3" height="15" fill="rgb(233,36,18)"/><text x="116.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (1 samples, 0.25%)</title><rect x="116" y="244" width="3" height="15" fill="rgb(221,207,30)"/><text x="119.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (1 samples, 0.25%)</title><rect x="119" y="292" width="3" height="15" fill="rgb(240,60,0)"/><text x="122.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.25%)</title><rect x="119" y="308" width="3" height="15" fill="rgb(240,199,51)"/><text x="122.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.25%)</title><rect x="119" y="324" width="3" height="15" fill="rgb(241,116,21)"/><text x="122.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.25%)</title><rect x="119" y="340" width="3" height="15" fill="rgb(215,136,15)"/><text x="122.00" y="350.50"></text></g><g><title>0x7f141fe55fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="122" y="324" width="3" height="15" fill="rgb(219,85,46)"/><text x="125.00" y="334.50"></text></g><g><title>0x7f141fe65405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="122" y="340" width="3" height="15" fill="rgb(215,66,26)"/><text x="125.00" y="350.50"></text></g><g><title>0x7f141fe642df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="122" y="356" width="3" height="15" fill="rgb(216,119,21)"/><text x="125.00" y="366.50"></text></g><g><title>0x7f141fe48d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="122" y="372" width="3" height="15" fill="rgb(254,87,30)"/><text x="125.00" y="382.50"></text></g><g><title>0x7f141fe48666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="122" y="388" width="3" height="15" fill="rgb(240,154,40)"/><text x="125.00" y="398.50"></text></g><g><title>0x7f141fe3e467 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="122" y="404" width="3" height="15" fill="rgb(226,210,16)"/><text x="125.00" y="414.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (2 samples, 0.50%)</title><rect x="122" y="292" width="6" height="15" fill="rgb(214,16,41)"/><text x="125.00" y="302.50"></text></g><g><title>0x7f141fe56d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="122" y="308" width="6" height="15" fill="rgb(214,118,14)"/><text x="125.00" y="318.50"></text></g><g><title>0x7f141fe5605a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="125" y="324" width="3" height="15" fill="rgb(240,102,18)"/><text x="128.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.25%)</title><rect x="125" y="340" width="3" height="15" fill="rgb(250,158,34)"/><text x="128.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.25%)</title><rect x="125" y="356" width="3" height="15" fill="rgb(217,80,8)"/><text x="128.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3890) (1 samples, 0.25%)</title><rect x="125" y="372" width="3" height="15" fill="rgb(237,186,51)"/><text x="128.00" y="382.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:47) (11 samples, 2.75%)</title><rect x="98" y="52" width="32" height="15" fill="rgb(232,227,17)"/><text x="101.00" y="62.50">&lt;m..</text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:46) (11 samples, 2.75%)</title><rect x="98" y="68" width="32" height="15" fill="rgb(245,93,28)"/><text x="101.00" y="78.50">pr..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:26) (7 samples, 1.75%)</title><rect x="110" y="84" width="20" height="15" fill="rgb(218,125,12)"/><text x="113.00" y="94.50"></text></g><g><title>profile0 (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:18) (7 samples, 1.75%)</title><rect x="110" y="100" width="20" height="15" fill="rgb(239,153,42)"/><text x="113.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (7 samples, 1.75%)</title><rect x="110" y="116" width="20" height="15" fill="rgb(215,54,50)"/><text x="113.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (7 samples, 1.75%)</title><rect x="110" y="132" width="20" height="15" fill="rgb(213,120,45)"/><text x="113.00" y="142.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (6 samples, 1.50%)</title><rect x="113" y="148" width="17" height="15" fill="rgb(225,108,45)"/><text x="116.00" y="158.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (6 samples, 1.50%)</title><rect x="113" y="164" width="17" height="15" fill="rgb(253,13,21)"/><text x="116.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (5 samples, 1.25%)</title><rect x="116" y="180" width="14" height="15" fill="rgb(218,33,15)"/><text x="119.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (5 samples, 1.25%)</title><rect x="116" y="196" width="14" height="15" fill="rgb(216,92,41)"/><text x="119.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (5 samples, 1.25%)</title><rect x="116" y="212" width="14" height="15" fill="rgb(206,127,53)"/><text x="119.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (5 samples, 1.25%)</title><rect x="116" y="228" width="14" height="15" fill="rgb(246,34,35)"/><text x="119.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (4 samples, 1.00%)</title><rect x="119" y="244" width="11" height="15" fill="rgb(211,21,30)"/><text x="122.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (4 samples, 1.00%)</title><rect x="119" y="260" width="11" height="15" fill="rgb(248,106,16)"/><text x="122.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (4 samples, 1.00%)</title><rect x="119" y="276" width="11" height="15" fill="rgb(254,159,34)"/><text x="122.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (1 samples, 0.25%)</title><rect x="128" y="292" width="2" height="15" fill="rgb(219,200,23)"/><text x="131.00" y="302.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (1 samples, 0.25%)</title><rect x="128" y="308" width="2" height="15" fill="rgb(211,35,27)"/><text x="131.00" y="318.50"></text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py:410) (1 samples, 0.25%)</title><rect x="133" y="164" width="3" height="15" fill="rgb(248,114,16)"/><text x="136.00" y="174.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:766) (2 samples, 0.50%)</title><rect x="133" y="148" width="6" height="15" fill="rgb(214,224,18)"/><text x="136.00" y="158.50"></text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py:412) (1 samples, 0.25%)</title><rect x="136" y="164" width="3" height="15" fill="rgb(245,62,44)"/><text x="139.00" y="174.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (1 samples, 0.25%)</title><rect x="136" y="180" width="3" height="15" fill="rgb(237,117,49)"/><text x="139.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.25%)</title><rect x="136" y="196" width="3" height="15" fill="rgb(231,58,19)"/><text x="139.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.25%)</title><rect x="136" y="212" width="3" height="15" fill="rgb(222,136,20)"/><text x="139.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.25%)</title><rect x="136" y="228" width="3" height="15" fill="rgb(248,118,8)"/><text x="139.00" y="238.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:780) (1 samples, 0.25%)</title><rect x="139" y="148" width="3" height="15" fill="rgb(247,39,32)"/><text x="142.00" y="158.50"></text></g><g><title>__init__ (joblib/parallel.py:634) (1 samples, 0.25%)</title><rect x="139" y="164" width="3" height="15" fill="rgb(241,135,37)"/><text x="142.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (1 samples, 0.25%)</title><rect x="142" y="180" width="3" height="15" fill="rgb(227,69,43)"/><text x="145.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:241) (1 samples, 0.25%)</title><rect x="142" y="196" width="3" height="15" fill="rgb(213,185,39)"/><text x="145.00" y="206.50"></text></g><g><title>0x7f141fe55f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="145" y="324" width="3" height="15" fill="rgb(224,37,22)"/><text x="148.00" y="334.50"></text></g><g><title>0x7f141fe45d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="145" y="340" width="3" height="15" fill="rgb(210,42,20)"/><text x="148.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1357) (1 samples, 0.25%)</title><rect x="145" y="356" width="3" height="15" fill="rgb(219,212,49)"/><text x="148.00" y="366.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (3 samples, 0.75%)</title><rect x="142" y="164" width="9" height="15" fill="rgb(250,124,35)"/><text x="145.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (2 samples, 0.50%)</title><rect x="145" y="180" width="6" height="15" fill="rgb(221,212,19)"/><text x="148.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (2 samples, 0.50%)</title><rect x="145" y="196" width="6" height="15" fill="rgb(249,60,20)"/><text x="148.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (2 samples, 0.50%)</title><rect x="145" y="212" width="6" height="15" fill="rgb(213,86,6)"/><text x="148.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (2 samples, 0.50%)</title><rect x="145" y="228" width="6" height="15" fill="rgb(243,110,9)"/><text x="148.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (2 samples, 0.50%)</title><rect x="145" y="244" width="6" height="15" fill="rgb(252,110,29)"/><text x="148.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (2 samples, 0.50%)</title><rect x="145" y="260" width="6" height="15" fill="rgb(252,121,32)"/><text x="148.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (2 samples, 0.50%)</title><rect x="145" y="276" width="6" height="15" fill="rgb(246,21,1)"/><text x="148.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (2 samples, 0.50%)</title><rect x="145" y="292" width="6" height="15" fill="rgb(242,150,25)"/><text x="148.00" y="302.50"></text></g><g><title>0x7f141fe56d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="145" y="308" width="6" height="15" fill="rgb(248,143,17)"/><text x="148.00" y="318.50"></text></g><g><title>0x7f141fe5605a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="148" y="324" width="3" height="15" fill="rgb(241,124,47)"/><text x="151.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.25%)</title><rect x="148" y="340" width="3" height="15" fill="rgb(207,126,52)"/><text x="151.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:55) (1 samples, 0.25%)</title><rect x="148" y="356" width="3" height="15" fill="rgb(226,51,29)"/><text x="151.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1867) (1 samples, 0.25%)</title><rect x="148" y="372" width="3" height="15" fill="rgb(224,167,8)"/><text x="151.00" y="382.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.25%)</title><rect x="148" y="388" width="3" height="15" fill="rgb(219,52,36)"/><text x="151.00" y="398.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:788) (1 samples, 0.25%)</title><rect x="154" y="180" width="3" height="15" fill="rgb(241,61,30)"/><text x="157.00" y="190.50"></text></g><g><title>0x7f1446428776 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="154" y="196" width="3" height="15" fill="rgb(234,53,47)"/><text x="157.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (2 samples, 0.50%)</title><rect x="157" y="180" width="6" height="15" fill="rgb(247,223,36)"/><text x="160.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.25%)</title><rect x="160" y="196" width="3" height="15" fill="rgb(212,14,25)"/><text x="163.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.25%)</title><rect x="160" y="212" width="3" height="15" fill="rgb(206,112,50)"/><text x="163.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:52) (1 samples, 0.25%)</title><rect x="172" y="228" width="3" height="15" fill="rgb(246,54,46)"/><text x="175.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:54) (2 samples, 0.50%)</title><rect x="175" y="228" width="6" height="15" fill="rgb(211,36,20)"/><text x="178.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:60) (1 samples, 0.25%)</title><rect x="181" y="228" width="3" height="15" fill="rgb(206,66,3)"/><text x="184.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:63) (1 samples, 0.25%)</title><rect x="184" y="228" width="3" height="15" fill="rgb(221,223,40)"/><text x="187.00" y="238.50"></text></g><g><title>wraps (functools.py:78) (1 samples, 0.25%)</title><rect x="187" y="228" width="2" height="15" fill="rgb(247,160,0)"/><text x="190.00" y="238.50"></text></g><g><title>delayed (joblib/parallel.py:308) (8 samples, 2.00%)</title><rect x="172" y="212" width="23" height="15" fill="rgb(224,96,14)"/><text x="175.00" y="222.50">d..</text></g><g><title>wraps (functools.py:79) (2 samples, 0.50%)</title><rect x="189" y="228" width="6" height="15" fill="rgb(243,211,16)"/><text x="192.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (12 samples, 3.00%)</title><rect x="163" y="180" width="35" height="15" fill="rgb(232,34,17)"/><text x="166.00" y="190.50">di..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:782) (9 samples, 2.25%)</title><rect x="172" y="196" width="26" height="15" fill="rgb(252,152,54)"/><text x="175.00" y="206.50">&lt;..</text></g><g><title>delayed_function (joblib/parallel.py:306) (1 samples, 0.25%)</title><rect x="195" y="212" width="3" height="15" fill="rgb(231,183,11)"/><text x="198.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:819) (1 samples, 0.25%)</title><rect x="198" y="180" width="3" height="15" fill="rgb(241,9,48)"/><text x="201.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (2 samples, 0.50%)</title><rect x="201" y="180" width="6" height="15" fill="rgb(226,222,12)"/><text x="204.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:823) (3 samples, 0.75%)</title><rect x="207" y="180" width="9" height="15" fill="rgb(242,109,34)"/><text x="210.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.75%)</title><rect x="237" y="212" width="9" height="15" fill="rgb(222,182,17)"/><text x="240.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (10 samples, 2.50%)</title><rect x="219" y="196" width="29" height="15" fill="rgb(244,120,45)"/><text x="222.00" y="206.50">ge..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.25%)</title><rect x="246" y="212" width="2" height="15" fill="rgb(235,59,13)"/><text x="249.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (2 samples, 0.50%)</title><rect x="266" y="228" width="6" height="15" fill="rgb(218,91,46)"/><text x="269.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:275) (1 samples, 0.25%)</title><rect x="272" y="228" width="3" height="15" fill="rgb(234,106,32)"/><text x="275.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (11 samples, 2.75%)</title><rect x="254" y="212" width="33" height="15" fill="rgb(225,9,28)"/><text x="257.00" y="222.50">ge..</text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (4 samples, 1.00%)</title><rect x="275" y="228" width="12" height="15" fill="rgb(240,196,41)"/><text x="278.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:38) (1 samples, 0.25%)</title><rect x="284" y="244" width="3" height="15" fill="rgb(229,224,5)"/><text x="287.00" y="254.50"></text></g><g><title>get_active_backend (joblib/parallel.py:118) (1 samples, 0.25%)</title><rect x="287" y="212" width="3" height="15" fill="rgb(248,3,16)"/><text x="290.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:119) (1 samples, 0.25%)</title><rect x="290" y="212" width="3" height="15" fill="rgb(243,170,40)"/><text x="293.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:94) (1 samples, 0.25%)</title><rect x="293" y="212" width="3" height="15" fill="rgb(232,122,10)"/><text x="296.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (28 samples, 7.00%)</title><rect x="216" y="180" width="83" height="15" fill="rgb(228,123,14)"/><text x="219.00" y="190.50">dispatch_..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (17 samples, 4.25%)</title><rect x="248" y="196" width="51" height="15" fill="rgb(239,75,7)"/><text x="251.00" y="206.50">get_n..</text></g><g><title>get_active_backend (joblib/parallel.py:95) (1 samples, 0.25%)</title><rect x="296" y="212" width="3" height="15" fill="rgb(247,10,8)"/><text x="299.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (2 samples, 0.50%)</title><rect x="299" y="180" width="6" height="15" fill="rgb(239,23,37)"/><text x="302.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:241) (2 samples, 0.50%)</title><rect x="299" y="196" width="6" height="15" fill="rgb(244,3,20)"/><text x="302.00" y="206.50"></text></g><g><title>put (queue.py:132) (1 samples, 0.25%)</title><rect x="307" y="196" width="3" height="15" fill="rgb(232,118,16)"/><text x="310.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.25%)</title><rect x="307" y="212" width="3" height="15" fill="rgb(214,110,3)"/><text x="310.00" y="222.50"></text></g><g><title>put (queue.py:149) (1 samples, 0.25%)</title><rect x="310" y="196" width="3" height="15" fill="rgb(226,56,8)"/><text x="313.00" y="206.50"></text></g><g><title>_put (queue.py:213) (1 samples, 0.25%)</title><rect x="310" y="212" width="3" height="15" fill="rgb(210,22,6)"/><text x="313.00" y="222.50"></text></g><g><title>put (queue.py:150) (1 samples, 0.25%)</title><rect x="313" y="196" width="3" height="15" fill="rgb(252,138,37)"/><text x="316.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (8 samples, 2.00%)</title><rect x="305" y="180" width="23" height="15" fill="rgb(222,25,17)"/><text x="308.00" y="190.50">d..</text></g><g><title>put (queue.py:151) (4 samples, 1.00%)</title><rect x="316" y="196" width="12" height="15" fill="rgb(216,47,15)"/><text x="319.00" y="206.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.25%)</title><rect x="325" y="212" width="3" height="15" fill="rgb(244,35,54)"/><text x="328.00" y="222.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.25%)</title><rect x="331" y="196" width="3" height="15" fill="rgb(249,47,22)"/><text x="334.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.25%)</title><rect x="331" y="212" width="3" height="15" fill="rgb(212,170,47)"/><text x="334.00" y="222.50"></text></g><g><title>notify (threading.py:345) (2 samples, 0.50%)</title><rect x="337" y="212" width="6" height="15" fill="rgb(232,146,13)"/><text x="340.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (2 samples, 0.50%)</title><rect x="337" y="228" width="6" height="15" fill="rgb(227,58,2)"/><text x="340.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.25%)</title><rect x="340" y="244" width="3" height="15" fill="rgb(240,94,53)"/><text x="343.00" y="254.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.25%)</title><rect x="340" y="260" width="3" height="15" fill="rgb(214,93,11)"/><text x="343.00" y="270.50"></text></g><g><title>get (queue.py:181) (4 samples, 1.00%)</title><rect x="334" y="196" width="12" height="15" fill="rgb(234,4,38)"/><text x="337.00" y="206.50"></text></g><g><title>notify (threading.py:347) (1 samples, 0.25%)</title><rect x="343" y="212" width="3" height="15" fill="rgb(236,133,6)"/><text x="346.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (8 samples, 2.00%)</title><rect x="328" y="180" width="24" height="15" fill="rgb(215,0,51)"/><text x="331.00" y="190.50">d..</text></g><g><title>get (queue.py:182) (2 samples, 0.50%)</title><rect x="346" y="196" width="6" height="15" fill="rgb(251,149,45)"/><text x="349.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:746) (1 samples, 0.25%)</title><rect x="358" y="196" width="3" height="15" fill="rgb(212,122,22)"/><text x="361.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:327) (1 samples, 0.25%)</title><rect x="364" y="212" width="2" height="15" fill="rgb(242,175,9)"/><text x="367.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (4 samples, 1.00%)</title><rect x="361" y="196" width="11" height="15" fill="rgb(254,149,40)"/><text x="364.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:328) (2 samples, 0.50%)</title><rect x="366" y="212" width="6" height="15" fill="rgb(252,172,24)"/><text x="369.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (4 samples, 1.00%)</title><rect x="384" y="260" width="12" height="15" fill="rgb(233,199,34)"/><text x="387.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (7 samples, 1.75%)</title><rect x="378" y="244" width="21" height="15" fill="rgb(211,86,42)"/><text x="381.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:209) (1 samples, 0.25%)</title><rect x="396" y="260" width="3" height="15" fill="rgb(220,157,12)"/><text x="399.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:255) (1 samples, 0.25%)</title><rect x="408" y="260" width="3" height="15" fill="rgb(244,114,16)"/><text x="411.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.25%)</title><rect x="420" y="292" width="3" height="15" fill="rgb(234,116,5)"/><text x="423.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.25%)</title><rect x="420" y="308" width="3" height="15" fill="rgb(247,194,53)"/><text x="423.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.25%)</title><rect x="420" y="324" width="3" height="15" fill="rgb(236,21,43)"/><text x="423.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.25%)</title><rect x="434" y="324" width="3" height="15" fill="rgb(242,128,15)"/><text x="437.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (11 samples, 2.75%)</title><rect x="423" y="292" width="32" height="15" fill="rgb(215,124,45)"/><text x="426.00" y="302.50">pr..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (10 samples, 2.50%)</title><rect x="425" y="308" width="30" height="15" fill="rgb(209,15,2)"/><text x="428.00" y="318.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 1.50%)</title><rect x="437" y="324" width="18" height="15" fill="rgb(222,84,10)"/><text x="440.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.25%)</title><rect x="452" y="340" width="3" height="15" fill="rgb(209,45,44)"/><text x="455.00" y="350.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (2 samples, 0.50%)</title><rect x="455" y="308" width="6" height="15" fill="rgb(254,140,8)"/><text x="458.00" y="318.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1178) (1 samples, 0.25%)</title><rect x="458" y="324" width="3" height="15" fill="rgb(237,24,23)"/><text x="461.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (4 samples, 1.00%)</title><rect x="455" y="292" width="12" height="15" fill="rgb(252,81,7)"/><text x="458.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (2 samples, 0.50%)</title><rect x="461" y="308" width="6" height="15" fill="rgb(213,175,2)"/><text x="464.00" y="318.50"></text></g><g><title>0x7f141fe55f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="467" y="324" width="3" height="15" fill="rgb(211,163,19)"/><text x="470.00" y="334.50"></text></g><g><title>0x7f141fe45d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="467" y="340" width="3" height="15" fill="rgb(247,110,3)"/><text x="470.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.25%)</title><rect x="467" y="356" width="3" height="15" fill="rgb(244,141,41)"/><text x="470.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.25%)</title><rect x="467" y="372" width="3" height="15" fill="rgb(216,83,31)"/><text x="470.00" y="382.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.25%)</title><rect x="467" y="388" width="3" height="15" fill="rgb(235,46,32)"/><text x="470.00" y="398.50"></text></g><g><title>0x7f141fe64225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="470" y="356" width="6" height="15" fill="rgb(246,92,26)"/><text x="473.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.25%)</title><rect x="473" y="372" width="3" height="15" fill="rgb(250,48,0)"/><text x="476.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.25%)</title><rect x="473" y="388" width="3" height="15" fill="rgb(209,42,34)"/><text x="476.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.25%)</title><rect x="473" y="404" width="3" height="15" fill="rgb(224,92,8)"/><text x="476.00" y="414.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.25%)</title><rect x="473" y="420" width="3" height="15" fill="rgb(239,156,38)"/><text x="476.00" y="430.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4556) (1 samples, 0.25%)</title><rect x="473" y="436" width="3" height="15" fill="rgb(213,61,46)"/><text x="476.00" y="446.50"></text></g><g><title>0x7f141fe642df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="476" y="356" width="3" height="15" fill="rgb(216,91,14)"/><text x="479.00" y="366.50"></text></g><g><title>0x7f141fe48d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="476" y="372" width="3" height="15" fill="rgb(230,148,19)"/><text x="479.00" y="382.50"></text></g><g><title>0x7f141fe48666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="476" y="388" width="3" height="15" fill="rgb(251,66,42)"/><text x="479.00" y="398.50"></text></g><g><title>0x7f141fe3e2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="476" y="404" width="3" height="15" fill="rgb(243,215,45)"/><text x="479.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.25%)</title><rect x="476" y="420" width="3" height="15" fill="rgb(224,95,3)"/><text x="479.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.25%)</title><rect x="476" y="436" width="3" height="15" fill="rgb(230,227,53)"/><text x="479.00" y="446.50"></text></g><g><title>_buffer_info_cmp (buffer.c:610) (1 samples, 0.25%)</title><rect x="476" y="452" width="3" height="15" fill="rgb(224,228,18)"/><text x="479.00" y="462.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.25%)</title><rect x="479" y="372" width="3" height="15" fill="rgb(240,89,22)"/><text x="482.00" y="382.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.25%)</title><rect x="479" y="388" width="3" height="15" fill="rgb(241,147,48)"/><text x="482.00" y="398.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.25%)</title><rect x="479" y="404" width="3" height="15" fill="rgb(246,121,42)"/><text x="482.00" y="414.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="482" y="468" width="2" height="15" fill="rgb(222,110,29)"/><text x="485.00" y="478.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (2 samples, 0.50%)</title><rect x="484" y="468" width="6" height="15" fill="rgb(226,129,4)"/><text x="487.00" y="478.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:252) (4 samples, 1.00%)</title><rect x="482" y="452" width="11" height="15" fill="rgb(250,1,30)"/><text x="485.00" y="462.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="490" y="468" width="3" height="15" fill="rgb(209,155,34)"/><text x="493.00" y="478.50"></text></g><g><title>0x7f1446414700 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="493" y="484" width="3" height="15" fill="rgb(208,147,9)"/><text x="496.00" y="494.50"></text></g><g><title>0x7f1446411b0a (libc-2.29.so) (1 samples, 0.25%)</title><rect x="493" y="500" width="3" height="15" fill="rgb(236,216,45)"/><text x="496.00" y="510.50"></text></g><g><title>0x7f141fe64592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.75%)</title><rect x="479" y="356" width="20" height="15" fill="rgb(237,86,17)"/><text x="482.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (6 samples, 1.50%)</title><rect x="482" y="372" width="17" height="15" fill="rgb(218,131,42)"/><text x="485.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (6 samples, 1.50%)</title><rect x="482" y="388" width="17" height="15" fill="rgb(222,71,21)"/><text x="485.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (6 samples, 1.50%)</title><rect x="482" y="404" width="17" height="15" fill="rgb(238,38,19)"/><text x="485.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (6 samples, 1.50%)</title><rect x="482" y="420" width="17" height="15" fill="rgb(242,50,48)"/><text x="485.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (6 samples, 1.50%)</title><rect x="482" y="436" width="17" height="15" fill="rgb(239,214,6)"/><text x="485.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (2 samples, 0.50%)</title><rect x="493" y="452" width="6" height="15" fill="rgb(241,66,30)"/><text x="496.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (2 samples, 0.50%)</title><rect x="493" y="468" width="6" height="15" fill="rgb(211,119,44)"/><text x="496.00" y="478.50"></text></g><g><title>0x7f1446433103 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="496" y="484" width="3" height="15" fill="rgb(221,14,25)"/><text x="499.00" y="494.50"></text></g><g><title>0x7f141fe64684 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="499" y="356" width="3" height="15" fill="rgb(243,91,48)"/><text x="502.00" y="366.50"></text></g><g><title>0x7f141fe64687 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="502" y="356" width="3" height="15" fill="rgb(221,96,28)"/><text x="505.00" y="366.50"></text></g><g><title>0x7f141fe646aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.75%)</title><rect x="505" y="356" width="9" height="15" fill="rgb(241,115,6)"/><text x="508.00" y="366.50"></text></g><g><title>0x7f141fe646ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.25%)</title><rect x="514" y="356" width="15" height="15" fill="rgb(225,71,2)"/><text x="517.00" y="366.50"></text></g><g><title>0x7f141fe646b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.75%)</title><rect x="529" y="356" width="9" height="15" fill="rgb(241,103,53)"/><text x="532.00" y="366.50"></text></g><g><title>0x7f141fe646d4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="538" y="356" width="5" height="15" fill="rgb(219,5,23)"/><text x="541.00" y="366.50"></text></g><g><title>0x7f141fe647a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="543" y="356" width="3" height="15" fill="rgb(238,50,32)"/><text x="546.00" y="366.50"></text></g><g><title>0x7f141fe647b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.00%)</title><rect x="546" y="356" width="12" height="15" fill="rgb(211,71,1)"/><text x="549.00" y="366.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (2 samples, 0.50%)</title><rect x="558" y="404" width="6" height="15" fill="rgb(207,122,23)"/><text x="561.00" y="414.50"></text></g><g><title>0x7f141fe65405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (34 samples, 8.50%)</title><rect x="470" y="340" width="100" height="15" fill="rgb(236,92,12)"/><text x="473.00" y="350.50">0x7f141fe654..</text></g><g><title>0x7f141fe64c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.00%)</title><rect x="558" y="356" width="12" height="15" fill="rgb(214,87,10)"/><text x="561.00" y="366.50"></text></g><g><title>0x7f141fe3c529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.00%)</title><rect x="558" y="372" width="12" height="15" fill="rgb(211,91,37)"/><text x="561.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:782) (4 samples, 1.00%)</title><rect x="558" y="388" width="12" height="15" fill="rgb(213,229,45)"/><text x="561.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:694) (2 samples, 0.50%)</title><rect x="564" y="404" width="6" height="15" fill="rgb(228,31,1)"/><text x="567.00" y="414.50"></text></g><g><title>0x7f141fe55fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (35 samples, 8.75%)</title><rect x="470" y="324" width="103" height="15" fill="rgb(219,68,9)"/><text x="473.00" y="334.50">0x7f141fe55f..</text></g><g><title>0x7f141fe65540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="570" y="340" width="3" height="15" fill="rgb(217,187,11)"/><text x="573.00" y="350.50"></text></g><g><title>0x7f141fe3a2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="570" y="356" width="3" height="15" fill="rgb(253,187,0)"/><text x="573.00" y="366.50"></text></g><g><title>0x7f141fe39530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="570" y="372" width="3" height="15" fill="rgb(221,71,3)"/><text x="573.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.25%)</title><rect x="570" y="388" width="3" height="15" fill="rgb(242,193,7)"/><text x="573.00" y="398.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:229) (1 samples, 0.25%)</title><rect x="576" y="356" width="3" height="15" fill="rgb(212,211,14)"/><text x="579.00" y="366.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.25%)</title><rect x="576" y="372" width="3" height="15" fill="rgb(253,22,34)"/><text x="579.00" y="382.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.25%)</title><rect x="576" y="388" width="3" height="15" fill="rgb(205,92,36)"/><text x="579.00" y="398.50"></text></g><g><title>array_take (methods.c:138) (2 samples, 0.50%)</title><rect x="576" y="340" width="6" height="15" fill="rgb(235,86,34)"/><text x="579.00" y="350.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.25%)</title><rect x="579" y="356" width="3" height="15" fill="rgb(213,37,26)"/><text x="582.00" y="366.50"></text></g><g><title>0x7f14464f0151 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="579" y="372" width="3" height="15" fill="rgb(244,205,18)"/><text x="582.00" y="382.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3948) (2 samples, 0.50%)</title><rect x="582" y="372" width="6" height="15" fill="rgb(240,155,22)"/><text x="585.00" y="382.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3949) (1 samples, 0.25%)</title><rect x="588" y="372" width="3" height="15" fill="rgb(229,158,6)"/><text x="591.00" y="382.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3954) (1 samples, 0.25%)</title><rect x="591" y="372" width="3" height="15" fill="rgb(246,102,19)"/><text x="594.00" y="382.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3956) (1 samples, 0.25%)</title><rect x="594" y="372" width="3" height="15" fill="rgb(216,193,6)"/><text x="597.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (7 samples, 1.75%)</title><rect x="582" y="356" width="20" height="15" fill="rgb(221,66,10)"/><text x="585.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3957) (2 samples, 0.50%)</title><rect x="597" y="372" width="5" height="15" fill="rgb(247,69,16)"/><text x="600.00" y="382.50"></text></g><g><title>0x7f141fe5605a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 2.75%)</title><rect x="573" y="324" width="32" height="15" fill="rgb(230,43,52)"/><text x="576.00" y="334.50">0x..</text></g><g><title>array_take (methods.c:145) (8 samples, 2.00%)</title><rect x="582" y="340" width="23" height="15" fill="rgb(241,155,27)"/><text x="585.00" y="350.50">a..</text></g><g><title>PyArray_TakeFrom (item_selection.c:36) (1 samples, 0.25%)</title><rect x="602" y="356" width="3" height="15" fill="rgb(249,4,29)"/><text x="605.00" y="366.50"></text></g><g><title>0x7f141fe5614f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="605" y="324" width="3" height="15" fill="rgb(217,217,44)"/><text x="608.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.25%)</title><rect x="605" y="340" width="3" height="15" fill="rgb(206,70,39)"/><text x="608.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.25%)</title><rect x="605" y="356" width="3" height="15" fill="rgb(227,3,27)"/><text x="608.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:728) (1 samples, 0.25%)</title><rect x="605" y="372" width="3" height="15" fill="rgb(205,215,9)"/><text x="608.00" y="382.50"></text></g><g><title>_buffer_info_free (buffer.c:629) (1 samples, 0.25%)</title><rect x="605" y="388" width="3" height="15" fill="rgb(246,153,7)"/><text x="608.00" y="398.50"></text></g><g><title>0x7f141fe561bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="608" y="324" width="6" height="15" fill="rgb(235,7,20)"/><text x="611.00" y="334.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1180) (1 samples, 0.25%)</title><rect x="611" y="340" width="3" height="15" fill="rgb(207,152,33)"/><text x="614.00" y="350.50"></text></g><g><title>0x7f141fe5655e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="614" y="324" width="3" height="15" fill="rgb(241,24,15)"/><text x="617.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (52 samples, 13.00%)</title><rect x="467" y="292" width="153" height="15" fill="rgb(249,2,10)"/><text x="470.00" y="302.50">predict (sklearn/tr..</text></g><g><title>0x7f141fe56d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (52 samples, 13.00%)</title><rect x="467" y="308" width="153" height="15" fill="rgb(237,16,30)"/><text x="470.00" y="318.50">0x7f141fe56d2e (skl..</text></g><g><title>0x7f141fe568d3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="617" y="324" width="3" height="15" fill="rgb(221,52,37)"/><text x="620.00" y="334.50"></text></g><g><title>0x7f141fe32bef (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="617" y="340" width="3" height="15" fill="rgb(208,127,42)"/><text x="620.00" y="350.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (69 samples, 17.25%)</title><rect x="420" y="276" width="203" height="15" fill="rgb(254,126,15)"/><text x="423.00" y="286.50">_accumulate_prediction (sk..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (1 samples, 0.25%)</title><rect x="620" y="292" width="3" height="15" fill="rgb(208,175,29)"/><text x="623.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.25%)</title><rect x="620" y="308" width="3" height="15" fill="rgb(238,140,25)"/><text x="623.00" y="318.50"></text></g><g><title>prepare_index (mapping.c:423) (1 samples, 0.25%)</title><rect x="620" y="324" width="3" height="15" fill="rgb(254,10,31)"/><text x="623.00" y="334.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (1 samples, 0.25%)</title><rect x="623" y="276" width="3" height="15" fill="rgb(249,221,32)"/><text x="626.00" y="286.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.25%)</title><rect x="623" y="292" width="3" height="15" fill="rgb(236,80,13)"/><text x="626.00" y="302.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.25%)</title><rect x="623" y="308" width="3" height="15" fill="rgb(213,24,0)"/><text x="626.00" y="318.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="623" y="324" width="3" height="15" fill="rgb(223,204,38)"/><text x="626.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.25%)</title><rect x="626" y="308" width="3" height="15" fill="rgb(225,18,22)"/><text x="629.00" y="318.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.25%)</title><rect x="626" y="324" width="3" height="15" fill="rgb(220,179,23)"/><text x="629.00" y="334.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.25%)</title><rect x="626" y="340" width="3" height="15" fill="rgb(253,35,19)"/><text x="629.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.25%)</title><rect x="629" y="308" width="3" height="15" fill="rgb(247,13,36)"/><text x="632.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.25%)</title><rect x="629" y="324" width="3" height="15" fill="rgb(236,185,23)"/><text x="632.00" y="334.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1848) (1 samples, 0.25%)</title><rect x="629" y="340" width="3" height="15" fill="rgb(228,61,14)"/><text x="632.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (2 samples, 0.50%)</title><rect x="632" y="308" width="6" height="15" fill="rgb(206,71,19)"/><text x="635.00" y="318.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (2 samples, 0.50%)</title><rect x="632" y="324" width="6" height="15" fill="rgb(212,200,5)"/><text x="635.00" y="334.50"></text></g><g><title>0x7f144643314a (libc-2.29.so) (1 samples, 0.25%)</title><rect x="635" y="340" width="3" height="15" fill="rgb(206,207,54)"/><text x="638.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.50%)</title><rect x="638" y="324" width="6" height="15" fill="rgb(245,205,10)"/><text x="641.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.50%)</title><rect x="638" y="340" width="6" height="15" fill="rgb(222,82,54)"/><text x="641.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (2 samples, 0.50%)</title><rect x="638" y="356" width="6" height="15" fill="rgb(210,117,20)"/><text x="641.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:602) (1 samples, 0.25%)</title><rect x="641" y="372" width="3" height="15" fill="rgb(218,123,34)"/><text x="644.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1380) (1 samples, 0.25%)</title><rect x="644" y="340" width="3" height="15" fill="rgb(246,29,20)"/><text x="647.00" y="350.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (9 samples, 2.25%)</title><rect x="626" y="276" width="27" height="15" fill="rgb(249,58,42)"/><text x="629.00" y="286.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 2.25%)</title><rect x="626" y="292" width="27" height="15" fill="rgb(237,21,0)"/><text x="629.00" y="302.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.25%)</title><rect x="638" y="308" width="15" height="15" fill="rgb(248,22,44)"/><text x="641.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (3 samples, 0.75%)</title><rect x="644" y="324" width="9" height="15" fill="rgb(243,134,19)"/><text x="647.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.50%)</title><rect x="647" y="340" width="6" height="15" fill="rgb(212,83,9)"/><text x="650.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.50%)</title><rect x="647" y="356" width="6" height="15" fill="rgb(211,154,1)"/><text x="650.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.50%)</title><rect x="647" y="372" width="6" height="15" fill="rgb(252,136,46)"/><text x="650.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (2 samples, 0.50%)</title><rect x="647" y="388" width="6" height="15" fill="rgb(242,221,12)"/><text x="650.00" y="398.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.50%)</title><rect x="647" y="404" width="6" height="15" fill="rgb(224,70,25)"/><text x="650.00" y="414.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (86 samples, 21.50%)</title><rect x="411" y="260" width="253" height="15" fill="rgb(224,131,28)"/><text x="414.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:25..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:455) (4 samples, 1.00%)</title><rect x="653" y="276" width="11" height="15" fill="rgb(233,5,51)"/><text x="656.00" y="286.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.25%)</title><rect x="661" y="292" width="3" height="15" fill="rgb(229,46,19)"/><text x="664.00" y="302.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.25%)</title><rect x="661" y="308" width="3" height="15" fill="rgb(234,118,33)"/><text x="664.00" y="318.50"></text></g><g><title>unregister (joblib/parallel.py:218) (1 samples, 0.25%)</title><rect x="664" y="276" width="3" height="15" fill="rgb(206,64,39)"/><text x="667.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (102 samples, 25.50%)</title><rect x="372" y="212" width="301" height="15" fill="rgb(210,21,25)"/><text x="375.00" y="222.50">apply_async (joblib/_parallel_backends.p..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (101 samples, 25.25%)</title><rect x="375" y="228" width="298" height="15" fill="rgb(246,67,15)"/><text x="378.00" y="238.50">__init__ (joblib/_parallel_backends.py:5..</text></g><g><title>__call__ (joblib/parallel.py:256) (93 samples, 23.25%)</title><rect x="399" y="244" width="274" height="15" fill="rgb(220,104,36)"/><text x="402.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (3 samples, 0.75%)</title><rect x="664" y="260" width="9" height="15" fill="rgb(229,222,4)"/><text x="667.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:219) (2 samples, 0.50%)</title><rect x="667" y="276" width="6" height="15" fill="rgb(243,32,22)"/><text x="670.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (1 samples, 0.25%)</title><rect x="685" y="228" width="3" height="15" fill="rgb(229,99,46)"/><text x="688.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:336) (1 samples, 0.25%)</title><rect x="688" y="228" width="3" height="15" fill="rgb(218,2,5)"/><text x="691.00" y="238.50"></text></g><g><title>batch_completed (joblib/_parallel_backends.py:92) (1 samples, 0.25%)</title><rect x="688" y="244" width="3" height="15" fill="rgb(230,222,43)"/><text x="691.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py:337) (2 samples, 0.50%)</title><rect x="691" y="228" width="6" height="15" fill="rgb(234,93,51)"/><text x="694.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:338) (2 samples, 0.50%)</title><rect x="697" y="228" width="6" height="15" fill="rgb(229,62,49)"/><text x="700.00" y="238.50"></text></g><g><title>PyThread_get_thread_ident (python3.7) (1 samples, 0.25%)</title><rect x="700" y="244" width="3" height="15" fill="rgb(210,46,25)"/><text x="703.00" y="254.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (120 samples, 30.00%)</title><rect x="352" y="180" width="354" height="15" fill="rgb(211,87,51)"/><text x="355.00" y="190.50">dispatch_one_batch (joblib/parallel.py:834)</text></g><g><title>_dispatch (joblib/parallel.py:753) (113 samples, 28.25%)</title><rect x="372" y="196" width="334" height="15" fill="rgb(241,159,0)"/><text x="375.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (11 samples, 2.75%)</title><rect x="673" y="212" width="33" height="15" fill="rgb(239,108,2)"/><text x="676.00" y="222.50">ap..</text></g><g><title>__call__ (joblib/parallel.py:339) (1 samples, 0.25%)</title><rect x="703" y="228" width="3" height="15" fill="rgb(251,81,8)"/><text x="706.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (189 samples, 47.25%)</title><rect x="151" y="164" width="558" height="15" fill="rgb(251,183,36)"/><text x="154.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:835) (1 samples, 0.25%)</title><rect x="706" y="180" width="3" height="15" fill="rgb(231,33,19)"/><text x="709.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:54) (197 samples, 49.25%)</title><rect x="130" y="52" width="582" height="15" fill="rgb(216,11,44)"/><text x="133.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:54)</text></g><g><title>profile_skl (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:53) (197 samples, 49.25%)</title><rect x="130" y="68" width="582" height="15" fill="rgb(237,214,3)"/><text x="133.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:53)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:37) (197 samples, 49.25%)</title><rect x="130" y="84" width="582" height="15" fill="rgb(214,66,43)"/><text x="133.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:37)</text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:31) (197 samples, 49.25%)</title><rect x="130" y="100" width="582" height="15" fill="rgb(206,227,48)"/><text x="133.00" y="110.50">profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (196 samples, 49.00%)</title><rect x="133" y="116" width="579" height="15" fill="rgb(254,179,19)"/><text x="136.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (196 samples, 49.00%)</title><rect x="133" y="132" width="579" height="15" fill="rgb(207,93,11)"/><text x="136.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (193 samples, 48.25%)</title><rect x="142" y="148" width="570" height="15" fill="rgb(214,179,45)"/><text x="145.00" y="158.50">predict (sklearn/ensemble/_forest.py:782)</text></g><g><title>__call__ (joblib/parallel.py:1016) (1 samples, 0.25%)</title><rect x="709" y="164" width="3" height="15" fill="rgb(228,110,12)"/><text x="712.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:907) (1 samples, 0.25%)</title><rect x="709" y="180" width="3" height="15" fill="rgb(210,169,33)"/><text x="712.00" y="190.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:36) (1 samples, 0.25%)</title><rect x="712" y="84" width="3" height="15" fill="rgb(249,101,46)"/><text x="715.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.25%)</title><rect x="712" y="100" width="3" height="15" fill="rgb(246,48,38)"/><text x="715.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.25%)</title><rect x="712" y="116" width="3" height="15" fill="rgb(231,202,22)"/><text x="715.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.25%)</title><rect x="712" y="132" width="3" height="15" fill="rgb(249,4,19)"/><text x="715.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.25%)</title><rect x="712" y="148" width="3" height="15" fill="rgb(208,5,37)"/><text x="715.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.25%)</title><rect x="712" y="164" width="3" height="15" fill="rgb(226,106,39)"/><text x="715.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.25%)</title><rect x="712" y="180" width="3" height="15" fill="rgb(212,199,38)"/><text x="715.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.25%)</title><rect x="712" y="196" width="3" height="15" fill="rgb(210,91,43)"/><text x="715.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="712" y="212" width="3" height="15" fill="rgb(214,85,54)"/><text x="715.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="712" y="228" width="3" height="15" fill="rgb(234,149,1)"/><text x="715.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="712" y="244" width="3" height="15" fill="rgb(240,161,41)"/><text x="715.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="712" y="260" width="3" height="15" fill="rgb(249,29,28)"/><text x="715.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="712" y="276" width="3" height="15" fill="rgb(213,184,5)"/><text x="715.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.25%)</title><rect x="712" y="292" width="3" height="15" fill="rgb(212,205,12)"/><text x="715.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="712" y="308" width="3" height="15" fill="rgb(217,196,37)"/><text x="715.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="712" y="324" width="3" height="15" fill="rgb(210,109,41)"/><text x="715.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="712" y="340" width="3" height="15" fill="rgb(216,87,18)"/><text x="715.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="712" y="356" width="3" height="15" fill="rgb(226,225,47)"/><text x="715.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="712" y="372" width="3" height="15" fill="rgb(237,171,51)"/><text x="715.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.25%)</title><rect x="712" y="388" width="3" height="15" fill="rgb(211,17,4)"/><text x="715.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="712" y="404" width="3" height="15" fill="rgb(244,187,46)"/><text x="715.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="712" y="420" width="3" height="15" fill="rgb(239,59,49)"/><text x="715.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="712" y="436" width="3" height="15" fill="rgb(206,109,38)"/><text x="715.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="712" y="452" width="3" height="15" fill="rgb(219,3,1)"/><text x="715.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="712" y="468" width="3" height="15" fill="rgb(250,125,46)"/><text x="715.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.25%)</title><rect x="712" y="484" width="3" height="15" fill="rgb(206,48,8)"/><text x="715.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.25%)</title><rect x="712" y="500" width="3" height="15" fill="rgb(226,152,18)"/><text x="715.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.25%)</title><rect x="712" y="516" width="3" height="15" fill="rgb(244,61,22)"/><text x="715.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.25%)</title><rect x="712" y="532" width="3" height="15" fill="rgb(238,54,52)"/><text x="715.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.25%)</title><rect x="712" y="548" width="3" height="15" fill="rgb(223,89,8)"/><text x="715.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.25%)</title><rect x="712" y="564" width="3" height="15" fill="rgb(205,102,4)"/><text x="715.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.25%)</title><rect x="712" y="580" width="3" height="15" fill="rgb(248,113,38)"/><text x="715.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.25%)</title><rect x="712" y="596" width="3" height="15" fill="rgb(216,171,0)"/><text x="715.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.25%)</title><rect x="712" y="612" width="3" height="15" fill="rgb(227,123,0)"/><text x="715.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.25%)</title><rect x="712" y="628" width="3" height="15" fill="rgb(221,39,39)"/><text x="715.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.25%)</title><rect x="712" y="644" width="3" height="15" fill="rgb(252,171,51)"/><text x="715.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py:1122) (1 samples, 0.25%)</title><rect x="712" y="660" width="3" height="15" fill="rgb(236,169,37)"/><text x="715.00" y="670.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.25%)</title><rect x="712" y="676" width="3" height="15" fill="rgb(216,225,3)"/><text x="715.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.25%)</title><rect x="712" y="692" width="3" height="15" fill="rgb(210,180,24)"/><text x="715.00" y="702.50"></text></g><g><title>visit_If (jinja2/compiler.py:1160) (1 samples, 0.25%)</title><rect x="712" y="708" width="3" height="15" fill="rgb(230,228,35)"/><text x="715.00" y="718.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.25%)</title><rect x="712" y="724" width="3" height="15" fill="rgb(225,61,8)"/><text x="715.00" y="734.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.25%)</title><rect x="712" y="740" width="3" height="15" fill="rgb(207,95,11)"/><text x="715.00" y="750.50"></text></g><g><title>visit_For (jinja2/compiler.py:1108) (1 samples, 0.25%)</title><rect x="712" y="756" width="3" height="15" fill="rgb(231,168,7)"/><text x="715.00" y="766.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.25%)</title><rect x="712" y="772" width="3" height="15" fill="rgb(243,226,2)"/><text x="715.00" y="782.50"></text></g><g><title>new_func (jinja2/compiler.py:70) (1 samples, 0.25%)</title><rect x="712" y="788" width="3" height="15" fill="rgb(229,168,53)"/><text x="715.00" y="798.50"></text></g><g><title>visit_Call (jinja2/compiler.py:1639) (1 samples, 0.25%)</title><rect x="712" y="804" width="3" height="15" fill="rgb(219,50,42)"/><text x="715.00" y="814.50"></text></g><g><title>signature (jinja2/compiler.py:426) (1 samples, 0.25%)</title><rect x="712" y="820" width="3" height="15" fill="rgb(223,206,6)"/><text x="715.00" y="830.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.25%)</title><rect x="712" y="836" width="3" height="15" fill="rgb(237,41,52)"/><text x="715.00" y="846.50"></text></g><g><title>new_func (jinja2/compiler.py:70) (1 samples, 0.25%)</title><rect x="712" y="852" width="3" height="15" fill="rgb(249,37,10)"/><text x="715.00" y="862.50"></text></g><g><title>visit_Call (jinja2/compiler.py:1637) (1 samples, 0.25%)</title><rect x="712" y="868" width="3" height="15" fill="rgb(242,144,13)"/><text x="715.00" y="878.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.25%)</title><rect x="712" y="884" width="3" height="15" fill="rgb(250,76,46)"/><text x="715.00" y="894.50"></text></g><g><title>new_func (jinja2/compiler.py:70) (1 samples, 0.25%)</title><rect x="712" y="900" width="3" height="15" fill="rgb(220,212,47)"/><text x="715.00" y="910.50"></text></g><g><title>visit_Getattr (jinja2/compiler.py:1543) (1 samples, 0.25%)</title><rect x="712" y="916" width="3" height="15" fill="rgb(241,68,11)"/><text x="715.00" y="926.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.25%)</title><rect x="712" y="932" width="3" height="15" fill="rgb(221,182,3)"/><text x="715.00" y="942.50"></text></g><g><title>new_func (jinja2/compiler.py:70) (1 samples, 0.25%)</title><rect x="712" y="948" width="3" height="15" fill="rgb(254,59,47)"/><text x="715.00" y="958.50"></text></g><g><title>visit_Getattr (jinja2/compiler.py:1543) (1 samples, 0.25%)</title><rect x="712" y="964" width="3" height="15" fill="rgb(243,90,39)"/><text x="715.00" y="974.50"></text></g><g><title>visit (jinja2/visitor.py:36) (1 samples, 0.25%)</title><rect x="712" y="980" width="3" height="15" fill="rgb(224,168,21)"/><text x="715.00" y="990.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.25%)</title><rect x="715" y="164" width="3" height="15" fill="rgb(233,87,37)"/><text x="718.00" y="174.50"></text></g><g><title>0x7f1406eab54f (?) (1 samples, 0.25%)</title><rect x="718" y="244" width="2" height="15" fill="rgb(249,121,19)"/><text x="721.00" y="254.50"></text></g><g><title>0x7f1406eb165e (?) (1 samples, 0.25%)</title><rect x="718" y="260" width="2" height="15" fill="rgb(250,115,0)"/><text x="721.00" y="270.50"></text></g><g><title>0x7f1406eb150f (?) (1 samples, 0.25%)</title><rect x="718" y="276" width="2" height="15" fill="rgb(246,73,2)"/><text x="721.00" y="286.50"></text></g><g><title>0x7f1406eb7d6c (?) (1 samples, 0.25%)</title><rect x="718" y="292" width="2" height="15" fill="rgb(241,125,43)"/><text x="721.00" y="302.50"></text></g><g><title>0x7f14103cecff (?) (1 samples, 0.25%)</title><rect x="718" y="308" width="2" height="15" fill="rgb(223,100,15)"/><text x="721.00" y="318.50"></text></g><g><title>0x7f1406e9c27c (?) (1 samples, 0.25%)</title><rect x="718" y="324" width="2" height="15" fill="rgb(212,116,30)"/><text x="721.00" y="334.50"></text></g><g><title>0x7f1406e9c095 (?) (1 samples, 0.25%)</title><rect x="718" y="340" width="2" height="15" fill="rgb(251,58,22)"/><text x="721.00" y="350.50"></text></g><g><title>0x7f14103d9ea9 (libgomp.so.1.0.0) (1 samples, 0.25%)</title><rect x="720" y="484" width="3" height="15" fill="rgb(247,95,14)"/><text x="723.00" y="494.50"></text></g><g><title>0x7f14103d8ab9 (libgomp.so.1.0.0) (2 samples, 0.50%)</title><rect x="720" y="468" width="6" height="15" fill="rgb(229,126,50)"/><text x="723.00" y="478.50"></text></g><g><title>0x7f14103d9eab (libgomp.so.1.0.0) (1 samples, 0.25%)</title><rect x="723" y="484" width="3" height="15" fill="rgb(215,222,2)"/><text x="726.00" y="494.50"></text></g><g><title>0x7f14103d7daa (libgomp.so.1.0.0) (1 samples, 0.25%)</title><rect x="726" y="484" width="3" height="15" fill="rgb(244,203,41)"/><text x="729.00" y="494.50"></text></g><g><title>0x7f14103d9cf9 (libgomp.so.1.0.0) (1 samples, 0.25%)</title><rect x="726" y="500" width="3" height="15" fill="rgb(207,135,13)"/><text x="729.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:460) (2 samples, 0.50%)</title><rect x="729" y="516" width="6" height="15" fill="rgb(234,86,7)"/><text x="732.00" y="526.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:469) (1 samples, 0.25%)</title><rect x="735" y="516" width="3" height="15" fill="rgb(205,6,28)"/><text x="738.00" y="526.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:471) (1 samples, 0.25%)</title><rect x="738" y="516" width="3" height="15" fill="rgb(208,50,14)"/><text x="741.00" y="526.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator[] (stl_vector.h:796) (1 samples, 0.25%)</title><rect x="750" y="532" width="3" height="15" fill="rgb(225,95,28)"/><text x="753.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:473) (5 samples, 1.25%)</title><rect x="741" y="516" width="15" height="15" fill="rgb(223,19,36)"/><text x="744.00" y="526.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.25%)</title><rect x="753" y="532" width="3" height="15" fill="rgb(213,57,19)"/><text x="756.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:552) (3 samples, 0.75%)</title><rect x="756" y="516" width="9" height="15" fill="rgb(205,99,24)"/><text x="759.00" y="526.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h:1309) (2 samples, 0.50%)</title><rect x="765" y="548" width="6" height="15" fill="rgb(246,222,48)"/><text x="768.00" y="558.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h:623) (2 samples, 0.50%)</title><rect x="765" y="564" width="6" height="15" fill="rgb(216,107,22)"/><text x="768.00" y="574.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h:1171) (2 samples, 0.50%)</title><rect x="765" y="580" width="6" height="15" fill="rgb(249,137,22)"/><text x="768.00" y="590.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h:446) (2 samples, 0.50%)</title><rect x="765" y="596" width="6" height="15" fill="rgb(241,93,54)"/><text x="768.00" y="606.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1413) (5 samples, 1.25%)</title><rect x="771" y="580" width="14" height="15" fill="rgb(215,199,52)"/><text x="774.00" y="590.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1417) (1 samples, 0.25%)</title><rect x="785" y="580" width="3" height="15" fill="rgb(221,4,38)"/><text x="788.00" y="590.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1420) (1 samples, 0.25%)</title><rect x="788" y="580" width="3" height="15" fill="rgb(251,187,33)"/><text x="791.00" y="590.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:554) (11 samples, 2.75%)</title><rect x="765" y="516" width="32" height="15" fill="rgb(237,153,32)"/><text x="768.00" y="526.50">Ru..</text></g><g><title>std::unordered_map&lt;long, unsigned long, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt; &gt;::find (unordered_map.h:855) (11 samples, 2.75%)</title><rect x="765" y="532" width="32" height="15" fill="rgb(243,11,53)"/><text x="768.00" y="542.50">st..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h:1310) (9 samples, 2.25%)</title><rect x="771" y="548" width="26" height="15" fill="rgb(205,194,35)"/><text x="774.00" y="558.50">s..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (hashtable.h:634) (9 samples, 2.25%)</title><rect x="771" y="564" width="26" height="15" fill="rgb(254,227,23)"/><text x="774.00" y="574.50">s..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1423) (2 samples, 0.50%)</title><rect x="791" y="580" width="6" height="15" fill="rgb(239,197,7)"/><text x="794.00" y="590.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h:619) (1 samples, 0.25%)</title><rect x="794" y="596" width="3" height="15" fill="rgb(213,91,12)"/><text x="797.00" y="606.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h:1178) (1 samples, 0.25%)</title><rect x="794" y="612" width="3" height="15" fill="rgb(248,175,12)"/><text x="797.00" y="622.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h:446) (1 samples, 0.25%)</title><rect x="794" y="628" width="3" height="15" fill="rgb(234,210,17)"/><text x="797.00" y="638.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:560) (2 samples, 0.50%)</title><rect x="797" y="516" width="6" height="15" fill="rgb(236,104,17)"/><text x="800.00" y="526.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:563) (1 samples, 0.25%)</title><rect x="803" y="516" width="3" height="15" fill="rgb(218,119,42)"/><text x="806.00" y="526.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:568) (3 samples, 0.75%)</title><rect x="806" y="516" width="9" height="15" fill="rgb(242,58,14)"/><text x="809.00" y="526.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:61) (36 samples, 9.00%)</title><rect x="712" y="52" width="106" height="15" fill="rgb(208,28,14)"/><text x="715.00" y="62.50">&lt;module&gt; (be..</text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:60) (36 samples, 9.00%)</title><rect x="712" y="68" width="106" height="15" fill="rgb(230,1,11)"/><text x="715.00" y="78.50">profile_pyrt..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:37) (35 samples, 8.75%)</title><rect x="715" y="84" width="103" height="15" fill="rgb(211,155,12)"/><text x="718.00" y="94.50">setup_profil..</text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:31) (35 samples, 8.75%)</title><rect x="715" y="100" width="103" height="15" fill="rgb(217,131,11)"/><text x="718.00" y="110.50">profile (ben..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (35 samples, 8.75%)</title><rect x="715" y="116" width="103" height="15" fill="rgb(210,12,10)"/><text x="718.00" y="126.50">time_predict..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (35 samples, 8.75%)</title><rect x="715" y="132" width="103" height="15" fill="rgb(237,132,42)"/><text x="718.00" y="142.50">&lt;lambda&gt; (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (35 samples, 8.75%)</title><rect x="715" y="148" width="103" height="15" fill="rgb(242,159,53)"/><text x="718.00" y="158.50">run (mlprodi..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (34 samples, 8.50%)</title><rect x="718" y="164" width="100" height="15" fill="rgb(208,14,2)"/><text x="721.00" y="174.50">_run_sequenc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (34 samples, 8.50%)</title><rect x="718" y="180" width="100" height="15" fill="rgb(227,161,22)"/><text x="721.00" y="190.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (34 samples, 8.50%)</title><rect x="718" y="196" width="100" height="15" fill="rgb(229,188,36)"/><text x="721.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (34 samples, 8.50%)</title><rect x="718" y="212" width="100" height="15" fill="rgb(245,92,11)"/><text x="721.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (34 samples, 8.50%)</title><rect x="718" y="228" width="100" height="15" fill="rgb(254,27,5)"/><text x="721.00" y="238.50">_run (mlprod..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (33 samples, 8.25%)</title><rect x="720" y="244" width="98" height="15" fill="rgb(246,38,31)"/><text x="723.00" y="254.50">pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (33 samples, 8.25%)</title><rect x="720" y="260" width="98" height="15" fill="rgb(224,175,1)"/><text x="723.00" y="270.50">void pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (33 samples, 8.25%)</title><rect x="720" y="276" width="98" height="15" fill="rgb(208,57,29)"/><text x="723.00" y="286.50">void pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (33 samples, 8.25%)</title><rect x="720" y="292" width="98" height="15" fill="rgb(227,7,45)"/><text x="723.00" y="302.50">pybind11::d..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (33 samples, 8.25%)</title><rect x="720" y="308" width="98" height="15" fill="rgb(221,190,35)"/><text x="723.00" y="318.50">pybind11::d..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (33 samples, 8.25%)</title><rect x="720" y="324" width="98" height="15" fill="rgb(238,219,0)"/><text x="723.00" y="334.50">pybind11::c..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (33 samples, 8.25%)</title><rect x="720" y="340" width="98" height="15" fill="rgb(213,201,7)"/><text x="723.00" y="350.50">pybind11::a..</text></g><g><title>pybind11::array::~array (numpy.h:538) (33 samples, 8.25%)</title><rect x="720" y="356" width="98" height="15" fill="rgb(217,44,52)"/><text x="723.00" y="366.50">pybind11::a..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (33 samples, 8.25%)</title><rect x="720" y="372" width="98" height="15" fill="rgb(245,118,15)"/><text x="723.00" y="382.50">pybind11::b..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (33 samples, 8.25%)</title><rect x="720" y="388" width="98" height="15" fill="rgb(215,51,2)"/><text x="723.00" y="398.50">pybind11::o..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (33 samples, 8.25%)</title><rect x="720" y="404" width="98" height="15" fill="rgb(227,61,29)"/><text x="723.00" y="414.50">pybind11::h..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (33 samples, 8.25%)</title><rect x="720" y="420" width="98" height="15" fill="rgb(251,199,17)"/><text x="723.00" y="430.50">RuntimeTree..</text></g><g><title>pybind11::array::size (numpy.h:619) (33 samples, 8.25%)</title><rect x="720" y="436" width="98" height="15" fill="rgb(205,150,32)"/><text x="723.00" y="446.50">pybind11::a..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (33 samples, 8.25%)</title><rect x="720" y="452" width="98" height="15" fill="rgb(207,78,11)"/><text x="723.00" y="462.50">std::accumu..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (31 samples, 7.75%)</title><rect x="726" y="468" width="92" height="15" fill="rgb(239,48,23)"/><text x="729.00" y="478.50">GOMP_paral..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:371) (30 samples, 7.50%)</title><rect x="729" y="484" width="89" height="15" fill="rgb(244,220,22)"/><text x="732.00" y="494.50">RuntimeTre..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (30 samples, 7.50%)</title><rect x="729" y="500" width="89" height="15" fill="rgb(205,61,22)"/><text x="732.00" y="510.50">std::vecto..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:569) (1 samples, 0.25%)</title><rect x="815" y="516" width="3" height="15" fill="rgb(224,153,34)"/><text x="818.00" y="526.50"></text></g><g><title>0x7f1406450ff9 (?) (1 samples, 0.25%)</title><rect x="821" y="212" width="3" height="15" fill="rgb(250,69,19)"/><text x="824.00" y="222.50"></text></g><g><title>0x7f140644bef6 (?) (1 samples, 0.25%)</title><rect x="821" y="228" width="3" height="15" fill="rgb(224,149,7)"/><text x="824.00" y="238.50"></text></g><g><title>0x7f1406440962 (?) (1 samples, 0.25%)</title><rect x="821" y="244" width="3" height="15" fill="rgb(225,186,48)"/><text x="824.00" y="254.50"></text></g><g><title>0x7f14064747a7 (?) (1 samples, 0.25%)</title><rect x="821" y="260" width="3" height="15" fill="rgb(209,153,12)"/><text x="824.00" y="270.50"></text></g><g><title>0x7f1406474379 (?) (1 samples, 0.25%)</title><rect x="821" y="276" width="3" height="15" fill="rgb(230,138,28)"/><text x="824.00" y="286.50"></text></g><g><title>0x7f14068d28b8 (?) (1 samples, 0.25%)</title><rect x="821" y="292" width="3" height="15" fill="rgb(214,147,36)"/><text x="824.00" y="302.50"></text></g><g><title>0x7f14068d0c7f (?) (1 samples, 0.25%)</title><rect x="821" y="308" width="3" height="15" fill="rgb(208,183,52)"/><text x="824.00" y="318.50"></text></g><g><title>0x7f14068e399c (?) (1 samples, 0.25%)</title><rect x="821" y="324" width="3" height="15" fill="rgb(207,124,46)"/><text x="824.00" y="334.50"></text></g><g><title>0x7f140660adc2 (?) (1 samples, 0.25%)</title><rect x="821" y="340" width="3" height="15" fill="rgb(225,196,49)"/><text x="824.00" y="350.50"></text></g><g><title>0x7f140660a563 (?) (1 samples, 0.25%)</title><rect x="821" y="356" width="3" height="15" fill="rgb(250,98,30)"/><text x="824.00" y="366.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (119 samples, 29.75%)</title><rect x="833" y="356" width="351" height="15" fill="rgb(211,214,19)"/><text x="836.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1181" y="372" width="3" height="15" fill="rgb(239,110,49)"/><text x="1184.00" y="382.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1181" y="388" width="3" height="15" fill="rgb(241,31,25)"/><text x="1184.00" y="398.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1181" y="404" width="3" height="15" fill="rgb(218,138,50)"/><text x="1184.00" y="414.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (122 samples, 30.50%)</title><rect x="827" y="260" width="360" height="15" fill="rgb(222,153,17)"/><text x="830.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (122 samples, 30.50%)</title><rect x="827" y="276" width="360" height="15" fill="rgb(251,110,20)"/><text x="830.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (122 samples, 30.50%)</title><rect x="827" y="292" width="360" height="15" fill="rgb(246,217,54)"/><text x="830.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/ca..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (122 samples, 30.50%)</title><rect x="827" y="308" width="360" height="15" fill="rgb(231,174,42)"/><text x="830.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntim..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (122 samples, 30.50%)</title><rect x="827" y="324" width="360" height="15" fill="rgb(238,33,2)"/><text x="830.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxru..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (122 samples, 30.50%)</title><rect x="827" y="340" width="360" height="15" fill="rgb(249,103,43)"/><text x="830.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::C..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1184" y="356" width="3" height="15" fill="rgb(242,210,10)"/><text x="1187.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.25%)</title><rect x="1184" y="372" width="3" height="15" fill="rgb(253,98,30)"/><text x="1187.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1184" y="388" width="3" height="15" fill="rgb(243,57,44)"/><text x="1187.00" y="398.50"></text></g><g><title>all (400 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(229,201,46)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:68) (126 samples, 31.50%)</title><rect x="818" y="52" width="372" height="15" fill="rgb(232,126,43)"/><text x="821.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_b_re..</text></g><g><title>profile_ort (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:67) (126 samples, 31.50%)</title><rect x="818" y="68" width="372" height="15" fill="rgb(247,210,13)"/><text x="821.00" y="78.50">profile_ort (bench_RandomForestRegressor_default_b..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:37) (126 samples, 31.50%)</title><rect x="818" y="84" width="372" height="15" fill="rgb(234,137,34)"/><text x="821.00" y="94.50">setup_profile (bench_RandomForestRegressor_default..</text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:31) (126 samples, 31.50%)</title><rect x="818" y="100" width="372" height="15" fill="rgb(220,174,4)"/><text x="821.00" y="110.50">profile (bench_RandomForestRegressor_default_b_reg..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (125 samples, 31.25%)</title><rect x="821" y="116" width="369" height="15" fill="rgb(213,105,21)"/><text x="824.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (125 samples, 31.25%)</title><rect x="821" y="132" width="369" height="15" fill="rgb(254,82,39)"/><text x="824.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (125 samples, 31.25%)</title><rect x="821" y="148" width="369" height="15" fill="rgb(254,186,4)"/><text x="824.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (125 samples, 31.25%)</title><rect x="821" y="164" width="369" height="15" fill="rgb(233,21,42)"/><text x="824.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (125 samples, 31.25%)</title><rect x="821" y="180" width="369" height="15" fill="rgb(226,22,33)"/><text x="824.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (125 samples, 31.25%)</title><rect x="821" y="196" width="369" height="15" fill="rgb(244,148,14)"/><text x="824.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (124 samples, 31.00%)</title><rect x="824" y="212" width="366" height="15" fill="rgb(218,204,49)"/><text x="827.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (124 samples, 31.00%)</title><rect x="824" y="228" width="366" height="15" fill="rgb(207,218,50)"/><text x="827.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxrunti..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (124 samples, 31.00%)</title><rect x="824" y="244" width="366" height="15" fill="rgb(210,6,49)"/><text x="827.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::m..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1187" y="260" width="3" height="15" fill="rgb(246,185,53)"/><text x="1190.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1187" y="276" width="3" height="15" fill="rgb(218,175,19)"/><text x="1190.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1187" y="292" width="3" height="15" fill="rgb(238,34,45)"/><text x="1190.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1187" y="308" width="3" height="15" fill="rgb(245,10,20)"/><text x="1190.00" y="318.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1187" y="324" width="3" height="15" fill="rgb(220,210,13)"/><text x="1190.00" y="334.50"></text></g></g></svg>