<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2054" onload="init(evt)" viewBox="0 0 1200 2054" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2054" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2037.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2037.00"> </text><g id="frames"><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.30%)</title><rect x="10" y="244" width="3" height="15" fill="rgb(225,0,29)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="10" y="260" width="3" height="15" fill="rgb(210,114,33)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="10" y="276" width="3" height="15" fill="rgb(224,41,29)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="10" y="292" width="3" height="15" fill="rgb(243,29,34)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="10" y="308" width="3" height="15" fill="rgb(243,114,34)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="10" y="324" width="3" height="15" fill="rgb(235,53,54)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="10" y="340" width="3" height="15" fill="rgb(253,115,10)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="10" y="356" width="3" height="15" fill="rgb(243,148,12)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:22) (1 samples, 0.30%)</title><rect x="10" y="372" width="3" height="15" fill="rgb(212,111,10)"/><text x="13.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="10" y="388" width="3" height="15" fill="rgb(220,34,2)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="10" y="404" width="3" height="15" fill="rgb(209,93,36)"/><text x="13.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="10" y="420" width="3" height="15" fill="rgb(239,40,43)"/><text x="13.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.30%)</title><rect x="10" y="436" width="3" height="15" fill="rgb(217,226,4)"/><text x="13.00" y="446.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.30%)</title><rect x="10" y="452" width="3" height="15" fill="rgb(208,174,6)"/><text x="13.00" y="462.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.30%)</title><rect x="10" y="468" width="3" height="15" fill="rgb(237,217,51)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:1) (2 samples, 0.59%)</title><rect x="10" y="148" width="6" height="15" fill="rgb(206,95,28)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="10" y="164" width="6" height="15" fill="rgb(234,222,46)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="10" y="180" width="6" height="15" fill="rgb(230,155,27)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="10" y="196" width="6" height="15" fill="rgb(251,34,3)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="10" y="212" width="6" height="15" fill="rgb(229,167,38)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="10" y="228" width="6" height="15" fill="rgb(221,3,48)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:149) (1 samples, 0.30%)</title><rect x="13" y="244" width="3" height="15" fill="rgb(235,64,30)"/><text x="16.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="13" y="260" width="3" height="15" fill="rgb(208,99,30)"/><text x="16.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="13" y="276" width="3" height="15" fill="rgb(227,41,6)"/><text x="16.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="13" y="292" width="3" height="15" fill="rgb(249,93,3)"/><text x="16.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="13" y="308" width="3" height="15" fill="rgb(207,68,18)"/><text x="16.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="13" y="324" width="3" height="15" fill="rgb(236,175,27)"/><text x="16.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="13" y="340" width="3" height="15" fill="rgb(231,102,13)"/><text x="16.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="13" y="356" width="3" height="15" fill="rgb(227,219,16)"/><text x="16.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/__init__.py:19) (1 samples, 0.30%)</title><rect x="13" y="372" width="3" height="15" fill="rgb(250,217,23)"/><text x="16.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="13" y="388" width="3" height="15" fill="rgb(227,173,25)"/><text x="16.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="13" y="404" width="3" height="15" fill="rgb(244,199,30)"/><text x="16.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="13" y="420" width="3" height="15" fill="rgb(242,8,2)"/><text x="16.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="13" y="436" width="3" height="15" fill="rgb(220,214,32)"/><text x="16.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="13" y="452" width="3" height="15" fill="rgb(220,19,0)"/><text x="16.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/chebyshev.py:1966) (1 samples, 0.30%)</title><rect x="13" y="468" width="3" height="15" fill="rgb(230,114,51)"/><text x="16.00" y="478.50"></text></g><g><title>Chebyshev (numpy/polynomial/chebyshev.py:1990) (1 samples, 0.30%)</title><rect x="13" y="484" width="3" height="15" fill="rgb(213,65,23)"/><text x="16.00" y="494.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.30%)</title><rect x="16" y="964" width="4" height="15" fill="rgb(229,119,47)"/><text x="19.00" y="974.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.59%)</title><rect x="16" y="932" width="7" height="15" fill="rgb(249,55,6)"/><text x="19.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.59%)</title><rect x="16" y="948" width="7" height="15" fill="rgb(217,65,47)"/><text x="19.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1393) (1 samples, 0.30%)</title><rect x="20" y="964" width="3" height="15" fill="rgb(235,93,9)"/><text x="23.00" y="974.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 0.89%)</title><rect x="16" y="820" width="11" height="15" fill="rgb(236,115,10)"/><text x="19.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 0.89%)</title><rect x="16" y="836" width="11" height="15" fill="rgb(218,0,23)"/><text x="19.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (3 samples, 0.89%)</title><rect x="16" y="852" width="11" height="15" fill="rgb(248,196,41)"/><text x="19.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (3 samples, 0.89%)</title><rect x="16" y="868" width="11" height="15" fill="rgb(248,214,21)"/><text x="19.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (3 samples, 0.89%)</title><rect x="16" y="884" width="11" height="15" fill="rgb(219,191,13)"/><text x="19.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (3 samples, 0.89%)</title><rect x="16" y="900" width="11" height="15" fill="rgb(244,65,35)"/><text x="19.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (3 samples, 0.89%)</title><rect x="16" y="916" width="11" height="15" fill="rgb(209,98,41)"/><text x="19.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:434) (1 samples, 0.30%)</title><rect x="23" y="932" width="4" height="15" fill="rgb(208,17,18)"/><text x="26.00" y="942.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:2) (4 samples, 1.18%)</title><rect x="16" y="148" width="14" height="15" fill="rgb(229,45,8)"/><text x="19.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.18%)</title><rect x="16" y="164" width="14" height="15" fill="rgb(229,78,33)"/><text x="19.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.18%)</title><rect x="16" y="180" width="14" height="15" fill="rgb(213,185,32)"/><text x="19.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.18%)</title><rect x="16" y="196" width="14" height="15" fill="rgb(253,208,25)"/><text x="19.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.18%)</title><rect x="16" y="212" width="14" height="15" fill="rgb(232,113,36)"/><text x="19.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.18%)</title><rect x="16" y="228" width="14" height="15" fill="rgb(243,88,9)"/><text x="19.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.18%)</title><rect x="16" y="244" width="14" height="15" fill="rgb(238,118,27)"/><text x="19.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.18%)</title><rect x="16" y="260" width="14" height="15" fill="rgb(225,78,47)"/><text x="19.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.18%)</title><rect x="16" y="276" width="14" height="15" fill="rgb(210,105,6)"/><text x="19.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.18%)</title><rect x="16" y="292" width="14" height="15" fill="rgb(243,123,38)"/><text x="19.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.18%)</title><rect x="16" y="308" width="14" height="15" fill="rgb(254,41,10)"/><text x="19.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.18%)</title><rect x="16" y="324" width="14" height="15" fill="rgb(215,172,32)"/><text x="19.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.18%)</title><rect x="16" y="340" width="14" height="15" fill="rgb(208,18,18)"/><text x="19.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.18%)</title><rect x="16" y="356" width="14" height="15" fill="rgb(205,44,49)"/><text x="19.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.18%)</title><rect x="16" y="372" width="14" height="15" fill="rgb(247,164,18)"/><text x="19.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.18%)</title><rect x="16" y="388" width="14" height="15" fill="rgb(240,125,11)"/><text x="19.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.18%)</title><rect x="16" y="404" width="14" height="15" fill="rgb(215,187,50)"/><text x="19.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.18%)</title><rect x="16" y="420" width="14" height="15" fill="rgb(214,192,23)"/><text x="19.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.18%)</title><rect x="16" y="436" width="14" height="15" fill="rgb(253,20,44)"/><text x="19.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.18%)</title><rect x="16" y="452" width="14" height="15" fill="rgb(251,221,21)"/><text x="19.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.18%)</title><rect x="16" y="468" width="14" height="15" fill="rgb(207,115,8)"/><text x="19.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.18%)</title><rect x="16" y="484" width="14" height="15" fill="rgb(254,101,7)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.18%)</title><rect x="16" y="500" width="14" height="15" fill="rgb(244,181,35)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.18%)</title><rect x="16" y="516" width="14" height="15" fill="rgb(213,184,15)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.18%)</title><rect x="16" y="532" width="14" height="15" fill="rgb(250,134,5)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.18%)</title><rect x="16" y="548" width="14" height="15" fill="rgb(239,166,23)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.18%)</title><rect x="16" y="564" width="14" height="15" fill="rgb(240,187,20)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.18%)</title><rect x="16" y="580" width="14" height="15" fill="rgb(222,172,18)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.18%)</title><rect x="16" y="596" width="14" height="15" fill="rgb(221,200,27)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.18%)</title><rect x="16" y="612" width="14" height="15" fill="rgb(239,204,17)"/><text x="19.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.18%)</title><rect x="16" y="628" width="14" height="15" fill="rgb(235,17,38)"/><text x="19.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.18%)</title><rect x="16" y="644" width="14" height="15" fill="rgb(247,204,37)"/><text x="19.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.18%)</title><rect x="16" y="660" width="14" height="15" fill="rgb(205,79,40)"/><text x="19.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.18%)</title><rect x="16" y="676" width="14" height="15" fill="rgb(218,2,24)"/><text x="19.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.18%)</title><rect x="16" y="692" width="14" height="15" fill="rgb(222,158,25)"/><text x="19.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.18%)</title><rect x="16" y="708" width="14" height="15" fill="rgb(210,5,18)"/><text x="19.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.18%)</title><rect x="16" y="724" width="14" height="15" fill="rgb(232,91,4)"/><text x="19.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.18%)</title><rect x="16" y="740" width="14" height="15" fill="rgb(215,184,52)"/><text x="19.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.18%)</title><rect x="16" y="756" width="14" height="15" fill="rgb(243,183,43)"/><text x="19.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.18%)</title><rect x="16" y="772" width="14" height="15" fill="rgb(221,168,49)"/><text x="19.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.18%)</title><rect x="16" y="788" width="14" height="15" fill="rgb(238,88,54)"/><text x="19.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.18%)</title><rect x="16" y="804" width="14" height="15" fill="rgb(229,180,42)"/><text x="19.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:36) (1 samples, 0.30%)</title><rect x="27" y="820" width="3" height="15" fill="rgb(216,112,44)"/><text x="30.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="27" y="836" width="3" height="15" fill="rgb(243,76,38)"/><text x="30.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="27" y="852" width="3" height="15" fill="rgb(236,136,36)"/><text x="30.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="27" y="868" width="3" height="15" fill="rgb(230,147,14)"/><text x="30.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="27" y="884" width="3" height="15" fill="rgb(247,25,16)"/><text x="30.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="27" y="900" width="3" height="15" fill="rgb(232,203,0)"/><text x="30.00" y="910.50"></text></g><g><title>&lt;module&gt; (email/parser.py:12) (1 samples, 0.30%)</title><rect x="27" y="916" width="3" height="15" fill="rgb(252,187,1)"/><text x="30.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="27" y="932" width="3" height="15" fill="rgb(238,104,54)"/><text x="30.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="27" y="948" width="3" height="15" fill="rgb(221,63,23)"/><text x="30.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="27" y="964" width="3" height="15" fill="rgb(251,106,52)"/><text x="30.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="27" y="980" width="3" height="15" fill="rgb(214,222,14)"/><text x="30.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="27" y="996" width="3" height="15" fill="rgb(215,186,0)"/><text x="30.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py:27) (1 samples, 0.30%)</title><rect x="27" y="1012" width="3" height="15" fill="rgb(245,76,16)"/><text x="30.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="27" y="1028" width="3" height="15" fill="rgb(233,192,0)"/><text x="30.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="27" y="1044" width="3" height="15" fill="rgb(207,28,48)"/><text x="30.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="27" y="1060" width="3" height="15" fill="rgb(212,24,27)"/><text x="30.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="27" y="1076" width="3" height="15" fill="rgb(236,72,31)"/><text x="30.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="27" y="1092" width="3" height="15" fill="rgb(248,189,32)"/><text x="30.00" y="1102.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py:9) (1 samples, 0.30%)</title><rect x="27" y="1108" width="3" height="15" fill="rgb(215,41,9)"/><text x="30.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="27" y="1124" width="3" height="15" fill="rgb(231,159,41)"/><text x="30.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="27" y="1140" width="3" height="15" fill="rgb(247,187,36)"/><text x="30.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="27" y="1156" width="3" height="15" fill="rgb(218,207,45)"/><text x="30.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="27" y="1172" width="3" height="15" fill="rgb(252,23,39)"/><text x="30.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="27" y="1188" width="3" height="15" fill="rgb(221,167,22)"/><text x="30.00" y="1198.50"></text></g><g><title>&lt;module&gt; (email/utils.py:29) (1 samples, 0.30%)</title><rect x="27" y="1204" width="3" height="15" fill="rgb(233,202,22)"/><text x="30.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="27" y="1220" width="3" height="15" fill="rgb(229,228,16)"/><text x="30.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="27" y="1236" width="3" height="15" fill="rgb(249,67,35)"/><text x="30.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="27" y="1252" width="3" height="15" fill="rgb(236,23,1)"/><text x="30.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="27" y="1268" width="3" height="15" fill="rgb(253,114,3)"/><text x="30.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="27" y="1284" width="3" height="15" fill="rgb(214,162,13)"/><text x="30.00" y="1294.50"></text></g><g><title>&lt;module&gt; (socket.py:81) (1 samples, 0.30%)</title><rect x="27" y="1300" width="3" height="15" fill="rgb(247,162,24)"/><text x="30.00" y="1310.50"></text></g><g><title>_convert (enum.py:660) (1 samples, 0.30%)</title><rect x="27" y="1316" width="3" height="15" fill="rgb(215,227,33)"/><text x="30.00" y="1326.50"></text></g><g><title>__call__ (enum.py:311) (1 samples, 0.30%)</title><rect x="27" y="1332" width="3" height="15" fill="rgb(230,186,10)"/><text x="30.00" y="1342.50"></text></g><g><title>_create_ (enum.py:423) (1 samples, 0.30%)</title><rect x="27" y="1348" width="3" height="15" fill="rgb(221,156,1)"/><text x="30.00" y="1358.50"></text></g><g><title>__new__ (enum.py:169) (1 samples, 0.30%)</title><rect x="27" y="1364" width="3" height="15" fill="rgb(220,142,0)"/><text x="30.00" y="1374.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:4) (1 samples, 0.30%)</title><rect x="30" y="148" width="4" height="15" fill="rgb(253,148,49)"/><text x="33.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="30" y="164" width="4" height="15" fill="rgb(205,19,14)"/><text x="33.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="30" y="180" width="4" height="15" fill="rgb(206,4,21)"/><text x="33.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="30" y="196" width="4" height="15" fill="rgb(226,20,32)"/><text x="33.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="30" y="212" width="4" height="15" fill="rgb(235,66,53)"/><text x="33.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="30" y="228" width="4" height="15" fill="rgb(252,175,50)"/><text x="33.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:7) (1 samples, 0.30%)</title><rect x="30" y="244" width="4" height="15" fill="rgb(229,128,47)"/><text x="33.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="30" y="260" width="4" height="15" fill="rgb(237,74,23)"/><text x="33.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="30" y="276" width="4" height="15" fill="rgb(241,74,14)"/><text x="33.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="30" y="292" width="4" height="15" fill="rgb(215,141,31)"/><text x="33.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="30" y="308" width="4" height="15" fill="rgb(232,184,6)"/><text x="33.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="30" y="324" width="4" height="15" fill="rgb(210,2,2)"/><text x="33.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py:458) (1 samples, 0.30%)</title><rect x="30" y="340" width="4" height="15" fill="rgb(227,216,44)"/><text x="33.00" y="350.50"></text></g><g><title>ForestClassifier (sklearn/ensemble/_forest.py:478) (1 samples, 0.30%)</title><rect x="30" y="356" width="4" height="15" fill="rgb(253,218,32)"/><text x="33.00" y="366.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.30%)</title><rect x="34" y="244" width="3" height="15" fill="rgb(240,83,9)"/><text x="37.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="34" y="260" width="3" height="15" fill="rgb(233,134,49)"/><text x="37.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="34" y="276" width="3" height="15" fill="rgb(235,184,18)"/><text x="37.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="34" y="292" width="3" height="15" fill="rgb(235,89,54)"/><text x="37.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="34" y="308" width="3" height="15" fill="rgb(248,217,47)"/><text x="37.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="34" y="324" width="3" height="15" fill="rgb(216,157,22)"/><text x="37.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.30%)</title><rect x="34" y="340" width="3" height="15" fill="rgb(251,157,43)"/><text x="37.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="34" y="356" width="3" height="15" fill="rgb(251,120,31)"/><text x="37.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.30%)</title><rect x="34" y="372" width="3" height="15" fill="rgb(205,6,13)"/><text x="37.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="34" y="388" width="3" height="15" fill="rgb(232,87,17)"/><text x="37.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="34" y="404" width="3" height="15" fill="rgb(244,16,29)"/><text x="37.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="34" y="420" width="3" height="15" fill="rgb(226,116,39)"/><text x="37.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="34" y="436" width="3" height="15" fill="rgb(237,107,24)"/><text x="37.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="34" y="452" width="3" height="15" fill="rgb(245,2,54)"/><text x="37.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="34" y="468" width="3" height="15" fill="rgb(251,131,27)"/><text x="37.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.30%)</title><rect x="34" y="484" width="3" height="15" fill="rgb(221,89,1)"/><text x="37.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="34" y="500" width="3" height="15" fill="rgb(245,192,25)"/><text x="37.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="34" y="516" width="3" height="15" fill="rgb(253,157,17)"/><text x="37.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="34" y="532" width="3" height="15" fill="rgb(248,57,14)"/><text x="37.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="34" y="548" width="3" height="15" fill="rgb(226,42,19)"/><text x="37.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="34" y="564" width="3" height="15" fill="rgb(230,20,9)"/><text x="37.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.30%)</title><rect x="34" y="580" width="3" height="15" fill="rgb(207,14,50)"/><text x="37.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="34" y="596" width="3" height="15" fill="rgb(229,150,33)"/><text x="37.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="34" y="612" width="3" height="15" fill="rgb(215,208,47)"/><text x="37.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="34" y="628" width="3" height="15" fill="rgb(229,59,54)"/><text x="37.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="34" y="644" width="3" height="15" fill="rgb(238,91,34)"/><text x="37.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="34" y="660" width="3" height="15" fill="rgb(249,196,13)"/><text x="37.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.30%)</title><rect x="34" y="676" width="3" height="15" fill="rgb(234,207,16)"/><text x="37.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="34" y="692" width="3" height="15" fill="rgb(216,165,51)"/><text x="37.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="34" y="708" width="3" height="15" fill="rgb(222,58,54)"/><text x="37.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="34" y="724" width="3" height="15" fill="rgb(218,172,35)"/><text x="37.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="34" y="740" width="3" height="15" fill="rgb(239,61,42)"/><text x="37.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="34" y="756" width="3" height="15" fill="rgb(222,221,26)"/><text x="37.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.30%)</title><rect x="34" y="772" width="3" height="15" fill="rgb(252,157,9)"/><text x="37.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="34" y="788" width="3" height="15" fill="rgb(242,166,40)"/><text x="37.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="34" y="804" width="3" height="15" fill="rgb(240,117,8)"/><text x="37.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="34" y="820" width="3" height="15" fill="rgb(243,116,53)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="34" y="836" width="3" height="15" fill="rgb(248,7,0)"/><text x="37.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="34" y="852" width="3" height="15" fill="rgb(213,125,45)"/><text x="37.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="34" y="868" width="3" height="15" fill="rgb(212,87,54)"/><text x="37.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="34" y="884" width="3" height="15" fill="rgb(214,30,14)"/><text x="37.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.30%)</title><rect x="34" y="900" width="3" height="15" fill="rgb(235,85,18)"/><text x="37.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="34" y="916" width="3" height="15" fill="rgb(222,118,17)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="34" y="932" width="3" height="15" fill="rgb(250,1,18)"/><text x="37.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="34" y="948" width="3" height="15" fill="rgb(251,191,38)"/><text x="37.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="34" y="964" width="3" height="15" fill="rgb(209,167,26)"/><text x="37.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="34" y="980" width="3" height="15" fill="rgb(233,191,37)"/><text x="37.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.30%)</title><rect x="34" y="996" width="3" height="15" fill="rgb(222,165,0)"/><text x="37.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="34" y="1012" width="3" height="15" fill="rgb(209,82,17)"/><text x="37.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="34" y="1028" width="3" height="15" fill="rgb(226,27,26)"/><text x="37.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="34" y="1044" width="3" height="15" fill="rgb(206,98,38)"/><text x="37.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="34" y="1060" width="3" height="15" fill="rgb(250,164,23)"/><text x="37.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="34" y="1076" width="3" height="15" fill="rgb(214,76,26)"/><text x="37.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:62) (1 samples, 0.30%)</title><rect x="34" y="1092" width="3" height="15" fill="rgb(234,227,28)"/><text x="37.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="34" y="1108" width="3" height="15" fill="rgb(253,11,32)"/><text x="37.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.30%)</title><rect x="34" y="1124" width="3" height="15" fill="rgb(223,50,32)"/><text x="37.00" y="1134.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.30%)</title><rect x="34" y="1140" width="3" height="15" fill="rgb(222,189,24)"/><text x="37.00" y="1150.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.30%)</title><rect x="34" y="1156" width="3" height="15" fill="rgb(221,71,45)"/><text x="37.00" y="1166.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.30%)</title><rect x="34" y="1172" width="3" height="15" fill="rgb(205,104,31)"/><text x="37.00" y="1182.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1394) (1 samples, 0.30%)</title><rect x="34" y="1188" width="3" height="15" fill="rgb(224,47,17)"/><text x="37.00" y="1198.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.30%)</title><rect x="34" y="1204" width="3" height="15" fill="rgb(207,199,51)"/><text x="37.00" y="1214.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.30%)</title><rect x="34" y="1220" width="3" height="15" fill="rgb(228,106,5)"/><text x="37.00" y="1230.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.30%)</title><rect x="34" y="1236" width="3" height="15" fill="rgb(205,60,30)"/><text x="37.00" y="1246.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.30%)</title><rect x="34" y="1252" width="3" height="15" fill="rgb(212,141,12)"/><text x="37.00" y="1262.50"></text></g><g><title>0x7fbc310d240e (?) (1 samples, 0.30%)</title><rect x="37" y="916" width="4" height="15" fill="rgb(225,178,8)"/><text x="40.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="37" y="932" width="4" height="15" fill="rgb(246,138,17)"/><text x="40.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="37" y="948" width="4" height="15" fill="rgb(247,140,1)"/><text x="40.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="37" y="964" width="4" height="15" fill="rgb(238,134,46)"/><text x="40.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.30%)</title><rect x="37" y="980" width="4" height="15" fill="rgb(229,0,26)"/><text x="40.00" y="990.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (2 samples, 0.59%)</title><rect x="37" y="628" width="7" height="15" fill="rgb(253,154,38)"/><text x="40.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="37" y="644" width="7" height="15" fill="rgb(234,31,52)"/><text x="40.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="37" y="660" width="7" height="15" fill="rgb(212,105,41)"/><text x="40.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="37" y="676" width="7" height="15" fill="rgb(221,88,9)"/><text x="40.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="37" y="692" width="7" height="15" fill="rgb(232,85,48)"/><text x="40.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="37" y="708" width="7" height="15" fill="rgb(244,163,4)"/><text x="40.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (2 samples, 0.59%)</title><rect x="37" y="724" width="7" height="15" fill="rgb(224,197,49)"/><text x="40.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="37" y="740" width="7" height="15" fill="rgb(224,223,42)"/><text x="40.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="37" y="756" width="7" height="15" fill="rgb(243,211,51)"/><text x="40.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="37" y="772" width="7" height="15" fill="rgb(227,194,47)"/><text x="40.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="37" y="788" width="7" height="15" fill="rgb(214,50,10)"/><text x="40.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="37" y="804" width="7" height="15" fill="rgb(208,63,2)"/><text x="40.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (2 samples, 0.59%)</title><rect x="37" y="820" width="7" height="15" fill="rgb(234,37,6)"/><text x="40.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="37" y="836" width="7" height="15" fill="rgb(239,90,0)"/><text x="40.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="37" y="852" width="7" height="15" fill="rgb(227,68,7)"/><text x="40.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="37" y="868" width="7" height="15" fill="rgb(217,151,33)"/><text x="40.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (2 samples, 0.59%)</title><rect x="37" y="884" width="7" height="15" fill="rgb(253,210,45)"/><text x="40.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="37" y="900" width="7" height="15" fill="rgb(215,184,51)"/><text x="40.00" y="910.50"></text></g><g><title>0x7fbc310d240e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="41" y="916" width="3" height="15" fill="rgb(226,166,0)"/><text x="44.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="41" y="932" width="3" height="15" fill="rgb(209,225,44)"/><text x="44.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="41" y="948" width="3" height="15" fill="rgb(238,12,25)"/><text x="44.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="41" y="964" width="3" height="15" fill="rgb(224,105,22)"/><text x="44.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.30%)</title><rect x="41" y="980" width="3" height="15" fill="rgb(221,100,19)"/><text x="44.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="41" y="996" width="3" height="15" fill="rgb(220,32,0)"/><text x="44.00" y="1006.50"></text></g><g><title>0x7fbc30e8bcd2 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="41" y="1012" width="3" height="15" fill="rgb(207,58,21)"/><text x="44.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="41" y="1028" width="3" height="15" fill="rgb(224,182,2)"/><text x="44.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="41" y="1044" width="3" height="15" fill="rgb(206,30,39)"/><text x="44.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="41" y="1060" width="3" height="15" fill="rgb(253,126,30)"/><text x="44.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.30%)</title><rect x="41" y="1076" width="3" height="15" fill="rgb(253,191,41)"/><text x="44.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="41" y="1092" width="3" height="15" fill="rgb(253,26,13)"/><text x="44.00" y="1102.50"></text></g><g><title>0x7fbc305810e5 (pandas/_libs/tslibs/tzconversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="41" y="1108" width="3" height="15" fill="rgb(216,200,40)"/><text x="44.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="41" y="1124" width="3" height="15" fill="rgb(220,218,38)"/><text x="44.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="41" y="1140" width="3" height="15" fill="rgb(235,50,33)"/><text x="44.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="41" y="1156" width="3" height="15" fill="rgb(236,84,40)"/><text x="44.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.30%)</title><rect x="41" y="1172" width="3" height="15" fill="rgb(214,2,28)"/><text x="44.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="41" y="1188" width="3" height="15" fill="rgb(234,149,6)"/><text x="44.00" y="1198.50"></text></g><g><title>0x7fbc30305e68 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="41" y="1204" width="3" height="15" fill="rgb(253,210,32)"/><text x="44.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="41" y="1220" width="3" height="15" fill="rgb(236,54,18)"/><text x="44.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="41" y="1236" width="3" height="15" fill="rgb(214,201,33)"/><text x="44.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="41" y="1252" width="3" height="15" fill="rgb(229,123,11)"/><text x="44.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.30%)</title><rect x="41" y="1268" width="3" height="15" fill="rgb(210,78,39)"/><text x="44.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="41" y="1284" width="3" height="15" fill="rgb(215,161,46)"/><text x="44.00" y="1294.50"></text></g><g><title>0x7fbc300962fb (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="41" y="1300" width="3" height="15" fill="rgb(221,209,52)"/><text x="44.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="41" y="1316" width="3" height="15" fill="rgb(232,211,29)"/><text x="44.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="41" y="1332" width="3" height="15" fill="rgb(220,18,54)"/><text x="44.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="41" y="1348" width="3" height="15" fill="rgb(238,38,5)"/><text x="44.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.30%)</title><rect x="41" y="1364" width="3" height="15" fill="rgb(254,52,11)"/><text x="44.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="41" y="1380" width="3" height="15" fill="rgb(225,105,12)"/><text x="44.00" y="1390.50"></text></g><g><title>0x7fbc2fe7a153 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="41" y="1396" width="3" height="15" fill="rgb(234,211,16)"/><text x="44.00" y="1406.50"></text></g><g><title>0x7fbc2fe78c13 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="41" y="1412" width="3" height="15" fill="rgb(247,226,30)"/><text x="44.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="41" y="1428" width="3" height="15" fill="rgb(210,185,46)"/><text x="44.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="41" y="1444" width="3" height="15" fill="rgb(212,144,53)"/><text x="44.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="41" y="1460" width="3" height="15" fill="rgb(231,125,1)"/><text x="44.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.30%)</title><rect x="41" y="1476" width="3" height="15" fill="rgb(216,161,45)"/><text x="44.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="41" y="1492" width="3" height="15" fill="rgb(210,151,9)"/><text x="44.00" y="1502.50"></text></g><g><title>0x7fbc2fc15181 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="41" y="1508" width="3" height="15" fill="rgb(240,164,37)"/><text x="44.00" y="1518.50"></text></g><g><title>0x7fbc2fc181c9 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="41" y="1524" width="3" height="15" fill="rgb(231,125,42)"/><text x="44.00" y="1534.50"></text></g><g><title>0x7fbc2fc44167 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="41" y="1540" width="3" height="15" fill="rgb(247,85,14)"/><text x="44.00" y="1550.50"></text></g><g><title>0x7fbc2fc3fb64 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="41" y="1556" width="3" height="15" fill="rgb(229,101,46)"/><text x="44.00" y="1566.50"></text></g><g><title>0x7fbc2fc2307b (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="41" y="1572" width="3" height="15" fill="rgb(246,10,27)"/><text x="44.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py:101) (1 samples, 0.30%)</title><rect x="41" y="1588" width="3" height="15" fill="rgb(239,218,54)"/><text x="44.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py:1104) (1 samples, 0.30%)</title><rect x="41" y="1604" width="3" height="15" fill="rgb(233,55,27)"/><text x="44.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py:114) (1 samples, 0.30%)</title><rect x="41" y="1620" width="3" height="15" fill="rgb(222,93,13)"/><text x="44.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py:108) (1 samples, 0.30%)</title><rect x="41" y="1636" width="3" height="15" fill="rgb(205,142,1)"/><text x="44.00" y="1646.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="41" y="1652" width="3" height="15" fill="rgb(211,172,21)"/><text x="44.00" y="1662.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:1249) (1 samples, 0.30%)</title><rect x="44" y="1876" width="4" height="15" fill="rgb(234,39,7)"/><text x="47.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.30%)</title><rect x="44" y="1892" width="4" height="15" fill="rgb(227,67,37)"/><text x="47.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.30%)</title><rect x="44" y="1908" width="4" height="15" fill="rgb(230,93,13)"/><text x="47.00" y="1918.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1255) (1 samples, 0.30%)</title><rect x="44" y="1924" width="4" height="15" fill="rgb(250,74,40)"/><text x="47.00" y="1934.50"></text></g><g><title>getdoc (inspect.py:606) (1 samples, 0.30%)</title><rect x="44" y="1940" width="4" height="15" fill="rgb(250,67,0)"/><text x="47.00" y="1950.50"></text></g><g><title>_finddoc (inspect.py:585) (1 samples, 0.30%)</title><rect x="44" y="1956" width="4" height="15" fill="rgb(248,42,24)"/><text x="47.00" y="1966.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 1.18%)</title><rect x="37" y="436" width="14" height="15" fill="rgb(222,16,35)"/><text x="40.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.18%)</title><rect x="37" y="452" width="14" height="15" fill="rgb(234,148,47)"/><text x="40.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.18%)</title><rect x="37" y="468" width="14" height="15" fill="rgb(239,151,44)"/><text x="40.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.18%)</title><rect x="37" y="484" width="14" height="15" fill="rgb(230,115,12)"/><text x="40.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.18%)</title><rect x="37" y="500" width="14" height="15" fill="rgb(238,65,10)"/><text x="40.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.18%)</title><rect x="37" y="516" width="14" height="15" fill="rgb(211,0,6)"/><text x="40.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 1.18%)</title><rect x="37" y="532" width="14" height="15" fill="rgb(227,118,21)"/><text x="40.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.18%)</title><rect x="37" y="548" width="14" height="15" fill="rgb(226,198,25)"/><text x="40.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.18%)</title><rect x="37" y="564" width="14" height="15" fill="rgb(226,31,32)"/><text x="40.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.18%)</title><rect x="37" y="580" width="14" height="15" fill="rgb(236,0,36)"/><text x="40.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.18%)</title><rect x="37" y="596" width="14" height="15" fill="rgb(246,186,2)"/><text x="40.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.18%)</title><rect x="37" y="612" width="14" height="15" fill="rgb(211,170,34)"/><text x="40.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.59%)</title><rect x="44" y="628" width="7" height="15" fill="rgb(208,160,44)"/><text x="47.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="44" y="644" width="7" height="15" fill="rgb(230,66,34)"/><text x="47.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="44" y="660" width="7" height="15" fill="rgb(205,57,25)"/><text x="47.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="44" y="676" width="7" height="15" fill="rgb(249,156,4)"/><text x="47.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="44" y="692" width="7" height="15" fill="rgb(244,197,15)"/><text x="47.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="44" y="708" width="7" height="15" fill="rgb(252,45,43)"/><text x="47.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.59%)</title><rect x="44" y="724" width="7" height="15" fill="rgb(244,172,7)"/><text x="47.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="44" y="740" width="7" height="15" fill="rgb(217,38,10)"/><text x="47.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="44" y="756" width="7" height="15" fill="rgb(232,67,29)"/><text x="47.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="44" y="772" width="7" height="15" fill="rgb(236,120,27)"/><text x="47.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="44" y="788" width="7" height="15" fill="rgb(242,208,13)"/><text x="47.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="44" y="804" width="7" height="15" fill="rgb(232,80,27)"/><text x="47.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.59%)</title><rect x="44" y="820" width="7" height="15" fill="rgb(244,189,0)"/><text x="47.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="44" y="836" width="7" height="15" fill="rgb(207,221,7)"/><text x="47.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="44" y="852" width="7" height="15" fill="rgb(222,159,37)"/><text x="47.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="44" y="868" width="7" height="15" fill="rgb(209,126,48)"/><text x="47.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="44" y="884" width="7" height="15" fill="rgb(225,5,11)"/><text x="47.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="44" y="900" width="7" height="15" fill="rgb(254,173,39)"/><text x="47.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.59%)</title><rect x="44" y="916" width="7" height="15" fill="rgb(222,226,41)"/><text x="47.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="44" y="932" width="7" height="15" fill="rgb(226,154,11)"/><text x="47.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="44" y="948" width="7" height="15" fill="rgb(252,151,6)"/><text x="47.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="44" y="964" width="7" height="15" fill="rgb(216,147,38)"/><text x="47.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="44" y="980" width="7" height="15" fill="rgb(228,59,34)"/><text x="47.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="44" y="996" width="7" height="15" fill="rgb(215,182,52)"/><text x="47.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.59%)</title><rect x="44" y="1012" width="7" height="15" fill="rgb(250,46,38)"/><text x="47.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="44" y="1028" width="7" height="15" fill="rgb(226,134,34)"/><text x="47.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="44" y="1044" width="7" height="15" fill="rgb(241,206,23)"/><text x="47.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="44" y="1060" width="7" height="15" fill="rgb(224,227,18)"/><text x="47.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="44" y="1076" width="7" height="15" fill="rgb(237,99,31)"/><text x="47.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="44" y="1092" width="7" height="15" fill="rgb(237,136,17)"/><text x="47.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.59%)</title><rect x="44" y="1108" width="7" height="15" fill="rgb(223,210,45)"/><text x="47.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="44" y="1124" width="7" height="15" fill="rgb(209,79,2)"/><text x="47.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="44" y="1140" width="7" height="15" fill="rgb(246,4,5)"/><text x="47.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="44" y="1156" width="7" height="15" fill="rgb(210,126,12)"/><text x="47.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="44" y="1172" width="7" height="15" fill="rgb(208,123,38)"/><text x="47.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="44" y="1188" width="7" height="15" fill="rgb(211,168,3)"/><text x="47.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.59%)</title><rect x="44" y="1204" width="7" height="15" fill="rgb(225,32,48)"/><text x="47.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="44" y="1220" width="7" height="15" fill="rgb(216,15,51)"/><text x="47.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="44" y="1236" width="7" height="15" fill="rgb(216,176,51)"/><text x="47.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="44" y="1252" width="7" height="15" fill="rgb(246,93,21)"/><text x="47.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="44" y="1268" width="7" height="15" fill="rgb(221,224,16)"/><text x="47.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="44" y="1284" width="7" height="15" fill="rgb(216,157,48)"/><text x="47.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.59%)</title><rect x="44" y="1300" width="7" height="15" fill="rgb(213,104,35)"/><text x="47.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="44" y="1316" width="7" height="15" fill="rgb(237,125,40)"/><text x="47.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="44" y="1332" width="7" height="15" fill="rgb(231,190,19)"/><text x="47.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="44" y="1348" width="7" height="15" fill="rgb(205,194,52)"/><text x="47.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="44" y="1364" width="7" height="15" fill="rgb(237,65,19)"/><text x="47.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="44" y="1380" width="7" height="15" fill="rgb(217,44,29)"/><text x="47.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.59%)</title><rect x="44" y="1396" width="7" height="15" fill="rgb(226,169,47)"/><text x="47.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="44" y="1412" width="7" height="15" fill="rgb(245,35,18)"/><text x="47.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="44" y="1428" width="7" height="15" fill="rgb(205,174,9)"/><text x="47.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="44" y="1444" width="7" height="15" fill="rgb(208,133,46)"/><text x="47.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="44" y="1460" width="7" height="15" fill="rgb(231,9,22)"/><text x="47.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="44" y="1476" width="7" height="15" fill="rgb(209,93,30)"/><text x="47.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (2 samples, 0.59%)</title><rect x="44" y="1492" width="7" height="15" fill="rgb(208,30,32)"/><text x="47.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="44" y="1508" width="7" height="15" fill="rgb(229,125,35)"/><text x="47.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="44" y="1524" width="7" height="15" fill="rgb(210,113,17)"/><text x="47.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="44" y="1540" width="7" height="15" fill="rgb(208,195,40)"/><text x="47.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="44" y="1556" width="7" height="15" fill="rgb(243,133,4)"/><text x="47.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="44" y="1572" width="7" height="15" fill="rgb(248,143,15)"/><text x="47.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (2 samples, 0.59%)</title><rect x="44" y="1588" width="7" height="15" fill="rgb(210,115,7)"/><text x="47.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="44" y="1604" width="7" height="15" fill="rgb(250,76,26)"/><text x="47.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="44" y="1620" width="7" height="15" fill="rgb(217,145,5)"/><text x="47.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="44" y="1636" width="7" height="15" fill="rgb(252,207,37)"/><text x="47.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="44" y="1652" width="7" height="15" fill="rgb(221,155,15)"/><text x="47.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="44" y="1668" width="7" height="15" fill="rgb(241,107,50)"/><text x="47.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (2 samples, 0.59%)</title><rect x="44" y="1684" width="7" height="15" fill="rgb(239,187,31)"/><text x="47.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="44" y="1700" width="7" height="15" fill="rgb(210,227,47)"/><text x="47.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="44" y="1716" width="7" height="15" fill="rgb(223,64,9)"/><text x="47.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="44" y="1732" width="7" height="15" fill="rgb(218,192,25)"/><text x="47.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="44" y="1748" width="7" height="15" fill="rgb(250,93,10)"/><text x="47.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="44" y="1764" width="7" height="15" fill="rgb(237,169,21)"/><text x="47.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (2 samples, 0.59%)</title><rect x="44" y="1780" width="7" height="15" fill="rgb(206,21,21)"/><text x="47.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="44" y="1796" width="7" height="15" fill="rgb(222,193,8)"/><text x="47.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="44" y="1812" width="7" height="15" fill="rgb(205,177,48)"/><text x="47.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="44" y="1828" width="7" height="15" fill="rgb(223,84,7)"/><text x="47.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="44" y="1844" width="7" height="15" fill="rgb(233,85,17)"/><text x="47.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="44" y="1860" width="7" height="15" fill="rgb(246,75,36)"/><text x="47.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:1654) (1 samples, 0.30%)</title><rect x="48" y="1876" width="3" height="15" fill="rgb(228,188,46)"/><text x="51.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.30%)</title><rect x="48" y="1892" width="3" height="15" fill="rgb(243,127,41)"/><text x="51.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1366) (1 samples, 0.30%)</title><rect x="48" y="1908" width="3" height="15" fill="rgb(225,102,17)"/><text x="51.00" y="1918.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py:1289) (1 samples, 0.30%)</title><rect x="48" y="1924" width="3" height="15" fill="rgb(222,116,54)"/><text x="51.00" y="1934.50"></text></g><g><title>getfullargspec (inspect.py:1126) (1 samples, 0.30%)</title><rect x="48" y="1940" width="3" height="15" fill="rgb(212,167,22)"/><text x="51.00" y="1950.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.30%)</title><rect x="48" y="1956" width="3" height="15" fill="rgb(233,205,46)"/><text x="51.00" y="1966.50"></text></g><g><title>_signature_from_function (inspect.py:2154) (1 samples, 0.30%)</title><rect x="48" y="1972" width="3" height="15" fill="rgb(218,180,30)"/><text x="51.00" y="1982.50"></text></g><g><title>__init__ (inspect.py:2469) (1 samples, 0.30%)</title><rect x="48" y="1988" width="3" height="15" fill="rgb(236,5,11)"/><text x="51.00" y="1998.50"></text></g><g><title>__call__ (enum.py:309) (1 samples, 0.30%)</title><rect x="48" y="2004" width="3" height="15" fill="rgb(250,11,0)"/><text x="51.00" y="2014.50"></text></g><g><title>root (&lt;template&gt;:118) (1 samples, 0.30%)</title><rect x="51" y="1572" width="4" height="15" fill="rgb(209,129,11)"/><text x="54.00" y="1582.50"></text></g><g><title>resolve_or_missing (jinja2/runtime.py:217) (1 samples, 0.30%)</title><rect x="51" y="1588" width="4" height="15" fill="rgb(230,51,1)"/><text x="54.00" y="1598.50"></text></g><g><title>resolve_or_missing (jinja2/runtime.py:126) (1 samples, 0.30%)</title><rect x="51" y="1604" width="4" height="15" fill="rgb(212,27,16)"/><text x="54.00" y="1614.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:4) (14 samples, 4.14%)</title><rect x="10" y="52" width="48" height="15" fill="rgb(235,44,46)"/><text x="13.00" y="62.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 4.14%)</title><rect x="10" y="68" width="48" height="15" fill="rgb(249,229,6)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 4.14%)</title><rect x="10" y="84" width="48" height="15" fill="rgb(239,181,1)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 4.14%)</title><rect x="10" y="100" width="48" height="15" fill="rgb(244,222,16)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 4.14%)</title><rect x="10" y="116" width="48" height="15" fill="rgb(248,95,29)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 4.14%)</title><rect x="10" y="132" width="48" height="15" fill="rgb(230,136,7)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:7) (7 samples, 2.07%)</title><rect x="34" y="148" width="24" height="15" fill="rgb(254,39,22)"/><text x="37.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.07%)</title><rect x="34" y="164" width="24" height="15" fill="rgb(231,8,34)"/><text x="37.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.07%)</title><rect x="34" y="180" width="24" height="15" fill="rgb(244,229,43)"/><text x="37.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.07%)</title><rect x="34" y="196" width="24" height="15" fill="rgb(206,105,14)"/><text x="37.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.07%)</title><rect x="34" y="212" width="24" height="15" fill="rgb(210,39,44)"/><text x="37.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.07%)</title><rect x="34" y="228" width="24" height="15" fill="rgb(245,40,22)"/><text x="37.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 1.78%)</title><rect x="37" y="244" width="21" height="15" fill="rgb(252,71,29)"/><text x="40.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.78%)</title><rect x="37" y="260" width="21" height="15" fill="rgb(208,97,27)"/><text x="40.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.78%)</title><rect x="37" y="276" width="21" height="15" fill="rgb(211,140,33)"/><text x="40.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.78%)</title><rect x="37" y="292" width="21" height="15" fill="rgb(215,47,2)"/><text x="40.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.78%)</title><rect x="37" y="308" width="21" height="15" fill="rgb(208,21,54)"/><text x="40.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.78%)</title><rect x="37" y="324" width="21" height="15" fill="rgb(252,98,49)"/><text x="40.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 1.78%)</title><rect x="37" y="340" width="21" height="15" fill="rgb(233,65,7)"/><text x="40.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.78%)</title><rect x="37" y="356" width="21" height="15" fill="rgb(243,123,10)"/><text x="40.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.78%)</title><rect x="37" y="372" width="21" height="15" fill="rgb(239,221,42)"/><text x="40.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.78%)</title><rect x="37" y="388" width="21" height="15" fill="rgb(221,184,51)"/><text x="40.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.78%)</title><rect x="37" y="404" width="21" height="15" fill="rgb(248,65,32)"/><text x="40.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.78%)</title><rect x="37" y="420" width="21" height="15" fill="rgb(248,34,11)"/><text x="40.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.59%)</title><rect x="51" y="436" width="7" height="15" fill="rgb(254,71,45)"/><text x="54.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="51" y="452" width="7" height="15" fill="rgb(220,101,32)"/><text x="54.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.59%)</title><rect x="51" y="468" width="7" height="15" fill="rgb(207,176,49)"/><text x="54.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="51" y="484" width="7" height="15" fill="rgb(211,30,33)"/><text x="54.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="51" y="500" width="7" height="15" fill="rgb(211,78,20)"/><text x="54.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="51" y="516" width="7" height="15" fill="rgb(248,35,21)"/><text x="54.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="51" y="532" width="7" height="15" fill="rgb(247,101,34)"/><text x="54.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="51" y="548" width="7" height="15" fill="rgb(242,33,36)"/><text x="54.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="51" y="564" width="7" height="15" fill="rgb(238,179,0)"/><text x="54.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.59%)</title><rect x="51" y="580" width="7" height="15" fill="rgb(210,179,46)"/><text x="54.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="51" y="596" width="7" height="15" fill="rgb(216,188,25)"/><text x="54.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="51" y="612" width="7" height="15" fill="rgb(239,192,43)"/><text x="54.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="51" y="628" width="7" height="15" fill="rgb(252,221,12)"/><text x="54.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="51" y="644" width="7" height="15" fill="rgb(229,192,47)"/><text x="54.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="51" y="660" width="7" height="15" fill="rgb(245,140,6)"/><text x="54.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.59%)</title><rect x="51" y="676" width="7" height="15" fill="rgb(243,2,11)"/><text x="54.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="51" y="692" width="7" height="15" fill="rgb(206,209,27)"/><text x="54.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="51" y="708" width="7" height="15" fill="rgb(238,49,30)"/><text x="54.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="51" y="724" width="7" height="15" fill="rgb(206,140,25)"/><text x="54.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="51" y="740" width="7" height="15" fill="rgb(235,115,38)"/><text x="54.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="51" y="756" width="7" height="15" fill="rgb(222,97,52)"/><text x="54.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.59%)</title><rect x="51" y="772" width="7" height="15" fill="rgb(218,157,9)"/><text x="54.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="51" y="788" width="7" height="15" fill="rgb(207,6,33)"/><text x="54.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="51" y="804" width="7" height="15" fill="rgb(207,15,41)"/><text x="54.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="51" y="820" width="7" height="15" fill="rgb(227,71,21)"/><text x="54.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="51" y="836" width="7" height="15" fill="rgb(222,149,44)"/><text x="54.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="51" y="852" width="7" height="15" fill="rgb(233,47,47)"/><text x="54.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.59%)</title><rect x="51" y="868" width="7" height="15" fill="rgb(227,187,43)"/><text x="54.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="51" y="884" width="7" height="15" fill="rgb(248,47,37)"/><text x="54.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.59%)</title><rect x="51" y="900" width="7" height="15" fill="rgb(226,53,34)"/><text x="54.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="51" y="916" width="7" height="15" fill="rgb(211,192,7)"/><text x="54.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="51" y="932" width="7" height="15" fill="rgb(205,48,51)"/><text x="54.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="51" y="948" width="7" height="15" fill="rgb(234,210,17)"/><text x="54.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="51" y="964" width="7" height="15" fill="rgb(238,3,53)"/><text x="54.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="51" y="980" width="7" height="15" fill="rgb(246,17,11)"/><text x="54.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="51" y="996" width="7" height="15" fill="rgb(222,45,47)"/><text x="54.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.59%)</title><rect x="51" y="1012" width="7" height="15" fill="rgb(213,131,4)"/><text x="54.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="51" y="1028" width="7" height="15" fill="rgb(220,211,40)"/><text x="54.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="51" y="1044" width="7" height="15" fill="rgb(232,70,5)"/><text x="54.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="51" y="1060" width="7" height="15" fill="rgb(224,173,38)"/><text x="54.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="51" y="1076" width="7" height="15" fill="rgb(230,66,6)"/><text x="54.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="51" y="1092" width="7" height="15" fill="rgb(253,35,33)"/><text x="54.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.59%)</title><rect x="51" y="1108" width="7" height="15" fill="rgb(222,120,49)"/><text x="54.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.59%)</title><rect x="51" y="1124" width="7" height="15" fill="rgb(223,3,24)"/><text x="54.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="51" y="1140" width="7" height="15" fill="rgb(240,14,15)"/><text x="54.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="51" y="1156" width="7" height="15" fill="rgb(210,188,48)"/><text x="54.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="51" y="1172" width="7" height="15" fill="rgb(249,58,28)"/><text x="54.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="51" y="1188" width="7" height="15" fill="rgb(219,104,5)"/><text x="54.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="51" y="1204" width="7" height="15" fill="rgb(244,138,33)"/><text x="54.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="51" y="1220" width="7" height="15" fill="rgb(239,85,45)"/><text x="54.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.59%)</title><rect x="51" y="1236" width="7" height="15" fill="rgb(237,143,5)"/><text x="54.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.59%)</title><rect x="51" y="1252" width="7" height="15" fill="rgb(242,79,37)"/><text x="54.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="51" y="1268" width="7" height="15" fill="rgb(224,176,20)"/><text x="54.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="51" y="1284" width="7" height="15" fill="rgb(211,64,47)"/><text x="54.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="51" y="1300" width="7" height="15" fill="rgb(231,73,1)"/><text x="54.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="51" y="1316" width="7" height="15" fill="rgb(245,17,32)"/><text x="54.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="51" y="1332" width="7" height="15" fill="rgb(252,70,53)"/><text x="54.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="51" y="1348" width="7" height="15" fill="rgb(234,198,45)"/><text x="54.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.59%)</title><rect x="51" y="1364" width="7" height="15" fill="rgb(221,171,10)"/><text x="54.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.59%)</title><rect x="51" y="1380" width="7" height="15" fill="rgb(245,165,39)"/><text x="54.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.59%)</title><rect x="51" y="1396" width="7" height="15" fill="rgb(220,68,48)"/><text x="54.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.59%)</title><rect x="51" y="1412" width="7" height="15" fill="rgb(248,162,47)"/><text x="54.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.59%)</title><rect x="51" y="1428" width="7" height="15" fill="rgb(217,170,41)"/><text x="54.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.59%)</title><rect x="51" y="1444" width="7" height="15" fill="rgb(221,214,38)"/><text x="54.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.59%)</title><rect x="51" y="1460" width="7" height="15" fill="rgb(211,27,32)"/><text x="54.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.59%)</title><rect x="51" y="1476" width="7" height="15" fill="rgb(236,225,49)"/><text x="54.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.59%)</title><rect x="51" y="1492" width="7" height="15" fill="rgb(240,57,12)"/><text x="54.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.59%)</title><rect x="51" y="1508" width="7" height="15" fill="rgb(245,94,4)"/><text x="54.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.59%)</title><rect x="51" y="1524" width="7" height="15" fill="rgb(229,182,25)"/><text x="54.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.59%)</title><rect x="51" y="1540" width="7" height="15" fill="rgb(242,52,22)"/><text x="54.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.59%)</title><rect x="51" y="1556" width="7" height="15" fill="rgb(242,92,49)"/><text x="54.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:123) (1 samples, 0.30%)</title><rect x="55" y="1572" width="3" height="15" fill="rgb(215,10,8)"/><text x="58.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.30%)</title><rect x="55" y="1588" width="3" height="15" fill="rgb(225,128,53)"/><text x="58.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:152) (1 samples, 0.30%)</title><rect x="55" y="1604" width="3" height="15" fill="rgb(229,118,42)"/><text x="58.00" y="1614.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:151) (1 samples, 0.30%)</title><rect x="58" y="148" width="4" height="15" fill="rgb(219,172,8)"/><text x="61.00" y="158.50"></text></g><g><title>set_params (sklearn/base.py:227) (1 samples, 0.30%)</title><rect x="58" y="164" width="4" height="15" fill="rgb(225,64,50)"/><text x="61.00" y="174.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:72) (1 samples, 0.30%)</title><rect x="62" y="164" width="3" height="15" fill="rgb(222,203,35)"/><text x="65.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.30%)</title><rect x="62" y="180" width="3" height="15" fill="rgb(213,190,17)"/><text x="65.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.30%)</title><rect x="62" y="196" width="3" height="15" fill="rgb(226,81,28)"/><text x="65.00" y="206.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.30%)</title><rect x="62" y="212" width="3" height="15" fill="rgb(249,109,5)"/><text x="65.00" y="222.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.30%)</title><rect x="62" y="228" width="3" height="15" fill="rgb(214,177,46)"/><text x="65.00" y="238.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.30%)</title><rect x="62" y="244" width="3" height="15" fill="rgb(234,167,54)"/><text x="65.00" y="254.50"></text></g><g><title>_signature_from_function (inspect.py:2195) (1 samples, 0.30%)</title><rect x="62" y="260" width="3" height="15" fill="rgb(222,136,18)"/><text x="65.00" y="270.50"></text></g><g><title>__init__ (inspect.py:2800) (1 samples, 0.30%)</title><rect x="62" y="276" width="3" height="15" fill="rgb(254,212,53)"/><text x="65.00" y="286.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:369) (3 samples, 0.89%)</title><rect x="58" y="116" width="11" height="15" fill="rgb(242,4,6)"/><text x="61.00" y="126.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py:369) (3 samples, 0.89%)</title><rect x="58" y="132" width="11" height="15" fill="rgb(243,92,20)"/><text x="61.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:154) (2 samples, 0.59%)</title><rect x="62" y="148" width="7" height="15" fill="rgb(214,152,28)"/><text x="65.00" y="158.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:77) (1 samples, 0.30%)</title><rect x="65" y="164" width="4" height="15" fill="rgb(239,9,20)"/><text x="68.00" y="174.50"></text></g><g><title>set_params (sklearn/base.py:227) (1 samples, 0.30%)</title><rect x="65" y="180" width="4" height="15" fill="rgb(237,151,18)"/><text x="68.00" y="190.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.30%)</title><rect x="65" y="196" width="4" height="15" fill="rgb(208,159,44)"/><text x="68.00" y="206.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.30%)</title><rect x="65" y="212" width="4" height="15" fill="rgb(236,7,31)"/><text x="68.00" y="222.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.30%)</title><rect x="65" y="228" width="4" height="15" fill="rgb(248,149,53)"/><text x="68.00" y="238.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.30%)</title><rect x="65" y="244" width="4" height="15" fill="rgb(206,89,33)"/><text x="68.00" y="254.50"></text></g><g><title>_signature_from_callable (inspect.py:2226) (1 samples, 0.30%)</title><rect x="65" y="260" width="4" height="15" fill="rgb(217,96,45)"/><text x="68.00" y="270.50"></text></g><g><title>0x7fbc35836d8c (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="69" y="324" width="3" height="15" fill="rgb(216,181,38)"/><text x="72.00" y="334.50"></text></g><g><title>0x7fbc3582fcc0 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="69" y="340" width="3" height="15" fill="rgb(251,146,0)"/><text x="72.00" y="350.50"></text></g><g><title>0x7fbc35836dff (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="72" y="324" width="4" height="15" fill="rgb(206,188,43)"/><text x="75.00" y="334.50"></text></g><g><title>0x7fbc35836e2e (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="76" y="324" width="3" height="15" fill="rgb(214,214,35)"/><text x="79.00" y="334.50"></text></g><g><title>0x7fbc35a728d4 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="76" y="340" width="3" height="15" fill="rgb(213,151,39)"/><text x="79.00" y="350.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:40) (7 samples, 2.07%)</title><rect x="58" y="52" width="25" height="15" fill="rgb(243,20,23)"/><text x="61.00" y="62.50">&lt;..</text></g><g><title>start (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:11) (7 samples, 2.07%)</title><rect x="58" y="68" width="25" height="15" fill="rgb(236,180,12)"/><text x="61.00" y="78.50">s..</text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:39) (7 samples, 2.07%)</title><rect x="58" y="84" width="25" height="15" fill="rgb(232,45,13)"/><text x="61.00" y="94.50">s..</text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (7 samples, 2.07%)</title><rect x="58" y="100" width="25" height="15" fill="rgb(219,202,9)"/><text x="61.00" y="110.50">s..</text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (4 samples, 1.18%)</title><rect x="69" y="116" width="14" height="15" fill="rgb(223,45,41)"/><text x="72.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (4 samples, 1.18%)</title><rect x="69" y="132" width="14" height="15" fill="rgb(252,147,42)"/><text x="72.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (4 samples, 1.18%)</title><rect x="69" y="148" width="14" height="15" fill="rgb(213,26,37)"/><text x="72.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (4 samples, 1.18%)</title><rect x="69" y="164" width="14" height="15" fill="rgb(234,88,0)"/><text x="72.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (4 samples, 1.18%)</title><rect x="69" y="180" width="14" height="15" fill="rgb(205,114,3)"/><text x="72.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (4 samples, 1.18%)</title><rect x="69" y="196" width="14" height="15" fill="rgb(249,83,10)"/><text x="72.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (4 samples, 1.18%)</title><rect x="69" y="212" width="14" height="15" fill="rgb(214,132,12)"/><text x="72.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (4 samples, 1.18%)</title><rect x="69" y="228" width="14" height="15" fill="rgb(253,183,26)"/><text x="72.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:165) (4 samples, 1.18%)</title><rect x="69" y="244" width="14" height="15" fill="rgb(228,157,33)"/><text x="72.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py:1226) (4 samples, 1.18%)</title><rect x="69" y="260" width="14" height="15" fill="rgb(237,104,30)"/><text x="72.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py:367) (4 samples, 1.18%)</title><rect x="69" y="276" width="14" height="15" fill="rgb(235,57,48)"/><text x="72.00" y="286.50"></text></g><g><title>0x7fbc355d9b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.18%)</title><rect x="69" y="292" width="14" height="15" fill="rgb(220,46,4)"/><text x="72.00" y="302.50"></text></g><g><title>0x7fbc3560b10a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.18%)</title><rect x="69" y="308" width="14" height="15" fill="rgb(253,54,47)"/><text x="72.00" y="318.50"></text></g><g><title>0x7fbc35836e72 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="79" y="324" width="4" height="15" fill="rgb(238,64,48)"/><text x="82.00" y="334.50"></text></g><g><title>0x7fbc35a6a2eb (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="79" y="340" width="4" height="15" fill="rgb(211,153,8)"/><text x="82.00" y="350.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.30%)</title><rect x="83" y="100" width="3" height="15" fill="rgb(230,9,46)"/><text x="86.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:188) (1 samples, 0.30%)</title><rect x="83" y="116" width="3" height="15" fill="rgb(213,203,5)"/><text x="86.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py:40) (1 samples, 0.30%)</title><rect x="83" y="132" width="3" height="15" fill="rgb(218,158,4)"/><text x="86.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="83" y="148" width="3" height="15" fill="rgb(249,71,22)"/><text x="86.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="83" y="164" width="3" height="15" fill="rgb(229,119,30)"/><text x="86.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="83" y="180" width="3" height="15" fill="rgb(218,93,14)"/><text x="86.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="83" y="196" width="3" height="15" fill="rgb(214,83,37)"/><text x="86.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="83" y="212" width="3" height="15" fill="rgb(209,14,31)"/><text x="86.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py:8) (1 samples, 0.30%)</title><rect x="83" y="228" width="3" height="15" fill="rgb(215,163,29)"/><text x="86.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="83" y="244" width="3" height="15" fill="rgb(213,157,34)"/><text x="86.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="83" y="260" width="3" height="15" fill="rgb(250,32,21)"/><text x="86.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="83" y="276" width="3" height="15" fill="rgb(229,84,33)"/><text x="86.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.30%)</title><rect x="83" y="292" width="3" height="15" fill="rgb(222,55,19)"/><text x="86.00" y="302.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.30%)</title><rect x="83" y="308" width="3" height="15" fill="rgb(234,182,34)"/><text x="86.00" y="318.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.30%)</title><rect x="83" y="324" width="3" height="15" fill="rgb(245,180,47)"/><text x="86.00" y="334.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:168) (1 samples, 0.30%)</title><rect x="86" y="100" width="4" height="15" fill="rgb(226,15,23)"/><text x="89.00" y="110.50"></text></g><g><title>_pickle_load (_pickle.c.h:510) (1 samples, 0.30%)</title><rect x="86" y="116" width="4" height="15" fill="rgb(254,53,40)"/><text x="89.00" y="126.50"></text></g><g><title>_pickle_load_impl (_pickle.c:7333) (1 samples, 0.30%)</title><rect x="86" y="132" width="4" height="15" fill="rgb(212,173,39)"/><text x="89.00" y="142.50"></text></g><g><title>load (_pickle.c:6463) (1 samples, 0.30%)</title><rect x="86" y="148" width="4" height="15" fill="rgb(213,105,8)"/><text x="89.00" y="158.50"></text></g><g><title>load_build (_pickle.c:6203) (1 samples, 0.30%)</title><rect x="86" y="164" width="4" height="15" fill="rgb(239,145,45)"/><text x="89.00" y="174.50"></text></g><g><title>_Pickle_FastCall (_pickle.c:353) (1 samples, 0.30%)</title><rect x="86" y="180" width="4" height="15" fill="rgb(236,105,49)"/><text x="89.00" y="190.50"></text></g><g><title>__setstate__ (sklearn/base.py:310) (1 samples, 0.30%)</title><rect x="86" y="196" width="4" height="15" fill="rgb(252,54,22)"/><text x="89.00" y="206.50"></text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:25) (3 samples, 0.89%)</title><rect x="83" y="84" width="10" height="15" fill="rgb(211,115,21)"/><text x="86.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.30%)</title><rect x="90" y="100" width="3" height="15" fill="rgb(223,1,10)"/><text x="93.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (1 samples, 0.30%)</title><rect x="90" y="116" width="3" height="15" fill="rgb(222,44,51)"/><text x="93.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.30%)</title><rect x="90" y="132" width="3" height="15" fill="rgb(211,210,43)"/><text x="93.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.30%)</title><rect x="90" y="148" width="3" height="15" fill="rgb(249,78,41)"/><text x="93.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.30%)</title><rect x="90" y="164" width="3" height="15" fill="rgb(252,90,20)"/><text x="93.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.30%)</title><rect x="90" y="180" width="3" height="15" fill="rgb(235,200,9)"/><text x="93.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py:150) (1 samples, 0.30%)</title><rect x="90" y="196" width="3" height="15" fill="rgb(207,153,42)"/><text x="93.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.30%)</title><rect x="90" y="212" width="3" height="15" fill="rgb(220,79,52)"/><text x="93.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.30%)</title><rect x="90" y="228" width="3" height="15" fill="rgb(228,116,4)"/><text x="93.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="90" y="244" width="3" height="15" fill="rgb(238,159,29)"/><text x="93.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.30%)</title><rect x="90" y="260" width="3" height="15" fill="rgb(221,223,30)"/><text x="93.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:164) (1 samples, 0.30%)</title><rect x="90" y="276" width="3" height="15" fill="rgb(215,118,11)"/><text x="93.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:164) (1 samples, 0.30%)</title><rect x="90" y="292" width="3" height="15" fill="rgb(233,88,19)"/><text x="93.00" y="302.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:780) (1 samples, 0.30%)</title><rect x="93" y="148" width="4" height="15" fill="rgb(233,167,18)"/><text x="96.00" y="158.50"></text></g><g><title>__init__ (joblib/parallel.py:620) (1 samples, 0.30%)</title><rect x="93" y="164" width="4" height="15" fill="rgb(242,26,33)"/><text x="96.00" y="174.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (1 samples, 0.30%)</title><rect x="93" y="180" width="4" height="15" fill="rgb(219,192,28)"/><text x="96.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (1 samples, 0.30%)</title><rect x="97" y="180" width="3" height="15" fill="rgb(211,214,2)"/><text x="100.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (1 samples, 0.30%)</title><rect x="100" y="196" width="4" height="15" fill="rgb(238,171,5)"/><text x="103.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (2 samples, 0.59%)</title><rect x="100" y="180" width="7" height="15" fill="rgb(254,157,26)"/><text x="103.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (1 samples, 0.30%)</title><rect x="104" y="196" width="3" height="15" fill="rgb(240,94,2)"/><text x="107.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:124) (1 samples, 0.30%)</title><rect x="104" y="212" width="3" height="15" fill="rgb(237,81,0)"/><text x="107.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (1 samples, 0.30%)</title><rect x="107" y="180" width="4" height="15" fill="rgb(215,150,0)"/><text x="110.00" y="190.50"></text></g><g><title>put (queue.py:132) (1 samples, 0.30%)</title><rect x="107" y="196" width="4" height="15" fill="rgb(220,181,43)"/><text x="110.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (1 samples, 0.30%)</title><rect x="111" y="180" width="3" height="15" fill="rgb(234,29,2)"/><text x="114.00" y="190.50"></text></g><g><title>get (queue.py:181) (1 samples, 0.30%)</title><rect x="111" y="196" width="3" height="15" fill="rgb(233,114,19)"/><text x="114.00" y="206.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.30%)</title><rect x="111" y="212" width="3" height="15" fill="rgb(245,106,1)"/><text x="114.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.30%)</title><rect x="111" y="228" width="3" height="15" fill="rgb(210,136,23)"/><text x="114.00" y="238.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (1 samples, 0.30%)</title><rect x="114" y="196" width="4" height="15" fill="rgb(219,72,32)"/><text x="117.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:327) (1 samples, 0.30%)</title><rect x="114" y="212" width="4" height="15" fill="rgb(213,180,33)"/><text x="117.00" y="222.50"></text></g><g><title>0x7fbc355f3592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="121" y="356" width="4" height="15" fill="rgb(247,20,19)"/><text x="124.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.30%)</title><rect x="121" y="372" width="4" height="15" fill="rgb(234,176,54)"/><text x="124.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.30%)</title><rect x="121" y="388" width="4" height="15" fill="rgb(220,25,17)"/><text x="124.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.30%)</title><rect x="121" y="404" width="4" height="15" fill="rgb(226,187,13)"/><text x="124.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.30%)</title><rect x="121" y="420" width="4" height="15" fill="rgb(211,79,38)"/><text x="124.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.30%)</title><rect x="121" y="436" width="4" height="15" fill="rgb(226,213,40)"/><text x="124.00" y="446.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (2 samples, 0.59%)</title><rect x="121" y="276" width="7" height="15" fill="rgb(217,223,52)"/><text x="124.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (2 samples, 0.59%)</title><rect x="121" y="292" width="7" height="15" fill="rgb(218,90,24)"/><text x="124.00" y="302.50"></text></g><g><title>0x7fbc355e5d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.59%)</title><rect x="121" y="308" width="7" height="15" fill="rgb(247,82,2)"/><text x="124.00" y="318.50"></text></g><g><title>0x7fbc355e4fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.59%)</title><rect x="121" y="324" width="7" height="15" fill="rgb(212,216,8)"/><text x="124.00" y="334.50"></text></g><g><title>0x7fbc355f4405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.59%)</title><rect x="121" y="340" width="7" height="15" fill="rgb(214,67,42)"/><text x="124.00" y="350.50"></text></g><g><title>0x7fbc355f36b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="125" y="356" width="3" height="15" fill="rgb(214,13,6)"/><text x="128.00" y="366.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (3 samples, 0.89%)</title><rect x="121" y="260" width="11" height="15" fill="rgb(252,181,15)"/><text x="124.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (1 samples, 0.30%)</title><rect x="128" y="276" width="4" height="15" fill="rgb(247,54,39)"/><text x="131.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.30%)</title><rect x="128" y="292" width="4" height="15" fill="rgb(251,173,50)"/><text x="131.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.30%)</title><rect x="128" y="308" width="4" height="15" fill="rgb(251,107,51)"/><text x="131.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.30%)</title><rect x="128" y="324" width="4" height="15" fill="rgb(224,169,12)"/><text x="131.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.30%)</title><rect x="128" y="340" width="4" height="15" fill="rgb(239,165,27)"/><text x="131.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.30%)</title><rect x="128" y="356" width="4" height="15" fill="rgb(235,71,15)"/><text x="131.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.30%)</title><rect x="128" y="372" width="4" height="15" fill="rgb(248,76,54)"/><text x="131.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.30%)</title><rect x="128" y="388" width="4" height="15" fill="rgb(241,222,42)"/><text x="131.00" y="398.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.30%)</title><rect x="128" y="404" width="4" height="15" fill="rgb(214,14,9)"/><text x="131.00" y="414.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:47) (15 samples, 4.44%)</title><rect x="83" y="52" width="52" height="15" fill="rgb(213,177,34)"/><text x="86.00" y="62.50">&lt;modu..</text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:46) (15 samples, 4.44%)</title><rect x="83" y="68" width="52" height="15" fill="rgb(253,95,41)"/><text x="86.00" y="78.50">profi..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:26) (12 samples, 3.55%)</title><rect x="93" y="84" width="42" height="15" fill="rgb(226,71,37)"/><text x="96.00" y="94.50">set..</text></g><g><title>profile0 (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:18) (12 samples, 3.55%)</title><rect x="93" y="100" width="42" height="15" fill="rgb(223,25,21)"/><text x="96.00" y="110.50">pro..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (12 samples, 3.55%)</title><rect x="93" y="116" width="42" height="15" fill="rgb(221,122,26)"/><text x="96.00" y="126.50">tim..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (12 samples, 3.55%)</title><rect x="93" y="132" width="42" height="15" fill="rgb(232,36,13)"/><text x="96.00" y="142.50">&lt;la..</text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (11 samples, 3.25%)</title><rect x="97" y="148" width="38" height="15" fill="rgb(249,25,23)"/><text x="100.00" y="158.50">pre..</text></g><g><title>__call__ (joblib/parallel.py:1006) (11 samples, 3.25%)</title><rect x="97" y="164" width="38" height="15" fill="rgb(254,19,30)"/><text x="100.00" y="174.50">__c..</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (6 samples, 1.78%)</title><rect x="114" y="180" width="21" height="15" fill="rgb(247,197,9)"/><text x="117.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (5 samples, 1.48%)</title><rect x="118" y="196" width="17" height="15" fill="rgb(231,45,38)"/><text x="121.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (5 samples, 1.48%)</title><rect x="118" y="212" width="17" height="15" fill="rgb(223,83,49)"/><text x="121.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (5 samples, 1.48%)</title><rect x="118" y="228" width="17" height="15" fill="rgb(215,91,53)"/><text x="121.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (5 samples, 1.48%)</title><rect x="118" y="244" width="17" height="15" fill="rgb(235,56,1)"/><text x="121.00" y="254.50"></text></g><g><title>__exit__ (joblib/parallel.py:215) (1 samples, 0.30%)</title><rect x="132" y="260" width="3" height="15" fill="rgb(206,119,19)"/><text x="135.00" y="270.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:36) (1 samples, 0.30%)</title><rect x="135" y="84" width="4" height="15" fill="rgb(213,100,54)"/><text x="138.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.30%)</title><rect x="135" y="100" width="4" height="15" fill="rgb(244,145,2)"/><text x="138.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (1 samples, 0.30%)</title><rect x="135" y="116" width="4" height="15" fill="rgb(209,9,25)"/><text x="138.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.30%)</title><rect x="135" y="132" width="4" height="15" fill="rgb(210,30,14)"/><text x="138.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.30%)</title><rect x="135" y="148" width="4" height="15" fill="rgb(254,86,50)"/><text x="138.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.30%)</title><rect x="135" y="164" width="4" height="15" fill="rgb(209,85,20)"/><text x="138.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.30%)</title><rect x="135" y="180" width="4" height="15" fill="rgb(220,143,36)"/><text x="138.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py:139) (1 samples, 0.30%)</title><rect x="135" y="196" width="4" height="15" fill="rgb(249,96,24)"/><text x="138.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.30%)</title><rect x="135" y="212" width="4" height="15" fill="rgb(214,26,33)"/><text x="138.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:133) (1 samples, 0.30%)</title><rect x="135" y="228" width="4" height="15" fill="rgb(236,212,5)"/><text x="138.00" y="238.50"></text></g><g><title>array_flatten (methods.c:2429) (1 samples, 0.30%)</title><rect x="135" y="244" width="4" height="15" fill="rgb(235,218,31)"/><text x="138.00" y="254.50"></text></g><g><title>PyArray_Flatten (shape.c:975) (1 samples, 0.30%)</title><rect x="135" y="260" width="4" height="15" fill="rgb(254,91,33)"/><text x="138.00" y="270.50"></text></g><g><title>PyArray_CopyAsFlat (ctors.c:2849) (1 samples, 0.30%)</title><rect x="135" y="276" width="4" height="15" fill="rgb(214,121,38)"/><text x="138.00" y="286.50"></text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py:410) (1 samples, 0.30%)</title><rect x="139" y="164" width="3" height="15" fill="rgb(237,161,21)"/><text x="142.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.30%)</title><rect x="139" y="180" width="3" height="15" fill="rgb(235,111,38)"/><text x="142.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.30%)</title><rect x="139" y="196" width="3" height="15" fill="rgb(244,62,26)"/><text x="142.00" y="206.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:766) (2 samples, 0.59%)</title><rect x="139" y="148" width="7" height="15" fill="rgb(217,197,43)"/><text x="142.00" y="158.50"></text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py:412) (1 samples, 0.30%)</title><rect x="142" y="164" width="4" height="15" fill="rgb(210,142,6)"/><text x="145.00" y="174.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (1 samples, 0.30%)</title><rect x="142" y="180" width="4" height="15" fill="rgb(216,163,47)"/><text x="145.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.30%)</title><rect x="142" y="196" width="4" height="15" fill="rgb(227,11,20)"/><text x="145.00" y="206.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:769) (1 samples, 0.30%)</title><rect x="146" y="148" width="3" height="15" fill="rgb(235,162,16)"/><text x="149.00" y="158.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:181) (1 samples, 0.30%)</title><rect x="146" y="164" width="3" height="15" fill="rgb(236,81,28)"/><text x="149.00" y="174.50"></text></g><g><title>full (numpy/core/numeric.py:332) (1 samples, 0.30%)</title><rect x="146" y="180" width="3" height="15" fill="rgb(243,108,5)"/><text x="149.00" y="190.50"></text></g><g><title>array_empty (multiarraymodule.c:1814) (1 samples, 0.30%)</title><rect x="146" y="196" width="3" height="15" fill="rgb(222,116,34)"/><text x="149.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.30%)</title><rect x="146" y="212" width="3" height="15" fill="rgb(253,110,4)"/><text x="149.00" y="222.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:932) (1 samples, 0.30%)</title><rect x="146" y="228" width="3" height="15" fill="rgb(233,66,24)"/><text x="149.00" y="238.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:780) (1 samples, 0.30%)</title><rect x="149" y="148" width="4" height="15" fill="rgb(207,172,2)"/><text x="152.00" y="158.50"></text></g><g><title>_joblib_parallel_args (sklearn/utils/fixes.py:223) (1 samples, 0.30%)</title><rect x="149" y="164" width="4" height="15" fill="rgb(224,13,11)"/><text x="152.00" y="174.50"></text></g><g><title>__le__ (distutils/version.py:58) (1 samples, 0.30%)</title><rect x="149" y="180" width="4" height="15" fill="rgb(214,1,37)"/><text x="152.00" y="190.50"></text></g><g><title>_cmp (distutils/version.py:333) (1 samples, 0.30%)</title><rect x="149" y="196" width="4" height="15" fill="rgb(251,13,3)"/><text x="152.00" y="206.50"></text></g><g><title>__init__ (distutils/version.py:304) (1 samples, 0.30%)</title><rect x="149" y="212" width="4" height="15" fill="rgb(239,164,21)"/><text x="152.00" y="222.50"></text></g><g><title>parse (distutils/version.py:314) (1 samples, 0.30%)</title><rect x="149" y="228" width="4" height="15" fill="rgb(237,101,6)"/><text x="152.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (1 samples, 0.30%)</title><rect x="153" y="164" width="3" height="15" fill="rgb(249,78,23)"/><text x="156.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (1 samples, 0.30%)</title><rect x="153" y="180" width="3" height="15" fill="rgb(216,42,39)"/><text x="156.00" y="190.50"></text></g><g><title>put (queue.py:151) (1 samples, 0.30%)</title><rect x="153" y="196" width="3" height="15" fill="rgb(214,170,27)"/><text x="156.00" y="206.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.30%)</title><rect x="153" y="212" width="3" height="15" fill="rgb(237,225,28)"/><text x="156.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:795) (1 samples, 0.30%)</title><rect x="160" y="180" width="3" height="15" fill="rgb(244,95,49)"/><text x="163.00" y="190.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.30%)</title><rect x="167" y="196" width="3" height="15" fill="rgb(216,33,24)"/><text x="170.00" y="206.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.30%)</title><rect x="170" y="196" width="4" height="15" fill="rgb(239,144,50)"/><text x="173.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (1 samples, 0.30%)</title><rect x="170" y="212" width="4" height="15" fill="rgb(218,180,54)"/><text x="173.00" y="222.50"></text></g><g><title>get (queue.py:167) (1 samples, 0.30%)</title><rect x="174" y="196" width="3" height="15" fill="rgb(232,4,35)"/><text x="177.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (5 samples, 1.48%)</title><rect x="163" y="180" width="18" height="15" fill="rgb(214,150,1)"/><text x="166.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.30%)</title><rect x="177" y="196" width="4" height="15" fill="rgb(228,143,50)"/><text x="180.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:804) (1 samples, 0.30%)</title><rect x="181" y="180" width="3" height="15" fill="rgb(237,12,47)"/><text x="184.00" y="190.50"></text></g><g><title>update_wrapper (functools.py:52) (1 samples, 0.30%)</title><rect x="202" y="228" width="3" height="15" fill="rgb(220,212,25)"/><text x="205.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:54) (2 samples, 0.59%)</title><rect x="205" y="228" width="7" height="15" fill="rgb(231,41,16)"/><text x="208.00" y="238.50"></text></g><g><title>delayed (joblib/parallel.py:308) (9 samples, 2.66%)</title><rect x="188" y="212" width="31" height="15" fill="rgb(236,60,31)"/><text x="191.00" y="222.50">de..</text></g><g><title>wraps (functools.py:79) (2 samples, 0.59%)</title><rect x="212" y="228" width="7" height="15" fill="rgb(207,19,38)"/><text x="215.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (11 samples, 3.25%)</title><rect x="184" y="180" width="38" height="15" fill="rgb(230,146,48)"/><text x="187.00" y="190.50">dis..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:782) (10 samples, 2.96%)</title><rect x="188" y="196" width="34" height="15" fill="rgb(230,36,42)"/><text x="191.00" y="206.50">&lt;g..</text></g><g><title>delayed (joblib/parallel.py:311) (1 samples, 0.30%)</title><rect x="219" y="212" width="3" height="15" fill="rgb(227,174,22)"/><text x="222.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:808) (1 samples, 0.30%)</title><rect x="222" y="180" width="4" height="15" fill="rgb(217,6,51)"/><text x="225.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (3 samples, 0.89%)</title><rect x="226" y="180" width="10" height="15" fill="rgb(247,176,54)"/><text x="229.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:823) (1 samples, 0.30%)</title><rect x="236" y="180" width="4" height="15" fill="rgb(207,33,24)"/><text x="239.00" y="190.50"></text></g><g><title>0x7fbc5bc7f151 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="257" y="212" width="4" height="15" fill="rgb(236,35,33)"/><text x="260.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (10 samples, 2.96%)</title><rect x="247" y="196" width="35" height="15" fill="rgb(220,193,37)"/><text x="250.00" y="206.50">ge..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (6 samples, 1.78%)</title><rect x="261" y="212" width="21" height="15" fill="rgb(231,107,24)"/><text x="264.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (1 samples, 0.30%)</title><rect x="289" y="228" width="3" height="15" fill="rgb(230,9,35)"/><text x="292.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (4 samples, 1.18%)</title><rect x="282" y="212" width="14" height="15" fill="rgb(242,80,51)"/><text x="285.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (1 samples, 0.30%)</title><rect x="292" y="228" width="4" height="15" fill="rgb(212,30,14)"/><text x="295.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:81) (1 samples, 0.30%)</title><rect x="296" y="212" width="3" height="15" fill="rgb(243,29,40)"/><text x="299.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:83) (1 samples, 0.30%)</title><rect x="299" y="212" width="4" height="15" fill="rgb(234,148,18)"/><text x="302.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (19 samples, 5.62%)</title><rect x="240" y="180" width="66" height="15" fill="rgb(224,223,47)"/><text x="243.00" y="190.50">dispatc..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (7 samples, 2.07%)</title><rect x="282" y="196" width="24" height="15" fill="rgb(236,156,50)"/><text x="285.00" y="206.50">g..</text></g><g><title>get_active_backend (joblib/parallel.py:94) (1 samples, 0.30%)</title><rect x="303" y="212" width="3" height="15" fill="rgb(254,8,21)"/><text x="306.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:242) (1 samples, 0.30%)</title><rect x="306" y="196" width="4" height="15" fill="rgb(253,105,50)"/><text x="309.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (2 samples, 0.59%)</title><rect x="306" y="180" width="7" height="15" fill="rgb(250,218,19)"/><text x="309.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:243) (1 samples, 0.30%)</title><rect x="310" y="196" width="3" height="15" fill="rgb(225,219,23)"/><text x="313.00" y="206.50"></text></g><g><title>put (queue.py:132) (1 samples, 0.30%)</title><rect x="317" y="196" width="3" height="15" fill="rgb(253,219,41)"/><text x="320.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.30%)</title><rect x="317" y="212" width="3" height="15" fill="rgb(232,171,53)"/><text x="320.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.30%)</title><rect x="317" y="228" width="3" height="15" fill="rgb(246,138,17)"/><text x="320.00" y="238.50"></text></g><g><title>put (queue.py:149) (1 samples, 0.30%)</title><rect x="320" y="196" width="4" height="15" fill="rgb(238,195,39)"/><text x="323.00" y="206.50"></text></g><g><title>put (queue.py:150) (1 samples, 0.30%)</title><rect x="324" y="196" width="3" height="15" fill="rgb(206,162,28)"/><text x="327.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (6 samples, 1.78%)</title><rect x="313" y="180" width="21" height="15" fill="rgb(210,135,40)"/><text x="316.00" y="190.50"></text></g><g><title>put (queue.py:151) (2 samples, 0.59%)</title><rect x="327" y="196" width="7" height="15" fill="rgb(219,94,37)"/><text x="330.00" y="206.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.30%)</title><rect x="331" y="212" width="3" height="15" fill="rgb(223,4,20)"/><text x="334.00" y="222.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.30%)</title><rect x="334" y="196" width="4" height="15" fill="rgb(234,197,28)"/><text x="337.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.30%)</title><rect x="334" y="212" width="4" height="15" fill="rgb(249,81,6)"/><text x="337.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.30%)</title><rect x="334" y="228" width="4" height="15" fill="rgb(222,80,15)"/><text x="337.00" y="238.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.30%)</title><rect x="338" y="196" width="3" height="15" fill="rgb(218,111,9)"/><text x="341.00" y="206.50"></text></g><g><title>get (queue.py:180) (1 samples, 0.30%)</title><rect x="341" y="196" width="4" height="15" fill="rgb(210,16,34)"/><text x="344.00" y="206.50"></text></g><g><title>_get (queue.py:217) (1 samples, 0.30%)</title><rect x="341" y="212" width="4" height="15" fill="rgb(245,70,52)"/><text x="344.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (5 samples, 1.48%)</title><rect x="334" y="180" width="18" height="15" fill="rgb(237,84,37)"/><text x="337.00" y="190.50"></text></g><g><title>get (queue.py:181) (2 samples, 0.59%)</title><rect x="345" y="196" width="7" height="15" fill="rgb(250,90,17)"/><text x="348.00" y="206.50"></text></g><g><title>notify (threading.py:348) (2 samples, 0.59%)</title><rect x="345" y="212" width="7" height="15" fill="rgb(224,37,9)"/><text x="348.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (1 samples, 0.30%)</title><rect x="352" y="180" width="3" height="15" fill="rgb(249,138,0)"/><text x="355.00" y="190.50"></text></g><g><title>0x7ffcce7fcaf9 ([vdso]) (1 samples, 0.30%)</title><rect x="355" y="228" width="4" height="15" fill="rgb(243,35,19)"/><text x="358.00" y="238.50"></text></g><g><title>_dispatch (joblib/parallel.py:749) (2 samples, 0.59%)</title><rect x="355" y="196" width="7" height="15" fill="rgb(233,23,40)"/><text x="358.00" y="206.50"></text></g><g><title>clock_gettime (libc-2.29.so) (2 samples, 0.59%)</title><rect x="355" y="212" width="7" height="15" fill="rgb(227,89,23)"/><text x="358.00" y="222.50"></text></g><g><title>0x7ffcce7fcb28 ([vdso]) (1 samples, 0.30%)</title><rect x="359" y="228" width="3" height="15" fill="rgb(235,49,4)"/><text x="362.00" y="238.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (4 samples, 1.18%)</title><rect x="362" y="196" width="14" height="15" fill="rgb(242,227,5)"/><text x="365.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:327) (1 samples, 0.30%)</title><rect x="373" y="212" width="3" height="15" fill="rgb(215,190,0)"/><text x="376.00" y="222.50"></text></g><g><title>0x7fbc5bbc2158 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="373" y="228" width="3" height="15" fill="rgb(234,200,12)"/><text x="376.00" y="238.50"></text></g><g><title>_dispatch (joblib/parallel.py:751) (1 samples, 0.30%)</title><rect x="376" y="196" width="4" height="15" fill="rgb(206,73,24)"/><text x="379.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:188) (1 samples, 0.30%)</title><rect x="387" y="260" width="3" height="15" fill="rgb(238,84,31)"/><text x="390.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (5 samples, 1.48%)</title><rect x="383" y="244" width="18" height="15" fill="rgb(245,146,3)"/><text x="386.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (3 samples, 0.89%)</title><rect x="390" y="260" width="11" height="15" fill="rgb(219,168,15)"/><text x="393.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:255) (1 samples, 0.30%)</title><rect x="404" y="260" width="3" height="15" fill="rgb(229,18,9)"/><text x="407.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.30%)</title><rect x="411" y="292" width="3" height="15" fill="rgb(212,143,13)"/><text x="414.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.30%)</title><rect x="411" y="308" width="3" height="15" fill="rgb(205,48,22)"/><text x="414.00" y="318.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.30%)</title><rect x="418" y="308" width="3" height="15" fill="rgb(248,86,11)"/><text x="421.00" y="318.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.59%)</title><rect x="446" y="340" width="7" height="15" fill="rgb(212,186,7)"/><text x="449.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (9 samples, 2.66%)</title><rect x="425" y="324" width="31" height="15" fill="rgb(209,38,29)"/><text x="428.00" y="334.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.30%)</title><rect x="453" y="340" width="3" height="15" fill="rgb(252,224,48)"/><text x="456.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (13 samples, 3.85%)</title><rect x="414" y="292" width="46" height="15" fill="rgb(210,225,24)"/><text x="417.00" y="302.50">pred..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (11 samples, 3.25%)</title><rect x="421" y="308" width="39" height="15" fill="rgb(234,216,42)"/><text x="424.00" y="318.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.30%)</title><rect x="456" y="324" width="4" height="15" fill="rgb(243,159,35)"/><text x="459.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (1 samples, 0.30%)</title><rect x="460" y="292" width="3" height="15" fill="rgb(210,17,26)"/><text x="463.00" y="302.50"></text></g><g><title>0x7fbc355e4f12 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="463" y="324" width="4" height="15" fill="rgb(213,18,51)"/><text x="466.00" y="334.50"></text></g><g><title>0x7fbc355f3225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="467" y="356" width="3" height="15" fill="rgb(212,218,31)"/><text x="470.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.30%)</title><rect x="467" y="372" width="3" height="15" fill="rgb(209,83,53)"/><text x="470.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.30%)</title><rect x="467" y="388" width="3" height="15" fill="rgb(206,99,46)"/><text x="470.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.30%)</title><rect x="467" y="404" width="3" height="15" fill="rgb(243,216,4)"/><text x="470.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.30%)</title><rect x="467" y="420" width="3" height="15" fill="rgb(221,216,46)"/><text x="470.00" y="430.50"></text></g><g><title>0x7fbc355f3364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="470" y="356" width="4" height="15" fill="rgb(230,86,47)"/><text x="473.00" y="366.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.30%)</title><rect x="470" y="372" width="4" height="15" fill="rgb(238,84,25)"/><text x="473.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.30%)</title><rect x="481" y="388" width="3" height="15" fill="rgb(208,172,46)"/><text x="484.00" y="398.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (4 samples, 1.18%)</title><rect x="474" y="372" width="14" height="15" fill="rgb(226,92,21)"/><text x="477.00" y="382.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:125) (1 samples, 0.30%)</title><rect x="484" y="388" width="4" height="15" fill="rgb(208,71,13)"/><text x="487.00" y="398.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.30%)</title><rect x="484" y="404" width="4" height="15" fill="rgb(221,203,15)"/><text x="487.00" y="414.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:252) (1 samples, 0.30%)</title><rect x="488" y="452" width="3" height="15" fill="rgb(251,139,25)"/><text x="491.00" y="462.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="488" y="468" width="3" height="15" fill="rgb(245,203,1)"/><text x="491.00" y="478.50"></text></g><g><title>0x7fbc5bba2b12 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="491" y="484" width="4" height="15" fill="rgb(244,179,44)"/><text x="494.00" y="494.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (3 samples, 0.89%)</title><rect x="488" y="420" width="10" height="15" fill="rgb(220,38,1)"/><text x="491.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (3 samples, 0.89%)</title><rect x="488" y="436" width="10" height="15" fill="rgb(221,121,15)"/><text x="491.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (2 samples, 0.59%)</title><rect x="491" y="452" width="7" height="15" fill="rgb(247,128,2)"/><text x="494.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (2 samples, 0.59%)</title><rect x="491" y="468" width="7" height="15" fill="rgb(209,211,38)"/><text x="494.00" y="478.50"></text></g><g><title>0x7fbc5bbc20f9 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="495" y="484" width="3" height="15" fill="rgb(230,58,12)"/><text x="498.00" y="494.50"></text></g><g><title>0x7fbc355f3592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.37%)</title><rect x="474" y="356" width="28" height="15" fill="rgb(243,197,10)"/><text x="477.00" y="366.50">0..</text></g><g><title>array_zeros (multiarraymodule.c:1996) (4 samples, 1.18%)</title><rect x="488" y="372" width="14" height="15" fill="rgb(236,39,9)"/><text x="491.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (4 samples, 1.18%)</title><rect x="488" y="388" width="14" height="15" fill="rgb(246,135,29)"/><text x="491.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (4 samples, 1.18%)</title><rect x="488" y="404" width="14" height="15" fill="rgb(245,32,21)"/><text x="491.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.30%)</title><rect x="498" y="420" width="4" height="15" fill="rgb(245,170,6)"/><text x="501.00" y="430.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.30%)</title><rect x="498" y="436" width="4" height="15" fill="rgb(233,215,25)"/><text x="501.00" y="446.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:171) (1 samples, 0.30%)</title><rect x="498" y="452" width="4" height="15" fill="rgb(222,178,37)"/><text x="501.00" y="462.50"></text></g><g><title>0x7fbc355f36a5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="502" y="356" width="3" height="15" fill="rgb(248,9,27)"/><text x="505.00" y="366.50"></text></g><g><title>0x7fbc355f36aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.59%)</title><rect x="505" y="356" width="7" height="15" fill="rgb(233,113,19)"/><text x="508.00" y="366.50"></text></g><g><title>0x7fbc355f36ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.89%)</title><rect x="512" y="356" width="11" height="15" fill="rgb(210,107,45)"/><text x="515.00" y="366.50"></text></g><g><title>0x7fbc355f36b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="523" y="356" width="3" height="15" fill="rgb(223,75,29)"/><text x="526.00" y="366.50"></text></g><g><title>0x7fbc355f36c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="526" y="356" width="4" height="15" fill="rgb(216,118,26)"/><text x="529.00" y="366.50"></text></g><g><title>0x7fbc355f37a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="530" y="356" width="3" height="15" fill="rgb(252,124,38)"/><text x="533.00" y="366.50"></text></g><g><title>0x7fbc355f37b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="533" y="356" width="4" height="15" fill="rgb(205,70,20)"/><text x="536.00" y="366.50"></text></g><g><title>0x7fbc355f387d (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="537" y="356" width="3" height="15" fill="rgb(212,23,21)"/><text x="540.00" y="366.50"></text></g><g><title>0x7fbc355f38c3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="540" y="356" width="4" height="15" fill="rgb(224,223,15)"/><text x="543.00" y="366.50"></text></g><g><title>0x7fbc355c8880 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="544" y="372" width="3" height="15" fill="rgb(216,74,54)"/><text x="547.00" y="382.50"></text></g><g><title>0x7fbc355f392f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.59%)</title><rect x="544" y="356" width="7" height="15" fill="rgb(209,59,27)"/><text x="547.00" y="366.50"></text></g><g><title>0x7fbc355c88a1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="547" y="372" width="4" height="15" fill="rgb(250,84,51)"/><text x="550.00" y="382.50"></text></g><g><title>0x7fbc355cb529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="551" y="372" width="3" height="15" fill="rgb(213,54,45)"/><text x="554.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.30%)</title><rect x="551" y="388" width="3" height="15" fill="rgb(253,126,20)"/><text x="554.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.30%)</title><rect x="551" y="404" width="3" height="15" fill="rgb(241,185,3)"/><text x="554.00" y="414.50"></text></g><g><title>0x7fbc355f4405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (26 samples, 7.69%)</title><rect x="467" y="340" width="91" height="15" fill="rgb(217,34,19)"/><text x="470.00" y="350.50">0x7fbc355f..</text></g><g><title>0x7fbc355f3c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.59%)</title><rect x="551" y="356" width="7" height="15" fill="rgb(207,72,37)"/><text x="554.00" y="366.50"></text></g><g><title>0x7fbc355cb543 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="554" y="372" width="4" height="15" fill="rgb(240,176,1)"/><text x="557.00" y="382.50"></text></g><g><title>0x7fbc355e4fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (28 samples, 8.28%)</title><rect x="467" y="324" width="98" height="15" fill="rgb(212,38,43)"/><text x="470.00" y="334.50">0x7fbc355e4..</text></g><g><title>0x7fbc355f4540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.59%)</title><rect x="558" y="340" width="7" height="15" fill="rgb(238,62,10)"/><text x="561.00" y="350.50"></text></g><g><title>0x7fbc355c92f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.59%)</title><rect x="558" y="356" width="7" height="15" fill="rgb(245,208,42)"/><text x="561.00" y="366.50"></text></g><g><title>0x7fbc355c8530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.59%)</title><rect x="558" y="372" width="7" height="15" fill="rgb(243,171,20)"/><text x="561.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (2 samples, 0.59%)</title><rect x="558" y="388" width="7" height="15" fill="rgb(242,36,38)"/><text x="561.00" y="398.50"></text></g><g><title>0x7fbc5bbb7776 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="565" y="356" width="3" height="15" fill="rgb(240,11,6)"/><text x="568.00" y="366.50"></text></g><g><title>0x7fbc5bbb777f (libc-2.29.so) (1 samples, 0.30%)</title><rect x="568" y="356" width="4" height="15" fill="rgb(252,95,10)"/><text x="571.00" y="366.50"></text></g><g><title>array_take (methods.c:138) (3 samples, 0.89%)</title><rect x="565" y="340" width="10" height="15" fill="rgb(238,46,51)"/><text x="568.00" y="350.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.30%)</title><rect x="572" y="356" width="3" height="15" fill="rgb(248,219,42)"/><text x="575.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3954) (1 samples, 0.30%)</title><rect x="575" y="372" width="4" height="15" fill="rgb(245,19,22)"/><text x="578.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.59%)</title><rect x="575" y="356" width="7" height="15" fill="rgb(230,89,37)"/><text x="578.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3957) (1 samples, 0.30%)</title><rect x="579" y="372" width="3" height="15" fill="rgb(214,97,24)"/><text x="582.00" y="382.50"></text></g><g><title>0x7fbc355e505a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.78%)</title><rect x="565" y="324" width="21" height="15" fill="rgb(205,213,18)"/><text x="568.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (3 samples, 0.89%)</title><rect x="575" y="340" width="11" height="15" fill="rgb(227,177,54)"/><text x="578.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.30%)</title><rect x="582" y="356" width="4" height="15" fill="rgb(218,123,48)"/><text x="585.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.30%)</title><rect x="582" y="372" width="4" height="15" fill="rgb(252,45,9)"/><text x="585.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.30%)</title><rect x="582" y="388" width="4" height="15" fill="rgb(210,15,49)"/><text x="585.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.30%)</title><rect x="582" y="404" width="4" height="15" fill="rgb(250,180,23)"/><text x="585.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.30%)</title><rect x="582" y="420" width="4" height="15" fill="rgb(229,102,29)"/><text x="585.00" y="430.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.30%)</title><rect x="582" y="436" width="4" height="15" fill="rgb(230,41,15)"/><text x="585.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="582" y="452" width="4" height="15" fill="rgb(224,158,24)"/><text x="585.00" y="462.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.30%)</title><rect x="589" y="372" width="4" height="15" fill="rgb(224,112,25)"/><text x="592.00" y="382.50"></text></g><g><title>0x7fbc355e514f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.89%)</title><rect x="586" y="324" width="10" height="15" fill="rgb(244,62,46)"/><text x="589.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.59%)</title><rect x="589" y="340" width="7" height="15" fill="rgb(234,173,5)"/><text x="592.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.59%)</title><rect x="589" y="356" width="7" height="15" fill="rgb(214,146,42)"/><text x="592.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.30%)</title><rect x="593" y="372" width="3" height="15" fill="rgb(232,173,8)"/><text x="596.00" y="382.50"></text></g><g><title>0x7fbc355e518f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="596" y="324" width="4" height="15" fill="rgb(238,221,15)"/><text x="599.00" y="334.50"></text></g><g><title>0x7fbc355e51bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="600" y="324" width="3" height="15" fill="rgb(232,119,17)"/><text x="603.00" y="334.50"></text></g><g><title>array_shape_get (getset.c:42) (1 samples, 0.30%)</title><rect x="600" y="340" width="3" height="15" fill="rgb(209,165,50)"/><text x="603.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (41 samples, 12.13%)</title><rect x="463" y="292" width="143" height="15" fill="rgb(229,109,19)"/><text x="466.00" y="302.50">predict (sklearn/t..</text></g><g><title>0x7fbc355e5d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (41 samples, 12.13%)</title><rect x="463" y="308" width="143" height="15" fill="rgb(249,18,54)"/><text x="466.00" y="318.50">0x7fbc355e5d2e (sk..</text></g><g><title>0x7fbc355e529d (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="603" y="324" width="3" height="15" fill="rgb(215,63,21)"/><text x="606.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:421) (1 samples, 0.30%)</title><rect x="606" y="292" width="4" height="15" fill="rgb(224,90,5)"/><text x="609.00" y="302.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (60 samples, 17.75%)</title><rect x="407" y="276" width="210" height="15" fill="rgb(208,163,35)"/><text x="410.00" y="286.50">_accumulate_prediction (skl..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (2 samples, 0.59%)</title><rect x="610" y="292" width="7" height="15" fill="rgb(218,5,30)"/><text x="613.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.30%)</title><rect x="613" y="308" width="4" height="15" fill="rgb(227,90,36)"/><text x="616.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.30%)</title><rect x="613" y="324" width="4" height="15" fill="rgb(249,53,7)"/><text x="616.00" y="334.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (3 samples, 0.89%)</title><rect x="617" y="276" width="10" height="15" fill="rgb(244,204,30)"/><text x="620.00" y="286.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.59%)</title><rect x="620" y="292" width="7" height="15" fill="rgb(232,218,42)"/><text x="623.00" y="302.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (2 samples, 0.59%)</title><rect x="620" y="308" width="7" height="15" fill="rgb(214,45,27)"/><text x="623.00" y="318.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (2 samples, 0.59%)</title><rect x="620" y="324" width="7" height="15" fill="rgb(241,183,46)"/><text x="623.00" y="334.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:451) (1 samples, 0.30%)</title><rect x="627" y="276" width="4" height="15" fill="rgb(234,200,5)"/><text x="630.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1380) (1 samples, 0.30%)</title><rect x="641" y="340" width="4" height="15" fill="rgb(211,26,46)"/><text x="644.00" y="350.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (5 samples, 1.48%)</title><rect x="631" y="276" width="17" height="15" fill="rgb(208,62,28)"/><text x="634.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.59%)</title><rect x="641" y="292" width="7" height="15" fill="rgb(245,34,44)"/><text x="644.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.59%)</title><rect x="641" y="308" width="7" height="15" fill="rgb(242,203,27)"/><text x="644.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.59%)</title><rect x="641" y="324" width="7" height="15" fill="rgb(253,4,3)"/><text x="644.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.30%)</title><rect x="645" y="340" width="3" height="15" fill="rgb(251,176,6)"/><text x="648.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.30%)</title><rect x="645" y="356" width="3" height="15" fill="rgb(242,118,36)"/><text x="648.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.30%)</title><rect x="645" y="372" width="3" height="15" fill="rgb(228,105,43)"/><text x="648.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.30%)</title><rect x="645" y="388" width="3" height="15" fill="rgb(208,76,5)"/><text x="648.00" y="398.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.30%)</title><rect x="645" y="404" width="3" height="15" fill="rgb(246,54,13)"/><text x="648.00" y="414.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (70 samples, 20.71%)</title><rect x="407" y="260" width="245" height="15" fill="rgb(240,3,26)"/><text x="410.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:2..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:455) (1 samples, 0.30%)</title><rect x="648" y="276" width="4" height="15" fill="rgb(209,117,33)"/><text x="651.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (78 samples, 23.08%)</title><rect x="383" y="212" width="272" height="15" fill="rgb(233,206,49)"/><text x="386.00" y="222.50">apply_async (joblib/_parallel_backen..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (78 samples, 23.08%)</title><rect x="383" y="228" width="272" height="15" fill="rgb(217,178,43)"/><text x="386.00" y="238.50">__init__ (joblib/_parallel_backends...</text></g><g><title>__call__ (joblib/parallel.py:256) (73 samples, 21.60%)</title><rect x="401" y="244" width="254" height="15" fill="rgb(224,224,32)"/><text x="404.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (1 samples, 0.30%)</title><rect x="652" y="260" width="3" height="15" fill="rgb(215,72,10)"/><text x="655.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:219) (1 samples, 0.30%)</title><rect x="652" y="276" width="3" height="15" fill="rgb(239,132,50)"/><text x="655.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:202) (1 samples, 0.30%)</title><rect x="655" y="212" width="4" height="15" fill="rgb(220,116,31)"/><text x="658.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (81 samples, 23.96%)</title><rect x="380" y="196" width="282" height="15" fill="rgb(254,80,33)"/><text x="383.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (1 samples, 0.30%)</title><rect x="659" y="212" width="3" height="15" fill="rgb(226,121,21)"/><text x="662.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (1 samples, 0.30%)</title><rect x="659" y="228" width="3" height="15" fill="rgb(213,3,33)"/><text x="662.00" y="238.50"></text></g><g><title>0x7ffcce7dbeb0 (?) (1 samples, 0.30%)</title><rect x="659" y="244" width="3" height="15" fill="rgb(205,117,5)"/><text x="662.00" y="254.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.30%)</title><rect x="659" y="260" width="3" height="15" fill="rgb(216,179,39)"/><text x="662.00" y="270.50"></text></g><g><title>0x7ffcce7fc941 ([vdso]) (1 samples, 0.30%)</title><rect x="659" y="276" width="3" height="15" fill="rgb(216,84,39)"/><text x="662.00" y="286.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (90 samples, 26.63%)</title><rect x="355" y="180" width="314" height="15" fill="rgb(217,77,27)"/><text x="358.00" y="190.50">dispatch_one_batch (joblib/parallel.py:834)</text></g><g><title>_dispatch (joblib/parallel.py:758) (2 samples, 0.59%)</title><rect x="662" y="196" width="7" height="15" fill="rgb(251,124,39)"/><text x="665.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (149 samples, 44.08%)</title><rect x="156" y="164" width="520" height="15" fill="rgb(215,3,11)"/><text x="159.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:835) (2 samples, 0.59%)</title><rect x="669" y="180" width="7" height="15" fill="rgb(252,34,17)"/><text x="672.00" y="190.50"></text></g><g><title>__call__ (joblib/parallel.py:1015) (1 samples, 0.30%)</title><rect x="676" y="164" width="4" height="15" fill="rgb(247,125,23)"/><text x="679.00" y="174.50"></text></g><g><title>helper (contextlib.py:239) (1 samples, 0.30%)</title><rect x="676" y="180" width="4" height="15" fill="rgb(211,6,21)"/><text x="679.00" y="190.50"></text></g><g><title>__init__ (contextlib.py:82) (1 samples, 0.30%)</title><rect x="676" y="196" width="4" height="15" fill="rgb(237,47,37)"/><text x="679.00" y="206.50"></text></g><g><title>retrieve (joblib/parallel.py:903) (1 samples, 0.30%)</title><rect x="680" y="180" width="3" height="15" fill="rgb(228,220,1)"/><text x="683.00" y="190.50"></text></g><g><title>retrieve (joblib/parallel.py:907) (2 samples, 0.59%)</title><rect x="683" y="180" width="7" height="15" fill="rgb(239,5,49)"/><text x="686.00" y="190.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (155 samples, 45.86%)</title><rect x="153" y="148" width="541" height="15" fill="rgb(226,10,53)"/><text x="156.00" y="158.50">predict (sklearn/ensemble/_forest.py:782)</text></g><g><title>__call__ (joblib/parallel.py:1016) (4 samples, 1.18%)</title><rect x="680" y="164" width="14" height="15" fill="rgb(205,200,4)"/><text x="683.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:910) (1 samples, 0.30%)</title><rect x="690" y="180" width="4" height="15" fill="rgb(222,178,51)"/><text x="693.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:54) (161 samples, 47.63%)</title><rect x="135" y="52" width="562" height="15" fill="rgb(207,43,25)"/><text x="138.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:54)</text></g><g><title>profile_skl (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:53) (161 samples, 47.63%)</title><rect x="135" y="68" width="562" height="15" fill="rgb(228,18,27)"/><text x="138.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:53)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:37) (160 samples, 47.34%)</title><rect x="139" y="84" width="558" height="15" fill="rgb(208,207,30)"/><text x="142.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py..</text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:31) (160 samples, 47.34%)</title><rect x="139" y="100" width="558" height="15" fill="rgb(218,86,10)"/><text x="142.00" y="110.50">profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (160 samples, 47.34%)</title><rect x="139" y="116" width="558" height="15" fill="rgb(211,137,0)"/><text x="142.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (160 samples, 47.34%)</title><rect x="139" y="132" width="558" height="15" fill="rgb(205,114,2)"/><text x="142.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/ensemble/_forest.py:784) (1 samples, 0.30%)</title><rect x="694" y="148" width="3" height="15" fill="rgb(224,125,34)"/><text x="697.00" y="158.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.30%)</title><rect x="694" y="164" width="3" height="15" fill="rgb(226,31,16)"/><text x="697.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.30%)</title><rect x="694" y="180" width="3" height="15" fill="rgb(225,35,40)"/><text x="697.00" y="190.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.30%)</title><rect x="694" y="196" width="3" height="15" fill="rgb(231,125,25)"/><text x="697.00" y="206.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.30%)</title><rect x="694" y="212" width="3" height="15" fill="rgb(247,204,4)"/><text x="697.00" y="222.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.30%)</title><rect x="694" y="228" width="3" height="15" fill="rgb(215,164,36)"/><text x="697.00" y="238.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:936) (1 samples, 0.30%)</title><rect x="694" y="244" width="3" height="15" fill="rgb(247,24,18)"/><text x="697.00" y="254.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c:1594) (1 samples, 0.30%)</title><rect x="694" y="260" width="3" height="15" fill="rgb(246,124,17)"/><text x="697.00" y="270.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:167) (1 samples, 0.30%)</title><rect x="697" y="212" width="4" height="15" fill="rgb(242,188,38)"/><text x="700.00" y="222.50"></text></g><g><title>0x7fbc355d352c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="697" y="228" width="4" height="15" fill="rgb(238,29,9)"/><text x="700.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.30%)</title><rect x="697" y="244" width="4" height="15" fill="rgb(210,121,29)"/><text x="700.00" y="254.50"></text></g><g><title>prepare_index (mapping.c:376) (1 samples, 0.30%)</title><rect x="697" y="260" width="4" height="15" fill="rgb(230,199,35)"/><text x="700.00" y="270.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:36) (2 samples, 0.59%)</title><rect x="697" y="84" width="7" height="15" fill="rgb(249,203,36)"/><text x="700.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.59%)</title><rect x="697" y="100" width="7" height="15" fill="rgb(230,15,41)"/><text x="700.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (2 samples, 0.59%)</title><rect x="697" y="116" width="7" height="15" fill="rgb(218,75,23)"/><text x="700.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.59%)</title><rect x="697" y="132" width="7" height="15" fill="rgb(234,140,17)"/><text x="700.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.59%)</title><rect x="697" y="148" width="7" height="15" fill="rgb(206,150,32)"/><text x="700.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.59%)</title><rect x="697" y="164" width="7" height="15" fill="rgb(238,206,36)"/><text x="700.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.59%)</title><rect x="697" y="180" width="7" height="15" fill="rgb(220,43,3)"/><text x="700.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py:139) (2 samples, 0.59%)</title><rect x="697" y="196" width="7" height="15" fill="rgb(217,126,9)"/><text x="700.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.30%)</title><rect x="701" y="212" width="3" height="15" fill="rgb(240,164,36)"/><text x="704.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:123) (1 samples, 0.30%)</title><rect x="701" y="228" width="3" height="15" fill="rgb(216,29,22)"/><text x="704.00" y="238.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py:94) (1 samples, 0.30%)</title><rect x="701" y="244" width="3" height="15" fill="rgb(233,7,22)"/><text x="704.00" y="254.50"></text></g><g><title>float_subtract (scalarmath.c.src:910) (1 samples, 0.30%)</title><rect x="701" y="260" width="3" height="15" fill="rgb(220,90,16)"/><text x="704.00" y="270.50"></text></g><g><title>array_subtract (number.c:342) (1 samples, 0.30%)</title><rect x="701" y="276" width="3" height="15" fill="rgb(211,48,20)"/><text x="704.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.30%)</title><rect x="701" y="292" width="3" height="15" fill="rgb(224,117,7)"/><text x="704.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.30%)</title><rect x="701" y="308" width="3" height="15" fill="rgb(224,84,43)"/><text x="704.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.30%)</title><rect x="701" y="324" width="3" height="15" fill="rgb(223,163,25)"/><text x="704.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.30%)</title><rect x="701" y="340" width="3" height="15" fill="rgb(209,86,35)"/><text x="704.00" y="350.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.30%)</title><rect x="701" y="356" width="3" height="15" fill="rgb(221,94,27)"/><text x="704.00" y="366.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.30%)</title><rect x="701" y="372" width="3" height="15" fill="rgb(229,13,1)"/><text x="704.00" y="382.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.30%)</title><rect x="701" y="388" width="3" height="15" fill="rgb(223,130,3)"/><text x="704.00" y="398.50"></text></g><g><title>0x7fbc1c67a54f (?) (1 samples, 0.30%)</title><rect x="704" y="244" width="4" height="15" fill="rgb(249,79,8)"/><text x="707.00" y="254.50"></text></g><g><title>0x7fbc1c68065e (?) (1 samples, 0.30%)</title><rect x="704" y="260" width="4" height="15" fill="rgb(227,98,40)"/><text x="707.00" y="270.50"></text></g><g><title>0x7fbc1c68050f (?) (1 samples, 0.30%)</title><rect x="704" y="276" width="4" height="15" fill="rgb(213,115,17)"/><text x="707.00" y="286.50"></text></g><g><title>0x7fbc1c686d6c (?) (1 samples, 0.30%)</title><rect x="704" y="292" width="4" height="15" fill="rgb(248,113,51)"/><text x="707.00" y="302.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.30%)</title><rect x="704" y="308" width="4" height="15" fill="rgb(236,114,36)"/><text x="707.00" y="318.50"></text></g><g><title>0x7fbc1c66b27c (?) (1 samples, 0.30%)</title><rect x="704" y="324" width="4" height="15" fill="rgb(254,28,26)"/><text x="707.00" y="334.50"></text></g><g><title>0x7fbc1c66ae33 (?) (1 samples, 0.30%)</title><rect x="704" y="340" width="4" height="15" fill="rgb(248,209,33)"/><text x="707.00" y="350.50"></text></g><g><title>0x7fbc25b67ab9 (libgomp.so.1.0.0) (1 samples, 0.30%)</title><rect x="708" y="468" width="3" height="15" fill="rgb(219,166,51)"/><text x="711.00" y="478.50"></text></g><g><title>0x7fbc25b68eab (libgomp.so.1.0.0) (1 samples, 0.30%)</title><rect x="708" y="484" width="3" height="15" fill="rgb(236,43,27)"/><text x="711.00" y="494.50"></text></g><g><title>0x7fbc25b66daa (libgomp.so.1.0.0) (1 samples, 0.30%)</title><rect x="711" y="484" width="4" height="15" fill="rgb(254,19,7)"/><text x="714.00" y="494.50"></text></g><g><title>0x7fbc25b68cfb (libgomp.so.1.0.0) (1 samples, 0.30%)</title><rect x="711" y="500" width="4" height="15" fill="rgb(212,114,41)"/><text x="714.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:473) (5 samples, 1.48%)</title><rect x="722" y="516" width="17" height="15" fill="rgb(241,98,34)"/><text x="725.00" y="526.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:552) (1 samples, 0.30%)</title><rect x="739" y="516" width="4" height="15" fill="rgb(228,42,48)"/><text x="742.00" y="526.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h:1309) (1 samples, 0.30%)</title><rect x="743" y="548" width="3" height="15" fill="rgb(206,188,5)"/><text x="746.00" y="558.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h:623) (1 samples, 0.30%)</title><rect x="743" y="564" width="3" height="15" fill="rgb(207,151,16)"/><text x="746.00" y="574.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h:1171) (1 samples, 0.30%)</title><rect x="743" y="580" width="3" height="15" fill="rgb(231,115,43)"/><text x="746.00" y="590.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h:446) (1 samples, 0.30%)</title><rect x="743" y="596" width="3" height="15" fill="rgb(213,212,9)"/><text x="746.00" y="606.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1413) (2 samples, 0.59%)</title><rect x="746" y="580" width="7" height="15" fill="rgb(212,106,15)"/><text x="749.00" y="590.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1417) (1 samples, 0.30%)</title><rect x="753" y="580" width="4" height="15" fill="rgb(214,99,4)"/><text x="756.00" y="590.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:554) (6 samples, 1.78%)</title><rect x="743" y="516" width="21" height="15" fill="rgb(252,211,0)"/><text x="746.00" y="526.50"></text></g><g><title>std::unordered_map&lt;long, unsigned long, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt; &gt;::find (unordered_map.h:855) (6 samples, 1.78%)</title><rect x="743" y="532" width="21" height="15" fill="rgb(242,6,51)"/><text x="746.00" y="542.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h:1310) (5 samples, 1.48%)</title><rect x="746" y="548" width="18" height="15" fill="rgb(226,142,17)"/><text x="749.00" y="558.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (hashtable.h:634) (5 samples, 1.48%)</title><rect x="746" y="564" width="18" height="15" fill="rgb(224,77,43)"/><text x="749.00" y="574.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1420) (2 samples, 0.59%)</title><rect x="757" y="580" width="7" height="15" fill="rgb(220,15,49)"/><text x="760.00" y="590.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:560) (1 samples, 0.30%)</title><rect x="764" y="516" width="3" height="15" fill="rgb(224,29,37)"/><text x="767.00" y="526.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:61) (22 samples, 6.51%)</title><rect x="697" y="52" width="77" height="15" fill="rgb(222,198,16)"/><text x="700.00" y="62.50">&lt;module&gt;..</text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:60) (22 samples, 6.51%)</title><rect x="697" y="68" width="77" height="15" fill="rgb(231,188,54)"/><text x="700.00" y="78.50">profile_..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:37) (20 samples, 5.92%)</title><rect x="704" y="84" width="70" height="15" fill="rgb(221,153,20)"/><text x="707.00" y="94.50">setup_p..</text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:31) (20 samples, 5.92%)</title><rect x="704" y="100" width="70" height="15" fill="rgb(226,221,38)"/><text x="707.00" y="110.50">profile..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (20 samples, 5.92%)</title><rect x="704" y="116" width="70" height="15" fill="rgb(228,134,17)"/><text x="707.00" y="126.50">time_pr..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (20 samples, 5.92%)</title><rect x="704" y="132" width="70" height="15" fill="rgb(225,204,30)"/><text x="707.00" y="142.50">&lt;lambda..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (20 samples, 5.92%)</title><rect x="704" y="148" width="70" height="15" fill="rgb(210,36,25)"/><text x="707.00" y="158.50">run (ml..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (20 samples, 5.92%)</title><rect x="704" y="164" width="70" height="15" fill="rgb(233,138,1)"/><text x="707.00" y="174.50">_run_se..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (20 samples, 5.92%)</title><rect x="704" y="180" width="70" height="15" fill="rgb(238,210,45)"/><text x="707.00" y="190.50">run (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (20 samples, 5.92%)</title><rect x="704" y="196" width="70" height="15" fill="rgb(253,195,2)"/><text x="707.00" y="206.50">run (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (20 samples, 5.92%)</title><rect x="704" y="212" width="70" height="15" fill="rgb(227,27,14)"/><text x="707.00" y="222.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (20 samples, 5.92%)</title><rect x="704" y="228" width="70" height="15" fill="rgb(238,52,25)"/><text x="707.00" y="238.50">_run (m..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (19 samples, 5.62%)</title><rect x="708" y="244" width="66" height="15" fill="rgb(248,204,18)"/><text x="711.00" y="254.50">pybind1..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (19 samples, 5.62%)</title><rect x="708" y="260" width="66" height="15" fill="rgb(248,150,28)"/><text x="711.00" y="270.50">void py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (19 samples, 5.62%)</title><rect x="708" y="276" width="66" height="15" fill="rgb(235,45,17)"/><text x="711.00" y="286.50">void py..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (19 samples, 5.62%)</title><rect x="708" y="292" width="66" height="15" fill="rgb(210,29,26)"/><text x="711.00" y="302.50">pybind1..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (19 samples, 5.62%)</title><rect x="708" y="308" width="66" height="15" fill="rgb(218,121,42)"/><text x="711.00" y="318.50">pybind1..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (19 samples, 5.62%)</title><rect x="708" y="324" width="66" height="15" fill="rgb(246,84,5)"/><text x="711.00" y="334.50">pybind1..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (19 samples, 5.62%)</title><rect x="708" y="340" width="66" height="15" fill="rgb(247,209,13)"/><text x="711.00" y="350.50">pybind1..</text></g><g><title>pybind11::array::~array (numpy.h:538) (19 samples, 5.62%)</title><rect x="708" y="356" width="66" height="15" fill="rgb(222,20,15)"/><text x="711.00" y="366.50">pybind1..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (19 samples, 5.62%)</title><rect x="708" y="372" width="66" height="15" fill="rgb(251,224,41)"/><text x="711.00" y="382.50">pybind1..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (19 samples, 5.62%)</title><rect x="708" y="388" width="66" height="15" fill="rgb(225,128,39)"/><text x="711.00" y="398.50">pybind1..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (19 samples, 5.62%)</title><rect x="708" y="404" width="66" height="15" fill="rgb(233,28,45)"/><text x="711.00" y="414.50">pybind1..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (19 samples, 5.62%)</title><rect x="708" y="420" width="66" height="15" fill="rgb(240,97,46)"/><text x="711.00" y="430.50">Runtime..</text></g><g><title>pybind11::array::size (numpy.h:619) (19 samples, 5.62%)</title><rect x="708" y="436" width="66" height="15" fill="rgb(238,21,2)"/><text x="711.00" y="446.50">pybind1..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (19 samples, 5.62%)</title><rect x="708" y="452" width="66" height="15" fill="rgb(244,125,43)"/><text x="711.00" y="462.50">std::ac..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (18 samples, 5.33%)</title><rect x="711" y="468" width="63" height="15" fill="rgb(222,6,45)"/><text x="714.00" y="478.50">GOMP_p..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:371) (17 samples, 5.03%)</title><rect x="715" y="484" width="59" height="15" fill="rgb(254,180,0)"/><text x="718.00" y="494.50">Runtim..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (17 samples, 5.03%)</title><rect x="715" y="500" width="59" height="15" fill="rgb(230,20,20)"/><text x="718.00" y="510.50">std::v..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:568) (2 samples, 0.59%)</title><rect x="767" y="516" width="7" height="15" fill="rgb(251,71,10)"/><text x="770.00" y="526.50"></text></g><g><title>0x7fbc1bbdfff9 (?) (1 samples, 0.30%)</title><rect x="774" y="212" width="4" height="15" fill="rgb(219,15,19)"/><text x="777.00" y="222.50"></text></g><g><title>0x7fbc1bbdaef6 (?) (1 samples, 0.30%)</title><rect x="774" y="228" width="4" height="15" fill="rgb(253,13,49)"/><text x="777.00" y="238.50"></text></g><g><title>0x7fbc1bbcf962 (?) (1 samples, 0.30%)</title><rect x="774" y="244" width="4" height="15" fill="rgb(240,175,50)"/><text x="777.00" y="254.50"></text></g><g><title>0x7fbc1bc037a7 (?) (1 samples, 0.30%)</title><rect x="774" y="260" width="4" height="15" fill="rgb(231,147,42)"/><text x="777.00" y="270.50"></text></g><g><title>0x7fbc1bc03379 (?) (1 samples, 0.30%)</title><rect x="774" y="276" width="4" height="15" fill="rgb(241,169,16)"/><text x="777.00" y="286.50"></text></g><g><title>0x7fbc1c0618b8 (?) (1 samples, 0.30%)</title><rect x="774" y="292" width="4" height="15" fill="rgb(249,34,53)"/><text x="777.00" y="302.50"></text></g><g><title>0x7fbc1c05fc7f (?) (1 samples, 0.30%)</title><rect x="774" y="308" width="4" height="15" fill="rgb(221,51,30)"/><text x="777.00" y="318.50"></text></g><g><title>0x7fbc1c07299c (?) (1 samples, 0.30%)</title><rect x="774" y="324" width="4" height="15" fill="rgb(212,109,19)"/><text x="777.00" y="334.50"></text></g><g><title>0x7fbc1bd99dc2 (?) (1 samples, 0.30%)</title><rect x="774" y="340" width="4" height="15" fill="rgb(248,208,20)"/><text x="777.00" y="350.50"></text></g><g><title>0x7fbc1bd995fd (?) (1 samples, 0.30%)</title><rect x="774" y="356" width="4" height="15" fill="rgb(233,25,42)"/><text x="777.00" y="366.50"></text></g><g><title>0x7fbc5bba1a38 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="788" y="356" width="4" height="15" fill="rgb(216,129,8)"/><text x="791.00" y="366.50"></text></g><g><title>all (338 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(248,154,25)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:68) (119 samples, 35.21%)</title><rect x="774" y="52" width="416" height="15" fill="rgb(240,41,42)"/><text x="777.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000..</text></g><g><title>profile_ort (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:67) (119 samples, 35.21%)</title><rect x="774" y="68" width="416" height="15" fill="rgb(247,227,48)"/><text x="777.00" y="78.50">profile_ort (bench_RandomForestRegressor_default_b_reg_1..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:37) (119 samples, 35.21%)</title><rect x="774" y="84" width="416" height="15" fill="rgb(250,5,33)"/><text x="777.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_b_reg..</text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py:31) (119 samples, 35.21%)</title><rect x="774" y="100" width="416" height="15" fill="rgb(242,80,38)"/><text x="777.00" y="110.50">profile (bench_RandomForestRegressor_default_b_reg_1000_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (119 samples, 35.21%)</title><rect x="774" y="116" width="416" height="15" fill="rgb(232,98,42)"/><text x="777.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (119 samples, 35.21%)</title><rect x="774" y="132" width="416" height="15" fill="rgb(218,229,19)"/><text x="777.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (119 samples, 35.21%)</title><rect x="774" y="148" width="416" height="15" fill="rgb(226,66,16)"/><text x="777.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (119 samples, 35.21%)</title><rect x="774" y="164" width="416" height="15" fill="rgb(230,172,25)"/><text x="777.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:6..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (119 samples, 35.21%)</title><rect x="774" y="180" width="416" height="15" fill="rgb(247,195,25)"/><text x="777.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (119 samples, 35.21%)</title><rect x="774" y="196" width="416" height="15" fill="rgb(214,166,30)"/><text x="777.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (118 samples, 34.91%)</title><rect x="778" y="212" width="412" height="15" fill="rgb(214,22,33)"/><text x="781.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onn..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (118 samples, 34.91%)</title><rect x="778" y="228" width="412" height="15" fill="rgb(246,208,28)"/><text x="781.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::pyt..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (118 samples, 34.91%)</title><rect x="778" y="244" width="412" height="15" fill="rgb(226,177,35)"/><text x="781.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 34.62%)</title><rect x="781" y="260" width="409" height="15" fill="rgb(242,129,3)"/><text x="784.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 34.62%)</title><rect x="781" y="276" width="409" height="15" fill="rgb(234,133,45)"/><text x="784.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/on..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 34.62%)</title><rect x="781" y="292" width="409" height="15" fill="rgb(209,80,4)"/><text x="784.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 34.62%)</title><rect x="781" y="308" width="409" height="15" fill="rgb(222,54,27)"/><text x="784.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 34.62%)</title><rect x="781" y="324" width="409" height="15" fill="rgb(239,179,45)"/><text x="784.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/c..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 34.62%)</title><rect x="781" y="340" width="409" height="15" fill="rgb(222,80,7)"/><text x="784.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute ..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (114 samples, 33.73%)</title><rect x="792" y="356" width="398" height="15" fill="rgb(234,74,33)"/><text x="795.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Process..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1186" y="372" width="4" height="15" fill="rgb(232,219,52)"/><text x="1189.00" y="382.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1186" y="388" width="4" height="15" fill="rgb(252,60,40)"/><text x="1189.00" y="398.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1186" y="404" width="4" height="15" fill="rgb(244,163,27)"/><text x="1189.00" y="414.50"></text></g><g><title>0x7fbc5bbc2120 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1186" y="420" width="4" height="15" fill="rgb(241,137,38)"/><text x="1189.00" y="430.50"></text></g></g></svg>