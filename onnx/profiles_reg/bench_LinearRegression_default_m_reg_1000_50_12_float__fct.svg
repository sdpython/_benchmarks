<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2150" onload="init(evt)" viewBox="0 0 1200 2150" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2150" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2133.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2133.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.36%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(209,206,25)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.36%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(211,87,30)"/><text x="13.00" y="894.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.36%)</title><rect x="14" y="868" width="4" height="15" fill="rgb(251,51,1)"/><text x="17.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.36%)</title><rect x="14" y="884" width="4" height="15" fill="rgb(242,21,34)"/><text x="17.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.36%)</title><rect x="14" y="900" width="4" height="15" fill="rgb(224,152,36)"/><text x="17.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.36%)</title><rect x="14" y="916" width="4" height="15" fill="rgb(245,0,23)"/><text x="17.00" y="926.50"></text></g><g><title>safe_listdir (pkg_resources/__init__.py) (1 samples, 0.36%)</title><rect x="14" y="932" width="4" height="15" fill="rgb(227,1,1)"/><text x="17.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.36%)</title><rect x="14" y="948" width="4" height="15" fill="rgb(231,18,32)"/><text x="17.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="14" y="964" width="4" height="15" fill="rgb(232,123,48)"/><text x="17.00" y="974.50"></text></g><g><title>0x7f67fcf05237 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="14" y="980" width="4" height="15" fill="rgb(252,202,5)"/><text x="17.00" y="990.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.36%)</title><rect x="18" y="884" width="4" height="15" fill="rgb(251,159,3)"/><text x="21.00" y="894.50"></text></g><g><title>key (pkg_resources/__init__.py) (1 samples, 0.36%)</title><rect x="18" y="900" width="4" height="15" fill="rgb(233,1,41)"/><text x="21.00" y="910.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.45%)</title><rect x="10" y="484" width="17" height="15" fill="rgb(210,90,39)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="10" y="500" width="17" height="15" fill="rgb(219,212,12)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="10" y="516" width="17" height="15" fill="rgb(208,28,1)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="10" y="532" width="17" height="15" fill="rgb(215,30,51)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.45%)</title><rect x="10" y="548" width="17" height="15" fill="rgb(252,101,31)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="10" y="564" width="17" height="15" fill="rgb(242,207,17)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.45%)</title><rect x="10" y="580" width="17" height="15" fill="rgb(243,122,22)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="10" y="596" width="17" height="15" fill="rgb(222,23,52)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="10" y="612" width="17" height="15" fill="rgb(243,117,26)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="10" y="628" width="17" height="15" fill="rgb(209,174,36)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="10" y="644" width="17" height="15" fill="rgb(236,183,54)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="10" y="660" width="17" height="15" fill="rgb(212,141,47)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="10" y="676" width="17" height="15" fill="rgb(228,55,6)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.45%)</title><rect x="10" y="692" width="17" height="15" fill="rgb(220,2,27)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="10" y="708" width="17" height="15" fill="rgb(226,70,49)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.45%)</title><rect x="10" y="724" width="17" height="15" fill="rgb(217,107,31)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="10" y="740" width="17" height="15" fill="rgb(243,95,52)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="10" y="756" width="17" height="15" fill="rgb(252,6,9)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="10" y="772" width="17" height="15" fill="rgb(253,78,46)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.45%)</title><rect x="10" y="788" width="17" height="15" fill="rgb(237,190,5)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="10" y="804" width="17" height="15" fill="rgb(244,153,20)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.45%)</title><rect x="10" y="820" width="17" height="15" fill="rgb(230,81,51)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.45%)</title><rect x="10" y="836" width="17" height="15" fill="rgb(209,46,12)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.45%)</title><rect x="10" y="852" width="17" height="15" fill="rgb(254,81,22)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.72%)</title><rect x="18" y="868" width="9" height="15" fill="rgb(237,223,35)"/><text x="21.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.36%)</title><rect x="22" y="884" width="5" height="15" fill="rgb(234,68,47)"/><text x="25.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.36%)</title><rect x="22" y="900" width="5" height="15" fill="rgb(247,37,28)"/><text x="25.00" y="910.50"></text></g><g><title>basename (posixpath.py) (1 samples, 0.36%)</title><rect x="22" y="916" width="5" height="15" fill="rgb(254,112,51)"/><text x="25.00" y="926.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 1.81%)</title><rect x="10" y="292" width="21" height="15" fill="rgb(251,58,19)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.81%)</title><rect x="10" y="308" width="21" height="15" fill="rgb(245,13,11)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.81%)</title><rect x="10" y="324" width="21" height="15" fill="rgb(212,201,0)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.81%)</title><rect x="10" y="340" width="21" height="15" fill="rgb(246,12,9)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.81%)</title><rect x="10" y="356" width="21" height="15" fill="rgb(209,212,11)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.81%)</title><rect x="10" y="372" width="21" height="15" fill="rgb(217,25,14)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 1.81%)</title><rect x="10" y="388" width="21" height="15" fill="rgb(240,171,49)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.81%)</title><rect x="10" y="404" width="21" height="15" fill="rgb(208,125,54)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.81%)</title><rect x="10" y="420" width="21" height="15" fill="rgb(226,195,13)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.81%)</title><rect x="10" y="436" width="21" height="15" fill="rgb(243,192,35)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.81%)</title><rect x="10" y="452" width="21" height="15" fill="rgb(229,137,50)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.81%)</title><rect x="10" y="468" width="21" height="15" fill="rgb(245,70,9)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (typing.py) (1 samples, 0.36%)</title><rect x="27" y="484" width="4" height="15" fill="rgb(231,47,14)"/><text x="30.00" y="494.50"></text></g><g><title>IO (typing.py) (1 samples, 0.36%)</title><rect x="27" y="500" width="4" height="15" fill="rgb(206,199,19)"/><text x="30.00" y="510.50"></text></g><g><title>inner (typing.py) (1 samples, 0.36%)</title><rect x="27" y="516" width="4" height="15" fill="rgb(243,188,17)"/><text x="30.00" y="526.50"></text></g><g><title>__getitem__ (typing.py) (1 samples, 0.36%)</title><rect x="27" y="532" width="4" height="15" fill="rgb(237,10,27)"/><text x="30.00" y="542.50"></text></g><g><title>_subs_tvars (typing.py) (1 samples, 0.36%)</title><rect x="27" y="548" width="4" height="15" fill="rgb(216,1,40)"/><text x="30.00" y="558.50"></text></g><g><title>copy_with (typing.py) (1 samples, 0.36%)</title><rect x="27" y="564" width="4" height="15" fill="rgb(244,192,53)"/><text x="30.00" y="574.50"></text></g><g><title>__init__ (typing.py) (1 samples, 0.36%)</title><rect x="27" y="580" width="4" height="15" fill="rgb(245,62,45)"/><text x="30.00" y="590.50"></text></g><g><title>__setattr__ (typing.py) (1 samples, 0.36%)</title><rect x="27" y="596" width="4" height="15" fill="rgb(218,90,11)"/><text x="30.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.17%)</title><rect x="10" y="196" width="25" height="15" fill="rgb(236,13,33)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.17%)</title><rect x="10" y="212" width="25" height="15" fill="rgb(239,25,19)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.17%)</title><rect x="10" y="228" width="25" height="15" fill="rgb(240,99,51)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.17%)</title><rect x="10" y="244" width="25" height="15" fill="rgb(228,82,7)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.17%)</title><rect x="10" y="260" width="25" height="15" fill="rgb(231,10,26)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.17%)</title><rect x="10" y="276" width="25" height="15" fill="rgb(205,45,21)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.36%)</title><rect x="31" y="292" width="4" height="15" fill="rgb(218,189,17)"/><text x="34.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="308" width="4" height="15" fill="rgb(210,64,50)"/><text x="34.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="324" width="4" height="15" fill="rgb(249,71,50)"/><text x="34.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="340" width="4" height="15" fill="rgb(241,95,2)"/><text x="34.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="31" y="356" width="4" height="15" fill="rgb(245,172,2)"/><text x="34.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="372" width="4" height="15" fill="rgb(251,5,20)"/><text x="34.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.36%)</title><rect x="31" y="388" width="4" height="15" fill="rgb(247,136,39)"/><text x="34.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="404" width="4" height="15" fill="rgb(240,145,32)"/><text x="34.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="420" width="4" height="15" fill="rgb(211,136,11)"/><text x="34.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="436" width="4" height="15" fill="rgb(227,18,15)"/><text x="34.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="31" y="452" width="4" height="15" fill="rgb(245,135,39)"/><text x="34.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="468" width="4" height="15" fill="rgb(241,101,17)"/><text x="34.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.36%)</title><rect x="31" y="484" width="4" height="15" fill="rgb(219,113,43)"/><text x="34.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="500" width="4" height="15" fill="rgb(245,111,5)"/><text x="34.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="516" width="4" height="15" fill="rgb(240,30,7)"/><text x="34.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="532" width="4" height="15" fill="rgb(249,53,27)"/><text x="34.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="31" y="548" width="4" height="15" fill="rgb(240,88,28)"/><text x="34.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="564" width="4" height="15" fill="rgb(231,111,50)"/><text x="34.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.36%)</title><rect x="31" y="580" width="4" height="15" fill="rgb(228,128,10)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="596" width="4" height="15" fill="rgb(242,223,36)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="612" width="4" height="15" fill="rgb(211,142,13)"/><text x="34.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="628" width="4" height="15" fill="rgb(231,28,20)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="31" y="644" width="4" height="15" fill="rgb(205,176,35)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="660" width="4" height="15" fill="rgb(253,163,0)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.36%)</title><rect x="31" y="676" width="4" height="15" fill="rgb(211,74,43)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="692" width="4" height="15" fill="rgb(229,142,52)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="708" width="4" height="15" fill="rgb(228,24,0)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="724" width="4" height="15" fill="rgb(223,29,9)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="31" y="740" width="4" height="15" fill="rgb(231,99,52)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="756" width="4" height="15" fill="rgb(220,89,41)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.36%)</title><rect x="31" y="772" width="4" height="15" fill="rgb(245,46,50)"/><text x="34.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="788" width="4" height="15" fill="rgb(215,93,49)"/><text x="34.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="804" width="4" height="15" fill="rgb(241,195,32)"/><text x="34.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="820" width="4" height="15" fill="rgb(206,207,5)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="836" width="4" height="15" fill="rgb(232,212,13)"/><text x="34.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="852" width="4" height="15" fill="rgb(253,121,12)"/><text x="34.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="31" y="868" width="4" height="15" fill="rgb(208,196,16)"/><text x="34.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="884" width="4" height="15" fill="rgb(215,196,34)"/><text x="34.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.36%)</title><rect x="31" y="900" width="4" height="15" fill="rgb(229,148,23)"/><text x="34.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="916" width="4" height="15" fill="rgb(209,136,32)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="932" width="4" height="15" fill="rgb(213,9,47)"/><text x="34.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="948" width="4" height="15" fill="rgb(221,131,12)"/><text x="34.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="31" y="964" width="4" height="15" fill="rgb(210,180,51)"/><text x="34.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="980" width="4" height="15" fill="rgb(223,47,30)"/><text x="34.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.36%)</title><rect x="31" y="996" width="4" height="15" fill="rgb(209,210,35)"/><text x="34.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="1012" width="4" height="15" fill="rgb(205,23,7)"/><text x="34.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="1028" width="4" height="15" fill="rgb(244,91,2)"/><text x="34.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="1044" width="4" height="15" fill="rgb(212,219,36)"/><text x="34.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="1060" width="4" height="15" fill="rgb(215,27,0)"/><text x="34.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="1076" width="4" height="15" fill="rgb(241,178,4)"/><text x="34.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="31" y="1092" width="4" height="15" fill="rgb(211,120,3)"/><text x="34.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="1108" width="4" height="15" fill="rgb(238,160,7)"/><text x="34.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.36%)</title><rect x="31" y="1124" width="4" height="15" fill="rgb(246,165,10)"/><text x="34.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="1140" width="4" height="15" fill="rgb(246,24,32)"/><text x="34.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="1156" width="4" height="15" fill="rgb(233,163,34)"/><text x="34.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="31" y="1172" width="4" height="15" fill="rgb(251,196,16)"/><text x="34.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="31" y="1188" width="4" height="15" fill="rgb(221,83,0)"/><text x="34.00" y="1198.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="31" y="1204" width="4" height="15" fill="rgb(207,104,23)"/><text x="34.00" y="1214.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="31" y="1220" width="4" height="15" fill="rgb(253,43,22)"/><text x="34.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="484" width="4" height="15" fill="rgb(214,26,26)"/><text x="38.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="500" width="4" height="15" fill="rgb(225,182,6)"/><text x="38.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="516" width="4" height="15" fill="rgb(238,224,15)"/><text x="38.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="532" width="4" height="15" fill="rgb(218,228,36)"/><text x="38.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="35" y="548" width="4" height="15" fill="rgb(228,37,36)"/><text x="38.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="564" width="4" height="15" fill="rgb(227,177,36)"/><text x="38.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.36%)</title><rect x="35" y="580" width="4" height="15" fill="rgb(252,143,22)"/><text x="38.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="596" width="4" height="15" fill="rgb(223,165,16)"/><text x="38.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="612" width="4" height="15" fill="rgb(209,210,39)"/><text x="38.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="628" width="4" height="15" fill="rgb(227,130,51)"/><text x="38.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="35" y="644" width="4" height="15" fill="rgb(235,134,54)"/><text x="38.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="660" width="4" height="15" fill="rgb(252,28,26)"/><text x="38.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.36%)</title><rect x="35" y="676" width="4" height="15" fill="rgb(213,85,25)"/><text x="38.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="692" width="4" height="15" fill="rgb(230,148,24)"/><text x="38.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="708" width="4" height="15" fill="rgb(236,71,10)"/><text x="38.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="724" width="4" height="15" fill="rgb(216,149,2)"/><text x="38.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="35" y="740" width="4" height="15" fill="rgb(207,92,45)"/><text x="38.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="756" width="4" height="15" fill="rgb(229,152,40)"/><text x="38.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.36%)</title><rect x="35" y="772" width="4" height="15" fill="rgb(243,140,8)"/><text x="38.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="788" width="4" height="15" fill="rgb(246,82,12)"/><text x="38.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="804" width="4" height="15" fill="rgb(233,16,47)"/><text x="38.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="820" width="4" height="15" fill="rgb(220,48,13)"/><text x="38.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="35" y="836" width="4" height="15" fill="rgb(205,78,45)"/><text x="38.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="852" width="4" height="15" fill="rgb(205,35,53)"/><text x="38.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.36%)</title><rect x="35" y="868" width="4" height="15" fill="rgb(226,4,43)"/><text x="38.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="884" width="4" height="15" fill="rgb(209,90,4)"/><text x="38.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="900" width="4" height="15" fill="rgb(236,146,34)"/><text x="38.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="916" width="4" height="15" fill="rgb(217,43,8)"/><text x="38.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="932" width="4" height="15" fill="rgb(227,99,40)"/><text x="38.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="948" width="4" height="15" fill="rgb(226,154,19)"/><text x="38.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="964" width="4" height="15" fill="rgb(228,192,28)"/><text x="38.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="35" y="980" width="4" height="15" fill="rgb(240,127,26)"/><text x="38.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="996" width="4" height="15" fill="rgb(243,122,41)"/><text x="38.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.36%)</title><rect x="35" y="1012" width="4" height="15" fill="rgb(214,18,35)"/><text x="38.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="1028" width="4" height="15" fill="rgb(224,190,48)"/><text x="38.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="1044" width="4" height="15" fill="rgb(251,157,36)"/><text x="38.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="1060" width="4" height="15" fill="rgb(207,28,15)"/><text x="38.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="35" y="1076" width="4" height="15" fill="rgb(237,225,54)"/><text x="38.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="1092" width="4" height="15" fill="rgb(212,211,15)"/><text x="38.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.36%)</title><rect x="35" y="1108" width="4" height="15" fill="rgb(212,158,37)"/><text x="38.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="1124" width="4" height="15" fill="rgb(239,44,27)"/><text x="38.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="1140" width="4" height="15" fill="rgb(224,179,45)"/><text x="38.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="1156" width="4" height="15" fill="rgb(245,126,20)"/><text x="38.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="35" y="1172" width="4" height="15" fill="rgb(215,217,12)"/><text x="38.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="1188" width="4" height="15" fill="rgb(238,29,29)"/><text x="38.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.36%)</title><rect x="35" y="1204" width="4" height="15" fill="rgb(217,66,24)"/><text x="38.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="1220" width="4" height="15" fill="rgb(225,5,18)"/><text x="38.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="1236" width="4" height="15" fill="rgb(234,147,0)"/><text x="38.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="1252" width="4" height="15" fill="rgb(237,177,36)"/><text x="38.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="35" y="1268" width="4" height="15" fill="rgb(224,83,19)"/><text x="38.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="1284" width="4" height="15" fill="rgb(230,26,46)"/><text x="38.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py) (1 samples, 0.36%)</title><rect x="35" y="1300" width="4" height="15" fill="rgb(211,174,13)"/><text x="38.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="1316" width="4" height="15" fill="rgb(250,105,24)"/><text x="38.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="1332" width="4" height="15" fill="rgb(254,105,33)"/><text x="38.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="35" y="1348" width="4" height="15" fill="rgb(238,71,0)"/><text x="38.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="35" y="1364" width="4" height="15" fill="rgb(252,116,10)"/><text x="38.00" y="1374.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="35" y="1380" width="4" height="15" fill="rgb(242,75,16)"/><text x="38.00" y="1390.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="35" y="1396" width="4" height="15" fill="rgb(236,59,24)"/><text x="38.00" y="1406.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py) (1 samples, 0.36%)</title><rect x="39" y="628" width="5" height="15" fill="rgb(218,77,18)"/><text x="42.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="39" y="644" width="5" height="15" fill="rgb(221,93,38)"/><text x="42.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="39" y="660" width="5" height="15" fill="rgb(234,188,13)"/><text x="42.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="39" y="676" width="5" height="15" fill="rgb(207,168,24)"/><text x="42.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="39" y="692" width="5" height="15" fill="rgb(212,74,48)"/><text x="42.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="39" y="708" width="5" height="15" fill="rgb(212,151,21)"/><text x="42.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="39" y="724" width="5" height="15" fill="rgb(219,8,52)"/><text x="42.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="39" y="740" width="5" height="15" fill="rgb(225,106,30)"/><text x="42.00" y="750.50"></text></g><g><title>&lt;module&gt; (onnx/numpy_helper.py) (1 samples, 0.36%)</title><rect x="39" y="756" width="5" height="15" fill="rgb(220,199,28)"/><text x="42.00" y="766.50"></text></g><g><title>system (platform.py) (1 samples, 0.36%)</title><rect x="39" y="772" width="5" height="15" fill="rgb(232,45,6)"/><text x="42.00" y="782.50"></text></g><g><title>uname (platform.py) (1 samples, 0.36%)</title><rect x="39" y="788" width="5" height="15" fill="rgb(223,188,36)"/><text x="42.00" y="798.50"></text></g><g><title>_syscmd_uname (platform.py) (1 samples, 0.36%)</title><rect x="39" y="804" width="5" height="15" fill="rgb(206,76,10)"/><text x="42.00" y="814.50"></text></g><g><title>popen (os.py) (1 samples, 0.36%)</title><rect x="39" y="820" width="5" height="15" fill="rgb(230,219,30)"/><text x="42.00" y="830.50"></text></g><g><title>_add_series_or_dataframe_operations (pandas/core/generic.py) (1 samples, 0.36%)</title><rect x="44" y="1124" width="4" height="15" fill="rgb(231,198,34)"/><text x="47.00" y="1134.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="44" y="1140" width="4" height="15" fill="rgb(228,211,34)"/><text x="47.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="44" y="1156" width="4" height="15" fill="rgb(209,113,2)"/><text x="47.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="44" y="1172" width="4" height="15" fill="rgb(251,83,35)"/><text x="47.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="44" y="1188" width="4" height="15" fill="rgb(228,120,43)"/><text x="47.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="44" y="1204" width="4" height="15" fill="rgb(225,192,20)"/><text x="47.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="44" y="1220" width="4" height="15" fill="rgb(234,131,43)"/><text x="47.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="44" y="1236" width="4" height="15" fill="rgb(225,124,24)"/><text x="47.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/window.py) (1 samples, 0.36%)</title><rect x="44" y="1252" width="4" height="15" fill="rgb(229,216,41)"/><text x="47.00" y="1262.50"></text></g><g><title>Rolling (pandas/core/window.py) (1 samples, 0.36%)</title><rect x="44" y="1268" width="4" height="15" fill="rgb(218,113,36)"/><text x="47.00" y="1278.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.36%)</title><rect x="44" y="1284" width="4" height="15" fill="rgb(238,223,50)"/><text x="47.00" y="1294.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.36%)</title><rect x="44" y="1300" width="4" height="15" fill="rgb(237,157,11)"/><text x="47.00" y="1310.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.72%)</title><rect x="44" y="724" width="8" height="15" fill="rgb(213,171,27)"/><text x="47.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="44" y="740" width="8" height="15" fill="rgb(211,85,54)"/><text x="47.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="44" y="756" width="8" height="15" fill="rgb(214,108,4)"/><text x="47.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="44" y="772" width="8" height="15" fill="rgb(229,221,37)"/><text x="47.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.72%)</title><rect x="44" y="788" width="8" height="15" fill="rgb(216,19,35)"/><text x="47.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="44" y="804" width="8" height="15" fill="rgb(243,90,37)"/><text x="47.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.72%)</title><rect x="44" y="820" width="8" height="15" fill="rgb(223,150,36)"/><text x="47.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="44" y="836" width="8" height="15" fill="rgb(206,193,2)"/><text x="47.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="44" y="852" width="8" height="15" fill="rgb(217,129,29)"/><text x="47.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="44" y="868" width="8" height="15" fill="rgb(211,208,39)"/><text x="47.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.72%)</title><rect x="44" y="884" width="8" height="15" fill="rgb(225,149,5)"/><text x="47.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="44" y="900" width="8" height="15" fill="rgb(212,186,54)"/><text x="47.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.72%)</title><rect x="44" y="916" width="8" height="15" fill="rgb(252,40,1)"/><text x="47.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="44" y="932" width="8" height="15" fill="rgb(211,21,4)"/><text x="47.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="44" y="948" width="8" height="15" fill="rgb(212,10,43)"/><text x="47.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="44" y="964" width="8" height="15" fill="rgb(205,101,49)"/><text x="47.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.72%)</title><rect x="44" y="980" width="8" height="15" fill="rgb(208,143,12)"/><text x="47.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="44" y="996" width="8" height="15" fill="rgb(238,86,24)"/><text x="47.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.72%)</title><rect x="44" y="1012" width="8" height="15" fill="rgb(211,35,48)"/><text x="47.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="44" y="1028" width="8" height="15" fill="rgb(230,75,43)"/><text x="47.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="44" y="1044" width="8" height="15" fill="rgb(247,130,54)"/><text x="47.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="44" y="1060" width="8" height="15" fill="rgb(246,195,42)"/><text x="47.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.72%)</title><rect x="44" y="1076" width="8" height="15" fill="rgb(245,185,18)"/><text x="47.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="44" y="1092" width="8" height="15" fill="rgb(251,127,4)"/><text x="47.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.72%)</title><rect x="44" y="1108" width="8" height="15" fill="rgb(237,80,52)"/><text x="47.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1124" width="4" height="15" fill="rgb(251,42,13)"/><text x="51.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1140" width="4" height="15" fill="rgb(243,100,11)"/><text x="51.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1156" width="4" height="15" fill="rgb(229,16,3)"/><text x="51.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="48" y="1172" width="4" height="15" fill="rgb(208,137,19)"/><text x="51.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1188" width="4" height="15" fill="rgb(254,181,33)"/><text x="51.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.36%)</title><rect x="48" y="1204" width="4" height="15" fill="rgb(234,202,17)"/><text x="51.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1220" width="4" height="15" fill="rgb(219,117,20)"/><text x="51.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1236" width="4" height="15" fill="rgb(211,205,11)"/><text x="51.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1252" width="4" height="15" fill="rgb(206,109,3)"/><text x="51.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="48" y="1268" width="4" height="15" fill="rgb(251,88,3)"/><text x="51.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1284" width="4" height="15" fill="rgb(230,84,49)"/><text x="51.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.36%)</title><rect x="48" y="1300" width="4" height="15" fill="rgb(223,58,18)"/><text x="51.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1316" width="4" height="15" fill="rgb(248,13,4)"/><text x="51.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1332" width="4" height="15" fill="rgb(225,94,11)"/><text x="51.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1348" width="4" height="15" fill="rgb(213,175,1)"/><text x="51.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="48" y="1364" width="4" height="15" fill="rgb(241,11,22)"/><text x="51.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1380" width="4" height="15" fill="rgb(251,51,26)"/><text x="51.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.36%)</title><rect x="48" y="1396" width="4" height="15" fill="rgb(240,23,10)"/><text x="51.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1412" width="4" height="15" fill="rgb(209,202,45)"/><text x="51.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1428" width="4" height="15" fill="rgb(252,11,6)"/><text x="51.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1444" width="4" height="15" fill="rgb(231,136,37)"/><text x="51.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="48" y="1460" width="4" height="15" fill="rgb(225,225,25)"/><text x="51.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1476" width="4" height="15" fill="rgb(216,87,29)"/><text x="51.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.36%)</title><rect x="48" y="1492" width="4" height="15" fill="rgb(221,0,9)"/><text x="51.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1508" width="4" height="15" fill="rgb(218,228,52)"/><text x="51.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1524" width="4" height="15" fill="rgb(253,97,40)"/><text x="51.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1540" width="4" height="15" fill="rgb(221,176,34)"/><text x="51.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1556" width="4" height="15" fill="rgb(219,205,28)"/><text x="51.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1572" width="4" height="15" fill="rgb(240,78,47)"/><text x="51.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1588" width="4" height="15" fill="rgb(211,207,5)"/><text x="51.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="48" y="1604" width="4" height="15" fill="rgb(211,219,5)"/><text x="51.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1620" width="4" height="15" fill="rgb(242,92,28)"/><text x="51.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.36%)</title><rect x="48" y="1636" width="4" height="15" fill="rgb(222,70,46)"/><text x="51.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1652" width="4" height="15" fill="rgb(240,137,25)"/><text x="51.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1668" width="4" height="15" fill="rgb(238,117,28)"/><text x="51.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1684" width="4" height="15" fill="rgb(216,69,21)"/><text x="51.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1700" width="4" height="15" fill="rgb(242,210,20)"/><text x="51.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1716" width="4" height="15" fill="rgb(238,37,6)"/><text x="51.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="48" y="1732" width="4" height="15" fill="rgb(242,51,35)"/><text x="51.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1748" width="4" height="15" fill="rgb(248,95,33)"/><text x="51.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.36%)</title><rect x="48" y="1764" width="4" height="15" fill="rgb(235,62,28)"/><text x="51.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1780" width="4" height="15" fill="rgb(230,85,29)"/><text x="51.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1796" width="4" height="15" fill="rgb(252,138,31)"/><text x="51.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1812" width="4" height="15" fill="rgb(224,5,44)"/><text x="51.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="48" y="1828" width="4" height="15" fill="rgb(212,217,0)"/><text x="51.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1844" width="4" height="15" fill="rgb(251,168,23)"/><text x="51.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.36%)</title><rect x="48" y="1860" width="4" height="15" fill="rgb(250,126,41)"/><text x="51.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1876" width="4" height="15" fill="rgb(208,103,6)"/><text x="51.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1892" width="4" height="15" fill="rgb(233,15,7)"/><text x="51.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1908" width="4" height="15" fill="rgb(210,12,25)"/><text x="51.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="48" y="1924" width="4" height="15" fill="rgb(230,82,44)"/><text x="51.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="48" y="1940" width="4" height="15" fill="rgb(254,110,8)"/><text x="51.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py) (1 samples, 0.36%)</title><rect x="48" y="1956" width="4" height="15" fill="rgb(236,101,21)"/><text x="51.00" y="1966.50"></text></g><g><title>pyparsing_common (pyparsing.py) (1 samples, 0.36%)</title><rect x="48" y="1972" width="4" height="15" fill="rgb(216,82,15)"/><text x="51.00" y="1982.50"></text></g><g><title>__init__ (pyparsing.py) (1 samples, 0.36%)</title><rect x="48" y="1988" width="4" height="15" fill="rgb(235,29,21)"/><text x="51.00" y="1998.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.36%)</title><rect x="48" y="2004" width="4" height="15" fill="rgb(234,1,8)"/><text x="51.00" y="2014.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.36%)</title><rect x="48" y="2020" width="4" height="15" fill="rgb(245,119,17)"/><text x="51.00" y="2030.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.36%)</title><rect x="48" y="2036" width="4" height="15" fill="rgb(222,198,34)"/><text x="51.00" y="2046.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.36%)</title><rect x="48" y="2052" width="4" height="15" fill="rgb(239,177,6)"/><text x="51.00" y="2062.50"></text></g><g><title>&lt;listcomp&gt; (pyparsing.py) (1 samples, 0.36%)</title><rect x="48" y="2068" width="4" height="15" fill="rgb(233,209,19)"/><text x="51.00" y="2078.50"></text></g><g><title>copy (pyparsing.py) (1 samples, 0.36%)</title><rect x="48" y="2084" width="4" height="15" fill="rgb(246,155,48)"/><text x="51.00" y="2094.50"></text></g><g><title>copy (copy.py) (1 samples, 0.36%)</title><rect x="48" y="2100" width="4" height="15" fill="rgb(216,120,18)"/><text x="51.00" y="2110.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 1.81%)</title><rect x="35" y="340" width="22" height="15" fill="rgb(253,136,15)"/><text x="38.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.81%)</title><rect x="35" y="356" width="22" height="15" fill="rgb(231,120,10)"/><text x="38.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.81%)</title><rect x="35" y="372" width="22" height="15" fill="rgb(223,5,54)"/><text x="38.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.81%)</title><rect x="35" y="388" width="22" height="15" fill="rgb(224,131,40)"/><text x="38.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.81%)</title><rect x="35" y="404" width="22" height="15" fill="rgb(220,135,42)"/><text x="38.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.81%)</title><rect x="35" y="420" width="22" height="15" fill="rgb(238,2,35)"/><text x="38.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 1.81%)</title><rect x="35" y="436" width="22" height="15" fill="rgb(245,39,25)"/><text x="38.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.81%)</title><rect x="35" y="452" width="22" height="15" fill="rgb(227,223,54)"/><text x="38.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.81%)</title><rect x="35" y="468" width="22" height="15" fill="rgb(233,74,19)"/><text x="38.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="39" y="484" width="18" height="15" fill="rgb(221,134,8)"/><text x="42.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.45%)</title><rect x="39" y="500" width="18" height="15" fill="rgb(243,141,49)"/><text x="42.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="39" y="516" width="18" height="15" fill="rgb(252,205,34)"/><text x="42.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 1.45%)</title><rect x="39" y="532" width="18" height="15" fill="rgb(227,47,18)"/><text x="42.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="39" y="548" width="18" height="15" fill="rgb(231,76,4)"/><text x="42.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="39" y="564" width="18" height="15" fill="rgb(234,68,45)"/><text x="42.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="39" y="580" width="18" height="15" fill="rgb(249,35,22)"/><text x="42.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.45%)</title><rect x="39" y="596" width="18" height="15" fill="rgb(241,12,53)"/><text x="42.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.45%)</title><rect x="39" y="612" width="18" height="15" fill="rgb(224,159,13)"/><text x="42.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 1.09%)</title><rect x="44" y="628" width="13" height="15" fill="rgb(251,180,5)"/><text x="47.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.09%)</title><rect x="44" y="644" width="13" height="15" fill="rgb(211,184,14)"/><text x="47.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.09%)</title><rect x="44" y="660" width="13" height="15" fill="rgb(251,222,53)"/><text x="47.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.09%)</title><rect x="44" y="676" width="13" height="15" fill="rgb(244,167,28)"/><text x="47.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.09%)</title><rect x="44" y="692" width="13" height="15" fill="rgb(216,224,32)"/><text x="47.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.09%)</title><rect x="44" y="708" width="13" height="15" fill="rgb(246,161,44)"/><text x="47.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.36%)</title><rect x="52" y="724" width="5" height="15" fill="rgb(214,56,12)"/><text x="55.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="52" y="740" width="5" height="15" fill="rgb(214,43,35)"/><text x="55.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="52" y="756" width="5" height="15" fill="rgb(240,211,33)"/><text x="55.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="52" y="772" width="5" height="15" fill="rgb(233,225,10)"/><text x="55.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="52" y="788" width="5" height="15" fill="rgb(250,147,18)"/><text x="55.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="52" y="804" width="5" height="15" fill="rgb(213,202,28)"/><text x="55.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/__init__.py) (1 samples, 0.36%)</title><rect x="52" y="820" width="5" height="15" fill="rgb(226,141,42)"/><text x="55.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="52" y="836" width="5" height="15" fill="rgb(244,188,11)"/><text x="55.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="52" y="852" width="5" height="15" fill="rgb(221,41,51)"/><text x="55.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="52" y="868" width="5" height="15" fill="rgb(214,106,22)"/><text x="55.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="52" y="884" width="5" height="15" fill="rgb(211,77,1)"/><text x="55.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="52" y="900" width="5" height="15" fill="rgb(246,70,2)"/><text x="55.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/_base.py) (1 samples, 0.36%)</title><rect x="52" y="916" width="5" height="15" fill="rgb(233,112,0)"/><text x="55.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="52" y="932" width="5" height="15" fill="rgb(214,53,40)"/><text x="55.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="52" y="948" width="5" height="15" fill="rgb(250,19,21)"/><text x="55.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="52" y="964" width="5" height="15" fill="rgb(240,29,20)"/><text x="55.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="52" y="980" width="5" height="15" fill="rgb(240,59,16)"/><text x="55.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="52" y="996" width="5" height="15" fill="rgb(215,120,23)"/><text x="55.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/io/parsers.py) (1 samples, 0.36%)</title><rect x="52" y="1012" width="5" height="15" fill="rgb(238,162,3)"/><text x="55.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="52" y="1028" width="5" height="15" fill="rgb(211,198,18)"/><text x="55.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="52" y="1044" width="5" height="15" fill="rgb(244,89,31)"/><text x="55.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="52" y="1060" width="5" height="15" fill="rgb(219,44,22)"/><text x="55.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="52" y="1076" width="5" height="15" fill="rgb(219,203,20)"/><text x="55.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="52" y="1092" width="5" height="15" fill="rgb(239,14,20)"/><text x="55.00" y="1102.50"></text></g><g><title>0x7f67cc9b86b7 (?) (1 samples, 0.36%)</title><rect x="52" y="1108" width="5" height="15" fill="rgb(211,50,19)"/><text x="55.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="52" y="1124" width="5" height="15" fill="rgb(208,198,22)"/><text x="55.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="52" y="1140" width="5" height="15" fill="rgb(226,105,33)"/><text x="55.00" y="1150.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="52" y="1156" width="5" height="15" fill="rgb(222,77,6)"/><text x="55.00" y="1166.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="52" y="1172" width="5" height="15" fill="rgb(236,196,44)"/><text x="55.00" y="1182.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="52" y="1188" width="5" height="15" fill="rgb(240,169,25)"/><text x="55.00" y="1198.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="52" y="1204" width="5" height="15" fill="rgb(252,218,48)"/><text x="55.00" y="1214.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.36%)</title><rect x="52" y="1220" width="5" height="15" fill="rgb(254,169,4)"/><text x="55.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="788" width="4" height="15" fill="rgb(224,63,32)"/><text x="60.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="804" width="4" height="15" fill="rgb(226,163,52)"/><text x="60.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="820" width="4" height="15" fill="rgb(218,96,35)"/><text x="60.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="57" y="836" width="4" height="15" fill="rgb(232,48,30)"/><text x="60.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="852" width="4" height="15" fill="rgb(206,97,32)"/><text x="60.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.36%)</title><rect x="57" y="868" width="4" height="15" fill="rgb(233,6,22)"/><text x="60.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="884" width="4" height="15" fill="rgb(240,224,51)"/><text x="60.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="900" width="4" height="15" fill="rgb(205,72,11)"/><text x="60.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="916" width="4" height="15" fill="rgb(247,128,29)"/><text x="60.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="57" y="932" width="4" height="15" fill="rgb(215,7,46)"/><text x="60.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="948" width="4" height="15" fill="rgb(250,23,50)"/><text x="60.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.36%)</title><rect x="57" y="964" width="4" height="15" fill="rgb(211,120,8)"/><text x="60.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="980" width="4" height="15" fill="rgb(209,166,48)"/><text x="60.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="996" width="4" height="15" fill="rgb(237,156,26)"/><text x="60.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="1012" width="4" height="15" fill="rgb(205,177,38)"/><text x="60.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="57" y="1028" width="4" height="15" fill="rgb(253,180,45)"/><text x="60.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="1044" width="4" height="15" fill="rgb(251,22,25)"/><text x="60.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (1 samples, 0.36%)</title><rect x="57" y="1060" width="4" height="15" fill="rgb(214,181,22)"/><text x="60.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="1076" width="4" height="15" fill="rgb(252,126,6)"/><text x="60.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="1092" width="4" height="15" fill="rgb(221,184,35)"/><text x="60.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="1108" width="4" height="15" fill="rgb(248,110,5)"/><text x="60.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="1124" width="4" height="15" fill="rgb(224,66,22)"/><text x="60.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="1140" width="4" height="15" fill="rgb(251,153,39)"/><text x="60.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="1156" width="4" height="15" fill="rgb(219,221,7)"/><text x="60.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="57" y="1172" width="4" height="15" fill="rgb(228,22,41)"/><text x="60.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="1188" width="4" height="15" fill="rgb(234,140,52)"/><text x="60.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (1 samples, 0.36%)</title><rect x="57" y="1204" width="4" height="15" fill="rgb(240,11,14)"/><text x="60.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="1220" width="4" height="15" fill="rgb(249,141,37)"/><text x="60.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="1236" width="4" height="15" fill="rgb(213,178,14)"/><text x="60.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="1252" width="4" height="15" fill="rgb(211,0,28)"/><text x="60.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="57" y="1268" width="4" height="15" fill="rgb(235,76,46)"/><text x="60.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="57" y="1284" width="4" height="15" fill="rgb(252,158,15)"/><text x="60.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/connection.py) (1 samples, 0.36%)</title><rect x="57" y="1300" width="4" height="15" fill="rgb(244,105,42)"/><text x="60.00" y="1310.50"></text></g><g><title>_has_ipv6 (urllib3/util/connection.py) (1 samples, 0.36%)</title><rect x="57" y="1316" width="4" height="15" fill="rgb(254,20,15)"/><text x="60.00" y="1326.50"></text></g><g><title>__init__ (socket.py) (1 samples, 0.36%)</title><rect x="57" y="1332" width="4" height="15" fill="rgb(243,52,27)"/><text x="60.00" y="1342.50"></text></g><g><title>sock_initobj (socketmodule.c) (1 samples, 0.36%)</title><rect x="57" y="1348" width="4" height="15" fill="rgb(218,123,24)"/><text x="60.00" y="1358.50"></text></g><g><title>__socket (libc-2.29.so) (1 samples, 0.36%)</title><rect x="57" y="1364" width="4" height="15" fill="rgb(219,191,39)"/><text x="60.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.71%)</title><rect x="10" y="68" width="55" height="15" fill="rgb(217,9,17)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.71%)</title><rect x="10" y="84" width="55" height="15" fill="rgb(221,215,31)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.71%)</title><rect x="10" y="100" width="55" height="15" fill="rgb(248,227,12)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 4.71%)</title><rect x="10" y="116" width="55" height="15" fill="rgb(205,208,19)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.71%)</title><rect x="10" y="132" width="55" height="15" fill="rgb(238,149,43)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py) (13 samples, 4.71%)</title><rect x="10" y="148" width="55" height="15" fill="rgb(248,214,34)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.71%)</title><rect x="10" y="164" width="55" height="15" fill="rgb(236,150,28)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.71%)</title><rect x="10" y="180" width="55" height="15" fill="rgb(242,39,7)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.54%)</title><rect x="35" y="196" width="30" height="15" fill="rgb(205,153,9)"/><text x="38.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.54%)</title><rect x="35" y="212" width="30" height="15" fill="rgb(205,149,31)"/><text x="38.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.54%)</title><rect x="35" y="228" width="30" height="15" fill="rgb(214,51,37)"/><text x="38.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 2.54%)</title><rect x="35" y="244" width="30" height="15" fill="rgb(217,126,5)"/><text x="38.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.54%)</title><rect x="35" y="260" width="30" height="15" fill="rgb(242,177,51)"/><text x="38.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.54%)</title><rect x="35" y="276" width="30" height="15" fill="rgb(228,195,8)"/><text x="38.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.54%)</title><rect x="35" y="292" width="30" height="15" fill="rgb(242,46,34)"/><text x="38.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.54%)</title><rect x="35" y="308" width="30" height="15" fill="rgb(216,193,12)"/><text x="38.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.54%)</title><rect x="35" y="324" width="30" height="15" fill="rgb(243,89,37)"/><text x="38.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.72%)</title><rect x="57" y="340" width="8" height="15" fill="rgb(205,127,49)"/><text x="60.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="57" y="356" width="8" height="15" fill="rgb(226,121,21)"/><text x="60.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="57" y="372" width="8" height="15" fill="rgb(228,130,9)"/><text x="60.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="57" y="388" width="8" height="15" fill="rgb(237,151,1)"/><text x="60.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="57" y="404" width="8" height="15" fill="rgb(219,178,22)"/><text x="60.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="57" y="420" width="8" height="15" fill="rgb(225,71,3)"/><text x="60.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="57" y="436" width="8" height="15" fill="rgb(210,46,39)"/><text x="60.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.72%)</title><rect x="57" y="452" width="8" height="15" fill="rgb(236,1,25)"/><text x="60.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="57" y="468" width="8" height="15" fill="rgb(226,101,31)"/><text x="60.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.72%)</title><rect x="57" y="484" width="8" height="15" fill="rgb(254,212,38)"/><text x="60.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="57" y="500" width="8" height="15" fill="rgb(205,163,13)"/><text x="60.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="57" y="516" width="8" height="15" fill="rgb(211,112,42)"/><text x="60.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="57" y="532" width="8" height="15" fill="rgb(250,25,51)"/><text x="60.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.72%)</title><rect x="57" y="548" width="8" height="15" fill="rgb(239,151,34)"/><text x="60.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="57" y="564" width="8" height="15" fill="rgb(220,26,10)"/><text x="60.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.72%)</title><rect x="57" y="580" width="8" height="15" fill="rgb(229,154,12)"/><text x="60.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="57" y="596" width="8" height="15" fill="rgb(210,19,29)"/><text x="60.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="57" y="612" width="8" height="15" fill="rgb(235,86,54)"/><text x="60.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="57" y="628" width="8" height="15" fill="rgb(212,74,20)"/><text x="60.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.72%)</title><rect x="57" y="644" width="8" height="15" fill="rgb(207,85,27)"/><text x="60.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="57" y="660" width="8" height="15" fill="rgb(223,82,25)"/><text x="60.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.72%)</title><rect x="57" y="676" width="8" height="15" fill="rgb(217,140,25)"/><text x="60.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="57" y="692" width="8" height="15" fill="rgb(253,62,21)"/><text x="60.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="57" y="708" width="8" height="15" fill="rgb(251,5,39)"/><text x="60.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="57" y="724" width="8" height="15" fill="rgb(240,192,42)"/><text x="60.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.72%)</title><rect x="57" y="740" width="8" height="15" fill="rgb(227,195,10)"/><text x="60.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.72%)</title><rect x="57" y="756" width="8" height="15" fill="rgb(227,164,30)"/><text x="60.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.72%)</title><rect x="57" y="772" width="8" height="15" fill="rgb(236,210,51)"/><text x="60.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="788" width="4" height="15" fill="rgb(213,205,5)"/><text x="64.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="804" width="4" height="15" fill="rgb(239,208,11)"/><text x="64.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="820" width="4" height="15" fill="rgb(225,136,3)"/><text x="64.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="836" width="4" height="15" fill="rgb(243,123,32)"/><text x="64.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="852" width="4" height="15" fill="rgb(225,90,31)"/><text x="64.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="61" y="868" width="4" height="15" fill="rgb(220,220,43)"/><text x="64.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="884" width="4" height="15" fill="rgb(249,110,43)"/><text x="64.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.36%)</title><rect x="61" y="900" width="4" height="15" fill="rgb(248,158,27)"/><text x="64.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="916" width="4" height="15" fill="rgb(252,167,32)"/><text x="64.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="932" width="4" height="15" fill="rgb(249,144,32)"/><text x="64.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="948" width="4" height="15" fill="rgb(237,23,54)"/><text x="64.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="964" width="4" height="15" fill="rgb(210,32,30)"/><text x="64.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="980" width="4" height="15" fill="rgb(221,154,41)"/><text x="64.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="996" width="4" height="15" fill="rgb(214,163,30)"/><text x="64.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="61" y="1012" width="4" height="15" fill="rgb(232,194,30)"/><text x="64.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1028" width="4" height="15" fill="rgb(254,206,44)"/><text x="64.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.36%)</title><rect x="61" y="1044" width="4" height="15" fill="rgb(230,85,21)"/><text x="64.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1060" width="4" height="15" fill="rgb(252,216,42)"/><text x="64.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1076" width="4" height="15" fill="rgb(235,41,53)"/><text x="64.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1092" width="4" height="15" fill="rgb(233,80,9)"/><text x="64.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1108" width="4" height="15" fill="rgb(213,54,6)"/><text x="64.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1124" width="4" height="15" fill="rgb(245,116,11)"/><text x="64.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="61" y="1140" width="4" height="15" fill="rgb(216,223,44)"/><text x="64.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1156" width="4" height="15" fill="rgb(227,197,50)"/><text x="64.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.36%)</title><rect x="61" y="1172" width="4" height="15" fill="rgb(241,175,2)"/><text x="64.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1188" width="4" height="15" fill="rgb(209,162,18)"/><text x="64.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1204" width="4" height="15" fill="rgb(232,143,15)"/><text x="64.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1220" width="4" height="15" fill="rgb(212,187,19)"/><text x="64.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1236" width="4" height="15" fill="rgb(225,70,43)"/><text x="64.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1252" width="4" height="15" fill="rgb(209,21,47)"/><text x="64.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="61" y="1268" width="4" height="15" fill="rgb(213,64,24)"/><text x="64.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1284" width="4" height="15" fill="rgb(221,167,46)"/><text x="64.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py) (1 samples, 0.36%)</title><rect x="61" y="1300" width="4" height="15" fill="rgb(251,124,44)"/><text x="64.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1316" width="4" height="15" fill="rgb(236,139,13)"/><text x="64.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1332" width="4" height="15" fill="rgb(238,123,49)"/><text x="64.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1348" width="4" height="15" fill="rgb(244,168,11)"/><text x="64.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="61" y="1364" width="4" height="15" fill="rgb(231,101,48)"/><text x="64.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1380" width="4" height="15" fill="rgb(222,128,20)"/><text x="64.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py) (1 samples, 0.36%)</title><rect x="61" y="1396" width="4" height="15" fill="rgb(239,185,46)"/><text x="64.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1412" width="4" height="15" fill="rgb(243,105,35)"/><text x="64.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1428" width="4" height="15" fill="rgb(209,127,43)"/><text x="64.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1444" width="4" height="15" fill="rgb(212,24,10)"/><text x="64.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="61" y="1460" width="4" height="15" fill="rgb(208,105,20)"/><text x="64.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1476" width="4" height="15" fill="rgb(218,195,44)"/><text x="64.00" y="1486.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/extensions.py) (1 samples, 0.36%)</title><rect x="61" y="1492" width="4" height="15" fill="rgb(211,183,16)"/><text x="64.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1508" width="4" height="15" fill="rgb(225,151,0)"/><text x="64.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1524" width="4" height="15" fill="rgb(231,22,27)"/><text x="64.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1540" width="4" height="15" fill="rgb(242,61,15)"/><text x="64.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1556" width="4" height="15" fill="rgb(254,172,36)"/><text x="64.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1572" width="4" height="15" fill="rgb(237,192,18)"/><text x="64.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="61" y="1588" width="4" height="15" fill="rgb(250,70,7)"/><text x="64.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1604" width="4" height="15" fill="rgb(230,226,23)"/><text x="64.00" y="1614.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/serialization/__init__.py) (1 samples, 0.36%)</title><rect x="61" y="1620" width="4" height="15" fill="rgb(233,203,46)"/><text x="64.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1636" width="4" height="15" fill="rgb(230,59,16)"/><text x="64.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1652" width="4" height="15" fill="rgb(208,58,47)"/><text x="64.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1668" width="4" height="15" fill="rgb(243,227,29)"/><text x="64.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="61" y="1684" width="4" height="15" fill="rgb(219,2,51)"/><text x="64.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="61" y="1700" width="4" height="15" fill="rgb(247,0,39)"/><text x="64.00" y="1710.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/serialization/base.py) (1 samples, 0.36%)</title><rect x="61" y="1716" width="4" height="15" fill="rgb(236,133,54)"/><text x="64.00" y="1726.50"></text></g><g><title>__new__ (enum.py) (1 samples, 0.36%)</title><rect x="61" y="1732" width="4" height="15" fill="rgb(234,211,2)"/><text x="64.00" y="1742.50"></text></g><g><title>profile0_skl (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (1 samples, 0.36%)</title><rect x="65" y="68" width="4" height="15" fill="rgb(221,63,44)"/><text x="68.00" y="78.50"></text></g><g><title>setup_profile0 (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (1 samples, 0.36%)</title><rect x="65" y="84" width="4" height="15" fill="rgb(214,0,29)"/><text x="68.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.36%)</title><rect x="65" y="100" width="4" height="15" fill="rgb(211,138,47)"/><text x="68.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (1 samples, 0.36%)</title><rect x="65" y="116" width="4" height="15" fill="rgb(215,183,53)"/><text x="68.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py) (1 samples, 0.36%)</title><rect x="65" y="132" width="4" height="15" fill="rgb(222,208,9)"/><text x="68.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="148" width="4" height="15" fill="rgb(205,93,46)"/><text x="68.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="164" width="4" height="15" fill="rgb(233,76,3)"/><text x="68.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="180" width="4" height="15" fill="rgb(218,117,39)"/><text x="68.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="65" y="196" width="4" height="15" fill="rgb(240,124,47)"/><text x="68.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="212" width="4" height="15" fill="rgb(238,146,19)"/><text x="68.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py) (1 samples, 0.36%)</title><rect x="65" y="228" width="4" height="15" fill="rgb(208,117,45)"/><text x="68.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="244" width="4" height="15" fill="rgb(210,195,16)"/><text x="68.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="260" width="4" height="15" fill="rgb(219,221,7)"/><text x="68.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="276" width="4" height="15" fill="rgb(215,214,29)"/><text x="68.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="65" y="292" width="4" height="15" fill="rgb(224,176,50)"/><text x="68.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="308" width="4" height="15" fill="rgb(219,59,19)"/><text x="68.00" y="318.50"></text></g><g><title>&lt;module&gt; (lightgbm/basic.py) (1 samples, 0.36%)</title><rect x="65" y="324" width="4" height="15" fill="rgb(228,170,34)"/><text x="68.00" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="340" width="4" height="15" fill="rgb(210,104,31)"/><text x="68.00" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="356" width="4" height="15" fill="rgb(216,160,1)"/><text x="68.00" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="372" width="4" height="15" fill="rgb(246,183,30)"/><text x="68.00" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="65" y="388" width="4" height="15" fill="rgb(207,74,21)"/><text x="68.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="404" width="4" height="15" fill="rgb(244,189,17)"/><text x="68.00" y="414.50"></text></g><g><title>&lt;module&gt; (lightgbm/compat.py) (1 samples, 0.36%)</title><rect x="65" y="420" width="4" height="15" fill="rgb(231,25,2)"/><text x="68.00" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="436" width="4" height="15" fill="rgb(247,88,35)"/><text x="68.00" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="452" width="4" height="15" fill="rgb(238,45,48)"/><text x="68.00" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="468" width="4" height="15" fill="rgb(206,34,38)"/><text x="68.00" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="65" y="484" width="4" height="15" fill="rgb(217,0,8)"/><text x="68.00" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="500" width="4" height="15" fill="rgb(240,213,49)"/><text x="68.00" y="510.50"></text></g><g><title>&lt;module&gt; (graphviz/__init__.py) (1 samples, 0.36%)</title><rect x="65" y="516" width="4" height="15" fill="rgb(248,149,21)"/><text x="68.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="532" width="4" height="15" fill="rgb(244,60,51)"/><text x="68.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="548" width="4" height="15" fill="rgb(210,34,10)"/><text x="68.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="564" width="4" height="15" fill="rgb(239,210,15)"/><text x="68.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="65" y="580" width="4" height="15" fill="rgb(239,119,37)"/><text x="68.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="596" width="4" height="15" fill="rgb(206,90,26)"/><text x="68.00" y="606.50"></text></g><g><title>&lt;module&gt; (graphviz/dot.py) (1 samples, 0.36%)</title><rect x="65" y="612" width="4" height="15" fill="rgb(210,136,37)"/><text x="68.00" y="622.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="628" width="4" height="15" fill="rgb(253,89,52)"/><text x="68.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="644" width="4" height="15" fill="rgb(234,46,2)"/><text x="68.00" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="660" width="4" height="15" fill="rgb(228,147,19)"/><text x="68.00" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="676" width="4" height="15" fill="rgb(248,104,15)"/><text x="68.00" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="692" width="4" height="15" fill="rgb(239,225,11)"/><text x="68.00" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="65" y="708" width="4" height="15" fill="rgb(233,212,21)"/><text x="68.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="724" width="4" height="15" fill="rgb(233,78,32)"/><text x="68.00" y="734.50"></text></g><g><title>&lt;module&gt; (graphviz/files.py) (1 samples, 0.36%)</title><rect x="65" y="740" width="4" height="15" fill="rgb(233,84,11)"/><text x="68.00" y="750.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="756" width="4" height="15" fill="rgb(244,69,42)"/><text x="68.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="772" width="4" height="15" fill="rgb(222,150,22)"/><text x="68.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="788" width="4" height="15" fill="rgb(208,197,41)"/><text x="68.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="804" width="4" height="15" fill="rgb(252,82,40)"/><text x="68.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="65" y="820" width="4" height="15" fill="rgb(249,36,1)"/><text x="68.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="65" y="836" width="4" height="15" fill="rgb(220,140,32)"/><text x="68.00" y="846.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="65" y="852" width="4" height="15" fill="rgb(217,182,20)"/><text x="68.00" y="862.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.36%)</title><rect x="65" y="868" width="4" height="15" fill="rgb(234,17,46)"/><text x="68.00" y="878.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.36%)</title><rect x="99" y="180" width="5" height="15" fill="rgb(213,196,34)"/><text x="102.00" y="190.50"></text></g><g><title>0x7f67b7ef3ff9 (?) (1 samples, 0.36%)</title><rect x="116" y="212" width="5" height="15" fill="rgb(249,224,42)"/><text x="119.00" y="222.50"></text></g><g><title>0x7f67b7eeeef6 (?) (1 samples, 0.36%)</title><rect x="116" y="228" width="5" height="15" fill="rgb(227,198,35)"/><text x="119.00" y="238.50"></text></g><g><title>0x7f67b7ee3962 (?) (1 samples, 0.36%)</title><rect x="116" y="244" width="5" height="15" fill="rgb(229,30,24)"/><text x="119.00" y="254.50"></text></g><g><title>0x7f67b7f177a7 (?) (1 samples, 0.36%)</title><rect x="116" y="260" width="5" height="15" fill="rgb(224,26,7)"/><text x="119.00" y="270.50"></text></g><g><title>0x7f67b7f17379 (?) (1 samples, 0.36%)</title><rect x="116" y="276" width="5" height="15" fill="rgb(212,43,27)"/><text x="119.00" y="286.50"></text></g><g><title>0x7f67b83758b8 (?) (1 samples, 0.36%)</title><rect x="116" y="292" width="5" height="15" fill="rgb(254,151,44)"/><text x="119.00" y="302.50"></text></g><g><title>0x7f67b8373c7f (?) (1 samples, 0.36%)</title><rect x="116" y="308" width="5" height="15" fill="rgb(211,51,0)"/><text x="119.00" y="318.50"></text></g><g><title>0x7f67b8388fa5 (?) (1 samples, 0.36%)</title><rect x="116" y="324" width="5" height="15" fill="rgb(247,37,6)"/><text x="119.00" y="334.50"></text></g><g><title>onnxruntime::NodeArg::Name[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="125" y="260" width="4" height="15" fill="rgb(228,133,19)"/><text x="128.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (3 samples, 1.09%)</title><rect x="121" y="212" width="12" height="15" fill="rgb(248,6,25)"/><text x="124.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.09%)</title><rect x="121" y="228" width="12" height="15" fill="rgb(229,33,22)"/><text x="124.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.72%)</title><rect x="125" y="244" width="8" height="15" fill="rgb(205,143,17)"/><text x="128.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="129" y="260" width="4" height="15" fill="rgb(216,160,17)"/><text x="132.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="129" y="276" width="4" height="15" fill="rgb(243,39,29)"/><text x="132.00" y="286.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.36%)</title><rect x="133" y="212" width="5" height="15" fill="rgb(221,75,54)"/><text x="136.00" y="222.50"></text></g><g><title>0x7ffd3b1e5bce ([vdso]) (1 samples, 0.36%)</title><rect x="133" y="228" width="5" height="15" fill="rgb(207,65,8)"/><text x="136.00" y="238.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="138" y="228" width="4" height="15" fill="rgb(223,147,18)"/><text x="141.00" y="238.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="146" y="260" width="5" height="15" fill="rgb(216,41,16)"/><text x="149.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="151" y="292" width="4" height="15" fill="rgb(250,192,30)"/><text x="154.00" y="302.50"></text></g><g><title>0x7f67ec9927a0 (libstdc++.so.6.0.28) (1 samples, 0.36%)</title><rect x="463" y="356" width="4" height="15" fill="rgb(213,100,18)"/><text x="466.00" y="366.50"></text></g><g><title>0x7f67fcec590e (libc-2.29.so) (1 samples, 0.36%)</title><rect x="467" y="356" width="4" height="15" fill="rgb(232,171,0)"/><text x="470.00" y="366.50"></text></g><g><title>0x7f67fcec5991 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="471" y="356" width="5" height="15" fill="rgb(211,26,9)"/><text x="474.00" y="366.50"></text></g><g><title>0x7f67fcec5998 (libc-2.29.so) (3 samples, 1.09%)</title><rect x="476" y="356" width="12" height="15" fill="rgb(238,21,45)"/><text x="479.00" y="366.50"></text></g><g><title>0x7f67fcec5a4d (libc-2.29.so) (1 samples, 0.36%)</title><rect x="488" y="356" width="5" height="15" fill="rgb(247,159,46)"/><text x="491.00" y="366.50"></text></g><g><title>0x7f67fcec5be4 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="493" y="356" width="4" height="15" fill="rgb(245,139,23)"/><text x="496.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.36%)</title><rect x="497" y="356" width="4" height="15" fill="rgb(231,149,29)"/><text x="500.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="501" y="356" width="4" height="15" fill="rgb(249,163,36)"/><text x="504.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="501" y="372" width="4" height="15" fill="rgb(220,10,39)"/><text x="504.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="501" y="388" width="4" height="15" fill="rgb(219,215,53)"/><text x="504.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="501" y="404" width="4" height="15" fill="rgb(252,110,14)"/><text x="504.00" y="414.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (92 samples, 33.33%)</title><rect x="151" y="260" width="393" height="15" fill="rgb(241,106,18)"/><text x="154.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (92 samples, 33.33%)</title><rect x="151" y="276" width="393" height="15" fill="rgb(249,41,46)"/><text x="154.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (91 samples, 32.97%)</title><rect x="155" y="292" width="389" height="15" fill="rgb(251,48,39)"/><text x="158.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (90 samples, 32.61%)</title><rect x="159" y="308" width="385" height="15" fill="rgb(215,117,12)"/><text x="162.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/ca..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (90 samples, 32.61%)</title><rect x="159" y="324" width="385" height="15" fill="rgb(229,190,10)"/><text x="162.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntim..</text></g><g><title>onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (90 samples, 32.61%)</title><rect x="159" y="340" width="385" height="15" fill="rgb(222,109,35)"/><text x="162.00" y="350.50">onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (on..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.26%)</title><rect x="505" y="356" width="39" height="15" fill="rgb(243,161,11)"/><text x="508.00" y="366.50">std..</text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 2.90%)</title><rect x="510" y="372" width="34" height="15" fill="rgb(231,1,3)"/><text x="513.00" y="382.50">op..</text></g><g><title>malloc (libc-2.29.so) (7 samples, 2.54%)</title><rect x="514" y="388" width="30" height="15" fill="rgb(234,193,26)"/><text x="517.00" y="398.50">ma..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="544" y="260" width="4" height="15" fill="rgb(234,115,10)"/><text x="547.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="544" y="276" width="4" height="15" fill="rgb(229,79,35)"/><text x="547.00" y="286.50"></text></g><g><title>0x7f67fcee614a (libc-2.29.so) (1 samples, 0.36%)</title><rect x="544" y="292" width="4" height="15" fill="rgb(210,108,3)"/><text x="547.00" y="302.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.36%)</title><rect x="548" y="276" width="4" height="15" fill="rgb(248,39,43)"/><text x="551.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.36%)</title><rect x="548" y="292" width="4" height="15" fill="rgb(248,2,41)"/><text x="551.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.36%)</title><rect x="548" y="308" width="4" height="15" fill="rgb(245,204,47)"/><text x="551.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.72%)</title><rect x="548" y="260" width="9" height="15" fill="rgb(236,149,48)"/><text x="551.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="552" y="276" width="5" height="15" fill="rgb(232,39,5)"/><text x="555.00" y="286.50"></text></g><g><title>0x7f67fcee5d50 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="552" y="292" width="5" height="15" fill="rgb(254,177,11)"/><text x="555.00" y="302.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (98 samples, 35.51%)</title><rect x="142" y="244" width="419" height="15" fill="rgb(254,116,45)"/><text x="145.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;):..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="557" y="260" width="4" height="15" fill="rgb(232,4,25)"/><text x="560.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="557" y="276" width="4" height="15" fill="rgb(211,65,25)"/><text x="560.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="557" y="292" width="4" height="15" fill="rgb(234,14,2)"/><text x="560.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="557" y="308" width="4" height="15" fill="rgb(213,213,48)"/><text x="560.00" y="318.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="557" y="324" width="4" height="15" fill="rgb(223,175,7)"/><text x="560.00" y="334.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="561" y="244" width="4" height="15" fill="rgb(230,26,45)"/><text x="564.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="561" y="260" width="4" height="15" fill="rgb(245,80,44)"/><text x="564.00" y="270.50"></text></g><g><title>profile_ort (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (117 samples, 42.39%)</title><rect x="69" y="68" width="501" height="15" fill="rgb(253,151,6)"/><text x="72.00" y="78.50">profile_ort (bench_LinearRegression_default_m_reg_1000_50_12_float_...</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (117 samples, 42.39%)</title><rect x="69" y="84" width="501" height="15" fill="rgb(207,45,15)"/><text x="72.00" y="94.50">setup_profile (bench_LinearRegression_default_m_reg_1000_50_12_float..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (117 samples, 42.39%)</title><rect x="69" y="100" width="501" height="15" fill="rgb(216,5,51)"/><text x="72.00" y="110.50">profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (117 samples, 42.39%)</title><rect x="69" y="116" width="501" height="15" fill="rgb(220,22,2)"/><text x="72.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (116 samples, 42.03%)</title><rect x="74" y="132" width="496" height="15" fill="rgb(244,163,10)"/><text x="77.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (115 samples, 41.67%)</title><rect x="78" y="148" width="492" height="15" fill="rgb(247,20,50)"/><text x="81.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (114 samples, 41.30%)</title><rect x="82" y="164" width="488" height="15" fill="rgb(240,188,48)"/><text x="85.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (109 samples, 39.49%)</title><rect x="104" y="180" width="466" height="15" fill="rgb(212,175,16)"/><text x="107.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (107 samples, 38.77%)</title><rect x="112" y="196" width="458" height="15" fill="rgb(210,49,28)"/><text x="115.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 36.59%)</title><rect x="138" y="212" width="432" height="15" fill="rgb(210,1,7)"/><text x="141.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxru..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (100 samples, 36.23%)</title><rect x="142" y="228" width="428" height="15" fill="rgb(218,164,27)"/><text x="145.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::pytho..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="565" y="244" width="5" height="15" fill="rgb(212,3,31)"/><text x="568.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="565" y="260" width="5" height="15" fill="rgb(244,228,32)"/><text x="568.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.36%)</title><rect x="565" y="276" width="5" height="15" fill="rgb(219,91,34)"/><text x="568.00" y="286.50"></text></g><g><title>profile_pyrt (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (40 samples, 14.49%)</title><rect x="570" y="68" width="171" height="15" fill="rgb(224,67,22)"/><text x="573.00" y="78.50">profile_pyrt (bench_Li..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (40 samples, 14.49%)</title><rect x="570" y="84" width="171" height="15" fill="rgb(222,190,10)"/><text x="573.00" y="94.50">setup_profile (bench_L..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (40 samples, 14.49%)</title><rect x="570" y="100" width="171" height="15" fill="rgb(244,104,13)"/><text x="573.00" y="110.50">profile (bench_LinearR..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (40 samples, 14.49%)</title><rect x="570" y="116" width="171" height="15" fill="rgb(230,137,29)"/><text x="573.00" y="126.50">time_predict (mlprodic..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (40 samples, 14.49%)</title><rect x="570" y="132" width="171" height="15" fill="rgb(229,81,33)"/><text x="573.00" y="142.50">&lt;lambda&gt; (mlprodict/as..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (40 samples, 14.49%)</title><rect x="570" y="148" width="171" height="15" fill="rgb(215,170,7)"/><text x="573.00" y="158.50">run (mlprodict/onnxrt/..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (40 samples, 14.49%)</title><rect x="570" y="164" width="171" height="15" fill="rgb(211,87,41)"/><text x="573.00" y="174.50">_run_sequence_runtime ..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (40 samples, 14.49%)</title><rect x="570" y="180" width="171" height="15" fill="rgb(232,15,50)"/><text x="573.00" y="190.50">run (mlprodict/onnxrt/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (40 samples, 14.49%)</title><rect x="570" y="196" width="171" height="15" fill="rgb(241,136,0)"/><text x="573.00" y="206.50">run (mlprodict/onnxrt/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (40 samples, 14.49%)</title><rect x="570" y="212" width="171" height="15" fill="rgb(222,26,4)"/><text x="573.00" y="222.50">run (mlprodict/onnxrt/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py) (40 samples, 14.49%)</title><rect x="570" y="228" width="171" height="15" fill="rgb(251,161,10)"/><text x="573.00" y="238.50">_run (mlprodict/onnxrt..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (40 samples, 14.49%)</title><rect x="570" y="244" width="171" height="15" fill="rgb(224,119,51)"/><text x="573.00" y="254.50">numpy_dot_inplace (mlp..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (39 samples, 14.13%)</title><rect x="574" y="260" width="167" height="15" fill="rgb(219,223,31)"/><text x="577.00" y="270.50">dot (&lt;__array_functio..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (39 samples, 14.13%)</title><rect x="574" y="276" width="167" height="15" fill="rgb(241,33,54)"/><text x="577.00" y="286.50">array_implement_array..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (39 samples, 14.13%)</title><rect x="574" y="292" width="167" height="15" fill="rgb(213,103,36)"/><text x="577.00" y="302.50">array_matrixproduct (..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (39 samples, 14.13%)</title><rect x="574" y="308" width="167" height="15" fill="rgb(254,177,44)"/><text x="577.00" y="318.50">PyArray_MatrixProduct..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (39 samples, 14.13%)</title><rect x="574" y="324" width="167" height="15" fill="rgb(214,215,42)"/><text x="577.00" y="334.50">cblas_matrixproduct (..</text></g><g><title>gemv (cblasfuncs.c) (39 samples, 14.13%)</title><rect x="574" y="340" width="167" height="15" fill="rgb(232,161,21)"/><text x="577.00" y="350.50">gemv (cblasfuncs.c)</text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (39 samples, 14.13%)</title><rect x="574" y="356" width="167" height="15" fill="rgb(206,117,34)"/><text x="577.00" y="366.50">cblas_sgemv (libopenb..</text></g><g><title>sgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (39 samples, 14.13%)</title><rect x="574" y="372" width="167" height="15" fill="rgb(215,157,34)"/><text x="577.00" y="382.50">sgemv_thread_t (libop..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (39 samples, 14.13%)</title><rect x="574" y="388" width="167" height="15" fill="rgb(226,188,38)"/><text x="577.00" y="398.50">exec_blas (libopenbla..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (39 samples, 14.13%)</title><rect x="574" y="404" width="167" height="15" fill="rgb(215,115,23)"/><text x="577.00" y="414.50">exec_blas_async_wait ..</text></g><g><title>sched_yield (libc-2.29.so) (39 samples, 14.13%)</title><rect x="574" y="420" width="167" height="15" fill="rgb(240,150,1)"/><text x="577.00" y="430.50">sched_yield (libc-2.2..</text></g><g><title>array_add (number.c) (1 samples, 0.36%)</title><rect x="741" y="180" width="4" height="15" fill="rgb(252,2,35)"/><text x="744.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.36%)</title><rect x="741" y="196" width="4" height="15" fill="rgb(230,171,16)"/><text x="744.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.36%)</title><rect x="741" y="212" width="4" height="15" fill="rgb(243,213,2)"/><text x="744.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.36%)</title><rect x="741" y="228" width="4" height="15" fill="rgb(228,128,7)"/><text x="744.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.36%)</title><rect x="741" y="244" width="4" height="15" fill="rgb(254,205,13)"/><text x="744.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.36%)</title><rect x="741" y="260" width="4" height="15" fill="rgb(231,227,20)"/><text x="744.00" y="270.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.36%)</title><rect x="741" y="276" width="4" height="15" fill="rgb(231,201,45)"/><text x="744.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.36%)</title><rect x="741" y="292" width="4" height="15" fill="rgb(244,92,15)"/><text x="744.00" y="302.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.36%)</title><rect x="741" y="308" width="4" height="15" fill="rgb(254,19,28)"/><text x="744.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.36%)</title><rect x="741" y="324" width="4" height="15" fill="rgb(212,120,34)"/><text x="744.00" y="334.50"></text></g><g><title>0x7f67fcec71a3 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="741" y="340" width="4" height="15" fill="rgb(237,3,36)"/><text x="744.00" y="350.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.36%)</title><rect x="749" y="196" width="4" height="15" fill="rgb(236,178,9)"/><text x="752.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.36%)</title><rect x="753" y="196" width="5" height="15" fill="rgb(223,30,0)"/><text x="756.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.36%)</title><rect x="753" y="212" width="5" height="15" fill="rgb(252,13,43)"/><text x="756.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (4 samples, 1.45%)</title><rect x="745" y="180" width="17" height="15" fill="rgb(210,2,2)"/><text x="748.00" y="190.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.36%)</title><rect x="758" y="196" width="4" height="15" fill="rgb(213,229,21)"/><text x="761.00" y="206.50"></text></g><g><title>dgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 1.09%)</title><rect x="762" y="196" width="13" height="15" fill="rgb(227,221,28)"/><text x="765.00" y="206.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.36%)</title><rect x="779" y="324" width="4" height="15" fill="rgb(221,167,16)"/><text x="782.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.36%)</title><rect x="779" y="340" width="4" height="15" fill="rgb(224,220,41)"/><text x="782.00" y="350.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (93 samples, 33.70%)</title><rect x="775" y="244" width="397" height="15" fill="rgb(253,94,32)"/><text x="778.00" y="254.50">DOUBLE_matmul (matmul.c.src)</text></g><g><title>DOUBLE_gemv (matmul.c.src) (93 samples, 33.70%)</title><rect x="775" y="260" width="397" height="15" fill="rgb(248,40,27)"/><text x="778.00" y="270.50">DOUBLE_gemv (matmul.c.src)</text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (93 samples, 33.70%)</title><rect x="775" y="276" width="397" height="15" fill="rgb(218,210,47)"/><text x="778.00" y="286.50">cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so)</text></g><g><title>dgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (93 samples, 33.70%)</title><rect x="775" y="292" width="397" height="15" fill="rgb(206,31,34)"/><text x="778.00" y="302.50">dgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so)</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (92 samples, 33.33%)</title><rect x="779" y="308" width="393" height="15" fill="rgb(249,49,43)"/><text x="782.00" y="318.50">exec_blas (libopenblasp-r0-34a18dc3.3.7.so)</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (91 samples, 32.97%)</title><rect x="783" y="324" width="389" height="15" fill="rgb(211,89,30)"/><text x="786.00" y="334.50">exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.s..</text></g><g><title>sched_yield (libc-2.29.so) (91 samples, 32.97%)</title><rect x="783" y="340" width="389" height="15" fill="rgb(228,113,36)"/><text x="786.00" y="350.50">sched_yield (libc-2.29.so)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (99 samples, 35.87%)</title><rect x="762" y="180" width="423" height="15" fill="rgb(227,64,8)"/><text x="765.00" y="190.50">safe_sparse_dot (sklearn/utils/extmath.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (96 samples, 34.78%)</title><rect x="775" y="196" width="410" height="15" fill="rgb(210,35,19)"/><text x="778.00" y="206.50">ufunc_generic_call (ufunc_object.c)</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (96 samples, 34.78%)</title><rect x="775" y="212" width="410" height="15" fill="rgb(228,72,2)"/><text x="778.00" y="222.50">PyUFunc_GenericFunction (ufunc_object.c)</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (96 samples, 34.78%)</title><rect x="775" y="228" width="410" height="15" fill="rgb(254,63,49)"/><text x="778.00" y="238.50">PyUFunc_GeneralizedFunction (ufunc_object.c)</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.09%)</title><rect x="1172" y="244" width="13" height="15" fill="rgb(248,180,19)"/><text x="1175.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (3 samples, 1.09%)</title><rect x="1172" y="260" width="13" height="15" fill="rgb(245,123,46)"/><text x="1175.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 1.09%)</title><rect x="1172" y="276" width="13" height="15" fill="rgb(213,129,6)"/><text x="1175.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 1.09%)</title><rect x="1172" y="292" width="13" height="15" fill="rgb(240,190,13)"/><text x="1175.00" y="302.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (3 samples, 1.09%)</title><rect x="1172" y="308" width="13" height="15" fill="rgb(242,18,43)"/><text x="1175.00" y="318.50"></text></g><g><title>all (276 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(240,89,27)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (276 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(243,162,44)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_50_12_float_.py)</text></g><g><title>profile_skl (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (105 samples, 38.04%)</title><rect x="741" y="68" width="449" height="15" fill="rgb(219,135,41)"/><text x="744.00" y="78.50">profile_skl (bench_LinearRegression_default_m_reg_1000_50_12_..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (105 samples, 38.04%)</title><rect x="741" y="84" width="449" height="15" fill="rgb(243,24,15)"/><text x="744.00" y="94.50">setup_profile (bench_LinearRegression_default_m_reg_1000_50_1..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (105 samples, 38.04%)</title><rect x="741" y="100" width="449" height="15" fill="rgb(206,220,27)"/><text x="744.00" y="110.50">profile (bench_LinearRegression_default_m_reg_1000_50_12_floa..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (105 samples, 38.04%)</title><rect x="741" y="116" width="449" height="15" fill="rgb(217,203,28)"/><text x="744.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (105 samples, 38.04%)</title><rect x="741" y="132" width="449" height="15" fill="rgb(226,227,5)"/><text x="744.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/linear_model/_base.py) (105 samples, 38.04%)</title><rect x="741" y="148" width="449" height="15" fill="rgb(230,194,3)"/><text x="744.00" y="158.50">predict (sklearn/linear_model/_base.py)</text></g><g><title>_decision_function (sklearn/linear_model/_base.py) (105 samples, 38.04%)</title><rect x="741" y="164" width="449" height="15" fill="rgb(206,200,4)"/><text x="744.00" y="174.50">_decision_function (sklearn/linear_model/_base.py)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.36%)</title><rect x="1185" y="180" width="5" height="15" fill="rgb(220,166,31)"/><text x="1188.00" y="190.50"></text></g><g><title>0x7f67fcfa3134 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="1185" y="196" width="5" height="15" fill="rgb(243,226,45)"/><text x="1188.00" y="206.50"></text></g></g></svg>