<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1542" onload="init(evt)" viewBox="0 0 1200 1542" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1542" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1525.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1525.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.52%)</title><rect x="10" y="868" width="6" height="15" fill="rgb(218,208,25)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.52%)</title><rect x="10" y="884" width="6" height="15" fill="rgb(229,109,32)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.52%)</title><rect x="10" y="900" width="6" height="15" fill="rgb(222,142,29)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.52%)</title><rect x="10" y="916" width="6" height="15" fill="rgb(250,152,35)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="10" y="932" width="6" height="15" fill="rgb(248,85,1)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="10" y="948" width="6" height="15" fill="rgb(240,226,44)"/><text x="13.00" y="958.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.52%)</title><rect x="16" y="868" width="6" height="15" fill="rgb(229,170,39)"/><text x="19.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.52%)</title><rect x="16" y="884" width="6" height="15" fill="rgb(215,90,9)"/><text x="19.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.52%)</title><rect x="16" y="900" width="6" height="15" fill="rgb(249,48,21)"/><text x="19.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.52%)</title><rect x="16" y="916" width="6" height="15" fill="rgb(244,52,38)"/><text x="19.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.52%)</title><rect x="16" y="932" width="6" height="15" fill="rgb(248,204,6)"/><text x="19.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.52%)</title><rect x="16" y="948" width="6" height="15" fill="rgb(210,128,19)"/><text x="19.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.52%)</title><rect x="16" y="964" width="6" height="15" fill="rgb(221,195,42)"/><text x="19.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.52%)</title><rect x="16" y="980" width="6" height="15" fill="rgb(234,45,3)"/><text x="19.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.52%)</title><rect x="16" y="996" width="6" height="15" fill="rgb(216,122,45)"/><text x="19.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.52%)</title><rect x="16" y="1012" width="6" height="15" fill="rgb(246,104,15)"/><text x="19.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.52%)</title><rect x="16" y="1028" width="6" height="15" fill="rgb(209,48,18)"/><text x="19.00" y="1038.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.52%)</title><rect x="16" y="1044" width="6" height="15" fill="rgb(207,175,52)"/><text x="19.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="196" width="18" height="15" fill="rgb(232,29,32)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="212" width="18" height="15" fill="rgb(244,160,34)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="228" width="18" height="15" fill="rgb(230,164,8)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="244" width="18" height="15" fill="rgb(218,105,27)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.57%)</title><rect x="10" y="260" width="18" height="15" fill="rgb(236,181,10)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="276" width="18" height="15" fill="rgb(245,149,52)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 1.57%)</title><rect x="10" y="292" width="18" height="15" fill="rgb(226,168,1)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="308" width="18" height="15" fill="rgb(211,95,25)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="324" width="18" height="15" fill="rgb(224,111,8)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="340" width="18" height="15" fill="rgb(252,46,30)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.57%)</title><rect x="10" y="356" width="18" height="15" fill="rgb(235,167,50)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="372" width="18" height="15" fill="rgb(234,163,5)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 1.57%)</title><rect x="10" y="388" width="18" height="15" fill="rgb(206,57,7)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="404" width="18" height="15" fill="rgb(251,125,24)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="420" width="18" height="15" fill="rgb(217,29,29)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="436" width="18" height="15" fill="rgb(231,228,52)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.57%)</title><rect x="10" y="452" width="18" height="15" fill="rgb(217,50,10)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="468" width="18" height="15" fill="rgb(233,195,44)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 1.57%)</title><rect x="10" y="484" width="18" height="15" fill="rgb(216,206,39)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="500" width="18" height="15" fill="rgb(222,147,6)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="516" width="18" height="15" fill="rgb(229,75,29)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="532" width="18" height="15" fill="rgb(228,155,2)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.57%)</title><rect x="10" y="548" width="18" height="15" fill="rgb(222,153,17)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="564" width="18" height="15" fill="rgb(230,9,16)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 1.57%)</title><rect x="10" y="580" width="18" height="15" fill="rgb(248,42,33)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="596" width="18" height="15" fill="rgb(235,63,44)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="612" width="18" height="15" fill="rgb(228,109,51)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="628" width="18" height="15" fill="rgb(246,38,22)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="644" width="18" height="15" fill="rgb(212,36,9)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="660" width="18" height="15" fill="rgb(243,97,40)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="676" width="18" height="15" fill="rgb(246,48,22)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.57%)</title><rect x="10" y="692" width="18" height="15" fill="rgb(241,88,14)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="708" width="18" height="15" fill="rgb(232,4,7)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 1.57%)</title><rect x="10" y="724" width="18" height="15" fill="rgb(213,210,39)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="740" width="18" height="15" fill="rgb(231,174,0)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="756" width="18" height="15" fill="rgb(240,150,40)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="772" width="18" height="15" fill="rgb(219,59,45)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.57%)</title><rect x="10" y="788" width="18" height="15" fill="rgb(243,56,18)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="10" y="804" width="18" height="15" fill="rgb(221,228,0)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 1.57%)</title><rect x="10" y="820" width="18" height="15" fill="rgb(250,148,11)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 1.57%)</title><rect x="10" y="836" width="18" height="15" fill="rgb(213,70,39)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 1.57%)</title><rect x="10" y="852" width="18" height="15" fill="rgb(219,226,33)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.52%)</title><rect x="22" y="868" width="6" height="15" fill="rgb(214,59,6)"/><text x="25.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.52%)</title><rect x="22" y="884" width="6" height="15" fill="rgb(249,227,10)"/><text x="25.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.52%)</title><rect x="22" y="900" width="6" height="15" fill="rgb(250,197,48)"/><text x="25.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.52%)</title><rect x="22" y="916" width="6" height="15" fill="rgb(218,195,27)"/><text x="25.00" y="926.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.52%)</title><rect x="22" y="932" width="6" height="15" fill="rgb(220,74,6)"/><text x="25.00" y="942.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.52%)</title><rect x="22" y="948" width="6" height="15" fill="rgb(225,148,21)"/><text x="25.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="484" width="6" height="15" fill="rgb(243,38,9)"/><text x="31.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="500" width="6" height="15" fill="rgb(226,205,5)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="516" width="6" height="15" fill="rgb(247,185,34)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="532" width="6" height="15" fill="rgb(237,181,40)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="28" y="548" width="6" height="15" fill="rgb(217,60,2)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="564" width="6" height="15" fill="rgb(228,227,25)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.52%)</title><rect x="28" y="580" width="6" height="15" fill="rgb(213,120,31)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="596" width="6" height="15" fill="rgb(231,35,9)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="612" width="6" height="15" fill="rgb(206,6,0)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="628" width="6" height="15" fill="rgb(206,208,7)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="28" y="644" width="6" height="15" fill="rgb(205,28,10)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="660" width="6" height="15" fill="rgb(208,224,51)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.52%)</title><rect x="28" y="676" width="6" height="15" fill="rgb(247,209,44)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="692" width="6" height="15" fill="rgb(209,139,2)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="708" width="6" height="15" fill="rgb(234,144,21)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="724" width="6" height="15" fill="rgb(253,54,1)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="28" y="740" width="6" height="15" fill="rgb(228,67,33)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="756" width="6" height="15" fill="rgb(225,73,16)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.52%)</title><rect x="28" y="772" width="6" height="15" fill="rgb(210,114,35)"/><text x="31.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="788" width="6" height="15" fill="rgb(214,81,19)"/><text x="31.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="804" width="6" height="15" fill="rgb(215,158,54)"/><text x="31.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="820" width="6" height="15" fill="rgb(241,127,26)"/><text x="31.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="28" y="836" width="6" height="15" fill="rgb(229,223,27)"/><text x="31.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="852" width="6" height="15" fill="rgb(208,96,0)"/><text x="31.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.52%)</title><rect x="28" y="868" width="6" height="15" fill="rgb(211,14,36)"/><text x="31.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="884" width="6" height="15" fill="rgb(248,27,29)"/><text x="31.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="900" width="6" height="15" fill="rgb(250,214,45)"/><text x="31.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="916" width="6" height="15" fill="rgb(215,198,12)"/><text x="31.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="932" width="6" height="15" fill="rgb(230,214,2)"/><text x="31.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="948" width="6" height="15" fill="rgb(246,149,32)"/><text x="31.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="964" width="6" height="15" fill="rgb(233,206,2)"/><text x="31.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="28" y="980" width="6" height="15" fill="rgb(213,163,52)"/><text x="31.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="996" width="6" height="15" fill="rgb(250,120,9)"/><text x="31.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.52%)</title><rect x="28" y="1012" width="6" height="15" fill="rgb(224,201,3)"/><text x="31.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="1028" width="6" height="15" fill="rgb(214,142,8)"/><text x="31.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="1044" width="6" height="15" fill="rgb(231,31,7)"/><text x="31.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="1060" width="6" height="15" fill="rgb(250,29,38)"/><text x="31.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="28" y="1076" width="6" height="15" fill="rgb(237,84,29)"/><text x="31.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="1092" width="6" height="15" fill="rgb(253,142,31)"/><text x="31.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.52%)</title><rect x="28" y="1108" width="6" height="15" fill="rgb(232,77,8)"/><text x="31.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="1124" width="6" height="15" fill="rgb(225,130,36)"/><text x="31.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="1140" width="6" height="15" fill="rgb(242,138,51)"/><text x="31.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="1156" width="6" height="15" fill="rgb(211,29,51)"/><text x="31.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="28" y="1172" width="6" height="15" fill="rgb(221,68,50)"/><text x="31.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="1188" width="6" height="15" fill="rgb(223,45,26)"/><text x="31.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.52%)</title><rect x="28" y="1204" width="6" height="15" fill="rgb(249,57,44)"/><text x="31.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="1220" width="6" height="15" fill="rgb(249,129,9)"/><text x="31.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="1236" width="6" height="15" fill="rgb(227,149,30)"/><text x="31.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="1252" width="6" height="15" fill="rgb(249,137,6)"/><text x="31.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="28" y="1268" width="6" height="15" fill="rgb(252,132,18)"/><text x="31.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="28" y="1284" width="6" height="15" fill="rgb(221,168,15)"/><text x="31.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.52%)</title><rect x="28" y="1300" width="6" height="15" fill="rgb(208,176,53)"/><text x="31.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.52%)</title><rect x="28" y="1316" width="6" height="15" fill="rgb(238,122,52)"/><text x="31.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.52%)</title><rect x="28" y="1332" width="6" height="15" fill="rgb(247,191,45)"/><text x="31.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.52%)</title><rect x="28" y="1348" width="6" height="15" fill="rgb(235,202,36)"/><text x="31.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.52%)</title><rect x="28" y="1364" width="6" height="15" fill="rgb(240,47,3)"/><text x="31.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.52%)</title><rect x="28" y="1380" width="6" height="15" fill="rgb(213,47,21)"/><text x="31.00" y="1390.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.52%)</title><rect x="28" y="1396" width="6" height="15" fill="rgb(239,54,13)"/><text x="31.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="34" y="772" width="6" height="15" fill="rgb(253,220,13)"/><text x="37.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="34" y="788" width="6" height="15" fill="rgb(248,223,18)"/><text x="37.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="34" y="804" width="6" height="15" fill="rgb(243,52,12)"/><text x="37.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="34" y="820" width="6" height="15" fill="rgb(207,36,30)"/><text x="37.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="34" y="836" width="6" height="15" fill="rgb(215,3,40)"/><text x="37.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="34" y="852" width="6" height="15" fill="rgb(229,204,50)"/><text x="37.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.52%)</title><rect x="34" y="868" width="6" height="15" fill="rgb(249,156,9)"/><text x="37.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="34" y="884" width="6" height="15" fill="rgb(206,180,41)"/><text x="37.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="34" y="900" width="6" height="15" fill="rgb(221,153,16)"/><text x="37.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="34" y="916" width="6" height="15" fill="rgb(229,101,19)"/><text x="37.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="34" y="932" width="6" height="15" fill="rgb(222,95,43)"/><text x="37.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="34" y="948" width="6" height="15" fill="rgb(228,132,46)"/><text x="37.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py) (1 samples, 0.52%)</title><rect x="34" y="964" width="6" height="15" fill="rgb(213,49,19)"/><text x="37.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="34" y="980" width="6" height="15" fill="rgb(231,36,28)"/><text x="37.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="34" y="996" width="6" height="15" fill="rgb(210,28,28)"/><text x="37.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="34" y="1012" width="6" height="15" fill="rgb(217,50,43)"/><text x="37.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="34" y="1028" width="6" height="15" fill="rgb(223,66,6)"/><text x="37.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="34" y="1044" width="6" height="15" fill="rgb(240,139,11)"/><text x="37.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="34" y="1060" width="6" height="15" fill="rgb(243,76,30)"/><text x="37.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="34" y="1076" width="6" height="15" fill="rgb(247,70,18)"/><text x="37.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/compat/numpy/function.py) (1 samples, 0.52%)</title><rect x="34" y="1092" width="6" height="15" fill="rgb(251,84,4)"/><text x="37.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="34" y="1108" width="6" height="15" fill="rgb(207,150,24)"/><text x="37.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="40" y="1092" width="7" height="15" fill="rgb(208,15,34)"/><text x="43.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.52%)</title><rect x="40" y="1108" width="7" height="15" fill="rgb(250,109,15)"/><text x="43.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="40" y="1124" width="7" height="15" fill="rgb(238,149,36)"/><text x="43.00" y="1134.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="40" y="1140" width="7" height="15" fill="rgb(229,150,7)"/><text x="43.00" y="1150.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="40" y="1156" width="7" height="15" fill="rgb(238,7,19)"/><text x="43.00" y="1166.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="40" y="1172" width="7" height="15" fill="rgb(213,152,43)"/><text x="43.00" y="1182.50"></text></g><g><title>thread_PyThread_allocate_lock (python3.7) (1 samples, 0.52%)</title><rect x="40" y="1188" width="7" height="15" fill="rgb(211,8,21)"/><text x="43.00" y="1198.50"></text></g><g><title>PyThread_allocate_lock (python3.7) (1 samples, 0.52%)</title><rect x="40" y="1204" width="7" height="15" fill="rgb(231,102,52)"/><text x="43.00" y="1214.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.52%)</title><rect x="40" y="1220" width="7" height="15" fill="rgb(223,97,35)"/><text x="43.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="40" y="932" width="13" height="15" fill="rgb(225,189,7)"/><text x="43.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="40" y="948" width="13" height="15" fill="rgb(230,203,52)"/><text x="43.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="40" y="964" width="13" height="15" fill="rgb(244,68,47)"/><text x="43.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.05%)</title><rect x="40" y="980" width="13" height="15" fill="rgb(239,2,38)"/><text x="43.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="40" y="996" width="13" height="15" fill="rgb(225,32,19)"/><text x="43.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 1.05%)</title><rect x="40" y="1012" width="13" height="15" fill="rgb(252,37,0)"/><text x="43.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="40" y="1028" width="13" height="15" fill="rgb(213,56,54)"/><text x="43.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="40" y="1044" width="13" height="15" fill="rgb(238,79,28)"/><text x="43.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="40" y="1060" width="13" height="15" fill="rgb(249,94,20)"/><text x="43.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.05%)</title><rect x="40" y="1076" width="13" height="15" fill="rgb(224,62,51)"/><text x="43.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="47" y="1092" width="6" height="15" fill="rgb(205,199,32)"/><text x="50.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="47" y="1108" width="6" height="15" fill="rgb(251,163,14)"/><text x="50.00" y="1118.50"></text></g><g><title>gc_traverse (python3.7) (1 samples, 0.52%)</title><rect x="47" y="1124" width="6" height="15" fill="rgb(236,18,28)"/><text x="50.00" y="1134.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 2.62%)</title><rect x="28" y="340" width="31" height="15" fill="rgb(210,213,39)"/><text x="31.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.62%)</title><rect x="28" y="356" width="31" height="15" fill="rgb(242,132,14)"/><text x="31.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.62%)</title><rect x="28" y="372" width="31" height="15" fill="rgb(215,199,41)"/><text x="31.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.62%)</title><rect x="28" y="388" width="31" height="15" fill="rgb(247,80,34)"/><text x="31.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.62%)</title><rect x="28" y="404" width="31" height="15" fill="rgb(211,192,8)"/><text x="31.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.62%)</title><rect x="28" y="420" width="31" height="15" fill="rgb(205,91,1)"/><text x="31.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 2.62%)</title><rect x="28" y="436" width="31" height="15" fill="rgb(218,192,31)"/><text x="31.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.62%)</title><rect x="28" y="452" width="31" height="15" fill="rgb(222,182,53)"/><text x="31.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.62%)</title><rect x="28" y="468" width="31" height="15" fill="rgb(233,196,25)"/><text x="31.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.09%)</title><rect x="34" y="484" width="25" height="15" fill="rgb(233,0,17)"/><text x="37.00" y="494.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.09%)</title><rect x="34" y="500" width="25" height="15" fill="rgb(214,24,9)"/><text x="37.00" y="510.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.09%)</title><rect x="34" y="516" width="25" height="15" fill="rgb(244,71,33)"/><text x="37.00" y="526.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 2.09%)</title><rect x="34" y="532" width="25" height="15" fill="rgb(207,215,0)"/><text x="37.00" y="542.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.09%)</title><rect x="34" y="548" width="25" height="15" fill="rgb(249,16,8)"/><text x="37.00" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.09%)</title><rect x="34" y="564" width="25" height="15" fill="rgb(229,69,22)"/><text x="37.00" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.09%)</title><rect x="34" y="580" width="25" height="15" fill="rgb(224,126,35)"/><text x="37.00" y="590.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.09%)</title><rect x="34" y="596" width="25" height="15" fill="rgb(253,162,47)"/><text x="37.00" y="606.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.09%)</title><rect x="34" y="612" width="25" height="15" fill="rgb(239,15,22)"/><text x="37.00" y="622.50">_..</text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 2.09%)</title><rect x="34" y="628" width="25" height="15" fill="rgb(224,216,27)"/><text x="37.00" y="638.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.09%)</title><rect x="34" y="644" width="25" height="15" fill="rgb(227,149,46)"/><text x="37.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.09%)</title><rect x="34" y="660" width="25" height="15" fill="rgb(221,53,5)"/><text x="37.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.09%)</title><rect x="34" y="676" width="25" height="15" fill="rgb(251,171,54)"/><text x="37.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.09%)</title><rect x="34" y="692" width="25" height="15" fill="rgb(219,178,33)"/><text x="37.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.09%)</title><rect x="34" y="708" width="25" height="15" fill="rgb(229,190,0)"/><text x="37.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (pandas/core/api.py) (4 samples, 2.09%)</title><rect x="34" y="724" width="25" height="15" fill="rgb(250,121,9)"/><text x="37.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.09%)</title><rect x="34" y="740" width="25" height="15" fill="rgb(217,204,13)"/><text x="37.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.09%)</title><rect x="34" y="756" width="25" height="15" fill="rgb(205,47,34)"/><text x="37.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="40" y="772" width="19" height="15" fill="rgb(207,111,54)"/><text x="43.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.57%)</title><rect x="40" y="788" width="19" height="15" fill="rgb(215,151,37)"/><text x="43.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="40" y="804" width="19" height="15" fill="rgb(222,0,41)"/><text x="43.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 1.57%)</title><rect x="40" y="820" width="19" height="15" fill="rgb(245,16,23)"/><text x="43.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="40" y="836" width="19" height="15" fill="rgb(206,73,6)"/><text x="43.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="40" y="852" width="19" height="15" fill="rgb(226,130,22)"/><text x="43.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="40" y="868" width="19" height="15" fill="rgb(242,58,43)"/><text x="43.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.57%)</title><rect x="40" y="884" width="19" height="15" fill="rgb(223,125,12)"/><text x="43.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.57%)</title><rect x="40" y="900" width="19" height="15" fill="rgb(231,28,15)"/><text x="43.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 1.57%)</title><rect x="40" y="916" width="19" height="15" fill="rgb(220,36,17)"/><text x="43.00" y="926.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="53" y="932" width="6" height="15" fill="rgb(226,72,17)"/><text x="56.00" y="942.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 3.14%)</title><rect x="28" y="244" width="37" height="15" fill="rgb(218,86,14)"/><text x="31.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.14%)</title><rect x="28" y="260" width="37" height="15" fill="rgb(211,61,4)"/><text x="31.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.14%)</title><rect x="28" y="276" width="37" height="15" fill="rgb(210,163,36)"/><text x="31.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.14%)</title><rect x="28" y="292" width="37" height="15" fill="rgb(252,12,33)"/><text x="31.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 3.14%)</title><rect x="28" y="308" width="37" height="15" fill="rgb(237,53,25)"/><text x="31.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.14%)</title><rect x="28" y="324" width="37" height="15" fill="rgb(225,206,4)"/><text x="31.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.52%)</title><rect x="59" y="340" width="6" height="15" fill="rgb(213,27,39)"/><text x="62.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="356" width="6" height="15" fill="rgb(236,107,20)"/><text x="62.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="372" width="6" height="15" fill="rgb(220,125,42)"/><text x="62.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="388" width="6" height="15" fill="rgb(206,198,12)"/><text x="62.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="404" width="6" height="15" fill="rgb(206,221,28)"/><text x="62.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="420" width="6" height="15" fill="rgb(239,192,40)"/><text x="62.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="436" width="6" height="15" fill="rgb(241,102,21)"/><text x="62.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="59" y="452" width="6" height="15" fill="rgb(238,96,50)"/><text x="62.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="468" width="6" height="15" fill="rgb(238,45,0)"/><text x="62.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.52%)</title><rect x="59" y="484" width="6" height="15" fill="rgb(252,197,15)"/><text x="62.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="500" width="6" height="15" fill="rgb(224,178,54)"/><text x="62.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="516" width="6" height="15" fill="rgb(216,94,0)"/><text x="62.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="532" width="6" height="15" fill="rgb(240,139,18)"/><text x="62.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="59" y="548" width="6" height="15" fill="rgb(239,103,2)"/><text x="62.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="564" width="6" height="15" fill="rgb(243,112,9)"/><text x="62.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.52%)</title><rect x="59" y="580" width="6" height="15" fill="rgb(242,127,0)"/><text x="62.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="596" width="6" height="15" fill="rgb(219,62,17)"/><text x="62.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="612" width="6" height="15" fill="rgb(225,165,24)"/><text x="62.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="628" width="6" height="15" fill="rgb(250,103,46)"/><text x="62.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="59" y="644" width="6" height="15" fill="rgb(236,11,25)"/><text x="62.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="660" width="6" height="15" fill="rgb(209,136,3)"/><text x="62.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.52%)</title><rect x="59" y="676" width="6" height="15" fill="rgb(242,143,39)"/><text x="62.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="692" width="6" height="15" fill="rgb(254,144,46)"/><text x="62.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="708" width="6" height="15" fill="rgb(243,184,6)"/><text x="62.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="724" width="6" height="15" fill="rgb(244,206,5)"/><text x="62.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="59" y="740" width="6" height="15" fill="rgb(233,46,23)"/><text x="62.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="756" width="6" height="15" fill="rgb(210,133,15)"/><text x="62.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.52%)</title><rect x="59" y="772" width="6" height="15" fill="rgb(226,73,24)"/><text x="62.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="788" width="6" height="15" fill="rgb(211,203,13)"/><text x="62.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="804" width="6" height="15" fill="rgb(233,94,4)"/><text x="62.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="820" width="6" height="15" fill="rgb(241,124,30)"/><text x="62.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="836" width="6" height="15" fill="rgb(250,98,8)"/><text x="62.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="852" width="6" height="15" fill="rgb(235,82,10)"/><text x="62.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="59" y="868" width="6" height="15" fill="rgb(211,59,29)"/><text x="62.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="884" width="6" height="15" fill="rgb(212,203,39)"/><text x="62.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.52%)</title><rect x="59" y="900" width="6" height="15" fill="rgb(227,188,12)"/><text x="62.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="916" width="6" height="15" fill="rgb(219,29,31)"/><text x="62.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="932" width="6" height="15" fill="rgb(232,191,17)"/><text x="62.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="948" width="6" height="15" fill="rgb(245,112,40)"/><text x="62.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="964" width="6" height="15" fill="rgb(215,168,24)"/><text x="62.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="980" width="6" height="15" fill="rgb(227,122,8)"/><text x="62.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="996" width="6" height="15" fill="rgb(236,49,30)"/><text x="62.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="59" y="1012" width="6" height="15" fill="rgb(217,29,40)"/><text x="62.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="1028" width="6" height="15" fill="rgb(207,102,11)"/><text x="62.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.52%)</title><rect x="59" y="1044" width="6" height="15" fill="rgb(229,108,36)"/><text x="62.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="1060" width="6" height="15" fill="rgb(246,133,2)"/><text x="62.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="1076" width="6" height="15" fill="rgb(229,217,51)"/><text x="62.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="1092" width="6" height="15" fill="rgb(254,203,31)"/><text x="62.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="1108" width="6" height="15" fill="rgb(217,88,6)"/><text x="62.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="1124" width="6" height="15" fill="rgb(250,57,38)"/><text x="62.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="59" y="1140" width="6" height="15" fill="rgb(225,144,20)"/><text x="62.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="1156" width="6" height="15" fill="rgb(232,60,22)"/><text x="62.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.52%)</title><rect x="59" y="1172" width="6" height="15" fill="rgb(231,172,40)"/><text x="62.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="1188" width="6" height="15" fill="rgb(248,6,8)"/><text x="62.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="1204" width="6" height="15" fill="rgb(245,224,29)"/><text x="62.00" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="1220" width="6" height="15" fill="rgb(206,106,52)"/><text x="62.00" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="59" y="1236" width="6" height="15" fill="rgb(246,133,11)"/><text x="62.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="1252" width="6" height="15" fill="rgb(242,220,45)"/><text x="62.00" y="1262.50"></text></g><g><title>&lt;module&gt; (OpenSSL/_util.py) (1 samples, 0.52%)</title><rect x="59" y="1268" width="6" height="15" fill="rgb(254,67,48)"/><text x="62.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="1284" width="6" height="15" fill="rgb(232,14,48)"/><text x="62.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="1300" width="6" height="15" fill="rgb(227,147,9)"/><text x="62.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="1316" width="6" height="15" fill="rgb(214,58,42)"/><text x="62.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="1332" width="6" height="15" fill="rgb(227,220,39)"/><text x="62.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="1348" width="6" height="15" fill="rgb(223,175,10)"/><text x="62.00" y="1358.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="59" y="1364" width="6" height="15" fill="rgb(213,137,45)"/><text x="62.00" y="1374.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="59" y="1380" width="6" height="15" fill="rgb(218,103,26)"/><text x="62.00" y="1390.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="59" y="1396" width="6" height="15" fill="rgb(220,52,45)"/><text x="62.00" y="1406.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="59" y="1412" width="6" height="15" fill="rgb(215,122,39)"/><text x="62.00" y="1422.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="59" y="1428" width="6" height="15" fill="rgb(247,52,7)"/><text x="62.00" y="1438.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="59" y="1444" width="6" height="15" fill="rgb(248,146,31)"/><text x="62.00" y="1454.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="59" y="1460" width="6" height="15" fill="rgb(248,130,18)"/><text x="62.00" y="1470.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.52%)</title><rect x="59" y="1476" width="6" height="15" fill="rgb(205,54,15)"/><text x="62.00" y="1486.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.52%)</title><rect x="59" y="1492" width="6" height="15" fill="rgb(231,81,5)"/><text x="62.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 5.24%)</title><rect x="10" y="68" width="61" height="15" fill="rgb(213,4,31)"/><text x="13.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 5.24%)</title><rect x="10" y="84" width="61" height="15" fill="rgb(233,51,30)"/><text x="13.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 5.24%)</title><rect x="10" y="100" width="61" height="15" fill="rgb(236,33,23)"/><text x="13.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 5.24%)</title><rect x="10" y="116" width="61" height="15" fill="rgb(251,89,30)"/><text x="13.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 5.24%)</title><rect x="10" y="132" width="61" height="15" fill="rgb(212,179,47)"/><text x="13.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py) (10 samples, 5.24%)</title><rect x="10" y="148" width="61" height="15" fill="rgb(224,17,4)"/><text x="13.00" y="158.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 5.24%)</title><rect x="10" y="164" width="61" height="15" fill="rgb(229,85,23)"/><text x="13.00" y="174.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 5.24%)</title><rect x="10" y="180" width="61" height="15" fill="rgb(234,60,43)"/><text x="13.00" y="190.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.66%)</title><rect x="28" y="196" width="43" height="15" fill="rgb(228,132,19)"/><text x="31.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 3.66%)</title><rect x="28" y="212" width="43" height="15" fill="rgb(241,124,36)"/><text x="31.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.66%)</title><rect x="28" y="228" width="43" height="15" fill="rgb(241,210,51)"/><text x="31.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.52%)</title><rect x="65" y="244" width="6" height="15" fill="rgb(245,27,19)"/><text x="68.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="260" width="6" height="15" fill="rgb(211,137,31)"/><text x="68.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="276" width="6" height="15" fill="rgb(225,7,25)"/><text x="68.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="292" width="6" height="15" fill="rgb(237,171,31)"/><text x="68.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="308" width="6" height="15" fill="rgb(245,69,12)"/><text x="68.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="324" width="6" height="15" fill="rgb(246,229,43)"/><text x="68.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="65" y="340" width="6" height="15" fill="rgb(211,76,7)"/><text x="68.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="356" width="6" height="15" fill="rgb(222,29,34)"/><text x="68.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.52%)</title><rect x="65" y="372" width="6" height="15" fill="rgb(212,82,46)"/><text x="68.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="388" width="6" height="15" fill="rgb(223,193,0)"/><text x="68.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="404" width="6" height="15" fill="rgb(224,27,9)"/><text x="68.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="420" width="6" height="15" fill="rgb(247,162,22)"/><text x="68.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="436" width="6" height="15" fill="rgb(217,17,42)"/><text x="68.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="452" width="6" height="15" fill="rgb(219,39,27)"/><text x="68.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="65" y="468" width="6" height="15" fill="rgb(248,79,41)"/><text x="68.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="484" width="6" height="15" fill="rgb(224,214,36)"/><text x="68.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.52%)</title><rect x="65" y="500" width="6" height="15" fill="rgb(233,198,18)"/><text x="68.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="516" width="6" height="15" fill="rgb(254,66,16)"/><text x="68.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="532" width="6" height="15" fill="rgb(234,133,44)"/><text x="68.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="548" width="6" height="15" fill="rgb(207,13,35)"/><text x="68.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="65" y="564" width="6" height="15" fill="rgb(251,137,15)"/><text x="68.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="580" width="6" height="15" fill="rgb(211,36,33)"/><text x="68.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (1 samples, 0.52%)</title><rect x="65" y="596" width="6" height="15" fill="rgb(205,42,38)"/><text x="68.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="612" width="6" height="15" fill="rgb(251,23,17)"/><text x="68.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="628" width="6" height="15" fill="rgb(223,48,19)"/><text x="68.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="644" width="6" height="15" fill="rgb(218,61,42)"/><text x="68.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="65" y="660" width="6" height="15" fill="rgb(221,99,10)"/><text x="68.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="676" width="6" height="15" fill="rgb(224,169,25)"/><text x="68.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py) (1 samples, 0.52%)</title><rect x="65" y="692" width="6" height="15" fill="rgb(228,40,0)"/><text x="68.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="708" width="6" height="15" fill="rgb(219,44,49)"/><text x="68.00" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="724" width="6" height="15" fill="rgb(219,89,17)"/><text x="68.00" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="740" width="6" height="15" fill="rgb(207,183,29)"/><text x="68.00" y="750.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="756" width="6" height="15" fill="rgb(217,52,29)"/><text x="68.00" y="766.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="65" y="772" width="6" height="15" fill="rgb(216,145,9)"/><text x="68.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="65" y="788" width="6" height="15" fill="rgb(232,78,42)"/><text x="68.00" y="798.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.52%)</title><rect x="65" y="804" width="6" height="15" fill="rgb(218,122,19)"/><text x="68.00" y="814.50"></text></g><g><title>0x7f564a8b8995 (libdl-2.29.so) (1 samples, 0.52%)</title><rect x="65" y="820" width="6" height="15" fill="rgb(234,33,23)"/><text x="68.00" y="830.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.52%)</title><rect x="65" y="836" width="6" height="15" fill="rgb(210,126,16)"/><text x="68.00" y="846.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.52%)</title><rect x="65" y="852" width="6" height="15" fill="rgb(254,125,23)"/><text x="68.00" y="862.50"></text></g><g><title>0x7f564a8b8258 (libdl-2.29.so) (1 samples, 0.52%)</title><rect x="65" y="868" width="6" height="15" fill="rgb(245,17,41)"/><text x="68.00" y="878.50"></text></g><g><title>0x7f564a905d7a (ld-2.29.so) (1 samples, 0.52%)</title><rect x="65" y="884" width="6" height="15" fill="rgb(243,93,4)"/><text x="68.00" y="894.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.52%)</title><rect x="65" y="900" width="6" height="15" fill="rgb(237,84,46)"/><text x="68.00" y="910.50"></text></g><g><title>0x7f564a90618b (ld-2.29.so) (1 samples, 0.52%)</title><rect x="65" y="916" width="6" height="15" fill="rgb(233,150,37)"/><text x="68.00" y="926.50"></text></g><g><title>0x7f564a8fbbcb (ld-2.29.so) (1 samples, 0.52%)</title><rect x="65" y="932" width="6" height="15" fill="rgb(211,62,51)"/><text x="68.00" y="942.50"></text></g><g><title>0x7f564a8fa1b6 (ld-2.29.so) (1 samples, 0.52%)</title><rect x="65" y="948" width="6" height="15" fill="rgb(214,136,50)"/><text x="68.00" y="958.50"></text></g><g><title>0x7f564a90da04 (ld-2.29.so) (1 samples, 0.52%)</title><rect x="65" y="964" width="6" height="15" fill="rgb(217,135,22)"/><text x="68.00" y="974.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.52%)</title><rect x="84" y="180" width="6" height="15" fill="rgb(207,82,38)"/><text x="87.00" y="190.50"></text></g><g><title>0x7f560565eff9 (?) (1 samples, 0.52%)</title><rect x="96" y="212" width="6" height="15" fill="rgb(237,66,35)"/><text x="99.00" y="222.50"></text></g><g><title>0x7f5605659ef6 (?) (1 samples, 0.52%)</title><rect x="96" y="228" width="6" height="15" fill="rgb(206,54,36)"/><text x="99.00" y="238.50"></text></g><g><title>0x7f560564e962 (?) (1 samples, 0.52%)</title><rect x="96" y="244" width="6" height="15" fill="rgb(244,5,9)"/><text x="99.00" y="254.50"></text></g><g><title>0x7f56056827a7 (?) (1 samples, 0.52%)</title><rect x="96" y="260" width="6" height="15" fill="rgb(224,175,19)"/><text x="99.00" y="270.50"></text></g><g><title>0x7f5605682379 (?) (1 samples, 0.52%)</title><rect x="96" y="276" width="6" height="15" fill="rgb(249,125,27)"/><text x="99.00" y="286.50"></text></g><g><title>0x7f5605ae08b8 (?) (1 samples, 0.52%)</title><rect x="96" y="292" width="6" height="15" fill="rgb(230,35,21)"/><text x="99.00" y="302.50"></text></g><g><title>0x7f5605adec7f (?) (1 samples, 0.52%)</title><rect x="96" y="308" width="6" height="15" fill="rgb(247,85,42)"/><text x="99.00" y="318.50"></text></g><g><title>0x7f5605af2fd3 (?) (1 samples, 0.52%)</title><rect x="96" y="324" width="6" height="15" fill="rgb(253,94,20)"/><text x="99.00" y="334.50"></text></g><g><title>0x7f5605a93bfd (?) (1 samples, 0.52%)</title><rect x="96" y="340" width="6" height="15" fill="rgb(213,137,30)"/><text x="99.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="108" y="340" width="7" height="15" fill="rgb(215,28,0)"/><text x="111.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="108" y="356" width="7" height="15" fill="rgb(216,37,15)"/><text x="111.00" y="366.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="108" y="372" width="7" height="15" fill="rgb(208,57,12)"/><text x="111.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.52%)</title><rect x="108" y="388" width="7" height="15" fill="rgb(228,208,34)"/><text x="111.00" y="398.50"></text></g><g><title>0x7f564a63091c (libc-2.29.so) (1 samples, 0.52%)</title><rect x="374" y="356" width="6" height="15" fill="rgb(224,79,6)"/><text x="377.00" y="366.50"></text></g><g><title>0x7f564a630991 (libc-2.29.so) (2 samples, 1.05%)</title><rect x="380" y="356" width="13" height="15" fill="rgb(234,215,48)"/><text x="383.00" y="366.50"></text></g><g><title>0x7f564a630bd8 (libc-2.29.so) (1 samples, 0.52%)</title><rect x="393" y="356" width="6" height="15" fill="rgb(232,122,21)"/><text x="396.00" y="366.50"></text></g><g><title>0x7f564a650d50 (libc-2.29.so) (1 samples, 0.52%)</title><rect x="399" y="356" width="6" height="15" fill="rgb(208,24,20)"/><text x="402.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 1.05%)</title><rect x="405" y="356" width="12" height="15" fill="rgb(245,115,29)"/><text x="408.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="417" y="356" width="6" height="15" fill="rgb(243,147,5)"/><text x="420.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="417" y="372" width="6" height="15" fill="rgb(213,127,25)"/><text x="420.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="417" y="388" width="6" height="15" fill="rgb(226,188,14)"/><text x="420.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="417" y="404" width="6" height="15" fill="rgb(252,206,30)"/><text x="420.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="417" y="420" width="6" height="15" fill="rgb(229,154,37)"/><text x="420.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="417" y="436" width="6" height="15" fill="rgb(243,10,8)"/><text x="420.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="417" y="452" width="6" height="15" fill="rgb(223,106,51)"/><text x="420.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="417" y="468" width="6" height="15" fill="rgb(249,92,45)"/><text x="420.00" y="478.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="417" y="484" width="6" height="15" fill="rgb(246,130,35)"/><text x="420.00" y="494.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (63 samples, 32.98%)</title><rect x="108" y="276" width="390" height="15" fill="rgb(208,108,53)"/><text x="111.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (63 samples, 32.98%)</title><rect x="108" y="292" width="390" height="15" fill="rgb(224,209,40)"/><text x="111.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (63 samples, 32.98%)</title><rect x="108" y="308" width="390" height="15" fill="rgb(210,171,21)"/><text x="111.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/cap..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (63 samples, 32.98%)</title><rect x="108" y="324" width="390" height="15" fill="rgb(247,27,49)"/><text x="111.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime..</text></g><g><title>onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (62 samples, 32.46%)</title><rect x="115" y="340" width="383" height="15" fill="rgb(209,207,15)"/><text x="118.00" y="350.50">onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (on..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 6.28%)</title><rect x="423" y="356" width="75" height="15" fill="rgb(251,76,36)"/><text x="426.00" y="366.50">std::vec..</text></g><g><title>operator new (libstdc++.so.6.0.28) (6 samples, 3.14%)</title><rect x="460" y="372" width="38" height="15" fill="rgb(231,180,48)"/><text x="463.00" y="382.50">ope..</text></g><g><title>malloc (libc-2.29.so) (5 samples, 2.62%)</title><rect x="467" y="388" width="31" height="15" fill="rgb(235,189,30)"/><text x="470.00" y="398.50">ma..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (64 samples, 33.51%)</title><rect x="108" y="260" width="396" height="15" fill="rgb(242,120,10)"/><text x="111.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="498" y="276" width="6" height="15" fill="rgb(230,205,14)"/><text x="501.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.52%)</title><rect x="498" y="292" width="6" height="15" fill="rgb(233,28,15)"/><text x="501.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.52%)</title><rect x="498" y="308" width="6" height="15" fill="rgb(222,179,35)"/><text x="501.00" y="318.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="516" y="276" width="6" height="15" fill="rgb(215,160,48)"/><text x="519.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 2.09%)</title><rect x="504" y="260" width="24" height="15" fill="rgb(218,201,0)"/><text x="507.00" y="270.50">o..</text></g><g><title>std::__shared_ptr&lt;void, (__gnu_cxx::_Lock_policy)2&gt;::reset&lt;void, void (*)(void*)&gt; [clone .localalias.62] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="522" y="276" width="6" height="15" fill="rgb(239,66,39)"/><text x="525.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.52%)</title><rect x="522" y="292" width="6" height="15" fill="rgb(240,90,21)"/><text x="525.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.52%)</title><rect x="522" y="308" width="6" height="15" fill="rgb(238,94,25)"/><text x="525.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="528" y="260" width="7" height="15" fill="rgb(245,207,13)"/><text x="531.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.52%)</title><rect x="528" y="276" width="7" height="15" fill="rgb(223,215,20)"/><text x="531.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.52%)</title><rect x="528" y="292" width="7" height="15" fill="rgb(240,199,40)"/><text x="531.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.52%)</title><rect x="528" y="308" width="7" height="15" fill="rgb(246,193,0)"/><text x="531.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.52%)</title><rect x="528" y="324" width="7" height="15" fill="rgb(235,103,33)"/><text x="531.00" y="334.50"></text></g><g><title>profile_ort (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (76 samples, 39.79%)</title><rect x="71" y="68" width="470" height="15" fill="rgb(249,49,18)"/><text x="74.00" y="78.50">profile_ort (bench_LinearRegression_default_m_reg_1000_50_12_flo..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (76 samples, 39.79%)</title><rect x="71" y="84" width="470" height="15" fill="rgb(214,217,36)"/><text x="74.00" y="94.50">setup_profile (bench_LinearRegression_default_m_reg_1000_50_12_f..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (76 samples, 39.79%)</title><rect x="71" y="100" width="470" height="15" fill="rgb(231,45,22)"/><text x="74.00" y="110.50">profile (bench_LinearRegression_default_m_reg_1000_50_12_float_...</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (76 samples, 39.79%)</title><rect x="71" y="116" width="470" height="15" fill="rgb(225,41,37)"/><text x="74.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (76 samples, 39.79%)</title><rect x="71" y="132" width="470" height="15" fill="rgb(239,207,37)"/><text x="74.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (75 samples, 39.27%)</title><rect x="77" y="148" width="464" height="15" fill="rgb(252,194,9)"/><text x="80.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (75 samples, 39.27%)</title><rect x="77" y="164" width="464" height="15" fill="rgb(245,149,20)"/><text x="80.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (73 samples, 38.22%)</title><rect x="90" y="180" width="451" height="15" fill="rgb(244,70,52)"/><text x="93.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (72 samples, 37.70%)</title><rect x="96" y="196" width="445" height="15" fill="rgb(254,145,4)"/><text x="99.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (71 samples, 37.17%)</title><rect x="102" y="212" width="439" height="15" fill="rgb(242,80,10)"/><text x="105.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxrun..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (71 samples, 37.17%)</title><rect x="102" y="228" width="439" height="15" fill="rgb(216,176,6)"/><text x="105.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python:..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (71 samples, 37.17%)</title><rect x="102" y="244" width="439" height="15" fill="rgb(209,104,54)"/><text x="105.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{l..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="535" y="260" width="6" height="15" fill="rgb(252,152,37)"/><text x="538.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="535" y="276" width="6" height="15" fill="rgb(214,148,54)"/><text x="538.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="535" y="292" width="6" height="15" fill="rgb(249,70,52)"/><text x="538.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="535" y="308" width="6" height="15" fill="rgb(232,225,47)"/><text x="538.00" y="318.50"></text></g><g><title>profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (17 samples, 8.90%)</title><rect x="541" y="100" width="105" height="15" fill="rgb(209,1,44)"/><text x="544.00" y="110.50">profile (ben..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (17 samples, 8.90%)</title><rect x="541" y="116" width="105" height="15" fill="rgb(253,103,21)"/><text x="544.00" y="126.50">time_predict..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (17 samples, 8.90%)</title><rect x="541" y="132" width="105" height="15" fill="rgb(246,134,52)"/><text x="544.00" y="142.50">&lt;lambda&gt; (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (17 samples, 8.90%)</title><rect x="541" y="148" width="105" height="15" fill="rgb(231,83,24)"/><text x="544.00" y="158.50">run (mlprodi..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (17 samples, 8.90%)</title><rect x="541" y="164" width="105" height="15" fill="rgb(253,39,4)"/><text x="544.00" y="174.50">_run_sequenc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (17 samples, 8.90%)</title><rect x="541" y="180" width="105" height="15" fill="rgb(208,192,44)"/><text x="544.00" y="190.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (17 samples, 8.90%)</title><rect x="541" y="196" width="105" height="15" fill="rgb(229,227,12)"/><text x="544.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (17 samples, 8.90%)</title><rect x="541" y="212" width="105" height="15" fill="rgb(229,161,36)"/><text x="544.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py) (17 samples, 8.90%)</title><rect x="541" y="228" width="105" height="15" fill="rgb(212,103,48)"/><text x="544.00" y="238.50">_run (mlprod..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (17 samples, 8.90%)</title><rect x="541" y="244" width="105" height="15" fill="rgb(221,98,29)"/><text x="544.00" y="254.50">numpy_dot_in..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (17 samples, 8.90%)</title><rect x="541" y="260" width="105" height="15" fill="rgb(211,130,53)"/><text x="544.00" y="270.50">dot (&lt;__arra..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (17 samples, 8.90%)</title><rect x="541" y="276" width="105" height="15" fill="rgb(232,57,23)"/><text x="544.00" y="286.50">array_implem..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (17 samples, 8.90%)</title><rect x="541" y="292" width="105" height="15" fill="rgb(221,93,19)"/><text x="544.00" y="302.50">array_matrix..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (17 samples, 8.90%)</title><rect x="541" y="308" width="105" height="15" fill="rgb(218,200,41)"/><text x="544.00" y="318.50">PyArray_Matr..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (17 samples, 8.90%)</title><rect x="541" y="324" width="105" height="15" fill="rgb(249,150,8)"/><text x="544.00" y="334.50">cblas_matrix..</text></g><g><title>gemv (cblasfuncs.c) (17 samples, 8.90%)</title><rect x="541" y="340" width="105" height="15" fill="rgb(242,91,54)"/><text x="544.00" y="350.50">gemv (cblasf..</text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (17 samples, 8.90%)</title><rect x="541" y="356" width="105" height="15" fill="rgb(249,127,5)"/><text x="544.00" y="366.50">cblas_sgemv ..</text></g><g><title>sgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (17 samples, 8.90%)</title><rect x="541" y="372" width="105" height="15" fill="rgb(220,205,13)"/><text x="544.00" y="382.50">sgemv_thread..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (17 samples, 8.90%)</title><rect x="541" y="388" width="105" height="15" fill="rgb(220,178,23)"/><text x="544.00" y="398.50">exec_blas (l..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (17 samples, 8.90%)</title><rect x="541" y="404" width="105" height="15" fill="rgb(219,200,37)"/><text x="544.00" y="414.50">exec_blas_as..</text></g><g><title>sched_yield (libc-2.29.so) (17 samples, 8.90%)</title><rect x="541" y="420" width="105" height="15" fill="rgb(242,45,29)"/><text x="544.00" y="430.50">sched_yield ..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="646" y="404" width="6" height="15" fill="rgb(235,177,39)"/><text x="649.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="646" y="420" width="6" height="15" fill="rgb(239,121,53)"/><text x="649.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="646" y="436" width="6" height="15" fill="rgb(234,96,53)"/><text x="649.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.52%)</title><rect x="646" y="452" width="6" height="15" fill="rgb(245,180,49)"/><text x="649.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.52%)</title><rect x="646" y="468" width="6" height="15" fill="rgb(224,64,19)"/><text x="649.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.52%)</title><rect x="646" y="484" width="6" height="15" fill="rgb(226,29,42)"/><text x="649.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.52%)</title><rect x="646" y="500" width="6" height="15" fill="rgb(208,209,27)"/><text x="649.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.52%)</title><rect x="646" y="516" width="6" height="15" fill="rgb(211,9,26)"/><text x="649.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.52%)</title><rect x="646" y="532" width="6" height="15" fill="rgb(243,146,23)"/><text x="649.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.52%)</title><rect x="646" y="548" width="6" height="15" fill="rgb(242,208,44)"/><text x="649.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.52%)</title><rect x="646" y="564" width="6" height="15" fill="rgb(214,65,19)"/><text x="649.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.52%)</title><rect x="646" y="580" width="6" height="15" fill="rgb(229,95,36)"/><text x="649.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.52%)</title><rect x="646" y="596" width="6" height="15" fill="rgb(253,157,26)"/><text x="649.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.52%)</title><rect x="646" y="612" width="6" height="15" fill="rgb(250,136,41)"/><text x="649.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.52%)</title><rect x="646" y="628" width="6" height="15" fill="rgb(235,99,14)"/><text x="649.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.52%)</title><rect x="646" y="644" width="6" height="15" fill="rgb(224,209,9)"/><text x="649.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.52%)</title><rect x="646" y="660" width="6" height="15" fill="rgb(225,215,32)"/><text x="649.00" y="670.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.52%)</title><rect x="646" y="676" width="6" height="15" fill="rgb(239,95,43)"/><text x="649.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.52%)</title><rect x="646" y="692" width="6" height="15" fill="rgb(241,71,16)"/><text x="649.00" y="702.50"></text></g><g><title>visit_If (jinja2/compiler.py) (1 samples, 0.52%)</title><rect x="646" y="708" width="6" height="15" fill="rgb(238,47,18)"/><text x="649.00" y="718.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.52%)</title><rect x="646" y="724" width="6" height="15" fill="rgb(229,110,20)"/><text x="649.00" y="734.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.52%)</title><rect x="646" y="740" width="6" height="15" fill="rgb(214,16,3)"/><text x="649.00" y="750.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.52%)</title><rect x="646" y="756" width="6" height="15" fill="rgb(246,87,4)"/><text x="649.00" y="766.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.52%)</title><rect x="646" y="772" width="6" height="15" fill="rgb(248,124,19)"/><text x="649.00" y="782.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.52%)</title><rect x="646" y="788" width="6" height="15" fill="rgb(220,149,36)"/><text x="649.00" y="798.50"></text></g><g><title>visit_Output (jinja2/compiler.py) (1 samples, 0.52%)</title><rect x="646" y="804" width="6" height="15" fill="rgb(245,78,37)"/><text x="649.00" y="814.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.52%)</title><rect x="646" y="820" width="6" height="15" fill="rgb(210,61,47)"/><text x="649.00" y="830.50"></text></g><g><title>new_func (jinja2/compiler.py) (1 samples, 0.52%)</title><rect x="646" y="836" width="6" height="15" fill="rgb(240,79,23)"/><text x="649.00" y="846.50"></text></g><g><title>__ne__ (jinja2/nodes.py) (1 samples, 0.52%)</title><rect x="646" y="852" width="6" height="15" fill="rgb(241,190,19)"/><text x="649.00" y="862.50"></text></g><g><title>__eq__ (jinja2/nodes.py) (1 samples, 0.52%)</title><rect x="646" y="868" width="6" height="15" fill="rgb(205,209,20)"/><text x="649.00" y="878.50"></text></g><g><title>profile_pyrt (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (19 samples, 9.95%)</title><rect x="541" y="68" width="117" height="15" fill="rgb(230,49,2)"/><text x="544.00" y="78.50">profile_pyrt (..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (19 samples, 9.95%)</title><rect x="541" y="84" width="117" height="15" fill="rgb(246,79,5)"/><text x="544.00" y="94.50">setup_profile ..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 1.05%)</title><rect x="646" y="100" width="12" height="15" fill="rgb(207,134,26)"/><text x="649.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 1.05%)</title><rect x="646" y="116" width="12" height="15" fill="rgb(221,90,40)"/><text x="649.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 1.05%)</title><rect x="646" y="132" width="12" height="15" fill="rgb(231,116,22)"/><text x="649.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 1.05%)</title><rect x="646" y="148" width="12" height="15" fill="rgb(231,22,36)"/><text x="649.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 1.05%)</title><rect x="646" y="164" width="12" height="15" fill="rgb(244,22,19)"/><text x="649.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 1.05%)</title><rect x="646" y="180" width="12" height="15" fill="rgb(226,152,35)"/><text x="649.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 1.05%)</title><rect x="646" y="196" width="12" height="15" fill="rgb(238,195,35)"/><text x="649.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="646" y="212" width="12" height="15" fill="rgb(223,130,54)"/><text x="649.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="646" y="228" width="12" height="15" fill="rgb(224,46,8)"/><text x="649.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="646" y="244" width="12" height="15" fill="rgb(218,24,6)"/><text x="649.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.05%)</title><rect x="646" y="260" width="12" height="15" fill="rgb(251,108,36)"/><text x="649.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="646" y="276" width="12" height="15" fill="rgb(216,105,8)"/><text x="649.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 1.05%)</title><rect x="646" y="292" width="12" height="15" fill="rgb(244,92,23)"/><text x="649.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="646" y="308" width="12" height="15" fill="rgb(249,199,35)"/><text x="649.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="646" y="324" width="12" height="15" fill="rgb(236,221,26)"/><text x="649.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="646" y="340" width="12" height="15" fill="rgb(238,104,39)"/><text x="649.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.05%)</title><rect x="646" y="356" width="12" height="15" fill="rgb(248,106,50)"/><text x="649.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="646" y="372" width="12" height="15" fill="rgb(218,146,14)"/><text x="649.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 1.05%)</title><rect x="646" y="388" width="12" height="15" fill="rgb(239,154,39)"/><text x="649.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.52%)</title><rect x="652" y="404" width="6" height="15" fill="rgb(241,213,27)"/><text x="655.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.52%)</title><rect x="652" y="420" width="6" height="15" fill="rgb(205,21,39)"/><text x="655.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.52%)</title><rect x="652" y="436" width="6" height="15" fill="rgb(246,159,53)"/><text x="655.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.52%)</title><rect x="652" y="452" width="6" height="15" fill="rgb(229,173,52)"/><text x="655.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.52%)</title><rect x="652" y="468" width="6" height="15" fill="rgb(224,14,46)"/><text x="655.00" y="478.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.52%)</title><rect x="652" y="484" width="6" height="15" fill="rgb(246,103,4)"/><text x="655.00" y="494.50"></text></g><g><title>0x7f563a6ec0e9 (?) (1 samples, 0.52%)</title><rect x="652" y="500" width="6" height="15" fill="rgb(234,194,23)"/><text x="655.00" y="510.50"></text></g><g><title>0x7f563a6f04d4 (?) (1 samples, 0.52%)</title><rect x="652" y="516" width="6" height="15" fill="rgb(215,144,19)"/><text x="655.00" y="526.50"></text></g><g><title>0x7f563a6d4fd3 (?) (1 samples, 0.52%)</title><rect x="652" y="532" width="6" height="15" fill="rgb(252,211,52)"/><text x="655.00" y="542.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.52%)</title><rect x="671" y="196" width="6" height="15" fill="rgb(244,120,43)"/><text x="674.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.52%)</title><rect x="677" y="196" width="6" height="15" fill="rgb(248,102,54)"/><text x="680.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (4 samples, 2.09%)</title><rect x="664" y="180" width="25" height="15" fill="rgb(214,11,31)"/><text x="667.00" y="190.50">c..</text></g><g><title>simplefilter (warnings.py) (1 samples, 0.52%)</title><rect x="683" y="196" width="6" height="15" fill="rgb(236,229,11)"/><text x="686.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.52%)</title><rect x="683" y="212" width="6" height="15" fill="rgb(233,177,45)"/><text x="686.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.52%)</title><rect x="689" y="180" width="6" height="15" fill="rgb(243,216,10)"/><text x="692.00" y="190.50"></text></g><g><title>isclass (inspect.py) (1 samples, 0.52%)</title><rect x="689" y="196" width="6" height="15" fill="rgb(238,228,24)"/><text x="692.00" y="206.50"></text></g><g><title>dgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.52%)</title><rect x="708" y="196" width="6" height="15" fill="rgb(230,209,37)"/><text x="711.00" y="206.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.52%)</title><rect x="720" y="324" width="6" height="15" fill="rgb(217,192,26)"/><text x="723.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.52%)</title><rect x="720" y="340" width="6" height="15" fill="rgb(249,7,52)"/><text x="723.00" y="350.50"></text></g><g><title>__lll_lock_wait (libpthread-2.29.so) (1 samples, 0.52%)</title><rect x="720" y="356" width="6" height="15" fill="rgb(248,108,24)"/><text x="723.00" y="366.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (69 samples, 36.13%)</title><rect x="714" y="244" width="426" height="15" fill="rgb(222,68,47)"/><text x="717.00" y="254.50">DOUBLE_matmul (matmul.c.src)</text></g><g><title>DOUBLE_gemv (matmul.c.src) (69 samples, 36.13%)</title><rect x="714" y="260" width="426" height="15" fill="rgb(251,116,52)"/><text x="717.00" y="270.50">DOUBLE_gemv (matmul.c.src)</text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (69 samples, 36.13%)</title><rect x="714" y="276" width="426" height="15" fill="rgb(220,171,29)"/><text x="717.00" y="286.50">cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so)</text></g><g><title>dgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (69 samples, 36.13%)</title><rect x="714" y="292" width="426" height="15" fill="rgb(225,174,22)"/><text x="717.00" y="302.50">dgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so)</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (69 samples, 36.13%)</title><rect x="714" y="308" width="426" height="15" fill="rgb(211,58,42)"/><text x="717.00" y="318.50">exec_blas (libopenblasp-r0-34a18dc3.3.7.so)</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (67 samples, 35.08%)</title><rect x="726" y="324" width="414" height="15" fill="rgb(214,139,32)"/><text x="729.00" y="334.50">exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so)</text></g><g><title>sched_yield (libc-2.29.so) (67 samples, 35.08%)</title><rect x="726" y="340" width="414" height="15" fill="rgb(237,13,52)"/><text x="729.00" y="350.50">sched_yield (libc-2.29.so)</text></g><g><title>all (191 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(245,200,51)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (191 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(205,102,21)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_50_12_float_.py)</text></g><g><title>profile_skl (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (86 samples, 45.03%)</title><rect x="658" y="68" width="532" height="15" fill="rgb(245,8,32)"/><text x="661.00" y="78.50">profile_skl (bench_LinearRegression_default_m_reg_1000_50_12_float_.py)</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (86 samples, 45.03%)</title><rect x="658" y="84" width="532" height="15" fill="rgb(253,198,37)"/><text x="661.00" y="94.50">setup_profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py)</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py) (86 samples, 45.03%)</title><rect x="658" y="100" width="532" height="15" fill="rgb(211,153,15)"/><text x="661.00" y="110.50">profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (86 samples, 45.03%)</title><rect x="658" y="116" width="532" height="15" fill="rgb(243,90,34)"/><text x="661.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (85 samples, 44.50%)</title><rect x="664" y="132" width="526" height="15" fill="rgb(249,54,21)"/><text x="667.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/linear_model/_base.py) (85 samples, 44.50%)</title><rect x="664" y="148" width="526" height="15" fill="rgb(238,190,2)"/><text x="667.00" y="158.50">predict (sklearn/linear_model/_base.py)</text></g><g><title>_decision_function (sklearn/linear_model/_base.py) (85 samples, 44.50%)</title><rect x="664" y="164" width="526" height="15" fill="rgb(210,71,54)"/><text x="667.00" y="174.50">_decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (80 samples, 41.88%)</title><rect x="695" y="180" width="495" height="15" fill="rgb(248,174,48)"/><text x="698.00" y="190.50">safe_sparse_dot (sklearn/utils/extmath.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (77 samples, 40.31%)</title><rect x="714" y="196" width="476" height="15" fill="rgb(246,45,13)"/><text x="717.00" y="206.50">ufunc_generic_call (ufunc_object.c)</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (77 samples, 40.31%)</title><rect x="714" y="212" width="476" height="15" fill="rgb(234,56,40)"/><text x="717.00" y="222.50">PyUFunc_GenericFunction (ufunc_object.c)</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (77 samples, 40.31%)</title><rect x="714" y="228" width="476" height="15" fill="rgb(219,216,5)"/><text x="717.00" y="238.50">PyUFunc_GeneralizedFunction (ufunc_object.c)</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (8 samples, 4.19%)</title><rect x="1140" y="244" width="50" height="15" fill="rgb(205,112,8)"/><text x="1143.00" y="254.50">NpyIt..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (8 samples, 4.19%)</title><rect x="1140" y="260" width="50" height="15" fill="rgb(250,83,46)"/><text x="1143.00" y="270.50">npyit..</text></g><g><title>PyArray_AssignArray (array_assign_array.c) (8 samples, 4.19%)</title><rect x="1140" y="276" width="50" height="15" fill="rgb(239,212,28)"/><text x="1143.00" y="286.50">PyArr..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (8 samples, 4.19%)</title><rect x="1140" y="292" width="50" height="15" fill="rgb(241,178,46)"/><text x="1143.00" y="302.50">raw_a..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (8 samples, 4.19%)</title><rect x="1140" y="308" width="50" height="15" fill="rgb(230,214,47)"/><text x="1143.00" y="318.50">_alig..</text></g></g></svg>