<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1974" onload="init(evt)" viewBox="0 0 1200 1974" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1974" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1957.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1957.00"> </text><g id="frames"><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.24%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(227,192,7)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.24%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(251,174,19)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.24%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(251,119,18)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.24%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(245,85,42)"/><text x="13.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.24%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(217,107,2)"/><text x="13.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.24%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(249,18,23)"/><text x="13.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="10" y="964" width="2" height="15" fill="rgb(235,147,22)"/><text x="13.00" y="974.50"></text></g><g><title>0x7f69b09d4237 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="10" y="980" width="2" height="15" fill="rgb(246,4,43)"/><text x="13.00" y="990.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.72%)</title><rect x="10" y="836" width="8" height="15" fill="rgb(232,226,49)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.72%)</title><rect x="10" y="852" width="8" height="15" fill="rgb(238,30,4)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.48%)</title><rect x="12" y="868" width="6" height="15" fill="rgb(236,71,21)"/><text x="15.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.48%)</title><rect x="12" y="884" width="6" height="15" fill="rgb(219,216,7)"/><text x="15.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.48%)</title><rect x="12" y="900" width="6" height="15" fill="rgb(251,111,34)"/><text x="15.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.48%)</title><rect x="12" y="916" width="6" height="15" fill="rgb(214,133,47)"/><text x="15.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.48%)</title><rect x="12" y="932" width="6" height="15" fill="rgb(232,48,37)"/><text x="15.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.48%)</title><rect x="12" y="948" width="6" height="15" fill="rgb(216,34,47)"/><text x="15.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.48%)</title><rect x="12" y="964" width="6" height="15" fill="rgb(205,197,41)"/><text x="15.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.24%)</title><rect x="15" y="980" width="3" height="15" fill="rgb(220,21,54)"/><text x="18.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 0.97%)</title><rect x="10" y="292" width="11" height="15" fill="rgb(219,70,15)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="308" width="11" height="15" fill="rgb(242,8,4)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="324" width="11" height="15" fill="rgb(248,101,50)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="340" width="11" height="15" fill="rgb(241,178,18)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.97%)</title><rect x="10" y="356" width="11" height="15" fill="rgb(242,133,34)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="372" width="11" height="15" fill="rgb(223,210,31)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 0.97%)</title><rect x="10" y="388" width="11" height="15" fill="rgb(212,216,51)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="404" width="11" height="15" fill="rgb(210,187,15)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="420" width="11" height="15" fill="rgb(210,43,22)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="436" width="11" height="15" fill="rgb(232,24,29)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.97%)</title><rect x="10" y="452" width="11" height="15" fill="rgb(215,190,14)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="468" width="11" height="15" fill="rgb(220,194,1)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 0.97%)</title><rect x="10" y="484" width="11" height="15" fill="rgb(224,28,17)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="500" width="11" height="15" fill="rgb(250,220,48)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="516" width="11" height="15" fill="rgb(248,41,15)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="532" width="11" height="15" fill="rgb(209,60,48)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.97%)</title><rect x="10" y="548" width="11" height="15" fill="rgb(212,93,44)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="564" width="11" height="15" fill="rgb(221,2,45)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 0.97%)</title><rect x="10" y="580" width="11" height="15" fill="rgb(249,41,22)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="596" width="11" height="15" fill="rgb(234,164,47)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="612" width="11" height="15" fill="rgb(227,34,9)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="628" width="11" height="15" fill="rgb(208,55,20)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="644" width="11" height="15" fill="rgb(246,125,50)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="660" width="11" height="15" fill="rgb(207,36,1)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="676" width="11" height="15" fill="rgb(211,13,29)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.97%)</title><rect x="10" y="692" width="11" height="15" fill="rgb(250,27,35)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="708" width="11" height="15" fill="rgb(243,51,13)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 0.97%)</title><rect x="10" y="724" width="11" height="15" fill="rgb(237,215,12)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="740" width="11" height="15" fill="rgb(210,57,25)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="756" width="11" height="15" fill="rgb(231,0,4)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="772" width="11" height="15" fill="rgb(215,229,30)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.97%)</title><rect x="10" y="788" width="11" height="15" fill="rgb(253,143,3)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="10" y="804" width="11" height="15" fill="rgb(206,172,12)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 0.97%)</title><rect x="10" y="820" width="11" height="15" fill="rgb(245,159,40)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="18" y="836" width="3" height="15" fill="rgb(213,179,36)"/><text x="21.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="18" y="852" width="3" height="15" fill="rgb(211,28,20)"/><text x="21.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="18" y="868" width="3" height="15" fill="rgb(236,163,7)"/><text x="21.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="18" y="884" width="3" height="15" fill="rgb(252,16,29)"/><text x="21.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="18" y="900" width="3" height="15" fill="rgb(243,199,54)"/><text x="21.00" y="910.50"></text></g><g><title>&lt;module&gt; (inspect.py) (1 samples, 0.24%)</title><rect x="18" y="916" width="3" height="15" fill="rgb(249,110,26)"/><text x="21.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="10" y="196" width="14" height="15" fill="rgb(224,173,19)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="10" y="212" width="14" height="15" fill="rgb(231,65,24)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="10" y="228" width="14" height="15" fill="rgb(253,47,3)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="10" y="244" width="14" height="15" fill="rgb(233,222,34)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.21%)</title><rect x="10" y="260" width="14" height="15" fill="rgb(240,69,37)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="10" y="276" width="14" height="15" fill="rgb(228,82,49)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.24%)</title><rect x="21" y="292" width="3" height="15" fill="rgb(247,20,22)"/><text x="24.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="308" width="3" height="15" fill="rgb(236,121,29)"/><text x="24.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="324" width="3" height="15" fill="rgb(233,132,18)"/><text x="24.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="340" width="3" height="15" fill="rgb(232,202,39)"/><text x="24.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="21" y="356" width="3" height="15" fill="rgb(250,63,44)"/><text x="24.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="372" width="3" height="15" fill="rgb(244,127,53)"/><text x="24.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.24%)</title><rect x="21" y="388" width="3" height="15" fill="rgb(216,131,10)"/><text x="24.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="404" width="3" height="15" fill="rgb(240,63,31)"/><text x="24.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="420" width="3" height="15" fill="rgb(237,205,46)"/><text x="24.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="436" width="3" height="15" fill="rgb(242,191,9)"/><text x="24.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="21" y="452" width="3" height="15" fill="rgb(208,150,42)"/><text x="24.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="468" width="3" height="15" fill="rgb(212,77,31)"/><text x="24.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.24%)</title><rect x="21" y="484" width="3" height="15" fill="rgb(228,32,52)"/><text x="24.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="500" width="3" height="15" fill="rgb(228,38,30)"/><text x="24.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="516" width="3" height="15" fill="rgb(225,92,53)"/><text x="24.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="532" width="3" height="15" fill="rgb(216,57,34)"/><text x="24.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="21" y="548" width="3" height="15" fill="rgb(225,43,18)"/><text x="24.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="564" width="3" height="15" fill="rgb(218,40,50)"/><text x="24.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.24%)</title><rect x="21" y="580" width="3" height="15" fill="rgb(223,182,17)"/><text x="24.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="596" width="3" height="15" fill="rgb(243,49,48)"/><text x="24.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="612" width="3" height="15" fill="rgb(236,119,47)"/><text x="24.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="628" width="3" height="15" fill="rgb(244,55,0)"/><text x="24.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="21" y="644" width="3" height="15" fill="rgb(228,219,15)"/><text x="24.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="660" width="3" height="15" fill="rgb(210,42,25)"/><text x="24.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.24%)</title><rect x="21" y="676" width="3" height="15" fill="rgb(240,78,44)"/><text x="24.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="692" width="3" height="15" fill="rgb(240,38,12)"/><text x="24.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="708" width="3" height="15" fill="rgb(243,102,29)"/><text x="24.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="724" width="3" height="15" fill="rgb(229,98,8)"/><text x="24.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="21" y="740" width="3" height="15" fill="rgb(252,90,47)"/><text x="24.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="756" width="3" height="15" fill="rgb(207,79,26)"/><text x="24.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.24%)</title><rect x="21" y="772" width="3" height="15" fill="rgb(241,33,47)"/><text x="24.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="788" width="3" height="15" fill="rgb(247,32,51)"/><text x="24.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="804" width="3" height="15" fill="rgb(213,147,21)"/><text x="24.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="820" width="3" height="15" fill="rgb(235,153,9)"/><text x="24.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="21" y="836" width="3" height="15" fill="rgb(223,95,23)"/><text x="24.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="852" width="3" height="15" fill="rgb(220,92,43)"/><text x="24.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.24%)</title><rect x="21" y="868" width="3" height="15" fill="rgb(207,58,54)"/><text x="24.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="884" width="3" height="15" fill="rgb(210,72,3)"/><text x="24.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="900" width="3" height="15" fill="rgb(215,72,32)"/><text x="24.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="916" width="3" height="15" fill="rgb(234,76,15)"/><text x="24.00" y="926.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="932" width="3" height="15" fill="rgb(246,178,32)"/><text x="24.00" y="942.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="21" y="948" width="3" height="15" fill="rgb(238,178,28)"/><text x="24.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="964" width="3" height="15" fill="rgb(215,80,54)"/><text x="24.00" y="974.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.24%)</title><rect x="21" y="980" width="3" height="15" fill="rgb(211,182,31)"/><text x="24.00" y="990.50"></text></g><g><title>0x7f69b0c1c995 (libdl-2.29.so) (1 samples, 0.24%)</title><rect x="21" y="996" width="3" height="15" fill="rgb(233,10,50)"/><text x="24.00" y="1006.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.24%)</title><rect x="21" y="1012" width="3" height="15" fill="rgb(219,151,1)"/><text x="24.00" y="1022.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.24%)</title><rect x="21" y="1028" width="3" height="15" fill="rgb(252,41,50)"/><text x="24.00" y="1038.50"></text></g><g><title>0x7f69b0c1c258 (libdl-2.29.so) (1 samples, 0.24%)</title><rect x="21" y="1044" width="3" height="15" fill="rgb(207,205,40)"/><text x="24.00" y="1054.50"></text></g><g><title>0x7f69b0c69d7a (ld-2.29.so) (1 samples, 0.24%)</title><rect x="21" y="1060" width="3" height="15" fill="rgb(219,143,40)"/><text x="24.00" y="1070.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.24%)</title><rect x="21" y="1076" width="3" height="15" fill="rgb(208,168,25)"/><text x="24.00" y="1086.50"></text></g><g><title>0x7f69b0c6a1f0 (ld-2.29.so) (1 samples, 0.24%)</title><rect x="21" y="1092" width="3" height="15" fill="rgb(248,108,44)"/><text x="24.00" y="1102.50"></text></g><g><title>0x7f69b0c64876 (ld-2.29.so) (1 samples, 0.24%)</title><rect x="21" y="1108" width="3" height="15" fill="rgb(234,104,0)"/><text x="24.00" y="1118.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.24%)</title><rect x="21" y="1124" width="3" height="15" fill="rgb(210,152,36)"/><text x="24.00" y="1134.50"></text></g><g><title>0x7f69b0c64501 (ld-2.29.so) (1 samples, 0.24%)</title><rect x="21" y="1140" width="3" height="15" fill="rgb(209,70,20)"/><text x="24.00" y="1150.50"></text></g><g><title>0x7f69b0c5fac1 (ld-2.29.so) (1 samples, 0.24%)</title><rect x="21" y="1156" width="3" height="15" fill="rgb(231,59,21)"/><text x="24.00" y="1166.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.24%)</title><rect x="24" y="1588" width="3" height="15" fill="rgb(234,149,30)"/><text x="27.00" y="1598.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.24%)</title><rect x="27" y="1588" width="2" height="15" fill="rgb(220,39,37)"/><text x="30.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py) (1 samples, 0.24%)</title><rect x="27" y="1604" width="2" height="15" fill="rgb(213,178,0)"/><text x="30.00" y="1614.50"></text></g><g><title>0x7f699ece26b3 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="27" y="1620" width="2" height="15" fill="rgb(207,149,36)"/><text x="30.00" y="1630.50"></text></g><g><title>google::protobuf::DynamicMessageFactory::GetPrototype (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="27" y="1636" width="2" height="15" fill="rgb(228,4,4)"/><text x="30.00" y="1646.50"></text></g><g><title>google::protobuf::DynamicMessageFactory::GetPrototypeNoLock (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="27" y="1652" width="2" height="15" fill="rgb(222,134,42)"/><text x="30.00" y="1662.50"></text></g><g><title>google::protobuf::DescriptorPool::generated_pool (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="27" y="1668" width="2" height="15" fill="rgb(213,25,43)"/><text x="30.00" y="1678.50"></text></g><g><title>google::protobuf::internal::AssignDescriptors (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="27" y="1684" width="2" height="15" fill="rgb(248,17,9)"/><text x="30.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="484" width="8" height="15" fill="rgb(209,45,14)"/><text x="27.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="500" width="8" height="15" fill="rgb(247,140,22)"/><text x="27.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="516" width="8" height="15" fill="rgb(206,141,50)"/><text x="27.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="532" width="8" height="15" fill="rgb(210,133,10)"/><text x="27.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.72%)</title><rect x="24" y="548" width="8" height="15" fill="rgb(254,109,44)"/><text x="27.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="564" width="8" height="15" fill="rgb(206,2,39)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.72%)</title><rect x="24" y="580" width="8" height="15" fill="rgb(232,54,27)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="596" width="8" height="15" fill="rgb(227,16,49)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="612" width="8" height="15" fill="rgb(226,104,50)"/><text x="27.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="628" width="8" height="15" fill="rgb(229,69,33)"/><text x="27.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.72%)</title><rect x="24" y="644" width="8" height="15" fill="rgb(210,217,9)"/><text x="27.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="660" width="8" height="15" fill="rgb(208,44,40)"/><text x="27.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.72%)</title><rect x="24" y="676" width="8" height="15" fill="rgb(228,125,44)"/><text x="27.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="692" width="8" height="15" fill="rgb(217,38,8)"/><text x="27.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="708" width="8" height="15" fill="rgb(232,97,9)"/><text x="27.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="724" width="8" height="15" fill="rgb(242,81,23)"/><text x="27.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.72%)</title><rect x="24" y="740" width="8" height="15" fill="rgb(244,85,24)"/><text x="27.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="756" width="8" height="15" fill="rgb(216,64,47)"/><text x="27.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.72%)</title><rect x="24" y="772" width="8" height="15" fill="rgb(236,58,24)"/><text x="27.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="788" width="8" height="15" fill="rgb(225,205,46)"/><text x="27.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="804" width="8" height="15" fill="rgb(224,105,48)"/><text x="27.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="820" width="8" height="15" fill="rgb(218,169,4)"/><text x="27.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.72%)</title><rect x="24" y="836" width="8" height="15" fill="rgb(225,175,11)"/><text x="27.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="852" width="8" height="15" fill="rgb(247,105,44)"/><text x="27.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.72%)</title><rect x="24" y="868" width="8" height="15" fill="rgb(244,24,31)"/><text x="27.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="884" width="8" height="15" fill="rgb(250,141,41)"/><text x="27.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="900" width="8" height="15" fill="rgb(212,224,42)"/><text x="27.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="916" width="8" height="15" fill="rgb(225,14,9)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="932" width="8" height="15" fill="rgb(232,191,45)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="948" width="8" height="15" fill="rgb(239,18,9)"/><text x="27.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="964" width="8" height="15" fill="rgb(247,104,3)"/><text x="27.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.72%)</title><rect x="24" y="980" width="8" height="15" fill="rgb(235,188,37)"/><text x="27.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="996" width="8" height="15" fill="rgb(222,207,8)"/><text x="27.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.72%)</title><rect x="24" y="1012" width="8" height="15" fill="rgb(231,9,23)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="1028" width="8" height="15" fill="rgb(252,184,21)"/><text x="27.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="1044" width="8" height="15" fill="rgb(217,158,43)"/><text x="27.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="1060" width="8" height="15" fill="rgb(219,102,43)"/><text x="27.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.72%)</title><rect x="24" y="1076" width="8" height="15" fill="rgb(210,173,46)"/><text x="27.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="1092" width="8" height="15" fill="rgb(234,60,24)"/><text x="27.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.72%)</title><rect x="24" y="1108" width="8" height="15" fill="rgb(253,183,11)"/><text x="27.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="1124" width="8" height="15" fill="rgb(214,142,6)"/><text x="27.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="1140" width="8" height="15" fill="rgb(239,73,43)"/><text x="27.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="1156" width="8" height="15" fill="rgb(252,174,31)"/><text x="27.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="1172" width="8" height="15" fill="rgb(252,96,5)"/><text x="27.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="1188" width="8" height="15" fill="rgb(239,207,37)"/><text x="27.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.72%)</title><rect x="24" y="1204" width="8" height="15" fill="rgb(211,12,32)"/><text x="27.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="1220" width="8" height="15" fill="rgb(232,134,48)"/><text x="27.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 0.72%)</title><rect x="24" y="1236" width="8" height="15" fill="rgb(206,211,30)"/><text x="27.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="1252" width="8" height="15" fill="rgb(238,208,23)"/><text x="27.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="1268" width="8" height="15" fill="rgb(230,1,4)"/><text x="27.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="1284" width="8" height="15" fill="rgb(222,90,38)"/><text x="27.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="1300" width="8" height="15" fill="rgb(207,160,23)"/><text x="27.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="1316" width="8" height="15" fill="rgb(230,194,37)"/><text x="27.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.72%)</title><rect x="24" y="1332" width="8" height="15" fill="rgb(244,72,26)"/><text x="27.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="1348" width="8" height="15" fill="rgb(218,11,52)"/><text x="27.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 0.72%)</title><rect x="24" y="1364" width="8" height="15" fill="rgb(237,89,20)"/><text x="27.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="1380" width="8" height="15" fill="rgb(254,58,9)"/><text x="27.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="1396" width="8" height="15" fill="rgb(231,188,49)"/><text x="27.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="1412" width="8" height="15" fill="rgb(226,174,4)"/><text x="27.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.72%)</title><rect x="24" y="1428" width="8" height="15" fill="rgb(215,218,6)"/><text x="27.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="24" y="1444" width="8" height="15" fill="rgb(226,136,50)"/><text x="27.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.72%)</title><rect x="24" y="1460" width="8" height="15" fill="rgb(239,100,6)"/><text x="27.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.72%)</title><rect x="24" y="1476" width="8" height="15" fill="rgb(253,148,29)"/><text x="27.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.72%)</title><rect x="24" y="1492" width="8" height="15" fill="rgb(222,46,31)"/><text x="27.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (3 samples, 0.72%)</title><rect x="24" y="1508" width="8" height="15" fill="rgb(216,229,21)"/><text x="27.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (3 samples, 0.72%)</title><rect x="24" y="1524" width="8" height="15" fill="rgb(245,182,38)"/><text x="27.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (3 samples, 0.72%)</title><rect x="24" y="1540" width="8" height="15" fill="rgb(242,124,46)"/><text x="27.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.72%)</title><rect x="24" y="1556" width="8" height="15" fill="rgb(220,191,20)"/><text x="27.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (3 samples, 0.72%)</title><rect x="24" y="1572" width="8" height="15" fill="rgb(226,77,27)"/><text x="27.00" y="1582.50"></text></g><g><title>resolve_or_missing (jinja2/runtime.py) (1 samples, 0.24%)</title><rect x="29" y="1588" width="3" height="15" fill="rgb(219,206,23)"/><text x="32.00" y="1598.50"></text></g><g><title>resolve_or_missing (jinja2/runtime.py) (1 samples, 0.24%)</title><rect x="29" y="1604" width="3" height="15" fill="rgb(226,164,30)"/><text x="32.00" y="1614.50"></text></g><g><title>0x7f698923d40e (?) (1 samples, 0.24%)</title><rect x="32" y="916" width="3" height="15" fill="rgb(226,149,16)"/><text x="35.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="932" width="3" height="15" fill="rgb(211,175,39)"/><text x="35.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="948" width="3" height="15" fill="rgb(235,127,12)"/><text x="35.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="964" width="3" height="15" fill="rgb(221,54,7)"/><text x="35.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="32" y="980" width="3" height="15" fill="rgb(237,62,48)"/><text x="35.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="996" width="3" height="15" fill="rgb(252,120,18)"/><text x="35.00" y="1006.50"></text></g><g><title>0x7f6988ff6cd2 (?) (1 samples, 0.24%)</title><rect x="32" y="1012" width="3" height="15" fill="rgb(224,132,36)"/><text x="35.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1028" width="3" height="15" fill="rgb(220,123,35)"/><text x="35.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1044" width="3" height="15" fill="rgb(227,212,53)"/><text x="35.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1060" width="3" height="15" fill="rgb(213,202,24)"/><text x="35.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="32" y="1076" width="3" height="15" fill="rgb(247,159,16)"/><text x="35.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1092" width="3" height="15" fill="rgb(241,202,9)"/><text x="35.00" y="1102.50"></text></g><g><title>0x7f69886ec0e5 (?) (1 samples, 0.24%)</title><rect x="32" y="1108" width="3" height="15" fill="rgb(223,155,38)"/><text x="35.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1124" width="3" height="15" fill="rgb(221,77,42)"/><text x="35.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1140" width="3" height="15" fill="rgb(252,46,4)"/><text x="35.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1156" width="3" height="15" fill="rgb(226,217,11)"/><text x="35.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="32" y="1172" width="3" height="15" fill="rgb(223,179,8)"/><text x="35.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1188" width="3" height="15" fill="rgb(227,57,48)"/><text x="35.00" y="1198.50"></text></g><g><title>0x7f6988470e68 (?) (1 samples, 0.24%)</title><rect x="32" y="1204" width="3" height="15" fill="rgb(232,88,53)"/><text x="35.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1220" width="3" height="15" fill="rgb(213,73,49)"/><text x="35.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1236" width="3" height="15" fill="rgb(212,219,51)"/><text x="35.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1252" width="3" height="15" fill="rgb(216,45,6)"/><text x="35.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="32" y="1268" width="3" height="15" fill="rgb(232,42,38)"/><text x="35.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1284" width="3" height="15" fill="rgb(233,23,44)"/><text x="35.00" y="1294.50"></text></g><g><title>0x7f69882012fb (?) (1 samples, 0.24%)</title><rect x="32" y="1300" width="3" height="15" fill="rgb(239,35,7)"/><text x="35.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1316" width="3" height="15" fill="rgb(242,12,31)"/><text x="35.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1332" width="3" height="15" fill="rgb(254,121,9)"/><text x="35.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1348" width="3" height="15" fill="rgb(215,200,49)"/><text x="35.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="32" y="1364" width="3" height="15" fill="rgb(248,78,30)"/><text x="35.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1380" width="3" height="15" fill="rgb(226,208,51)"/><text x="35.00" y="1390.50"></text></g><g><title>0x7f6987fe5153 (?) (1 samples, 0.24%)</title><rect x="32" y="1396" width="3" height="15" fill="rgb(238,218,37)"/><text x="35.00" y="1406.50"></text></g><g><title>0x7f6987fe3c13 (?) (1 samples, 0.24%)</title><rect x="32" y="1412" width="3" height="15" fill="rgb(231,55,4)"/><text x="35.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1428" width="3" height="15" fill="rgb(228,105,21)"/><text x="35.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1444" width="3" height="15" fill="rgb(238,70,51)"/><text x="35.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1460" width="3" height="15" fill="rgb(238,78,21)"/><text x="35.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="32" y="1476" width="3" height="15" fill="rgb(211,64,18)"/><text x="35.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1492" width="3" height="15" fill="rgb(206,75,8)"/><text x="35.00" y="1502.50"></text></g><g><title>0x7f6987d40181 (?) (1 samples, 0.24%)</title><rect x="32" y="1508" width="3" height="15" fill="rgb(242,56,40)"/><text x="35.00" y="1518.50"></text></g><g><title>0x7f6987d431c9 (?) (1 samples, 0.24%)</title><rect x="32" y="1524" width="3" height="15" fill="rgb(216,191,12)"/><text x="35.00" y="1534.50"></text></g><g><title>0x7f6987d6f167 (?) (1 samples, 0.24%)</title><rect x="32" y="1540" width="3" height="15" fill="rgb(234,77,5)"/><text x="35.00" y="1550.50"></text></g><g><title>0x7f6987d6ab64 (?) (1 samples, 0.24%)</title><rect x="32" y="1556" width="3" height="15" fill="rgb(243,84,54)"/><text x="35.00" y="1566.50"></text></g><g><title>0x7f6987d4e07b (?) (1 samples, 0.24%)</title><rect x="32" y="1572" width="3" height="15" fill="rgb(241,144,38)"/><text x="35.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.24%)</title><rect x="32" y="1588" width="3" height="15" fill="rgb(237,103,5)"/><text x="35.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.24%)</title><rect x="32" y="1604" width="3" height="15" fill="rgb(207,140,44)"/><text x="35.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.24%)</title><rect x="32" y="1620" width="3" height="15" fill="rgb(224,91,24)"/><text x="35.00" y="1630.50"></text></g><g><title>__close (libpthread-2.29.so) (1 samples, 0.24%)</title><rect x="32" y="1636" width="3" height="15" fill="rgb(206,58,27)"/><text x="35.00" y="1646.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (3 samples, 0.72%)</title><rect x="32" y="724" width="9" height="15" fill="rgb(221,94,43)"/><text x="35.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="32" y="740" width="9" height="15" fill="rgb(232,158,15)"/><text x="35.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="32" y="756" width="9" height="15" fill="rgb(207,60,40)"/><text x="35.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="32" y="772" width="9" height="15" fill="rgb(205,147,9)"/><text x="35.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.72%)</title><rect x="32" y="788" width="9" height="15" fill="rgb(228,78,20)"/><text x="35.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="32" y="804" width="9" height="15" fill="rgb(217,25,17)"/><text x="35.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (3 samples, 0.72%)</title><rect x="32" y="820" width="9" height="15" fill="rgb(253,40,10)"/><text x="35.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="32" y="836" width="9" height="15" fill="rgb(240,8,51)"/><text x="35.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="32" y="852" width="9" height="15" fill="rgb(226,227,37)"/><text x="35.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="32" y="868" width="9" height="15" fill="rgb(246,162,15)"/><text x="35.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.72%)</title><rect x="32" y="884" width="9" height="15" fill="rgb(241,201,27)"/><text x="35.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="32" y="900" width="9" height="15" fill="rgb(240,135,50)"/><text x="35.00" y="910.50"></text></g><g><title>0x7f698923d40e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.48%)</title><rect x="35" y="916" width="6" height="15" fill="rgb(250,116,50)"/><text x="38.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="932" width="6" height="15" fill="rgb(231,173,37)"/><text x="38.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="948" width="6" height="15" fill="rgb(216,126,31)"/><text x="38.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="964" width="6" height="15" fill="rgb(236,145,9)"/><text x="38.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="35" y="980" width="6" height="15" fill="rgb(249,2,28)"/><text x="38.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="996" width="6" height="15" fill="rgb(227,218,0)"/><text x="38.00" y="1006.50"></text></g><g><title>0x7f6988ff6cd2 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.48%)</title><rect x="35" y="1012" width="6" height="15" fill="rgb(248,205,38)"/><text x="38.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="1028" width="6" height="15" fill="rgb(236,4,41)"/><text x="38.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="1044" width="6" height="15" fill="rgb(220,42,6)"/><text x="38.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="1060" width="6" height="15" fill="rgb(240,144,35)"/><text x="38.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="35" y="1076" width="6" height="15" fill="rgb(251,147,26)"/><text x="38.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="1092" width="6" height="15" fill="rgb(211,68,54)"/><text x="38.00" y="1102.50"></text></g><g><title>0x7f69886ec0e5 (pandas/_libs/tslibs/tzconversion.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.48%)</title><rect x="35" y="1108" width="6" height="15" fill="rgb(220,151,10)"/><text x="38.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="1124" width="6" height="15" fill="rgb(209,138,21)"/><text x="38.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="1140" width="6" height="15" fill="rgb(253,97,4)"/><text x="38.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="1156" width="6" height="15" fill="rgb(238,140,0)"/><text x="38.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="35" y="1172" width="6" height="15" fill="rgb(229,226,48)"/><text x="38.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="1188" width="6" height="15" fill="rgb(206,201,40)"/><text x="38.00" y="1198.50"></text></g><g><title>0x7f6988470e68 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.48%)</title><rect x="35" y="1204" width="6" height="15" fill="rgb(254,9,11)"/><text x="38.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="1220" width="6" height="15" fill="rgb(246,79,51)"/><text x="38.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="1236" width="6" height="15" fill="rgb(210,41,35)"/><text x="38.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="1252" width="6" height="15" fill="rgb(231,147,7)"/><text x="38.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="35" y="1268" width="6" height="15" fill="rgb(239,177,34)"/><text x="38.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="1284" width="6" height="15" fill="rgb(211,223,32)"/><text x="38.00" y="1294.50"></text></g><g><title>0x7f69882012fb (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.48%)</title><rect x="35" y="1300" width="6" height="15" fill="rgb(209,25,17)"/><text x="38.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="1316" width="6" height="15" fill="rgb(247,115,13)"/><text x="38.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="1332" width="6" height="15" fill="rgb(252,172,25)"/><text x="38.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="1348" width="6" height="15" fill="rgb(212,46,3)"/><text x="38.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="35" y="1364" width="6" height="15" fill="rgb(238,95,25)"/><text x="38.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="1380" width="6" height="15" fill="rgb(221,17,0)"/><text x="38.00" y="1390.50"></text></g><g><title>0x7f6987fe5153 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.48%)</title><rect x="35" y="1396" width="6" height="15" fill="rgb(254,193,37)"/><text x="38.00" y="1406.50"></text></g><g><title>0x7f6987fe3c13 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.48%)</title><rect x="35" y="1412" width="6" height="15" fill="rgb(219,77,50)"/><text x="38.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="1428" width="6" height="15" fill="rgb(215,189,23)"/><text x="38.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="1444" width="6" height="15" fill="rgb(236,20,25)"/><text x="38.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="1460" width="6" height="15" fill="rgb(253,126,48)"/><text x="38.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="35" y="1476" width="6" height="15" fill="rgb(226,108,3)"/><text x="38.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="35" y="1492" width="6" height="15" fill="rgb(213,121,31)"/><text x="38.00" y="1502.50"></text></g><g><title>0x7f6987d40181 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.48%)</title><rect x="35" y="1508" width="6" height="15" fill="rgb(225,175,53)"/><text x="38.00" y="1518.50"></text></g><g><title>0x7f6987d431c9 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.48%)</title><rect x="35" y="1524" width="6" height="15" fill="rgb(228,52,38)"/><text x="38.00" y="1534.50"></text></g><g><title>0x7f6987d6f167 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.48%)</title><rect x="35" y="1540" width="6" height="15" fill="rgb(212,194,0)"/><text x="38.00" y="1550.50"></text></g><g><title>0x7f6987d6ab64 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.48%)</title><rect x="35" y="1556" width="6" height="15" fill="rgb(246,172,16)"/><text x="38.00" y="1566.50"></text></g><g><title>0x7f6987d4e07b (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.48%)</title><rect x="35" y="1572" width="6" height="15" fill="rgb(251,19,21)"/><text x="38.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (2 samples, 0.48%)</title><rect x="35" y="1588" width="6" height="15" fill="rgb(247,178,27)"/><text x="38.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (2 samples, 0.48%)</title><rect x="35" y="1604" width="6" height="15" fill="rgb(242,216,11)"/><text x="38.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (2 samples, 0.48%)</title><rect x="35" y="1620" width="6" height="15" fill="rgb(248,229,30)"/><text x="38.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.24%)</title><rect x="38" y="1636" width="3" height="15" fill="rgb(215,46,22)"/><text x="41.00" y="1646.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py) (1 samples, 0.24%)</title><rect x="41" y="1684" width="3" height="15" fill="rgb(214,216,27)"/><text x="44.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="41" y="1700" width="3" height="15" fill="rgb(245,139,0)"/><text x="44.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="41" y="1716" width="3" height="15" fill="rgb(206,43,46)"/><text x="44.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="41" y="1732" width="3" height="15" fill="rgb(248,99,28)"/><text x="44.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="41" y="1748" width="3" height="15" fill="rgb(241,152,43)"/><text x="44.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="41" y="1764" width="3" height="15" fill="rgb(211,60,51)"/><text x="44.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py) (1 samples, 0.24%)</title><rect x="41" y="1780" width="3" height="15" fill="rgb(208,34,7)"/><text x="44.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py) (1 samples, 0.24%)</title><rect x="41" y="1796" width="3" height="15" fill="rgb(226,108,12)"/><text x="44.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py) (1 samples, 0.24%)</title><rect x="41" y="1812" width="3" height="15" fill="rgb(225,186,29)"/><text x="44.00" y="1822.50"></text></g><g><title>linspace (&lt;__array_function__ internals&gt;) (1 samples, 0.24%)</title><rect x="41" y="1828" width="3" height="15" fill="rgb(240,126,38)"/><text x="44.00" y="1838.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.24%)</title><rect x="41" y="1844" width="3" height="15" fill="rgb(246,228,42)"/><text x="44.00" y="1854.50"></text></g><g><title>linspace (numpy/core/function_base.py) (1 samples, 0.24%)</title><rect x="41" y="1860" width="3" height="15" fill="rgb(221,224,47)"/><text x="44.00" y="1870.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 1.93%)</title><rect x="24" y="340" width="23" height="15" fill="rgb(237,112,29)"/><text x="27.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.93%)</title><rect x="24" y="356" width="23" height="15" fill="rgb(213,38,10)"/><text x="27.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.93%)</title><rect x="24" y="372" width="23" height="15" fill="rgb(214,111,37)"/><text x="27.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.93%)</title><rect x="24" y="388" width="23" height="15" fill="rgb(214,26,7)"/><text x="27.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.93%)</title><rect x="24" y="404" width="23" height="15" fill="rgb(209,45,36)"/><text x="27.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.93%)</title><rect x="24" y="420" width="23" height="15" fill="rgb(234,125,17)"/><text x="27.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 1.93%)</title><rect x="24" y="436" width="23" height="15" fill="rgb(213,61,11)"/><text x="27.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.93%)</title><rect x="24" y="452" width="23" height="15" fill="rgb(228,26,48)"/><text x="27.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.93%)</title><rect x="24" y="468" width="23" height="15" fill="rgb(241,102,44)"/><text x="27.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="32" y="484" width="15" height="15" fill="rgb(239,209,17)"/><text x="35.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.21%)</title><rect x="32" y="500" width="15" height="15" fill="rgb(243,202,20)"/><text x="35.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="32" y="516" width="15" height="15" fill="rgb(218,119,22)"/><text x="35.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (5 samples, 1.21%)</title><rect x="32" y="532" width="15" height="15" fill="rgb(213,179,34)"/><text x="35.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="32" y="548" width="15" height="15" fill="rgb(253,156,26)"/><text x="35.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="32" y="564" width="15" height="15" fill="rgb(240,160,11)"/><text x="35.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="32" y="580" width="15" height="15" fill="rgb(252,117,27)"/><text x="35.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.21%)</title><rect x="32" y="596" width="15" height="15" fill="rgb(233,209,5)"/><text x="35.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="32" y="612" width="15" height="15" fill="rgb(223,101,52)"/><text x="35.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (5 samples, 1.21%)</title><rect x="32" y="628" width="15" height="15" fill="rgb(234,117,53)"/><text x="35.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="32" y="644" width="15" height="15" fill="rgb(236,39,53)"/><text x="35.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="32" y="660" width="15" height="15" fill="rgb(207,221,46)"/><text x="35.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="32" y="676" width="15" height="15" fill="rgb(224,208,50)"/><text x="35.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.21%)</title><rect x="32" y="692" width="15" height="15" fill="rgb(229,109,45)"/><text x="35.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="32" y="708" width="15" height="15" fill="rgb(218,38,23)"/><text x="35.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.48%)</title><rect x="41" y="724" width="6" height="15" fill="rgb(230,192,36)"/><text x="44.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="740" width="6" height="15" fill="rgb(234,189,50)"/><text x="44.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="756" width="6" height="15" fill="rgb(224,90,26)"/><text x="44.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="772" width="6" height="15" fill="rgb(219,183,13)"/><text x="44.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="41" y="788" width="6" height="15" fill="rgb(215,17,30)"/><text x="44.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="804" width="6" height="15" fill="rgb(229,113,10)"/><text x="44.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.48%)</title><rect x="41" y="820" width="6" height="15" fill="rgb(234,74,13)"/><text x="44.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="836" width="6" height="15" fill="rgb(231,209,12)"/><text x="44.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="852" width="6" height="15" fill="rgb(248,146,18)"/><text x="44.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="868" width="6" height="15" fill="rgb(217,5,11)"/><text x="44.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="41" y="884" width="6" height="15" fill="rgb(234,139,12)"/><text x="44.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="900" width="6" height="15" fill="rgb(244,3,41)"/><text x="44.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.48%)</title><rect x="41" y="916" width="6" height="15" fill="rgb(221,198,14)"/><text x="44.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="932" width="6" height="15" fill="rgb(207,57,53)"/><text x="44.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="948" width="6" height="15" fill="rgb(248,148,38)"/><text x="44.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="964" width="6" height="15" fill="rgb(252,136,42)"/><text x="44.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="41" y="980" width="6" height="15" fill="rgb(209,44,4)"/><text x="44.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="996" width="6" height="15" fill="rgb(237,72,21)"/><text x="44.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.48%)</title><rect x="41" y="1012" width="6" height="15" fill="rgb(222,43,53)"/><text x="44.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1028" width="6" height="15" fill="rgb(240,62,26)"/><text x="44.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1044" width="6" height="15" fill="rgb(225,147,53)"/><text x="44.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1060" width="6" height="15" fill="rgb(211,126,35)"/><text x="44.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="41" y="1076" width="6" height="15" fill="rgb(230,223,14)"/><text x="44.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1092" width="6" height="15" fill="rgb(250,226,30)"/><text x="44.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.48%)</title><rect x="41" y="1108" width="6" height="15" fill="rgb(254,199,2)"/><text x="44.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1124" width="6" height="15" fill="rgb(233,156,45)"/><text x="44.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1140" width="6" height="15" fill="rgb(220,192,41)"/><text x="44.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1156" width="6" height="15" fill="rgb(207,200,48)"/><text x="44.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="41" y="1172" width="6" height="15" fill="rgb(245,102,2)"/><text x="44.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1188" width="6" height="15" fill="rgb(244,22,23)"/><text x="44.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.48%)</title><rect x="41" y="1204" width="6" height="15" fill="rgb(248,165,9)"/><text x="44.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1220" width="6" height="15" fill="rgb(222,107,15)"/><text x="44.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1236" width="6" height="15" fill="rgb(245,64,5)"/><text x="44.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1252" width="6" height="15" fill="rgb(212,45,23)"/><text x="44.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="41" y="1268" width="6" height="15" fill="rgb(223,80,17)"/><text x="44.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1284" width="6" height="15" fill="rgb(223,132,42)"/><text x="44.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.48%)</title><rect x="41" y="1300" width="6" height="15" fill="rgb(218,75,51)"/><text x="44.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1316" width="6" height="15" fill="rgb(224,163,15)"/><text x="44.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1332" width="6" height="15" fill="rgb(219,160,42)"/><text x="44.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1348" width="6" height="15" fill="rgb(238,88,43)"/><text x="44.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="41" y="1364" width="6" height="15" fill="rgb(218,8,43)"/><text x="44.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1380" width="6" height="15" fill="rgb(211,211,12)"/><text x="44.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.48%)</title><rect x="41" y="1396" width="6" height="15" fill="rgb(206,160,36)"/><text x="44.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1412" width="6" height="15" fill="rgb(231,220,39)"/><text x="44.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1428" width="6" height="15" fill="rgb(227,183,29)"/><text x="44.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1444" width="6" height="15" fill="rgb(233,72,44)"/><text x="44.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="41" y="1460" width="6" height="15" fill="rgb(246,206,36)"/><text x="44.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1476" width="6" height="15" fill="rgb(207,215,16)"/><text x="44.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.48%)</title><rect x="41" y="1492" width="6" height="15" fill="rgb(242,39,52)"/><text x="44.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1508" width="6" height="15" fill="rgb(232,135,14)"/><text x="44.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1524" width="6" height="15" fill="rgb(243,207,42)"/><text x="44.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1540" width="6" height="15" fill="rgb(225,65,21)"/><text x="44.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="41" y="1556" width="6" height="15" fill="rgb(226,76,38)"/><text x="44.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1572" width="6" height="15" fill="rgb(226,138,18)"/><text x="44.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (2 samples, 0.48%)</title><rect x="41" y="1588" width="6" height="15" fill="rgb(254,229,16)"/><text x="44.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1604" width="6" height="15" fill="rgb(226,102,24)"/><text x="44.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1620" width="6" height="15" fill="rgb(213,92,54)"/><text x="44.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1636" width="6" height="15" fill="rgb(212,183,38)"/><text x="44.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="41" y="1652" width="6" height="15" fill="rgb(228,46,26)"/><text x="44.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1668" width="6" height="15" fill="rgb(222,23,28)"/><text x="44.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.24%)</title><rect x="44" y="1684" width="3" height="15" fill="rgb(242,139,28)"/><text x="47.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="44" y="1700" width="3" height="15" fill="rgb(241,216,4)"/><text x="47.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="44" y="1716" width="3" height="15" fill="rgb(247,95,12)"/><text x="47.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="44" y="1732" width="3" height="15" fill="rgb(233,4,44)"/><text x="47.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="44" y="1748" width="3" height="15" fill="rgb(210,20,38)"/><text x="47.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="44" y="1764" width="3" height="15" fill="rgb(213,52,16)"/><text x="47.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.24%)</title><rect x="44" y="1780" width="3" height="15" fill="rgb(227,197,34)"/><text x="47.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="44" y="1796" width="3" height="15" fill="rgb(205,47,15)"/><text x="47.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="44" y="1812" width="3" height="15" fill="rgb(212,18,5)"/><text x="47.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="44" y="1828" width="3" height="15" fill="rgb(232,69,40)"/><text x="47.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="44" y="1844" width="3" height="15" fill="rgb(248,173,33)"/><text x="47.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="44" y="1860" width="3" height="15" fill="rgb(231,187,32)"/><text x="47.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py) (1 samples, 0.24%)</title><rect x="44" y="1876" width="3" height="15" fill="rgb(214,159,25)"/><text x="47.00" y="1886.50"></text></g><g><title>ConnectionStyle (matplotlib/patches.py) (1 samples, 0.24%)</title><rect x="44" y="1892" width="3" height="15" fill="rgb(226,62,41)"/><text x="47.00" y="1902.50"></text></g><g><title>cleandoc (inspect.py) (1 samples, 0.24%)</title><rect x="44" y="1908" width="3" height="15" fill="rgb(244,147,11)"/><text x="47.00" y="1918.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.24%)</title><rect x="44" y="1924" width="3" height="15" fill="rgb(238,29,53)"/><text x="47.00" y="1934.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.24%)</title><rect x="47" y="580" width="2" height="15" fill="rgb(207,214,43)"/><text x="50.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="596" width="2" height="15" fill="rgb(214,170,46)"/><text x="50.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="612" width="2" height="15" fill="rgb(252,218,44)"/><text x="50.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="628" width="2" height="15" fill="rgb(241,204,16)"/><text x="50.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="644" width="2" height="15" fill="rgb(244,80,43)"/><text x="50.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="660" width="2" height="15" fill="rgb(234,214,13)"/><text x="50.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="676" width="2" height="15" fill="rgb(247,155,40)"/><text x="50.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="47" y="692" width="2" height="15" fill="rgb(217,12,39)"/><text x="50.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="708" width="2" height="15" fill="rgb(208,193,8)"/><text x="50.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.24%)</title><rect x="47" y="724" width="2" height="15" fill="rgb(228,38,15)"/><text x="50.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="740" width="2" height="15" fill="rgb(218,193,10)"/><text x="50.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="756" width="2" height="15" fill="rgb(211,120,8)"/><text x="50.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="772" width="2" height="15" fill="rgb(218,73,42)"/><text x="50.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="47" y="788" width="2" height="15" fill="rgb(254,173,15)"/><text x="50.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="804" width="2" height="15" fill="rgb(221,50,9)"/><text x="50.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.24%)</title><rect x="47" y="820" width="2" height="15" fill="rgb(250,155,36)"/><text x="50.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="836" width="2" height="15" fill="rgb(243,96,53)"/><text x="50.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="852" width="2" height="15" fill="rgb(228,52,20)"/><text x="50.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="868" width="2" height="15" fill="rgb(241,13,43)"/><text x="50.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="47" y="884" width="2" height="15" fill="rgb(220,54,10)"/><text x="50.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="900" width="2" height="15" fill="rgb(222,192,6)"/><text x="50.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.24%)</title><rect x="47" y="916" width="2" height="15" fill="rgb(210,47,46)"/><text x="50.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="932" width="2" height="15" fill="rgb(224,43,48)"/><text x="50.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="948" width="2" height="15" fill="rgb(253,101,24)"/><text x="50.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="964" width="2" height="15" fill="rgb(245,203,14)"/><text x="50.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="980" width="2" height="15" fill="rgb(213,111,0)"/><text x="50.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="996" width="2" height="15" fill="rgb(209,86,14)"/><text x="50.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1012" width="2" height="15" fill="rgb(206,64,21)"/><text x="50.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="47" y="1028" width="2" height="15" fill="rgb(245,23,41)"/><text x="50.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1044" width="2" height="15" fill="rgb(215,192,22)"/><text x="50.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.24%)</title><rect x="47" y="1060" width="2" height="15" fill="rgb(210,187,48)"/><text x="50.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1076" width="2" height="15" fill="rgb(216,116,40)"/><text x="50.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1092" width="2" height="15" fill="rgb(238,133,11)"/><text x="50.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1108" width="2" height="15" fill="rgb(250,200,35)"/><text x="50.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="47" y="1124" width="2" height="15" fill="rgb(234,169,1)"/><text x="50.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1140" width="2" height="15" fill="rgb(209,31,9)"/><text x="50.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py) (1 samples, 0.24%)</title><rect x="47" y="1156" width="2" height="15" fill="rgb(228,24,32)"/><text x="50.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1172" width="2" height="15" fill="rgb(220,191,27)"/><text x="50.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1188" width="2" height="15" fill="rgb(232,108,45)"/><text x="50.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1204" width="2" height="15" fill="rgb(215,54,42)"/><text x="50.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="47" y="1220" width="2" height="15" fill="rgb(226,87,33)"/><text x="50.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="47" y="1236" width="2" height="15" fill="rgb(247,32,10)"/><text x="50.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="47" y="1252" width="2" height="15" fill="rgb(218,179,22)"/><text x="50.00" y="1262.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (10 samples, 2.42%)</title><rect x="24" y="244" width="28" height="15" fill="rgb(249,149,14)"/><text x="27.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.42%)</title><rect x="24" y="260" width="28" height="15" fill="rgb(234,112,1)"/><text x="27.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.42%)</title><rect x="24" y="276" width="28" height="15" fill="rgb(229,198,5)"/><text x="27.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.42%)</title><rect x="24" y="292" width="28" height="15" fill="rgb(233,72,44)"/><text x="27.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.42%)</title><rect x="24" y="308" width="28" height="15" fill="rgb(225,45,16)"/><text x="27.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.42%)</title><rect x="24" y="324" width="28" height="15" fill="rgb(225,130,5)"/><text x="27.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.48%)</title><rect x="47" y="340" width="5" height="15" fill="rgb(212,210,25)"/><text x="50.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="47" y="356" width="5" height="15" fill="rgb(206,135,28)"/><text x="50.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="47" y="372" width="5" height="15" fill="rgb(240,151,33)"/><text x="50.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="47" y="388" width="5" height="15" fill="rgb(249,122,34)"/><text x="50.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="47" y="404" width="5" height="15" fill="rgb(245,224,48)"/><text x="50.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="47" y="420" width="5" height="15" fill="rgb(208,36,10)"/><text x="50.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="47" y="436" width="5" height="15" fill="rgb(252,190,12)"/><text x="50.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="47" y="452" width="5" height="15" fill="rgb(231,137,10)"/><text x="50.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="47" y="468" width="5" height="15" fill="rgb(235,130,50)"/><text x="50.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.48%)</title><rect x="47" y="484" width="5" height="15" fill="rgb(223,41,26)"/><text x="50.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="47" y="500" width="5" height="15" fill="rgb(230,173,49)"/><text x="50.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="47" y="516" width="5" height="15" fill="rgb(227,145,40)"/><text x="50.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="47" y="532" width="5" height="15" fill="rgb(251,225,30)"/><text x="50.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="47" y="548" width="5" height="15" fill="rgb(245,86,48)"/><text x="50.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="47" y="564" width="5" height="15" fill="rgb(229,184,53)"/><text x="50.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.24%)</title><rect x="49" y="580" width="3" height="15" fill="rgb(211,131,24)"/><text x="52.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="596" width="3" height="15" fill="rgb(215,43,8)"/><text x="52.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="612" width="3" height="15" fill="rgb(232,35,47)"/><text x="52.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="628" width="3" height="15" fill="rgb(215,96,42)"/><text x="52.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="49" y="644" width="3" height="15" fill="rgb(227,7,38)"/><text x="52.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="660" width="3" height="15" fill="rgb(206,39,42)"/><text x="52.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.24%)</title><rect x="49" y="676" width="3" height="15" fill="rgb(246,140,36)"/><text x="52.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="692" width="3" height="15" fill="rgb(229,137,17)"/><text x="52.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="708" width="3" height="15" fill="rgb(219,142,38)"/><text x="52.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="724" width="3" height="15" fill="rgb(206,78,10)"/><text x="52.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="49" y="740" width="3" height="15" fill="rgb(218,137,40)"/><text x="52.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="756" width="3" height="15" fill="rgb(218,140,29)"/><text x="52.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.24%)</title><rect x="49" y="772" width="3" height="15" fill="rgb(223,36,48)"/><text x="52.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="788" width="3" height="15" fill="rgb(224,99,39)"/><text x="52.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="804" width="3" height="15" fill="rgb(240,180,6)"/><text x="52.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="820" width="3" height="15" fill="rgb(213,14,4)"/><text x="52.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="49" y="836" width="3" height="15" fill="rgb(220,209,3)"/><text x="52.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="852" width="3" height="15" fill="rgb(208,60,3)"/><text x="52.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.24%)</title><rect x="49" y="868" width="3" height="15" fill="rgb(215,197,40)"/><text x="52.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="884" width="3" height="15" fill="rgb(242,215,1)"/><text x="52.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="900" width="3" height="15" fill="rgb(215,51,14)"/><text x="52.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="916" width="3" height="15" fill="rgb(237,215,24)"/><text x="52.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="49" y="932" width="3" height="15" fill="rgb(226,28,54)"/><text x="52.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="948" width="3" height="15" fill="rgb(205,67,13)"/><text x="52.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.24%)</title><rect x="49" y="964" width="3" height="15" fill="rgb(253,1,34)"/><text x="52.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="980" width="3" height="15" fill="rgb(230,130,49)"/><text x="52.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="996" width="3" height="15" fill="rgb(242,113,38)"/><text x="52.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1012" width="3" height="15" fill="rgb(222,136,17)"/><text x="52.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="49" y="1028" width="3" height="15" fill="rgb(226,167,40)"/><text x="52.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1044" width="3" height="15" fill="rgb(253,191,26)"/><text x="52.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (1 samples, 0.24%)</title><rect x="49" y="1060" width="3" height="15" fill="rgb(250,79,31)"/><text x="52.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1076" width="3" height="15" fill="rgb(253,126,12)"/><text x="52.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1092" width="3" height="15" fill="rgb(214,56,45)"/><text x="52.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1108" width="3" height="15" fill="rgb(241,23,28)"/><text x="52.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1124" width="3" height="15" fill="rgb(206,81,1)"/><text x="52.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1140" width="3" height="15" fill="rgb(253,122,45)"/><text x="52.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1156" width="3" height="15" fill="rgb(208,138,38)"/><text x="52.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="49" y="1172" width="3" height="15" fill="rgb(235,148,5)"/><text x="52.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1188" width="3" height="15" fill="rgb(215,114,33)"/><text x="52.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (1 samples, 0.24%)</title><rect x="49" y="1204" width="3" height="15" fill="rgb(253,205,9)"/><text x="52.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1220" width="3" height="15" fill="rgb(220,174,1)"/><text x="52.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1236" width="3" height="15" fill="rgb(238,192,38)"/><text x="52.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1252" width="3" height="15" fill="rgb(215,197,17)"/><text x="52.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="49" y="1268" width="3" height="15" fill="rgb(214,109,49)"/><text x="52.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1284" width="3" height="15" fill="rgb(214,41,34)"/><text x="52.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py) (1 samples, 0.24%)</title><rect x="49" y="1300" width="3" height="15" fill="rgb(237,172,10)"/><text x="52.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1316" width="3" height="15" fill="rgb(205,4,18)"/><text x="52.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1332" width="3" height="15" fill="rgb(224,103,24)"/><text x="52.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1348" width="3" height="15" fill="rgb(237,206,50)"/><text x="52.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="49" y="1364" width="3" height="15" fill="rgb(254,195,31)"/><text x="52.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1380" width="3" height="15" fill="rgb(213,138,6)"/><text x="52.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py) (1 samples, 0.24%)</title><rect x="49" y="1396" width="3" height="15" fill="rgb(209,20,18)"/><text x="52.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.24%)</title><rect x="49" y="1412" width="3" height="15" fill="rgb(246,113,48)"/><text x="52.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.24%)</title><rect x="49" y="1428" width="3" height="15" fill="rgb(235,96,0)"/><text x="52.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.24%)</title><rect x="49" y="1444" width="3" height="15" fill="rgb(231,212,19)"/><text x="52.00" y="1454.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.24%)</title><rect x="49" y="1460" width="3" height="15" fill="rgb(247,148,10)"/><text x="52.00" y="1470.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.24%)</title><rect x="49" y="1476" width="3" height="15" fill="rgb(219,12,42)"/><text x="52.00" y="1486.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.24%)</title><rect x="49" y="1492" width="3" height="15" fill="rgb(210,160,21)"/><text x="52.00" y="1502.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.24%)</title><rect x="49" y="1508" width="3" height="15" fill="rgb(207,18,0)"/><text x="52.00" y="1518.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.24%)</title><rect x="49" y="1524" width="3" height="15" fill="rgb(248,209,19)"/><text x="52.00" y="1534.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.24%)</title><rect x="49" y="1540" width="3" height="15" fill="rgb(226,43,46)"/><text x="52.00" y="1550.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.24%)</title><rect x="49" y="1556" width="3" height="15" fill="rgb(235,220,19)"/><text x="52.00" y="1566.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.24%)</title><rect x="52" y="244" width="3" height="15" fill="rgb(206,16,15)"/><text x="55.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="260" width="3" height="15" fill="rgb(235,134,37)"/><text x="55.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="276" width="3" height="15" fill="rgb(215,98,12)"/><text x="55.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="292" width="3" height="15" fill="rgb(229,1,11)"/><text x="55.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="308" width="3" height="15" fill="rgb(219,143,12)"/><text x="55.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="324" width="3" height="15" fill="rgb(248,76,2)"/><text x="55.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (1 samples, 0.24%)</title><rect x="52" y="340" width="3" height="15" fill="rgb(250,49,17)"/><text x="55.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="356" width="3" height="15" fill="rgb(205,176,16)"/><text x="55.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="372" width="3" height="15" fill="rgb(226,195,25)"/><text x="55.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="388" width="3" height="15" fill="rgb(238,130,22)"/><text x="55.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="404" width="3" height="15" fill="rgb(241,158,48)"/><text x="55.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="420" width="3" height="15" fill="rgb(244,166,20)"/><text x="55.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py) (1 samples, 0.24%)</title><rect x="52" y="436" width="3" height="15" fill="rgb(232,77,47)"/><text x="55.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="452" width="3" height="15" fill="rgb(231,41,52)"/><text x="55.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="468" width="3" height="15" fill="rgb(206,164,15)"/><text x="55.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="484" width="3" height="15" fill="rgb(248,68,10)"/><text x="55.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="500" width="3" height="15" fill="rgb(245,226,15)"/><text x="55.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="516" width="3" height="15" fill="rgb(229,146,21)"/><text x="55.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/case.py) (1 samples, 0.24%)</title><rect x="52" y="532" width="3" height="15" fill="rgb(233,1,21)"/><text x="55.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="548" width="3" height="15" fill="rgb(248,119,7)"/><text x="55.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="564" width="3" height="15" fill="rgb(221,192,16)"/><text x="55.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="580" width="3" height="15" fill="rgb(242,154,0)"/><text x="55.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="596" width="3" height="15" fill="rgb(251,178,5)"/><text x="55.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="612" width="3" height="15" fill="rgb(237,157,42)"/><text x="55.00" y="622.50"></text></g><g><title>&lt;module&gt; (logging/__init__.py) (1 samples, 0.24%)</title><rect x="52" y="628" width="3" height="15" fill="rgb(207,165,22)"/><text x="55.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="644" width="3" height="15" fill="rgb(221,69,14)"/><text x="55.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="660" width="3" height="15" fill="rgb(248,132,1)"/><text x="55.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="676" width="3" height="15" fill="rgb(206,91,15)"/><text x="55.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="692" width="3" height="15" fill="rgb(234,33,48)"/><text x="55.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="708" width="3" height="15" fill="rgb(214,91,50)"/><text x="55.00" y="718.50"></text></g><g><title>&lt;module&gt; (string.py) (1 samples, 0.24%)</title><rect x="52" y="724" width="3" height="15" fill="rgb(245,196,8)"/><text x="55.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="740" width="3" height="15" fill="rgb(206,88,1)"/><text x="55.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="756" width="3" height="15" fill="rgb(238,123,42)"/><text x="55.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="772" width="3" height="15" fill="rgb(217,138,37)"/><text x="55.00" y="782.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="788" width="3" height="15" fill="rgb(239,6,20)"/><text x="55.00" y="798.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="804" width="3" height="15" fill="rgb(208,110,23)"/><text x="55.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.11%)</title><rect x="10" y="68" width="48" height="15" fill="rgb(220,146,12)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.11%)</title><rect x="10" y="84" width="48" height="15" fill="rgb(252,197,0)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.11%)</title><rect x="10" y="100" width="48" height="15" fill="rgb(247,151,17)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 4.11%)</title><rect x="10" y="116" width="48" height="15" fill="rgb(249,82,44)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.11%)</title><rect x="10" y="132" width="48" height="15" fill="rgb(210,127,11)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py) (17 samples, 4.11%)</title><rect x="10" y="148" width="48" height="15" fill="rgb(209,183,1)"/><text x="13.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.11%)</title><rect x="10" y="164" width="48" height="15" fill="rgb(229,103,33)"/><text x="13.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.11%)</title><rect x="10" y="180" width="48" height="15" fill="rgb(238,196,24)"/><text x="13.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.90%)</title><rect x="24" y="196" width="34" height="15" fill="rgb(242,27,10)"/><text x="27.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.90%)</title><rect x="24" y="212" width="34" height="15" fill="rgb(207,207,38)"/><text x="27.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.90%)</title><rect x="24" y="228" width="34" height="15" fill="rgb(211,190,1)"/><text x="27.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/neural_network/__init__.py) (1 samples, 0.24%)</title><rect x="55" y="244" width="3" height="15" fill="rgb(223,205,28)"/><text x="58.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="260" width="3" height="15" fill="rgb(252,190,21)"/><text x="58.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="276" width="3" height="15" fill="rgb(234,140,44)"/><text x="58.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="292" width="3" height="15" fill="rgb(211,22,40)"/><text x="58.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="55" y="308" width="3" height="15" fill="rgb(230,43,47)"/><text x="58.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="324" width="3" height="15" fill="rgb(228,200,51)"/><text x="58.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.24%)</title><rect x="55" y="340" width="3" height="15" fill="rgb(206,187,28)"/><text x="58.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="356" width="3" height="15" fill="rgb(220,216,26)"/><text x="58.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="372" width="3" height="15" fill="rgb(211,221,53)"/><text x="58.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="388" width="3" height="15" fill="rgb(211,229,4)"/><text x="58.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="55" y="404" width="3" height="15" fill="rgb(235,59,12)"/><text x="58.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="420" width="3" height="15" fill="rgb(215,97,0)"/><text x="58.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/__init__.py) (1 samples, 0.24%)</title><rect x="55" y="436" width="3" height="15" fill="rgb(232,135,24)"/><text x="58.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="452" width="3" height="15" fill="rgb(252,91,2)"/><text x="58.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="468" width="3" height="15" fill="rgb(239,177,6)"/><text x="58.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="484" width="3" height="15" fill="rgb(230,33,37)"/><text x="58.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="55" y="500" width="3" height="15" fill="rgb(230,46,42)"/><text x="58.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="516" width="3" height="15" fill="rgb(224,90,52)"/><text x="58.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/_search.py) (1 samples, 0.24%)</title><rect x="55" y="532" width="3" height="15" fill="rgb(206,50,16)"/><text x="58.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="548" width="3" height="15" fill="rgb(251,51,40)"/><text x="58.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="564" width="3" height="15" fill="rgb(225,209,3)"/><text x="58.00" y="574.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="580" width="3" height="15" fill="rgb(243,190,15)"/><text x="58.00" y="590.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="55" y="596" width="3" height="15" fill="rgb(246,6,40)"/><text x="58.00" y="606.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="55" y="612" width="3" height="15" fill="rgb(224,21,36)"/><text x="58.00" y="622.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="55" y="628" width="3" height="15" fill="rgb(253,164,8)"/><text x="58.00" y="638.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="55" y="644" width="3" height="15" fill="rgb(210,3,49)"/><text x="58.00" y="654.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.24%)</title><rect x="86" y="180" width="3" height="15" fill="rgb(205,56,53)"/><text x="89.00" y="190.50"></text></g><g><title>0x7f696e9d7ff9 (?) (1 samples, 0.24%)</title><rect x="104" y="212" width="2" height="15" fill="rgb(211,7,40)"/><text x="107.00" y="222.50"></text></g><g><title>0x7f696e9d2ef6 (?) (1 samples, 0.24%)</title><rect x="104" y="228" width="2" height="15" fill="rgb(250,197,44)"/><text x="107.00" y="238.50"></text></g><g><title>0x7f696e9c7962 (?) (1 samples, 0.24%)</title><rect x="104" y="244" width="2" height="15" fill="rgb(207,126,17)"/><text x="107.00" y="254.50"></text></g><g><title>0x7f696e9fb7a7 (?) (1 samples, 0.24%)</title><rect x="104" y="260" width="2" height="15" fill="rgb(205,142,28)"/><text x="107.00" y="270.50"></text></g><g><title>0x7f696e9fb379 (?) (1 samples, 0.24%)</title><rect x="104" y="276" width="2" height="15" fill="rgb(228,78,41)"/><text x="107.00" y="286.50"></text></g><g><title>0x7f696ee598b8 (?) (1 samples, 0.24%)</title><rect x="104" y="292" width="2" height="15" fill="rgb(252,217,27)"/><text x="107.00" y="302.50"></text></g><g><title>0x7f696ee57c7f (?) (1 samples, 0.24%)</title><rect x="104" y="308" width="2" height="15" fill="rgb(209,1,49)"/><text x="107.00" y="318.50"></text></g><g><title>0x7f696ee6a99c (?) (1 samples, 0.24%)</title><rect x="104" y="324" width="2" height="15" fill="rgb(208,140,49)"/><text x="107.00" y="334.50"></text></g><g><title>0x7f696ec48e2f (?) (1 samples, 0.24%)</title><rect x="104" y="340" width="2" height="15" fill="rgb(217,226,11)"/><text x="107.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.24%)</title><rect x="115" y="292" width="3" height="15" fill="rgb(240,186,30)"/><text x="118.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="118" y="292" width="3" height="15" fill="rgb(222,178,34)"/><text x="121.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="118" y="308" width="3" height="15" fill="rgb(247,198,26)"/><text x="121.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="118" y="324" width="3" height="15" fill="rgb(245,28,48)"/><text x="121.00" y="334.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="118" y="340" width="3" height="15" fill="rgb(224,2,0)"/><text x="121.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="121" y="292" width="3" height="15" fill="rgb(232,102,21)"/><text x="124.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="121" y="308" width="3" height="15" fill="rgb(210,111,34)"/><text x="124.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="121" y="324" width="3" height="15" fill="rgb(225,54,11)"/><text x="124.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="124" y="292" width="2" height="15" fill="rgb(231,184,45)"/><text x="127.00" y="302.50"></text></g><g><title>onnxruntime::logging::LoggingManager::CreateLogger (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="124" y="308" width="2" height="15" fill="rgb(227,43,52)"/><text x="127.00" y="318.50"></text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="126" y="340" width="3" height="15" fill="rgb(234,4,21)"/><text x="129.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Alloc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="129" y="356" width="3" height="15" fill="rgb(227,124,32)"/><text x="132.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="132" y="356" width="6" height="15" fill="rgb(250,48,40)"/><text x="135.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="135" y="372" width="3" height="15" fill="rgb(221,183,53)"/><text x="138.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.97%)</title><rect x="129" y="340" width="12" height="15" fill="rgb(252,102,51)"/><text x="132.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="138" y="356" width="3" height="15" fill="rgb(206,12,44)"/><text x="141.00" y="366.50"></text></g><g><title>0x7f69b0994be4 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="141" y="356" width="2" height="15" fill="rgb(218,143,30)"/><text x="144.00" y="366.50"></text></g><g><title>onnxruntime::FuseActivation&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="143" y="356" width="3" height="15" fill="rgb(241,98,10)"/><text x="146.00" y="366.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.45%)</title><rect x="141" y="340" width="17" height="15" fill="rgb(217,207,20)"/><text x="144.00" y="350.50"></text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.97%)</title><rect x="146" y="356" width="12" height="15" fill="rgb(235,106,48)"/><text x="149.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.72%)</title><rect x="149" y="372" width="9" height="15" fill="rgb(210,126,10)"/><text x="152.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.72%)</title><rect x="149" y="388" width="9" height="15" fill="rgb(237,32,53)"/><text x="152.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.72%)</title><rect x="149" y="404" width="9" height="15" fill="rgb(217,214,47)"/><text x="152.00" y="414.50"></text></g><g><title>mkl_blas_sgemv (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.72%)</title><rect x="149" y="420" width="9" height="15" fill="rgb(220,34,17)"/><text x="152.00" y="430.50"></text></g><g><title>mkl_blas_xsgemv (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.48%)</title><rect x="152" y="436" width="6" height="15" fill="rgb(218,135,36)"/><text x="155.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemv (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.48%)</title><rect x="152" y="452" width="6" height="15" fill="rgb(239,73,53)"/><text x="155.00" y="462.50"></text></g><g><title>onnxruntime::GraphViewer::GetNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="158" y="340" width="3" height="15" fill="rgb(224,43,9)"/><text x="161.00" y="350.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 3.38%)</title><rect x="126" y="324" width="40" height="15" fill="rgb(247,219,17)"/><text x="129.00" y="334.50">onn..</text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="161" y="340" width="5" height="15" fill="rgb(236,100,34)"/><text x="164.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="161" y="356" width="5" height="15" fill="rgb(237,11,34)"/><text x="164.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="161" y="372" width="5" height="15" fill="rgb(217,158,3)"/><text x="164.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="161" y="388" width="5" height="15" fill="rgb(229,80,47)"/><text x="164.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="161" y="404" width="5" height="15" fill="rgb(207,157,16)"/><text x="164.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="161" y="420" width="5" height="15" fill="rgb(220,220,53)"/><text x="164.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="161" y="436" width="5" height="15" fill="rgb(220,179,2)"/><text x="164.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="163" y="452" width="3" height="15" fill="rgb(242,8,24)"/><text x="166.00" y="462.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.62%)</title><rect x="126" y="308" width="43" height="15" fill="rgb(228,20,36)"/><text x="129.00" y="318.50">onnx..</text></g><g><title>onnxruntime::SequentialExecutor::~SequentialExecutor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="166" y="324" width="3" height="15" fill="rgb(213,78,45)"/><text x="169.00" y="334.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 3.86%)</title><rect x="126" y="292" width="46" height="15" fill="rgb(225,174,35)"/><text x="129.00" y="302.50">onnx..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="169" y="308" width="3" height="15" fill="rgb(224,5,35)"/><text x="172.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="169" y="324" width="3" height="15" fill="rgb(210,127,3)"/><text x="172.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="169" y="340" width="3" height="15" fill="rgb(218,136,49)"/><text x="172.00" y="350.50"></text></g><g><title>0x7f69b0a73076 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="169" y="356" width="3" height="15" fill="rgb(219,115,4)"/><text x="172.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 5.07%)</title><rect x="115" y="260" width="60" height="15" fill="rgb(233,228,22)"/><text x="118.00" y="270.50">onnxru..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 5.07%)</title><rect x="115" y="276" width="60" height="15" fill="rgb(225,209,16)"/><text x="118.00" y="286.50">onnxru..</text></g><g><title>std::default_delete&lt;onnxruntime::logging::Logger&gt;::operator() [clone .isra.476] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="172" y="292" width="3" height="15" fill="rgb(212,47,54)"/><text x="175.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="175" y="260" width="3" height="15" fill="rgb(235,68,12)"/><text x="178.00" y="270.50"></text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="178" y="260" width="3" height="15" fill="rgb(219,183,17)"/><text x="181.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 5.80%)</title><rect x="115" y="244" width="68" height="15" fill="rgb(219,127,18)"/><text x="118.00" y="254.50">onnxrun..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="181" y="260" width="2" height="15" fill="rgb(250,31,10)"/><text x="184.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="181" y="276" width="2" height="15" fill="rgb(240,121,20)"/><text x="184.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="181" y="292" width="2" height="15" fill="rgb(236,51,8)"/><text x="184.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="181" y="308" width="2" height="15" fill="rgb(253,122,48)"/><text x="184.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="181" y="324" width="2" height="15" fill="rgb(248,81,31)"/><text x="184.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="181" y="340" width="2" height="15" fill="rgb(208,203,7)"/><text x="184.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="181" y="356" width="2" height="15" fill="rgb(228,204,33)"/><text x="184.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::DeleteChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="181" y="372" width="2" height="15" fill="rgb(228,150,22)"/><text x="184.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::AllocationRegion::IndexFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="181" y="388" width="2" height="15" fill="rgb(223,41,20)"/><text x="184.00" y="398.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (46 samples, 11.11%)</title><rect x="58" y="132" width="131" height="15" fill="rgb(244,105,53)"/><text x="61.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (46 samples, 11.11%)</title><rect x="58" y="148" width="131" height="15" fill="rgb(242,160,48)"/><text x="61.00" y="158.50">run (mlprodict/o..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (39 samples, 9.42%)</title><rect x="78" y="164" width="111" height="15" fill="rgb(246,196,2)"/><text x="81.00" y="174.50">_run_whole_ru..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (35 samples, 8.45%)</title><rect x="89" y="180" width="100" height="15" fill="rgb(236,65,11)"/><text x="92.00" y="190.50">run (mlprodi..</text></g><g><title>run (onnxruntime/capi/session.py) (34 samples, 8.21%)</title><rect x="92" y="196" width="97" height="15" fill="rgb(236,26,31)"/><text x="95.00" y="206.50">run (onnxru..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 7.00%)</title><rect x="106" y="212" width="83" height="15" fill="rgb(243,158,17)"/><text x="109.00" y="222.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 6.76%)</title><rect x="109" y="228" width="80" height="15" fill="rgb(236,121,43)"/><text x="112.00" y="238.50">void pybi..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="183" y="244" width="6" height="15" fill="rgb(239,58,54)"/><text x="186.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="183" y="260" width="6" height="15" fill="rgb(242,2,40)"/><text x="186.00" y="270.50"></text></g><g><title>profile_ort (bench_MLPRegressor_default_m_reg_1_50_12_float_.py) (47 samples, 11.35%)</title><rect x="58" y="68" width="134" height="15" fill="rgb(223,86,13)"/><text x="61.00" y="78.50">profile_ort (ben..</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1_50_12_float_.py) (47 samples, 11.35%)</title><rect x="58" y="84" width="134" height="15" fill="rgb(233,113,9)"/><text x="61.00" y="94.50">setup_profile (b..</text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1_50_12_float_.py) (47 samples, 11.35%)</title><rect x="58" y="100" width="134" height="15" fill="rgb(253,52,22)"/><text x="61.00" y="110.50">profile (bench_M..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (47 samples, 11.35%)</title><rect x="58" y="116" width="134" height="15" fill="rgb(213,63,50)"/><text x="61.00" y="126.50">time_predict (ml..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.24%)</title><rect x="189" y="132" width="3" height="15" fill="rgb(254,68,48)"/><text x="192.00" y="142.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.24%)</title><rect x="374" y="196" width="3" height="15" fill="rgb(249,47,34)"/><text x="377.00" y="206.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.24%)</title><rect x="406" y="292" width="3" height="15" fill="rgb(210,57,13)"/><text x="409.00" y="302.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.24%)</title><rect x="406" y="308" width="3" height="15" fill="rgb(226,102,16)"/><text x="409.00" y="318.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.24%)</title><rect x="406" y="324" width="3" height="15" fill="rgb(234,29,50)"/><text x="409.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (3 samples, 0.72%)</title><rect x="403" y="212" width="8" height="15" fill="rgb(228,84,50)"/><text x="406.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.48%)</title><rect x="406" y="228" width="5" height="15" fill="rgb(210,97,25)"/><text x="409.00" y="238.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.48%)</title><rect x="406" y="244" width="5" height="15" fill="rgb(221,200,19)"/><text x="409.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.48%)</title><rect x="406" y="260" width="5" height="15" fill="rgb(245,99,50)"/><text x="409.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.48%)</title><rect x="406" y="276" width="5" height="15" fill="rgb(214,62,32)"/><text x="409.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.24%)</title><rect x="409" y="292" width="2" height="15" fill="rgb(214,157,22)"/><text x="412.00" y="302.50"></text></g><g><title>array_item (mapping.c) (1 samples, 0.24%)</title><rect x="420" y="276" width="3" height="15" fill="rgb(235,127,23)"/><text x="423.00" y="286.50"></text></g><g><title>get_item_pointer (mapping.c) (1 samples, 0.24%)</title><rect x="420" y="292" width="3" height="15" fill="rgb(240,111,47)"/><text x="423.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (4 samples, 0.97%)</title><rect x="414" y="244" width="12" height="15" fill="rgb(245,66,26)"/><text x="417.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (3 samples, 0.72%)</title><rect x="417" y="260" width="9" height="15" fill="rgb(233,31,36)"/><text x="420.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src) (1 samples, 0.24%)</title><rect x="423" y="276" width="3" height="15" fill="rgb(234,56,29)"/><text x="426.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.24%)</title><rect x="423" y="292" width="3" height="15" fill="rgb(254,67,33)"/><text x="426.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.24%)</title><rect x="423" y="308" width="3" height="15" fill="rgb(216,85,44)"/><text x="426.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (6 samples, 1.45%)</title><rect x="411" y="212" width="17" height="15" fill="rgb(214,202,54)"/><text x="414.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (6 samples, 1.45%)</title><rect x="411" y="228" width="17" height="15" fill="rgb(252,91,35)"/><text x="414.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.24%)</title><rect x="426" y="244" width="2" height="15" fill="rgb(240,5,21)"/><text x="429.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.24%)</title><rect x="426" y="260" width="2" height="15" fill="rgb(231,162,27)"/><text x="429.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.24%)</title><rect x="426" y="276" width="2" height="15" fill="rgb(208,119,27)"/><text x="429.00" y="286.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.24%)</title><rect x="428" y="212" width="3" height="15" fill="rgb(219,166,24)"/><text x="431.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.48%)</title><rect x="457" y="260" width="6" height="15" fill="rgb(227,38,44)"/><text x="460.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.48%)</title><rect x="457" y="276" width="6" height="15" fill="rgb(243,99,35)"/><text x="460.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.48%)</title><rect x="457" y="292" width="6" height="15" fill="rgb(237,24,21)"/><text x="460.00" y="302.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.24%)</title><rect x="463" y="308" width="3" height="15" fill="rgb(230,203,37)"/><text x="466.00" y="318.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.72%)</title><rect x="463" y="292" width="8" height="15" fill="rgb(214,95,46)"/><text x="466.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.48%)</title><rect x="466" y="308" width="5" height="15" fill="rgb(209,45,49)"/><text x="469.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (2 samples, 0.48%)</title><rect x="466" y="324" width="5" height="15" fill="rgb(242,214,12)"/><text x="469.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.24%)</title><rect x="468" y="340" width="3" height="15" fill="rgb(245,178,40)"/><text x="471.00" y="350.50"></text></g><g><title>0x7f69b094ca19 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="468" y="356" width="3" height="15" fill="rgb(226,156,45)"/><text x="471.00" y="366.50"></text></g><g><title>diophantine_sort_A (mem_overlap.c) (1 samples, 0.24%)</title><rect x="468" y="372" width="3" height="15" fill="rgb(211,226,10)"/><text x="471.00" y="382.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.24%)</title><rect x="471" y="292" width="3" height="15" fill="rgb(235,196,10)"/><text x="474.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (2 samples, 0.48%)</title><rect x="474" y="292" width="6" height="15" fill="rgb(218,108,21)"/><text x="477.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.24%)</title><rect x="480" y="292" width="3" height="15" fill="rgb(245,29,48)"/><text x="483.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.24%)</title><rect x="480" y="308" width="3" height="15" fill="rgb(224,177,29)"/><text x="483.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.24%)</title><rect x="480" y="324" width="3" height="15" fill="rgb(243,225,43)"/><text x="483.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 1.93%)</title><rect x="463" y="276" width="22" height="15" fill="rgb(213,71,18)"/><text x="466.00" y="286.50">e..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.24%)</title><rect x="483" y="292" width="2" height="15" fill="rgb(228,9,49)"/><text x="486.00" y="302.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.24%)</title><rect x="483" y="308" width="2" height="15" fill="rgb(229,209,22)"/><text x="486.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (20 samples, 4.83%)</title><rect x="431" y="228" width="57" height="15" fill="rgb(221,9,4)"/><text x="434.00" y="238.50">_run (..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 2.66%)</title><rect x="457" y="244" width="31" height="15" fill="rgb(250,146,51)"/><text x="460.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 2.17%)</title><rect x="463" y="260" width="25" height="15" fill="rgb(206,206,11)"/><text x="466.00" y="270.50">P..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.24%)</title><rect x="485" y="276" width="3" height="15" fill="rgb(220,74,23)"/><text x="488.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.24%)</title><rect x="485" y="292" width="3" height="15" fill="rgb(220,74,17)"/><text x="488.00" y="302.50"></text></g><g><title>arrayflags_getitem (flagsobject.c) (1 samples, 0.24%)</title><rect x="508" y="260" width="3" height="15" fill="rgb(227,194,25)"/><text x="511.00" y="270.50"></text></g><g><title>0x7f69b09aa782 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="520" y="308" width="3" height="15" fill="rgb(251,219,23)"/><text x="523.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.24%)</title><rect x="523" y="324" width="2" height="15" fill="rgb(246,21,49)"/><text x="526.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.24%)</title><rect x="523" y="340" width="2" height="15" fill="rgb(234,7,9)"/><text x="526.00" y="350.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.24%)</title><rect x="528" y="388" width="3" height="15" fill="rgb(240,40,35)"/><text x="531.00" y="398.50"></text></g><g><title>PyArray_ResolveWritebackIfCopy (arrayobject.c) (2 samples, 0.48%)</title><rect x="528" y="340" width="6" height="15" fill="rgb(211,70,19)"/><text x="531.00" y="350.50"></text></g><g><title>PyArray_CopyAsFlat (ctors.c) (2 samples, 0.48%)</title><rect x="528" y="356" width="6" height="15" fill="rgb(228,220,53)"/><text x="531.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.48%)</title><rect x="528" y="372" width="6" height="15" fill="rgb(236,200,5)"/><text x="531.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.24%)</title><rect x="531" y="388" width="3" height="15" fill="rgb(222,156,11)"/><text x="534.00" y="398.50"></text></g><g><title>_aligned_strided_to_strided_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.24%)</title><rect x="531" y="404" width="3" height="15" fill="rgb(222,57,7)"/><text x="534.00" y="414.50"></text></g><g><title>_bad_strides (cblasfuncs.c) (1 samples, 0.24%)</title><rect x="534" y="340" width="3" height="15" fill="rgb(242,125,44)"/><text x="537.00" y="350.50"></text></g><g><title>sgemv_kernel_4x2 (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.24%)</title><rect x="542" y="388" width="3" height="15" fill="rgb(247,53,51)"/><text x="545.00" y="398.50"></text></g><g><title>gemv (cblasfuncs.c) (6 samples, 1.45%)</title><rect x="537" y="340" width="17" height="15" fill="rgb(248,109,37)"/><text x="540.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.45%)</title><rect x="537" y="356" width="17" height="15" fill="rgb(232,119,29)"/><text x="540.00" y="366.50"></text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 1.21%)</title><rect x="540" y="372" width="14" height="15" fill="rgb(242,123,29)"/><text x="543.00" y="382.50"></text></g><g><title>sgemv_kernel_4x8 (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.72%)</title><rect x="545" y="388" width="9" height="15" fill="rgb(247,203,34)"/><text x="548.00" y="398.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (15 samples, 3.62%)</title><rect x="514" y="292" width="43" height="15" fill="rgb(229,202,3)"/><text x="517.00" y="302.50">arra..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (12 samples, 2.90%)</title><rect x="523" y="308" width="34" height="15" fill="rgb(228,71,4)"/><text x="526.00" y="318.50">Py..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (11 samples, 2.66%)</title><rect x="525" y="324" width="32" height="15" fill="rgb(230,186,46)"/><text x="528.00" y="334.50">cb..</text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.24%)</title><rect x="554" y="340" width="3" height="15" fill="rgb(216,148,54)"/><text x="557.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.24%)</title><rect x="554" y="356" width="3" height="15" fill="rgb(254,93,7)"/><text x="557.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (25 samples, 6.04%)</title><rect x="488" y="228" width="72" height="15" fill="rgb(245,43,41)"/><text x="491.00" y="238.50">_run (ml..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (25 samples, 6.04%)</title><rect x="488" y="244" width="72" height="15" fill="rgb(235,155,33)"/><text x="491.00" y="254.50">numpy_do..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (17 samples, 4.11%)</title><rect x="511" y="260" width="49" height="15" fill="rgb(226,108,4)"/><text x="514.00" y="270.50">dot ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (16 samples, 3.86%)</title><rect x="514" y="276" width="46" height="15" fill="rgb(241,184,22)"/><text x="517.00" y="286.50">arra..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.24%)</title><rect x="557" y="292" width="3" height="15" fill="rgb(231,6,26)"/><text x="560.00" y="302.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.24%)</title><rect x="560" y="292" width="2" height="15" fill="rgb(217,142,26)"/><text x="563.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.24%)</title><rect x="560" y="308" width="2" height="15" fill="rgb(234,32,45)"/><text x="563.00" y="318.50"></text></g><g><title>LONG_copyswap (arraytypes.c.src) (1 samples, 0.24%)</title><rect x="562" y="340" width="3" height="15" fill="rgb(213,92,24)"/><text x="565.00" y="350.50"></text></g><g><title>_basic_copy (arraytypes.c.src) (1 samples, 0.24%)</title><rect x="562" y="356" width="3" height="15" fill="rgb(223,88,32)"/><text x="565.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (3 samples, 0.72%)</title><rect x="560" y="276" width="8" height="15" fill="rgb(248,206,38)"/><text x="563.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (2 samples, 0.48%)</title><rect x="562" y="292" width="6" height="15" fill="rgb(227,17,50)"/><text x="565.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (2 samples, 0.48%)</title><rect x="562" y="308" width="6" height="15" fill="rgb(252,4,38)"/><text x="565.00" y="318.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (2 samples, 0.48%)</title><rect x="562" y="324" width="6" height="15" fill="rgb(241,74,34)"/><text x="565.00" y="334.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.24%)</title><rect x="565" y="340" width="3" height="15" fill="rgb(211,35,43)"/><text x="568.00" y="350.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.24%)</title><rect x="565" y="356" width="3" height="15" fill="rgb(232,112,28)"/><text x="568.00" y="366.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.24%)</title><rect x="568" y="276" width="3" height="15" fill="rgb(217,120,44)"/><text x="571.00" y="286.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.24%)</title><rect x="571" y="292" width="3" height="15" fill="rgb(239,37,37)"/><text x="574.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.24%)</title><rect x="571" y="308" width="3" height="15" fill="rgb(235,180,48)"/><text x="574.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.24%)</title><rect x="571" y="324" width="3" height="15" fill="rgb(212,219,12)"/><text x="574.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.24%)</title><rect x="571" y="340" width="3" height="15" fill="rgb(220,33,36)"/><text x="574.00" y="350.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.24%)</title><rect x="571" y="356" width="3" height="15" fill="rgb(232,170,24)"/><text x="574.00" y="366.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.24%)</title><rect x="571" y="372" width="3" height="15" fill="rgb(237,78,21)"/><text x="574.00" y="382.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (2 samples, 0.48%)</title><rect x="571" y="276" width="6" height="15" fill="rgb(214,148,39)"/><text x="574.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.24%)</title><rect x="574" y="292" width="3" height="15" fill="rgb(243,149,14)"/><text x="577.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.24%)</title><rect x="574" y="308" width="3" height="15" fill="rgb(241,67,46)"/><text x="577.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.24%)</title><rect x="574" y="324" width="3" height="15" fill="rgb(246,188,38)"/><text x="577.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.24%)</title><rect x="577" y="292" width="3" height="15" fill="rgb(219,66,11)"/><text x="580.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.24%)</title><rect x="577" y="308" width="3" height="15" fill="rgb(254,88,32)"/><text x="580.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.24%)</title><rect x="577" y="324" width="3" height="15" fill="rgb(220,81,15)"/><text x="580.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.24%)</title><rect x="577" y="340" width="3" height="15" fill="rgb(241,105,49)"/><text x="580.00" y="350.50"></text></g><g><title>0x7f69b094c7a5 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="577" y="356" width="3" height="15" fill="rgb(253,121,23)"/><text x="580.00" y="366.50"></text></g><g><title>0x7f69b094ca19 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="577" y="372" width="3" height="15" fill="rgb(211,98,5)"/><text x="580.00" y="382.50"></text></g><g><title>diophantine_sort_A (mem_overlap.c) (1 samples, 0.24%)</title><rect x="577" y="388" width="3" height="15" fill="rgb(240,115,41)"/><text x="580.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.48%)</title><rect x="577" y="276" width="5" height="15" fill="rgb(243,91,36)"/><text x="580.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.24%)</title><rect x="580" y="292" width="2" height="15" fill="rgb(244,202,20)"/><text x="583.00" y="302.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (4 samples, 0.97%)</title><rect x="582" y="276" width="12" height="15" fill="rgb(218,101,52)"/><text x="585.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.24%)</title><rect x="591" y="292" width="3" height="15" fill="rgb(238,174,45)"/><text x="594.00" y="302.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.24%)</title><rect x="591" y="308" width="3" height="15" fill="rgb(240,212,28)"/><text x="594.00" y="318.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.24%)</title><rect x="591" y="324" width="3" height="15" fill="rgb(205,44,8)"/><text x="594.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 3.14%)</title><rect x="560" y="260" width="37" height="15" fill="rgb(251,29,37)"/><text x="563.00" y="270.50">PyU..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.24%)</title><rect x="594" y="276" width="3" height="15" fill="rgb(205,124,50)"/><text x="597.00" y="286.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (136 samples, 32.85%)</title><rect x="215" y="164" width="387" height="15" fill="rgb(222,89,4)"/><text x="218.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (130 samples, 31.40%)</title><rect x="232" y="180" width="370" height="15" fill="rgb(216,187,45)"/><text x="235.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (79 samples, 19.08%)</title><rect x="377" y="196" width="225" height="15" fill="rgb(252,73,44)"/><text x="380.00" y="206.50">run (mlprodict/onnxrt/ops_cpu..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (60 samples, 14.49%)</title><rect x="431" y="212" width="171" height="15" fill="rgb(205,216,9)"/><text x="434.00" y="222.50">run (mlprodict/onnxrt/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py) (15 samples, 3.62%)</title><rect x="560" y="228" width="42" height="15" fill="rgb(245,62,8)"/><text x="563.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 3.62%)</title><rect x="560" y="244" width="42" height="15" fill="rgb(246,192,47)"/><text x="563.00" y="254.50">ufu..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (2 samples, 0.48%)</title><rect x="597" y="260" width="5" height="15" fill="rgb(206,197,15)"/><text x="600.00" y="270.50"></text></g><g><title>profile_pyrt (bench_MLPRegressor_default_m_reg_1_50_12_float_.py) (145 samples, 35.02%)</title><rect x="192" y="68" width="413" height="15" fill="rgb(235,223,12)"/><text x="195.00" y="78.50">profile_pyrt (bench_MLPRegressor_default_m_reg_1_50_12_f..</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1_50_12_float_.py) (145 samples, 35.02%)</title><rect x="192" y="84" width="413" height="15" fill="rgb(250,179,38)"/><text x="195.00" y="94.50">setup_profile (bench_MLPRegressor_default_m_reg_1_50_12_..</text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1_50_12_float_.py) (145 samples, 35.02%)</title><rect x="192" y="100" width="413" height="15" fill="rgb(233,45,39)"/><text x="195.00" y="110.50">profile (bench_MLPRegressor_default_m_reg_1_50_12_float_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (144 samples, 34.78%)</title><rect x="195" y="116" width="410" height="15" fill="rgb(238,24,4)"/><text x="198.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (142 samples, 34.30%)</title><rect x="200" y="132" width="405" height="15" fill="rgb(240,70,2)"/><text x="203.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (141 samples, 34.06%)</title><rect x="203" y="148" width="402" height="15" fill="rgb(234,72,32)"/><text x="206.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.24%)</title><rect x="602" y="164" width="3" height="15" fill="rgb(212,64,48)"/><text x="605.00" y="174.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.24%)</title><rect x="602" y="180" width="3" height="15" fill="rgb(216,122,52)"/><text x="605.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.24%)</title><rect x="605" y="116" width="3" height="15" fill="rgb(216,88,32)"/><text x="608.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.24%)</title><rect x="605" y="132" width="3" height="15" fill="rgb(232,140,51)"/><text x="608.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.24%)</title><rect x="605" y="148" width="3" height="15" fill="rgb(247,191,35)"/><text x="608.00" y="158.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.24%)</title><rect x="679" y="212" width="3" height="15" fill="rgb(232,118,43)"/><text x="682.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.48%)</title><rect x="679" y="196" width="6" height="15" fill="rgb(209,219,33)"/><text x="682.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.24%)</title><rect x="682" y="212" width="3" height="15" fill="rgb(207,20,15)"/><text x="685.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.24%)</title><rect x="682" y="228" width="3" height="15" fill="rgb(234,128,7)"/><text x="685.00" y="238.50"></text></g><g><title>identity (sklearn/neural_network/_base.py) (1 samples, 0.24%)</title><rect x="685" y="196" width="3" height="15" fill="rgb(225,6,26)"/><text x="688.00" y="206.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (2 samples, 0.48%)</title><rect x="694" y="212" width="5" height="15" fill="rgb(231,70,18)"/><text x="697.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.48%)</title><rect x="736" y="356" width="6" height="15" fill="rgb(220,208,19)"/><text x="739.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.48%)</title><rect x="736" y="372" width="6" height="15" fill="rgb(229,32,48)"/><text x="739.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.48%)</title><rect x="736" y="388" width="6" height="15" fill="rgb(227,30,9)"/><text x="739.00" y="398.50"></text></g><g><title>0x7f69b09aae7a (libc-2.29.so) (1 samples, 0.24%)</title><rect x="739" y="404" width="3" height="15" fill="rgb(246,104,24)"/><text x="742.00" y="414.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.24%)</title><rect x="742" y="372" width="3" height="15" fill="rgb(252,222,8)"/><text x="745.00" y="382.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.24%)</title><rect x="742" y="388" width="3" height="15" fill="rgb(220,51,39)"/><text x="745.00" y="398.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.24%)</title><rect x="745" y="372" width="3" height="15" fill="rgb(229,51,5)"/><text x="748.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.24%)</title><rect x="745" y="388" width="3" height="15" fill="rgb(224,13,37)"/><text x="748.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.24%)</title><rect x="745" y="404" width="3" height="15" fill="rgb(236,90,5)"/><text x="748.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.24%)</title><rect x="745" y="420" width="3" height="15" fill="rgb(254,217,12)"/><text x="748.00" y="430.50"></text></g><g><title>DOUBLE_clip (clip.c.src) (1 samples, 0.24%)</title><rect x="748" y="404" width="3" height="15" fill="rgb(252,98,34)"/><text x="751.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.24%)</title><rect x="751" y="404" width="2" height="15" fill="rgb(209,225,21)"/><text x="754.00" y="414.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.24%)</title><rect x="751" y="420" width="2" height="15" fill="rgb(222,13,32)"/><text x="754.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.72%)</title><rect x="748" y="372" width="8" height="15" fill="rgb(238,224,32)"/><text x="751.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.72%)</title><rect x="748" y="388" width="8" height="15" fill="rgb(253,39,21)"/><text x="751.00" y="398.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.24%)</title><rect x="753" y="404" width="3" height="15" fill="rgb(233,188,3)"/><text x="756.00" y="414.50"></text></g><g><title>0x7f69afbb6e10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="753" y="420" width="3" height="15" fill="rgb(207,105,1)"/><text x="756.00" y="430.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.24%)</title><rect x="756" y="404" width="3" height="15" fill="rgb(212,212,11)"/><text x="759.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.24%)</title><rect x="756" y="420" width="3" height="15" fill="rgb(222,81,26)"/><text x="759.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.69%)</title><rect x="742" y="356" width="20" height="15" fill="rgb(240,209,20)"/><text x="745.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.48%)</title><rect x="756" y="372" width="6" height="15" fill="rgb(250,173,21)"/><text x="759.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.48%)</title><rect x="756" y="388" width="6" height="15" fill="rgb(253,138,53)"/><text x="759.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.24%)</title><rect x="759" y="404" width="3" height="15" fill="rgb(211,65,51)"/><text x="762.00" y="414.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (14 samples, 3.38%)</title><rect x="725" y="324" width="40" height="15" fill="rgb(244,220,41)"/><text x="728.00" y="334.50">_cl..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 2.42%)</title><rect x="736" y="340" width="29" height="15" fill="rgb(252,34,26)"/><text x="739.00" y="350.50">uf..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.24%)</title><rect x="762" y="356" width="3" height="15" fill="rgb(239,120,22)"/><text x="765.00" y="366.50"></text></g><g><title>0x7f69b09b5120 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="762" y="372" width="3" height="15" fill="rgb(234,188,9)"/><text x="765.00" y="382.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (4 samples, 0.97%)</title><rect x="765" y="324" width="11" height="15" fill="rgb(239,226,24)"/><text x="768.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="788" y="340" width="2" height="15" fill="rgb(206,132,35)"/><text x="791.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.24%)</title><rect x="802" y="388" width="3" height="15" fill="rgb(217,203,9)"/><text x="805.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.24%)</title><rect x="802" y="404" width="3" height="15" fill="rgb(210,205,46)"/><text x="805.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.24%)</title><rect x="816" y="420" width="3" height="15" fill="rgb(228,208,54)"/><text x="819.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.24%)</title><rect x="816" y="436" width="3" height="15" fill="rgb(226,172,11)"/><text x="819.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.24%)</title><rect x="816" y="452" width="3" height="15" fill="rgb(243,14,52)"/><text x="819.00" y="462.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.24%)</title><rect x="816" y="468" width="3" height="15" fill="rgb(253,107,41)"/><text x="819.00" y="478.50"></text></g><g><title>0x7f69b0a72130 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="819" y="436" width="3" height="15" fill="rgb(240,72,54)"/><text x="822.00" y="446.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (12 samples, 2.90%)</title><rect x="790" y="340" width="35" height="15" fill="rgb(213,90,33)"/><text x="793.00" y="350.50">nd..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (12 samples, 2.90%)</title><rect x="790" y="356" width="35" height="15" fill="rgb(240,41,48)"/><text x="793.00" y="366.50">ar..</text></g><g><title>ndim (numpy/core/fromnumeric.py) (12 samples, 2.90%)</title><rect x="790" y="372" width="35" height="15" fill="rgb(222,42,15)"/><text x="793.00" y="382.50">nd..</text></g><g><title>asarray (numpy/core/_asarray.py) (7 samples, 1.69%)</title><rect x="805" y="388" width="20" height="15" fill="rgb(205,55,5)"/><text x="808.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (6 samples, 1.45%)</title><rect x="808" y="404" width="17" height="15" fill="rgb(212,88,34)"/><text x="811.00" y="414.50"></text></g><g><title>unicode_eq (python3.7) (2 samples, 0.48%)</title><rect x="819" y="420" width="6" height="15" fill="rgb(219,121,27)"/><text x="822.00" y="430.50"></text></g><g><title>0x7f69b0a72d21 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="822" y="436" width="3" height="15" fill="rgb(230,182,9)"/><text x="825.00" y="446.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.24%)</title><rect x="825" y="356" width="3" height="15" fill="rgb(233,210,10)"/><text x="828.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.24%)</title><rect x="825" y="372" width="3" height="15" fill="rgb(213,171,14)"/><text x="828.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.24%)</title><rect x="825" y="388" width="3" height="15" fill="rgb(213,2,25)"/><text x="828.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.24%)</title><rect x="825" y="404" width="3" height="15" fill="rgb(218,171,9)"/><text x="828.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.24%)</title><rect x="825" y="420" width="3" height="15" fill="rgb(250,141,49)"/><text x="828.00" y="430.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.24%)</title><rect x="828" y="372" width="2" height="15" fill="rgb(236,142,44)"/><text x="831.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.24%)</title><rect x="830" y="372" width="3" height="15" fill="rgb(227,171,2)"/><text x="833.00" y="382.50"></text></g><g><title>prepare_ufunc_output (ufunc_object.c) (1 samples, 0.24%)</title><rect x="830" y="388" width="3" height="15" fill="rgb(234,155,4)"/><text x="833.00" y="398.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (4 samples, 0.97%)</title><rect x="833" y="372" width="12" height="15" fill="rgb(244,155,34)"/><text x="836.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.24%)</title><rect x="842" y="388" width="3" height="15" fill="rgb(221,186,12)"/><text x="845.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.24%)</title><rect x="842" y="404" width="3" height="15" fill="rgb(222,53,5)"/><text x="845.00" y="414.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.24%)</title><rect x="842" y="420" width="3" height="15" fill="rgb(223,46,45)"/><text x="845.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.69%)</title><rect x="828" y="356" width="19" height="15" fill="rgb(235,12,47)"/><text x="831.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.24%)</title><rect x="845" y="372" width="2" height="15" fill="rgb(212,225,26)"/><text x="848.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.24%)</title><rect x="845" y="388" width="2" height="15" fill="rgb(206,91,35)"/><text x="848.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.24%)</title><rect x="845" y="404" width="2" height="15" fill="rgb(228,79,2)"/><text x="848.00" y="414.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (52 samples, 12.56%)</title><rect x="702" y="244" width="148" height="15" fill="rgb(240,67,32)"/><text x="705.00" y="254.50">clip (numpy/core/f..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (47 samples, 11.35%)</title><rect x="716" y="260" width="134" height="15" fill="rgb(236,63,27)"/><text x="719.00" y="270.50">_wrapfunc (numpy..</text></g><g><title>array_clip (methods.c) (47 samples, 11.35%)</title><rect x="716" y="276" width="134" height="15" fill="rgb(223,24,18)"/><text x="719.00" y="286.50">array_clip (meth..</text></g><g><title>forward_ndarray_method (methods.c) (47 samples, 11.35%)</title><rect x="716" y="292" width="134" height="15" fill="rgb(254,55,9)"/><text x="719.00" y="302.50">forward_ndarray_..</text></g><g><title>_clip (numpy/core/_methods.py) (47 samples, 11.35%)</title><rect x="716" y="308" width="134" height="15" fill="rgb(241,143,1)"/><text x="719.00" y="318.50">_clip (numpy/cor..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (26 samples, 6.28%)</title><rect x="776" y="324" width="74" height="15" fill="rgb(205,28,23)"/><text x="779.00" y="334.50">_clip_de..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 2.17%)</title><rect x="825" y="340" width="25" height="15" fill="rgb(220,20,51)"/><text x="828.00" y="350.50">u..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.24%)</title><rect x="847" y="356" width="3" height="15" fill="rgb(252,58,54)"/><text x="850.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.24%)</title><rect x="847" y="372" width="3" height="15" fill="rgb(218,99,12)"/><text x="850.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.24%)</title><rect x="847" y="388" width="3" height="15" fill="rgb(211,17,49)"/><text x="850.00" y="398.50"></text></g><g><title>relu (sklearn/neural_network/_base.py) (60 samples, 14.49%)</title><rect x="688" y="196" width="171" height="15" fill="rgb(247,27,37)"/><text x="691.00" y="206.50">relu (sklearn/neural_n..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (56 samples, 13.53%)</title><rect x="699" y="212" width="160" height="15" fill="rgb(237,122,19)"/><text x="702.00" y="222.50">clip (&lt;__array_funct..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (55 samples, 13.29%)</title><rect x="702" y="228" width="157" height="15" fill="rgb(251,166,49)"/><text x="705.00" y="238.50">array_implement_arra..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (3 samples, 0.72%)</title><rect x="850" y="244" width="9" height="15" fill="rgb(237,2,8)"/><text x="853.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (3 samples, 0.72%)</title><rect x="850" y="260" width="9" height="15" fill="rgb(210,73,44)"/><text x="853.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.72%)</title><rect x="850" y="276" width="9" height="15" fill="rgb(242,184,50)"/><text x="853.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 0.72%)</title><rect x="850" y="292" width="9" height="15" fill="rgb(220,180,52)"/><text x="853.00" y="302.50"></text></g><g><title>0x7f69b09aae50 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="856" y="308" width="3" height="15" fill="rgb(238,56,32)"/><text x="859.00" y="318.50"></text></g><g><title>0x3ff6840aac76c29e (?) (1 samples, 0.24%)</title><rect x="870" y="212" width="3" height="15" fill="rgb(215,215,12)"/><text x="873.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.24%)</title><rect x="870" y="228" width="3" height="15" fill="rgb(212,215,25)"/><text x="873.00" y="238.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (1 samples, 0.24%)</title><rect x="870" y="244" width="3" height="15" fill="rgb(211,9,3)"/><text x="873.00" y="254.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.24%)</title><rect x="870" y="260" width="3" height="15" fill="rgb(215,202,11)"/><text x="873.00" y="270.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.24%)</title><rect x="873" y="212" width="3" height="15" fill="rgb(229,214,7)"/><text x="876.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.24%)</title><rect x="890" y="260" width="3" height="15" fill="rgb(253,215,1)"/><text x="893.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (1 samples, 0.24%)</title><rect x="890" y="276" width="3" height="15" fill="rgb(220,220,43)"/><text x="893.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.24%)</title><rect x="890" y="292" width="3" height="15" fill="rgb(209,71,33)"/><text x="893.00" y="302.50"></text></g><g><title>dscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.24%)</title><rect x="890" y="308" width="3" height="15" fill="rgb(228,159,47)"/><text x="893.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.24%)</title><rect x="896" y="324" width="3" height="15" fill="rgb(241,61,46)"/><text x="899.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.24%)</title><rect x="896" y="340" width="3" height="15" fill="rgb(206,96,52)"/><text x="899.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (4 samples, 0.97%)</title><rect x="893" y="292" width="11" height="15" fill="rgb(231,49,2)"/><text x="896.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (4 samples, 0.97%)</title><rect x="893" y="308" width="11" height="15" fill="rgb(215,83,48)"/><text x="896.00" y="318.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (2 samples, 0.48%)</title><rect x="899" y="324" width="5" height="15" fill="rgb(243,129,49)"/><text x="902.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (6 samples, 1.45%)</title><rect x="893" y="276" width="17" height="15" fill="rgb(234,204,9)"/><text x="896.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.48%)</title><rect x="904" y="292" width="6" height="15" fill="rgb(234,130,45)"/><text x="907.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.24%)</title><rect x="907" y="308" width="3" height="15" fill="rgb(237,25,10)"/><text x="910.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.24%)</title><rect x="907" y="324" width="3" height="15" fill="rgb(227,62,40)"/><text x="910.00" y="334.50"></text></g><g><title>npyiter_check_op_axes (nditer_constr.c) (1 samples, 0.24%)</title><rect x="910" y="276" width="3" height="15" fill="rgb(244,209,51)"/><text x="913.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (8 samples, 1.93%)</title><rect x="893" y="260" width="23" height="15" fill="rgb(235,24,35)"/><text x="896.00" y="270.50">N..</text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.24%)</title><rect x="913" y="276" width="3" height="15" fill="rgb(230,18,23)"/><text x="916.00" y="286.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.24%)</title><rect x="916" y="260" width="3" height="15" fill="rgb(252,21,29)"/><text x="919.00" y="270.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c) (1 samples, 0.24%)</title><rect x="919" y="260" width="3" height="15" fill="rgb(228,104,29)"/><text x="922.00" y="270.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.24%)</title><rect x="919" y="276" width="3" height="15" fill="rgb(216,197,51)"/><text x="922.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.24%)</title><rect x="922" y="260" width="2" height="15" fill="rgb(232,133,24)"/><text x="925.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.24%)</title><rect x="922" y="276" width="2" height="15" fill="rgb(209,164,51)"/><text x="925.00" y="286.50"></text></g><g><title>_initialize_variable_parts (ufunc_object.c) (1 samples, 0.24%)</title><rect x="924" y="260" width="3" height="15" fill="rgb(241,110,16)"/><text x="927.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (25 samples, 6.04%)</title><rect x="859" y="196" width="71" height="15" fill="rgb(250,73,38)"/><text x="862.00" y="206.50">safe_spa..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (19 samples, 4.59%)</title><rect x="876" y="212" width="54" height="15" fill="rgb(231,132,28)"/><text x="879.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (19 samples, 4.59%)</title><rect x="876" y="228" width="54" height="15" fill="rgb(236,81,6)"/><text x="879.00" y="238.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (19 samples, 4.59%)</title><rect x="876" y="244" width="54" height="15" fill="rgb(226,32,39)"/><text x="879.00" y="254.50">PyUFu..</text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="927" y="260" width="3" height="15" fill="rgb(227,81,33)"/><text x="930.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.24%)</title><rect x="930" y="212" width="3" height="15" fill="rgb(241,131,33)"/><text x="933.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.24%)</title><rect x="933" y="228" width="3" height="15" fill="rgb(231,52,17)"/><text x="936.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.24%)</title><rect x="933" y="244" width="3" height="15" fill="rgb(229,20,47)"/><text x="936.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.24%)</title><rect x="936" y="228" width="3" height="15" fill="rgb(225,169,31)"/><text x="939.00" y="238.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.24%)</title><rect x="939" y="244" width="3" height="15" fill="rgb(247,43,12)"/><text x="942.00" y="254.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.24%)</title><rect x="942" y="276" width="2" height="15" fill="rgb(248,224,21)"/><text x="945.00" y="286.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.24%)</title><rect x="942" y="292" width="2" height="15" fill="rgb(214,173,28)"/><text x="945.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.48%)</title><rect x="942" y="260" width="5" height="15" fill="rgb(253,50,47)"/><text x="945.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.24%)</title><rect x="944" y="276" width="3" height="15" fill="rgb(243,188,46)"/><text x="947.00" y="286.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src) (1 samples, 0.24%)</title><rect x="944" y="292" width="3" height="15" fill="rgb(225,118,34)"/><text x="947.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.97%)</title><rect x="939" y="228" width="11" height="15" fill="rgb(241,75,32)"/><text x="942.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.72%)</title><rect x="942" y="244" width="8" height="15" fill="rgb(210,59,26)"/><text x="945.00" y="254.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c) (1 samples, 0.24%)</title><rect x="947" y="260" width="3" height="15" fill="rgb(223,8,18)"/><text x="950.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.69%)</title><rect x="933" y="212" width="20" height="15" fill="rgb(250,202,13)"/><text x="936.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.24%)</title><rect x="950" y="228" width="3" height="15" fill="rgb(206,1,6)"/><text x="953.00" y="238.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (114 samples, 27.54%)</title><rect x="631" y="180" width="325" height="15" fill="rgb(240,140,53)"/><text x="634.00" y="190.50">_forward_pass (sklearn/neural_network/_mult..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 2.17%)</title><rect x="930" y="196" width="26" height="15" fill="rgb(238,197,27)"/><text x="933.00" y="206.50">u..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.24%)</title><rect x="953" y="212" width="3" height="15" fill="rgb(231,52,47)"/><text x="956.00" y="222.50"></text></g><g><title>0x7f69b09aa730 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="956" y="196" width="3" height="15" fill="rgb(247,168,18)"/><text x="959.00" y="206.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.24%)</title><rect x="959" y="228" width="2" height="15" fill="rgb(226,44,34)"/><text x="962.00" y="238.50"></text></g><g><title>array_empty (multiarraymodule.c) (3 samples, 0.72%)</title><rect x="956" y="180" width="8" height="15" fill="rgb(232,34,2)"/><text x="959.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.48%)</title><rect x="959" y="196" width="5" height="15" fill="rgb(221,198,19)"/><text x="962.00" y="206.50"></text></g><g><title>PyArray_Empty (ctors.c) (2 samples, 0.48%)</title><rect x="959" y="212" width="5" height="15" fill="rgb(238,57,21)"/><text x="962.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.24%)</title><rect x="961" y="228" width="3" height="15" fill="rgb(239,100,47)"/><text x="964.00" y="238.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.24%)</title><rect x="961" y="244" width="3" height="15" fill="rgb(247,119,34)"/><text x="964.00" y="254.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.24%)</title><rect x="961" y="260" width="3" height="15" fill="rgb(233,2,47)"/><text x="964.00" y="270.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h) (1 samples, 0.24%)</title><rect x="961" y="276" width="3" height="15" fill="rgb(208,98,18)"/><text x="964.00" y="286.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.24%)</title><rect x="1004" y="196" width="3" height="15" fill="rgb(217,62,32)"/><text x="1007.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.48%)</title><rect x="1007" y="196" width="6" height="15" fill="rgb(254,222,7)"/><text x="1010.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (3 samples, 0.72%)</title><rect x="1013" y="196" width="8" height="15" fill="rgb(228,0,2)"/><text x="1016.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.24%)</title><rect x="1044" y="212" width="3" height="15" fill="rgb(254,112,3)"/><text x="1047.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (11 samples, 2.66%)</title><rect x="1021" y="196" width="32" height="15" fill="rgb(230,177,44)"/><text x="1024.00" y="206.50">_a..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="1047" y="212" width="6" height="15" fill="rgb(239,5,41)"/><text x="1050.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (8 samples, 1.93%)</title><rect x="1053" y="196" width="22" height="15" fill="rgb(242,57,1)"/><text x="1056.00" y="206.50">_..</text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.24%)</title><rect x="1073" y="212" width="2" height="15" fill="rgb(219,227,21)"/><text x="1076.00" y="222.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.24%)</title><rect x="1075" y="196" width="3" height="15" fill="rgb(237,103,18)"/><text x="1078.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.24%)</title><rect x="1078" y="212" width="3" height="15" fill="rgb(216,85,0)"/><text x="1081.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (3 samples, 0.72%)</title><rect x="1078" y="196" width="9" height="15" fill="rgb(232,116,17)"/><text x="1081.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 0.48%)</title><rect x="1081" y="212" width="6" height="15" fill="rgb(226,82,42)"/><text x="1084.00" y="222.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py) (170 samples, 41.06%)</title><rect x="611" y="164" width="484" height="15" fill="rgb(254,134,30)"/><text x="614.00" y="174.50">_predict (sklearn/neural_network/_multilayer_perceptron.py)</text></g><g><title>check_array (sklearn/utils/validation.py) (46 samples, 11.11%)</title><rect x="964" y="180" width="131" height="15" fill="rgb(205,225,9)"/><text x="967.00" y="190.50">check_array (skl..</text></g><g><title>simplefilter (warnings.py) (3 samples, 0.72%)</title><rect x="1087" y="196" width="8" height="15" fill="rgb(241,158,9)"/><text x="1090.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (3 samples, 0.72%)</title><rect x="1087" y="212" width="8" height="15" fill="rgb(241,53,41)"/><text x="1090.00" y="222.50"></text></g><g><title>array_ravel (methods.c) (1 samples, 0.24%)</title><rect x="1095" y="164" width="3" height="15" fill="rgb(239,42,16)"/><text x="1098.00" y="174.50"></text></g><g><title>PyArray_Ravel (shape.c) (1 samples, 0.24%)</title><rect x="1095" y="180" width="3" height="15" fill="rgb(234,155,41)"/><text x="1098.00" y="190.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.24%)</title><rect x="1095" y="196" width="3" height="15" fill="rgb(238,32,6)"/><text x="1098.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.24%)</title><rect x="1095" y="212" width="3" height="15" fill="rgb(214,166,45)"/><text x="1098.00" y="222.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.24%)</title><rect x="1095" y="228" width="3" height="15" fill="rgb(232,180,24)"/><text x="1098.00" y="238.50"></text></g><g><title>0x7f69b09b5120 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1147" y="196" width="3" height="15" fill="rgb(218,99,52)"/><text x="1150.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (6 samples, 1.45%)</title><rect x="1150" y="196" width="17" height="15" fill="rgb(215,115,19)"/><text x="1153.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (26 samples, 6.28%)</title><rect x="1110" y="180" width="74" height="15" fill="rgb(236,177,5)"/><text x="1113.00" y="190.50">&lt;listcom..</text></g><g><title>unicode_startswith (python3.7) (6 samples, 1.45%)</title><rect x="1167" y="196" width="17" height="15" fill="rgb(242,116,41)"/><text x="1170.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (203 samples, 49.03%)</title><rect x="608" y="132" width="579" height="15" fill="rgb(222,157,3)"/><text x="611.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py) (203 samples, 49.03%)</title><rect x="608" y="148" width="579" height="15" fill="rgb(213,23,48)"/><text x="611.00" y="158.50">predict (sklearn/neural_network/_multilayer_perceptron.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (31 samples, 7.49%)</title><rect x="1098" y="164" width="89" height="15" fill="rgb(252,177,17)"/><text x="1101.00" y="174.50">check_is_f..</text></g><g><title>isclass (inspect.py) (1 samples, 0.24%)</title><rect x="1184" y="180" width="3" height="15" fill="rgb(234,71,9)"/><text x="1187.00" y="190.50"></text></g><g><title>all (414 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(222,61,3)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_m_reg_1_50_12_float_.py) (414 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(250,182,51)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_MLPRegressor_default_m_reg_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_MLPRegressor_default_m_reg_1_50_12_float_.py) (205 samples, 49.52%)</title><rect x="605" y="68" width="585" height="15" fill="rgb(248,3,24)"/><text x="608.00" y="78.50">profile_skl (bench_MLPRegressor_default_m_reg_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1_50_12_float_.py) (205 samples, 49.52%)</title><rect x="605" y="84" width="585" height="15" fill="rgb(228,101,21)"/><text x="608.00" y="94.50">setup_profile (bench_MLPRegressor_default_m_reg_1_50_12_float_.py)</text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1_50_12_float_.py) (205 samples, 49.52%)</title><rect x="605" y="100" width="585" height="15" fill="rgb(221,112,48)"/><text x="608.00" y="110.50">profile (bench_MLPRegressor_default_m_reg_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (204 samples, 49.28%)</title><rect x="608" y="116" width="582" height="15" fill="rgb(231,168,5)"/><text x="611.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.24%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(247,73,21)"/><text x="1190.00" y="142.50"></text></g></g></svg>