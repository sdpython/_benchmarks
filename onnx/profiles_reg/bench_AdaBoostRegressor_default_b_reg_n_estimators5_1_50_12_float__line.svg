<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1846" onload="init(evt)" viewBox="0 0 1200 1846" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1846" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1829.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1829.00"> </text><g id="frames"><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.36%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(234,223,54)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.36%)</title><rect x="10" y="260" width="4" height="15" fill="rgb(242,209,53)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="10" y="276" width="4" height="15" fill="rgb(212,219,47)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(233,190,51)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="10" y="308" width="4" height="15" fill="rgb(205,41,1)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="10" y="324" width="4" height="15" fill="rgb(239,24,7)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="10" y="340" width="4" height="15" fill="rgb(214,101,45)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="10" y="356" width="4" height="15" fill="rgb(250,79,54)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:97) (1 samples, 0.36%)</title><rect x="10" y="372" width="4" height="15" fill="rgb(211,104,46)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.36%)</title><rect x="10" y="388" width="4" height="15" fill="rgb(222,129,8)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="10" y="404" width="4" height="15" fill="rgb(239,122,43)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="10" y="420" width="4" height="15" fill="rgb(233,15,14)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="10" y="436" width="4" height="15" fill="rgb(213,155,40)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="10" y="452" width="4" height="15" fill="rgb(230,203,33)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="10" y="468" width="4" height="15" fill="rgb(215,170,51)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="10" y="484" width="4" height="15" fill="rgb(228,3,49)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_add_newdocs.py:3663) (1 samples, 0.36%)</title><rect x="10" y="500" width="4" height="15" fill="rgb(216,35,13)"/><text x="13.00" y="510.50"></text></g><g><title>add_newdoc (numpy/core/function_base.py:466) (1 samples, 0.36%)</title><rect x="10" y="516" width="4" height="15" fill="rgb(242,180,16)"/><text x="13.00" y="526.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:1) (2 samples, 0.73%)</title><rect x="10" y="148" width="8" height="15" fill="rgb(228,66,10)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="10" y="164" width="8" height="15" fill="rgb(237,27,23)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="10" y="180" width="8" height="15" fill="rgb(207,209,44)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="10" y="196" width="8" height="15" fill="rgb(251,112,27)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="10" y="212" width="8" height="15" fill="rgb(247,5,49)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="10" y="228" width="8" height="15" fill="rgb(211,83,40)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:187) (1 samples, 0.36%)</title><rect x="14" y="244" width="4" height="15" fill="rgb(247,6,6)"/><text x="17.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="14" y="260" width="4" height="15" fill="rgb(205,49,19)"/><text x="17.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="14" y="276" width="4" height="15" fill="rgb(209,7,53)"/><text x="17.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="14" y="292" width="4" height="15" fill="rgb(226,181,33)"/><text x="17.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="14" y="308" width="4" height="15" fill="rgb(238,180,38)"/><text x="17.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="14" y="324" width="4" height="15" fill="rgb(239,77,27)"/><text x="17.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py:12) (1 samples, 0.36%)</title><rect x="14" y="340" width="4" height="15" fill="rgb(247,141,33)"/><text x="17.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="14" y="356" width="4" height="15" fill="rgb(252,162,33)"/><text x="17.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="14" y="372" width="4" height="15" fill="rgb(241,171,49)"/><text x="17.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="14" y="388" width="4" height="15" fill="rgb(247,170,0)"/><text x="17.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.36%)</title><rect x="14" y="404" width="4" height="15" fill="rgb(236,197,33)"/><text x="17.00" y="414.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.36%)</title><rect x="14" y="420" width="4" height="15" fill="rgb(247,52,16)"/><text x="17.00" y="430.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.36%)</title><rect x="14" y="436" width="4" height="15" fill="rgb(236,126,13)"/><text x="17.00" y="446.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.36%)</title><rect x="18" y="852" width="4" height="15" fill="rgb(250,43,18)"/><text x="21.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.36%)</title><rect x="18" y="868" width="4" height="15" fill="rgb(240,80,2)"/><text x="21.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.36%)</title><rect x="18" y="884" width="4" height="15" fill="rgb(206,135,20)"/><text x="21.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.36%)</title><rect x="18" y="900" width="4" height="15" fill="rgb(208,120,38)"/><text x="21.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.36%)</title><rect x="18" y="916" width="4" height="15" fill="rgb(207,72,6)"/><text x="21.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.36%)</title><rect x="18" y="932" width="4" height="15" fill="rgb(210,116,48)"/><text x="21.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.36%)</title><rect x="18" y="948" width="4" height="15" fill="rgb(205,148,16)"/><text x="21.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.36%)</title><rect x="18" y="964" width="4" height="15" fill="rgb(206,205,11)"/><text x="21.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.36%)</title><rect x="18" y="980" width="4" height="15" fill="rgb(208,100,31)"/><text x="21.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:220) (1 samples, 0.36%)</title><rect x="18" y="996" width="4" height="15" fill="rgb(206,78,12)"/><text x="21.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:2) (2 samples, 0.73%)</title><rect x="18" y="148" width="9" height="15" fill="rgb(231,180,7)"/><text x="21.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="18" y="164" width="9" height="15" fill="rgb(241,143,41)"/><text x="21.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.73%)</title><rect x="18" y="180" width="9" height="15" fill="rgb(206,160,41)"/><text x="21.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="18" y="196" width="9" height="15" fill="rgb(243,95,22)"/><text x="21.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="18" y="212" width="9" height="15" fill="rgb(236,98,7)"/><text x="21.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="18" y="228" width="9" height="15" fill="rgb(238,192,39)"/><text x="21.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="18" y="244" width="9" height="15" fill="rgb(250,132,19)"/><text x="21.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="18" y="260" width="9" height="15" fill="rgb(252,15,7)"/><text x="21.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="18" y="276" width="9" height="15" fill="rgb(240,123,1)"/><text x="21.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.73%)</title><rect x="18" y="292" width="9" height="15" fill="rgb(214,228,46)"/><text x="21.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="18" y="308" width="9" height="15" fill="rgb(215,76,50)"/><text x="21.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="18" y="324" width="9" height="15" fill="rgb(207,88,25)"/><text x="21.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="18" y="340" width="9" height="15" fill="rgb(252,154,38)"/><text x="21.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="18" y="356" width="9" height="15" fill="rgb(248,212,41)"/><text x="21.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="18" y="372" width="9" height="15" fill="rgb(220,38,31)"/><text x="21.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.73%)</title><rect x="18" y="388" width="9" height="15" fill="rgb(252,150,27)"/><text x="21.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="18" y="404" width="9" height="15" fill="rgb(205,23,43)"/><text x="21.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="18" y="420" width="9" height="15" fill="rgb(254,97,33)"/><text x="21.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="18" y="436" width="9" height="15" fill="rgb(250,138,17)"/><text x="21.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="18" y="452" width="9" height="15" fill="rgb(236,60,7)"/><text x="21.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="18" y="468" width="9" height="15" fill="rgb(234,101,5)"/><text x="21.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.73%)</title><rect x="18" y="484" width="9" height="15" fill="rgb(217,114,36)"/><text x="21.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="18" y="500" width="9" height="15" fill="rgb(246,196,37)"/><text x="21.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="18" y="516" width="9" height="15" fill="rgb(221,91,4)"/><text x="21.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="18" y="532" width="9" height="15" fill="rgb(249,33,17)"/><text x="21.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="18" y="548" width="9" height="15" fill="rgb(248,196,8)"/><text x="21.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="18" y="564" width="9" height="15" fill="rgb(222,145,32)"/><text x="21.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.73%)</title><rect x="18" y="580" width="9" height="15" fill="rgb(211,164,24)"/><text x="21.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="18" y="596" width="9" height="15" fill="rgb(223,117,48)"/><text x="21.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.73%)</title><rect x="18" y="612" width="9" height="15" fill="rgb(244,118,8)"/><text x="21.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="18" y="628" width="9" height="15" fill="rgb(219,77,52)"/><text x="21.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="18" y="644" width="9" height="15" fill="rgb(226,7,53)"/><text x="21.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="18" y="660" width="9" height="15" fill="rgb(213,196,35)"/><text x="21.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="18" y="676" width="9" height="15" fill="rgb(209,77,52)"/><text x="21.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="18" y="692" width="9" height="15" fill="rgb(212,17,30)"/><text x="21.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="18" y="708" width="9" height="15" fill="rgb(228,76,32)"/><text x="21.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.73%)</title><rect x="18" y="724" width="9" height="15" fill="rgb(254,119,33)"/><text x="21.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="18" y="740" width="9" height="15" fill="rgb(231,218,26)"/><text x="21.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="18" y="756" width="9" height="15" fill="rgb(242,38,39)"/><text x="21.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="18" y="772" width="9" height="15" fill="rgb(243,158,45)"/><text x="21.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="18" y="788" width="9" height="15" fill="rgb(238,43,16)"/><text x="21.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="18" y="804" width="9" height="15" fill="rgb(246,225,25)"/><text x="21.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.73%)</title><rect x="18" y="820" width="9" height="15" fill="rgb(213,72,16)"/><text x="21.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.73%)</title><rect x="18" y="836" width="9" height="15" fill="rgb(218,156,11)"/><text x="21.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.36%)</title><rect x="22" y="852" width="5" height="15" fill="rgb(238,139,41)"/><text x="25.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.36%)</title><rect x="22" y="868" width="5" height="15" fill="rgb(235,66,0)"/><text x="25.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.36%)</title><rect x="22" y="884" width="5" height="15" fill="rgb(235,169,17)"/><text x="25.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.36%)</title><rect x="22" y="900" width="5" height="15" fill="rgb(219,10,28)"/><text x="25.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.36%)</title><rect x="22" y="916" width="5" height="15" fill="rgb(206,108,38)"/><text x="25.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.36%)</title><rect x="22" y="932" width="5" height="15" fill="rgb(222,109,6)"/><text x="25.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.36%)</title><rect x="22" y="948" width="5" height="15" fill="rgb(245,189,7)"/><text x="25.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1388) (1 samples, 0.36%)</title><rect x="22" y="964" width="5" height="15" fill="rgb(214,192,18)"/><text x="25.00" y="974.50"></text></g><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;:102) (1 samples, 0.36%)</title><rect x="22" y="980" width="5" height="15" fill="rgb(228,59,4)"/><text x="25.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.36%)</title><rect x="22" y="996" width="5" height="15" fill="rgb(235,113,48)"/><text x="25.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.36%)</title><rect x="22" y="1012" width="5" height="15" fill="rgb(211,91,10)"/><text x="25.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.36%)</title><rect x="22" y="1028" width="5" height="15" fill="rgb(211,62,35)"/><text x="25.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.36%)</title><rect x="22" y="1044" width="5" height="15" fill="rgb(207,168,50)"/><text x="25.00" y="1054.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (1 samples, 0.36%)</title><rect x="27" y="772" width="4" height="15" fill="rgb(216,3,49)"/><text x="30.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="27" y="788" width="4" height="15" fill="rgb(243,208,2)"/><text x="30.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="27" y="804" width="4" height="15" fill="rgb(242,177,52)"/><text x="30.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="27" y="820" width="4" height="15" fill="rgb(239,217,13)"/><text x="30.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="27" y="836" width="4" height="15" fill="rgb(207,182,12)"/><text x="30.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="27" y="852" width="4" height="15" fill="rgb(245,93,36)"/><text x="30.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py:641) (1 samples, 0.36%)</title><rect x="27" y="868" width="4" height="15" fill="rgb(224,149,31)"/><text x="30.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="27" y="884" width="4" height="15" fill="rgb(243,18,49)"/><text x="30.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="27" y="900" width="4" height="15" fill="rgb(244,2,4)"/><text x="30.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.36%)</title><rect x="27" y="916" width="4" height="15" fill="rgb(238,20,54)"/><text x="30.00" y="926.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.36%)</title><rect x="27" y="932" width="4" height="15" fill="rgb(237,93,19)"/><text x="30.00" y="942.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.36%)</title><rect x="27" y="948" width="4" height="15" fill="rgb(251,193,27)"/><text x="30.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="27" y="964" width="4" height="15" fill="rgb(251,136,43)"/><text x="30.00" y="974.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.36%)</title><rect x="27" y="980" width="4" height="15" fill="rgb(216,120,52)"/><text x="30.00" y="990.50"></text></g><g><title>0x7f75fbaa3995 (libdl-2.29.so) (1 samples, 0.36%)</title><rect x="27" y="996" width="4" height="15" fill="rgb(248,3,40)"/><text x="30.00" y="1006.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.36%)</title><rect x="27" y="1012" width="4" height="15" fill="rgb(220,165,28)"/><text x="30.00" y="1022.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.36%)</title><rect x="27" y="1028" width="4" height="15" fill="rgb(252,199,17)"/><text x="30.00" y="1038.50"></text></g><g><title>0x7f75fbaa3258 (libdl-2.29.so) (1 samples, 0.36%)</title><rect x="27" y="1044" width="4" height="15" fill="rgb(210,195,37)"/><text x="30.00" y="1054.50"></text></g><g><title>0x7f75fbaf0d7a (ld-2.29.so) (1 samples, 0.36%)</title><rect x="27" y="1060" width="4" height="15" fill="rgb(205,115,41)"/><text x="30.00" y="1070.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.36%)</title><rect x="27" y="1076" width="4" height="15" fill="rgb(224,59,4)"/><text x="30.00" y="1086.50"></text></g><g><title>0x7f75fbaf1345 (ld-2.29.so) (1 samples, 0.36%)</title><rect x="27" y="1092" width="4" height="15" fill="rgb(246,160,16)"/><text x="30.00" y="1102.50"></text></g><g><title>0x7f75fbaea043 (ld-2.29.so) (1 samples, 0.36%)</title><rect x="27" y="1108" width="4" height="15" fill="rgb(220,32,25)"/><text x="30.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.36%)</title><rect x="31" y="900" width="4" height="15" fill="rgb(208,208,9)"/><text x="34.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="31" y="916" width="4" height="15" fill="rgb(239,225,33)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="31" y="932" width="4" height="15" fill="rgb(208,187,41)"/><text x="34.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="31" y="948" width="4" height="15" fill="rgb(214,223,13)"/><text x="34.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="31" y="964" width="4" height="15" fill="rgb(252,224,2)"/><text x="34.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="31" y="980" width="4" height="15" fill="rgb(233,79,17)"/><text x="34.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.36%)</title><rect x="31" y="996" width="4" height="15" fill="rgb(225,97,50)"/><text x="34.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.36%)</title><rect x="31" y="1012" width="4" height="15" fill="rgb(246,94,40)"/><text x="34.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="31" y="1028" width="4" height="15" fill="rgb(221,42,16)"/><text x="34.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="31" y="1044" width="4" height="15" fill="rgb(253,114,18)"/><text x="34.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="31" y="1060" width="4" height="15" fill="rgb(206,113,54)"/><text x="34.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="31" y="1076" width="4" height="15" fill="rgb(210,223,18)"/><text x="34.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="31" y="1092" width="4" height="15" fill="rgb(232,25,21)"/><text x="34.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="31" y="1108" width="4" height="15" fill="rgb(219,0,48)"/><text x="34.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:391) (1 samples, 0.36%)</title><rect x="31" y="1124" width="4" height="15" fill="rgb(250,139,22)"/><text x="34.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="31" y="1140" width="4" height="15" fill="rgb(237,45,0)"/><text x="34.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="31" y="1156" width="4" height="15" fill="rgb(205,130,34)"/><text x="34.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="31" y="1172" width="4" height="15" fill="rgb(218,53,27)"/><text x="34.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="31" y="1188" width="4" height="15" fill="rgb(213,58,40)"/><text x="34.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="31" y="1204" width="4" height="15" fill="rgb(217,110,51)"/><text x="34.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py:30) (1 samples, 0.36%)</title><rect x="31" y="1220" width="4" height="15" fill="rgb(246,31,41)"/><text x="34.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="31" y="1236" width="4" height="15" fill="rgb(210,101,43)"/><text x="34.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="31" y="1252" width="4" height="15" fill="rgb(243,57,47)"/><text x="34.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="31" y="1268" width="4" height="15" fill="rgb(206,25,35)"/><text x="34.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="31" y="1284" width="4" height="15" fill="rgb(221,36,40)"/><text x="34.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="31" y="1300" width="4" height="15" fill="rgb(205,189,31)"/><text x="34.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py:4) (1 samples, 0.36%)</title><rect x="31" y="1316" width="4" height="15" fill="rgb(228,81,38)"/><text x="34.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="31" y="1332" width="4" height="15" fill="rgb(250,85,20)"/><text x="34.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="31" y="1348" width="4" height="15" fill="rgb(242,6,9)"/><text x="34.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="31" y="1364" width="4" height="15" fill="rgb(216,120,40)"/><text x="34.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="31" y="1380" width="4" height="15" fill="rgb(206,57,16)"/><text x="34.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="31" y="1396" width="4" height="15" fill="rgb(233,148,14)"/><text x="34.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py:4) (1 samples, 0.36%)</title><rect x="31" y="1412" width="4" height="15" fill="rgb(206,140,20)"/><text x="34.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="31" y="1428" width="4" height="15" fill="rgb(224,208,20)"/><text x="34.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="31" y="1444" width="4" height="15" fill="rgb(246,63,14)"/><text x="34.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="31" y="1460" width="4" height="15" fill="rgb(252,203,9)"/><text x="34.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="31" y="1476" width="4" height="15" fill="rgb(240,162,10)"/><text x="34.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="31" y="1492" width="4" height="15" fill="rgb(228,49,34)"/><text x="34.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py:113) (1 samples, 0.36%)</title><rect x="31" y="1508" width="4" height="15" fill="rgb(239,78,46)"/><text x="34.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="31" y="1524" width="4" height="15" fill="rgb(219,133,45)"/><text x="34.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="31" y="1540" width="4" height="15" fill="rgb(206,168,10)"/><text x="34.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="31" y="1556" width="4" height="15" fill="rgb(219,153,10)"/><text x="34.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="31" y="1572" width="4" height="15" fill="rgb(239,214,34)"/><text x="34.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="31" y="1588" width="4" height="15" fill="rgb(253,196,4)"/><text x="34.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/isolve/__init__.py:6) (1 samples, 0.36%)</title><rect x="31" y="1604" width="4" height="15" fill="rgb(236,58,16)"/><text x="34.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="31" y="1620" width="4" height="15" fill="rgb(219,66,31)"/><text x="34.00" y="1630.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="31" y="1636" width="4" height="15" fill="rgb(253,163,31)"/><text x="34.00" y="1646.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="31" y="1652" width="4" height="15" fill="rgb(248,185,3)"/><text x="34.00" y="1662.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="31" y="1668" width="4" height="15" fill="rgb(232,81,31)"/><text x="34.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="31" y="1684" width="4" height="15" fill="rgb(244,50,0)"/><text x="34.00" y="1694.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/isolve/iterative.py:419) (1 samples, 0.36%)</title><rect x="31" y="1700" width="4" height="15" fill="rgb(226,36,54)"/><text x="34.00" y="1710.50"></text></g><g><title>decorator (scipy/_lib/_threadsafety.py:59) (1 samples, 0.36%)</title><rect x="31" y="1716" width="4" height="15" fill="rgb(254,214,33)"/><text x="34.00" y="1726.50"></text></g><g><title>decorate (scipy/_lib/_threadsafety.py:47) (1 samples, 0.36%)</title><rect x="31" y="1732" width="4" height="15" fill="rgb(247,142,48)"/><text x="34.00" y="1742.50"></text></g><g><title>decorate (scipy/_lib/decorator.py:234) (1 samples, 0.36%)</title><rect x="31" y="1748" width="4" height="15" fill="rgb(254,141,25)"/><text x="34.00" y="1758.50"></text></g><g><title>create (scipy/_lib/decorator.py:219) (1 samples, 0.36%)</title><rect x="31" y="1764" width="4" height="15" fill="rgb(248,129,24)"/><text x="34.00" y="1774.50"></text></g><g><title>__init__ (scipy/_lib/decorator.py:106) (1 samples, 0.36%)</title><rect x="31" y="1780" width="4" height="15" fill="rgb(228,220,12)"/><text x="34.00" y="1790.50"></text></g><g><title>getfullargspec (inspect.py:1147) (1 samples, 0.36%)</title><rect x="31" y="1796" width="4" height="15" fill="rgb(212,212,3)"/><text x="34.00" y="1806.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:4) (3 samples, 1.09%)</title><rect x="27" y="148" width="13" height="15" fill="rgb(208,97,33)"/><text x="30.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="27" y="164" width="13" height="15" fill="rgb(245,120,16)"/><text x="30.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.09%)</title><rect x="27" y="180" width="13" height="15" fill="rgb(252,12,17)"/><text x="30.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="27" y="196" width="13" height="15" fill="rgb(235,206,13)"/><text x="30.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="27" y="212" width="13" height="15" fill="rgb(206,228,25)"/><text x="30.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="27" y="228" width="13" height="15" fill="rgb(252,148,21)"/><text x="30.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="27" y="244" width="13" height="15" fill="rgb(238,216,49)"/><text x="30.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="27" y="260" width="13" height="15" fill="rgb(220,87,29)"/><text x="30.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="27" y="276" width="13" height="15" fill="rgb(251,133,1)"/><text x="30.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 1.09%)</title><rect x="27" y="292" width="13" height="15" fill="rgb(252,210,29)"/><text x="30.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="27" y="308" width="13" height="15" fill="rgb(237,189,8)"/><text x="30.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="27" y="324" width="13" height="15" fill="rgb(250,39,52)"/><text x="30.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="27" y="340" width="13" height="15" fill="rgb(241,28,4)"/><text x="30.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="27" y="356" width="13" height="15" fill="rgb(219,5,52)"/><text x="30.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="27" y="372" width="13" height="15" fill="rgb(252,99,30)"/><text x="30.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 1.09%)</title><rect x="27" y="388" width="13" height="15" fill="rgb(246,151,51)"/><text x="30.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="27" y="404" width="13" height="15" fill="rgb(239,113,39)"/><text x="30.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="27" y="420" width="13" height="15" fill="rgb(232,122,34)"/><text x="30.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="27" y="436" width="13" height="15" fill="rgb(214,101,46)"/><text x="30.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="27" y="452" width="13" height="15" fill="rgb(223,100,19)"/><text x="30.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="27" y="468" width="13" height="15" fill="rgb(253,154,28)"/><text x="30.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (3 samples, 1.09%)</title><rect x="27" y="484" width="13" height="15" fill="rgb(229,225,11)"/><text x="30.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="27" y="500" width="13" height="15" fill="rgb(233,7,20)"/><text x="30.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="27" y="516" width="13" height="15" fill="rgb(246,192,17)"/><text x="30.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="27" y="532" width="13" height="15" fill="rgb(228,97,54)"/><text x="30.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="27" y="548" width="13" height="15" fill="rgb(235,197,39)"/><text x="30.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="27" y="564" width="13" height="15" fill="rgb(213,33,6)"/><text x="30.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (3 samples, 1.09%)</title><rect x="27" y="580" width="13" height="15" fill="rgb(231,81,24)"/><text x="30.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="27" y="596" width="13" height="15" fill="rgb(219,189,51)"/><text x="30.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="27" y="612" width="13" height="15" fill="rgb(230,219,28)"/><text x="30.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="27" y="628" width="13" height="15" fill="rgb(227,142,43)"/><text x="30.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="27" y="644" width="13" height="15" fill="rgb(214,129,4)"/><text x="30.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="27" y="660" width="13" height="15" fill="rgb(240,48,17)"/><text x="30.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (3 samples, 1.09%)</title><rect x="27" y="676" width="13" height="15" fill="rgb(209,39,32)"/><text x="30.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="27" y="692" width="13" height="15" fill="rgb(246,56,30)"/><text x="30.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="27" y="708" width="13" height="15" fill="rgb(233,178,27)"/><text x="30.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="27" y="724" width="13" height="15" fill="rgb(242,127,26)"/><text x="30.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="27" y="740" width="13" height="15" fill="rgb(230,107,40)"/><text x="30.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="27" y="756" width="13" height="15" fill="rgb(234,117,8)"/><text x="30.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.73%)</title><rect x="31" y="772" width="9" height="15" fill="rgb(211,84,29)"/><text x="34.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.73%)</title><rect x="31" y="788" width="9" height="15" fill="rgb(216,53,14)"/><text x="34.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="31" y="804" width="9" height="15" fill="rgb(254,157,16)"/><text x="34.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="31" y="820" width="9" height="15" fill="rgb(250,113,34)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="31" y="836" width="9" height="15" fill="rgb(206,13,6)"/><text x="34.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="31" y="852" width="9" height="15" fill="rgb(253,213,7)"/><text x="34.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="31" y="868" width="9" height="15" fill="rgb(236,119,27)"/><text x="34.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="31" y="884" width="9" height="15" fill="rgb(245,117,24)"/><text x="34.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.36%)</title><rect x="35" y="900" width="5" height="15" fill="rgb(222,202,54)"/><text x="38.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.36%)</title><rect x="35" y="916" width="5" height="15" fill="rgb(205,39,25)"/><text x="38.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="35" y="932" width="5" height="15" fill="rgb(244,163,4)"/><text x="38.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="35" y="948" width="5" height="15" fill="rgb(217,122,45)"/><text x="38.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="35" y="964" width="5" height="15" fill="rgb(219,109,17)"/><text x="38.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="35" y="980" width="5" height="15" fill="rgb(229,8,50)"/><text x="38.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="35" y="996" width="5" height="15" fill="rgb(246,218,25)"/><text x="38.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="35" y="1012" width="5" height="15" fill="rgb(227,197,7)"/><text x="38.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:1480) (1 samples, 0.36%)</title><rect x="35" y="1028" width="5" height="15" fill="rgb(254,38,24)"/><text x="38.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.36%)</title><rect x="35" y="1044" width="5" height="15" fill="rgb(221,169,37)"/><text x="38.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:657) (1 samples, 0.36%)</title><rect x="35" y="1060" width="5" height="15" fill="rgb(250,83,16)"/><text x="38.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py:291) (1 samples, 0.36%)</title><rect x="35" y="1076" width="5" height="15" fill="rgb(226,58,52)"/><text x="38.00" y="1086.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.36%)</title><rect x="35" y="1092" width="5" height="15" fill="rgb(246,4,16)"/><text x="38.00" y="1102.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.36%)</title><rect x="35" y="1108" width="5" height="15" fill="rgb(236,203,45)"/><text x="38.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py:2217) (1 samples, 0.36%)</title><rect x="35" y="1124" width="5" height="15" fill="rgb(212,115,46)"/><text x="38.00" y="1134.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.36%)</title><rect x="35" y="1140" width="5" height="15" fill="rgb(228,46,51)"/><text x="38.00" y="1150.50"></text></g><g><title>_signature_from_function (inspect.py:2154) (1 samples, 0.36%)</title><rect x="35" y="1156" width="5" height="15" fill="rgb(207,4,19)"/><text x="38.00" y="1166.50"></text></g><g><title>__init__ (inspect.py:2469) (1 samples, 0.36%)</title><rect x="35" y="1172" width="5" height="15" fill="rgb(224,218,26)"/><text x="38.00" y="1182.50"></text></g><g><title>__call__ (enum.py:309) (1 samples, 0.36%)</title><rect x="35" y="1188" width="5" height="15" fill="rgb(207,201,23)"/><text x="38.00" y="1198.50"></text></g><g><title>__new__ (enum.py:529) (1 samples, 0.36%)</title><rect x="35" y="1204" width="5" height="15" fill="rgb(224,92,41)"/><text x="38.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.36%)</title><rect x="40" y="1108" width="4" height="15" fill="rgb(237,65,15)"/><text x="43.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="40" y="1124" width="4" height="15" fill="rgb(253,137,42)"/><text x="43.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="40" y="1140" width="4" height="15" fill="rgb(229,93,45)"/><text x="43.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="40" y="1156" width="4" height="15" fill="rgb(239,82,23)"/><text x="43.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="40" y="1172" width="4" height="15" fill="rgb(243,18,17)"/><text x="43.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="40" y="1188" width="4" height="15" fill="rgb(238,130,42)"/><text x="43.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.36%)</title><rect x="40" y="1204" width="4" height="15" fill="rgb(229,219,6)"/><text x="43.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="40" y="1220" width="4" height="15" fill="rgb(213,221,54)"/><text x="43.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="40" y="1236" width="4" height="15" fill="rgb(220,221,26)"/><text x="43.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="40" y="1252" width="4" height="15" fill="rgb(229,189,52)"/><text x="43.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="40" y="1268" width="4" height="15" fill="rgb(247,150,38)"/><text x="43.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="40" y="1284" width="4" height="15" fill="rgb(207,229,25)"/><text x="43.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.36%)</title><rect x="40" y="1300" width="4" height="15" fill="rgb(245,71,25)"/><text x="43.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.36%)</title><rect x="40" y="1316" width="4" height="15" fill="rgb(214,102,44)"/><text x="43.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.36%)</title><rect x="40" y="1332" width="4" height="15" fill="rgb(238,105,10)"/><text x="43.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.36%)</title><rect x="40" y="1348" width="4" height="15" fill="rgb(236,110,29)"/><text x="43.00" y="1358.50"></text></g><g><title>getblock (inspect.py:941) (1 samples, 0.36%)</title><rect x="40" y="1364" width="4" height="15" fill="rgb(213,100,30)"/><text x="43.00" y="1374.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.36%)</title><rect x="44" y="1572" width="4" height="15" fill="rgb(205,102,16)"/><text x="47.00" y="1582.50"></text></g><g><title>0x7f75fb81d028 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="44" y="1588" width="4" height="15" fill="rgb(246,79,22)"/><text x="47.00" y="1598.50"></text></g><g><title>0x7f75fb81abc6 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="44" y="1604" width="4" height="15" fill="rgb(231,4,0)"/><text x="47.00" y="1614.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:4) (10 samples, 3.65%)</title><rect x="10" y="52" width="43" height="15" fill="rgb(222,103,37)"/><text x="13.00" y="62.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.65%)</title><rect x="10" y="68" width="43" height="15" fill="rgb(240,113,35)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.65%)</title><rect x="10" y="84" width="43" height="15" fill="rgb(242,206,40)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.65%)</title><rect x="10" y="100" width="43" height="15" fill="rgb(225,25,35)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.65%)</title><rect x="10" y="116" width="43" height="15" fill="rgb(224,139,22)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.65%)</title><rect x="10" y="132" width="43" height="15" fill="rgb(228,12,46)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:7) (3 samples, 1.09%)</title><rect x="40" y="148" width="13" height="15" fill="rgb(208,36,16)"/><text x="43.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="40" y="164" width="13" height="15" fill="rgb(252,208,44)"/><text x="43.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="40" y="180" width="13" height="15" fill="rgb(252,165,52)"/><text x="43.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="40" y="196" width="13" height="15" fill="rgb(231,188,5)"/><text x="43.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="40" y="212" width="13" height="15" fill="rgb(250,61,10)"/><text x="43.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="40" y="228" width="13" height="15" fill="rgb(212,224,8)"/><text x="43.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (3 samples, 1.09%)</title><rect x="40" y="244" width="13" height="15" fill="rgb(249,144,53)"/><text x="43.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="40" y="260" width="13" height="15" fill="rgb(234,94,3)"/><text x="43.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="40" y="276" width="13" height="15" fill="rgb(224,160,33)"/><text x="43.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="40" y="292" width="13" height="15" fill="rgb(243,201,27)"/><text x="43.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="40" y="308" width="13" height="15" fill="rgb(246,191,22)"/><text x="43.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="40" y="324" width="13" height="15" fill="rgb(232,212,1)"/><text x="43.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 1.09%)</title><rect x="40" y="340" width="13" height="15" fill="rgb(230,135,16)"/><text x="43.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="40" y="356" width="13" height="15" fill="rgb(219,22,25)"/><text x="43.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="40" y="372" width="13" height="15" fill="rgb(206,199,14)"/><text x="43.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="40" y="388" width="13" height="15" fill="rgb(252,153,54)"/><text x="43.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="40" y="404" width="13" height="15" fill="rgb(220,172,14)"/><text x="43.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="40" y="420" width="13" height="15" fill="rgb(244,121,44)"/><text x="43.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 1.09%)</title><rect x="40" y="436" width="13" height="15" fill="rgb(242,45,41)"/><text x="43.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="40" y="452" width="13" height="15" fill="rgb(248,125,14)"/><text x="43.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.09%)</title><rect x="40" y="468" width="13" height="15" fill="rgb(221,77,39)"/><text x="43.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="40" y="484" width="13" height="15" fill="rgb(244,136,38)"/><text x="43.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="40" y="500" width="13" height="15" fill="rgb(228,93,2)"/><text x="43.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="40" y="516" width="13" height="15" fill="rgb(206,109,14)"/><text x="43.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="40" y="532" width="13" height="15" fill="rgb(206,207,18)"/><text x="43.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="40" y="548" width="13" height="15" fill="rgb(208,141,28)"/><text x="43.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="40" y="564" width="13" height="15" fill="rgb(248,227,44)"/><text x="43.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 1.09%)</title><rect x="40" y="580" width="13" height="15" fill="rgb(207,196,11)"/><text x="43.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="40" y="596" width="13" height="15" fill="rgb(232,100,31)"/><text x="43.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="40" y="612" width="13" height="15" fill="rgb(241,59,31)"/><text x="43.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="40" y="628" width="13" height="15" fill="rgb(216,188,22)"/><text x="43.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="40" y="644" width="13" height="15" fill="rgb(231,6,2)"/><text x="43.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="40" y="660" width="13" height="15" fill="rgb(218,151,40)"/><text x="43.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 1.09%)</title><rect x="40" y="676" width="13" height="15" fill="rgb(211,85,13)"/><text x="43.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="40" y="692" width="13" height="15" fill="rgb(236,107,21)"/><text x="43.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="40" y="708" width="13" height="15" fill="rgb(236,218,23)"/><text x="43.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="40" y="724" width="13" height="15" fill="rgb(227,203,25)"/><text x="43.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="40" y="740" width="13" height="15" fill="rgb(212,132,30)"/><text x="43.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="40" y="756" width="13" height="15" fill="rgb(210,48,26)"/><text x="43.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 1.09%)</title><rect x="40" y="772" width="13" height="15" fill="rgb(222,81,32)"/><text x="43.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="40" y="788" width="13" height="15" fill="rgb(219,59,2)"/><text x="43.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="40" y="804" width="13" height="15" fill="rgb(239,196,41)"/><text x="43.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="40" y="820" width="13" height="15" fill="rgb(209,213,10)"/><text x="43.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="40" y="836" width="13" height="15" fill="rgb(247,169,11)"/><text x="43.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="40" y="852" width="13" height="15" fill="rgb(239,205,29)"/><text x="43.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 1.09%)</title><rect x="40" y="868" width="13" height="15" fill="rgb(232,3,15)"/><text x="43.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="40" y="884" width="13" height="15" fill="rgb(207,164,29)"/><text x="43.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.09%)</title><rect x="40" y="900" width="13" height="15" fill="rgb(254,175,34)"/><text x="43.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="40" y="916" width="13" height="15" fill="rgb(222,33,40)"/><text x="43.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="40" y="932" width="13" height="15" fill="rgb(229,67,32)"/><text x="43.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="40" y="948" width="13" height="15" fill="rgb(234,118,23)"/><text x="43.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="40" y="964" width="13" height="15" fill="rgb(239,212,45)"/><text x="43.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="40" y="980" width="13" height="15" fill="rgb(235,109,50)"/><text x="43.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="40" y="996" width="13" height="15" fill="rgb(250,159,14)"/><text x="43.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 1.09%)</title><rect x="40" y="1012" width="13" height="15" fill="rgb(242,177,25)"/><text x="43.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="40" y="1028" width="13" height="15" fill="rgb(225,98,19)"/><text x="43.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="40" y="1044" width="13" height="15" fill="rgb(251,148,49)"/><text x="43.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="40" y="1060" width="13" height="15" fill="rgb(242,184,13)"/><text x="43.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="40" y="1076" width="13" height="15" fill="rgb(254,176,34)"/><text x="43.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="40" y="1092" width="13" height="15" fill="rgb(230,86,26)"/><text x="43.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.73%)</title><rect x="44" y="1108" width="9" height="15" fill="rgb(240,149,26)"/><text x="47.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.73%)</title><rect x="44" y="1124" width="9" height="15" fill="rgb(246,218,22)"/><text x="47.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="44" y="1140" width="9" height="15" fill="rgb(244,92,49)"/><text x="47.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="44" y="1156" width="9" height="15" fill="rgb(211,66,4)"/><text x="47.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="44" y="1172" width="9" height="15" fill="rgb(240,94,17)"/><text x="47.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="44" y="1188" width="9" height="15" fill="rgb(243,23,39)"/><text x="47.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="44" y="1204" width="9" height="15" fill="rgb(240,193,25)"/><text x="47.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="44" y="1220" width="9" height="15" fill="rgb(252,40,12)"/><text x="47.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.73%)</title><rect x="44" y="1236" width="9" height="15" fill="rgb(245,22,23)"/><text x="47.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.73%)</title><rect x="44" y="1252" width="9" height="15" fill="rgb(219,91,24)"/><text x="47.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="44" y="1268" width="9" height="15" fill="rgb(253,76,22)"/><text x="47.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="44" y="1284" width="9" height="15" fill="rgb(250,176,37)"/><text x="47.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="44" y="1300" width="9" height="15" fill="rgb(253,126,16)"/><text x="47.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="44" y="1316" width="9" height="15" fill="rgb(247,99,2)"/><text x="47.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="44" y="1332" width="9" height="15" fill="rgb(248,56,2)"/><text x="47.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="44" y="1348" width="9" height="15" fill="rgb(216,71,29)"/><text x="47.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.73%)</title><rect x="44" y="1364" width="9" height="15" fill="rgb(232,62,22)"/><text x="47.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="44" y="1380" width="9" height="15" fill="rgb(234,17,10)"/><text x="47.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="44" y="1396" width="9" height="15" fill="rgb(216,204,32)"/><text x="47.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="44" y="1412" width="9" height="15" fill="rgb(228,142,21)"/><text x="47.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="44" y="1428" width="9" height="15" fill="rgb(216,7,44)"/><text x="47.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="44" y="1444" width="9" height="15" fill="rgb(241,134,29)"/><text x="47.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.73%)</title><rect x="44" y="1460" width="9" height="15" fill="rgb(237,148,27)"/><text x="47.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.73%)</title><rect x="44" y="1476" width="9" height="15" fill="rgb(228,54,5)"/><text x="47.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.73%)</title><rect x="44" y="1492" width="9" height="15" fill="rgb(234,170,45)"/><text x="47.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.73%)</title><rect x="44" y="1508" width="9" height="15" fill="rgb(247,39,33)"/><text x="47.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.73%)</title><rect x="44" y="1524" width="9" height="15" fill="rgb(232,82,6)"/><text x="47.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.73%)</title><rect x="44" y="1540" width="9" height="15" fill="rgb(245,93,34)"/><text x="47.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.73%)</title><rect x="44" y="1556" width="9" height="15" fill="rgb(253,101,6)"/><text x="47.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:73) (1 samples, 0.36%)</title><rect x="48" y="1572" width="5" height="15" fill="rgb(206,93,15)"/><text x="51.00" y="1582.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.36%)</title><rect x="53" y="164" width="4" height="15" fill="rgb(234,191,24)"/><text x="56.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.36%)</title><rect x="53" y="180" width="4" height="15" fill="rgb(213,145,24)"/><text x="56.00" y="190.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1128) (2 samples, 0.73%)</title><rect x="53" y="148" width="8" height="15" fill="rgb(212,105,38)"/><text x="56.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.36%)</title><rect x="57" y="164" width="4" height="15" fill="rgb(238,60,49)"/><text x="60.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.36%)</title><rect x="57" y="180" width="4" height="15" fill="rgb(216,179,47)"/><text x="60.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.36%)</title><rect x="57" y="196" width="4" height="15" fill="rgb(251,221,27)"/><text x="60.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.36%)</title><rect x="61" y="180" width="4" height="15" fill="rgb(216,97,28)"/><text x="64.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.36%)</title><rect x="65" y="180" width="5" height="15" fill="rgb(218,119,4)"/><text x="68.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.36%)</title><rect x="70" y="196" width="4" height="15" fill="rgb(229,52,14)"/><text x="73.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.73%)</title><rect x="70" y="180" width="8" height="15" fill="rgb(240,219,5)"/><text x="73.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.36%)</title><rect x="74" y="196" width="4" height="15" fill="rgb(215,188,2)"/><text x="77.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (3 samples, 1.09%)</title><rect x="78" y="180" width="13" height="15" fill="rgb(211,172,20)"/><text x="81.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 1.09%)</title><rect x="78" y="196" width="13" height="15" fill="rgb(221,174,33)"/><text x="81.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.36%)</title><rect x="87" y="212" width="4" height="15" fill="rgb(249,193,47)"/><text x="90.00" y="222.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1129) (8 samples, 2.92%)</title><rect x="61" y="148" width="35" height="15" fill="rgb(243,106,19)"/><text x="64.00" y="158.50">pr..</text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (8 samples, 2.92%)</title><rect x="61" y="164" width="35" height="15" fill="rgb(216,203,28)"/><text x="64.00" y="174.50">_v..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.36%)</title><rect x="91" y="180" width="5" height="15" fill="rgb(231,115,2)"/><text x="94.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.36%)</title><rect x="91" y="196" width="5" height="15" fill="rgb(244,73,31)"/><text x="94.00" y="206.50"></text></g><g><title>0x7f75d525fd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="113" y="196" width="4" height="15" fill="rgb(218,114,7)"/><text x="116.00" y="206.50"></text></g><g><title>0x7f75d525efa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="113" y="212" width="4" height="15" fill="rgb(210,16,21)"/><text x="116.00" y="222.50"></text></g><g><title>0x7f75d526e540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="113" y="228" width="4" height="15" fill="rgb(215,133,40)"/><text x="116.00" y="238.50"></text></g><g><title>0x7f75d52432f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="113" y="244" width="4" height="15" fill="rgb(209,1,45)"/><text x="116.00" y="254.50"></text></g><g><title>0x7f75d5242530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="113" y="260" width="4" height="15" fill="rgb(224,2,47)"/><text x="116.00" y="270.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (1 samples, 0.36%)</title><rect x="113" y="276" width="4" height="15" fill="rgb(219,178,23)"/><text x="116.00" y="286.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.36%)</title><rect x="126" y="212" width="4" height="15" fill="rgb(245,34,10)"/><text x="129.00" y="222.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.36%)</title><rect x="126" y="228" width="4" height="15" fill="rgb(229,20,43)"/><text x="129.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:941) (1 samples, 0.36%)</title><rect x="130" y="212" width="4" height="15" fill="rgb(230,76,4)"/><text x="133.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.73%)</title><rect x="152" y="244" width="8" height="15" fill="rgb(214,90,6)"/><text x="155.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 2.19%)</title><rect x="139" y="228" width="26" height="15" fill="rgb(221,130,39)"/><text x="142.00" y="238.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.36%)</title><rect x="160" y="244" width="5" height="15" fill="rgb(241,31,48)"/><text x="163.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (12 samples, 4.38%)</title><rect x="117" y="196" width="52" height="15" fill="rgb(220,188,16)"/><text x="120.00" y="206.50">predi..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (8 samples, 2.92%)</title><rect x="134" y="212" width="35" height="15" fill="rgb(248,162,17)"/><text x="137.00" y="222.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.36%)</title><rect x="165" y="228" width="4" height="15" fill="rgb(213,26,13)"/><text x="168.00" y="238.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.36%)</title><rect x="165" y="244" width="4" height="15" fill="rgb(225,121,17)"/><text x="168.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.36%)</title><rect x="169" y="228" width="4" height="15" fill="rgb(223,211,32)"/><text x="172.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.73%)</title><rect x="173" y="228" width="9" height="15" fill="rgb(224,25,14)"/><text x="176.00" y="238.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.36%)</title><rect x="190" y="244" width="5" height="15" fill="rgb(234,59,16)"/><text x="193.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.36%)</title><rect x="195" y="244" width="4" height="15" fill="rgb(217,127,26)"/><text x="198.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (5 samples, 1.82%)</title><rect x="182" y="228" width="21" height="15" fill="rgb(240,190,16)"/><text x="185.00" y="238.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.36%)</title><rect x="199" y="244" width="4" height="15" fill="rgb(224,223,30)"/><text x="202.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.36%)</title><rect x="203" y="244" width="5" height="15" fill="rgb(208,216,1)"/><text x="206.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 1.09%)</title><rect x="208" y="260" width="13" height="15" fill="rgb(214,200,5)"/><text x="211.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.36%)</title><rect x="221" y="260" width="4" height="15" fill="rgb(227,74,32)"/><text x="224.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (7 samples, 2.55%)</title><rect x="203" y="228" width="30" height="15" fill="rgb(247,9,49)"/><text x="206.00" y="238.50">ch..</text></g><g><title>simplefilter (warnings.py:179) (6 samples, 2.19%)</title><rect x="208" y="244" width="25" height="15" fill="rgb(217,204,47)"/><text x="211.00" y="254.50">s..</text></g><g><title>_add_filter (warnings.py:189) (2 samples, 0.73%)</title><rect x="225" y="260" width="8" height="15" fill="rgb(222,69,24)"/><text x="228.00" y="270.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.36%)</title><rect x="233" y="244" width="5" height="15" fill="rgb(240,21,29)"/><text x="236.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (2 samples, 0.73%)</title><rect x="233" y="228" width="9" height="15" fill="rgb(251,134,11)"/><text x="236.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.36%)</title><rect x="238" y="244" width="4" height="15" fill="rgb(237,83,28)"/><text x="241.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1399) (1 samples, 0.36%)</title><rect x="238" y="260" width="4" height="15" fill="rgb(250,96,23)"/><text x="241.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.73%)</title><rect x="242" y="228" width="9" height="15" fill="rgb(253,166,14)"/><text x="245.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.73%)</title><rect x="242" y="244" width="9" height="15" fill="rgb(220,77,50)"/><text x="245.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.73%)</title><rect x="242" y="260" width="9" height="15" fill="rgb(208,57,40)"/><text x="245.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.73%)</title><rect x="242" y="276" width="9" height="15" fill="rgb(207,8,6)"/><text x="245.00" y="286.50"></text></g><g><title>__exit__ (warnings.py:496) (4 samples, 1.46%)</title><rect x="255" y="244" width="17" height="15" fill="rgb(211,167,40)"/><text x="258.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (6 samples, 2.19%)</title><rect x="251" y="228" width="26" height="15" fill="rgb(219,27,36)"/><text x="254.00" y="238.50">c..</text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.36%)</title><rect x="272" y="244" width="5" height="15" fill="rgb(251,84,47)"/><text x="275.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.36%)</title><rect x="277" y="228" width="4" height="15" fill="rgb(240,5,54)"/><text x="280.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.36%)</title><rect x="277" y="244" width="4" height="15" fill="rgb(233,211,8)"/><text x="280.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.36%)</title><rect x="294" y="260" width="4" height="15" fill="rgb(252,164,37)"/><text x="297.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.36%)</title><rect x="298" y="260" width="4" height="15" fill="rgb(206,91,13)"/><text x="301.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (5 samples, 1.82%)</title><rect x="285" y="244" width="22" height="15" fill="rgb(206,59,31)"/><text x="288.00" y="254.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.36%)</title><rect x="302" y="260" width="5" height="15" fill="rgb(244,126,29)"/><text x="305.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (7 samples, 2.55%)</title><rect x="281" y="228" width="30" height="15" fill="rgb(224,167,39)"/><text x="284.00" y="238.50">ch..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.36%)</title><rect x="307" y="244" width="4" height="15" fill="rgb(207,229,37)"/><text x="310.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.73%)</title><rect x="311" y="244" width="9" height="15" fill="rgb(216,21,2)"/><text x="314.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (2 samples, 0.73%)</title><rect x="320" y="244" width="8" height="15" fill="rgb(235,214,47)"/><text x="323.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.36%)</title><rect x="328" y="244" width="4" height="15" fill="rgb(232,44,2)"/><text x="331.00" y="254.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1180) (1 samples, 0.36%)</title><rect x="328" y="260" width="4" height="15" fill="rgb(231,32,48)"/><text x="331.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (44 samples, 16.06%)</title><rect x="169" y="212" width="189" height="15" fill="rgb(249,43,33)"/><text x="172.00" y="222.50">_validate_X_predict (skl..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (11 samples, 4.01%)</title><rect x="311" y="228" width="47" height="15" fill="rgb(238,115,4)"/><text x="314.00" y="238.50">chec..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (6 samples, 2.19%)</title><rect x="332" y="244" width="26" height="15" fill="rgb(231,68,10)"/><text x="335.00" y="254.50">_..</text></g><g><title>__instancecheck__ (abc.py:139) (4 samples, 1.46%)</title><rect x="341" y="260" width="17" height="15" fill="rgb(211,85,4)"/><text x="344.00" y="270.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.36%)</title><rect x="354" y="276" width="4" height="15" fill="rgb(213,21,14)"/><text x="357.00" y="286.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (1 samples, 0.36%)</title><rect x="358" y="212" width="5" height="15" fill="rgb(214,162,5)"/><text x="361.00" y="222.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (46 samples, 16.79%)</title><rect x="169" y="196" width="198" height="15" fill="rgb(224,120,44)"/><text x="172.00" y="206.50">predict (sklearn/tree/_cl..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (1 samples, 0.36%)</title><rect x="363" y="212" width="4" height="15" fill="rgb(252,113,47)"/><text x="366.00" y="222.50"></text></g><g><title>0x7f75d525fd2e (?) (1 samples, 0.36%)</title><rect x="371" y="212" width="5" height="15" fill="rgb(235,127,30)"/><text x="374.00" y="222.50"></text></g><g><title>0x7f75d525ef55 (?) (1 samples, 0.36%)</title><rect x="371" y="228" width="5" height="15" fill="rgb(239,71,1)"/><text x="374.00" y="238.50"></text></g><g><title>0x7f75d524ed33 (?) (1 samples, 0.36%)</title><rect x="371" y="244" width="5" height="15" fill="rgb(245,41,20)"/><text x="374.00" y="254.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.36%)</title><rect x="371" y="260" width="5" height="15" fill="rgb(223,106,36)"/><text x="374.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.36%)</title><rect x="371" y="276" width="5" height="15" fill="rgb(227,56,47)"/><text x="374.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.36%)</title><rect x="371" y="292" width="5" height="15" fill="rgb(237,33,37)"/><text x="374.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.36%)</title><rect x="371" y="308" width="5" height="15" fill="rgb(226,129,31)"/><text x="374.00" y="318.50"></text></g><g><title>0x7f75d524ed11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="376" y="244" width="4" height="15" fill="rgb(236,83,32)"/><text x="379.00" y="254.50"></text></g><g><title>0x7f75d525ef55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.73%)</title><rect x="376" y="228" width="8" height="15" fill="rgb(208,5,47)"/><text x="379.00" y="238.50"></text></g><g><title>0x7f75d524ed33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="380" y="244" width="4" height="15" fill="rgb(222,108,48)"/><text x="383.00" y="254.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.36%)</title><rect x="380" y="260" width="4" height="15" fill="rgb(239,206,36)"/><text x="383.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.36%)</title><rect x="380" y="276" width="4" height="15" fill="rgb(238,170,4)"/><text x="383.00" y="286.50"></text></g><g><title>_array_fill_strides (ctors.c:4084) (1 samples, 0.36%)</title><rect x="380" y="292" width="4" height="15" fill="rgb(231,167,32)"/><text x="383.00" y="302.50"></text></g><g><title>0x7f75d526d225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="384" y="260" width="4" height="15" fill="rgb(227,31,25)"/><text x="387.00" y="270.50"></text></g><g><title>0x7f75d526d281 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="388" y="260" width="5" height="15" fill="rgb(217,160,10)"/><text x="391.00" y="270.50"></text></g><g><title>_buffer_get_info (buffer.c:641) (1 samples, 0.36%)</title><rect x="393" y="340" width="4" height="15" fill="rgb(208,87,15)"/><text x="396.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.36%)</title><rect x="397" y="340" width="4" height="15" fill="rgb(205,28,4)"/><text x="400.00" y="350.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.36%)</title><rect x="397" y="356" width="4" height="15" fill="rgb(240,57,52)"/><text x="400.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.36%)</title><rect x="397" y="372" width="4" height="15" fill="rgb(230,182,42)"/><text x="400.00" y="382.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.36%)</title><rect x="401" y="340" width="5" height="15" fill="rgb(213,124,34)"/><text x="404.00" y="350.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.36%)</title><rect x="401" y="356" width="5" height="15" fill="rgb(220,135,18)"/><text x="404.00" y="366.50"></text></g><g><title>0x7f75fb81bbcd (libc-2.29.so) (1 samples, 0.36%)</title><rect x="401" y="372" width="5" height="15" fill="rgb(237,61,48)"/><text x="404.00" y="382.50"></text></g><g><title>0x7f75d52472fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.46%)</title><rect x="393" y="308" width="17" height="15" fill="rgb(229,184,5)"/><text x="396.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c:782) (4 samples, 1.46%)</title><rect x="393" y="324" width="17" height="15" fill="rgb(224,172,10)"/><text x="396.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c:698) (1 samples, 0.36%)</title><rect x="406" y="340" width="4" height="15" fill="rgb(212,208,44)"/><text x="409.00" y="350.50"></text></g><g><title>0x7f75d5247317 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="410" y="308" width="4" height="15" fill="rgb(211,133,25)"/><text x="413.00" y="318.50"></text></g><g><title>0x7f75d526d2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.19%)</title><rect x="393" y="260" width="26" height="15" fill="rgb(224,120,48)"/><text x="396.00" y="270.50">0..</text></g><g><title>0x7f75d5251d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.19%)</title><rect x="393" y="276" width="26" height="15" fill="rgb(252,201,19)"/><text x="396.00" y="286.50">0..</text></g><g><title>0x7f75d5251666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.19%)</title><rect x="393" y="292" width="26" height="15" fill="rgb(234,219,48)"/><text x="396.00" y="302.50">0..</text></g><g><title>0x7f75d5247390 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="414" y="308" width="5" height="15" fill="rgb(245,89,47)"/><text x="417.00" y="318.50"></text></g><g><title>0x7f75d526d364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="419" y="260" width="4" height="15" fill="rgb(245,170,39)"/><text x="422.00" y="270.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.36%)</title><rect x="419" y="276" width="4" height="15" fill="rgb(206,196,31)"/><text x="422.00" y="286.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:432) (1 samples, 0.36%)</title><rect x="427" y="308" width="5" height="15" fill="rgb(233,159,47)"/><text x="430.00" y="318.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (2 samples, 0.73%)</title><rect x="427" y="292" width="9" height="15" fill="rgb(226,109,21)"/><text x="430.00" y="302.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.36%)</title><rect x="432" y="308" width="4" height="15" fill="rgb(242,158,23)"/><text x="435.00" y="318.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4593) (1 samples, 0.36%)</title><rect x="432" y="324" width="4" height="15" fill="rgb(251,41,22)"/><text x="435.00" y="334.50"></text></g><g><title>0x7f75d526d592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.46%)</title><rect x="423" y="260" width="17" height="15" fill="rgb(228,110,46)"/><text x="426.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (4 samples, 1.46%)</title><rect x="423" y="276" width="17" height="15" fill="rgb(233,3,37)"/><text x="426.00" y="286.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.36%)</title><rect x="436" y="292" width="4" height="15" fill="rgb(211,150,18)"/><text x="439.00" y="302.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:922) (1 samples, 0.36%)</title><rect x="436" y="308" width="4" height="15" fill="rgb(205,208,45)"/><text x="439.00" y="318.50"></text></g><g><title>0x7f75d526d644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="440" y="260" width="4" height="15" fill="rgb(237,51,50)"/><text x="443.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.36%)</title><rect x="440" y="276" width="4" height="15" fill="rgb(250,193,46)"/><text x="443.00" y="286.50"></text></g><g><title>0x7f75d526d6fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="444" y="260" width="5" height="15" fill="rgb(249,95,2)"/><text x="447.00" y="270.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.36%)</title><rect x="444" y="276" width="5" height="15" fill="rgb(221,4,3)"/><text x="447.00" y="286.50"></text></g><g><title>0x7f75d526e405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (16 samples, 5.84%)</title><rect x="384" y="244" width="69" height="15" fill="rgb(215,137,50)"/><text x="387.00" y="254.50">0x7f75d..</text></g><g><title>0x7f75d526dc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="449" y="260" width="4" height="15" fill="rgb(230,137,1)"/><text x="452.00" y="270.50"></text></g><g><title>0x7f75d5245529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="449" y="276" width="4" height="15" fill="rgb(225,82,52)"/><text x="452.00" y="286.50"></text></g><g><title>0x7f75d525efa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (17 samples, 6.20%)</title><rect x="384" y="228" width="73" height="15" fill="rgb(240,206,47)"/><text x="387.00" y="238.50">0x7f75d5..</text></g><g><title>0x7f75d526e540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="453" y="244" width="4" height="15" fill="rgb(209,159,15)"/><text x="456.00" y="254.50"></text></g><g><title>0x7f75d52432f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="453" y="260" width="4" height="15" fill="rgb(250,83,24)"/><text x="456.00" y="270.50"></text></g><g><title>0x7f75d5242530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="453" y="276" width="4" height="15" fill="rgb(212,222,47)"/><text x="456.00" y="286.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.36%)</title><rect x="453" y="292" width="4" height="15" fill="rgb(219,196,27)"/><text x="456.00" y="302.50"></text></g><g><title>0x7f75d525f05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="457" y="228" width="5" height="15" fill="rgb(229,114,37)"/><text x="460.00" y="238.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.36%)</title><rect x="457" y="244" width="5" height="15" fill="rgb(233,162,3)"/><text x="460.00" y="254.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.36%)</title><rect x="457" y="260" width="5" height="15" fill="rgb(225,14,7)"/><text x="460.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:728) (2 samples, 0.73%)</title><rect x="462" y="276" width="8" height="15" fill="rgb(253,160,26)"/><text x="465.00" y="286.50"></text></g><g><title>_buffer_info_free (buffer.c:629) (2 samples, 0.73%)</title><rect x="462" y="292" width="8" height="15" fill="rgb(205,53,50)"/><text x="465.00" y="302.50"></text></g><g><title>0x7f75d525f14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.09%)</title><rect x="462" y="228" width="13" height="15" fill="rgb(247,150,10)"/><text x="465.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 1.09%)</title><rect x="462" y="244" width="13" height="15" fill="rgb(237,88,3)"/><text x="465.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (3 samples, 1.09%)</title><rect x="462" y="260" width="13" height="15" fill="rgb(250,15,30)"/><text x="465.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.36%)</title><rect x="470" y="276" width="5" height="15" fill="rgb(223,31,35)"/><text x="473.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (26 samples, 9.49%)</title><rect x="367" y="196" width="112" height="15" fill="rgb(206,82,34)"/><text x="370.00" y="206.50">predict (skle..</text></g><g><title>0x7f75d525fd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (24 samples, 8.76%)</title><rect x="376" y="212" width="103" height="15" fill="rgb(245,199,9)"/><text x="379.00" y="222.50">0x7f75d525fd..</text></g><g><title>0x7f75d525f328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="475" y="228" width="4" height="15" fill="rgb(216,28,5)"/><text x="478.00" y="238.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.36%)</title><rect x="475" y="244" width="4" height="15" fill="rgb(225,124,14)"/><text x="478.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:125) (1 samples, 0.36%)</title><rect x="475" y="260" width="4" height="15" fill="rgb(254,57,1)"/><text x="478.00" y="270.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.36%)</title><rect x="475" y="276" width="4" height="15" fill="rgb(229,147,2)"/><text x="478.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (1 samples, 0.36%)</title><rect x="479" y="196" width="4" height="15" fill="rgb(242,113,34)"/><text x="482.00" y="206.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (1 samples, 0.36%)</title><rect x="479" y="212" width="4" height="15" fill="rgb(207,216,0)"/><text x="482.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.36%)</title><rect x="492" y="212" width="4" height="15" fill="rgb(253,21,14)"/><text x="495.00" y="222.50"></text></g><g><title>prepare_index (mapping.c:742) (1 samples, 0.36%)</title><rect x="492" y="228" width="4" height="15" fill="rgb(243,215,30)"/><text x="495.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py:1096) (93 samples, 33.94%)</title><rect x="100" y="180" width="400" height="15" fill="rgb(236,156,7)"/><text x="103.00" y="190.50">&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py:1096)</text></g><g><title>predict (sklearn/tree/_classes.py:442) (4 samples, 1.46%)</title><rect x="483" y="196" width="17" height="15" fill="rgb(214,181,45)"/><text x="486.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.36%)</title><rect x="496" y="212" width="4" height="15" fill="rgb(222,108,49)"/><text x="499.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.36%)</title><rect x="496" y="228" width="4" height="15" fill="rgb(207,215,52)"/><text x="499.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.36%)</title><rect x="496" y="244" width="4" height="15" fill="rgb(227,129,34)"/><text x="499.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.36%)</title><rect x="496" y="260" width="4" height="15" fill="rgb(212,146,3)"/><text x="499.00" y="270.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.36%)</title><rect x="496" y="276" width="4" height="15" fill="rgb(226,70,46)"/><text x="499.00" y="286.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:189) (1 samples, 0.36%)</title><rect x="496" y="292" width="4" height="15" fill="rgb(226,115,8)"/><text x="499.00" y="302.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h:1617) (1 samples, 0.36%)</title><rect x="496" y="308" width="4" height="15" fill="rgb(227,229,15)"/><text x="499.00" y="318.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.36%)</title><rect x="500" y="180" width="5" height="15" fill="rgb(226,129,26)"/><text x="503.00" y="190.50"></text></g><g><title>0x7f75fb831730 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="500" y="196" width="5" height="15" fill="rgb(238,97,25)"/><text x="503.00" y="206.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1096) (95 samples, 34.67%)</title><rect x="100" y="164" width="409" height="15" fill="rgb(239,200,44)"/><text x="103.00" y="174.50">_get_median_predict (sklearn/ensemble/_weight_boosting...</text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.36%)</title><rect x="505" y="180" width="4" height="15" fill="rgb(209,160,23)"/><text x="508.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.36%)</title><rect x="505" y="196" width="4" height="15" fill="rgb(249,108,8)"/><text x="508.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (1 samples, 0.36%)</title><rect x="505" y="212" width="4" height="15" fill="rgb(230,76,36)"/><text x="508.00" y="222.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (1 samples, 0.36%)</title><rect x="505" y="228" width="4" height="15" fill="rgb(208,72,11)"/><text x="508.00" y="238.50"></text></g><g><title>setArrayFromSequence (ctors.c:546) (1 samples, 0.36%)</title><rect x="505" y="244" width="4" height="15" fill="rgb(238,74,52)"/><text x="508.00" y="254.50"></text></g><g><title>setArrayFromSequence (ctors.c:467) (1 samples, 0.36%)</title><rect x="505" y="260" width="4" height="15" fill="rgb(213,128,13)"/><text x="508.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.36%)</title><rect x="505" y="276" width="4" height="15" fill="rgb(242,5,26)"/><text x="508.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:78) (1 samples, 0.36%)</title><rect x="505" y="292" width="4" height="15" fill="rgb(228,147,19)"/><text x="508.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c:1020) (1 samples, 0.36%)</title><rect x="509" y="276" width="4" height="15" fill="rgb(244,205,23)"/><text x="512.00" y="286.50"></text></g><g><title>_new_argsortlike (item_selection.c:1117) (1 samples, 0.36%)</title><rect x="513" y="276" width="5" height="15" fill="rgb(235,33,47)"/><text x="516.00" y="286.50"></text></g><g><title>arrayiter_dealloc (iterators.c:393) (1 samples, 0.36%)</title><rect x="513" y="292" width="5" height="15" fill="rgb(244,222,40)"/><text x="516.00" y="302.50"></text></g><g><title>array_iter_base_dealloc (iterators.c:164) (1 samples, 0.36%)</title><rect x="513" y="308" width="5" height="15" fill="rgb(211,167,11)"/><text x="516.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.36%)</title><rect x="518" y="308" width="4" height="15" fill="rgb(217,171,5)"/><text x="521.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.36%)</title><rect x="518" y="324" width="4" height="15" fill="rgb(207,208,51)"/><text x="521.00" y="334.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1099) (4 samples, 1.46%)</title><rect x="509" y="164" width="17" height="15" fill="rgb(209,122,12)"/><text x="512.00" y="174.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (4 samples, 1.46%)</title><rect x="509" y="180" width="17" height="15" fill="rgb(223,155,22)"/><text x="512.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.46%)</title><rect x="509" y="196" width="17" height="15" fill="rgb(244,55,49)"/><text x="512.00" y="206.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (4 samples, 1.46%)</title><rect x="509" y="212" width="17" height="15" fill="rgb(206,121,27)"/><text x="512.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (4 samples, 1.46%)</title><rect x="509" y="228" width="17" height="15" fill="rgb(253,156,7)"/><text x="512.00" y="238.50"></text></g><g><title>array_argsort (methods.c:1395) (4 samples, 1.46%)</title><rect x="509" y="244" width="17" height="15" fill="rgb(218,172,47)"/><text x="512.00" y="254.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (4 samples, 1.46%)</title><rect x="509" y="260" width="17" height="15" fill="rgb(206,217,24)"/><text x="512.00" y="270.50"></text></g><g><title>_new_argsortlike (item_selection.c:984) (2 samples, 0.73%)</title><rect x="518" y="276" width="8" height="15" fill="rgb(221,112,51)"/><text x="521.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.73%)</title><rect x="518" y="292" width="8" height="15" fill="rgb(248,97,47)"/><text x="521.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.36%)</title><rect x="522" y="308" width="4" height="15" fill="rgb(215,171,28)"/><text x="525.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.36%)</title><rect x="522" y="324" width="4" height="15" fill="rgb(219,106,41)"/><text x="525.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:176) (1 samples, 0.36%)</title><rect x="522" y="340" width="4" height="15" fill="rgb(242,52,20)"/><text x="525.00" y="350.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:259) (1 samples, 0.36%)</title><rect x="531" y="292" width="4" height="15" fill="rgb(243,20,15)"/><text x="534.00" y="302.50"></text></g><g><title>_get_keywords (number.c:215) (1 samples, 0.36%)</title><rect x="531" y="308" width="4" height="15" fill="rgb(216,77,17)"/><text x="534.00" y="318.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:825) (3 samples, 1.09%)</title><rect x="526" y="180" width="13" height="15" fill="rgb(215,105,11)"/><text x="529.00" y="190.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (2 samples, 0.73%)</title><rect x="531" y="196" width="8" height="15" fill="rgb(247,97,5)"/><text x="534.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.73%)</title><rect x="531" y="212" width="8" height="15" fill="rgb(245,11,50)"/><text x="534.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (2 samples, 0.73%)</title><rect x="531" y="228" width="8" height="15" fill="rgb(246,85,18)"/><text x="534.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.73%)</title><rect x="531" y="244" width="8" height="15" fill="rgb(254,9,24)"/><text x="534.00" y="254.50"></text></g><g><title>array_cumsum (methods.c:2239) (2 samples, 0.73%)</title><rect x="531" y="260" width="8" height="15" fill="rgb(252,78,13)"/><text x="534.00" y="270.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (2 samples, 0.73%)</title><rect x="531" y="276" width="8" height="15" fill="rgb(214,209,46)"/><text x="534.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (1 samples, 0.36%)</title><rect x="535" y="292" width="4" height="15" fill="rgb(233,164,24)"/><text x="538.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (1 samples, 0.36%)</title><rect x="535" y="308" width="4" height="15" fill="rgb(224,25,11)"/><text x="538.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (1 samples, 0.36%)</title><rect x="535" y="324" width="4" height="15" fill="rgb(208,216,32)"/><text x="538.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3818) (1 samples, 0.36%)</title><rect x="535" y="340" width="4" height="15" fill="rgb(238,183,14)"/><text x="538.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:295) (1 samples, 0.36%)</title><rect x="535" y="356" width="4" height="15" fill="rgb(249,213,4)"/><text x="538.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.36%)</title><rect x="548" y="324" width="4" height="15" fill="rgb(229,94,13)"/><text x="551.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.73%)</title><rect x="548" y="308" width="8" height="15" fill="rgb(235,35,45)"/><text x="551.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.36%)</title><rect x="552" y="324" width="4" height="15" fill="rgb(245,133,2)"/><text x="555.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1698) (1 samples, 0.36%)</title><rect x="552" y="340" width="4" height="15" fill="rgb(218,212,38)"/><text x="555.00" y="350.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:826) (5 samples, 1.82%)</title><rect x="539" y="180" width="22" height="15" fill="rgb(212,160,10)"/><text x="542.00" y="190.50">s..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (4 samples, 1.46%)</title><rect x="544" y="196" width="17" height="15" fill="rgb(246,153,7)"/><text x="547.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.46%)</title><rect x="544" y="212" width="17" height="15" fill="rgb(247,180,22)"/><text x="547.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (4 samples, 1.46%)</title><rect x="544" y="228" width="17" height="15" fill="rgb(227,60,3)"/><text x="547.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (3 samples, 1.09%)</title><rect x="548" y="244" width="13" height="15" fill="rgb(239,7,30)"/><text x="551.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 1.09%)</title><rect x="548" y="260" width="13" height="15" fill="rgb(243,63,16)"/><text x="551.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 1.09%)</title><rect x="548" y="276" width="13" height="15" fill="rgb(227,165,36)"/><text x="551.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 1.09%)</title><rect x="548" y="292" width="13" height="15" fill="rgb(249,139,29)"/><text x="551.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.36%)</title><rect x="556" y="308" width="5" height="15" fill="rgb(234,136,37)"/><text x="559.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.36%)</title><rect x="556" y="324" width="5" height="15" fill="rgb(244,142,27)"/><text x="559.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.36%)</title><rect x="556" y="340" width="5" height="15" fill="rgb(218,89,3)"/><text x="559.00" y="350.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.36%)</title><rect x="556" y="356" width="5" height="15" fill="rgb(244,150,5)"/><text x="559.00" y="366.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:827) (1 samples, 0.36%)</title><rect x="561" y="180" width="4" height="15" fill="rgb(218,118,38)"/><text x="564.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.36%)</title><rect x="561" y="196" width="4" height="15" fill="rgb(213,215,18)"/><text x="564.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:55) (1 samples, 0.36%)</title><rect x="561" y="212" width="4" height="15" fill="rgb(234,17,18)"/><text x="564.00" y="222.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.36%)</title><rect x="561" y="228" width="4" height="15" fill="rgb(251,205,7)"/><text x="564.00" y="238.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.36%)</title><rect x="561" y="244" width="4" height="15" fill="rgb(219,164,43)"/><text x="564.00" y="254.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (1 samples, 0.36%)</title><rect x="561" y="260" width="4" height="15" fill="rgb(210,144,48)"/><text x="564.00" y="270.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:4) (1 samples, 0.36%)</title><rect x="574" y="196" width="4" height="15" fill="rgb(233,217,51)"/><text x="577.00" y="206.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.36%)</title><rect x="578" y="276" width="4" height="15" fill="rgb(230,185,3)"/><text x="581.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.36%)</title><rect x="578" y="292" width="4" height="15" fill="rgb(208,63,45)"/><text x="581.00" y="302.50"></text></g><g><title>PyArray_FromArray (ctors.c:2073) (1 samples, 0.36%)</title><rect x="578" y="308" width="4" height="15" fill="rgb(249,151,18)"/><text x="581.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.36%)</title><rect x="582" y="292" width="5" height="15" fill="rgb(210,97,0)"/><text x="585.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.36%)</title><rect x="582" y="308" width="5" height="15" fill="rgb(248,227,26)"/><text x="585.00" y="318.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:421) (1 samples, 0.36%)</title><rect x="582" y="324" width="5" height="15" fill="rgb(235,123,30)"/><text x="585.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2195) (1 samples, 0.36%)</title><rect x="582" y="340" width="5" height="15" fill="rgb(221,126,22)"/><text x="585.00" y="350.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (3 samples, 1.09%)</title><rect x="578" y="196" width="13" height="15" fill="rgb(221,174,27)"/><text x="581.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.09%)</title><rect x="578" y="212" width="13" height="15" fill="rgb(254,59,31)"/><text x="581.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (3 samples, 1.09%)</title><rect x="578" y="228" width="13" height="15" fill="rgb(209,114,16)"/><text x="581.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (3 samples, 1.09%)</title><rect x="578" y="244" width="13" height="15" fill="rgb(216,169,52)"/><text x="581.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 1.09%)</title><rect x="578" y="260" width="13" height="15" fill="rgb(235,97,37)"/><text x="581.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.73%)</title><rect x="582" y="276" width="9" height="15" fill="rgb(220,155,35)"/><text x="585.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.36%)</title><rect x="587" y="292" width="4" height="15" fill="rgb(244,18,17)"/><text x="590.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.36%)</title><rect x="587" y="308" width="4" height="15" fill="rgb(235,122,37)"/><text x="590.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.36%)</title><rect x="587" y="324" width="4" height="15" fill="rgb(206,66,26)"/><text x="590.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2048) (1 samples, 0.36%)</title><rect x="587" y="340" width="4" height="15" fill="rgb(234,220,33)"/><text x="590.00" y="350.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;:4) (2 samples, 0.73%)</title><rect x="591" y="196" width="9" height="15" fill="rgb(243,217,34)"/><text x="594.00" y="206.50"></text></g><g><title>_isclose_dispatcher (numpy/core/numeric.py:2176) (1 samples, 0.36%)</title><rect x="595" y="212" width="5" height="15" fill="rgb(212,70,52)"/><text x="598.00" y="222.50"></text></g><g><title>isclose (numpy/core/numeric.py:2260) (1 samples, 0.36%)</title><rect x="600" y="228" width="4" height="15" fill="rgb(240,229,9)"/><text x="603.00" y="238.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.36%)</title><rect x="600" y="244" width="4" height="15" fill="rgb(217,94,35)"/><text x="603.00" y="254.50"></text></g><g><title>isclose (numpy/core/numeric.py:2269) (1 samples, 0.36%)</title><rect x="604" y="228" width="4" height="15" fill="rgb(248,63,41)"/><text x="607.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.36%)</title><rect x="604" y="244" width="4" height="15" fill="rgb(240,100,45)"/><text x="607.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.36%)</title><rect x="604" y="260" width="4" height="15" fill="rgb(254,105,40)"/><text x="607.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.36%)</title><rect x="604" y="276" width="4" height="15" fill="rgb(223,220,2)"/><text x="607.00" y="286.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1520) (1 samples, 0.36%)</title><rect x="608" y="340" width="4" height="15" fill="rgb(220,159,50)"/><text x="611.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.73%)</title><rect x="608" y="260" width="9" height="15" fill="rgb(238,205,2)"/><text x="611.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (2 samples, 0.73%)</title><rect x="608" y="276" width="9" height="15" fill="rgb(248,104,19)"/><text x="611.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (2 samples, 0.73%)</title><rect x="608" y="292" width="9" height="15" fill="rgb(217,46,31)"/><text x="611.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (2 samples, 0.73%)</title><rect x="608" y="308" width="9" height="15" fill="rgb(216,174,39)"/><text x="611.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (2 samples, 0.73%)</title><rect x="608" y="324" width="9" height="15" fill="rgb(224,197,52)"/><text x="611.00" y="334.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1522) (1 samples, 0.36%)</title><rect x="612" y="340" width="5" height="15" fill="rgb(239,38,20)"/><text x="615.00" y="350.50"></text></g><g><title>isclose (numpy/core/numeric.py:2270) (3 samples, 1.09%)</title><rect x="608" y="228" width="13" height="15" fill="rgb(246,94,8)"/><text x="611.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.09%)</title><rect x="608" y="244" width="13" height="15" fill="rgb(249,168,3)"/><text x="611.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.36%)</title><rect x="617" y="260" width="4" height="15" fill="rgb(226,14,10)"/><text x="620.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:309) (1 samples, 0.36%)</title><rect x="617" y="276" width="4" height="15" fill="rgb(224,28,40)"/><text x="620.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (2 samples, 0.73%)</title><rect x="625" y="292" width="9" height="15" fill="rgb(211,214,7)"/><text x="628.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (1 samples, 0.36%)</title><rect x="630" y="308" width="4" height="15" fill="rgb(233,172,51)"/><text x="633.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.36%)</title><rect x="634" y="340" width="4" height="15" fill="rgb(240,189,45)"/><text x="637.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.36%)</title><rect x="634" y="356" width="4" height="15" fill="rgb(213,30,27)"/><text x="637.00" y="366.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:421) (1 samples, 0.36%)</title><rect x="634" y="372" width="4" height="15" fill="rgb(229,2,53)"/><text x="637.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2076) (1 samples, 0.36%)</title><rect x="634" y="388" width="4" height="15" fill="rgb(238,144,23)"/><text x="637.00" y="398.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1791) (1 samples, 0.36%)</title><rect x="634" y="404" width="4" height="15" fill="rgb(233,25,34)"/><text x="637.00" y="414.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.73%)</title><rect x="634" y="324" width="9" height="15" fill="rgb(212,20,4)"/><text x="637.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.36%)</title><rect x="638" y="340" width="5" height="15" fill="rgb(243,161,11)"/><text x="641.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.36%)</title><rect x="638" y="356" width="5" height="15" fill="rgb(224,22,41)"/><text x="641.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3572) (1 samples, 0.36%)</title><rect x="638" y="372" width="5" height="15" fill="rgb(208,44,43)"/><text x="641.00" y="382.50"></text></g><g><title>isclose (numpy/core/numeric.py:2271) (6 samples, 2.19%)</title><rect x="621" y="228" width="26" height="15" fill="rgb(243,29,30)"/><text x="624.00" y="238.50">i..</text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (6 samples, 2.19%)</title><rect x="621" y="244" width="26" height="15" fill="rgb(208,43,12)"/><text x="624.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 2.19%)</title><rect x="621" y="260" width="26" height="15" fill="rgb(217,54,28)"/><text x="624.00" y="270.50">a..</text></g><g><title>all (numpy/core/fromnumeric.py:2351) (6 samples, 2.19%)</title><rect x="621" y="276" width="26" height="15" fill="rgb(235,185,48)"/><text x="624.00" y="286.50">a..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (3 samples, 1.09%)</title><rect x="634" y="292" width="13" height="15" fill="rgb(217,6,48)"/><text x="637.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 1.09%)</title><rect x="634" y="308" width="13" height="15" fill="rgb(242,2,50)"/><text x="637.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4694) (1 samples, 0.36%)</title><rect x="643" y="324" width="4" height="15" fill="rgb(205,133,39)"/><text x="646.00" y="334.50"></text></g><g><title>PyArray_Return (scalarapi.c:864) (1 samples, 0.36%)</title><rect x="643" y="340" width="4" height="15" fill="rgb(216,146,14)"/><text x="646.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.36%)</title><rect x="643" y="356" width="4" height="15" fill="rgb(235,90,23)"/><text x="646.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.36%)</title><rect x="643" y="372" width="4" height="15" fill="rgb(224,21,17)"/><text x="646.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.36%)</title><rect x="643" y="388" width="4" height="15" fill="rgb(226,100,37)"/><text x="646.00" y="398.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (1 samples, 0.36%)</title><rect x="651" y="276" width="4" height="15" fill="rgb(243,226,3)"/><text x="654.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:180) (1 samples, 0.36%)</title><rect x="651" y="292" width="4" height="15" fill="rgb(210,15,20)"/><text x="654.00" y="302.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:132) (1 samples, 0.36%)</title><rect x="655" y="276" width="5" height="15" fill="rgb(254,132,15)"/><text x="658.00" y="286.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2257) (4 samples, 1.46%)</title><rect x="647" y="244" width="17" height="15" fill="rgb(247,177,20)"/><text x="650.00" y="254.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (3 samples, 1.09%)</title><rect x="651" y="260" width="13" height="15" fill="rgb(232,84,47)"/><text x="654.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:134) (1 samples, 0.36%)</title><rect x="660" y="276" width="4" height="15" fill="rgb(243,169,19)"/><text x="663.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.36%)</title><rect x="668" y="260" width="5" height="15" fill="rgb(233,203,54)"/><text x="671.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.36%)</title><rect x="668" y="276" width="5" height="15" fill="rgb(246,159,40)"/><text x="671.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.36%)</title><rect x="668" y="292" width="5" height="15" fill="rgb(224,83,27)"/><text x="671.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.36%)</title><rect x="673" y="292" width="4" height="15" fill="rgb(250,79,50)"/><text x="676.00" y="302.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.36%)</title><rect x="673" y="308" width="4" height="15" fill="rgb(242,74,16)"/><text x="676.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.36%)</title><rect x="673" y="324" width="4" height="15" fill="rgb(223,147,43)"/><text x="676.00" y="334.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.36%)</title><rect x="673" y="340" width="4" height="15" fill="rgb(223,61,3)"/><text x="676.00" y="350.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:235) (1 samples, 0.36%)</title><rect x="673" y="356" width="4" height="15" fill="rgb(216,210,45)"/><text x="676.00" y="366.50"></text></g><g><title>array_multiply (number.c:354) (2 samples, 0.73%)</title><rect x="673" y="260" width="8" height="15" fill="rgb(233,194,14)"/><text x="676.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.73%)</title><rect x="673" y="276" width="8" height="15" fill="rgb(240,210,9)"/><text x="676.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.36%)</title><rect x="677" y="292" width="4" height="15" fill="rgb(235,58,39)"/><text x="680.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.36%)</title><rect x="677" y="308" width="4" height="15" fill="rgb(251,14,48)"/><text x="680.00" y="318.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.36%)</title><rect x="677" y="324" width="4" height="15" fill="rgb(245,31,18)"/><text x="680.00" y="334.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.36%)</title><rect x="677" y="340" width="4" height="15" fill="rgb(220,229,21)"/><text x="680.00" y="350.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c:1427) (1 samples, 0.36%)</title><rect x="677" y="356" width="4" height="15" fill="rgb(215,82,7)"/><text x="680.00" y="366.50"></text></g><g><title>array_subtract (number.c:342) (2 samples, 0.73%)</title><rect x="681" y="260" width="9" height="15" fill="rgb(207,124,25)"/><text x="684.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.36%)</title><rect x="686" y="276" width="4" height="15" fill="rgb(223,211,7)"/><text x="689.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.36%)</title><rect x="686" y="292" width="4" height="15" fill="rgb(209,104,19)"/><text x="689.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.36%)</title><rect x="686" y="308" width="4" height="15" fill="rgb(208,199,20)"/><text x="689.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.36%)</title><rect x="690" y="276" width="4" height="15" fill="rgb(238,172,18)"/><text x="693.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.36%)</title><rect x="690" y="292" width="4" height="15" fill="rgb(229,111,43)"/><text x="693.00" y="302.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1371) (1 samples, 0.36%)</title><rect x="690" y="308" width="4" height="15" fill="rgb(215,145,13)"/><text x="693.00" y="318.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1102) (40 samples, 14.60%)</title><rect x="526" y="164" width="173" height="15" fill="rgb(231,33,0)"/><text x="529.00" y="174.50">_get_median_predict (s..</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:828) (31 samples, 11.31%)</title><rect x="565" y="180" width="134" height="15" fill="rgb(254,23,35)"/><text x="568.00" y="190.50">stable_cumsum (s..</text></g><g><title>isclose (&lt;__array_function__ internals&gt;:6) (23 samples, 8.39%)</title><rect x="600" y="196" width="99" height="15" fill="rgb(229,53,13)"/><text x="603.00" y="206.50">isclose (&lt;_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (23 samples, 8.39%)</title><rect x="600" y="212" width="99" height="15" fill="rgb(250,60,23)"/><text x="603.00" y="222.50">array_imple..</text></g><g><title>isclose (numpy/core/numeric.py:2272) (12 samples, 4.38%)</title><rect x="647" y="228" width="52" height="15" fill="rgb(213,71,0)"/><text x="650.00" y="238.50">isclo..</text></g><g><title>within_tol (numpy/core/numeric.py:2258) (8 samples, 2.92%)</title><rect x="664" y="244" width="35" height="15" fill="rgb(243,80,7)"/><text x="667.00" y="254.50">wi..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.73%)</title><rect x="690" y="260" width="9" height="15" fill="rgb(214,130,13)"/><text x="693.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3280) (1 samples, 0.36%)</title><rect x="694" y="276" width="5" height="15" fill="rgb(240,175,14)"/><text x="697.00" y="286.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1103) (1 samples, 0.36%)</title><rect x="699" y="164" width="4" height="15" fill="rgb(253,149,53)"/><text x="702.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.36%)</title><rect x="699" y="180" width="4" height="15" fill="rgb(213,134,50)"/><text x="702.00" y="190.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.36%)</title><rect x="699" y="196" width="4" height="15" fill="rgb(231,186,25)"/><text x="702.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.36%)</title><rect x="699" y="212" width="4" height="15" fill="rgb(222,79,33)"/><text x="702.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1035) (1 samples, 0.36%)</title><rect x="699" y="228" width="4" height="15" fill="rgb(241,174,18)"/><text x="702.00" y="238.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1104) (1 samples, 0.36%)</title><rect x="703" y="164" width="4" height="15" fill="rgb(248,35,15)"/><text x="706.00" y="174.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.36%)</title><rect x="703" y="180" width="4" height="15" fill="rgb(252,85,2)"/><text x="706.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.36%)</title><rect x="707" y="180" width="4" height="15" fill="rgb(233,144,23)"/><text x="710.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.36%)</title><rect x="711" y="180" width="5" height="15" fill="rgb(228,8,36)"/><text x="714.00" y="190.50"></text></g><g><title>array_arange (multiarraymodule.c:2763) (1 samples, 0.36%)</title><rect x="716" y="180" width="4" height="15" fill="rgb(215,136,44)"/><text x="719.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3460) (1 samples, 0.36%)</title><rect x="716" y="196" width="4" height="15" fill="rgb(218,215,30)"/><text x="719.00" y="206.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:208) (1 samples, 0.36%)</title><rect x="716" y="212" width="4" height="15" fill="rgb(225,7,50)"/><text x="719.00" y="222.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1106) (4 samples, 1.46%)</title><rect x="707" y="164" width="17" height="15" fill="rgb(205,84,35)"/><text x="710.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.36%)</title><rect x="720" y="180" width="4" height="15" fill="rgb(253,110,26)"/><text x="723.00" y="190.50"></text></g><g><title>0x7f75fb81b9a1 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="720" y="196" width="4" height="15" fill="rgb(250,112,35)"/><text x="723.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.36%)</title><rect x="724" y="180" width="5" height="15" fill="rgb(222,228,13)"/><text x="727.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.36%)</title><rect x="729" y="180" width="4" height="15" fill="rgb(248,20,14)"/><text x="732.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (159 samples, 58.03%)</title><rect x="53" y="132" width="684" height="15" fill="rgb(253,12,48)"/><text x="56.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1131) (149 samples, 54.38%)</title><rect x="96" y="148" width="641" height="15" fill="rgb(207,94,10)"/><text x="99.00" y="158.50">predict (sklearn/ensemble/_weight_boosting.py:1131)</text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1109) (3 samples, 1.09%)</title><rect x="724" y="164" width="13" height="15" fill="rgb(218,10,24)"/><text x="727.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.36%)</title><rect x="733" y="180" width="4" height="15" fill="rgb(221,184,9)"/><text x="736.00" y="190.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2493) (1 samples, 0.36%)</title><rect x="733" y="196" width="4" height="15" fill="rgb(238,169,16)"/><text x="736.00" y="206.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.36%)</title><rect x="733" y="212" width="4" height="15" fill="rgb(225,122,23)"/><text x="736.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:54) (160 samples, 58.39%)</title><rect x="53" y="52" width="689" height="15" fill="rgb(229,149,53)"/><text x="56.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:53) (160 samples, 58.39%)</title><rect x="53" y="68" width="689" height="15" fill="rgb(243,101,1)"/><text x="56.00" y="78.50">profile_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:37) (160 samples, 58.39%)</title><rect x="53" y="84" width="689" height="15" fill="rgb(211,20,45)"/><text x="56.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:37)</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:31) (160 samples, 58.39%)</title><rect x="53" y="100" width="689" height="15" fill="rgb(250,80,15)"/><text x="56.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (160 samples, 58.39%)</title><rect x="53" y="116" width="689" height="15" fill="rgb(238,99,43)"/><text x="56.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.36%)</title><rect x="737" y="132" width="5" height="15" fill="rgb(231,156,44)"/><text x="740.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.73%)</title><rect x="763" y="180" width="9" height="15" fill="rgb(207,129,47)"/><text x="766.00" y="190.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.36%)</title><rect x="789" y="260" width="4" height="15" fill="rgb(205,22,54)"/><text x="792.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (1 samples, 0.36%)</title><rect x="789" y="276" width="4" height="15" fill="rgb(235,92,52)"/><text x="792.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:775) (1 samples, 0.36%)</title><rect x="789" y="292" width="4" height="15" fill="rgb(243,141,34)"/><text x="792.00" y="302.50"></text></g><g><title>PyArray_LookupSpecial_OnInstance (get_attr_string.h:123) (1 samples, 0.36%)</title><rect x="789" y="308" width="4" height="15" fill="rgb(208,76,51)"/><text x="792.00" y="318.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:14) (1 samples, 0.36%)</title><rect x="789" y="324" width="4" height="15" fill="rgb(249,151,21)"/><text x="792.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 0.73%)</title><rect x="789" y="228" width="9" height="15" fill="rgb(249,13,41)"/><text x="792.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (2 samples, 0.73%)</title><rect x="789" y="244" width="9" height="15" fill="rgb(221,164,24)"/><text x="792.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1901) (1 samples, 0.36%)</title><rect x="793" y="260" width="5" height="15" fill="rgb(209,147,32)"/><text x="796.00" y="270.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.36%)</title><rect x="798" y="228" width="4" height="15" fill="rgb(218,62,37)"/><text x="801.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2896) (1 samples, 0.36%)</title><rect x="798" y="244" width="4" height="15" fill="rgb(254,149,34)"/><text x="801.00" y="254.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1540) (2 samples, 0.73%)</title><rect x="802" y="244" width="9" height="15" fill="rgb(237,168,19)"/><text x="805.00" y="254.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.36%)</title><rect x="806" y="260" width="5" height="15" fill="rgb(216,124,40)"/><text x="809.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (6 samples, 2.19%)</title><rect x="789" y="212" width="26" height="15" fill="rgb(230,1,51)"/><text x="792.00" y="222.50">_..</text></g><g><title>array_subscript (mapping.c:1676) (3 samples, 1.09%)</title><rect x="802" y="228" width="13" height="15" fill="rgb(215,147,32)"/><text x="805.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1781) (1 samples, 0.36%)</title><rect x="811" y="244" width="4" height="15" fill="rgb(212,44,54)"/><text x="814.00" y="254.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.36%)</title><rect x="811" y="260" width="4" height="15" fill="rgb(253,5,42)"/><text x="814.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:45) (1 samples, 0.36%)</title><rect x="815" y="212" width="4" height="15" fill="rgb(234,12,47)"/><text x="818.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.36%)</title><rect x="815" y="228" width="4" height="15" fill="rgb(242,19,8)"/><text x="818.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.36%)</title><rect x="815" y="244" width="4" height="15" fill="rgb(213,210,26)"/><text x="818.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:223) (1 samples, 0.36%)</title><rect x="815" y="260" width="4" height="15" fill="rgb(217,147,20)"/><text x="818.00" y="270.50"></text></g><g><title>PyArray_View (convert.c:584) (1 samples, 0.36%)</title><rect x="815" y="276" width="4" height="15" fill="rgb(253,76,3)"/><text x="818.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.36%)</title><rect x="819" y="212" width="4" height="15" fill="rgb(243,148,18)"/><text x="822.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.36%)</title><rect x="819" y="228" width="4" height="15" fill="rgb(244,1,20)"/><text x="822.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:21) (2 samples, 0.73%)</title><rect x="823" y="212" width="9" height="15" fill="rgb(231,10,45)"/><text x="826.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (1 samples, 0.36%)</title><rect x="828" y="228" width="4" height="15" fill="rgb(207,152,47)"/><text x="831.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.36%)</title><rect x="828" y="244" width="4" height="15" fill="rgb(214,19,49)"/><text x="831.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (1 samples, 0.36%)</title><rect x="828" y="260" width="4" height="15" fill="rgb(243,205,8)"/><text x="831.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.36%)</title><rect x="828" y="276" width="4" height="15" fill="rgb(252,6,32)"/><text x="831.00" y="286.50"></text></g><g><title>array_swapaxes (methods.c:348) (1 samples, 0.36%)</title><rect x="828" y="292" width="4" height="15" fill="rgb(210,175,39)"/><text x="831.00" y="302.50"></text></g><g><title>PyArray_SwapAxes (shape.c:657) (1 samples, 0.36%)</title><rect x="828" y="308" width="4" height="15" fill="rgb(213,146,27)"/><text x="831.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.36%)</title><rect x="828" y="324" width="4" height="15" fill="rgb(228,180,37)"/><text x="831.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.36%)</title><rect x="828" y="340" width="4" height="15" fill="rgb(218,52,7)"/><text x="831.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.36%)</title><rect x="828" y="356" width="4" height="15" fill="rgb(213,154,17)"/><text x="831.00" y="366.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.36%)</title><rect x="828" y="372" width="4" height="15" fill="rgb(253,209,16)"/><text x="831.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:22) (1 samples, 0.36%)</title><rect x="832" y="212" width="4" height="15" fill="rgb(252,205,16)"/><text x="835.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (1 samples, 0.36%)</title><rect x="832" y="228" width="4" height="15" fill="rgb(227,172,25)"/><text x="835.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.36%)</title><rect x="832" y="244" width="4" height="15" fill="rgb(250,80,49)"/><text x="835.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (1 samples, 0.36%)</title><rect x="832" y="260" width="4" height="15" fill="rgb(222,12,53)"/><text x="835.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.36%)</title><rect x="832" y="276" width="4" height="15" fill="rgb(254,192,29)"/><text x="835.00" y="286.50"></text></g><g><title>array_swapaxes (methods.c:348) (1 samples, 0.36%)</title><rect x="832" y="292" width="4" height="15" fill="rgb(227,170,34)"/><text x="835.00" y="302.50"></text></g><g><title>PyArray_SwapAxes (shape.c:657) (1 samples, 0.36%)</title><rect x="832" y="308" width="4" height="15" fill="rgb(220,100,22)"/><text x="835.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.36%)</title><rect x="832" y="324" width="4" height="15" fill="rgb(253,139,21)"/><text x="835.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.36%)</title><rect x="832" y="340" width="4" height="15" fill="rgb(239,32,41)"/><text x="835.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.36%)</title><rect x="832" y="356" width="4" height="15" fill="rgb(251,162,15)"/><text x="835.00" y="366.50"></text></g><g><title>_array_fill_strides (ctors.c:4085) (1 samples, 0.36%)</title><rect x="832" y="372" width="4" height="15" fill="rgb(210,135,1)"/><text x="835.00" y="382.50"></text></g><g><title>0x7f75fb7ffb01 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="836" y="356" width="5" height="15" fill="rgb(207,95,39)"/><text x="839.00" y="366.50"></text></g><g><title>0x7f75fb831950 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="836" y="372" width="5" height="15" fill="rgb(206,220,17)"/><text x="839.00" y="382.50"></text></g><g><title>0x7f75fb7ffc4f (libc-2.29.so) (1 samples, 0.36%)</title><rect x="841" y="356" width="4" height="15" fill="rgb(222,36,3)"/><text x="844.00" y="366.50"></text></g><g><title>0x7f75fb7ffd1e (libc-2.29.so) (1 samples, 0.36%)</title><rect x="845" y="356" width="4" height="15" fill="rgb(230,177,9)"/><text x="848.00" y="366.50"></text></g><g><title>0x7f75fb8001e3 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="849" y="356" width="5" height="15" fill="rgb(218,14,43)"/><text x="852.00" y="366.50"></text></g><g><title>0x7f75fb831973 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="849" y="372" width="5" height="15" fill="rgb(207,97,9)"/><text x="852.00" y="382.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (5 samples, 1.82%)</title><rect x="836" y="244" width="22" height="15" fill="rgb(242,25,43)"/><text x="839.00" y="254.50">a..</text></g><g><title>_choose_dispatcher (numpy/core/fromnumeric.py:306) (5 samples, 1.82%)</title><rect x="836" y="260" width="22" height="15" fill="rgb(222,66,30)"/><text x="839.00" y="270.50">_..</text></g><g><title>array_item (mapping.c:1384) (5 samples, 1.82%)</title><rect x="836" y="276" width="22" height="15" fill="rgb(229,177,45)"/><text x="839.00" y="286.50">a..</text></g><g><title>array_item_asarray (mapping.c:1350) (5 samples, 1.82%)</title><rect x="836" y="292" width="22" height="15" fill="rgb(220,190,9)"/><text x="839.00" y="302.50">a..</text></g><g><title>get_view_from_index (mapping.c:937) (5 samples, 1.82%)</title><rect x="836" y="308" width="22" height="15" fill="rgb(220,26,32)"/><text x="839.00" y="318.50">g..</text></g><g><title>sprintf (libc-2.29.so) (5 samples, 1.82%)</title><rect x="836" y="324" width="22" height="15" fill="rgb(216,82,31)"/><text x="839.00" y="334.50">s..</text></g><g><title>0x7f75fb80cab0 (libc-2.29.so) (5 samples, 1.82%)</title><rect x="836" y="340" width="22" height="15" fill="rgb(232,36,32)"/><text x="839.00" y="350.50">0..</text></g><g><title>0x7f75fb8008a0 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="854" y="356" width="4" height="15" fill="rgb(234,17,6)"/><text x="857.00" y="366.50"></text></g><g><title>0x7f75fb7e6f50 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="854" y="372" width="4" height="15" fill="rgb(214,113,22)"/><text x="857.00" y="382.50"></text></g><g><title>PyArray_Choose (item_selection.c:702) (1 samples, 0.36%)</title><rect x="867" y="308" width="4" height="15" fill="rgb(213,205,0)"/><text x="870.00" y="318.50"></text></g><g><title>PyArray_MultiIterFromObjects (iterators.c:1357) (1 samples, 0.36%)</title><rect x="867" y="324" width="4" height="15" fill="rgb(215,189,3)"/><text x="870.00" y="334.50"></text></g><g><title>multiiter_new_impl (iterators.c:1296) (1 samples, 0.36%)</title><rect x="867" y="340" width="4" height="15" fill="rgb(228,61,7)"/><text x="870.00" y="350.50"></text></g><g><title>PyArray_IterNew (iterators.c:183) (1 samples, 0.36%)</title><rect x="867" y="356" width="4" height="15" fill="rgb(222,188,43)"/><text x="870.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.36%)</title><rect x="867" y="372" width="4" height="15" fill="rgb(248,166,24)"/><text x="870.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:23) (9 samples, 3.28%)</title><rect x="836" y="212" width="39" height="15" fill="rgb(237,96,43)"/><text x="839.00" y="222.50">_ru..</text></g><g><title>choose (&lt;__array_function__ internals&gt;:6) (9 samples, 3.28%)</title><rect x="836" y="228" width="39" height="15" fill="rgb(224,127,32)"/><text x="839.00" y="238.50">cho..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.46%)</title><rect x="858" y="244" width="17" height="15" fill="rgb(207,117,30)"/><text x="861.00" y="254.50"></text></g><g><title>choose (numpy/core/fromnumeric.py:432) (3 samples, 1.09%)</title><rect x="862" y="260" width="13" height="15" fill="rgb(247,168,22)"/><text x="865.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.73%)</title><rect x="867" y="276" width="8" height="15" fill="rgb(246,8,53)"/><text x="870.00" y="286.50"></text></g><g><title>array_choose (methods.c:1224) (2 samples, 0.73%)</title><rect x="867" y="292" width="8" height="15" fill="rgb(217,128,14)"/><text x="870.00" y="302.50"></text></g><g><title>PyArray_Choose (item_selection.c:792) (1 samples, 0.36%)</title><rect x="871" y="308" width="4" height="15" fill="rgb(220,217,30)"/><text x="874.00" y="318.50"></text></g><g><title>arraymultiter_dealloc (iterators.c:1439) (1 samples, 0.36%)</title><rect x="871" y="324" width="4" height="15" fill="rgb(241,86,24)"/><text x="874.00" y="334.50"></text></g><g><title>0x7f75fb81bdf3 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="871" y="340" width="4" height="15" fill="rgb(254,127,10)"/><text x="874.00" y="350.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.36%)</title><rect x="888" y="276" width="4" height="15" fill="rgb(249,38,37)"/><text x="891.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:24) (5 samples, 1.82%)</title><rect x="875" y="212" width="22" height="15" fill="rgb(210,48,20)"/><text x="878.00" y="222.50">_..</text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (4 samples, 1.46%)</title><rect x="879" y="228" width="18" height="15" fill="rgb(234,200,23)"/><text x="882.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.09%)</title><rect x="884" y="244" width="13" height="15" fill="rgb(215,81,51)"/><text x="887.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (2 samples, 0.73%)</title><rect x="888" y="260" width="9" height="15" fill="rgb(251,94,32)"/><text x="891.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.36%)</title><rect x="892" y="276" width="5" height="15" fill="rgb(210,130,18)"/><text x="895.00" y="286.50"></text></g><g><title>array_swapaxes (methods.c:348) (1 samples, 0.36%)</title><rect x="892" y="292" width="5" height="15" fill="rgb(252,16,51)"/><text x="895.00" y="302.50"></text></g><g><title>PyArray_SwapAxes (shape.c:657) (1 samples, 0.36%)</title><rect x="892" y="308" width="5" height="15" fill="rgb(229,139,31)"/><text x="895.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.36%)</title><rect x="892" y="324" width="5" height="15" fill="rgb(219,58,5)"/><text x="895.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.36%)</title><rect x="892" y="340" width="5" height="15" fill="rgb(250,37,30)"/><text x="895.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.36%)</title><rect x="892" y="356" width="5" height="15" fill="rgb(248,17,42)"/><text x="895.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.36%)</title><rect x="892" y="372" width="5" height="15" fill="rgb(243,10,38)"/><text x="895.00" y="382.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (2 samples, 0.73%)</title><rect x="897" y="260" width="8" height="15" fill="rgb(232,195,21)"/><text x="900.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.73%)</title><rect x="897" y="276" width="8" height="15" fill="rgb(248,126,18)"/><text x="900.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (2 samples, 0.73%)</title><rect x="897" y="292" width="8" height="15" fill="rgb(211,9,24)"/><text x="900.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.73%)</title><rect x="897" y="308" width="8" height="15" fill="rgb(216,203,53)"/><text x="900.00" y="318.50"></text></g><g><title>array_argsort (methods.c:1395) (2 samples, 0.73%)</title><rect x="897" y="324" width="8" height="15" fill="rgb(253,100,48)"/><text x="900.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (2 samples, 0.73%)</title><rect x="897" y="340" width="8" height="15" fill="rgb(235,6,25)"/><text x="900.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1105) (2 samples, 0.73%)</title><rect x="897" y="356" width="8" height="15" fill="rgb(210,44,22)"/><text x="900.00" y="366.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.36%)</title><rect x="905" y="260" width="5" height="15" fill="rgb(232,96,9)"/><text x="908.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (1 samples, 0.36%)</title><rect x="905" y="276" width="5" height="15" fill="rgb(225,87,31)"/><text x="908.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.36%)</title><rect x="905" y="292" width="5" height="15" fill="rgb(252,168,38)"/><text x="908.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.36%)</title><rect x="905" y="308" width="5" height="15" fill="rgb(210,84,43)"/><text x="908.00" y="318.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.36%)</title><rect x="905" y="324" width="5" height="15" fill="rgb(241,46,9)"/><text x="908.00" y="334.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.36%)</title><rect x="905" y="340" width="5" height="15" fill="rgb(226,68,4)"/><text x="908.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.36%)</title><rect x="910" y="276" width="4" height="15" fill="rgb(226,212,37)"/><text x="913.00" y="286.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:312) (1 samples, 0.36%)</title><rect x="910" y="292" width="4" height="15" fill="rgb(209,36,22)"/><text x="913.00" y="302.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:38) (5 samples, 1.82%)</title><rect x="897" y="244" width="21" height="15" fill="rgb(211,40,51)"/><text x="900.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.73%)</title><rect x="910" y="260" width="8" height="15" fill="rgb(231,12,25)"/><text x="913.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.36%)</title><rect x="914" y="276" width="4" height="15" fill="rgb(214,185,47)"/><text x="917.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.36%)</title><rect x="914" y="292" width="4" height="15" fill="rgb(249,102,43)"/><text x="917.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.36%)</title><rect x="914" y="308" width="4" height="15" fill="rgb(240,141,51)"/><text x="917.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.36%)</title><rect x="914" y="324" width="4" height="15" fill="rgb(251,4,33)"/><text x="917.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.36%)</title><rect x="914" y="340" width="4" height="15" fill="rgb(248,118,24)"/><text x="917.00" y="350.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:39) (1 samples, 0.36%)</title><rect x="918" y="244" width="4" height="15" fill="rgb(239,62,51)"/><text x="921.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.36%)</title><rect x="918" y="260" width="4" height="15" fill="rgb(246,20,47)"/><text x="921.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2662) (1 samples, 0.36%)</title><rect x="918" y="276" width="4" height="15" fill="rgb(237,129,49)"/><text x="921.00" y="286.50"></text></g><g><title>mapiter_fill_info (mapping.c:2373) (1 samples, 0.36%)</title><rect x="918" y="292" width="4" height="15" fill="rgb(206,76,54)"/><text x="921.00" y="302.50"></text></g><g><title>PyArray_STRIDE (ndarraytypes.h:1516) (1 samples, 0.36%)</title><rect x="918" y="308" width="4" height="15" fill="rgb(230,182,0)"/><text x="921.00" y="318.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:75) (7 samples, 2.55%)</title><rect x="897" y="228" width="30" height="15" fill="rgb(240,212,28)"/><text x="900.00" y="238.50">_c..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:40) (1 samples, 0.36%)</title><rect x="922" y="244" width="5" height="15" fill="rgb(231,153,26)"/><text x="925.00" y="254.50"></text></g><g><title>0x7f75fb83c124 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="922" y="260" width="5" height="15" fill="rgb(244,144,51)"/><text x="925.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (33 samples, 12.04%)</title><rect x="789" y="196" width="142" height="15" fill="rgb(240,24,32)"/><text x="792.00" y="206.50">run (mlprodict/onn..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py:137) (8 samples, 2.92%)</title><rect x="897" y="212" width="34" height="15" fill="rgb(210,177,16)"/><text x="900.00" y="222.50">_r..</text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.36%)</title><rect x="927" y="228" width="4" height="15" fill="rgb(216,189,15)"/><text x="930.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.36%)</title><rect x="927" y="244" width="4" height="15" fill="rgb(250,208,41)"/><text x="930.00" y="254.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:14) (1 samples, 0.36%)</title><rect x="940" y="260" width="4" height="15" fill="rgb(230,5,18)"/><text x="943.00" y="270.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:574) (1 samples, 0.36%)</title><rect x="948" y="308" width="5" height="15" fill="rgb(208,195,49)"/><text x="951.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.36%)</title><rect x="948" y="324" width="5" height="15" fill="rgb(214,163,51)"/><text x="951.00" y="334.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:15) (3 samples, 1.09%)</title><rect x="944" y="260" width="13" height="15" fill="rgb(239,219,21)"/><text x="947.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (2 samples, 0.73%)</title><rect x="948" y="276" width="9" height="15" fill="rgb(229,83,38)"/><text x="951.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.73%)</title><rect x="948" y="292" width="9" height="15" fill="rgb(231,146,41)"/><text x="951.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:587) (1 samples, 0.36%)</title><rect x="953" y="308" width="4" height="15" fill="rgb(237,152,54)"/><text x="956.00" y="318.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.36%)</title><rect x="953" y="324" width="4" height="15" fill="rgb(210,69,50)"/><text x="956.00" y="334.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.36%)</title><rect x="953" y="340" width="4" height="15" fill="rgb(220,49,47)"/><text x="956.00" y="350.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.36%)</title><rect x="953" y="356" width="4" height="15" fill="rgb(254,180,54)"/><text x="956.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.36%)</title><rect x="953" y="372" width="4" height="15" fill="rgb(251,134,52)"/><text x="956.00" y="382.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.36%)</title><rect x="953" y="388" width="4" height="15" fill="rgb(224,180,7)"/><text x="956.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.36%)</title><rect x="953" y="404" width="4" height="15" fill="rgb(221,18,30)"/><text x="956.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.36%)</title><rect x="953" y="420" width="4" height="15" fill="rgb(235,125,45)"/><text x="956.00" y="430.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:257) (1 samples, 0.36%)</title><rect x="957" y="292" width="4" height="15" fill="rgb(220,97,10)"/><text x="960.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (8 samples, 2.92%)</title><rect x="931" y="196" width="35" height="15" fill="rgb(227,157,46)"/><text x="934.00" y="206.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (8 samples, 2.92%)</title><rect x="931" y="212" width="35" height="15" fill="rgb(231,13,30)"/><text x="934.00" y="222.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:66) (7 samples, 2.55%)</title><rect x="935" y="228" width="31" height="15" fill="rgb(217,37,22)"/><text x="938.00" y="238.50">_r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:38) (7 samples, 2.55%)</title><rect x="935" y="244" width="31" height="15" fill="rgb(241,52,48)"/><text x="938.00" y="254.50">_r..</text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:16) (2 samples, 0.73%)</title><rect x="957" y="260" width="9" height="15" fill="rgb(237,220,5)"/><text x="960.00" y="270.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.73%)</title><rect x="957" y="276" width="9" height="15" fill="rgb(236,117,11)"/><text x="960.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.36%)</title><rect x="961" y="292" width="5" height="15" fill="rgb(218,223,0)"/><text x="964.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.36%)</title><rect x="961" y="308" width="5" height="15" fill="rgb(215,228,3)"/><text x="964.00" y="318.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:38) (1 samples, 0.36%)</title><rect x="961" y="324" width="5" height="15" fill="rgb(214,227,35)"/><text x="964.00" y="334.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.36%)</title><rect x="961" y="340" width="5" height="15" fill="rgb(205,204,23)"/><text x="964.00" y="350.50"></text></g><g><title>0x7f75bc2b41cc (?) (1 samples, 0.36%)</title><rect x="966" y="244" width="4" height="15" fill="rgb(250,15,30)"/><text x="969.00" y="254.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.36%)</title><rect x="966" y="260" width="4" height="15" fill="rgb(211,45,5)"/><text x="969.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.36%)</title><rect x="966" y="276" width="4" height="15" fill="rgb(223,85,45)"/><text x="969.00" y="286.50"></text></g><g><title>0x7f75c5822ea0 (libgomp.so.1.0.0) (1 samples, 0.36%)</title><rect x="970" y="484" width="4" height="15" fill="rgb(224,81,53)"/><text x="973.00" y="494.50"></text></g><g><title>0x7f75c5822ea9 (libgomp.so.1.0.0) (10 samples, 3.65%)</title><rect x="974" y="484" width="43" height="15" fill="rgb(250,123,7)"/><text x="977.00" y="494.50">0x7f..</text></g><g><title>0x7f75c5822eab (libgomp.so.1.0.0) (11 samples, 4.01%)</title><rect x="1017" y="484" width="48" height="15" fill="rgb(247,32,43)"/><text x="1020.00" y="494.50">0x7f..</text></g><g><title>0x7f75c5821ab9 (libgomp.so.1.0.0) (27 samples, 9.85%)</title><rect x="970" y="468" width="116" height="15" fill="rgb(223,73,47)"/><text x="973.00" y="478.50">0x7f75c5821ab9..</text></g><g><title>0x7f75c5822ead (libgomp.so.1.0.0) (5 samples, 1.82%)</title><rect x="1065" y="484" width="21" height="15" fill="rgb(252,155,20)"/><text x="1068.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (29 samples, 10.58%)</title><rect x="966" y="196" width="124" height="15" fill="rgb(242,159,28)"/><text x="969.00" y="206.50">run (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (29 samples, 10.58%)</title><rect x="966" y="212" width="124" height="15" fill="rgb(220,179,28)"/><text x="969.00" y="222.50">run (mlprodict/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (29 samples, 10.58%)</title><rect x="966" y="228" width="124" height="15" fill="rgb(246,5,22)"/><text x="969.00" y="238.50">_run (mlprodict..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (28 samples, 10.22%)</title><rect x="970" y="244" width="120" height="15" fill="rgb(239,228,28)"/><text x="973.00" y="254.50">pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (28 samples, 10.22%)</title><rect x="970" y="260" width="120" height="15" fill="rgb(253,124,9)"/><text x="973.00" y="270.50">void pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (28 samples, 10.22%)</title><rect x="970" y="276" width="120" height="15" fill="rgb(243,210,46)"/><text x="973.00" y="286.50">void pybind11:..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (28 samples, 10.22%)</title><rect x="970" y="292" width="120" height="15" fill="rgb(242,159,47)"/><text x="973.00" y="302.50">pybind11::deta..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (28 samples, 10.22%)</title><rect x="970" y="308" width="120" height="15" fill="rgb(216,32,3)"/><text x="973.00" y="318.50">pybind11::deta..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (28 samples, 10.22%)</title><rect x="970" y="324" width="120" height="15" fill="rgb(237,148,25)"/><text x="973.00" y="334.50">pybind11::cpp_..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (28 samples, 10.22%)</title><rect x="970" y="340" width="120" height="15" fill="rgb(208,102,15)"/><text x="973.00" y="350.50">pybind11::arra..</text></g><g><title>pybind11::array::~array (numpy.h:538) (28 samples, 10.22%)</title><rect x="970" y="356" width="120" height="15" fill="rgb(234,108,50)"/><text x="973.00" y="366.50">pybind11::arra..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (28 samples, 10.22%)</title><rect x="970" y="372" width="120" height="15" fill="rgb(220,92,49)"/><text x="973.00" y="382.50">pybind11::buff..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (28 samples, 10.22%)</title><rect x="970" y="388" width="120" height="15" fill="rgb(236,109,33)"/><text x="973.00" y="398.50">pybind11::obje..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (28 samples, 10.22%)</title><rect x="970" y="404" width="120" height="15" fill="rgb(223,32,39)"/><text x="973.00" y="414.50">pybind11::hand..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (28 samples, 10.22%)</title><rect x="970" y="420" width="120" height="15" fill="rgb(232,199,7)"/><text x="973.00" y="430.50">RuntimeTreeEns..</text></g><g><title>pybind11::array::size (numpy.h:619) (28 samples, 10.22%)</title><rect x="970" y="436" width="120" height="15" fill="rgb(235,130,9)"/><text x="973.00" y="446.50">pybind11::arra..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (28 samples, 10.22%)</title><rect x="970" y="452" width="120" height="15" fill="rgb(247,156,44)"/><text x="973.00" y="462.50">std::accumulat..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.36%)</title><rect x="1086" y="468" width="4" height="15" fill="rgb(244,50,8)"/><text x="1089.00" y="478.50"></text></g><g><title>0x7f75c5820daa (libgomp.so.1.0.0) (1 samples, 0.36%)</title><rect x="1086" y="484" width="4" height="15" fill="rgb(229,117,11)"/><text x="1089.00" y="494.50"></text></g><g><title>0x7f75c5822cfb (libgomp.so.1.0.0) (1 samples, 0.36%)</title><rect x="1086" y="500" width="4" height="15" fill="rgb(222,220,27)"/><text x="1089.00" y="510.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.36%)</title><rect x="1095" y="244" width="4" height="15" fill="rgb(216,175,1)"/><text x="1098.00" y="254.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:412) (1 samples, 0.36%)</title><rect x="1095" y="260" width="4" height="15" fill="rgb(246,133,43)"/><text x="1098.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.36%)</title><rect x="1095" y="276" width="4" height="15" fill="rgb(207,180,16)"/><text x="1098.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.36%)</title><rect x="1095" y="292" width="4" height="15" fill="rgb(213,100,41)"/><text x="1098.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.36%)</title><rect x="1099" y="276" width="4" height="15" fill="rgb(253,196,26)"/><text x="1102.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.36%)</title><rect x="1099" y="292" width="4" height="15" fill="rgb(235,164,7)"/><text x="1102.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1871) (1 samples, 0.36%)</title><rect x="1099" y="308" width="4" height="15" fill="rgb(224,113,17)"/><text x="1102.00" y="318.50"></text></g><g><title>PyUnicode_ConcatAndDel (npy_3kcompat.h:155) (1 samples, 0.36%)</title><rect x="1099" y="324" width="4" height="15" fill="rgb(229,60,46)"/><text x="1102.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (4 samples, 1.46%)</title><rect x="1090" y="196" width="18" height="15" fill="rgb(223,137,30)"/><text x="1093.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_less.py:17) (4 samples, 1.46%)</title><rect x="1090" y="212" width="18" height="15" fill="rgb(238,132,35)"/><text x="1093.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.09%)</title><rect x="1095" y="228" width="13" height="15" fill="rgb(242,118,13)"/><text x="1098.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.73%)</title><rect x="1099" y="244" width="9" height="15" fill="rgb(211,74,21)"/><text x="1102.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.73%)</title><rect x="1099" y="260" width="9" height="15" fill="rgb(247,118,28)"/><text x="1102.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.36%)</title><rect x="1103" y="276" width="5" height="15" fill="rgb(208,187,32)"/><text x="1106.00" y="286.50"></text></g><g><title>FLOAT_less (loops.c.src:1772) (1 samples, 0.36%)</title><rect x="1103" y="292" width="5" height="15" fill="rgb(224,206,25)"/><text x="1106.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.36%)</title><rect x="1108" y="212" width="4" height="15" fill="rgb(232,190,29)"/><text x="1111.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (80 samples, 29.20%)</title><rect x="772" y="180" width="344" height="15" fill="rgb(242,156,32)"/><text x="775.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:1..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (2 samples, 0.73%)</title><rect x="1108" y="196" width="8" height="15" fill="rgb(230,162,37)"/><text x="1111.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (1 samples, 0.36%)</title><rect x="1112" y="212" width="4" height="15" fill="rgb(209,203,26)"/><text x="1115.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (1 samples, 0.36%)</title><rect x="1112" y="228" width="4" height="15" fill="rgb(216,6,13)"/><text x="1115.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.36%)</title><rect x="1112" y="244" width="4" height="15" fill="rgb(248,58,35)"/><text x="1115.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:446) (1 samples, 0.36%)</title><rect x="1112" y="260" width="4" height="15" fill="rgb(229,92,49)"/><text x="1115.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (4 samples, 1.46%)</title><rect x="1116" y="180" width="18" height="15" fill="rgb(213,163,41)"/><text x="1119.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (90 samples, 32.85%)</title><rect x="750" y="164" width="388" height="15" fill="rgb(221,78,30)"/><text x="753.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.36%)</title><rect x="1134" y="180" width="4" height="15" fill="rgb(233,36,10)"/><text x="1137.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.36%)</title><rect x="1138" y="164" width="4" height="15" fill="rgb(225,17,4)"/><text x="1141.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:61) (94 samples, 34.31%)</title><rect x="742" y="52" width="404" height="15" fill="rgb(219,149,39)"/><text x="745.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estim..</text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:60) (94 samples, 34.31%)</title><rect x="742" y="68" width="404" height="15" fill="rgb(212,172,1)"/><text x="745.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_e..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:37) (94 samples, 34.31%)</title><rect x="742" y="84" width="404" height="15" fill="rgb(250,62,46)"/><text x="745.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n_..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:31) (94 samples, 34.31%)</title><rect x="742" y="100" width="404" height="15" fill="rgb(215,148,46)"/><text x="745.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_estima..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (93 samples, 33.94%)</title><rect x="746" y="116" width="400" height="15" fill="rgb(250,135,21)"/><text x="749.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (92 samples, 33.58%)</title><rect x="750" y="132" width="396" height="15" fill="rgb(239,71,46)"/><text x="753.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:3..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (92 samples, 33.58%)</title><rect x="750" y="148" width="396" height="15" fill="rgb(225,26,27)"/><text x="753.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.36%)</title><rect x="1142" y="164" width="4" height="15" fill="rgb(209,78,0)"/><text x="1145.00" y="174.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (1 samples, 0.36%)</title><rect x="1146" y="116" width="5" height="15" fill="rgb(226,213,50)"/><text x="1149.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.36%)</title><rect x="1146" y="132" width="5" height="15" fill="rgb(218,162,37)"/><text x="1149.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.36%)</title><rect x="1146" y="148" width="5" height="15" fill="rgb(242,48,22)"/><text x="1149.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.36%)</title><rect x="1146" y="164" width="5" height="15" fill="rgb(238,169,13)"/><text x="1149.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.36%)</title><rect x="1146" y="180" width="5" height="15" fill="rgb(220,194,37)"/><text x="1149.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_regressor (mlprodict/onnx_conv/sklconv/tree_converters.py:47) (1 samples, 0.36%)</title><rect x="1146" y="196" width="5" height="15" fill="rgb(218,176,6)"/><text x="1149.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.36%)</title><rect x="1146" y="212" width="5" height="15" fill="rgb(218,87,38)"/><text x="1149.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.36%)</title><rect x="1146" y="228" width="5" height="15" fill="rgb(218,163,39)"/><text x="1149.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="1146" y="244" width="5" height="15" fill="rgb(232,106,38)"/><text x="1149.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.36%)</title><rect x="1146" y="260" width="5" height="15" fill="rgb(235,3,29)"/><text x="1149.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:94) (1 samples, 0.36%)</title><rect x="1146" y="276" width="5" height="15" fill="rgb(242,42,17)"/><text x="1149.00" y="286.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py:204) (1 samples, 0.36%)</title><rect x="1146" y="292" width="5" height="15" fill="rgb(214,225,37)"/><text x="1149.00" y="302.50"></text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:36) (2 samples, 0.73%)</title><rect x="1146" y="84" width="9" height="15" fill="rgb(228,112,23)"/><text x="1149.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.73%)</title><rect x="1146" y="100" width="9" height="15" fill="rgb(240,162,15)"/><text x="1149.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.36%)</title><rect x="1151" y="116" width="4" height="15" fill="rgb(209,30,36)"/><text x="1154.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.36%)</title><rect x="1151" y="132" width="4" height="15" fill="rgb(252,114,33)"/><text x="1154.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.36%)</title><rect x="1151" y="148" width="4" height="15" fill="rgb(215,3,54)"/><text x="1154.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (1 samples, 0.36%)</title><rect x="1151" y="164" width="4" height="15" fill="rgb(205,78,33)"/><text x="1154.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="1151" y="180" width="4" height="15" fill="rgb(222,125,3)"/><text x="1154.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="1151" y="196" width="4" height="15" fill="rgb(235,138,50)"/><text x="1154.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="1151" y="212" width="4" height="15" fill="rgb(205,39,35)"/><text x="1154.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="1151" y="228" width="4" height="15" fill="rgb(222,187,53)"/><text x="1154.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="1151" y="244" width="4" height="15" fill="rgb(227,169,3)"/><text x="1154.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (1 samples, 0.36%)</title><rect x="1151" y="260" width="4" height="15" fill="rgb(249,132,33)"/><text x="1154.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="1151" y="276" width="4" height="15" fill="rgb(217,93,27)"/><text x="1154.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="1151" y="292" width="4" height="15" fill="rgb(233,214,27)"/><text x="1154.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="1151" y="308" width="4" height="15" fill="rgb(235,40,5)"/><text x="1154.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="1151" y="324" width="4" height="15" fill="rgb(243,87,1)"/><text x="1154.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="1151" y="340" width="4" height="15" fill="rgb(233,197,12)"/><text x="1154.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (1 samples, 0.36%)</title><rect x="1151" y="356" width="4" height="15" fill="rgb(206,182,38)"/><text x="1154.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="1151" y="372" width="4" height="15" fill="rgb(254,25,53)"/><text x="1154.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="1151" y="388" width="4" height="15" fill="rgb(223,83,37)"/><text x="1154.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="1151" y="404" width="4" height="15" fill="rgb(236,140,26)"/><text x="1154.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="1151" y="420" width="4" height="15" fill="rgb(210,71,49)"/><text x="1154.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="1151" y="436" width="4" height="15" fill="rgb(232,30,22)"/><text x="1154.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (1 samples, 0.36%)</title><rect x="1151" y="452" width="4" height="15" fill="rgb(205,183,8)"/><text x="1154.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="1151" y="468" width="4" height="15" fill="rgb(219,138,20)"/><text x="1154.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="1151" y="484" width="4" height="15" fill="rgb(226,212,51)"/><text x="1154.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.36%)</title><rect x="1151" y="500" width="4" height="15" fill="rgb(216,151,25)"/><text x="1154.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.36%)</title><rect x="1151" y="516" width="4" height="15" fill="rgb(224,83,39)"/><text x="1154.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.36%)</title><rect x="1151" y="532" width="4" height="15" fill="rgb(243,94,47)"/><text x="1154.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="1151" y="548" width="4" height="15" fill="rgb(243,45,49)"/><text x="1154.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.36%)</title><rect x="1151" y="564" width="4" height="15" fill="rgb(220,73,8)"/><text x="1154.00" y="574.50"></text></g><g><title>0x7f75fbaa3995 (libdl-2.29.so) (1 samples, 0.36%)</title><rect x="1151" y="580" width="4" height="15" fill="rgb(228,136,4)"/><text x="1154.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.36%)</title><rect x="1151" y="596" width="4" height="15" fill="rgb(254,124,53)"/><text x="1154.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.36%)</title><rect x="1151" y="612" width="4" height="15" fill="rgb(238,208,29)"/><text x="1154.00" y="622.50"></text></g><g><title>0x7f75fbaa3258 (libdl-2.29.so) (1 samples, 0.36%)</title><rect x="1151" y="628" width="4" height="15" fill="rgb(218,7,39)"/><text x="1154.00" y="638.50"></text></g><g><title>0x7f75fbaf0d7a (ld-2.29.so) (1 samples, 0.36%)</title><rect x="1151" y="644" width="4" height="15" fill="rgb(242,129,39)"/><text x="1154.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.36%)</title><rect x="1151" y="660" width="4" height="15" fill="rgb(214,110,7)"/><text x="1154.00" y="670.50"></text></g><g><title>0x7f75fbaf1345 (ld-2.29.so) (1 samples, 0.36%)</title><rect x="1151" y="676" width="4" height="15" fill="rgb(238,150,30)"/><text x="1154.00" y="686.50"></text></g><g><title>0x7f75fbae9f28 (ld-2.29.so) (1 samples, 0.36%)</title><rect x="1151" y="692" width="4" height="15" fill="rgb(210,117,23)"/><text x="1154.00" y="702.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.36%)</title><rect x="1155" y="116" width="4" height="15" fill="rgb(211,124,31)"/><text x="1158.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.36%)</title><rect x="1155" y="132" width="4" height="15" fill="rgb(235,147,51)"/><text x="1158.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.36%)</title><rect x="1155" y="148" width="4" height="15" fill="rgb(239,160,13)"/><text x="1158.00" y="158.50"></text></g><g><title>0x7f75bb859ff9 (?) (1 samples, 0.36%)</title><rect x="1159" y="212" width="5" height="15" fill="rgb(219,112,12)"/><text x="1162.00" y="222.50"></text></g><g><title>0x7f75bb854ef6 (?) (1 samples, 0.36%)</title><rect x="1159" y="228" width="5" height="15" fill="rgb(224,169,29)"/><text x="1162.00" y="238.50"></text></g><g><title>0x7f75bb849962 (?) (1 samples, 0.36%)</title><rect x="1159" y="244" width="5" height="15" fill="rgb(213,121,26)"/><text x="1162.00" y="254.50"></text></g><g><title>0x7f75bb87d7a7 (?) (1 samples, 0.36%)</title><rect x="1159" y="260" width="5" height="15" fill="rgb(238,127,32)"/><text x="1162.00" y="270.50"></text></g><g><title>0x7f75bb87d379 (?) (1 samples, 0.36%)</title><rect x="1159" y="276" width="5" height="15" fill="rgb(241,17,24)"/><text x="1162.00" y="286.50"></text></g><g><title>0x7f75bbcdb8b8 (?) (1 samples, 0.36%)</title><rect x="1159" y="292" width="5" height="15" fill="rgb(249,94,4)"/><text x="1162.00" y="302.50"></text></g><g><title>0x7f75bbcd9c7f (?) (1 samples, 0.36%)</title><rect x="1159" y="308" width="5" height="15" fill="rgb(206,134,53)"/><text x="1162.00" y="318.50"></text></g><g><title>0x7f75bbcedf25 (?) (1 samples, 0.36%)</title><rect x="1159" y="324" width="5" height="15" fill="rgb(211,217,35)"/><text x="1162.00" y="334.50"></text></g><g><title>0x7f75bbc93cd9 (?) (1 samples, 0.36%)</title><rect x="1159" y="340" width="5" height="15" fill="rgb(213,11,41)"/><text x="1162.00" y="350.50"></text></g><g><title>0x7f75bbc90257 (?) (1 samples, 0.36%)</title><rect x="1159" y="356" width="5" height="15" fill="rgb(210,82,15)"/><text x="1162.00" y="366.50"></text></g><g><title>0x7f75bbc73ce8 (?) (1 samples, 0.36%)</title><rect x="1159" y="372" width="5" height="15" fill="rgb(211,199,22)"/><text x="1162.00" y="382.50"></text></g><g><title>0x7f75bbd4cef0 (?) (1 samples, 0.36%)</title><rect x="1159" y="388" width="5" height="15" fill="rgb(227,228,4)"/><text x="1162.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1164" y="292" width="4" height="15" fill="rgb(236,210,19)"/><text x="1167.00" y="302.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1164" y="308" width="4" height="15" fill="rgb(250,53,23)"/><text x="1167.00" y="318.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1168" y="340" width="4" height="15" fill="rgb(253,26,4)"/><text x="1171.00" y="350.50"></text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1168" y="356" width="4" height="15" fill="rgb(233,121,12)"/><text x="1171.00" y="366.50"></text></g><g><title>onnxruntime::extract_top_k_elements&lt;true, true, onnxruntime::GreaterValueCmp&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1168" y="372" width="4" height="15" fill="rgb(243,124,45)"/><text x="1171.00" y="382.50"></text></g><g><title>0x7f75fb9ede25 (libm-2.29.so) (1 samples, 0.36%)</title><rect x="1168" y="388" width="4" height="15" fill="rgb(244,140,28)"/><text x="1171.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.09%)</title><rect x="1164" y="276" width="13" height="15" fill="rgb(230,203,49)"/><text x="1167.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.73%)</title><rect x="1168" y="292" width="9" height="15" fill="rgb(239,79,44)"/><text x="1171.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.73%)</title><rect x="1168" y="308" width="9" height="15" fill="rgb(226,131,18)"/><text x="1171.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.73%)</title><rect x="1168" y="324" width="9" height="15" fill="rgb(218,220,26)"/><text x="1171.00" y="334.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1172" y="340" width="5" height="15" fill="rgb(227,186,28)"/><text x="1175.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1172" y="356" width="5" height="15" fill="rgb(233,68,39)"/><text x="1175.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1172" y="372" width="5" height="15" fill="rgb(244,182,35)"/><text x="1175.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1172" y="388" width="5" height="15" fill="rgb(228,49,8)"/><text x="1175.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1172" y="404" width="5" height="15" fill="rgb(210,132,3)"/><text x="1175.00" y="414.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.46%)</title><rect x="1164" y="244" width="17" height="15" fill="rgb(207,97,2)"/><text x="1167.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.46%)</title><rect x="1164" y="260" width="17" height="15" fill="rgb(250,210,14)"/><text x="1167.00" y="270.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1177" y="276" width="4" height="15" fill="rgb(236,196,47)"/><text x="1180.00" y="286.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (6 samples, 2.19%)</title><rect x="1159" y="164" width="26" height="15" fill="rgb(212,186,36)"/><text x="1162.00" y="174.50">_..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (6 samples, 2.19%)</title><rect x="1159" y="180" width="26" height="15" fill="rgb(238,216,9)"/><text x="1162.00" y="190.50">r..</text></g><g><title>run (onnxruntime/capi/session.py:136) (6 samples, 2.19%)</title><rect x="1159" y="196" width="26" height="15" fill="rgb(209,90,53)"/><text x="1162.00" y="206.50">r..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.82%)</title><rect x="1164" y="212" width="21" height="15" fill="rgb(239,144,13)"/><text x="1167.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.82%)</title><rect x="1164" y="228" width="21" height="15" fill="rgb(208,170,18)"/><text x="1167.00" y="238.50"></text></g><g><title>std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;::~vector [clone .lto_priv.576] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1181" y="244" width="4" height="15" fill="rgb(213,11,37)"/><text x="1184.00" y="254.50"></text></g><g><title>all (274 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(210,176,8)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:68) (10 samples, 3.65%)</title><rect x="1146" y="52" width="44" height="15" fill="rgb(241,64,34)"/><text x="1149.00" y="62.50">&lt;mod..</text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:67) (10 samples, 3.65%)</title><rect x="1146" y="68" width="44" height="15" fill="rgb(215,75,4)"/><text x="1149.00" y="78.50">prof..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:37) (8 samples, 2.92%)</title><rect x="1155" y="84" width="35" height="15" fill="rgb(236,144,11)"/><text x="1158.00" y="94.50">se..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:31) (8 samples, 2.92%)</title><rect x="1155" y="100" width="35" height="15" fill="rgb(224,91,25)"/><text x="1158.00" y="110.50">pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (7 samples, 2.55%)</title><rect x="1159" y="116" width="31" height="15" fill="rgb(240,29,10)"/><text x="1162.00" y="126.50">ti..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (7 samples, 2.55%)</title><rect x="1159" y="132" width="31" height="15" fill="rgb(218,36,9)"/><text x="1162.00" y="142.50">&lt;l..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (7 samples, 2.55%)</title><rect x="1159" y="148" width="31" height="15" fill="rgb(249,216,1)"/><text x="1162.00" y="158.50">ru..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.36%)</title><rect x="1185" y="164" width="5" height="15" fill="rgb(233,58,48)"/><text x="1188.00" y="174.50"></text></g></g></svg>