<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2022" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2005.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2005.00"> </text><g id="frames"><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.38%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(211,216,23)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.38%)</title><rect x="10" y="260" width="4" height="15" fill="rgb(235,152,34)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="10" y="276" width="4" height="15" fill="rgb(229,111,47)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(232,199,22)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="10" y="308" width="4" height="15" fill="rgb(221,29,6)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="10" y="324" width="4" height="15" fill="rgb(206,34,15)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="10" y="340" width="4" height="15" fill="rgb(242,17,38)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="10" y="356" width="4" height="15" fill="rgb(205,9,8)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.38%)</title><rect x="10" y="372" width="4" height="15" fill="rgb(225,53,13)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.38%)</title><rect x="10" y="388" width="4" height="15" fill="rgb(225,93,6)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="10" y="404" width="4" height="15" fill="rgb(213,57,19)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="10" y="420" width="4" height="15" fill="rgb(244,74,28)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="10" y="436" width="4" height="15" fill="rgb(216,47,6)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="10" y="452" width="4" height="15" fill="rgb(251,141,52)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="10" y="468" width="4" height="15" fill="rgb(238,29,13)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="10" y="484" width="4" height="15" fill="rgb(214,107,8)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:14) (1 samples, 0.38%)</title><rect x="10" y="500" width="4" height="15" fill="rgb(223,222,26)"/><text x="13.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.38%)</title><rect x="10" y="516" width="4" height="15" fill="rgb(219,49,12)"/><text x="13.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="10" y="532" width="4" height="15" fill="rgb(205,25,42)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="10" y="548" width="4" height="15" fill="rgb(248,116,20)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="10" y="564" width="4" height="15" fill="rgb(234,115,28)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="10" y="580" width="4" height="15" fill="rgb(244,20,26)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="10" y="596" width="4" height="15" fill="rgb(247,217,44)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="10" y="612" width="4" height="15" fill="rgb(247,223,27)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:9) (1 samples, 0.38%)</title><rect x="10" y="628" width="4" height="15" fill="rgb(222,123,21)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="10" y="644" width="4" height="15" fill="rgb(221,72,3)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.38%)</title><rect x="10" y="660" width="4" height="15" fill="rgb(206,122,15)"/><text x="13.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="10" y="676" width="4" height="15" fill="rgb(223,39,25)"/><text x="13.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="10" y="692" width="4" height="15" fill="rgb(249,136,35)"/><text x="13.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="10" y="708" width="4" height="15" fill="rgb(205,160,21)"/><text x="13.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="10" y="724" width="4" height="15" fill="rgb(206,56,2)"/><text x="13.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="10" y="740" width="4" height="15" fill="rgb(213,227,39)"/><text x="13.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="10" y="756" width="4" height="15" fill="rgb(243,122,34)"/><text x="13.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py:14) (1 samples, 0.38%)</title><rect x="10" y="772" width="4" height="15" fill="rgb(222,109,42)"/><text x="13.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.38%)</title><rect x="10" y="788" width="4" height="15" fill="rgb(210,161,22)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="10" y="804" width="4" height="15" fill="rgb(224,45,22)"/><text x="13.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="10" y="820" width="4" height="15" fill="rgb(251,183,2)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="10" y="836" width="4" height="15" fill="rgb(246,25,41)"/><text x="13.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="10" y="852" width="4" height="15" fill="rgb(207,32,22)"/><text x="13.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(215,221,3)"/><text x="13.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(246,31,28)"/><text x="13.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py:26) (1 samples, 0.38%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(207,48,1)"/><text x="13.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(237,228,36)"/><text x="13.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(219,92,0)"/><text x="13.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="10" y="948" width="4" height="15" fill="rgb(217,103,27)"/><text x="13.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="10" y="964" width="4" height="15" fill="rgb(252,60,48)"/><text x="13.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="10" y="980" width="4" height="15" fill="rgb(205,200,2)"/><text x="13.00" y="990.50"></text></g><g><title>&lt;module&gt; (pickle.py:181) (1 samples, 0.38%)</title><rect x="10" y="996" width="4" height="15" fill="rgb(226,202,11)"/><text x="13.00" y="1006.50"></text></g><g><title>0x7fe29e38476d (libc-2.29.so) (1 samples, 0.38%)</title><rect x="10" y="1012" width="4" height="15" fill="rgb(220,196,16)"/><text x="13.00" y="1022.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:1) (2 samples, 0.75%)</title><rect x="10" y="148" width="8" height="15" fill="rgb(206,3,29)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="10" y="164" width="8" height="15" fill="rgb(223,65,38)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="10" y="180" width="8" height="15" fill="rgb(233,73,26)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="10" y="196" width="8" height="15" fill="rgb(223,182,21)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="10" y="212" width="8" height="15" fill="rgb(237,21,52)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="10" y="228" width="8" height="15" fill="rgb(238,45,33)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:176) (1 samples, 0.38%)</title><rect x="14" y="244" width="4" height="15" fill="rgb(220,109,35)"/><text x="17.00" y="254.50"></text></g><g><title>filterwarnings (warnings.py:155) (1 samples, 0.38%)</title><rect x="14" y="260" width="4" height="15" fill="rgb(222,184,24)"/><text x="17.00" y="270.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.38%)</title><rect x="14" y="276" width="4" height="15" fill="rgb(249,186,30)"/><text x="17.00" y="286.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.38%)</title><rect x="14" y="292" width="4" height="15" fill="rgb(239,178,17)"/><text x="17.00" y="302.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.38%)</title><rect x="14" y="308" width="4" height="15" fill="rgb(225,19,47)"/><text x="17.00" y="318.50"></text></g><g><title>parse (sre_parse.py:922) (1 samples, 0.38%)</title><rect x="14" y="324" width="4" height="15" fill="rgb(241,60,32)"/><text x="17.00" y="334.50"></text></g><g><title>__init__ (sre_parse.py:232) (1 samples, 0.38%)</title><rect x="14" y="340" width="4" height="15" fill="rgb(214,145,47)"/><text x="17.00" y="350.50"></text></g><g><title>__next (sre_parse.py:236) (1 samples, 0.38%)</title><rect x="14" y="356" width="4" height="15" fill="rgb(215,42,4)"/><text x="17.00" y="366.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.38%)</title><rect x="14" y="372" width="4" height="15" fill="rgb(213,119,24)"/><text x="17.00" y="382.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.38%)</title><rect x="18" y="932" width="5" height="15" fill="rgb(245,139,39)"/><text x="21.00" y="942.50"></text></g><g><title>isdir (genericpath.py:42) (1 samples, 0.38%)</title><rect x="18" y="948" width="5" height="15" fill="rgb(235,154,26)"/><text x="21.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.38%)</title><rect x="18" y="964" width="5" height="15" fill="rgb(254,106,25)"/><text x="21.00" y="974.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.38%)</title><rect x="18" y="980" width="5" height="15" fill="rgb(209,205,12)"/><text x="21.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.75%)</title><rect x="18" y="852" width="9" height="15" fill="rgb(208,223,38)"/><text x="21.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.75%)</title><rect x="18" y="868" width="9" height="15" fill="rgb(214,122,39)"/><text x="21.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.75%)</title><rect x="18" y="884" width="9" height="15" fill="rgb(217,101,0)"/><text x="21.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.75%)</title><rect x="18" y="900" width="9" height="15" fill="rgb(252,203,41)"/><text x="21.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.75%)</title><rect x="18" y="916" width="9" height="15" fill="rgb(206,65,19)"/><text x="21.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.38%)</title><rect x="23" y="932" width="4" height="15" fill="rgb(239,9,41)"/><text x="26.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.38%)</title><rect x="23" y="948" width="4" height="15" fill="rgb(229,60,13)"/><text x="26.00" y="958.50"></text></g><g><title>0x7fe29e2e4fda (libc-2.29.so) (1 samples, 0.38%)</title><rect x="23" y="964" width="4" height="15" fill="rgb(207,217,31)"/><text x="26.00" y="974.50"></text></g><g><title>0x7fe29e2e4ed7 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="23" y="980" width="4" height="15" fill="rgb(240,99,5)"/><text x="26.00" y="990.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="23" y="996" width="4" height="15" fill="rgb(219,9,35)"/><text x="26.00" y="1006.50"></text></g><g><title>0x7fe29e2a7463 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="23" y="1012" width="4" height="15" fill="rgb(215,167,23)"/><text x="26.00" y="1022.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 1.13%)</title><rect x="18" y="388" width="14" height="15" fill="rgb(238,115,26)"/><text x="21.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.13%)</title><rect x="18" y="404" width="14" height="15" fill="rgb(228,191,9)"/><text x="21.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.13%)</title><rect x="18" y="420" width="14" height="15" fill="rgb(230,180,29)"/><text x="21.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.13%)</title><rect x="18" y="436" width="14" height="15" fill="rgb(244,80,47)"/><text x="21.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.13%)</title><rect x="18" y="452" width="14" height="15" fill="rgb(247,197,40)"/><text x="21.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.13%)</title><rect x="18" y="468" width="14" height="15" fill="rgb(218,205,54)"/><text x="21.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 1.13%)</title><rect x="18" y="484" width="14" height="15" fill="rgb(222,127,38)"/><text x="21.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.13%)</title><rect x="18" y="500" width="14" height="15" fill="rgb(246,81,2)"/><text x="21.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.13%)</title><rect x="18" y="516" width="14" height="15" fill="rgb(238,130,8)"/><text x="21.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.13%)</title><rect x="18" y="532" width="14" height="15" fill="rgb(243,21,32)"/><text x="21.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.13%)</title><rect x="18" y="548" width="14" height="15" fill="rgb(250,53,41)"/><text x="21.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.13%)</title><rect x="18" y="564" width="14" height="15" fill="rgb(211,93,51)"/><text x="21.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 1.13%)</title><rect x="18" y="580" width="14" height="15" fill="rgb(217,58,31)"/><text x="21.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.13%)</title><rect x="18" y="596" width="14" height="15" fill="rgb(243,99,6)"/><text x="21.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.13%)</title><rect x="18" y="612" width="14" height="15" fill="rgb(219,23,2)"/><text x="21.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.13%)</title><rect x="18" y="628" width="14" height="15" fill="rgb(217,100,8)"/><text x="21.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.13%)</title><rect x="18" y="644" width="14" height="15" fill="rgb(222,90,8)"/><text x="21.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.13%)</title><rect x="18" y="660" width="14" height="15" fill="rgb(226,213,47)"/><text x="21.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.13%)</title><rect x="18" y="676" width="14" height="15" fill="rgb(241,3,32)"/><text x="21.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.13%)</title><rect x="18" y="692" width="14" height="15" fill="rgb(245,148,9)"/><text x="21.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.13%)</title><rect x="18" y="708" width="14" height="15" fill="rgb(237,113,14)"/><text x="21.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 1.13%)</title><rect x="18" y="724" width="14" height="15" fill="rgb(249,44,35)"/><text x="21.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.13%)</title><rect x="18" y="740" width="14" height="15" fill="rgb(248,77,27)"/><text x="21.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.13%)</title><rect x="18" y="756" width="14" height="15" fill="rgb(206,178,40)"/><text x="21.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.13%)</title><rect x="18" y="772" width="14" height="15" fill="rgb(231,7,4)"/><text x="21.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.13%)</title><rect x="18" y="788" width="14" height="15" fill="rgb(226,204,36)"/><text x="21.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.13%)</title><rect x="18" y="804" width="14" height="15" fill="rgb(225,107,1)"/><text x="21.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 1.13%)</title><rect x="18" y="820" width="14" height="15" fill="rgb(226,144,18)"/><text x="21.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 1.13%)</title><rect x="18" y="836" width="14" height="15" fill="rgb(207,21,48)"/><text x="21.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.38%)</title><rect x="27" y="852" width="5" height="15" fill="rgb(243,227,7)"/><text x="30.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.38%)</title><rect x="27" y="868" width="5" height="15" fill="rgb(235,134,48)"/><text x="30.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.38%)</title><rect x="27" y="884" width="5" height="15" fill="rgb(231,32,50)"/><text x="30.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.38%)</title><rect x="27" y="900" width="5" height="15" fill="rgb(223,154,45)"/><text x="30.00" y="910.50"></text></g><g><title>isdir (genericpath.py:42) (1 samples, 0.38%)</title><rect x="27" y="916" width="5" height="15" fill="rgb(247,227,53)"/><text x="30.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:2) (4 samples, 1.50%)</title><rect x="18" y="148" width="18" height="15" fill="rgb(244,71,42)"/><text x="21.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.50%)</title><rect x="18" y="164" width="18" height="15" fill="rgb(230,115,51)"/><text x="21.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.50%)</title><rect x="18" y="180" width="18" height="15" fill="rgb(208,33,40)"/><text x="21.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.50%)</title><rect x="18" y="196" width="18" height="15" fill="rgb(213,176,30)"/><text x="21.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.50%)</title><rect x="18" y="212" width="18" height="15" fill="rgb(219,63,3)"/><text x="21.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.50%)</title><rect x="18" y="228" width="18" height="15" fill="rgb(230,149,15)"/><text x="21.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.50%)</title><rect x="18" y="244" width="18" height="15" fill="rgb(226,229,27)"/><text x="21.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.50%)</title><rect x="18" y="260" width="18" height="15" fill="rgb(245,80,2)"/><text x="21.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.50%)</title><rect x="18" y="276" width="18" height="15" fill="rgb(226,126,52)"/><text x="21.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.50%)</title><rect x="18" y="292" width="18" height="15" fill="rgb(242,77,20)"/><text x="21.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.50%)</title><rect x="18" y="308" width="18" height="15" fill="rgb(214,221,17)"/><text x="21.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.50%)</title><rect x="18" y="324" width="18" height="15" fill="rgb(236,110,28)"/><text x="21.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.50%)</title><rect x="18" y="340" width="18" height="15" fill="rgb(236,225,24)"/><text x="21.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.50%)</title><rect x="18" y="356" width="18" height="15" fill="rgb(206,151,44)"/><text x="21.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.50%)</title><rect x="18" y="372" width="18" height="15" fill="rgb(246,5,12)"/><text x="21.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:6) (1 samples, 0.38%)</title><rect x="32" y="388" width="4" height="15" fill="rgb(245,66,46)"/><text x="35.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="32" y="404" width="4" height="15" fill="rgb(228,90,20)"/><text x="35.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="32" y="420" width="4" height="15" fill="rgb(242,180,19)"/><text x="35.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="32" y="436" width="4" height="15" fill="rgb(220,23,38)"/><text x="35.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="32" y="452" width="4" height="15" fill="rgb(223,143,26)"/><text x="35.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="32" y="468" width="4" height="15" fill="rgb(230,20,0)"/><text x="35.00" y="478.50"></text></g><g><title>&lt;module&gt; (uuid.py:556) (1 samples, 0.38%)</title><rect x="32" y="484" width="4" height="15" fill="rgb(219,44,0)"/><text x="35.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="32" y="500" width="4" height="15" fill="rgb(230,123,40)"/><text x="35.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="32" y="516" width="4" height="15" fill="rgb(234,100,53)"/><text x="35.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.38%)</title><rect x="32" y="532" width="4" height="15" fill="rgb(243,110,54)"/><text x="35.00" y="542.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.38%)</title><rect x="32" y="548" width="4" height="15" fill="rgb(249,176,40)"/><text x="35.00" y="558.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.38%)</title><rect x="32" y="564" width="4" height="15" fill="rgb(237,91,30)"/><text x="35.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="32" y="580" width="4" height="15" fill="rgb(211,167,39)"/><text x="35.00" y="590.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.38%)</title><rect x="32" y="596" width="4" height="15" fill="rgb(229,211,6)"/><text x="35.00" y="606.50"></text></g><g><title>0x7fe29e52d995 (libdl-2.29.so) (1 samples, 0.38%)</title><rect x="32" y="612" width="4" height="15" fill="rgb(214,154,27)"/><text x="35.00" y="622.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.38%)</title><rect x="32" y="628" width="4" height="15" fill="rgb(216,220,12)"/><text x="35.00" y="638.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.38%)</title><rect x="32" y="644" width="4" height="15" fill="rgb(250,80,52)"/><text x="35.00" y="654.50"></text></g><g><title>0x7fe29e52d258 (libdl-2.29.so) (1 samples, 0.38%)</title><rect x="32" y="660" width="4" height="15" fill="rgb(238,40,26)"/><text x="35.00" y="670.50"></text></g><g><title>0x7fe29e57ad7a (ld-2.29.so) (1 samples, 0.38%)</title><rect x="32" y="676" width="4" height="15" fill="rgb(227,198,7)"/><text x="35.00" y="686.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.38%)</title><rect x="32" y="692" width="4" height="15" fill="rgb(238,120,21)"/><text x="35.00" y="702.50"></text></g><g><title>0x7fe29e57b143 (ld-2.29.so) (1 samples, 0.38%)</title><rect x="32" y="708" width="4" height="15" fill="rgb(228,184,43)"/><text x="35.00" y="718.50"></text></g><g><title>_dl_find_dso_for_object (ld-2.29.so) (1 samples, 0.38%)</title><rect x="32" y="724" width="4" height="15" fill="rgb(246,105,7)"/><text x="35.00" y="734.50"></text></g><g><title>0x7fe29e5826ec (ld-2.29.so) (1 samples, 0.38%)</title><rect x="32" y="740" width="4" height="15" fill="rgb(242,89,21)"/><text x="35.00" y="750.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:4) (1 samples, 0.38%)</title><rect x="36" y="148" width="5" height="15" fill="rgb(206,217,49)"/><text x="39.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="36" y="164" width="5" height="15" fill="rgb(239,98,8)"/><text x="39.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="36" y="180" width="5" height="15" fill="rgb(254,11,22)"/><text x="39.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="36" y="196" width="5" height="15" fill="rgb(236,222,22)"/><text x="39.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="36" y="212" width="5" height="15" fill="rgb(212,126,1)"/><text x="39.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="36" y="228" width="5" height="15" fill="rgb(212,210,16)"/><text x="39.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:7) (1 samples, 0.38%)</title><rect x="36" y="244" width="5" height="15" fill="rgb(253,156,23)"/><text x="39.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="36" y="260" width="5" height="15" fill="rgb(207,66,49)"/><text x="39.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="36" y="276" width="5" height="15" fill="rgb(219,122,51)"/><text x="39.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="36" y="292" width="5" height="15" fill="rgb(217,12,22)"/><text x="39.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="36" y="308" width="5" height="15" fill="rgb(237,91,3)"/><text x="39.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="36" y="324" width="5" height="15" fill="rgb(222,157,11)"/><text x="39.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py:56) (1 samples, 0.38%)</title><rect x="36" y="340" width="5" height="15" fill="rgb(211,189,11)"/><text x="39.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="36" y="356" width="5" height="15" fill="rgb(224,126,54)"/><text x="39.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="36" y="372" width="5" height="15" fill="rgb(206,70,10)"/><text x="39.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="36" y="388" width="5" height="15" fill="rgb(254,14,14)"/><text x="39.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="36" y="404" width="5" height="15" fill="rgb(224,151,19)"/><text x="39.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="36" y="420" width="5" height="15" fill="rgb(242,45,51)"/><text x="39.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py:6) (1 samples, 0.38%)</title><rect x="36" y="436" width="5" height="15" fill="rgb(249,53,31)"/><text x="39.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="36" y="452" width="5" height="15" fill="rgb(226,136,31)"/><text x="39.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="36" y="468" width="5" height="15" fill="rgb(206,104,21)"/><text x="39.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="36" y="484" width="5" height="15" fill="rgb(224,72,50)"/><text x="39.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="36" y="500" width="5" height="15" fill="rgb(218,225,10)"/><text x="39.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="36" y="516" width="5" height="15" fill="rgb(237,124,2)"/><text x="39.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py:40) (1 samples, 0.38%)</title><rect x="36" y="532" width="5" height="15" fill="rgb(240,156,51)"/><text x="39.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="36" y="548" width="5" height="15" fill="rgb(229,185,33)"/><text x="39.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="36" y="564" width="5" height="15" fill="rgb(210,98,17)"/><text x="39.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="36" y="580" width="5" height="15" fill="rgb(237,174,33)"/><text x="39.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.38%)</title><rect x="36" y="596" width="5" height="15" fill="rgb(237,84,33)"/><text x="39.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="36" y="612" width="5" height="15" fill="rgb(223,11,29)"/><text x="39.00" y="622.50"></text></g><g><title>0x7fe27816c373 (?) (1 samples, 0.38%)</title><rect x="36" y="628" width="5" height="15" fill="rgb(241,26,30)"/><text x="39.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="36" y="644" width="5" height="15" fill="rgb(245,49,30)"/><text x="39.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="36" y="660" width="5" height="15" fill="rgb(231,0,0)"/><text x="39.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="36" y="676" width="5" height="15" fill="rgb(208,71,19)"/><text x="39.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.38%)</title><rect x="36" y="692" width="5" height="15" fill="rgb(222,120,49)"/><text x="39.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="36" y="708" width="5" height="15" fill="rgb(239,220,51)"/><text x="39.00" y="718.50"></text></g><g><title>0x7fe277f2feea (?) (1 samples, 0.38%)</title><rect x="36" y="724" width="5" height="15" fill="rgb(219,129,19)"/><text x="39.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="36" y="740" width="5" height="15" fill="rgb(254,145,49)"/><text x="39.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="36" y="756" width="5" height="15" fill="rgb(212,43,18)"/><text x="39.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="36" y="772" width="5" height="15" fill="rgb(239,73,37)"/><text x="39.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.38%)</title><rect x="36" y="788" width="5" height="15" fill="rgb(250,191,9)"/><text x="39.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="36" y="804" width="5" height="15" fill="rgb(225,129,25)"/><text x="39.00" y="814.50"></text></g><g><title>0x7fe277cc8887 (?) (1 samples, 0.38%)</title><rect x="36" y="820" width="5" height="15" fill="rgb(207,155,12)"/><text x="39.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="36" y="836" width="5" height="15" fill="rgb(227,38,14)"/><text x="39.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.38%)</title><rect x="36" y="852" width="5" height="15" fill="rgb(219,138,37)"/><text x="39.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="36" y="868" width="5" height="15" fill="rgb(210,128,9)"/><text x="39.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="36" y="884" width="5" height="15" fill="rgb(254,30,18)"/><text x="39.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="36" y="900" width="5" height="15" fill="rgb(235,119,4)"/><text x="39.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="36" y="916" width="5" height="15" fill="rgb(249,57,46)"/><text x="39.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="36" y="932" width="5" height="15" fill="rgb(241,160,4)"/><text x="39.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="36" y="948" width="5" height="15" fill="rgb(228,61,39)"/><text x="39.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:17) (1 samples, 0.38%)</title><rect x="36" y="964" width="5" height="15" fill="rgb(215,93,35)"/><text x="39.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="36" y="980" width="5" height="15" fill="rgb(217,30,39)"/><text x="39.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="36" y="996" width="5" height="15" fill="rgb(208,208,31)"/><text x="39.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="36" y="1012" width="5" height="15" fill="rgb(214,126,1)"/><text x="39.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="36" y="1028" width="5" height="15" fill="rgb(237,42,14)"/><text x="39.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="36" y="1044" width="5" height="15" fill="rgb(229,123,44)"/><text x="39.00" y="1054.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py:22) (1 samples, 0.38%)</title><rect x="36" y="1060" width="5" height="15" fill="rgb(233,197,25)"/><text x="39.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="36" y="1076" width="5" height="15" fill="rgb(213,51,25)"/><text x="39.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="36" y="1092" width="5" height="15" fill="rgb(240,179,12)"/><text x="39.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="36" y="1108" width="5" height="15" fill="rgb(217,79,21)"/><text x="39.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="36" y="1124" width="5" height="15" fill="rgb(215,208,9)"/><text x="39.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="36" y="1140" width="5" height="15" fill="rgb(237,200,16)"/><text x="39.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py:11) (1 samples, 0.38%)</title><rect x="36" y="1156" width="5" height="15" fill="rgb(226,87,45)"/><text x="39.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="36" y="1172" width="5" height="15" fill="rgb(221,84,45)"/><text x="39.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="36" y="1188" width="5" height="15" fill="rgb(237,226,30)"/><text x="39.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="36" y="1204" width="5" height="15" fill="rgb(244,85,2)"/><text x="39.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="36" y="1220" width="5" height="15" fill="rgb(210,64,27)"/><text x="39.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="36" y="1236" width="5" height="15" fill="rgb(237,71,27)"/><text x="39.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py:11) (1 samples, 0.38%)</title><rect x="36" y="1252" width="5" height="15" fill="rgb(236,96,36)"/><text x="39.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="36" y="1268" width="5" height="15" fill="rgb(217,220,28)"/><text x="39.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="36" y="1284" width="5" height="15" fill="rgb(212,125,11)"/><text x="39.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="36" y="1300" width="5" height="15" fill="rgb(234,98,37)"/><text x="39.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="36" y="1316" width="5" height="15" fill="rgb(246,54,50)"/><text x="39.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="36" y="1332" width="5" height="15" fill="rgb(231,25,32)"/><text x="39.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:12) (1 samples, 0.38%)</title><rect x="36" y="1348" width="5" height="15" fill="rgb(236,64,33)"/><text x="39.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="36" y="1364" width="5" height="15" fill="rgb(206,71,19)"/><text x="39.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="36" y="1380" width="5" height="15" fill="rgb(230,127,53)"/><text x="39.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="36" y="1396" width="5" height="15" fill="rgb(253,229,27)"/><text x="39.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="36" y="1412" width="5" height="15" fill="rgb(208,8,24)"/><text x="39.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="36" y="1428" width="5" height="15" fill="rgb(216,163,19)"/><text x="39.00" y="1438.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_least_angle.py:22) (1 samples, 0.38%)</title><rect x="36" y="1444" width="5" height="15" fill="rgb(231,58,15)"/><text x="39.00" y="1454.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.38%)</title><rect x="36" y="1460" width="5" height="15" fill="rgb(205,123,49)"/><text x="39.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="36" y="1476" width="5" height="15" fill="rgb(250,56,25)"/><text x="39.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="36" y="1492" width="5" height="15" fill="rgb(226,75,43)"/><text x="39.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="36" y="1508" width="5" height="15" fill="rgb(236,48,15)"/><text x="39.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="36" y="1524" width="5" height="15" fill="rgb(216,87,24)"/><text x="39.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.38%)</title><rect x="36" y="1540" width="5" height="15" fill="rgb(235,137,27)"/><text x="39.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="36" y="1556" width="5" height="15" fill="rgb(237,17,32)"/><text x="39.00" y="1566.50"></text></g><g><title>0x7fe276a586c1 (?) (1 samples, 0.38%)</title><rect x="36" y="1572" width="5" height="15" fill="rgb(246,95,4)"/><text x="39.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="36" y="1588" width="5" height="15" fill="rgb(231,58,49)"/><text x="39.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="36" y="1604" width="5" height="15" fill="rgb(250,7,25)"/><text x="39.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="36" y="1620" width="5" height="15" fill="rgb(208,42,37)"/><text x="39.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.38%)</title><rect x="36" y="1636" width="5" height="15" fill="rgb(237,85,20)"/><text x="39.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="36" y="1652" width="5" height="15" fill="rgb(227,17,5)"/><text x="39.00" y="1662.50"></text></g><g><title>0x7fe2767f1957 (?) (1 samples, 0.38%)</title><rect x="36" y="1668" width="5" height="15" fill="rgb(227,218,39)"/><text x="39.00" y="1678.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.38%)</title><rect x="41" y="244" width="4" height="15" fill="rgb(238,151,34)"/><text x="44.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="41" y="260" width="4" height="15" fill="rgb(243,163,22)"/><text x="44.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="41" y="276" width="4" height="15" fill="rgb(214,67,7)"/><text x="44.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="41" y="292" width="4" height="15" fill="rgb(215,119,47)"/><text x="44.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="41" y="308" width="4" height="15" fill="rgb(240,35,54)"/><text x="44.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="41" y="324" width="4" height="15" fill="rgb(219,73,22)"/><text x="44.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.38%)</title><rect x="41" y="340" width="4" height="15" fill="rgb(225,21,39)"/><text x="44.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="41" y="356" width="4" height="15" fill="rgb(246,180,19)"/><text x="44.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.38%)</title><rect x="41" y="372" width="4" height="15" fill="rgb(249,28,38)"/><text x="44.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="41" y="388" width="4" height="15" fill="rgb(251,6,18)"/><text x="44.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="41" y="404" width="4" height="15" fill="rgb(207,58,13)"/><text x="44.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="41" y="420" width="4" height="15" fill="rgb(225,223,6)"/><text x="44.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="41" y="436" width="4" height="15" fill="rgb(208,202,9)"/><text x="44.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="41" y="452" width="4" height="15" fill="rgb(249,208,6)"/><text x="44.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="41" y="468" width="4" height="15" fill="rgb(234,71,14)"/><text x="44.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.38%)</title><rect x="41" y="484" width="4" height="15" fill="rgb(219,194,40)"/><text x="44.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="41" y="500" width="4" height="15" fill="rgb(213,92,5)"/><text x="44.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="41" y="516" width="4" height="15" fill="rgb(245,12,16)"/><text x="44.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="41" y="532" width="4" height="15" fill="rgb(231,66,36)"/><text x="44.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="41" y="548" width="4" height="15" fill="rgb(206,196,0)"/><text x="44.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="41" y="564" width="4" height="15" fill="rgb(217,63,30)"/><text x="44.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.38%)</title><rect x="41" y="580" width="4" height="15" fill="rgb(223,174,47)"/><text x="44.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="41" y="596" width="4" height="15" fill="rgb(221,86,10)"/><text x="44.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.38%)</title><rect x="41" y="612" width="4" height="15" fill="rgb(223,69,12)"/><text x="44.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="41" y="628" width="4" height="15" fill="rgb(236,109,49)"/><text x="44.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="41" y="644" width="4" height="15" fill="rgb(226,100,14)"/><text x="44.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="41" y="660" width="4" height="15" fill="rgb(215,134,51)"/><text x="44.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="41" y="676" width="4" height="15" fill="rgb(242,73,2)"/><text x="44.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="41" y="692" width="4" height="15" fill="rgb(211,67,40)"/><text x="44.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="41" y="708" width="4" height="15" fill="rgb(249,45,7)"/><text x="44.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.38%)</title><rect x="41" y="724" width="4" height="15" fill="rgb(236,191,40)"/><text x="44.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="41" y="740" width="4" height="15" fill="rgb(205,224,22)"/><text x="44.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="41" y="756" width="4" height="15" fill="rgb(254,184,11)"/><text x="44.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="41" y="772" width="4" height="15" fill="rgb(222,221,6)"/><text x="44.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="41" y="788" width="4" height="15" fill="rgb(217,117,3)"/><text x="44.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="41" y="804" width="4" height="15" fill="rgb(242,208,21)"/><text x="44.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.38%)</title><rect x="41" y="820" width="4" height="15" fill="rgb(238,85,11)"/><text x="44.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="41" y="836" width="4" height="15" fill="rgb(217,167,15)"/><text x="44.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="41" y="852" width="4" height="15" fill="rgb(230,126,33)"/><text x="44.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="41" y="868" width="4" height="15" fill="rgb(234,153,9)"/><text x="44.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="41" y="884" width="4" height="15" fill="rgb(237,88,3)"/><text x="44.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="41" y="900" width="4" height="15" fill="rgb(249,202,9)"/><text x="44.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.38%)</title><rect x="41" y="916" width="4" height="15" fill="rgb(209,124,52)"/><text x="44.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="41" y="932" width="4" height="15" fill="rgb(233,35,2)"/><text x="44.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.38%)</title><rect x="41" y="948" width="4" height="15" fill="rgb(254,156,48)"/><text x="44.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="41" y="964" width="4" height="15" fill="rgb(243,52,0)"/><text x="44.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="41" y="980" width="4" height="15" fill="rgb(207,197,43)"/><text x="44.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="41" y="996" width="4" height="15" fill="rgb(213,227,17)"/><text x="44.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="41" y="1012" width="4" height="15" fill="rgb(227,154,0)"/><text x="44.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="41" y="1028" width="4" height="15" fill="rgb(228,215,12)"/><text x="44.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="41" y="1044" width="4" height="15" fill="rgb(233,108,51)"/><text x="44.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:11) (1 samples, 0.38%)</title><rect x="41" y="1060" width="4" height="15" fill="rgb(251,113,8)"/><text x="44.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="41" y="1076" width="4" height="15" fill="rgb(240,95,44)"/><text x="44.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="41" y="1092" width="4" height="15" fill="rgb(219,102,3)"/><text x="44.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="41" y="1108" width="4" height="15" fill="rgb(223,226,49)"/><text x="44.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="41" y="1124" width="4" height="15" fill="rgb(240,40,44)"/><text x="44.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="41" y="1140" width="4" height="15" fill="rgb(212,198,12)"/><text x="44.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py:6) (1 samples, 0.38%)</title><rect x="41" y="1156" width="4" height="15" fill="rgb(230,147,11)"/><text x="44.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="41" y="1172" width="4" height="15" fill="rgb(210,111,46)"/><text x="44.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="41" y="1188" width="4" height="15" fill="rgb(236,184,30)"/><text x="44.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="41" y="1204" width="4" height="15" fill="rgb(241,12,4)"/><text x="44.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.38%)</title><rect x="41" y="1220" width="4" height="15" fill="rgb(214,198,54)"/><text x="44.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.38%)</title><rect x="41" y="1236" width="4" height="15" fill="rgb(216,176,8)"/><text x="44.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.38%)</title><rect x="41" y="1252" width="4" height="15" fill="rgb(209,107,28)"/><text x="44.00" y="1262.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.38%)</title><rect x="45" y="1492" width="4" height="15" fill="rgb(220,178,6)"/><text x="48.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="45" y="1508" width="4" height="15" fill="rgb(235,126,14)"/><text x="48.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="45" y="1524" width="4" height="15" fill="rgb(212,225,20)"/><text x="48.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="45" y="1540" width="4" height="15" fill="rgb(239,131,28)"/><text x="48.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="45" y="1556" width="4" height="15" fill="rgb(232,5,21)"/><text x="48.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="45" y="1572" width="4" height="15" fill="rgb(252,6,16)"/><text x="48.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:33) (1 samples, 0.38%)</title><rect x="45" y="1588" width="4" height="15" fill="rgb(205,202,24)"/><text x="48.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="45" y="1604" width="4" height="15" fill="rgb(233,191,37)"/><text x="48.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="45" y="1620" width="4" height="15" fill="rgb(226,41,47)"/><text x="48.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="45" y="1636" width="4" height="15" fill="rgb(230,81,40)"/><text x="48.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="45" y="1652" width="4" height="15" fill="rgb(227,13,16)"/><text x="48.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="45" y="1668" width="4" height="15" fill="rgb(208,76,44)"/><text x="48.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py:4) (1 samples, 0.38%)</title><rect x="45" y="1684" width="4" height="15" fill="rgb(226,197,12)"/><text x="48.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="45" y="1700" width="4" height="15" fill="rgb(248,45,44)"/><text x="48.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="45" y="1716" width="4" height="15" fill="rgb(214,177,53)"/><text x="48.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="45" y="1732" width="4" height="15" fill="rgb(231,64,31)"/><text x="48.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="45" y="1748" width="4" height="15" fill="rgb(207,212,38)"/><text x="48.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="45" y="1764" width="4" height="15" fill="rgb(237,21,5)"/><text x="48.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py:106) (1 samples, 0.38%)</title><rect x="45" y="1780" width="4" height="15" fill="rgb(244,4,51)"/><text x="48.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py:93) (1 samples, 0.38%)</title><rect x="45" y="1796" width="4" height="15" fill="rgb(216,1,50)"/><text x="48.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py:743) (1 samples, 0.38%)</title><rect x="45" y="1812" width="4" height="15" fill="rgb(220,226,8)"/><text x="48.00" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.38%)</title><rect x="49" y="1524" width="5" height="15" fill="rgb(242,149,32)"/><text x="52.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="49" y="1540" width="5" height="15" fill="rgb(220,160,1)"/><text x="52.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="49" y="1556" width="5" height="15" fill="rgb(215,44,29)"/><text x="52.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="49" y="1572" width="5" height="15" fill="rgb(216,58,0)"/><text x="52.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="49" y="1588" width="5" height="15" fill="rgb(214,172,9)"/><text x="52.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="49" y="1604" width="5" height="15" fill="rgb(223,41,31)"/><text x="52.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="49" y="1620" width="5" height="15" fill="rgb(220,100,42)"/><text x="52.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.38%)</title><rect x="49" y="1636" width="5" height="15" fill="rgb(224,60,12)"/><text x="52.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.38%)</title><rect x="49" y="1652" width="5" height="15" fill="rgb(207,189,52)"/><text x="52.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="49" y="1668" width="5" height="15" fill="rgb(244,11,26)"/><text x="52.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="49" y="1684" width="5" height="15" fill="rgb(234,87,15)"/><text x="52.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="49" y="1700" width="5" height="15" fill="rgb(230,163,31)"/><text x="52.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="49" y="1716" width="5" height="15" fill="rgb(250,212,20)"/><text x="52.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="49" y="1732" width="5" height="15" fill="rgb(249,58,18)"/><text x="52.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="49" y="1748" width="5" height="15" fill="rgb(219,18,29)"/><text x="52.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.38%)</title><rect x="49" y="1764" width="5" height="15" fill="rgb(241,30,53)"/><text x="52.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="49" y="1780" width="5" height="15" fill="rgb(207,168,45)"/><text x="52.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="49" y="1796" width="5" height="15" fill="rgb(205,1,12)"/><text x="52.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="49" y="1812" width="5" height="15" fill="rgb(217,0,11)"/><text x="52.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="49" y="1828" width="5" height="15" fill="rgb(232,226,31)"/><text x="52.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="49" y="1844" width="5" height="15" fill="rgb(253,107,4)"/><text x="52.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:27) (1 samples, 0.38%)</title><rect x="49" y="1860" width="5" height="15" fill="rgb(252,52,24)"/><text x="52.00" y="1870.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.38%)</title><rect x="49" y="1876" width="5" height="15" fill="rgb(210,68,17)"/><text x="52.00" y="1886.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.38%)</title><rect x="49" y="1892" width="5" height="15" fill="rgb(216,56,38)"/><text x="52.00" y="1902.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.38%)</title><rect x="49" y="1908" width="5" height="15" fill="rgb(208,145,50)"/><text x="52.00" y="1918.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.38%)</title><rect x="49" y="1924" width="5" height="15" fill="rgb(231,122,37)"/><text x="52.00" y="1934.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.38%)</title><rect x="49" y="1940" width="5" height="15" fill="rgb(214,135,7)"/><text x="52.00" y="1950.50"></text></g><g><title>_compile (sre_compile.py:120) (1 samples, 0.38%)</title><rect x="49" y="1956" width="5" height="15" fill="rgb(235,85,2)"/><text x="52.00" y="1966.50"></text></g><g><title>_optimize_charset (sre_compile.py:347) (1 samples, 0.38%)</title><rect x="49" y="1972" width="5" height="15" fill="rgb(249,194,10)"/><text x="52.00" y="1982.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 1.13%)</title><rect x="45" y="724" width="13" height="15" fill="rgb(209,199,4)"/><text x="48.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.13%)</title><rect x="45" y="740" width="13" height="15" fill="rgb(211,199,7)"/><text x="48.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.13%)</title><rect x="45" y="756" width="13" height="15" fill="rgb(239,26,9)"/><text x="48.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.13%)</title><rect x="45" y="772" width="13" height="15" fill="rgb(253,201,17)"/><text x="48.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.13%)</title><rect x="45" y="788" width="13" height="15" fill="rgb(253,59,13)"/><text x="48.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.13%)</title><rect x="45" y="804" width="13" height="15" fill="rgb(235,40,7)"/><text x="48.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 1.13%)</title><rect x="45" y="820" width="13" height="15" fill="rgb(241,207,23)"/><text x="48.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.13%)</title><rect x="45" y="836" width="13" height="15" fill="rgb(229,144,16)"/><text x="48.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.13%)</title><rect x="45" y="852" width="13" height="15" fill="rgb(207,88,40)"/><text x="48.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.13%)</title><rect x="45" y="868" width="13" height="15" fill="rgb(233,199,13)"/><text x="48.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.13%)</title><rect x="45" y="884" width="13" height="15" fill="rgb(242,21,37)"/><text x="48.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.13%)</title><rect x="45" y="900" width="13" height="15" fill="rgb(249,204,40)"/><text x="48.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 1.13%)</title><rect x="45" y="916" width="13" height="15" fill="rgb(228,73,24)"/><text x="48.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.13%)</title><rect x="45" y="932" width="13" height="15" fill="rgb(236,136,54)"/><text x="48.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.13%)</title><rect x="45" y="948" width="13" height="15" fill="rgb(225,80,36)"/><text x="48.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.13%)</title><rect x="45" y="964" width="13" height="15" fill="rgb(220,182,52)"/><text x="48.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.13%)</title><rect x="45" y="980" width="13" height="15" fill="rgb(207,161,17)"/><text x="48.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.13%)</title><rect x="45" y="996" width="13" height="15" fill="rgb(230,225,33)"/><text x="48.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (3 samples, 1.13%)</title><rect x="45" y="1012" width="13" height="15" fill="rgb(237,217,49)"/><text x="48.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.13%)</title><rect x="45" y="1028" width="13" height="15" fill="rgb(218,201,28)"/><text x="48.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.13%)</title><rect x="45" y="1044" width="13" height="15" fill="rgb(235,8,51)"/><text x="48.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.13%)</title><rect x="45" y="1060" width="13" height="15" fill="rgb(234,126,50)"/><text x="48.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.13%)</title><rect x="45" y="1076" width="13" height="15" fill="rgb(210,57,19)"/><text x="48.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.13%)</title><rect x="45" y="1092" width="13" height="15" fill="rgb(213,90,2)"/><text x="48.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (3 samples, 1.13%)</title><rect x="45" y="1108" width="13" height="15" fill="rgb(226,112,33)"/><text x="48.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.13%)</title><rect x="45" y="1124" width="13" height="15" fill="rgb(246,13,40)"/><text x="48.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.13%)</title><rect x="45" y="1140" width="13" height="15" fill="rgb(225,47,53)"/><text x="48.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.13%)</title><rect x="45" y="1156" width="13" height="15" fill="rgb(214,58,47)"/><text x="48.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.13%)</title><rect x="45" y="1172" width="13" height="15" fill="rgb(239,92,30)"/><text x="48.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.13%)</title><rect x="45" y="1188" width="13" height="15" fill="rgb(206,107,35)"/><text x="48.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (3 samples, 1.13%)</title><rect x="45" y="1204" width="13" height="15" fill="rgb(216,85,40)"/><text x="48.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.13%)</title><rect x="45" y="1220" width="13" height="15" fill="rgb(238,53,53)"/><text x="48.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.13%)</title><rect x="45" y="1236" width="13" height="15" fill="rgb(232,200,46)"/><text x="48.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.13%)</title><rect x="45" y="1252" width="13" height="15" fill="rgb(238,204,7)"/><text x="48.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.13%)</title><rect x="45" y="1268" width="13" height="15" fill="rgb(233,49,16)"/><text x="48.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.13%)</title><rect x="45" y="1284" width="13" height="15" fill="rgb(235,74,44)"/><text x="48.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (3 samples, 1.13%)</title><rect x="45" y="1300" width="13" height="15" fill="rgb(254,70,47)"/><text x="48.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.13%)</title><rect x="45" y="1316" width="13" height="15" fill="rgb(209,103,29)"/><text x="48.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.13%)</title><rect x="45" y="1332" width="13" height="15" fill="rgb(248,4,52)"/><text x="48.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.13%)</title><rect x="45" y="1348" width="13" height="15" fill="rgb(237,71,36)"/><text x="48.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.13%)</title><rect x="45" y="1364" width="13" height="15" fill="rgb(236,154,17)"/><text x="48.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.13%)</title><rect x="45" y="1380" width="13" height="15" fill="rgb(223,185,50)"/><text x="48.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (3 samples, 1.13%)</title><rect x="45" y="1396" width="13" height="15" fill="rgb(207,135,8)"/><text x="48.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.13%)</title><rect x="45" y="1412" width="13" height="15" fill="rgb(214,24,42)"/><text x="48.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.13%)</title><rect x="45" y="1428" width="13" height="15" fill="rgb(244,131,50)"/><text x="48.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.13%)</title><rect x="45" y="1444" width="13" height="15" fill="rgb(218,5,42)"/><text x="48.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.13%)</title><rect x="45" y="1460" width="13" height="15" fill="rgb(206,104,52)"/><text x="48.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.13%)</title><rect x="45" y="1476" width="13" height="15" fill="rgb(225,156,52)"/><text x="48.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (2 samples, 0.75%)</title><rect x="49" y="1492" width="9" height="15" fill="rgb(252,74,8)"/><text x="52.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="49" y="1508" width="9" height="15" fill="rgb(242,65,0)"/><text x="52.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="54" y="1524" width="4" height="15" fill="rgb(241,15,0)"/><text x="57.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="54" y="1540" width="4" height="15" fill="rgb(232,30,54)"/><text x="57.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="54" y="1556" width="4" height="15" fill="rgb(222,52,54)"/><text x="57.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="54" y="1572" width="4" height="15" fill="rgb(225,51,50)"/><text x="57.00" y="1582.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py:14) (1 samples, 0.38%)</title><rect x="54" y="1588" width="4" height="15" fill="rgb(246,215,30)"/><text x="57.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="54" y="1604" width="4" height="15" fill="rgb(222,177,17)"/><text x="57.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="54" y="1620" width="4" height="15" fill="rgb(206,24,6)"/><text x="57.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="54" y="1636" width="4" height="15" fill="rgb(248,103,39)"/><text x="57.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.38%)</title><rect x="54" y="1652" width="4" height="15" fill="rgb(215,77,49)"/><text x="57.00" y="1662.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.38%)</title><rect x="54" y="1668" width="4" height="15" fill="rgb(235,144,20)"/><text x="57.00" y="1678.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:529) (1 samples, 0.38%)</title><rect x="54" y="1684" width="4" height="15" fill="rgb(253,41,47)"/><text x="57.00" y="1694.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 1.50%)</title><rect x="45" y="436" width="18" height="15" fill="rgb(247,114,3)"/><text x="48.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.50%)</title><rect x="45" y="452" width="18" height="15" fill="rgb(205,204,46)"/><text x="48.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.50%)</title><rect x="45" y="468" width="18" height="15" fill="rgb(215,197,27)"/><text x="48.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.50%)</title><rect x="45" y="484" width="18" height="15" fill="rgb(224,138,33)"/><text x="48.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.50%)</title><rect x="45" y="500" width="18" height="15" fill="rgb(230,177,53)"/><text x="48.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.50%)</title><rect x="45" y="516" width="18" height="15" fill="rgb(252,137,28)"/><text x="48.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 1.50%)</title><rect x="45" y="532" width="18" height="15" fill="rgb(206,77,49)"/><text x="48.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.50%)</title><rect x="45" y="548" width="18" height="15" fill="rgb(214,155,42)"/><text x="48.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.50%)</title><rect x="45" y="564" width="18" height="15" fill="rgb(250,46,3)"/><text x="48.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.50%)</title><rect x="45" y="580" width="18" height="15" fill="rgb(254,50,40)"/><text x="48.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.50%)</title><rect x="45" y="596" width="18" height="15" fill="rgb(213,117,37)"/><text x="48.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.50%)</title><rect x="45" y="612" width="18" height="15" fill="rgb(241,102,36)"/><text x="48.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (4 samples, 1.50%)</title><rect x="45" y="628" width="18" height="15" fill="rgb(215,125,13)"/><text x="48.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.50%)</title><rect x="45" y="644" width="18" height="15" fill="rgb(208,46,37)"/><text x="48.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.50%)</title><rect x="45" y="660" width="18" height="15" fill="rgb(224,82,4)"/><text x="48.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.50%)</title><rect x="45" y="676" width="18" height="15" fill="rgb(235,66,13)"/><text x="48.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.50%)</title><rect x="45" y="692" width="18" height="15" fill="rgb(222,29,6)"/><text x="48.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.50%)</title><rect x="45" y="708" width="18" height="15" fill="rgb(209,7,26)"/><text x="48.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.38%)</title><rect x="58" y="724" width="5" height="15" fill="rgb(254,138,9)"/><text x="61.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="58" y="740" width="5" height="15" fill="rgb(219,159,32)"/><text x="61.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.38%)</title><rect x="58" y="756" width="5" height="15" fill="rgb(215,171,50)"/><text x="61.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="58" y="772" width="5" height="15" fill="rgb(224,61,44)"/><text x="61.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="58" y="788" width="5" height="15" fill="rgb(247,72,40)"/><text x="61.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="58" y="804" width="5" height="15" fill="rgb(224,207,38)"/><text x="61.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="58" y="820" width="5" height="15" fill="rgb(207,46,45)"/><text x="61.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="58" y="836" width="5" height="15" fill="rgb(239,103,18)"/><text x="61.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="58" y="852" width="5" height="15" fill="rgb(209,187,6)"/><text x="61.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:2) (1 samples, 0.38%)</title><rect x="58" y="868" width="5" height="15" fill="rgb(217,14,38)"/><text x="61.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="58" y="884" width="5" height="15" fill="rgb(214,65,24)"/><text x="61.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="58" y="900" width="5" height="15" fill="rgb(212,27,27)"/><text x="61.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="58" y="916" width="5" height="15" fill="rgb(225,26,2)"/><text x="61.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="58" y="932" width="5" height="15" fill="rgb(239,29,24)"/><text x="61.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="58" y="948" width="5" height="15" fill="rgb(241,203,47)"/><text x="61.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py:25) (1 samples, 0.38%)</title><rect x="58" y="964" width="5" height="15" fill="rgb(245,18,4)"/><text x="61.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="58" y="980" width="5" height="15" fill="rgb(223,6,48)"/><text x="61.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="58" y="996" width="5" height="15" fill="rgb(241,81,41)"/><text x="61.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="58" y="1012" width="5" height="15" fill="rgb(218,28,9)"/><text x="61.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="58" y="1028" width="5" height="15" fill="rgb(230,89,28)"/><text x="61.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="58" y="1044" width="5" height="15" fill="rgb(252,165,49)"/><text x="61.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/sorting.py:17) (1 samples, 0.38%)</title><rect x="58" y="1060" width="5" height="15" fill="rgb(233,141,30)"/><text x="61.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="58" y="1076" width="5" height="15" fill="rgb(205,101,22)"/><text x="61.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="58" y="1092" width="5" height="15" fill="rgb(249,105,2)"/><text x="61.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="58" y="1108" width="5" height="15" fill="rgb(254,184,20)"/><text x="61.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="58" y="1124" width="5" height="15" fill="rgb(251,6,17)"/><text x="61.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="58" y="1140" width="5" height="15" fill="rgb(237,213,42)"/><text x="61.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/algorithms.py:53) (1 samples, 0.38%)</title><rect x="58" y="1156" width="5" height="15" fill="rgb(205,35,20)"/><text x="61.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="58" y="1172" width="5" height="15" fill="rgb(223,22,13)"/><text x="61.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="58" y="1188" width="5" height="15" fill="rgb(215,46,22)"/><text x="61.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="58" y="1204" width="5" height="15" fill="rgb(231,80,3)"/><text x="61.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.38%)</title><rect x="58" y="1220" width="5" height="15" fill="rgb(233,40,51)"/><text x="61.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.38%)</title><rect x="58" y="1236" width="5" height="15" fill="rgb(208,42,12)"/><text x="61.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:529) (1 samples, 0.38%)</title><rect x="58" y="1252" width="5" height="15" fill="rgb(239,58,23)"/><text x="61.00" y="1262.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:4) (13 samples, 4.89%)</title><rect x="10" y="52" width="57" height="15" fill="rgb(220,96,0)"/><text x="13.00" y="62.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 4.89%)</title><rect x="10" y="68" width="57" height="15" fill="rgb(238,28,45)"/><text x="13.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 4.89%)</title><rect x="10" y="84" width="57" height="15" fill="rgb(222,102,29)"/><text x="13.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 4.89%)</title><rect x="10" y="100" width="57" height="15" fill="rgb(228,16,6)"/><text x="13.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (13 samples, 4.89%)</title><rect x="10" y="116" width="57" height="15" fill="rgb(221,42,7)"/><text x="13.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (13 samples, 4.89%)</title><rect x="10" y="132" width="57" height="15" fill="rgb(236,93,45)"/><text x="13.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:7) (6 samples, 2.26%)</title><rect x="41" y="148" width="26" height="15" fill="rgb(206,129,14)"/><text x="44.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.26%)</title><rect x="41" y="164" width="26" height="15" fill="rgb(253,93,50)"/><text x="44.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.26%)</title><rect x="41" y="180" width="26" height="15" fill="rgb(214,127,13)"/><text x="44.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.26%)</title><rect x="41" y="196" width="26" height="15" fill="rgb(240,172,43)"/><text x="44.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.26%)</title><rect x="41" y="212" width="26" height="15" fill="rgb(243,214,24)"/><text x="44.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.26%)</title><rect x="41" y="228" width="26" height="15" fill="rgb(214,50,23)"/><text x="44.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 1.88%)</title><rect x="45" y="244" width="22" height="15" fill="rgb(232,51,15)"/><text x="48.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.88%)</title><rect x="45" y="260" width="22" height="15" fill="rgb(222,128,19)"/><text x="48.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.88%)</title><rect x="45" y="276" width="22" height="15" fill="rgb(232,178,54)"/><text x="48.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.88%)</title><rect x="45" y="292" width="22" height="15" fill="rgb(231,68,24)"/><text x="48.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.88%)</title><rect x="45" y="308" width="22" height="15" fill="rgb(211,86,28)"/><text x="48.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.88%)</title><rect x="45" y="324" width="22" height="15" fill="rgb(208,118,23)"/><text x="48.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 1.88%)</title><rect x="45" y="340" width="22" height="15" fill="rgb(212,63,18)"/><text x="48.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.88%)</title><rect x="45" y="356" width="22" height="15" fill="rgb(215,188,43)"/><text x="48.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.88%)</title><rect x="45" y="372" width="22" height="15" fill="rgb(246,115,8)"/><text x="48.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.88%)</title><rect x="45" y="388" width="22" height="15" fill="rgb(224,178,22)"/><text x="48.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.88%)</title><rect x="45" y="404" width="22" height="15" fill="rgb(210,125,9)"/><text x="48.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.88%)</title><rect x="45" y="420" width="22" height="15" fill="rgb(254,17,37)"/><text x="48.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.38%)</title><rect x="63" y="436" width="4" height="15" fill="rgb(231,171,35)"/><text x="66.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="63" y="452" width="4" height="15" fill="rgb(253,191,19)"/><text x="66.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.38%)</title><rect x="63" y="468" width="4" height="15" fill="rgb(225,204,49)"/><text x="66.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="63" y="484" width="4" height="15" fill="rgb(240,36,10)"/><text x="66.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="63" y="500" width="4" height="15" fill="rgb(206,140,15)"/><text x="66.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="63" y="516" width="4" height="15" fill="rgb(249,164,16)"/><text x="66.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="63" y="532" width="4" height="15" fill="rgb(241,38,1)"/><text x="66.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="63" y="548" width="4" height="15" fill="rgb(252,11,0)"/><text x="66.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="63" y="564" width="4" height="15" fill="rgb(234,130,23)"/><text x="66.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.38%)</title><rect x="63" y="580" width="4" height="15" fill="rgb(208,134,0)"/><text x="66.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="63" y="596" width="4" height="15" fill="rgb(209,104,27)"/><text x="66.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="63" y="612" width="4" height="15" fill="rgb(239,24,2)"/><text x="66.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="63" y="628" width="4" height="15" fill="rgb(207,80,45)"/><text x="66.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="63" y="644" width="4" height="15" fill="rgb(253,148,23)"/><text x="66.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="63" y="660" width="4" height="15" fill="rgb(251,69,32)"/><text x="66.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.38%)</title><rect x="63" y="676" width="4" height="15" fill="rgb(210,77,21)"/><text x="66.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="63" y="692" width="4" height="15" fill="rgb(240,190,43)"/><text x="66.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="63" y="708" width="4" height="15" fill="rgb(208,30,1)"/><text x="66.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="63" y="724" width="4" height="15" fill="rgb(222,166,6)"/><text x="66.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="63" y="740" width="4" height="15" fill="rgb(205,164,38)"/><text x="66.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="63" y="756" width="4" height="15" fill="rgb(217,65,18)"/><text x="66.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.38%)</title><rect x="63" y="772" width="4" height="15" fill="rgb(227,46,13)"/><text x="66.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="63" y="788" width="4" height="15" fill="rgb(217,77,45)"/><text x="66.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="63" y="804" width="4" height="15" fill="rgb(250,119,27)"/><text x="66.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="63" y="820" width="4" height="15" fill="rgb(220,130,31)"/><text x="66.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="63" y="836" width="4" height="15" fill="rgb(224,138,3)"/><text x="66.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="63" y="852" width="4" height="15" fill="rgb(236,94,54)"/><text x="66.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.38%)</title><rect x="63" y="868" width="4" height="15" fill="rgb(213,152,51)"/><text x="66.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="63" y="884" width="4" height="15" fill="rgb(227,130,29)"/><text x="66.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.38%)</title><rect x="63" y="900" width="4" height="15" fill="rgb(244,146,14)"/><text x="66.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="63" y="916" width="4" height="15" fill="rgb(227,31,39)"/><text x="66.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="63" y="932" width="4" height="15" fill="rgb(249,76,46)"/><text x="66.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="63" y="948" width="4" height="15" fill="rgb(249,96,50)"/><text x="66.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="63" y="964" width="4" height="15" fill="rgb(206,46,32)"/><text x="66.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="63" y="980" width="4" height="15" fill="rgb(237,43,20)"/><text x="66.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="63" y="996" width="4" height="15" fill="rgb(223,94,23)"/><text x="66.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.38%)</title><rect x="63" y="1012" width="4" height="15" fill="rgb(214,61,49)"/><text x="66.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="63" y="1028" width="4" height="15" fill="rgb(222,180,16)"/><text x="66.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="63" y="1044" width="4" height="15" fill="rgb(225,172,36)"/><text x="66.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="63" y="1060" width="4" height="15" fill="rgb(220,116,25)"/><text x="66.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="63" y="1076" width="4" height="15" fill="rgb(237,79,53)"/><text x="66.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="63" y="1092" width="4" height="15" fill="rgb(209,36,22)"/><text x="66.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.38%)</title><rect x="63" y="1108" width="4" height="15" fill="rgb(235,136,45)"/><text x="66.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="63" y="1124" width="4" height="15" fill="rgb(232,80,52)"/><text x="66.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="63" y="1140" width="4" height="15" fill="rgb(238,92,9)"/><text x="66.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="63" y="1156" width="4" height="15" fill="rgb(237,151,50)"/><text x="66.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="63" y="1172" width="4" height="15" fill="rgb(225,210,38)"/><text x="66.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="63" y="1188" width="4" height="15" fill="rgb(205,81,6)"/><text x="66.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.38%)</title><rect x="63" y="1204" width="4" height="15" fill="rgb(221,2,54)"/><text x="66.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="63" y="1220" width="4" height="15" fill="rgb(237,78,20)"/><text x="66.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="63" y="1236" width="4" height="15" fill="rgb(213,43,37)"/><text x="66.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="63" y="1252" width="4" height="15" fill="rgb(244,55,17)"/><text x="66.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="63" y="1268" width="4" height="15" fill="rgb(217,7,22)"/><text x="66.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="63" y="1284" width="4" height="15" fill="rgb(217,72,47)"/><text x="66.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.38%)</title><rect x="63" y="1300" width="4" height="15" fill="rgb(217,38,33)"/><text x="66.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.38%)</title><rect x="63" y="1316" width="4" height="15" fill="rgb(237,79,2)"/><text x="66.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.38%)</title><rect x="63" y="1332" width="4" height="15" fill="rgb(221,71,13)"/><text x="66.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.38%)</title><rect x="63" y="1348" width="4" height="15" fill="rgb(227,42,1)"/><text x="66.00" y="1358.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:40) (1 samples, 0.38%)</title><rect x="67" y="52" width="5" height="15" fill="rgb(225,220,29)"/><text x="70.00" y="62.50"></text></g><g><title>start (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:11) (1 samples, 0.38%)</title><rect x="67" y="68" width="5" height="15" fill="rgb(241,220,48)"/><text x="70.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:39) (1 samples, 0.38%)</title><rect x="67" y="84" width="5" height="15" fill="rgb(254,31,18)"/><text x="70.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:156) (1 samples, 0.38%)</title><rect x="67" y="100" width="5" height="15" fill="rgb(221,113,9)"/><text x="70.00" y="110.50"></text></g><g><title>exists (genericpath.py:19) (1 samples, 0.38%)</title><rect x="67" y="116" width="5" height="15" fill="rgb(213,108,38)"/><text x="70.00" y="126.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.38%)</title><rect x="67" y="132" width="5" height="15" fill="rgb(225,137,50)"/><text x="70.00" y="142.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.38%)</title><rect x="67" y="148" width="5" height="15" fill="rgb(217,190,5)"/><text x="70.00" y="158.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:47) (1 samples, 0.38%)</title><rect x="72" y="52" width="4" height="15" fill="rgb(206,139,4)"/><text x="75.00" y="62.50"></text></g><g><title>profile0_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:46) (1 samples, 0.38%)</title><rect x="72" y="68" width="4" height="15" fill="rgb(252,71,32)"/><text x="75.00" y="78.50"></text></g><g><title>setup_profile0 (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:25) (1 samples, 0.38%)</title><rect x="72" y="84" width="4" height="15" fill="rgb(223,35,15)"/><text x="75.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.38%)</title><rect x="72" y="100" width="4" height="15" fill="rgb(245,104,6)"/><text x="75.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (1 samples, 0.38%)</title><rect x="72" y="116" width="4" height="15" fill="rgb(227,210,47)"/><text x="75.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.38%)</title><rect x="72" y="132" width="4" height="15" fill="rgb(207,110,54)"/><text x="75.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.38%)</title><rect x="72" y="148" width="4" height="15" fill="rgb(236,226,51)"/><text x="75.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.38%)</title><rect x="72" y="164" width="4" height="15" fill="rgb(235,207,0)"/><text x="75.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.38%)</title><rect x="72" y="180" width="4" height="15" fill="rgb(233,197,47)"/><text x="75.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_regressor (mlprodict/onnx_conv/sklconv/tree_converters.py:47) (1 samples, 0.38%)</title><rect x="72" y="196" width="4" height="15" fill="rgb(250,51,33)"/><text x="75.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.38%)</title><rect x="76" y="180" width="4" height="15" fill="rgb(225,195,32)"/><text x="79.00" y="190.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1128) (3 samples, 1.13%)</title><rect x="76" y="148" width="13" height="15" fill="rgb(241,53,39)"/><text x="79.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 1.13%)</title><rect x="76" y="164" width="13" height="15" fill="rgb(243,149,27)"/><text x="79.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.75%)</title><rect x="80" y="180" width="9" height="15" fill="rgb(245,200,11)"/><text x="83.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.38%)</title><rect x="85" y="196" width="4" height="15" fill="rgb(231,21,41)"/><text x="88.00" y="206.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:79) (1 samples, 0.38%)</title><rect x="89" y="164" width="5" height="15" fill="rgb(241,98,39)"/><text x="92.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (1 samples, 0.38%)</title><rect x="98" y="180" width="5" height="15" fill="rgb(209,204,51)"/><text x="101.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.38%)</title><rect x="103" y="196" width="4" height="15" fill="rgb(233,180,28)"/><text x="106.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.75%)</title><rect x="103" y="180" width="9" height="15" fill="rgb(244,163,11)"/><text x="106.00" y="190.50"></text></g><g><title>__init__ (warnings.py:463) (1 samples, 0.38%)</title><rect x="107" y="196" width="5" height="15" fill="rgb(210,134,40)"/><text x="110.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.75%)</title><rect x="112" y="180" width="8" height="15" fill="rgb(250,5,25)"/><text x="115.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.38%)</title><rect x="116" y="196" width="4" height="15" fill="rgb(253,26,54)"/><text x="119.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.38%)</title><rect x="116" y="212" width="4" height="15" fill="rgb(231,204,1)"/><text x="119.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.75%)</title><rect x="120" y="180" width="9" height="15" fill="rgb(253,198,36)"/><text x="123.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.75%)</title><rect x="120" y="196" width="9" height="15" fill="rgb(209,26,43)"/><text x="123.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.38%)</title><rect x="129" y="180" width="5" height="15" fill="rgb(215,226,17)"/><text x="132.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.38%)</title><rect x="129" y="196" width="5" height="15" fill="rgb(218,33,3)"/><text x="132.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:526) (1 samples, 0.38%)</title><rect x="134" y="180" width="4" height="15" fill="rgb(251,131,16)"/><text x="137.00" y="190.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1129) (12 samples, 4.51%)</title><rect x="89" y="148" width="54" height="15" fill="rgb(235,15,21)"/><text x="92.00" y="158.50">predi..</text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (11 samples, 4.14%)</title><rect x="94" y="164" width="49" height="15" fill="rgb(205,37,28)"/><text x="97.00" y="174.50">_val..</text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.38%)</title><rect x="138" y="180" width="5" height="15" fill="rgb(226,15,29)"/><text x="141.00" y="190.50"></text></g><g><title>0x7fe277ce9d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="147" y="196" width="4" height="15" fill="rgb(247,123,16)"/><text x="150.00" y="206.50"></text></g><g><title>0x7fe277ce8fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="147" y="212" width="4" height="15" fill="rgb(227,44,10)"/><text x="150.00" y="222.50"></text></g><g><title>0x7fe277cf8540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="147" y="228" width="4" height="15" fill="rgb(207,168,9)"/><text x="150.00" y="238.50"></text></g><g><title>0x7fe277ccd2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="147" y="244" width="4" height="15" fill="rgb(229,84,23)"/><text x="150.00" y="254.50"></text></g><g><title>0x7fe277ccc530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="147" y="260" width="4" height="15" fill="rgb(241,138,12)"/><text x="150.00" y="270.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (1 samples, 0.38%)</title><rect x="147" y="276" width="4" height="15" fill="rgb(235,127,34)"/><text x="150.00" y="286.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.38%)</title><rect x="151" y="212" width="5" height="15" fill="rgb(207,123,1)"/><text x="154.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.38%)</title><rect x="156" y="212" width="4" height="15" fill="rgb(224,224,6)"/><text x="159.00" y="222.50"></text></g><g><title>0x7fe29e2c61f2 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="187" y="244" width="4" height="15" fill="rgb(221,156,41)"/><text x="190.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.38%)</title><rect x="191" y="244" width="5" height="15" fill="rgb(248,228,26)"/><text x="194.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (10 samples, 3.76%)</title><rect x="160" y="212" width="45" height="15" fill="rgb(212,52,13)"/><text x="163.00" y="222.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (8 samples, 3.01%)</title><rect x="169" y="228" width="36" height="15" fill="rgb(238,152,4)"/><text x="172.00" y="238.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.75%)</title><rect x="196" y="244" width="9" height="15" fill="rgb(216,34,43)"/><text x="199.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (14 samples, 5.26%)</title><rect x="151" y="196" width="63" height="15" fill="rgb(223,206,49)"/><text x="154.00" y="206.50">predic..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:951) (2 samples, 0.75%)</title><rect x="205" y="212" width="9" height="15" fill="rgb(253,94,48)"/><text x="208.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.38%)</title><rect x="222" y="228" width="5" height="15" fill="rgb(213,51,46)"/><text x="225.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.38%)</title><rect x="227" y="228" width="4" height="15" fill="rgb(231,17,27)"/><text x="230.00" y="238.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.38%)</title><rect x="236" y="244" width="4" height="15" fill="rgb(220,7,42)"/><text x="239.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 1.13%)</title><rect x="231" y="228" width="14" height="15" fill="rgb(228,199,48)"/><text x="234.00" y="238.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.38%)</title><rect x="240" y="244" width="5" height="15" fill="rgb(208,111,15)"/><text x="243.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.38%)</title><rect x="245" y="244" width="4" height="15" fill="rgb(233,194,27)"/><text x="248.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:184) (1 samples, 0.38%)</title><rect x="249" y="260" width="4" height="15" fill="rgb(227,42,41)"/><text x="252.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 1.13%)</title><rect x="253" y="260" width="14" height="15" fill="rgb(205,12,12)"/><text x="256.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (6 samples, 2.26%)</title><rect x="245" y="228" width="26" height="15" fill="rgb(224,197,44)"/><text x="248.00" y="238.50">c..</text></g><g><title>simplefilter (warnings.py:179) (5 samples, 1.88%)</title><rect x="249" y="244" width="22" height="15" fill="rgb(227,140,44)"/><text x="252.00" y="254.50">s..</text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.38%)</title><rect x="267" y="260" width="4" height="15" fill="rgb(246,204,49)"/><text x="270.00" y="270.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.38%)</title><rect x="267" y="276" width="4" height="15" fill="rgb(248,18,7)"/><text x="270.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (3 samples, 1.13%)</title><rect x="271" y="228" width="14" height="15" fill="rgb(205,134,11)"/><text x="274.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.38%)</title><rect x="280" y="244" width="5" height="15" fill="rgb(228,72,13)"/><text x="283.00" y="254.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c:320) (1 samples, 0.38%)</title><rect x="285" y="276" width="4" height="15" fill="rgb(217,167,6)"/><text x="288.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.75%)</title><rect x="285" y="228" width="8" height="15" fill="rgb(226,122,33)"/><text x="288.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.75%)</title><rect x="285" y="244" width="8" height="15" fill="rgb(212,46,16)"/><text x="288.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.75%)</title><rect x="285" y="260" width="8" height="15" fill="rgb(222,109,29)"/><text x="288.00" y="270.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (1 samples, 0.38%)</title><rect x="289" y="276" width="4" height="15" fill="rgb(217,70,19)"/><text x="292.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.38%)</title><rect x="289" y="292" width="4" height="15" fill="rgb(218,163,19)"/><text x="292.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.38%)</title><rect x="293" y="228" width="5" height="15" fill="rgb(253,96,3)"/><text x="296.00" y="238.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.38%)</title><rect x="293" y="244" width="5" height="15" fill="rgb(238,32,46)"/><text x="296.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 1.50%)</title><rect x="298" y="244" width="18" height="15" fill="rgb(250,1,49)"/><text x="301.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (7 samples, 2.63%)</title><rect x="298" y="228" width="31" height="15" fill="rgb(232,171,44)"/><text x="301.00" y="238.50">ch..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (3 samples, 1.13%)</title><rect x="316" y="244" width="13" height="15" fill="rgb(224,186,31)"/><text x="319.00" y="254.50"></text></g><g><title>get_config (sklearn/_config.py:26) (2 samples, 0.75%)</title><rect x="320" y="260" width="9" height="15" fill="rgb(249,204,17)"/><text x="323.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 1.13%)</title><rect x="333" y="244" width="14" height="15" fill="rgb(236,28,12)"/><text x="336.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.38%)</title><rect x="347" y="244" width="4" height="15" fill="rgb(237,143,22)"/><text x="350.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (6 samples, 2.26%)</title><rect x="351" y="244" width="27" height="15" fill="rgb(212,83,25)"/><text x="354.00" y="254.50">_..</text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 1.13%)</title><rect x="364" y="260" width="14" height="15" fill="rgb(233,173,54)"/><text x="367.00" y="270.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.38%)</title><rect x="373" y="276" width="5" height="15" fill="rgb(248,228,52)"/><text x="376.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (12 samples, 4.51%)</title><rect x="329" y="228" width="53" height="15" fill="rgb(207,194,42)"/><text x="332.00" y="238.50">check..</text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.38%)</title><rect x="378" y="244" width="4" height="15" fill="rgb(247,55,38)"/><text x="381.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.38%)</title><rect x="382" y="228" width="5" height="15" fill="rgb(237,111,49)"/><text x="385.00" y="238.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (40 samples, 15.04%)</title><rect x="214" y="212" width="177" height="15" fill="rgb(235,66,47)"/><text x="217.00" y="222.50">_validate_X_predict (sk..</text></g><g><title>check_array (sklearn/utils/validation.py:574) (1 samples, 0.38%)</title><rect x="387" y="228" width="4" height="15" fill="rgb(222,177,5)"/><text x="390.00" y="238.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (41 samples, 15.41%)</title><rect x="214" y="196" width="181" height="15" fill="rgb(228,206,50)"/><text x="217.00" y="206.50">predict (sklearn/tree/_..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:381) (1 samples, 0.38%)</title><rect x="391" y="212" width="4" height="15" fill="rgb(241,192,17)"/><text x="394.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.38%)</title><rect x="391" y="228" width="4" height="15" fill="rgb(220,0,46)"/><text x="394.00" y="238.50"></text></g><g><title>0x7fe277ce8f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="395" y="228" width="5" height="15" fill="rgb(222,58,49)"/><text x="398.00" y="238.50"></text></g><g><title>0x7fe277cdb666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.75%)</title><rect x="400" y="292" width="9" height="15" fill="rgb(240,94,54)"/><text x="403.00" y="302.50"></text></g><g><title>0x7fe277cd12fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="404" y="308" width="5" height="15" fill="rgb(241,146,19)"/><text x="407.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.38%)</title><rect x="404" y="324" width="5" height="15" fill="rgb(229,192,18)"/><text x="407.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.38%)</title><rect x="404" y="340" width="5" height="15" fill="rgb(227,139,47)"/><text x="407.00" y="350.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.38%)</title><rect x="404" y="356" width="5" height="15" fill="rgb(209,83,34)"/><text x="407.00" y="366.50"></text></g><g><title>_buffer_format_string (buffer.c:350) (1 samples, 0.38%)</title><rect x="404" y="372" width="5" height="15" fill="rgb(218,173,29)"/><text x="407.00" y="382.50"></text></g><g><title>0x7fe277cf72df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.13%)</title><rect x="400" y="260" width="13" height="15" fill="rgb(246,76,37)"/><text x="403.00" y="270.50"></text></g><g><title>0x7fe277cdbd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.13%)</title><rect x="400" y="276" width="13" height="15" fill="rgb(253,85,22)"/><text x="403.00" y="286.50"></text></g><g><title>0x7fe277cdb6cf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="409" y="292" width="4" height="15" fill="rgb(228,70,25)"/><text x="412.00" y="302.50"></text></g><g><title>0x7fe277cf7436 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="413" y="260" width="5" height="15" fill="rgb(215,180,33)"/><text x="416.00" y="270.50"></text></g><g><title>0x7fe29e2bbe50 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="418" y="292" width="4" height="15" fill="rgb(237,176,6)"/><text x="421.00" y="302.50"></text></g><g><title>0x7fe277cf7592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.75%)</title><rect x="418" y="260" width="8" height="15" fill="rgb(219,39,36)"/><text x="421.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (2 samples, 0.75%)</title><rect x="418" y="276" width="8" height="15" fill="rgb(227,8,18)"/><text x="421.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.38%)</title><rect x="422" y="292" width="4" height="15" fill="rgb(251,115,37)"/><text x="425.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.38%)</title><rect x="426" y="308" width="5" height="15" fill="rgb(214,140,18)"/><text x="429.00" y="318.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.38%)</title><rect x="426" y="324" width="5" height="15" fill="rgb(220,178,31)"/><text x="429.00" y="334.50"></text></g><g><title>_buffer_format_string (buffer.c:406) (1 samples, 0.38%)</title><rect x="426" y="340" width="5" height="15" fill="rgb(208,101,29)"/><text x="429.00" y="350.50"></text></g><g><title>0x7fe277ce8fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 3.01%)</title><rect x="400" y="228" width="35" height="15" fill="rgb(239,71,43)"/><text x="403.00" y="238.50">0x..</text></g><g><title>0x7fe277cf8405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 3.01%)</title><rect x="400" y="244" width="35" height="15" fill="rgb(253,108,43)"/><text x="403.00" y="254.50">0x..</text></g><g><title>0x7fe277cf7c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.75%)</title><rect x="426" y="260" width="9" height="15" fill="rgb(249,95,43)"/><text x="429.00" y="270.50"></text></g><g><title>0x7fe277ccf529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.75%)</title><rect x="426" y="276" width="9" height="15" fill="rgb(241,23,54)"/><text x="429.00" y="286.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.75%)</title><rect x="426" y="292" width="9" height="15" fill="rgb(254,74,16)"/><text x="429.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.38%)</title><rect x="431" y="308" width="4" height="15" fill="rgb(212,213,5)"/><text x="434.00" y="318.50"></text></g><g><title>0x7fe277ce8ff3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="435" y="228" width="5" height="15" fill="rgb(243,225,18)"/><text x="438.00" y="238.50"></text></g><g><title>0x7fe29d4c8dd0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="453" y="260" width="5" height="15" fill="rgb(242,90,33)"/><text x="456.00" y="270.50"></text></g><g><title>array_take (methods.c:138) (5 samples, 1.88%)</title><rect x="440" y="244" width="22" height="15" fill="rgb(210,69,10)"/><text x="443.00" y="254.50">a..</text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.38%)</title><rect x="458" y="260" width="4" height="15" fill="rgb(207,161,43)"/><text x="461.00" y="270.50"></text></g><g><title>0x7fe29d4c7d20 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="458" y="276" width="4" height="15" fill="rgb(254,155,53)"/><text x="461.00" y="286.50"></text></g><g><title>0x7fe277ce905a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.26%)</title><rect x="440" y="228" width="26" height="15" fill="rgb(206,175,19)"/><text x="443.00" y="238.50">0..</text></g><g><title>array_take (methods.c:145) (1 samples, 0.38%)</title><rect x="462" y="244" width="4" height="15" fill="rgb(232,67,33)"/><text x="465.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.38%)</title><rect x="462" y="260" width="4" height="15" fill="rgb(224,223,17)"/><text x="465.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.38%)</title><rect x="462" y="276" width="4" height="15" fill="rgb(223,19,16)"/><text x="465.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.38%)</title><rect x="462" y="292" width="4" height="15" fill="rgb(225,46,22)"/><text x="465.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:166) (1 samples, 0.38%)</title><rect x="462" y="308" width="4" height="15" fill="rgb(254,22,37)"/><text x="465.00" y="318.50"></text></g><g><title>0x7fe277ce9113 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="466" y="228" width="5" height="15" fill="rgb(243,208,13)"/><text x="469.00" y="238.50"></text></g><g><title>0x7fe277cc3d00 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="466" y="244" width="5" height="15" fill="rgb(234,71,20)"/><text x="469.00" y="254.50"></text></g><g><title>0x7fe277ce913a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="471" y="228" width="4" height="15" fill="rgb(209,175,27)"/><text x="474.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.38%)</title><rect x="471" y="244" width="4" height="15" fill="rgb(218,198,22)"/><text x="474.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.38%)</title><rect x="471" y="260" width="4" height="15" fill="rgb(230,126,7)"/><text x="474.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.38%)</title><rect x="471" y="276" width="4" height="15" fill="rgb(222,224,6)"/><text x="474.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (19 samples, 7.14%)</title><rect x="395" y="196" width="85" height="15" fill="rgb(213,59,27)"/><text x="398.00" y="206.50">predict (s..</text></g><g><title>0x7fe277ce9d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (19 samples, 7.14%)</title><rect x="395" y="212" width="85" height="15" fill="rgb(225,152,47)"/><text x="398.00" y="222.50">0x7fe277ce..</text></g><g><title>0x7fe277ce914f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="475" y="228" width="5" height="15" fill="rgb(244,85,50)"/><text x="478.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.38%)</title><rect x="475" y="244" width="5" height="15" fill="rgb(218,119,1)"/><text x="478.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.38%)</title><rect x="475" y="260" width="5" height="15" fill="rgb(233,133,3)"/><text x="478.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:728) (1 samples, 0.38%)</title><rect x="475" y="276" width="5" height="15" fill="rgb(218,88,43)"/><text x="478.00" y="286.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.38%)</title><rect x="475" y="292" width="5" height="15" fill="rgb(214,95,9)"/><text x="478.00" y="302.50"></text></g><g><title>0x7fe29e2a5a38 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="475" y="308" width="5" height="15" fill="rgb(251,196,8)"/><text x="478.00" y="318.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (1 samples, 0.38%)</title><rect x="480" y="196" width="4" height="15" fill="rgb(224,132,45)"/><text x="483.00" y="206.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (1 samples, 0.38%)</title><rect x="480" y="212" width="4" height="15" fill="rgb(206,192,36)"/><text x="483.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py:1096) (77 samples, 28.95%)</title><rect x="147" y="180" width="342" height="15" fill="rgb(239,139,4)"/><text x="150.00" y="190.50">&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting...</text></g><g><title>predict (sklearn/tree/_classes.py:442) (1 samples, 0.38%)</title><rect x="484" y="196" width="5" height="15" fill="rgb(241,144,33)"/><text x="487.00" y="206.50"></text></g><g><title>0x7fe29e2c6124 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="484" y="212" width="5" height="15" fill="rgb(208,120,28)"/><text x="487.00" y="222.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1096) (79 samples, 29.70%)</title><rect x="143" y="164" width="350" height="15" fill="rgb(239,10,27)"/><text x="146.00" y="174.50">_get_median_predict (sklearn/ensemble/_weight_b..</text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.38%)</title><rect x="489" y="180" width="4" height="15" fill="rgb(216,5,35)"/><text x="492.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.38%)</title><rect x="489" y="196" width="4" height="15" fill="rgb(252,220,46)"/><text x="492.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.38%)</title><rect x="489" y="212" width="4" height="15" fill="rgb(226,20,40)"/><text x="492.00" y="222.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.38%)</title><rect x="489" y="228" width="4" height="15" fill="rgb(230,141,7)"/><text x="492.00" y="238.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.38%)</title><rect x="489" y="244" width="4" height="15" fill="rgb(239,81,35)"/><text x="492.00" y="254.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:458) (1 samples, 0.38%)</title><rect x="489" y="260" width="4" height="15" fill="rgb(245,9,8)"/><text x="492.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.38%)</title><rect x="497" y="196" width="5" height="15" fill="rgb(211,195,14)"/><text x="500.00" y="206.50"></text></g><g><title>0x7fe29d4c6c40 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="497" y="212" width="5" height="15" fill="rgb(224,94,53)"/><text x="500.00" y="222.50"></text></g><g><title>array_argsort (methods.c:1360) (1 samples, 0.38%)</title><rect x="502" y="244" width="4" height="15" fill="rgb(240,84,52)"/><text x="505.00" y="254.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1099) (4 samples, 1.50%)</title><rect x="493" y="164" width="18" height="15" fill="rgb(247,55,15)"/><text x="496.00" y="174.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (4 samples, 1.50%)</title><rect x="493" y="180" width="18" height="15" fill="rgb(211,150,14)"/><text x="496.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.75%)</title><rect x="502" y="196" width="9" height="15" fill="rgb(229,41,29)"/><text x="505.00" y="206.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (2 samples, 0.75%)</title><rect x="502" y="212" width="9" height="15" fill="rgb(249,87,36)"/><text x="505.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.75%)</title><rect x="502" y="228" width="9" height="15" fill="rgb(232,214,20)"/><text x="505.00" y="238.50"></text></g><g><title>array_argsort (methods.c:1395) (1 samples, 0.38%)</title><rect x="506" y="244" width="5" height="15" fill="rgb(247,38,52)"/><text x="509.00" y="254.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (1 samples, 0.38%)</title><rect x="506" y="260" width="5" height="15" fill="rgb(241,223,21)"/><text x="509.00" y="270.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (1 samples, 0.38%)</title><rect x="506" y="276" width="5" height="15" fill="rgb(242,6,9)"/><text x="509.00" y="286.50"></text></g><g><title>aquicksort_double (quicksort.c.src:222) (1 samples, 0.38%)</title><rect x="506" y="292" width="5" height="15" fill="rgb(253,31,22)"/><text x="509.00" y="302.50"></text></g><g><title>DOUBLE_LT (npysort_common.h:130) (1 samples, 0.38%)</title><rect x="506" y="308" width="5" height="15" fill="rgb(214,31,28)"/><text x="509.00" y="318.50"></text></g><g><title>0x7fe29e38474e (libc-2.29.so) (1 samples, 0.38%)</title><rect x="520" y="244" width="4" height="15" fill="rgb(211,43,41)"/><text x="523.00" y="254.50"></text></g><g><title>array_cumsum (methods.c:2228) (1 samples, 0.38%)</title><rect x="524" y="260" width="5" height="15" fill="rgb(240,46,37)"/><text x="527.00" y="270.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (1 samples, 0.38%)</title><rect x="524" y="276" width="5" height="15" fill="rgb(242,176,25)"/><text x="527.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.38%)</title><rect x="524" y="292" width="5" height="15" fill="rgb(230,95,40)"/><text x="527.00" y="302.50"></text></g><g><title>_get_keywords (number.c:208) (1 samples, 0.38%)</title><rect x="529" y="308" width="4" height="15" fill="rgb(216,129,20)"/><text x="532.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:259) (2 samples, 0.75%)</title><rect x="529" y="292" width="8" height="15" fill="rgb(249,7,42)"/><text x="532.00" y="302.50"></text></g><g><title>_get_keywords (number.c:215) (1 samples, 0.38%)</title><rect x="533" y="308" width="4" height="15" fill="rgb(238,99,37)"/><text x="536.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4491) (1 samples, 0.38%)</title><rect x="537" y="324" width="5" height="15" fill="rgb(251,69,26)"/><text x="540.00" y="334.50"></text></g><g><title>0x7fe29e2bb77f (libc-2.29.so) (1 samples, 0.38%)</title><rect x="537" y="340" width="5" height="15" fill="rgb(205,46,15)"/><text x="540.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (1 samples, 0.38%)</title><rect x="542" y="324" width="4" height="15" fill="rgb(222,141,29)"/><text x="545.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3710) (1 samples, 0.38%)</title><rect x="542" y="340" width="4" height="15" fill="rgb(248,5,45)"/><text x="545.00" y="350.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.38%)</title><rect x="542" y="356" width="4" height="15" fill="rgb(207,69,27)"/><text x="545.00" y="366.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.38%)</title><rect x="542" y="372" width="4" height="15" fill="rgb(253,143,29)"/><text x="545.00" y="382.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:825) (9 samples, 3.38%)</title><rect x="511" y="180" width="40" height="15" fill="rgb(247,100,23)"/><text x="514.00" y="190.50">sta..</text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (9 samples, 3.38%)</title><rect x="511" y="196" width="40" height="15" fill="rgb(254,29,42)"/><text x="514.00" y="206.50">cum..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 3.38%)</title><rect x="511" y="212" width="40" height="15" fill="rgb(221,129,17)"/><text x="514.00" y="222.50">arr..</text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (9 samples, 3.38%)</title><rect x="511" y="228" width="40" height="15" fill="rgb(233,116,34)"/><text x="514.00" y="238.50">cum..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (6 samples, 2.26%)</title><rect x="524" y="244" width="27" height="15" fill="rgb(213,92,20)"/><text x="527.00" y="254.50">_..</text></g><g><title>array_cumsum (methods.c:2239) (5 samples, 1.88%)</title><rect x="529" y="260" width="22" height="15" fill="rgb(248,108,29)"/><text x="532.00" y="270.50">a..</text></g><g><title>PyArray_CumSum (calculation.c:568) (5 samples, 1.88%)</title><rect x="529" y="276" width="22" height="15" fill="rgb(239,155,19)"/><text x="532.00" y="286.50">P..</text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (3 samples, 1.13%)</title><rect x="537" y="292" width="14" height="15" fill="rgb(242,170,41)"/><text x="540.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (3 samples, 1.13%)</title><rect x="537" y="308" width="14" height="15" fill="rgb(242,165,13)"/><text x="540.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4665) (1 samples, 0.38%)</title><rect x="546" y="324" width="5" height="15" fill="rgb(209,218,16)"/><text x="549.00" y="334.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:826) (2 samples, 0.75%)</title><rect x="551" y="180" width="9" height="15" fill="rgb(213,186,34)"/><text x="554.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (2 samples, 0.75%)</title><rect x="551" y="196" width="9" height="15" fill="rgb(253,105,6)"/><text x="554.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.38%)</title><rect x="555" y="212" width="5" height="15" fill="rgb(208,220,47)"/><text x="558.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (1 samples, 0.38%)</title><rect x="555" y="228" width="5" height="15" fill="rgb(227,162,18)"/><text x="558.00" y="238.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.38%)</title><rect x="560" y="212" width="4" height="15" fill="rgb(252,82,0)"/><text x="563.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3896) (1 samples, 0.38%)</title><rect x="560" y="228" width="4" height="15" fill="rgb(219,103,20)"/><text x="563.00" y="238.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:827) (2 samples, 0.75%)</title><rect x="560" y="180" width="8" height="15" fill="rgb(247,62,9)"/><text x="563.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.75%)</title><rect x="560" y="196" width="8" height="15" fill="rgb(242,177,28)"/><text x="563.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:55) (1 samples, 0.38%)</title><rect x="564" y="212" width="4" height="15" fill="rgb(225,72,40)"/><text x="567.00" y="222.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.38%)</title><rect x="564" y="228" width="4" height="15" fill="rgb(232,129,44)"/><text x="567.00" y="238.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.38%)</title><rect x="564" y="244" width="4" height="15" fill="rgb(253,53,36)"/><text x="567.00" y="254.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (1 samples, 0.38%)</title><rect x="564" y="260" width="4" height="15" fill="rgb(253,34,9)"/><text x="567.00" y="270.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:123) (1 samples, 0.38%)</title><rect x="564" y="276" width="4" height="15" fill="rgb(214,139,29)"/><text x="567.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.38%)</title><rect x="577" y="276" width="5" height="15" fill="rgb(245,229,40)"/><text x="580.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.38%)</title><rect x="582" y="276" width="4" height="15" fill="rgb(221,79,46)"/><text x="585.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.38%)</title><rect x="582" y="292" width="4" height="15" fill="rgb(246,133,5)"/><text x="585.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.38%)</title><rect x="582" y="308" width="4" height="15" fill="rgb(223,135,13)"/><text x="585.00" y="318.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (4 samples, 1.50%)</title><rect x="573" y="196" width="18" height="15" fill="rgb(212,225,27)"/><text x="576.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.50%)</title><rect x="573" y="212" width="18" height="15" fill="rgb(205,43,31)"/><text x="576.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (4 samples, 1.50%)</title><rect x="573" y="228" width="18" height="15" fill="rgb(216,176,4)"/><text x="576.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (4 samples, 1.50%)</title><rect x="573" y="244" width="18" height="15" fill="rgb(225,60,47)"/><text x="576.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 1.13%)</title><rect x="577" y="260" width="14" height="15" fill="rgb(230,168,53)"/><text x="580.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4688) (1 samples, 0.38%)</title><rect x="586" y="276" width="5" height="15" fill="rgb(243,47,47)"/><text x="589.00" y="286.50"></text></g><g><title>isclose (numpy/core/numeric.py:2260) (1 samples, 0.38%)</title><rect x="595" y="228" width="5" height="15" fill="rgb(217,141,12)"/><text x="598.00" y="238.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.38%)</title><rect x="595" y="244" width="5" height="15" fill="rgb(216,86,21)"/><text x="598.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1610) (1 samples, 0.38%)</title><rect x="595" y="260" width="5" height="15" fill="rgb(232,165,6)"/><text x="598.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.38%)</title><rect x="600" y="260" width="4" height="15" fill="rgb(236,159,3)"/><text x="603.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.38%)</title><rect x="600" y="276" width="4" height="15" fill="rgb(248,197,21)"/><text x="603.00" y="286.50"></text></g><g><title>isclose (numpy/core/numeric.py:2269) (2 samples, 0.75%)</title><rect x="600" y="228" width="8" height="15" fill="rgb(225,157,39)"/><text x="603.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.75%)</title><rect x="600" y="244" width="8" height="15" fill="rgb(242,110,18)"/><text x="603.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.38%)</title><rect x="604" y="260" width="4" height="15" fill="rgb(234,100,7)"/><text x="607.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.38%)</title><rect x="604" y="276" width="4" height="15" fill="rgb(223,162,5)"/><text x="607.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.38%)</title><rect x="608" y="356" width="5" height="15" fill="rgb(244,18,18)"/><text x="611.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.38%)</title><rect x="608" y="372" width="5" height="15" fill="rgb(227,82,43)"/><text x="611.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.38%)</title><rect x="608" y="388" width="5" height="15" fill="rgb(231,162,25)"/><text x="611.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.38%)</title><rect x="608" y="404" width="5" height="15" fill="rgb(226,118,11)"/><text x="611.00" y="414.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3839) (1 samples, 0.38%)</title><rect x="608" y="420" width="5" height="15" fill="rgb(230,36,6)"/><text x="611.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.38%)</title><rect x="613" y="356" width="4" height="15" fill="rgb(218,60,22)"/><text x="616.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.38%)</title><rect x="613" y="372" width="4" height="15" fill="rgb(238,122,49)"/><text x="616.00" y="382.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 1.13%)</title><rect x="608" y="324" width="14" height="15" fill="rgb(246,173,18)"/><text x="611.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 1.13%)</title><rect x="608" y="340" width="14" height="15" fill="rgb(254,5,44)"/><text x="611.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.38%)</title><rect x="617" y="356" width="5" height="15" fill="rgb(220,16,40)"/><text x="620.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3466) (1 samples, 0.38%)</title><rect x="617" y="372" width="5" height="15" fill="rgb(230,14,18)"/><text x="620.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.38%)</title><rect x="622" y="356" width="4" height="15" fill="rgb(253,73,27)"/><text x="625.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.38%)</title><rect x="622" y="372" width="4" height="15" fill="rgb(222,72,6)"/><text x="625.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.38%)</title><rect x="622" y="388" width="4" height="15" fill="rgb(221,64,8)"/><text x="625.00" y="398.50"></text></g><g><title>isclose (numpy/core/numeric.py:2271) (5 samples, 1.88%)</title><rect x="608" y="228" width="23" height="15" fill="rgb(254,170,52)"/><text x="611.00" y="238.50">i..</text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (5 samples, 1.88%)</title><rect x="608" y="244" width="23" height="15" fill="rgb(233,13,25)"/><text x="611.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.88%)</title><rect x="608" y="260" width="23" height="15" fill="rgb(228,163,49)"/><text x="611.00" y="270.50">a..</text></g><g><title>all (numpy/core/fromnumeric.py:2351) (5 samples, 1.88%)</title><rect x="608" y="276" width="23" height="15" fill="rgb(250,21,51)"/><text x="611.00" y="286.50">a..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (5 samples, 1.88%)</title><rect x="608" y="292" width="23" height="15" fill="rgb(253,4,21)"/><text x="611.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 1.88%)</title><rect x="608" y="308" width="23" height="15" fill="rgb(252,127,6)"/><text x="611.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4694) (2 samples, 0.75%)</title><rect x="622" y="324" width="9" height="15" fill="rgb(252,156,17)"/><text x="625.00" y="334.50"></text></g><g><title>PyArray_Return (scalarapi.c:864) (2 samples, 0.75%)</title><rect x="622" y="340" width="9" height="15" fill="rgb(243,161,31)"/><text x="625.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.38%)</title><rect x="626" y="356" width="5" height="15" fill="rgb(223,36,23)"/><text x="629.00" y="366.50"></text></g><g><title>npy_free_cache_dim (alloc.c:173) (1 samples, 0.38%)</title><rect x="626" y="372" width="5" height="15" fill="rgb(222,172,6)"/><text x="629.00" y="382.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (2 samples, 0.75%)</title><rect x="639" y="276" width="9" height="15" fill="rgb(226,65,37)"/><text x="642.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:179) (2 samples, 0.75%)</title><rect x="639" y="292" width="9" height="15" fill="rgb(247,96,39)"/><text x="642.00" y="302.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2257) (5 samples, 1.88%)</title><rect x="631" y="244" width="22" height="15" fill="rgb(228,101,15)"/><text x="634.00" y="254.50">w..</text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (4 samples, 1.50%)</title><rect x="635" y="260" width="18" height="15" fill="rgb(242,182,44)"/><text x="638.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:120) (1 samples, 0.38%)</title><rect x="648" y="276" width="5" height="15" fill="rgb(235,127,32)"/><text x="651.00" y="286.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (1 samples, 0.38%)</title><rect x="666" y="276" width="4" height="15" fill="rgb(226,61,47)"/><text x="669.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:186) (1 samples, 0.38%)</title><rect x="666" y="292" width="4" height="15" fill="rgb(248,1,10)"/><text x="669.00" y="302.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:447) (2 samples, 0.75%)</title><rect x="666" y="260" width="9" height="15" fill="rgb(233,84,46)"/><text x="669.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:131) (1 samples, 0.38%)</title><rect x="670" y="276" width="5" height="15" fill="rgb(252,130,22)"/><text x="673.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.38%)</title><rect x="675" y="276" width="4" height="15" fill="rgb(221,225,40)"/><text x="678.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.38%)</title><rect x="675" y="292" width="4" height="15" fill="rgb(248,27,15)"/><text x="678.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.38%)</title><rect x="675" y="308" width="4" height="15" fill="rgb(232,137,54)"/><text x="678.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:97) (1 samples, 0.38%)</title><rect x="675" y="324" width="4" height="15" fill="rgb(244,10,6)"/><text x="678.00" y="334.50"></text></g><g><title>array_add (number.c:330) (2 samples, 0.75%)</title><rect x="675" y="260" width="9" height="15" fill="rgb(240,199,13)"/><text x="678.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.38%)</title><rect x="679" y="276" width="5" height="15" fill="rgb(248,76,50)"/><text x="682.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.38%)</title><rect x="679" y="292" width="5" height="15" fill="rgb(207,172,49)"/><text x="682.00" y="302.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.38%)</title><rect x="679" y="308" width="5" height="15" fill="rgb(240,179,35)"/><text x="682.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.38%)</title><rect x="679" y="324" width="5" height="15" fill="rgb(244,112,46)"/><text x="682.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.38%)</title><rect x="679" y="340" width="5" height="15" fill="rgb(238,163,2)"/><text x="682.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.38%)</title><rect x="679" y="356" width="5" height="15" fill="rgb(246,128,27)"/><text x="682.00" y="366.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.38%)</title><rect x="679" y="372" width="5" height="15" fill="rgb(235,99,29)"/><text x="682.00" y="382.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:110) (1 samples, 0.38%)</title><rect x="679" y="388" width="5" height="15" fill="rgb(215,9,41)"/><text x="682.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.38%)</title><rect x="684" y="260" width="4" height="15" fill="rgb(250,220,1)"/><text x="687.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.38%)</title><rect x="684" y="276" width="4" height="15" fill="rgb(214,62,45)"/><text x="687.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.38%)</title><rect x="684" y="292" width="4" height="15" fill="rgb(233,56,28)"/><text x="687.00" y="302.50"></text></g><g><title>array_subtract (number.c:342) (1 samples, 0.38%)</title><rect x="688" y="260" width="5" height="15" fill="rgb(232,49,5)"/><text x="691.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.38%)</title><rect x="688" y="276" width="5" height="15" fill="rgb(233,207,49)"/><text x="691.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.38%)</title><rect x="688" y="292" width="5" height="15" fill="rgb(209,98,17)"/><text x="691.00" y="302.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:370) (1 samples, 0.38%)</title><rect x="688" y="308" width="5" height="15" fill="rgb(253,200,17)"/><text x="691.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.38%)</title><rect x="693" y="260" width="4" height="15" fill="rgb(221,73,5)"/><text x="696.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.38%)</title><rect x="693" y="276" width="4" height="15" fill="rgb(223,131,40)"/><text x="696.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.38%)</title><rect x="693" y="292" width="4" height="15" fill="rgb(209,176,10)"/><text x="696.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1332) (1 samples, 0.38%)</title><rect x="693" y="308" width="4" height="15" fill="rgb(218,67,16)"/><text x="696.00" y="318.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1102) (43 samples, 16.17%)</title><rect x="511" y="164" width="191" height="15" fill="rgb(233,34,27)"/><text x="514.00" y="174.50">_get_median_predict (skl..</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:828) (30 samples, 11.28%)</title><rect x="568" y="180" width="134" height="15" fill="rgb(248,193,29)"/><text x="571.00" y="190.50">stable_cumsum (s..</text></g><g><title>isclose (&lt;__array_function__ internals&gt;:6) (25 samples, 9.40%)</title><rect x="591" y="196" width="111" height="15" fill="rgb(224,211,52)"/><text x="594.00" y="206.50">isclose (&lt;__a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (25 samples, 9.40%)</title><rect x="591" y="212" width="111" height="15" fill="rgb(230,205,17)"/><text x="594.00" y="222.50">array_impleme..</text></g><g><title>isclose (numpy/core/numeric.py:2272) (16 samples, 6.02%)</title><rect x="631" y="228" width="71" height="15" fill="rgb(209,28,4)"/><text x="634.00" y="238.50">isclose ..</text></g><g><title>within_tol (numpy/core/numeric.py:2258) (11 samples, 4.14%)</title><rect x="653" y="244" width="49" height="15" fill="rgb(213,228,39)"/><text x="656.00" y="254.50">with..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.38%)</title><rect x="697" y="260" width="5" height="15" fill="rgb(214,110,10)"/><text x="700.00" y="270.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.38%)</title><rect x="697" y="276" width="5" height="15" fill="rgb(243,145,45)"/><text x="700.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c:174) (1 samples, 0.38%)</title><rect x="697" y="292" width="5" height="15" fill="rgb(219,49,42)"/><text x="700.00" y="302.50"></text></g><g><title>array_multiply (number.c:354) (1 samples, 0.38%)</title><rect x="706" y="180" width="4" height="15" fill="rgb(246,29,9)"/><text x="709.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.38%)</title><rect x="706" y="196" width="4" height="15" fill="rgb(237,88,22)"/><text x="709.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.38%)</title><rect x="706" y="212" width="4" height="15" fill="rgb(207,205,27)"/><text x="709.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1119) (1 samples, 0.38%)</title><rect x="706" y="228" width="4" height="15" fill="rgb(251,123,49)"/><text x="709.00" y="238.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1103) (3 samples, 1.13%)</title><rect x="702" y="164" width="13" height="15" fill="rgb(224,224,15)"/><text x="705.00" y="174.50"></text></g><g><title>array_richcompare (arrayobject.c:1509) (1 samples, 0.38%)</title><rect x="710" y="180" width="5" height="15" fill="rgb(232,152,18)"/><text x="713.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.38%)</title><rect x="710" y="196" width="5" height="15" fill="rgb(234,217,13)"/><text x="713.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.38%)</title><rect x="710" y="212" width="5" height="15" fill="rgb(220,131,47)"/><text x="713.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.38%)</title><rect x="710" y="228" width="5" height="15" fill="rgb(227,46,23)"/><text x="713.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.38%)</title><rect x="710" y="244" width="5" height="15" fill="rgb(239,95,51)"/><text x="713.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.38%)</title><rect x="710" y="260" width="5" height="15" fill="rgb(243,155,33)"/><text x="713.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1561) (1 samples, 0.38%)</title><rect x="710" y="276" width="5" height="15" fill="rgb(221,92,46)"/><text x="713.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.38%)</title><rect x="715" y="180" width="4" height="15" fill="rgb(223,117,36)"/><text x="718.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 1.13%)</title><rect x="719" y="180" width="14" height="15" fill="rgb(214,150,46)"/><text x="722.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.75%)</title><rect x="724" y="196" width="9" height="15" fill="rgb(225,75,24)"/><text x="727.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.38%)</title><rect x="728" y="212" width="5" height="15" fill="rgb(205,116,23)"/><text x="731.00" y="222.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1106) (5 samples, 1.88%)</title><rect x="715" y="164" width="22" height="15" fill="rgb(245,43,43)"/><text x="718.00" y="174.50">_..</text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.38%)</title><rect x="733" y="180" width="4" height="15" fill="rgb(231,77,8)"/><text x="736.00" y="190.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (1 samples, 0.38%)</title><rect x="733" y="196" width="4" height="15" fill="rgb(226,149,29)"/><text x="736.00" y="206.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="733" y="212" width="4" height="15" fill="rgb(218,86,50)"/><text x="736.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.38%)</title><rect x="737" y="180" width="4" height="15" fill="rgb(209,175,2)"/><text x="740.00" y="190.50"></text></g><g><title>array_arange (multiarraymodule.c:2763) (1 samples, 0.38%)</title><rect x="741" y="180" width="5" height="15" fill="rgb(234,151,6)"/><text x="744.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3451) (1 samples, 0.38%)</title><rect x="741" y="196" width="5" height="15" fill="rgb(209,169,13)"/><text x="744.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.38%)</title><rect x="741" y="212" width="5" height="15" fill="rgb(245,130,29)"/><text x="744.00" y="222.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.38%)</title><rect x="741" y="228" width="5" height="15" fill="rgb(253,140,49)"/><text x="744.00" y="238.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1109) (3 samples, 1.13%)</title><rect x="737" y="164" width="13" height="15" fill="rgb(235,79,26)"/><text x="740.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.38%)</title><rect x="746" y="180" width="4" height="15" fill="rgb(235,210,21)"/><text x="749.00" y="190.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (1 samples, 0.38%)</title><rect x="746" y="196" width="4" height="15" fill="rgb(207,94,21)"/><text x="749.00" y="206.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (1 samples, 0.38%)</title><rect x="746" y="212" width="4" height="15" fill="rgb(247,171,37)"/><text x="749.00" y="222.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (1 samples, 0.38%)</title><rect x="746" y="228" width="4" height="15" fill="rgb(249,55,23)"/><text x="749.00" y="238.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2525) (1 samples, 0.38%)</title><rect x="746" y="244" width="4" height="15" fill="rgb(252,217,33)"/><text x="749.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:54) (153 samples, 57.52%)</title><rect x="76" y="52" width="679" height="15" fill="rgb(222,133,52)"/><text x="79.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:53) (153 samples, 57.52%)</title><rect x="76" y="68" width="679" height="15" fill="rgb(246,222,45)"/><text x="79.00" y="78.50">profile_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:37) (153 samples, 57.52%)</title><rect x="76" y="84" width="679" height="15" fill="rgb(231,78,20)"/><text x="79.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:37)</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:31) (153 samples, 57.52%)</title><rect x="76" y="100" width="679" height="15" fill="rgb(254,31,47)"/><text x="79.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (153 samples, 57.52%)</title><rect x="76" y="116" width="679" height="15" fill="rgb(226,55,19)"/><text x="79.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (153 samples, 57.52%)</title><rect x="76" y="132" width="679" height="15" fill="rgb(226,133,4)"/><text x="79.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1131) (138 samples, 51.88%)</title><rect x="143" y="148" width="612" height="15" fill="rgb(231,141,26)"/><text x="146.00" y="158.50">predict (sklearn/ensemble/_weight_boosting.py:1131)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.38%)</title><rect x="750" y="164" width="5" height="15" fill="rgb(223,187,0)"/><text x="753.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.38%)</title><rect x="750" y="180" width="5" height="15" fill="rgb(237,24,37)"/><text x="753.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.38%)</title><rect x="750" y="196" width="5" height="15" fill="rgb(216,59,33)"/><text x="753.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (1 samples, 0.38%)</title><rect x="755" y="436" width="4" height="15" fill="rgb(237,43,5)"/><text x="758.00" y="446.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:316) (1 samples, 0.38%)</title><rect x="755" y="452" width="4" height="15" fill="rgb(253,44,1)"/><text x="758.00" y="462.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:59) (2 samples, 0.75%)</title><rect x="755" y="388" width="9" height="15" fill="rgb(227,11,3)"/><text x="758.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="755" y="404" width="9" height="15" fill="rgb(213,213,23)"/><text x="758.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="755" y="420" width="9" height="15" fill="rgb(208,191,39)"/><text x="758.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="759" y="436" width="5" height="15" fill="rgb(214,202,38)"/><text x="762.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.38%)</title><rect x="759" y="452" width="5" height="15" fill="rgb(254,129,47)"/><text x="762.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:807) (1 samples, 0.38%)</title><rect x="759" y="468" width="5" height="15" fill="rgb(218,54,9)"/><text x="762.00" y="478.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:313) (1 samples, 0.38%)</title><rect x="759" y="484" width="5" height="15" fill="rgb(238,90,32)"/><text x="762.00" y="494.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.38%)</title><rect x="759" y="500" width="5" height="15" fill="rgb(219,165,44)"/><text x="762.00" y="510.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.38%)</title><rect x="764" y="388" width="4" height="15" fill="rgb(215,205,27)"/><text x="767.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="764" y="404" width="4" height="15" fill="rgb(235,148,37)"/><text x="767.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="764" y="420" width="4" height="15" fill="rgb(247,39,31)"/><text x="767.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="764" y="436" width="4" height="15" fill="rgb(250,46,36)"/><text x="767.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="764" y="452" width="4" height="15" fill="rgb(218,111,9)"/><text x="767.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="764" y="468" width="4" height="15" fill="rgb(243,197,18)"/><text x="767.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.38%)</title><rect x="764" y="484" width="4" height="15" fill="rgb(237,122,11)"/><text x="767.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.38%)</title><rect x="764" y="500" width="4" height="15" fill="rgb(225,66,36)"/><text x="767.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.38%)</title><rect x="764" y="516" width="4" height="15" fill="rgb(233,80,35)"/><text x="767.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.38%)</title><rect x="764" y="532" width="4" height="15" fill="rgb(232,81,54)"/><text x="767.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.38%)</title><rect x="764" y="548" width="4" height="15" fill="rgb(245,22,53)"/><text x="767.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.38%)</title><rect x="764" y="564" width="4" height="15" fill="rgb(231,60,23)"/><text x="767.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.38%)</title><rect x="764" y="580" width="4" height="15" fill="rgb(224,211,19)"/><text x="767.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.38%)</title><rect x="764" y="596" width="4" height="15" fill="rgb(211,50,5)"/><text x="767.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.38%)</title><rect x="764" y="612" width="4" height="15" fill="rgb(251,172,16)"/><text x="767.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.38%)</title><rect x="764" y="628" width="4" height="15" fill="rgb(208,220,34)"/><text x="767.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.38%)</title><rect x="764" y="644" width="4" height="15" fill="rgb(234,187,10)"/><text x="767.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py:1122) (1 samples, 0.38%)</title><rect x="764" y="660" width="4" height="15" fill="rgb(243,104,7)"/><text x="767.00" y="670.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.38%)</title><rect x="764" y="676" width="4" height="15" fill="rgb(246,9,48)"/><text x="767.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.38%)</title><rect x="764" y="692" width="4" height="15" fill="rgb(214,127,38)"/><text x="767.00" y="702.50"></text></g><g><title>visit_If (jinja2/compiler.py:1160) (1 samples, 0.38%)</title><rect x="764" y="708" width="4" height="15" fill="rgb(239,225,34)"/><text x="767.00" y="718.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.38%)</title><rect x="764" y="724" width="4" height="15" fill="rgb(226,60,49)"/><text x="767.00" y="734.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.38%)</title><rect x="764" y="740" width="4" height="15" fill="rgb(249,36,1)"/><text x="767.00" y="750.50"></text></g><g><title>visit_For (jinja2/compiler.py:1040) (1 samples, 0.38%)</title><rect x="764" y="756" width="4" height="15" fill="rgb(252,131,51)"/><text x="767.00" y="766.50"></text></g><g><title>analyze_node (jinja2/idtracking.py:41) (1 samples, 0.38%)</title><rect x="764" y="772" width="4" height="15" fill="rgb(220,106,34)"/><text x="767.00" y="782.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.38%)</title><rect x="764" y="788" width="4" height="15" fill="rgb(235,106,29)"/><text x="767.00" y="798.50"></text></g><g><title>visit_For (jinja2/idtracking.py:190) (1 samples, 0.38%)</title><rect x="764" y="804" width="4" height="15" fill="rgb(225,25,24)"/><text x="767.00" y="814.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.38%)</title><rect x="764" y="820" width="4" height="15" fill="rgb(221,226,5)"/><text x="767.00" y="830.50"></text></g><g><title>visit_If (jinja2/idtracking.py:235) (1 samples, 0.38%)</title><rect x="764" y="836" width="4" height="15" fill="rgb(232,24,1)"/><text x="767.00" y="846.50"></text></g><g><title>inner_visit (jinja2/idtracking.py:227) (1 samples, 0.38%)</title><rect x="764" y="852" width="4" height="15" fill="rgb(240,206,4)"/><text x="767.00" y="862.50"></text></g><g><title>copy (jinja2/idtracking.py:73) (1 samples, 0.38%)</title><rect x="764" y="868" width="4" height="15" fill="rgb(241,144,8)"/><text x="767.00" y="878.50"></text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:36) (4 samples, 1.50%)</title><rect x="755" y="84" width="18" height="15" fill="rgb(233,222,53)"/><text x="758.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (4 samples, 1.50%)</title><rect x="755" y="100" width="18" height="15" fill="rgb(240,229,7)"/><text x="758.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (4 samples, 1.50%)</title><rect x="755" y="116" width="18" height="15" fill="rgb(251,56,53)"/><text x="758.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (4 samples, 1.50%)</title><rect x="755" y="132" width="18" height="15" fill="rgb(238,218,10)"/><text x="758.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (4 samples, 1.50%)</title><rect x="755" y="148" width="18" height="15" fill="rgb(219,32,6)"/><text x="758.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (4 samples, 1.50%)</title><rect x="755" y="164" width="18" height="15" fill="rgb(213,43,21)"/><text x="758.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (4 samples, 1.50%)</title><rect x="755" y="180" width="18" height="15" fill="rgb(206,118,34)"/><text x="758.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (4 samples, 1.50%)</title><rect x="755" y="196" width="18" height="15" fill="rgb(253,135,21)"/><text x="758.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.50%)</title><rect x="755" y="212" width="18" height="15" fill="rgb(206,220,28)"/><text x="758.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.50%)</title><rect x="755" y="228" width="18" height="15" fill="rgb(215,70,43)"/><text x="758.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.50%)</title><rect x="755" y="244" width="18" height="15" fill="rgb(206,60,30)"/><text x="758.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.50%)</title><rect x="755" y="260" width="18" height="15" fill="rgb(210,122,35)"/><text x="758.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.50%)</title><rect x="755" y="276" width="18" height="15" fill="rgb(232,57,43)"/><text x="758.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (4 samples, 1.50%)</title><rect x="755" y="292" width="18" height="15" fill="rgb(230,49,32)"/><text x="758.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.50%)</title><rect x="755" y="308" width="18" height="15" fill="rgb(236,13,21)"/><text x="758.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.50%)</title><rect x="755" y="324" width="18" height="15" fill="rgb(219,142,6)"/><text x="758.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.50%)</title><rect x="755" y="340" width="18" height="15" fill="rgb(236,105,14)"/><text x="758.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.50%)</title><rect x="755" y="356" width="18" height="15" fill="rgb(228,227,23)"/><text x="758.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.50%)</title><rect x="755" y="372" width="18" height="15" fill="rgb(230,87,45)"/><text x="758.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.38%)</title><rect x="768" y="388" width="5" height="15" fill="rgb(227,4,25)"/><text x="771.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.38%)</title><rect x="768" y="404" width="5" height="15" fill="rgb(220,139,10)"/><text x="771.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.38%)</title><rect x="768" y="420" width="5" height="15" fill="rgb(238,111,1)"/><text x="771.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.38%)</title><rect x="768" y="436" width="5" height="15" fill="rgb(227,180,49)"/><text x="771.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.38%)</title><rect x="768" y="452" width="5" height="15" fill="rgb(213,166,1)"/><text x="771.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:25) (1 samples, 0.38%)</title><rect x="768" y="468" width="5" height="15" fill="rgb(239,84,6)"/><text x="771.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.38%)</title><rect x="768" y="484" width="5" height="15" fill="rgb(211,163,1)"/><text x="771.00" y="494.50"></text></g><g><title>process_documentation (mlprodict/onnxrt/doc/doc_helper.py:187) (1 samples, 0.38%)</title><rect x="768" y="500" width="5" height="15" fill="rgb(249,192,22)"/><text x="771.00" y="510.50"></text></g><g><title>dedent (textwrap.py:461) (1 samples, 0.38%)</title><rect x="768" y="516" width="5" height="15" fill="rgb(254,8,44)"/><text x="771.00" y="526.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.38%)</title><rect x="768" y="532" width="5" height="15" fill="rgb(217,57,38)"/><text x="771.00" y="542.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.38%)</title><rect x="768" y="548" width="5" height="15" fill="rgb(226,1,47)"/><text x="771.00" y="558.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.38%)</title><rect x="768" y="564" width="5" height="15" fill="rgb(206,38,26)"/><text x="771.00" y="574.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.38%)</title><rect x="768" y="580" width="5" height="15" fill="rgb(240,94,36)"/><text x="771.00" y="590.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (7 samples, 2.63%)</title><rect x="786" y="180" width="31" height="15" fill="rgb(230,138,19)"/><text x="789.00" y="190.50">ru..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.38%)</title><rect x="812" y="196" width="5" height="15" fill="rgb(238,195,8)"/><text x="815.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:30) (1 samples, 0.38%)</title><rect x="821" y="212" width="5" height="15" fill="rgb(224,146,42)"/><text x="824.00" y="222.50"></text></g><g><title>PyArray_ToList (convert.c:120) (1 samples, 0.38%)</title><rect x="821" y="228" width="5" height="15" fill="rgb(235,116,41)"/><text x="824.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:102) (1 samples, 0.38%)</title><rect x="821" y="244" width="5" height="15" fill="rgb(205,156,27)"/><text x="824.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c:83) (1 samples, 0.38%)</title><rect x="821" y="260" width="5" height="15" fill="rgb(237,116,10)"/><text x="824.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:32) (1 samples, 0.38%)</title><rect x="826" y="212" width="4" height="15" fill="rgb(254,38,32)"/><text x="829.00" y="222.50"></text></g><g><title>prepare_index (mapping.c:491) (1 samples, 0.38%)</title><rect x="830" y="244" width="5" height="15" fill="rgb(232,155,36)"/><text x="833.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.38%)</title><rect x="830" y="260" width="5" height="15" fill="rgb(244,163,20)"/><text x="833.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.38%)</title><rect x="830" y="276" width="5" height="15" fill="rgb(237,17,6)"/><text x="833.00" y="286.50"></text></g><g><title>0x7fe29e2bbe7a (libc-2.29.so) (1 samples, 0.38%)</title><rect x="830" y="292" width="5" height="15" fill="rgb(225,68,50)"/><text x="833.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 0.75%)</title><rect x="830" y="228" width="9" height="15" fill="rgb(210,172,24)"/><text x="833.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (1 samples, 0.38%)</title><rect x="835" y="244" width="4" height="15" fill="rgb(242,184,42)"/><text x="838.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.38%)</title><rect x="835" y="260" width="4" height="15" fill="rgb(206,213,24)"/><text x="838.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1664) (1 samples, 0.38%)</title><rect x="835" y="276" width="4" height="15" fill="rgb(236,14,16)"/><text x="838.00" y="286.50"></text></g><g><title>0x7fe29d4c8a40 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="835" y="292" width="4" height="15" fill="rgb(224,213,32)"/><text x="838.00" y="302.50"></text></g><g><title>arraymapiter_dealloc (mapping.c:3303) (1 samples, 0.38%)</title><rect x="839" y="244" width="4" height="15" fill="rgb(213,78,27)"/><text x="842.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (4 samples, 1.50%)</title><rect x="830" y="212" width="18" height="15" fill="rgb(224,112,46)"/><text x="833.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1711) (2 samples, 0.75%)</title><rect x="839" y="228" width="9" height="15" fill="rgb(247,16,0)"/><text x="842.00" y="238.50"></text></g><g><title>arraymapiter_dealloc (mapping.c:3313) (1 samples, 0.38%)</title><rect x="843" y="244" width="5" height="15" fill="rgb(232,65,2)"/><text x="846.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:673) (1 samples, 0.38%)</title><rect x="843" y="260" width="5" height="15" fill="rgb(237,223,14)"/><text x="846.00" y="270.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:261) (1 samples, 0.38%)</title><rect x="848" y="324" width="4" height="15" fill="rgb(229,62,28)"/><text x="851.00" y="334.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.38%)</title><rect x="848" y="340" width="4" height="15" fill="rgb(207,177,15)"/><text x="851.00" y="350.50"></text></g><g><title>0x7fe29e383e72 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="848" y="356" width="4" height="15" fill="rgb(205,15,14)"/><text x="851.00" y="366.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5531) (1 samples, 0.38%)</title><rect x="852" y="340" width="5" height="15" fill="rgb(219,166,33)"/><text x="855.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.38%)</title><rect x="852" y="356" width="5" height="15" fill="rgb(239,105,3)"/><text x="855.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.38%)</title><rect x="852" y="372" width="5" height="15" fill="rgb(228,137,11)"/><text x="855.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:39) (3 samples, 1.13%)</title><rect x="848" y="212" width="13" height="15" fill="rgb(240,99,32)"/><text x="851.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (3 samples, 1.13%)</title><rect x="848" y="228" width="13" height="15" fill="rgb(207,173,2)"/><text x="851.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.13%)</title><rect x="848" y="244" width="13" height="15" fill="rgb(228,169,48)"/><text x="851.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (3 samples, 1.13%)</title><rect x="848" y="260" width="13" height="15" fill="rgb(234,164,52)"/><text x="851.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 1.13%)</title><rect x="848" y="276" width="13" height="15" fill="rgb(226,147,36)"/><text x="851.00" y="286.50"></text></g><g><title>array_cumsum (methods.c:2239) (3 samples, 1.13%)</title><rect x="848" y="292" width="13" height="15" fill="rgb(209,86,52)"/><text x="851.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (3 samples, 1.13%)</title><rect x="848" y="308" width="13" height="15" fill="rgb(209,79,21)"/><text x="851.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (2 samples, 0.75%)</title><rect x="852" y="324" width="9" height="15" fill="rgb(211,118,0)"/><text x="855.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (1 samples, 0.38%)</title><rect x="857" y="340" width="4" height="15" fill="rgb(239,176,26)"/><text x="860.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (1 samples, 0.38%)</title><rect x="857" y="356" width="4" height="15" fill="rgb(235,195,30)"/><text x="860.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3829) (1 samples, 0.38%)</title><rect x="857" y="372" width="4" height="15" fill="rgb(206,70,54)"/><text x="860.00" y="382.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c:184) (1 samples, 0.38%)</title><rect x="857" y="388" width="4" height="15" fill="rgb(248,194,20)"/><text x="860.00" y="398.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1629) (1 samples, 0.38%)</title><rect x="857" y="404" width="4" height="15" fill="rgb(220,180,30)"/><text x="860.00" y="414.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:4) (1 samples, 0.38%)</title><rect x="861" y="228" width="5" height="15" fill="rgb(250,58,36)"/><text x="864.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:21) (2 samples, 0.75%)</title><rect x="861" y="212" width="9" height="15" fill="rgb(235,202,19)"/><text x="864.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (1 samples, 0.38%)</title><rect x="866" y="228" width="4" height="15" fill="rgb(249,62,28)"/><text x="869.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.38%)</title><rect x="866" y="244" width="4" height="15" fill="rgb(241,39,27)"/><text x="869.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (1 samples, 0.38%)</title><rect x="866" y="260" width="4" height="15" fill="rgb(206,218,44)"/><text x="869.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (2 samples, 0.75%)</title><rect x="870" y="244" width="9" height="15" fill="rgb(230,111,0)"/><text x="873.00" y="254.50"></text></g><g><title>_choose_dispatcher (numpy/core/fromnumeric.py:306) (2 samples, 0.75%)</title><rect x="870" y="260" width="9" height="15" fill="rgb(215,208,33)"/><text x="873.00" y="270.50"></text></g><g><title>array_item (mapping.c:1384) (2 samples, 0.75%)</title><rect x="870" y="276" width="9" height="15" fill="rgb(233,29,16)"/><text x="873.00" y="286.50"></text></g><g><title>array_item_asarray (mapping.c:1350) (2 samples, 0.75%)</title><rect x="870" y="292" width="9" height="15" fill="rgb(245,164,41)"/><text x="873.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c:937) (2 samples, 0.75%)</title><rect x="870" y="308" width="9" height="15" fill="rgb(205,83,51)"/><text x="873.00" y="318.50"></text></g><g><title>sprintf (libc-2.29.so) (1 samples, 0.38%)</title><rect x="875" y="324" width="4" height="15" fill="rgb(226,94,50)"/><text x="878.00" y="334.50"></text></g><g><title>multiiter_new_impl (iterators.c:1292) (1 samples, 0.38%)</title><rect x="883" y="340" width="5" height="15" fill="rgb(224,163,10)"/><text x="886.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c:1863) (1 samples, 0.38%)</title><rect x="883" y="356" width="5" height="15" fill="rgb(220,36,49)"/><text x="886.00" y="366.50"></text></g><g><title>PyArray_Choose (item_selection.c:702) (3 samples, 1.13%)</title><rect x="883" y="308" width="14" height="15" fill="rgb(215,31,33)"/><text x="886.00" y="318.50"></text></g><g><title>PyArray_MultiIterFromObjects (iterators.c:1357) (3 samples, 1.13%)</title><rect x="883" y="324" width="14" height="15" fill="rgb(207,191,7)"/><text x="886.00" y="334.50"></text></g><g><title>multiiter_new_impl (iterators.c:1296) (2 samples, 0.75%)</title><rect x="888" y="340" width="9" height="15" fill="rgb(249,136,9)"/><text x="891.00" y="350.50"></text></g><g><title>PyArray_IterNew (iterators.c:183) (2 samples, 0.75%)</title><rect x="888" y="356" width="9" height="15" fill="rgb(249,112,52)"/><text x="891.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.75%)</title><rect x="888" y="372" width="9" height="15" fill="rgb(252,221,36)"/><text x="891.00" y="382.50"></text></g><g><title>0x7fe29e2a6b49 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="892" y="388" width="5" height="15" fill="rgb(237,164,26)"/><text x="895.00" y="398.50"></text></g><g><title>PyArray_Choose (item_selection.c:708) (1 samples, 0.38%)</title><rect x="897" y="308" width="4" height="15" fill="rgb(209,138,4)"/><text x="900.00" y="318.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 2.26%)</title><rect x="879" y="244" width="27" height="15" fill="rgb(240,211,23)"/><text x="882.00" y="254.50">a..</text></g><g><title>choose (numpy/core/fromnumeric.py:432) (6 samples, 2.26%)</title><rect x="879" y="260" width="27" height="15" fill="rgb(236,126,43)"/><text x="882.00" y="270.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (6 samples, 2.26%)</title><rect x="879" y="276" width="27" height="15" fill="rgb(208,47,22)"/><text x="882.00" y="286.50">_..</text></g><g><title>array_choose (methods.c:1224) (5 samples, 1.88%)</title><rect x="883" y="292" width="23" height="15" fill="rgb(245,155,23)"/><text x="886.00" y="302.50">a..</text></g><g><title>PyArray_Choose (item_selection.c:792) (1 samples, 0.38%)</title><rect x="901" y="308" width="5" height="15" fill="rgb(247,160,52)"/><text x="904.00" y="318.50"></text></g><g><title>PyArray_INCREF (refcount.c:151) (1 samples, 0.38%)</title><rect x="901" y="324" width="5" height="15" fill="rgb(241,13,9)"/><text x="904.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:23) (9 samples, 3.38%)</title><rect x="870" y="212" width="40" height="15" fill="rgb(236,142,15)"/><text x="873.00" y="222.50">_ru..</text></g><g><title>choose (&lt;__array_function__ internals&gt;:6) (9 samples, 3.38%)</title><rect x="870" y="228" width="40" height="15" fill="rgb(240,146,42)"/><text x="873.00" y="238.50">cho..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:321) (1 samples, 0.38%)</title><rect x="906" y="244" width="4" height="15" fill="rgb(219,78,40)"/><text x="909.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:24) (1 samples, 0.38%)</title><rect x="910" y="212" width="4" height="15" fill="rgb(242,211,51)"/><text x="913.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (1 samples, 0.38%)</title><rect x="910" y="228" width="4" height="15" fill="rgb(209,188,32)"/><text x="913.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (1 samples, 0.38%)</title><rect x="914" y="212" width="5" height="15" fill="rgb(242,105,2)"/><text x="917.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.38%)</title><rect x="914" y="228" width="5" height="15" fill="rgb(254,8,36)"/><text x="917.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.38%)</title><rect x="914" y="244" width="5" height="15" fill="rgb(226,5,48)"/><text x="917.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.38%)</title><rect x="914" y="260" width="5" height="15" fill="rgb(237,177,31)"/><text x="917.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.38%)</title><rect x="914" y="276" width="5" height="15" fill="rgb(222,34,31)"/><text x="917.00" y="286.50"></text></g><g><title>_array_fill_strides (ctors.c:4085) (1 samples, 0.38%)</title><rect x="914" y="292" width="5" height="15" fill="rgb(240,1,49)"/><text x="917.00" y="302.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:38) (1 samples, 0.38%)</title><rect x="923" y="244" width="5" height="15" fill="rgb(216,102,39)"/><text x="926.00" y="254.50"></text></g><g><title>array_negative (number.c:621) (1 samples, 0.38%)</title><rect x="923" y="260" width="5" height="15" fill="rgb(236,112,41)"/><text x="926.00" y="270.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.38%)</title><rect x="928" y="260" width="4" height="15" fill="rgb(238,7,20)"/><text x="931.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (1 samples, 0.38%)</title><rect x="928" y="276" width="4" height="15" fill="rgb(237,164,45)"/><text x="931.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.38%)</title><rect x="928" y="292" width="4" height="15" fill="rgb(214,125,17)"/><text x="931.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.38%)</title><rect x="928" y="308" width="4" height="15" fill="rgb(210,29,29)"/><text x="931.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.38%)</title><rect x="928" y="324" width="4" height="15" fill="rgb(229,148,44)"/><text x="931.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2590) (1 samples, 0.38%)</title><rect x="928" y="340" width="4" height="15" fill="rgb(230,16,48)"/><text x="931.00" y="350.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:39) (2 samples, 0.75%)</title><rect x="928" y="244" width="9" height="15" fill="rgb(229,133,50)"/><text x="931.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.38%)</title><rect x="932" y="260" width="5" height="15" fill="rgb(216,158,44)"/><text x="935.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2569) (1 samples, 0.38%)</title><rect x="932" y="276" width="5" height="15" fill="rgb(210,100,18)"/><text x="935.00" y="286.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.38%)</title><rect x="932" y="292" width="5" height="15" fill="rgb(213,24,33)"/><text x="935.00" y="302.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:75) (4 samples, 1.50%)</title><rect x="923" y="228" width="18" height="15" fill="rgb(229,130,45)"/><text x="926.00" y="238.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:40) (1 samples, 0.38%)</title><rect x="937" y="244" width="4" height="15" fill="rgb(223,69,16)"/><text x="940.00" y="254.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.38%)</title><rect x="941" y="244" width="5" height="15" fill="rgb(247,55,15)"/><text x="944.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.38%)</title><rect x="941" y="260" width="5" height="15" fill="rgb(245,119,6)"/><text x="944.00" y="270.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:76) (2 samples, 0.75%)</title><rect x="941" y="228" width="9" height="15" fill="rgb(212,194,5)"/><text x="944.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.38%)</title><rect x="946" y="244" width="4" height="15" fill="rgb(226,222,50)"/><text x="949.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.38%)</title><rect x="946" y="260" width="4" height="15" fill="rgb(228,87,21)"/><text x="949.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.38%)</title><rect x="946" y="276" width="4" height="15" fill="rgb(252,68,23)"/><text x="949.00" y="286.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3614) (1 samples, 0.38%)</title><rect x="946" y="292" width="4" height="15" fill="rgb(224,150,27)"/><text x="949.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (30 samples, 11.28%)</title><rect x="821" y="196" width="133" height="15" fill="rgb(235,102,50)"/><text x="824.00" y="206.50">run (mlprodict/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py:137) (8 samples, 3.01%)</title><rect x="919" y="212" width="35" height="15" fill="rgb(208,70,21)"/><text x="922.00" y="222.50">_r..</text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.38%)</title><rect x="950" y="228" width="4" height="15" fill="rgb(226,1,32)"/><text x="953.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.38%)</title><rect x="950" y="244" width="4" height="15" fill="rgb(219,217,47)"/><text x="953.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.38%)</title><rect x="950" y="260" width="4" height="15" fill="rgb(224,157,29)"/><text x="953.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:65) (1 samples, 0.38%)</title><rect x="954" y="228" width="5" height="15" fill="rgb(249,128,4)"/><text x="957.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (2 samples, 0.75%)</title><rect x="954" y="196" width="9" height="15" fill="rgb(219,172,9)"/><text x="957.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (2 samples, 0.75%)</title><rect x="954" y="212" width="9" height="15" fill="rgb(254,15,41)"/><text x="957.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:66) (1 samples, 0.38%)</title><rect x="959" y="228" width="4" height="15" fill="rgb(226,77,7)"/><text x="962.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:38) (1 samples, 0.38%)</title><rect x="959" y="244" width="4" height="15" fill="rgb(243,205,32)"/><text x="962.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.38%)</title><rect x="959" y="260" width="4" height="15" fill="rgb(213,77,2)"/><text x="962.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.38%)</title><rect x="959" y="276" width="4" height="15" fill="rgb(220,130,29)"/><text x="962.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.38%)</title><rect x="959" y="292" width="4" height="15" fill="rgb(240,217,38)"/><text x="962.00" y="302.50"></text></g><g><title>0x7fe25ed3e54f (?) (1 samples, 0.38%)</title><rect x="968" y="244" width="4" height="15" fill="rgb(242,156,33)"/><text x="971.00" y="254.50"></text></g><g><title>0x7fe25ed4465e (?) (1 samples, 0.38%)</title><rect x="968" y="260" width="4" height="15" fill="rgb(213,122,45)"/><text x="971.00" y="270.50"></text></g><g><title>0x7fe25ed4450f (?) (1 samples, 0.38%)</title><rect x="968" y="276" width="4" height="15" fill="rgb(236,148,0)"/><text x="971.00" y="286.50"></text></g><g><title>0x7fe25ed4ad6c (?) (1 samples, 0.38%)</title><rect x="968" y="292" width="4" height="15" fill="rgb(214,18,19)"/><text x="971.00" y="302.50"></text></g><g><title>0x7fe2682abab9 (?) (1 samples, 0.38%)</title><rect x="968" y="308" width="4" height="15" fill="rgb(236,189,8)"/><text x="971.00" y="318.50"></text></g><g><title>0x7fe2682aceab (?) (1 samples, 0.38%)</title><rect x="968" y="324" width="4" height="15" fill="rgb(229,201,46)"/><text x="971.00" y="334.50"></text></g><g><title>0x7fe2682acea9 (libgomp.so.1.0.0) (6 samples, 2.26%)</title><rect x="972" y="484" width="27" height="15" fill="rgb(229,90,3)"/><text x="975.00" y="494.50">0..</text></g><g><title>0x7fe2682aceab (libgomp.so.1.0.0) (7 samples, 2.63%)</title><rect x="999" y="484" width="31" height="15" fill="rgb(207,51,5)"/><text x="1002.00" y="494.50">0x..</text></g><g><title>0x7fe2682abab9 (libgomp.so.1.0.0) (23 samples, 8.65%)</title><rect x="972" y="468" width="102" height="15" fill="rgb(211,116,20)"/><text x="975.00" y="478.50">0x7fe2682aba..</text></g><g><title>0x7fe2682acead (libgomp.so.1.0.0) (10 samples, 3.76%)</title><rect x="1030" y="484" width="44" height="15" fill="rgb(233,168,13)"/><text x="1033.00" y="494.50">0x7f..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (26 samples, 9.77%)</title><rect x="963" y="196" width="116" height="15" fill="rgb(216,87,29)"/><text x="966.00" y="206.50">run (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (26 samples, 9.77%)</title><rect x="963" y="212" width="116" height="15" fill="rgb(233,38,13)"/><text x="966.00" y="222.50">run (mlprodict..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (26 samples, 9.77%)</title><rect x="963" y="228" width="116" height="15" fill="rgb(242,37,8)"/><text x="966.00" y="238.50">_run (mlprodic..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (24 samples, 9.02%)</title><rect x="972" y="244" width="107" height="15" fill="rgb(222,26,15)"/><text x="975.00" y="254.50">pybind11::cpp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (24 samples, 9.02%)</title><rect x="972" y="260" width="107" height="15" fill="rgb(208,136,54)"/><text x="975.00" y="270.50">void pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (24 samples, 9.02%)</title><rect x="972" y="276" width="107" height="15" fill="rgb(228,10,20)"/><text x="975.00" y="286.50">void pybind11..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (24 samples, 9.02%)</title><rect x="972" y="292" width="107" height="15" fill="rgb(248,208,9)"/><text x="975.00" y="302.50">pybind11::det..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (24 samples, 9.02%)</title><rect x="972" y="308" width="107" height="15" fill="rgb(219,191,23)"/><text x="975.00" y="318.50">pybind11::det..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (24 samples, 9.02%)</title><rect x="972" y="324" width="107" height="15" fill="rgb(217,7,51)"/><text x="975.00" y="334.50">pybind11::cpp..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (24 samples, 9.02%)</title><rect x="972" y="340" width="107" height="15" fill="rgb(210,162,42)"/><text x="975.00" y="350.50">pybind11::arr..</text></g><g><title>pybind11::array::~array (numpy.h:538) (24 samples, 9.02%)</title><rect x="972" y="356" width="107" height="15" fill="rgb(254,125,11)"/><text x="975.00" y="366.50">pybind11::arr..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (24 samples, 9.02%)</title><rect x="972" y="372" width="107" height="15" fill="rgb(254,100,36)"/><text x="975.00" y="382.50">pybind11::buf..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (24 samples, 9.02%)</title><rect x="972" y="388" width="107" height="15" fill="rgb(250,173,25)"/><text x="975.00" y="398.50">pybind11::obj..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (24 samples, 9.02%)</title><rect x="972" y="404" width="107" height="15" fill="rgb(252,150,41)"/><text x="975.00" y="414.50">pybind11::han..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (24 samples, 9.02%)</title><rect x="972" y="420" width="107" height="15" fill="rgb(207,225,25)"/><text x="975.00" y="430.50">RuntimeTreeEn..</text></g><g><title>pybind11::array::size (numpy.h:619) (24 samples, 9.02%)</title><rect x="972" y="436" width="107" height="15" fill="rgb(209,169,32)"/><text x="975.00" y="446.50">pybind11::arr..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (24 samples, 9.02%)</title><rect x="972" y="452" width="107" height="15" fill="rgb(217,129,37)"/><text x="975.00" y="462.50">std::accumula..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.38%)</title><rect x="1074" y="468" width="5" height="15" fill="rgb(218,157,40)"/><text x="1077.00" y="478.50"></text></g><g><title>0x7fe2682aadaa (libgomp.so.1.0.0) (1 samples, 0.38%)</title><rect x="1074" y="484" width="5" height="15" fill="rgb(248,198,7)"/><text x="1077.00" y="494.50"></text></g><g><title>0x7fe2682accfd (libgomp.so.1.0.0) (1 samples, 0.38%)</title><rect x="1074" y="500" width="5" height="15" fill="rgb(213,201,8)"/><text x="1077.00" y="510.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.38%)</title><rect x="1079" y="212" width="4" height="15" fill="rgb(207,82,17)"/><text x="1082.00" y="222.50"></text></g><g><title>array_descr_get (getset.c:207) (1 samples, 0.38%)</title><rect x="1079" y="228" width="4" height="15" fill="rgb(251,156,17)"/><text x="1082.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (1 samples, 0.38%)</title><rect x="1083" y="228" width="4" height="15" fill="rgb(238,201,2)"/><text x="1086.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.38%)</title><rect x="1087" y="260" width="5" height="15" fill="rgb(230,99,38)"/><text x="1090.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1961) (1 samples, 0.38%)</title><rect x="1087" y="276" width="5" height="15" fill="rgb(248,199,46)"/><text x="1090.00" y="286.50"></text></g><g><title>0x7fe29d4c6f00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="1092" y="276" width="4" height="15" fill="rgb(231,0,11)"/><text x="1095.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (64 samples, 24.06%)</title><rect x="817" y="180" width="284" height="15" fill="rgb(233,209,4)"/><text x="820.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_n..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (5 samples, 1.88%)</title><rect x="1079" y="196" width="22" height="15" fill="rgb(211,88,0)"/><text x="1082.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (4 samples, 1.50%)</title><rect x="1083" y="212" width="18" height="15" fill="rgb(242,29,52)"/><text x="1086.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (3 samples, 1.13%)</title><rect x="1087" y="228" width="14" height="15" fill="rgb(219,103,37)"/><text x="1090.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.13%)</title><rect x="1087" y="244" width="14" height="15" fill="rgb(217,151,49)"/><text x="1090.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.75%)</title><rect x="1092" y="260" width="9" height="15" fill="rgb(235,58,54)"/><text x="1095.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.38%)</title><rect x="1096" y="276" width="5" height="15" fill="rgb(252,151,42)"/><text x="1099.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.38%)</title><rect x="1096" y="292" width="5" height="15" fill="rgb(213,135,31)"/><text x="1099.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.38%)</title><rect x="1101" y="180" width="4" height="15" fill="rgb(250,45,30)"/><text x="1104.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.38%)</title><rect x="1105" y="180" width="5" height="15" fill="rgb(228,111,7)"/><text x="1108.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (4 samples, 1.50%)</title><rect x="1110" y="180" width="17" height="15" fill="rgb(226,224,26)"/><text x="1113.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (80 samples, 30.08%)</title><rect x="777" y="164" width="355" height="15" fill="rgb(254,146,28)"/><text x="780.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.38%)</title><rect x="1127" y="180" width="5" height="15" fill="rgb(239,224,20)"/><text x="1130.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:61) (86 samples, 32.33%)</title><rect x="755" y="52" width="381" height="15" fill="rgb(210,116,52)"/><text x="758.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_e..</text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:60) (86 samples, 32.33%)</title><rect x="755" y="68" width="381" height="15" fill="rgb(253,63,36)"/><text x="758.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:37) (82 samples, 30.83%)</title><rect x="773" y="84" width="363" height="15" fill="rgb(231,226,22)"/><text x="776.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:31) (82 samples, 30.83%)</title><rect x="773" y="100" width="363" height="15" fill="rgb(239,144,13)"/><text x="776.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (82 samples, 30.83%)</title><rect x="773" y="116" width="363" height="15" fill="rgb(227,74,53)"/><text x="776.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (82 samples, 30.83%)</title><rect x="773" y="132" width="363" height="15" fill="rgb(253,167,21)"/><text x="776.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (81 samples, 30.45%)</title><rect x="777" y="148" width="359" height="15" fill="rgb(249,212,37)"/><text x="780.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.38%)</title><rect x="1132" y="164" width="4" height="15" fill="rgb(246,58,30)"/><text x="1135.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.38%)</title><rect x="1132" y="180" width="4" height="15" fill="rgb(225,188,50)"/><text x="1135.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.38%)</title><rect x="1132" y="196" width="4" height="15" fill="rgb(208,99,38)"/><text x="1135.00" y="206.50"></text></g><g><title>0x7fe25e2e3ff9 (?) (1 samples, 0.38%)</title><rect x="1136" y="212" width="5" height="15" fill="rgb(224,224,25)"/><text x="1139.00" y="222.50"></text></g><g><title>0x7fe25e2deef6 (?) (1 samples, 0.38%)</title><rect x="1136" y="228" width="5" height="15" fill="rgb(217,200,6)"/><text x="1139.00" y="238.50"></text></g><g><title>0x7fe25e2d3d49 (?) (1 samples, 0.38%)</title><rect x="1136" y="244" width="5" height="15" fill="rgb(214,73,28)"/><text x="1139.00" y="254.50"></text></g><g><title>0x7fe25e2e1c1a (?) (1 samples, 0.38%)</title><rect x="1136" y="260" width="5" height="15" fill="rgb(225,33,9)"/><text x="1139.00" y="270.50"></text></g><g><title>0x7fe25e706e0e (?) (1 samples, 0.38%)</title><rect x="1136" y="276" width="5" height="15" fill="rgb(252,155,26)"/><text x="1139.00" y="286.50"></text></g><g><title>0x7fe25e749f6e (?) (1 samples, 0.38%)</title><rect x="1136" y="292" width="5" height="15" fill="rgb(245,64,7)"/><text x="1139.00" y="302.50"></text></g><g><title>0x7fe25e6fdd3d (?) (1 samples, 0.38%)</title><rect x="1136" y="308" width="5" height="15" fill="rgb(221,97,54)"/><text x="1139.00" y="318.50"></text></g><g><title>0x7fe25e6fd860 (?) (1 samples, 0.38%)</title><rect x="1136" y="324" width="5" height="15" fill="rgb(246,222,43)"/><text x="1139.00" y="334.50"></text></g><g><title>0x7fe25e6fd717 (?) (1 samples, 0.38%)</title><rect x="1136" y="340" width="5" height="15" fill="rgb(254,57,46)"/><text x="1139.00" y="350.50"></text></g><g><title>0x7fe25e6fd43a (?) (1 samples, 0.38%)</title><rect x="1136" y="356" width="5" height="15" fill="rgb(227,84,24)"/><text x="1139.00" y="366.50"></text></g><g><title>0x7fe25e6fd1c1 (?) (1 samples, 0.38%)</title><rect x="1136" y="372" width="5" height="15" fill="rgb(213,63,17)"/><text x="1139.00" y="382.50"></text></g><g><title>0x7fe25e6fc09a (?) (1 samples, 0.38%)</title><rect x="1136" y="388" width="5" height="15" fill="rgb(233,152,31)"/><text x="1139.00" y="398.50"></text></g><g><title>0x7fe29e2a5d07 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1136" y="404" width="5" height="15" fill="rgb(207,194,2)"/><text x="1139.00" y="414.50"></text></g><g><title>onnxruntime::ArgMin&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1145" y="340" width="5" height="15" fill="rgb(236,58,4)"/><text x="1148.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1145" y="356" width="5" height="15" fill="rgb(210,223,30)"/><text x="1148.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1145" y="372" width="5" height="15" fill="rgb(240,142,17)"/><text x="1148.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1145" y="388" width="5" height="15" fill="rgb(249,156,30)"/><text x="1148.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1145" y="404" width="5" height="15" fill="rgb(224,80,2)"/><text x="1148.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1145" y="420" width="5" height="15" fill="rgb(231,224,5)"/><text x="1148.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1145" y="436" width="5" height="15" fill="rgb(253,95,14)"/><text x="1148.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1145" y="452" width="5" height="15" fill="rgb(253,216,26)"/><text x="1148.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1145" y="468" width="5" height="15" fill="rgb(221,161,20)"/><text x="1148.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1145" y="484" width="5" height="15" fill="rgb(222,191,21)"/><text x="1148.00" y="494.50"></text></g><g><title>onnxruntime::Concat::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1150" y="340" width="4" height="15" fill="rgb(207,86,11)"/><text x="1153.00" y="350.50"></text></g><g><title>onnxruntime::ConcatBase::PrepareForCompute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1150" y="356" width="4" height="15" fill="rgb(223,198,47)"/><text x="1153.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1150" y="372" width="4" height="15" fill="rgb(236,94,54)"/><text x="1153.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1150" y="388" width="4" height="15" fill="rgb(250,227,35)"/><text x="1153.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1150" y="404" width="4" height="15" fill="rgb(214,118,52)"/><text x="1153.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1150" y="420" width="4" height="15" fill="rgb(225,150,19)"/><text x="1153.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1150" y="436" width="4" height="15" fill="rgb(208,149,43)"/><text x="1153.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1150" y="452" width="4" height="15" fill="rgb(210,73,47)"/><text x="1153.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1150" y="468" width="4" height="15" fill="rgb(206,111,22)"/><text x="1153.00" y="478.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.38%)</title><rect x="1150" y="484" width="4" height="15" fill="rgb(219,67,26)"/><text x="1153.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1150" y="500" width="4" height="15" fill="rgb(240,125,0)"/><text x="1153.00" y="510.50"></text></g><g><title>0x7fe29e2a7700 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1150" y="516" width="4" height="15" fill="rgb(218,29,43)"/><text x="1153.00" y="526.50"></text></g><g><title>0x7fe29e2a4aa0 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1150" y="532" width="4" height="15" fill="rgb(249,17,26)"/><text x="1153.00" y="542.50"></text></g><g><title>(anonymous namespace)::SumSlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.75%)</title><rect x="1158" y="356" width="9" height="15" fill="rgb(225,146,17)"/><text x="1161.00" y="366.50"></text></g><g><title>0x7fe29e2a5bc0 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1163" y="372" width="4" height="15" fill="rgb(213,54,23)"/><text x="1166.00" y="382.50"></text></g><g><title>onnxruntime::CumSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.50%)</title><rect x="1154" y="340" width="18" height="15" fill="rgb(207,97,4)"/><text x="1157.00" y="350.50"></text></g><g><title>onnxruntime::Tensor::Data&lt;int&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1167" y="356" width="5" height="15" fill="rgb(229,170,45)"/><text x="1170.00" y="366.50"></text></g><g><title>onnxruntime::Less&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.75%)</title><rect x="1172" y="340" width="9" height="15" fill="rgb(221,175,27)"/><text x="1175.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.75%)</title><rect x="1172" y="356" width="9" height="15" fill="rgb(243,63,29)"/><text x="1175.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1176" y="372" width="5" height="15" fill="rgb(253,30,45)"/><text x="1179.00" y="382.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1181" y="340" width="4" height="15" fill="rgb(236,189,54)"/><text x="1184.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1181" y="356" width="4" height="15" fill="rgb(239,42,2)"/><text x="1184.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1181" y="372" width="4" height="15" fill="rgb(238,74,24)"/><text x="1184.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1181" y="388" width="4" height="15" fill="rgb(226,22,19)"/><text x="1184.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1181" y="404" width="4" height="15" fill="rgb(206,88,42)"/><text x="1184.00" y="414.50"></text></g><g><title>onnxruntime::DataTypeImpl::GetType&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1181" y="420" width="4" height="15" fill="rgb(209,113,43)"/><text x="1184.00" y="430.50"></text></g><g><title>all (266 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(220,130,48)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:68) (12 samples, 4.51%)</title><rect x="1136" y="52" width="54" height="15" fill="rgb(211,104,44)"/><text x="1139.00" y="62.50">&lt;modu..</text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:67) (12 samples, 4.51%)</title><rect x="1136" y="68" width="54" height="15" fill="rgb(213,151,41)"/><text x="1139.00" y="78.50">profi..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:37) (12 samples, 4.51%)</title><rect x="1136" y="84" width="54" height="15" fill="rgb(227,152,10)"/><text x="1139.00" y="94.50">setup..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_50_12_float_.py:31) (12 samples, 4.51%)</title><rect x="1136" y="100" width="54" height="15" fill="rgb(241,137,20)"/><text x="1139.00" y="110.50">profi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (12 samples, 4.51%)</title><rect x="1136" y="116" width="54" height="15" fill="rgb(240,226,3)"/><text x="1139.00" y="126.50">time_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (12 samples, 4.51%)</title><rect x="1136" y="132" width="54" height="15" fill="rgb(223,17,14)"/><text x="1139.00" y="142.50">&lt;lamb..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (12 samples, 4.51%)</title><rect x="1136" y="148" width="54" height="15" fill="rgb(248,48,25)"/><text x="1139.00" y="158.50">run (..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (12 samples, 4.51%)</title><rect x="1136" y="164" width="54" height="15" fill="rgb(248,120,6)"/><text x="1139.00" y="174.50">_run_..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (12 samples, 4.51%)</title><rect x="1136" y="180" width="54" height="15" fill="rgb(221,48,52)"/><text x="1139.00" y="190.50">run (..</text></g><g><title>run (onnxruntime/capi/session.py:136) (12 samples, 4.51%)</title><rect x="1136" y="196" width="54" height="15" fill="rgb(248,127,19)"/><text x="1139.00" y="206.50">run (..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 4.14%)</title><rect x="1141" y="212" width="49" height="15" fill="rgb(211,129,45)"/><text x="1144.00" y="222.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 4.14%)</title><rect x="1141" y="228" width="49" height="15" fill="rgb(251,90,35)"/><text x="1144.00" y="238.50">void..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 4.14%)</title><rect x="1141" y="244" width="49" height="15" fill="rgb(219,18,40)"/><text x="1144.00" y="254.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.76%)</title><rect x="1145" y="260" width="45" height="15" fill="rgb(224,36,26)"/><text x="1148.00" y="270.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.76%)</title><rect x="1145" y="276" width="45" height="15" fill="rgb(223,153,27)"/><text x="1148.00" y="286.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.76%)</title><rect x="1145" y="292" width="45" height="15" fill="rgb(254,37,38)"/><text x="1148.00" y="302.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.76%)</title><rect x="1145" y="308" width="45" height="15" fill="rgb(207,194,38)"/><text x="1148.00" y="318.50">onnx..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.76%)</title><rect x="1145" y="324" width="45" height="15" fill="rgb(206,8,27)"/><text x="1148.00" y="334.50">onnx..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1185" y="340" width="5" height="15" fill="rgb(220,0,33)"/><text x="1188.00" y="350.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1185" y="356" width="5" height="15" fill="rgb(216,99,15)"/><text x="1188.00" y="366.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1185" y="372" width="5" height="15" fill="rgb(229,103,52)"/><text x="1188.00" y="382.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1185" y="388" width="5" height="15" fill="rgb(243,86,19)"/><text x="1188.00" y="398.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.38%)</title><rect x="1185" y="404" width="5" height="15" fill="rgb(215,219,21)"/><text x="1188.00" y="414.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (1 samples, 0.38%)</title><rect x="1185" y="420" width="5" height="15" fill="rgb(216,155,32)"/><text x="1188.00" y="430.50"></text></g></g></svg>